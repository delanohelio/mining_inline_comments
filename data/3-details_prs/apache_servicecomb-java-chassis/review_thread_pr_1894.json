{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2OTkzMDQ3", "number": 1894, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMToyNToyMlrOESnaXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMzo0ODoxMVrOETgiOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTU1NTQ5OnYy", "diffSide": "RIGHT", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMToyNToyMlrOG35PPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwOToyNjo0OVrOG4EZWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI2MjY1Mg==", "bodyText": "Maybe this code can be better refactored.\n\nall strategies are SPI\nany implementation have a name\nchoose the target strategy by configured name and default to 'FixedWindow'\n\nBy doing this, the strategy enum and case statements can be removed.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461262652", "createdAt": "2020-07-28T01:25:22Z", "author": {"login": "liubao68"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -211,6 +212,8 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n     AbstractQpsStrategy strategy;\n+    AbstractQpsStrategy customStrategy = SPIServiceUtils", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4856844705321c95180e9f8f2bff361a82ee7d85"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI5Mzc3NA==", "bodyText": "new TokenBucketStrategy(globalConfigKey, limit, bucket);\nnew FixedWindowStrategy(globalConfigKey, limit);\nhas different parameters.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461293774", "createdAt": "2020-07-28T03:21:22Z", "author": {"login": "GuoYL123"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -211,6 +212,8 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n     AbstractQpsStrategy strategy;\n+    AbstractQpsStrategy customStrategy = SPIServiceUtils", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI2MjY1Mg=="}, "originalCommit": {"oid": "4856844705321c95180e9f8f2bff361a82ee7d85"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMwMzIwMw==", "bodyText": "Hidden parameters in implementation and I think will work. You can think of users will custom strategies like this, how will they do it?", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461303203", "createdAt": "2020-07-28T03:58:52Z", "author": {"login": "liubao68"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -211,6 +212,8 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n     AbstractQpsStrategy strategy;\n+    AbstractQpsStrategy customStrategy = SPIServiceUtils", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI2MjY1Mg=="}, "originalCommit": {"oid": "4856844705321c95180e9f8f2bff361a82ee7d85"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTQ0NTQ2Nw==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461445467", "createdAt": "2020-07-28T09:26:49Z", "author": {"login": "GuoYL123"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -211,6 +212,8 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n     AbstractQpsStrategy strategy;\n+    AbstractQpsStrategy customStrategy = SPIServiceUtils", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI2MjY1Mg=="}, "originalCommit": {"oid": "4856844705321c95180e9f8f2bff361a82ee7d85"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTQ2MDIyOnYy", "diffSide": "RIGHT", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo1NDozMVrOG4LJyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMjowOTo0MlrOG4l_Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NjE3MQ==", "bodyText": "strategyKey can have default value 'FixedWindow', wrong used defined value can throw exception. So here do not need new a default strategy.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461556171", "createdAt": "2020-07-28T12:54:31Z", "author": {"login": "liubao68"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -210,21 +209,17 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy(globalConfigKey, limit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3d2ec6eb473e376325dd08879c03f173d2668d0"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk5NTc5NQ==", "bodyText": "throw a Exception", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461995795", "createdAt": "2020-07-29T02:09:42Z", "author": {"login": "GuoYL123"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -210,21 +209,17 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy(globalConfigKey, limit);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NjE3MQ=="}, "originalCommit": {"oid": "e3d2ec6eb473e376325dd08879c03f173d2668d0"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTQ2MTkyOnYy", "diffSide": "RIGHT", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo1NDo1NFrOG4LKww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzoyNDozNVrOG4r5KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NjQxOQ==", "bodyText": "Add a break is better.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461556419", "createdAt": "2020-07-28T12:54:54Z", "author": {"login": "liubao68"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -210,21 +209,17 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    List<AbstractQpsStrategy> customStrategy = SPIServiceUtils\n+        .getOrLoadSortedService(AbstractQpsStrategy.class);\n+    for (AbstractQpsStrategy abstractQpsStrategy : customStrategy) {\n+      if (abstractQpsStrategy.name().equals(strategyKey)) {\n+        strategy = abstractQpsStrategy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3d2ec6eb473e376325dd08879c03f173d2668d0"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA5MjU4NA==", "bodyText": "done.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462092584", "createdAt": "2020-07-29T07:24:35Z", "author": {"login": "GuoYL123"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -210,21 +209,17 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    List<AbstractQpsStrategy> customStrategy = SPIServiceUtils\n+        .getOrLoadSortedService(AbstractQpsStrategy.class);\n+    for (AbstractQpsStrategy abstractQpsStrategy : customStrategy) {\n+      if (abstractQpsStrategy.name().equals(strategyKey)) {\n+        strategy = abstractQpsStrategy;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NjQxOQ=="}, "originalCommit": {"oid": "e3d2ec6eb473e376325dd08879c03f173d2668d0"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MTQ2Njk0OnYy", "diffSide": "RIGHT", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMjo1NjoxMlrOG4LN1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMjowOToxNVrOG4l-qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NzIwNg==", "bodyText": "strategyKey  better to rename to 'strategy', it is not a key , but a value.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461557206", "createdAt": "2020-07-28T12:56:12Z", "author": {"login": "liubao68"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -210,21 +209,17 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    List<AbstractQpsStrategy> customStrategy = SPIServiceUtils\n+        .getOrLoadSortedService(AbstractQpsStrategy.class);\n+    for (AbstractQpsStrategy abstractQpsStrategy : customStrategy) {\n+      if (abstractQpsStrategy.name().equals(strategyKey)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3d2ec6eb473e376325dd08879c03f173d2668d0"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk5NTY4OQ==", "bodyText": "already has local value 'strategy'", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r461995689", "createdAt": "2020-07-29T02:09:15Z", "author": {"login": "GuoYL123"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -210,21 +209,17 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n       String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    AbstractQpsStrategy strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+    List<AbstractQpsStrategy> customStrategy = SPIServiceUtils\n+        .getOrLoadSortedService(AbstractQpsStrategy.class);\n+    for (AbstractQpsStrategy abstractQpsStrategy : customStrategy) {\n+      if (abstractQpsStrategy.name().equals(strategyKey)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU1NzIwNg=="}, "originalCommit": {"oid": "e3d2ec6eb473e376325dd08879c03f173d2668d0"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDM3MTkxOnYy", "diffSide": "RIGHT", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMjo1OTowMFrOG4mxoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzoyMzo0NVrOG4r3nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAwODczNw==", "bodyText": "strategyName do not have a default value.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462008737", "createdAt": "2020-07-29T02:59:00Z", "author": {"login": "liubao68"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -209,22 +208,21 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n   }\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n-      String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+      String strategyName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47e5bbb6889dff04fea6e139f44d3ae32c44e5e0"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA5MjE5MQ==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462092191", "createdAt": "2020-07-29T07:23:45Z", "author": {"login": "GuoYL123"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -209,22 +208,21 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n   }\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n-      String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n-        break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+      String strategyName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAwODczNw=="}, "originalCommit": {"oid": "47e5bbb6889dff04fea6e139f44d3ae32c44e5e0"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NTA1Mjc1OnYy", "diffSide": "RIGHT", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwODowMDowMVrOG4tErg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwOTowMjo1NVrOG4vZHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExMTkxOA==", "bodyText": "use commons lang3 api", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462111918", "createdAt": "2020-07-29T08:00:01Z", "author": {"login": "liubao68"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -17,20 +17,20 @@\n \n package org.apache.servicecomb.qps;\n \n+import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n \n import org.apache.servicecomb.core.Invocation;\n import org.apache.servicecomb.foundation.common.concurrent.ConcurrentHashMapEx;\n+import org.apache.servicecomb.foundation.common.exceptions.ServiceCombException;\n+import org.apache.servicecomb.foundation.common.utils.SPIServiceUtils;\n import org.apache.servicecomb.qps.strategy.AbstractQpsStrategy;\n-import org.apache.servicecomb.qps.strategy.FixedWindowStrategy;\n-import org.apache.servicecomb.qps.strategy.LeakyBucketStrategy;\n-import org.apache.servicecomb.qps.strategy.StrategyType;\n-import org.apache.servicecomb.qps.strategy.TokenBucketStrategy;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import com.netflix.config.DynamicProperty;\n+import org.springframework.util.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dba245c150823271c45351381ed4018c02a0b9d2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE0OTkxOA==", "bodyText": "done.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462149918", "createdAt": "2020-07-29T09:02:55Z", "author": {"login": "GuoYL123"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -17,20 +17,20 @@\n \n package org.apache.servicecomb.qps;\n \n+import java.util.List;\n import java.util.Map;\n import java.util.Map.Entry;\n \n import org.apache.servicecomb.core.Invocation;\n import org.apache.servicecomb.foundation.common.concurrent.ConcurrentHashMapEx;\n+import org.apache.servicecomb.foundation.common.exceptions.ServiceCombException;\n+import org.apache.servicecomb.foundation.common.utils.SPIServiceUtils;\n import org.apache.servicecomb.qps.strategy.AbstractQpsStrategy;\n-import org.apache.servicecomb.qps.strategy.FixedWindowStrategy;\n-import org.apache.servicecomb.qps.strategy.LeakyBucketStrategy;\n-import org.apache.servicecomb.qps.strategy.StrategyType;\n-import org.apache.servicecomb.qps.strategy.TokenBucketStrategy;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import com.netflix.config.DynamicProperty;\n+import org.springframework.util.StringUtils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjExMTkxOA=="}, "originalCommit": {"oid": "dba245c150823271c45351381ed4018c02a0b9d2"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODkxMzQ3OnYy", "diffSide": "RIGHT", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMzo0NzoxOFrOG5SCBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwODowMzo1NFrOG5YX-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxNzQ0Nw==", "bodyText": "exeception message is better to include strategyName", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462717447", "createdAt": "2020-07-30T03:47:18Z", "author": {"login": "liubao68"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -209,22 +210,25 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n   }\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n-      String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n+      String strategyName) {\n+    if (StringUtils.isEmpty(strategyName)) {\n+      strategyName = \"FixedWindow\";\n+    }\n+    AbstractQpsStrategy strategy = null;\n+    List<IStrategyFactory> strategyFactories = SPIServiceUtils\n+        .getOrLoadSortedService(IStrategyFactory.class);\n+    for (IStrategyFactory strategyFactory : strategyFactories) {\n+      strategy = strategyFactory.getStrategy(strategyName);\n+      if (strategy != null) {\n         break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+      }\n+    }\n+    if (strategy == null) {\n+      throw new ServiceCombException(\"the qps strategy name is not exist , please check.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f62dee43e5517b3dcf80848aa50c44e6d11a7132"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMTM2OA==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462821368", "createdAt": "2020-07-30T08:03:54Z", "author": {"login": "GuoYL123"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/QpsControllerManager.java", "diffHunk": "@@ -209,22 +210,25 @@ public QpsControllerManager setGlobalQpsStrategy(String globalLimitKey, String g\n   }\n \n   private AbstractQpsStrategy chooseStrategy(String globalConfigKey, Long limit, Long bucket,\n-      String strategyKey) {\n-    AbstractQpsStrategy strategy;\n-    switch (StrategyType.parseStrategyType(strategyKey)) {\n-      case FixedWindow:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n-        break;\n-      case LeakyBucket:\n-        strategy = new LeakyBucketStrategy(globalConfigKey, limit);\n-        break;\n-      case TokenBucket:\n-        strategy = new TokenBucketStrategy(globalConfigKey, limit, bucket);\n+      String strategyName) {\n+    if (StringUtils.isEmpty(strategyName)) {\n+      strategyName = \"FixedWindow\";\n+    }\n+    AbstractQpsStrategy strategy = null;\n+    List<IStrategyFactory> strategyFactories = SPIServiceUtils\n+        .getOrLoadSortedService(IStrategyFactory.class);\n+    for (IStrategyFactory strategyFactory : strategyFactories) {\n+      strategy = strategyFactory.getStrategy(strategyName);\n+      if (strategy != null) {\n         break;\n-      case SlidingWindow:\n-      default:\n-        strategy = new FixedWindowStrategy(globalConfigKey, limit);\n+      }\n+    }\n+    if (strategy == null) {\n+      throw new ServiceCombException(\"the qps strategy name is not exist , please check.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxNzQ0Nw=="}, "originalCommit": {"oid": "f62dee43e5517b3dcf80848aa50c44e6d11a7132"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODkxNDQ4OnYy", "diffSide": "RIGHT", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/DefaultStrategyFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMzo0ODoxMVrOG5SCqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwODowNDowM1rOG5YYNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxNzYwOA==", "bodyText": "It's better to use createStrategy", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462717608", "createdAt": "2020-07-30T03:48:11Z", "author": {"login": "liubao68"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/DefaultStrategyFactory.java", "diffHunk": "@@ -14,27 +14,20 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n package org.apache.servicecomb.qps.strategy;\n \n-import org.apache.commons.lang3.StringUtils;\n-\n-public enum StrategyType {\n-  TokenBucket,\n-  LeakyBucket,\n-  FixedWindow,\n-  SlidingWindow;\n-\n-\n-  public static StrategyType parseStrategyType(String type) {\n-    if (StringUtils.isEmpty(type)) {\n-      return StrategyType.FixedWindow;\n-    }\n+public class DefaultStrategyFactory implements IStrategyFactory {\n \n-    try {\n-      return StrategyType.valueOf(type.toUpperCase());\n-    } catch (IllegalArgumentException e) {\n-      return StrategyType.FixedWindow;\n+  public AbstractQpsStrategy getStrategy(String strategyName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f62dee43e5517b3dcf80848aa50c44e6d11a7132"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMTQyOA==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1894#discussion_r462821428", "createdAt": "2020-07-30T08:04:03Z", "author": {"login": "GuoYL123"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/DefaultStrategyFactory.java", "diffHunk": "@@ -14,27 +14,20 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n package org.apache.servicecomb.qps.strategy;\n \n-import org.apache.commons.lang3.StringUtils;\n-\n-public enum StrategyType {\n-  TokenBucket,\n-  LeakyBucket,\n-  FixedWindow,\n-  SlidingWindow;\n-\n-\n-  public static StrategyType parseStrategyType(String type) {\n-    if (StringUtils.isEmpty(type)) {\n-      return StrategyType.FixedWindow;\n-    }\n+public class DefaultStrategyFactory implements IStrategyFactory {\n \n-    try {\n-      return StrategyType.valueOf(type.toUpperCase());\n-    } catch (IllegalArgumentException e) {\n-      return StrategyType.FixedWindow;\n+  public AbstractQpsStrategy getStrategy(String strategyName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcxNzYwOA=="}, "originalCommit": {"oid": "f62dee43e5517b3dcf80848aa50c44e6d11a7132"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1302, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}