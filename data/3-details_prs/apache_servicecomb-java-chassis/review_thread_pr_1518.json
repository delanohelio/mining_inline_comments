{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMjQxNjU0", "number": 1518, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwMDozMTo1MVrODeTxUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwMTozNTo1MFrODeUDhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTA3Nzk0OnYy", "diffSide": "RIGHT", "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/model/ValueType.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwMDozMTo1MVrOFnYAOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjo0MDowMVrOFnbZgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgzMjA1OQ==", "bodyText": "It's better to name constant with UPPER case, and add a value of string with LOWER case.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1518#discussion_r376832059", "createdAt": "2020-02-10T00:31:51Z", "author": {"login": "liubao68"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/model/ValueType.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.config.kie.model;\n+\n+/**\n+ * @Author GuoYl123\n+ * @Date 2020/1/8\n+ **/\n+public enum ValueType {\n+  yml,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20563c1aabe5997b6eb28c115a8c85ef4a690779"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4NzY4MQ==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1518#discussion_r376887681", "createdAt": "2020-02-10T06:40:01Z", "author": {"login": "GuoYL123"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/model/ValueType.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.config.kie.model;\n+\n+/**\n+ * @Author GuoYl123\n+ * @Date 2020/1/8\n+ **/\n+public enum ValueType {\n+  yml,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgzMjA1OQ=="}, "originalCommit": {"oid": "20563c1aabe5997b6eb28c115a8c85ef4a690779"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTA3ODMyOnYy", "diffSide": "RIGHT", "path": "dynamic-config/config-kie/src/test/java/org/apache/servicecomb/config/kie/client/TestKieUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwMDozMjoyMlrOFnYAbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjozOTowMVrOFnbYqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgzMjExMA==", "bodyText": "Delete useless code", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1518#discussion_r376832110", "createdAt": "2020-02-10T00:32:22Z", "author": {"login": "liubao68"}, "path": "dynamic-config/config-kie/src/test/java/org/apache/servicecomb/config/kie/client/TestKieUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.config.kie.client;\n+\n+import mockit.Expectations;\n+import mockit.Mocked;\n+import org.apache.servicecomb.config.kie.model.KVResponse;\n+import org.junit.Test;\n+\n+public class TestKieUtil {\n+\n+  @Test\n+  public void testGetConfigByLabel(final @Mocked KVResponse resp) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20563c1aabe5997b6eb28c115a8c85ef4a690779"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4NzQ2Nw==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1518#discussion_r376887467", "createdAt": "2020-02-10T06:39:01Z", "author": {"login": "GuoYL123"}, "path": "dynamic-config/config-kie/src/test/java/org/apache/servicecomb/config/kie/client/TestKieUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.config.kie.client;\n+\n+import mockit.Expectations;\n+import mockit.Mocked;\n+import org.apache.servicecomb.config.kie.model.KVResponse;\n+import org.junit.Test;\n+\n+public class TestKieUtil {\n+\n+  @Test\n+  public void testGetConfigByLabel(final @Mocked KVResponse resp) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgzMjExMA=="}, "originalCommit": {"oid": "20563c1aabe5997b6eb28c115a8c85ef4a690779"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTA4MDAzOnYy", "diffSide": "RIGHT", "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwMDozNTowM1rOFnYBXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjozODo1NlrOFnbYkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgzMjM1MA==", "bodyText": "This TODO does not tell what is going to be done.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1518#discussion_r376832350", "createdAt": "2020-02-10T00:35:03Z", "author": {"login": "liubao68"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -0,0 +1,170 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.config.kie.client;\n+\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.vertx.core.DeploymentOptions;\n+import io.vertx.core.Vertx;\n+import io.vertx.core.VertxOptions;\n+import io.vertx.core.http.HttpClientOptions;\n+import io.vertx.core.http.HttpClientRequest;\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.http.HttpStatus;\n+import org.apache.servicecomb.config.kie.archaius.sources.KieConfigurationSourceImpl.UpdateHandler;\n+import org.apache.servicecomb.config.kie.model.KVResponse;\n+import org.apache.servicecomb.foundation.common.event.EventManager;\n+import org.apache.servicecomb.foundation.common.net.IpPort;\n+import org.apache.servicecomb.foundation.common.net.NetUtils;\n+import org.apache.servicecomb.foundation.common.utils.JsonUtils;\n+import org.apache.servicecomb.foundation.vertx.AddressResolverConfig;\n+import org.apache.servicecomb.foundation.vertx.VertxUtils;\n+import org.apache.servicecomb.foundation.vertx.client.ClientPoolManager;\n+import org.apache.servicecomb.foundation.vertx.client.ClientVerticle;\n+import org.apache.servicecomb.foundation.vertx.client.http.HttpClientPoolFactory;\n+import org.apache.servicecomb.foundation.vertx.client.http.HttpClientWithContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * @Author GuoYl123\n+ * @Date 2020/1/9\n+ **/\n+public class KieClient {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(KieClient.class);\n+\n+  private ScheduledExecutorService EXECUTOR = Executors.newScheduledThreadPool(1);\n+\n+  private static final long TIME_OUT = 10000;\n+\n+  private static final KieConfig KIE_CONFIG = KieConfig.INSTANCE;\n+\n+  private final int refreshInterval = KIE_CONFIG.getRefreshInterval();\n+\n+  private final int firstRefreshInterval = KIE_CONFIG.getFirstRefreshInterval();\n+\n+  private final String serviceUri = KIE_CONFIG.getServerUri();\n+\n+  private ClientPoolManager<HttpClientWithContext> clientMgr;\n+\n+  public KieClient(UpdateHandler updateHandler) {\n+    KieWatcher.INSTANCE.setUpdateHandler(updateHandler);\n+  }\n+\n+  public void refreshKieConfig() {\n+    try {\n+      deployConfigClient();\n+    } catch (InterruptedException e) {\n+      throw new IllegalStateException(e);\n+    }\n+    EXECUTOR\n+        .scheduleWithFixedDelay(new ConfigRefresh(serviceUri), firstRefreshInterval,\n+            refreshInterval, TimeUnit.SECONDS);\n+  }\n+\n+  private void deployConfigClient() throws InterruptedException {\n+    VertxOptions vertxOptions = new VertxOptions();\n+    //todo :  how to deal with it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20563c1aabe5997b6eb28c115a8c85ef4a690779"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4NzQ0MQ==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1518#discussion_r376887441", "createdAt": "2020-02-10T06:38:56Z", "author": {"login": "GuoYL123"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/client/KieClient.java", "diffHunk": "@@ -0,0 +1,170 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.config.kie.client;\n+\n+import io.netty.handler.codec.http.HttpResponseStatus;\n+import io.vertx.core.DeploymentOptions;\n+import io.vertx.core.Vertx;\n+import io.vertx.core.VertxOptions;\n+import io.vertx.core.http.HttpClientOptions;\n+import io.vertx.core.http.HttpClientRequest;\n+import java.io.IOException;\n+import java.util.Map;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.ScheduledExecutorService;\n+import java.util.concurrent.TimeUnit;\n+import org.apache.http.HttpStatus;\n+import org.apache.servicecomb.config.kie.archaius.sources.KieConfigurationSourceImpl.UpdateHandler;\n+import org.apache.servicecomb.config.kie.model.KVResponse;\n+import org.apache.servicecomb.foundation.common.event.EventManager;\n+import org.apache.servicecomb.foundation.common.net.IpPort;\n+import org.apache.servicecomb.foundation.common.net.NetUtils;\n+import org.apache.servicecomb.foundation.common.utils.JsonUtils;\n+import org.apache.servicecomb.foundation.vertx.AddressResolverConfig;\n+import org.apache.servicecomb.foundation.vertx.VertxUtils;\n+import org.apache.servicecomb.foundation.vertx.client.ClientPoolManager;\n+import org.apache.servicecomb.foundation.vertx.client.ClientVerticle;\n+import org.apache.servicecomb.foundation.vertx.client.http.HttpClientPoolFactory;\n+import org.apache.servicecomb.foundation.vertx.client.http.HttpClientWithContext;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * @Author GuoYl123\n+ * @Date 2020/1/9\n+ **/\n+public class KieClient {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(KieClient.class);\n+\n+  private ScheduledExecutorService EXECUTOR = Executors.newScheduledThreadPool(1);\n+\n+  private static final long TIME_OUT = 10000;\n+\n+  private static final KieConfig KIE_CONFIG = KieConfig.INSTANCE;\n+\n+  private final int refreshInterval = KIE_CONFIG.getRefreshInterval();\n+\n+  private final int firstRefreshInterval = KIE_CONFIG.getFirstRefreshInterval();\n+\n+  private final String serviceUri = KIE_CONFIG.getServerUri();\n+\n+  private ClientPoolManager<HttpClientWithContext> clientMgr;\n+\n+  public KieClient(UpdateHandler updateHandler) {\n+    KieWatcher.INSTANCE.setUpdateHandler(updateHandler);\n+  }\n+\n+  public void refreshKieConfig() {\n+    try {\n+      deployConfigClient();\n+    } catch (InterruptedException e) {\n+      throw new IllegalStateException(e);\n+    }\n+    EXECUTOR\n+        .scheduleWithFixedDelay(new ConfigRefresh(serviceUri), firstRefreshInterval,\n+            refreshInterval, TimeUnit.SECONDS);\n+  }\n+\n+  private void deployConfigClient() throws InterruptedException {\n+    VertxOptions vertxOptions = new VertxOptions();\n+    //todo :  how to deal with it", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgzMjM1MA=="}, "originalCommit": {"oid": "20563c1aabe5997b6eb28c115a8c85ef4a690779"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMTEyNDU0OnYy", "diffSide": "RIGHT", "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/archaius/sources/KieConfigurationSourceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwMTozNTo1MFrOFnYaIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNjozODo1MlrOFnbYfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgzODY5MA==", "bodyText": "Please remove the Author information, as we can look it up from SCM.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1518#discussion_r376838690", "createdAt": "2020-02-10T01:35:50Z", "author": {"login": "WillemJiang"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/archaius/sources/KieConfigurationSourceImpl.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.config.kie.archaius.sources;\n+\n+import static com.netflix.config.WatchedUpdateResult.createIncremental;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.WatchedUpdateListener;\n+import com.netflix.config.WatchedUpdateResult;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import org.apache.commons.configuration.Configuration;\n+import org.apache.servicecomb.config.ConfigMapping;\n+import org.apache.servicecomb.config.kie.client.KieClient;\n+import org.apache.servicecomb.config.kie.client.KieConfig;\n+import org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * @Author GuoYl123", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20563c1aabe5997b6eb28c115a8c85ef4a690779"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg4NzQyMg==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1518#discussion_r376887422", "createdAt": "2020-02-10T06:38:52Z", "author": {"login": "GuoYL123"}, "path": "dynamic-config/config-kie/src/main/java/org/apache/servicecomb/config/kie/archaius/sources/KieConfigurationSourceImpl.java", "diffHunk": "@@ -0,0 +1,135 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.config.kie.archaius.sources;\n+\n+import static com.netflix.config.WatchedUpdateResult.createIncremental;\n+\n+import com.google.common.collect.ImmutableMap;\n+import com.netflix.config.ConcurrentCompositeConfiguration;\n+import com.netflix.config.WatchedUpdateListener;\n+import com.netflix.config.WatchedUpdateResult;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import org.apache.commons.configuration.Configuration;\n+import org.apache.servicecomb.config.ConfigMapping;\n+import org.apache.servicecomb.config.kie.client.KieClient;\n+import org.apache.servicecomb.config.kie.client.KieConfig;\n+import org.apache.servicecomb.config.spi.ConfigCenterConfigurationSource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * @Author GuoYl123", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgzODY5MA=="}, "originalCommit": {"oid": "20563c1aabe5997b6eb28c115a8c85ef4a690779"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1353, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}