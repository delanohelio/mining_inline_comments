{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMTI0NTY2", "number": 1885, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjoxMjozOVrOEPaKZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzowMToyOVrOEPa4eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTkyNzQzOnYy", "diffSide": "RIGHT", "path": "handlers/handler-router/src/main/java/org/apache/servicecomb/router/custom/RouterInvokeFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjoxMjozOVrOGzGm0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjoyMjoyMVrOGzGzTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIzODgwMQ==", "bodyText": "wrong", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1885#discussion_r456238801", "createdAt": "2020-07-17T06:12:39Z", "author": {"login": "liubao68"}, "path": "handlers/handler-router/src/main/java/org/apache/servicecomb/router/custom/RouterInvokeFilter.java", "diffHunk": "@@ -109,7 +109,7 @@ private boolean loadHeaders() {\n   private boolean isHaveHeadersRule() {\n     DynamicStringProperty headerStr = DynamicPropertyFactory.getInstance()\n         .getStringProperty(SERVICECOMB_ROUTER_HEADER, null);\n-    return !StringUtils.isEmpty(headerStr.get());\n+    return !StringUtils.isNotEmpty(headerStr.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff6413195969c618219accad125528090d0550bc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI0MTk5Nw==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1885#discussion_r456241997", "createdAt": "2020-07-17T06:22:21Z", "author": {"login": "GuoYL123"}, "path": "handlers/handler-router/src/main/java/org/apache/servicecomb/router/custom/RouterInvokeFilter.java", "diffHunk": "@@ -109,7 +109,7 @@ private boolean loadHeaders() {\n   private boolean isHaveHeadersRule() {\n     DynamicStringProperty headerStr = DynamicPropertyFactory.getInstance()\n         .getStringProperty(SERVICECOMB_ROUTER_HEADER, null);\n-    return !StringUtils.isEmpty(headerStr.get());\n+    return !StringUtils.isNotEmpty(headerStr.get());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIzODgwMQ=="}, "originalCommit": {"oid": "ff6413195969c618219accad125528090d0550bc"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NjAyNjQyOnYy", "diffSide": "RIGHT", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/FixedWindowStrategy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNjo1NDowMlrOGzHgcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwODoyNzoyM1rOGzKMGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MzU1Mw==", "bodyText": "@Date seems no use, can be removed.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1885#discussion_r456253553", "createdAt": "2020-07-17T06:54:02Z", "author": {"login": "liubao68"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/FixedWindowStrategy.java", "diffHunk": "@@ -14,15 +14,14 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n-package org.apache.servicecomb.qps;\n+package org.apache.servicecomb.qps.strategy;\n \n import java.util.concurrent.atomic.AtomicLong;\n \n-public class QpsController {\n-  private String key;\n-\n-  private Integer qpsLimit;\n+/**\n+ * @Date 2020/7/8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2ec877a026fcbce90edd68e7578d20f14098b36"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI5NzQ5OA==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1885#discussion_r456297498", "createdAt": "2020-07-17T08:27:23Z", "author": {"login": "GuoYL123"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/FixedWindowStrategy.java", "diffHunk": "@@ -14,15 +14,14 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n-package org.apache.servicecomb.qps;\n+package org.apache.servicecomb.qps.strategy;\n \n import java.util.concurrent.atomic.AtomicLong;\n \n-public class QpsController {\n-  private String key;\n-\n-  private Integer qpsLimit;\n+/**\n+ * @Date 2020/7/8", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1MzU1Mw=="}, "originalCommit": {"oid": "d2ec877a026fcbce90edd68e7578d20f14098b36"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NjA0NTM3OnYy", "diffSide": "RIGHT", "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/SlidingWindowStrategy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzowMToyOVrOGzHrrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwODoyNzozNFrOGzKMgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1NjQzMA==", "bodyText": "Seems no used.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1885#discussion_r456256430", "createdAt": "2020-07-17T07:01:29Z", "author": {"login": "liubao68"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/SlidingWindowStrategy.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.qps.strategy;\n+\n+\n+/**\n+ * @Date 2020/7/8\n+ **/\n+public class SlidingWindowStrategy extends AbstractQpsStrategy {\n+\n+  public SlidingWindowStrategy(long qpsLimit, String key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2ec877a026fcbce90edd68e7578d20f14098b36"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI5NzYwMA==", "bodyText": "deleted", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1885#discussion_r456297600", "createdAt": "2020-07-17T08:27:34Z", "author": {"login": "GuoYL123"}, "path": "handlers/handler-flowcontrol-qps/src/main/java/org/apache/servicecomb/qps/strategy/SlidingWindowStrategy.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.servicecomb.qps.strategy;\n+\n+\n+/**\n+ * @Date 2020/7/8\n+ **/\n+public class SlidingWindowStrategy extends AbstractQpsStrategy {\n+\n+  public SlidingWindowStrategy(long qpsLimit, String key) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI1NjQzMA=="}, "originalCommit": {"oid": "d2ec877a026fcbce90edd68e7578d20f14098b36"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1298, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}