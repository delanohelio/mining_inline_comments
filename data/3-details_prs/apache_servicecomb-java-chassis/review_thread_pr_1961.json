{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3ODIyNTM3", "number": 1961, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwMToyMTo1NFrOEkTLCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzoyMzo1NlrOEkZsyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NDk4MzE1OnYy", "diffSide": "RIGHT", "path": "huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwMToyMTo1NFrOHTKIuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwMjozMjoyN1rOHTM1qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg1MTA2NQ==", "bodyText": "It's better to add a log. If this happens , maybe some bug, do not hide it.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1961#discussion_r489851065", "createdAt": "2020-09-17T01:21:54Z", "author": {"login": "liubao68"}, "path": "huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.huaweicloud.dtm;\n+\n+import java.lang.reflect.Method;\n+import java.util.Map;\n+\n+import org.apache.servicecomb.core.Handler;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.core.definition.MicroserviceMeta;\n+import org.apache.servicecomb.swagger.invocation.AsyncResponse;\n+import org.apache.servicecomb.swagger.invocation.InvocationType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class DtmConsumerHandler implements Handler {\n+  private static final Logger LOG = LoggerFactory.getLogger(DtmConsumerHandler.class);\n+\n+  private Method dtmContextExMethod;\n+\n+  @Override\n+  public void init(MicroserviceMeta microserviceMeta, InvocationType invocationType) {\n+    try {\n+      Class<?> clazz = Class.forName(\"com.huawei.middleware.dtm.client.context.DTMContext\");\n+      dtmContextExMethod = clazz.getMethod(\"getContextData\");\n+    } catch (Throwable e) {\n+      // ignore just warn\n+      LOG.warn(\"Failed to init method com.huawei.middleware.dtm.client.context.DTMContext#getContextData\", e);\n+    }\n+  }\n+\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public void handle(Invocation invocation, AsyncResponse asyncResp) throws Exception {\n+    try {\n+      if (dtmContextExMethod != null) {\n+        Object context = dtmContextExMethod.invoke(null);\n+        if (context instanceof Map) {\n+          invocation.getContext().putAll((Map<? extends String, ? extends String>) context);\n+        }\n+      }\n+    } catch (Throwable e) {\n+      // ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70b92f00094a3549ace49aa8efd3635a47ee0300"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg5NTMzOQ==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1961#discussion_r489895339", "createdAt": "2020-09-17T02:32:27Z", "author": {"login": "heyile"}, "path": "huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.huaweicloud.dtm;\n+\n+import java.lang.reflect.Method;\n+import java.util.Map;\n+\n+import org.apache.servicecomb.core.Handler;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.core.definition.MicroserviceMeta;\n+import org.apache.servicecomb.swagger.invocation.AsyncResponse;\n+import org.apache.servicecomb.swagger.invocation.InvocationType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class DtmConsumerHandler implements Handler {\n+  private static final Logger LOG = LoggerFactory.getLogger(DtmConsumerHandler.class);\n+\n+  private Method dtmContextExMethod;\n+\n+  @Override\n+  public void init(MicroserviceMeta microserviceMeta, InvocationType invocationType) {\n+    try {\n+      Class<?> clazz = Class.forName(\"com.huawei.middleware.dtm.client.context.DTMContext\");\n+      dtmContextExMethod = clazz.getMethod(\"getContextData\");\n+    } catch (Throwable e) {\n+      // ignore just warn\n+      LOG.warn(\"Failed to init method com.huawei.middleware.dtm.client.context.DTMContext#getContextData\", e);\n+    }\n+  }\n+\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public void handle(Invocation invocation, AsyncResponse asyncResp) throws Exception {\n+    try {\n+      if (dtmContextExMethod != null) {\n+        Object context = dtmContextExMethod.invoke(null);\n+        if (context instanceof Map) {\n+          invocation.getContext().putAll((Map<? extends String, ? extends String>) context);\n+        }\n+      }\n+    } catch (Throwable e) {\n+      // ignore", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg1MTA2NQ=="}, "originalCommit": {"oid": "70b92f00094a3549ace49aa8efd3635a47ee0300"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NTAwNDM5OnYy", "diffSide": "RIGHT", "path": "huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwMToyNzoyOVrOHTKW3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwMjozMjozM1rOHTM17w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg1NDY4Ng==", "bodyText": "suggestions: class name can be configurable, so that can be easier tested and tollerate to changes.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1961#discussion_r489854686", "createdAt": "2020-09-17T01:27:29Z", "author": {"login": "liubao68"}, "path": "huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.huaweicloud.dtm;\n+\n+import java.lang.reflect.Method;\n+import java.util.Map;\n+\n+import org.apache.servicecomb.core.Handler;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.core.definition.MicroserviceMeta;\n+import org.apache.servicecomb.swagger.invocation.AsyncResponse;\n+import org.apache.servicecomb.swagger.invocation.InvocationType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class DtmConsumerHandler implements Handler {\n+  private static final Logger LOG = LoggerFactory.getLogger(DtmConsumerHandler.class);\n+\n+  private Method dtmContextExMethod;\n+\n+  @Override\n+  public void init(MicroserviceMeta microserviceMeta, InvocationType invocationType) {\n+    try {\n+      Class<?> clazz = Class.forName(\"com.huawei.middleware.dtm.client.context.DTMContext\");\n+      dtmContextExMethod = clazz.getMethod(\"getContextData\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70b92f00094a3549ace49aa8efd3635a47ee0300"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg5NTQwNw==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1961#discussion_r489895407", "createdAt": "2020-09-17T02:32:33Z", "author": {"login": "heyile"}, "path": "huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java", "diffHunk": "@@ -0,0 +1,61 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.huaweicloud.dtm;\n+\n+import java.lang.reflect.Method;\n+import java.util.Map;\n+\n+import org.apache.servicecomb.core.Handler;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.core.definition.MicroserviceMeta;\n+import org.apache.servicecomb.swagger.invocation.AsyncResponse;\n+import org.apache.servicecomb.swagger.invocation.InvocationType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class DtmConsumerHandler implements Handler {\n+  private static final Logger LOG = LoggerFactory.getLogger(DtmConsumerHandler.class);\n+\n+  private Method dtmContextExMethod;\n+\n+  @Override\n+  public void init(MicroserviceMeta microserviceMeta, InvocationType invocationType) {\n+    try {\n+      Class<?> clazz = Class.forName(\"com.huawei.middleware.dtm.client.context.DTMContext\");\n+      dtmContextExMethod = clazz.getMethod(\"getContextData\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTg1NDY4Ng=="}, "originalCommit": {"oid": "70b92f00094a3549ace49aa8efd3635a47ee0300"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjA1MjU5OnYy", "diffSide": "RIGHT", "path": "huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNzoyMzo1NlrOHTU1kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDo0MjozNVrOHTcIpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAyNjM4Nw==", "bodyText": "callback seems useless. Implementation class is compiled and packaged with application, can not be chagned in runtime.", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1961#discussion_r490026387", "createdAt": "2020-09-17T07:23:56Z", "author": {"login": "liubao68"}, "path": "huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.huaweicloud.dtm;\n+\n+import java.lang.reflect.Method;\n+import java.util.Map;\n+\n+import org.apache.servicecomb.core.Handler;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.core.definition.MicroserviceMeta;\n+import org.apache.servicecomb.swagger.invocation.AsyncResponse;\n+import org.apache.servicecomb.swagger.invocation.InvocationType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.DynamicProperty;\n+\n+public class DtmConsumerHandler implements Handler {\n+  private static final Logger LOG = LoggerFactory.getLogger(DtmConsumerHandler.class);\n+\n+  private Method dtmContextExMethod;\n+\n+  @Override\n+  public void init(MicroserviceMeta microserviceMeta, InvocationType invocationType) {\n+    DynamicProperty classNameProperty = DynamicProperty.getInstance(DtmConfig.DTM_CONTEXT_CLASS_NAME_KEY);\n+    donInitMethod(classNameProperty.getString(DtmConfig.DTM_CONTEXT_DEFAULT_CLASS_NAME));\n+    classNameProperty.addCallback(() -> {\n+      donInitMethod(classNameProperty.getString());\n+      LOG.info(\"Dtm context class name update, value = [{}]\", classNameProperty.getString());\n+    });\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64e5ae0ada752fbad5129448c9c73b6d9430a765"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NTk1OA==", "bodyText": "done", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1961#discussion_r490145958", "createdAt": "2020-09-17T10:42:35Z", "author": {"login": "heyile"}, "path": "huawei-cloud/dtm/src/main/java/org/apache/servicecomb/huaweicloud/dtm/DtmConsumerHandler.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.servicecomb.huaweicloud.dtm;\n+\n+import java.lang.reflect.Method;\n+import java.util.Map;\n+\n+import org.apache.servicecomb.core.Handler;\n+import org.apache.servicecomb.core.Invocation;\n+import org.apache.servicecomb.core.definition.MicroserviceMeta;\n+import org.apache.servicecomb.swagger.invocation.AsyncResponse;\n+import org.apache.servicecomb.swagger.invocation.InvocationType;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import com.netflix.config.DynamicProperty;\n+\n+public class DtmConsumerHandler implements Handler {\n+  private static final Logger LOG = LoggerFactory.getLogger(DtmConsumerHandler.class);\n+\n+  private Method dtmContextExMethod;\n+\n+  @Override\n+  public void init(MicroserviceMeta microserviceMeta, InvocationType invocationType) {\n+    DynamicProperty classNameProperty = DynamicProperty.getInstance(DtmConfig.DTM_CONTEXT_CLASS_NAME_KEY);\n+    donInitMethod(classNameProperty.getString(DtmConfig.DTM_CONTEXT_DEFAULT_CLASS_NAME));\n+    classNameProperty.addCallback(() -> {\n+      donInitMethod(classNameProperty.getString());\n+      LOG.info(\"Dtm context class name update, value = [{}]\", classNameProperty.getString());\n+    });\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDAyNjM4Nw=="}, "originalCommit": {"oid": "64e5ae0ada752fbad5129448c9c73b6d9430a765"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1237, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}