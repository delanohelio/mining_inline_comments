{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwOTMyOTAx", "number": 1600, "title": "[SCB-1691] Refactor registry module", "bodyText": "main features:\n\none microservice instance can hold multiple ServiceRegistry instances, which are managed in RegistryUtils, so that one instance can connect to multiple service center clusters\nwhen microservice instance is shutdown, the corresponding instance record in service center is switched to DOWN status and the shutdown precedure is blocked for a while, so that consumer can get enough time to get notified that this instance is stopping. The block period length is determined by the config item servicecomb.boot.turnDown.waitInSeconds", "createdAt": "2020-02-27T16:04:08Z", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1600", "merged": true, "mergeCommit": {"oid": "15cb6a740e5a106e9fc6b577f7b26b365ddbd4db"}, "closed": true, "closedAt": "2020-03-09T16:14:42Z", "author": {"login": "yhs0092"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIc70CgH2gAyMzgwOTMyOTAxOmE3MjBjMDk2Njc4ZDAzODM3ZjU0ZGJjNDdjOWE2ZTU0OTYxOTljOGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc9c6tkAFqTQ2NDAwMDYyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a720c096678d03837f54dbc47c9a6e5496199c8a", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/a720c096678d03837f54dbc47c9a6e5496199c8a", "committedDate": "2020-02-27T15:20:09Z", "message": "[SCB-1691] modify instance status change interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6cdde53e7cbaa2fc2a0103da769e7393f63105e", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/e6cdde53e7cbaa2fc2a0103da769e7393f63105e", "committedDate": "2020-02-27T15:20:09Z", "message": "[SCB-1691] Decouple the ServiceRegistry and other modules\n\n- DiscoveryTree get InstanceCacheManager from RegistryUtils directly\n- SwaggerLoader don't rely on ServiceRegistry directly\n- AppManager does not refer to ServiceRegistry directly\n- ServiceRegistry does not hold AppManager\n- ServiceRegistry does not hold InstanceCacheManager\n- ServiceRegistryFactory doesn't hold the instance of ServiceRegistry\n- SCBEngine doesn't hold ServiceRegistry instance directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d82a30e0047afa2b2be783c045dacaf9653f77b5", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/d82a30e0047afa2b2be783c045dacaf9653f77b5", "committedDate": "2020-02-27T15:20:09Z", "message": "[SCB-1691] add name for ServiceRegistry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ce82b9fb1089324454fd71831216df9869cdd2e", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/7ce82b9fb1089324454fd71831216df9869cdd2e", "committedDate": "2020-02-27T15:20:09Z", "message": "[SCB-1691] ServiceRegistryConfig just carries config value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbba4d5e202e6ca455d8bf270798930817009313", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/cbba4d5e202e6ca455d8bf270798930817009313", "committedDate": "2020-02-27T15:20:10Z", "message": "[SCB-1691] ClientPool can be instantiated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "368a46d62c8a88f45ad7448793c40f20a8b10f3b", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/368a46d62c8a88f45ad7448793c40f20a8b10f3b", "committedDate": "2020-02-27T15:20:10Z", "message": "[SCB-1691] add RestClientUtil for multiple ServiceRegistryClient instance situation\n\nthe legacy RestUtils is preserved for compatibility and marked deprecated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7f76c27c179d2bdc1c691aeb22dba95383d24a1", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/f7f76c27c179d2bdc1c691aeb22dba95383d24a1", "committedDate": "2020-02-27T15:20:10Z", "message": "[SCB-1691] add WebsocketClientPool for multiple ServiceRegistryClient instance situation\n\nthe legacy WebsocketUtils is preserved for compatibility and marked deprecated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84ed0927a843d7e8510230c72c58da912556e4eb", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/84ed0927a843d7e8510230c72c58da912556e4eb", "committedDate": "2020-02-27T15:20:10Z", "message": "[SCB-1691] replace RestUtils and WebsocketUtils in ServiceRegistryClientImpl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "346efd67319bd0c573b2b75ed3c399be5202696c", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/346efd67319bd0c573b2b75ed3c399be5202696c", "committedDate": "2020-02-27T15:20:10Z", "message": "[SCB-1691] add ServiceRegistryCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c699e6ed005e8a547d184a3cb506943a4c50206", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/6c699e6ed005e8a547d184a3cb506943a4c50206", "committedDate": "2020-02-27T15:20:10Z", "message": "[SCB-1691] ServiceRegistry use serviceRegistryCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf601ecee993c2968401d3dd6b39dc7d7bf04de0", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/bf601ecee993c2968401d3dd6b39dc7d7bf04de0", "committedDate": "2020-02-27T15:20:11Z", "message": "[SCB-1691] RegistryUtils manage multiple ServiceRegistry instances"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d51ca598e9409cf0416044b1cbaf6bddb07bf8d9", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/d51ca598e9409cf0416044b1cbaf6bddb07bf8d9", "committedDate": "2020-02-27T15:20:11Z", "message": "[SCB-1691] Each ServiceRegistry uses an isolated EventBus"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "647ce7f953a602f2577b9e8884d06ac007b8d42d", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/647ce7f953a602f2577b9e8884d06ac007b8d42d", "committedDate": "2020-02-27T15:20:11Z", "message": "[SCB-1691] code improve\n\n- print subscriber's exceptions only if exceptionPropagation is enabled\n- remove unnecessary import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88dc090b797c5b6c09d54dd293ea645d0669a585", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/88dc090b797c5b6c09d54dd293ea645d0669a585", "committedDate": "2020-02-27T15:20:11Z", "message": "[SCB-1691] Each registry client use isolated IpPortManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6422b62d1ba9fb2cef0989431910ad707fc9e091", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/6422b62d1ba9fb2cef0989431910ad707fc9e091", "committedDate": "2020-02-27T15:20:11Z", "message": "[SCB-1691] add schema and endpoint into all ServiceRegistry instances"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2a9bd8743fd4c865babe4006fc6626fbedd8d4c", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/c2a9bd8743fd4c865babe4006fc6626fbedd8d4c", "committedDate": "2020-02-27T15:20:12Z", "message": "[SCB-1691] support multiple TLS enabled sc clusters\n\n- RemoteServiceRegistry create ServiceRegistryClient by the constructor in ServiceRegistryConfig\n- AbstractClientPool accept ServiceRegistryConfig in constructor\n- Allow to specify registry client TLS and proxy config by custom tags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85979b97ce8b3ba757945a9fa5f3c4e32ece25f6", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/85979b97ce8b3ba757945a9fa5f3c4e32ece25f6", "committedDate": "2020-02-27T15:20:12Z", "message": "[SCB-1691] turn instance status to DOWN and wait for a period when shutdown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a925f798e67f45b4898558fc989eb83c291a9c7", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/4a925f798e67f45b4898558fc989eb83c291a9c7", "committedDate": "2020-02-28T19:11:57Z", "message": "[SCB-1691] fix CI error"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9fc2aac49ea2585d260df54298cef3cad403353", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/c9fc2aac49ea2585d260df54298cef3cad403353", "committedDate": "2020-02-28T12:14:27Z", "message": "[SCB-1691] fix CI error"}, "afterCommit": {"oid": "4a925f798e67f45b4898558fc989eb83c291a9c7", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/4a925f798e67f45b4898558fc989eb83c291a9c7", "committedDate": "2020-02-28T19:11:57Z", "message": "[SCB-1691] fix CI error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MDA5NTYx", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1600#pullrequestreview-367009561", "createdAt": "2020-03-02T08:14:44Z", "commit": {"oid": "4a925f798e67f45b4898558fc989eb83c291a9c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwODoxNDo0NFrOFwWjcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwODoxNDo0NFrOFwWjcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjI0NTQ4OQ==", "bodyText": "should be private\uff1f", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1600#discussion_r386245489", "createdAt": "2020-03-02T08:14:44Z", "author": {"login": "GuoYL123"}, "path": "service-registry/src/main/java/org/apache/servicecomb/serviceregistry/RegistryUtils.java", "diffHunk": "@@ -20,62 +20,120 @@\n import java.net.InetSocketAddress;\n import java.net.URI;\n import java.net.URISyntaxException;\n+import java.util.ArrayList;\n+import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n+import java.util.Objects;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+import java.util.regex.Matcher;\n \n import org.apache.http.client.utils.URIBuilder;\n import org.apache.servicecomb.config.ConfigUtil;\n import org.apache.servicecomb.config.archaius.sources.MicroserviceConfigLoader;\n+import org.apache.servicecomb.foundation.common.Holder;\n import org.apache.servicecomb.foundation.common.event.EventManager;\n import org.apache.servicecomb.foundation.common.net.IpPort;\n import org.apache.servicecomb.foundation.common.net.NetUtils;\n import org.apache.servicecomb.serviceregistry.api.registry.Microservice;\n import org.apache.servicecomb.serviceregistry.api.registry.MicroserviceInstance;\n+import org.apache.servicecomb.serviceregistry.api.response.FindInstancesResponse;\n import org.apache.servicecomb.serviceregistry.cache.InstanceCacheManager;\n+import org.apache.servicecomb.serviceregistry.cache.InstanceCacheManagerNew;\n import org.apache.servicecomb.serviceregistry.client.ServiceRegistryClient;\n import org.apache.servicecomb.serviceregistry.client.http.MicroserviceInstances;\n import org.apache.servicecomb.serviceregistry.config.ServiceRegistryConfig;\n+import org.apache.servicecomb.serviceregistry.consumer.AppManager;\n import org.apache.servicecomb.serviceregistry.definition.MicroserviceDefinition;\n import org.apache.servicecomb.serviceregistry.registry.ServiceRegistryFactory;\n+import org.apache.servicecomb.serviceregistry.registry.cache.AggregateServiceRegistryCache;\n+import org.apache.servicecomb.serviceregistry.registry.cache.MicroserviceCache;\n+import org.apache.servicecomb.serviceregistry.registry.cache.MicroserviceCache.MicroserviceCacheStatus;\n+import org.apache.servicecomb.serviceregistry.registry.cache.MicroserviceCacheKey;\n+import org.apache.servicecomb.serviceregistry.swagger.SwaggerLoader;\n+import org.apache.servicecomb.serviceregistry.task.MicroserviceInstanceRegisterTask;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+import org.springframework.util.StringUtils;\n \n import com.google.common.base.Charsets;\n+import com.google.common.eventbus.Subscribe;\n import com.google.common.hash.Hashing;\n import com.netflix.config.DynamicPropertyFactory;\n \n public final class RegistryUtils {\n   private static final Logger LOGGER = LoggerFactory.getLogger(RegistryUtils.class);\n \n-  private static ServiceRegistry serviceRegistry;\n+  /**\n+   * The default ServiceRegistry instance\n+   */\n+  private static volatile ServiceRegistry serviceRegistry;\n \n   // value is ip or {interface name}\n   public static final String PUBLISH_ADDRESS = \"servicecomb.service.publishAddress\";\n \n   private static final String PUBLISH_PORT = \"servicecomb.{transport_name}.publishPort\";\n \n+  private static SwaggerLoader swaggerLoader = new SwaggerLoader();\n+\n+  private static AppManager appManager = new AppManager();\n+\n+  private static InstanceCacheManager instanceCacheManager = new InstanceCacheManagerNew(appManager);\n+\n+  private static final Map<String, ServiceRegistryConfig> EXTRA_SERVICE_REGISTRY_CONFIGS = new LinkedHashMap<>();\n+\n+  private static final Map<String, ServiceRegistry> EXTRA_SERVICE_REGISTRIES = new LinkedHashMap<>();\n+\n+  static AggregateServiceRegistryCache aggregateServiceRegistryCache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a925f798e67f45b4898558fc989eb83c291a9c7"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcfe0714968a911d6ffe127b4bf53ae0cbd17271", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/bcfe0714968a911d6ffe127b4bf53ae0cbd17271", "committedDate": "2020-03-06T11:44:00Z", "message": "[SCB-1691] fix according to review opinion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MDAwNjI0", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1600#pullrequestreview-464000624", "createdAt": "2020-08-10T07:16:39Z", "commit": {"oid": "bcfe0714968a911d6ffe127b4bf53ae0cbd17271"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzoxNjozOVrOG-Dn2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNzoxNjozOVrOG-Dn2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcyNDI1MQ==", "bodyText": "\u8fd9\u4e2a\u662f\u4e0d\u517c\u5bb9\u7684\u4fee\u6539\uff1f\n\u4fee\u6539\u4e4b\u540eversionRule\u88ab\u5ffd\u7565\u4e86\uff0c\u4e3a\u4f55\u4e0d\u76f4\u63a5\u53bb\u6389\u8fd9\u4e2a\u53c2\u6570\uff1f\n\u8fd9\u4e2a\u7c7b\u76ee\u524d\u88ab\u4e1a\u52a1\u4f7f\u7528\uff0c\u5347\u7ea7\u4e4b\u540e\u6ca1\u6709\u53d1\u73b0\u8fd9\u4e2a\u63a5\u53e3\u7684\u529f\u80fd\u53d8\u66f4\uff0c\u5bfc\u81f4\u4e86\u4e00\u4e2a\u95ee\u9898\u3002", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1600#discussion_r467724251", "createdAt": "2020-08-10T07:16:39Z", "author": {"login": "Matrix0xCC"}, "path": "service-registry/src/main/java/org/apache/servicecomb/serviceregistry/RegistryUtils.java", "diffHunk": "@@ -214,24 +280,163 @@ private static IpPort genPublishIpPort(String schema, IpPort ipPort) {\n \n   public static List<MicroserviceInstance> findServiceInstance(String appId, String serviceName,\n       String versionRule) {\n-    return serviceRegistry.findServiceInstance(appId, serviceName, versionRule);\n+    MicroserviceCache serviceCache = aggregateServiceRegistryCache.findServiceCache(\n+        MicroserviceCacheKey.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcfe0714968a911d6ffe127b4bf53ae0cbd17271"}, "originalPosition": 158}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4476, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}