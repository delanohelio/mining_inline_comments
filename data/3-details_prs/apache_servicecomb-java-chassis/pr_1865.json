{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNTQ2NDk3", "number": 1865, "title": "[SCB-2031] Fix mapping problem between pojo consumer method and provider swagger operation", "bodyText": "Follow this checklist to help us incorporate your contribution quickly and easily:\n\n Make sure there is a JIRA issue filed for the change (usually before you start working on it).  Trivial changes like typos do not require a JIRA issue.  Your pull request should address just this issue, without pulling in other changes.\n Each commit in the pull request should have a meaningful subject line and body.\n Format the pull request title like [SCB-XXX] Fixes bug in ApproximateQuantiles, where you replace SCB-XXX with the appropriate JIRA issue.\n Write a pull request description that is detailed enough to understand what the pull request does, how, and why.\n Run mvn clean install -Pit to make sure basic checks pass. A more thorough check will be performed on your pull request automatically.\n If this contribution is large, please file an Apache Individual Contributor License Agreement.", "createdAt": "2020-07-02T14:16:16Z", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1865", "merged": true, "mergeCommit": {"oid": "0d1af3fce70a442119fe65766f498428132a9d1e"}, "closed": true, "closedAt": "2020-07-06T13:33:05Z", "author": {"login": "yhs0092"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcw_gGuAH2gAyNDQzNTQ2NDk3OmJmODMxYWIyZTQzNzEyNGU1Zjc5Yzc1YjkwYzM1YzY0NTAwNjQ1ZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyRUYygFqTQ0MzA3ODUzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bf831ab2e437124e5f79c75b90c35c64500645d2", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/bf831ab2e437124e5f79c75b90c35c64500645d2", "committedDate": "2020-07-02T14:13:32Z", "message": "[SCB-2031] fix the problem in mapping pojo consumer method to swagger provider operation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODc0NjQ1", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1865#pullrequestreview-441874645", "createdAt": "2020-07-02T17:01:47Z", "commit": {"oid": "5b206430be2269b223006a7309c64b2da5f6b4c4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzowMTo0OFrOGsWKdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzowMTo0OFrOGsWKdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1MzY1NA==", "bodyText": "Method to be key of HashMap is too expensive\nshould change HashMap to IdentityHashMap", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1865#discussion_r449153654", "createdAt": "2020-07-02T17:01:48Z", "author": {"login": "wujimin"}, "path": "providers/provider-pojo/src/main/java/org/apache/servicecomb/provider/pojo/definition/PojoConsumerMeta.java", "diffHunk": "@@ -33,7 +34,7 @@\n \n   private SchemaMeta schemaMeta;\n \n-  private Map<String, PojoConsumerOperationMeta> operationMetas = new HashMap<>();\n+  private Map<Method, PojoConsumerOperationMeta> operationMetas = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b206430be2269b223006a7309c64b2da5f6b4c4"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODc1NjE3", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1865#pullrequestreview-441875617", "createdAt": "2020-07-02T17:03:15Z", "commit": {"oid": "5b206430be2269b223006a7309c64b2da5f6b4c4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzowMzoxNVrOGsWNKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzowMzoxNVrOGsWNKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1NDM0Ng==", "bodyText": "IdentityHashMap", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1865#discussion_r449154346", "createdAt": "2020-07-02T17:03:15Z", "author": {"login": "wujimin"}, "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/engine/SwaggerConsumer.java", "diffHunk": "@@ -16,14 +16,15 @@\n  */\n package org.apache.servicecomb.swagger.engine;\n \n+import java.lang.reflect.Method;\n import java.util.HashMap;\n import java.util.Map;\n \n public class SwaggerConsumer {\n   private Class<?> consumerIntf;\n \n   // key is consumer method name\n-  private Map<String, SwaggerConsumerOperation> operations = new HashMap<>();\n+  private Map<Method, SwaggerConsumerOperation> operations = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b206430be2269b223006a7309c64b2da5f6b4c4"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxODc3NjMz", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1865#pullrequestreview-441877633", "createdAt": "2020-07-02T17:06:11Z", "commit": {"oid": "5b206430be2269b223006a7309c64b2da5f6b4c4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzowNjoxMVrOGsWTIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzowNjoxMVrOGsWTIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE1NTg3Mw==", "bodyText": "can still keep findOperation(String consumerMethodName), and mark as VisiableForTest\nthis makes test easier", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1865#discussion_r449155873", "createdAt": "2020-07-02T17:06:11Z", "author": {"login": "wujimin"}, "path": "swagger/swagger-invocation/invocation-core/src/main/java/org/apache/servicecomb/swagger/engine/SwaggerConsumer.java", "diffHunk": "@@ -34,14 +35,14 @@ public void setConsumerIntf(Class<?> consumerIntf) {\n   }\n \n   public void addOperation(SwaggerConsumerOperation op) {\n-    operations.put(op.getSchemaOperationId(), op);\n+    operations.put(op.getConsumerMethod(), op);\n   }\n \n-  public SwaggerConsumerOperation findOperation(String consumerMethodName) {\n-    return operations.get(consumerMethodName);\n+  public SwaggerConsumerOperation findOperation(Method consumerMethod) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b206430be2269b223006a7309c64b2da5f6b4c4"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4a0e31ea2c10377b17ddcf8d23b0c5944a3949b", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/f4a0e31ea2c10377b17ddcf8d23b0c5944a3949b", "committedDate": "2020-07-06T09:50:38Z", "message": "[SCB-2031] optimize code as review opinion"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b206430be2269b223006a7309c64b2da5f6b4c4", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/5b206430be2269b223006a7309c64b2da5f6b4c4", "committedDate": "2020-07-02T14:13:32Z", "message": "[SCB-2031] fix side effect on UT"}, "afterCommit": {"oid": "f4a0e31ea2c10377b17ddcf8d23b0c5944a3949b", "author": {"user": {"login": "yhs0092", "name": null}}, "url": "https://github.com/apache/servicecomb-java-chassis/commit/f4a0e31ea2c10377b17ddcf8d23b0c5944a3949b", "committedDate": "2020-07-06T09:50:38Z", "message": "[SCB-2031] optimize code as review opinion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMDc4NTMx", "url": "https://github.com/apache/servicecomb-java-chassis/pull/1865#pullrequestreview-443078531", "createdAt": "2020-07-06T13:32:57Z", "commit": {"oid": "f4a0e31ea2c10377b17ddcf8d23b0c5944a3949b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4451, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}