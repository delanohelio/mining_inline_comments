{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NjA0NDAw", "number": 2693, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNzoyNDozM1rOEBMfLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxNzozNVrOEfkx3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Njg4NjIxOnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNzoyNDozM1rOGc6NNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzo0MToxNVrOGc-ANQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2Njk2Ng==", "bodyText": "Shall we change this is invalid? WDYT?", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r432966966", "createdAt": "2020-05-31T17:24:33Z", "author": {"login": "somindatommy"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Wrong username or password is provided.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea113d899e613b784f4a816afad66badb143d6f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyOTE3Mw==", "bodyText": "Done", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r433029173", "createdAt": "2020-06-01T03:41:15Z", "author": {"login": "DinikaSen"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Wrong username or password is provided.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2Njk2Ng=="}, "originalCommit": {"oid": "5ea113d899e613b784f4a816afad66badb143d6f"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Njg4NzMwOnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNzoyNjoxOVrOGc6NwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwMzo0MToyNFrOGc-ASg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NzEwNQ==", "bodyText": "Shall we end the sentence from instance of AbstractUserStoreManager and begin a new sentence? WDYT?", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r432967105", "createdAt": "2020-05-31T17:26:19Z", "author": {"login": "somindatommy"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Wrong username or password is provided.\");\n+                }\n+                handleOnAuthenticateFailure(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getCode(),\n+                        String.format(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getMessage(),\n+                                \"Authentication failed\"), userName, credential);\n+                throw new UserStoreException(\"Authentication failed. Invalid username or password.\");\n+            }\n+            UserStoreManager userStoreManager = this.getSecondaryUserStoreManager(providedDomainName);\n+            if (!(userStoreManager instanceof AbstractUserStoreManager)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"UserStoreManager is not an instance of AbstractUserStoreManager hence authenticate \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea113d899e613b784f4a816afad66badb143d6f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NzE1OA==", "bodyText": "And shall we do the same in other relevant places?", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r432967158", "createdAt": "2020-05-31T17:27:14Z", "author": {"login": "somindatommy"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Wrong username or password is provided.\");\n+                }\n+                handleOnAuthenticateFailure(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getCode(),\n+                        String.format(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getMessage(),\n+                                \"Authentication failed\"), userName, credential);\n+                throw new UserStoreException(\"Authentication failed. Invalid username or password.\");\n+            }\n+            UserStoreManager userStoreManager = this.getSecondaryUserStoreManager(providedDomainName);\n+            if (!(userStoreManager instanceof AbstractUserStoreManager)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"UserStoreManager is not an instance of AbstractUserStoreManager hence authenticate \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NzEwNQ=="}, "originalCommit": {"oid": "5ea113d899e613b784f4a816afad66badb143d6f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzAyOTE5NA==", "bodyText": "Done", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r433029194", "createdAt": "2020-06-01T03:41:24Z", "author": {"login": "DinikaSen"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Wrong username or password is provided.\");\n+                }\n+                handleOnAuthenticateFailure(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getCode(),\n+                        String.format(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getMessage(),\n+                                \"Authentication failed\"), userName, credential);\n+                throw new UserStoreException(\"Authentication failed. Invalid username or password.\");\n+            }\n+            UserStoreManager userStoreManager = this.getSecondaryUserStoreManager(providedDomainName);\n+            if (!(userStoreManager instanceof AbstractUserStoreManager)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"UserStoreManager is not an instance of AbstractUserStoreManager hence authenticate \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NzEwNQ=="}, "originalCommit": {"oid": "5ea113d899e613b784f4a816afad66badb143d6f"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MjM3MjcwOnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNTo0NToyN1rOHG8rsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNTozNzozNlrOHO3YyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA0NzczMQ==", "bodyText": "Is it possible to extract this logic to a method and reuse?", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r477047731", "createdAt": "2020-08-26T05:45:27Z", "author": {"login": "vihanga-liyanage"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -10180,6 +10214,34 @@ private AuthenticationResult generateUserStoreChainWithID(String preferredUserNa\n             String preferredUserNameValue, Object credential, String profileName, boolean domainProvided,\n             List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(preferredUserNameValue).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Invalid username or password is provided.\");\n+                }\n+                handleOnAuthenticateFailure(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getCode(),\n+                        String.format(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getMessage(),\n+                                \"Authentication failed\"), preferredUserNameValue, credential);\n+                throw new UserStoreException(\"Authentication failed. Invalid username or password.\");\n+            }\n+            UserStoreManager userStoreManager = this.getSecondaryUserStoreManager(providedDomainName);\n+            if (!(userStoreManager instanceof AbstractUserStoreManager)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"UserStoreManager is not an instance of AbstractUserStoreManager. Hence \" +\n+                            \"authenticate the user through all the available user store list.\");\n+                }\n+                return authenticateInternalWithID(preferredUserNameClaim, preferredUserNameValue, credential,\n+                        profileName, domainProvided);\n+            }\n+            IterativeUserStoreManager iterativeUserStoreManager = new IterativeUserStoreManager(\n+                    (AbstractUserStoreManager) userStoreManager);\n+            return iterativeUserStoreManager.\n+                    authenticateWithID(preferredUserNameClaim, preferredUserNameValue, credential, profileName);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0OTU3Ng==", "bodyText": "Addressed in #2765", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r485349576", "createdAt": "2020-09-09T05:37:36Z", "author": {"login": "DinikaSen"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -10180,6 +10214,34 @@ private AuthenticationResult generateUserStoreChainWithID(String preferredUserNa\n             String preferredUserNameValue, Object credential, String profileName, boolean domainProvided,\n             List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(preferredUserNameValue).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Invalid username or password is provided.\");\n+                }\n+                handleOnAuthenticateFailure(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getCode(),\n+                        String.format(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getMessage(),\n+                                \"Authentication failed\"), preferredUserNameValue, credential);\n+                throw new UserStoreException(\"Authentication failed. Invalid username or password.\");\n+            }\n+            UserStoreManager userStoreManager = this.getSecondaryUserStoreManager(providedDomainName);\n+            if (!(userStoreManager instanceof AbstractUserStoreManager)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"UserStoreManager is not an instance of AbstractUserStoreManager. Hence \" +\n+                            \"authenticate the user through all the available user store list.\");\n+                }\n+                return authenticateInternalWithID(preferredUserNameClaim, preferredUserNameValue, credential,\n+                        profileName, domainProvided);\n+            }\n+            IterativeUserStoreManager iterativeUserStoreManager = new IterativeUserStoreManager(\n+                    (AbstractUserStoreManager) userStoreManager);\n+            return iterativeUserStoreManager.\n+                    authenticateWithID(preferredUserNameClaim, preferredUserNameValue, credential, profileName);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA0NzczMQ=="}, "originalCommit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTQzODc2OnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxNzozMVrOHL7ieg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNTozNzo0NVrOHO3Y6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTg2Ng==", "bodyText": "Why don't we use UserCoreUtil.extractDomainFromName(userName) here.", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r482271866", "createdAt": "2020-09-02T18:17:31Z", "author": {"login": "ashensw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0OTYxMQ==", "bodyText": "Addressed in #2765", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r485349611", "createdAt": "2020-09-09T05:37:45Z", "author": {"login": "DinikaSen"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTg2Ng=="}, "originalCommit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNTQzOTAzOnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxNzozNVrOHL7iow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNTozODo0OFrOHO3Z_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTkwNw==", "bodyText": "Why don't we use UserCoreUtil.extractDomainFromName(userName) here.", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r482271907", "createdAt": "2020-09-02T18:17:35Z", "author": {"login": "ashensw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -10180,6 +10214,34 @@ private AuthenticationResult generateUserStoreChainWithID(String preferredUserNa\n             String preferredUserNameValue, Object credential, String profileName, boolean domainProvided,\n             List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(preferredUserNameValue).getDomainName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0OTg4NA==", "bodyText": "Addressed in #2765", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r485349884", "createdAt": "2020-09-09T05:38:48Z", "author": {"login": "DinikaSen"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -10180,6 +10214,34 @@ private AuthenticationResult generateUserStoreChainWithID(String preferredUserNa\n             String preferredUserNameValue, Object credential, String profileName, boolean domainProvided,\n             List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(preferredUserNameValue).getDomainName();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTkwNw=="}, "originalCommit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2122, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}