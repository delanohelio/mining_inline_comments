{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NTYxMzI4", "number": 2722, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMDoxODo0N1rOEVkA0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNTowNDo0MFrOEWFE3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDQ1NTg3OnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridRoleManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMDoxODo0N1rOG8ZI0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNzo0Nzo0NVrOG8nPJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3OTYwMA==", "bodyText": "why can't we do this using prepStmt?", "url": "https://github.com/wso2/carbon-kernel/pull/2722#discussion_r465979600", "createdAt": "2020-08-05T20:18:47Z", "author": {"login": "IsuraD"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridRoleManager.java", "diffHunk": "@@ -632,6 +714,66 @@ private String truncateInternalDomainFromFilter(String filter) {\n         return hybridRoleListOfUsers;\n     }\n \n+    /**\n+     * Get hybrid role list of groups.\n+     *\n+     * @param groupNames group name list.\n+     * @return map of hybrid role list of groups.\n+     * @throws UserStoreException userStoreException.\n+     */\n+    public Map<String, List<String>> getHybridRoleListOfGroups(List<String> groupNames, String domainName)\n+            throws UserStoreException {\n+\n+        Map<String, List<String>> hybridRoleListOfGroups = new HashMap<>();\n+        String sqlStmt = realmConfig.getRealmProperty(HybridJDBCConstants.GET_ROLE_LIST_OF_GROUPS);\n+        StringBuilder groupNameParameter = new StringBuilder();\n+\n+        if (StringUtils.isEmpty(sqlStmt)) {\n+            sqlStmt = HybridJDBCConstants.GET_INTERNAL_ROLE_LIST_OF_GROUPS_SQL;\n+        }\n+        for (int i = 0; i < groupNames.size(); i++) {\n+\n+            groupNames.set(i, groupNames.get(i).replaceAll(\"'\", \"''\"));\n+            groupNameParameter.append(\"'\").append(groupNames.get(i)).append(\"'\");\n+\n+            if (i != groupNames.size() - 1) {\n+                groupNameParameter.append(\",\");\n+            }\n+        }\n+\n+        sqlStmt = sqlStmt.replaceFirst(\"\\\\?\", Matcher.quoteReplacement(groupNameParameter.toString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d302bc96513f99869f7271e0eaa575ff20de2154"}, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjIxMDU5OA==", "bodyText": "prepStmt is not supported for comma-separated strings. So we will have to do it this way for IN (?).", "url": "https://github.com/wso2/carbon-kernel/pull/2722#discussion_r466210598", "createdAt": "2020-08-06T07:47:45Z", "author": {"login": "ashensw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridRoleManager.java", "diffHunk": "@@ -632,6 +714,66 @@ private String truncateInternalDomainFromFilter(String filter) {\n         return hybridRoleListOfUsers;\n     }\n \n+    /**\n+     * Get hybrid role list of groups.\n+     *\n+     * @param groupNames group name list.\n+     * @return map of hybrid role list of groups.\n+     * @throws UserStoreException userStoreException.\n+     */\n+    public Map<String, List<String>> getHybridRoleListOfGroups(List<String> groupNames, String domainName)\n+            throws UserStoreException {\n+\n+        Map<String, List<String>> hybridRoleListOfGroups = new HashMap<>();\n+        String sqlStmt = realmConfig.getRealmProperty(HybridJDBCConstants.GET_ROLE_LIST_OF_GROUPS);\n+        StringBuilder groupNameParameter = new StringBuilder();\n+\n+        if (StringUtils.isEmpty(sqlStmt)) {\n+            sqlStmt = HybridJDBCConstants.GET_INTERNAL_ROLE_LIST_OF_GROUPS_SQL;\n+        }\n+        for (int i = 0; i < groupNames.size(); i++) {\n+\n+            groupNames.set(i, groupNames.get(i).replaceAll(\"'\", \"''\"));\n+            groupNameParameter.append(\"'\").append(groupNames.get(i)).append(\"'\");\n+\n+            if (i != groupNames.size() - 1) {\n+                groupNameParameter.append(\",\");\n+            }\n+        }\n+\n+        sqlStmt = sqlStmt.replaceFirst(\"\\\\?\", Matcher.quoteReplacement(groupNameParameter.toString()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk3OTYwMA=="}, "originalCommit": {"oid": "d302bc96513f99869f7271e0eaa575ff20de2154"}, "originalPosition": 143}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDQ4Mzk4OnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridRoleManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMDoyNzoyNFrOG8ZaiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowNDozNFrOG8p9iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4NDEzNw==", "bodyText": "unnecessary line.", "url": "https://github.com/wso2/carbon-kernel/pull/2722#discussion_r465984137", "createdAt": "2020-08-05T20:27:24Z", "author": {"login": "IsuraD"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridRoleManager.java", "diffHunk": "@@ -632,6 +714,66 @@ private String truncateInternalDomainFromFilter(String filter) {\n         return hybridRoleListOfUsers;\n     }\n \n+    /**\n+     * Get hybrid role list of groups.\n+     *\n+     * @param groupNames group name list.\n+     * @return map of hybrid role list of groups.\n+     * @throws UserStoreException userStoreException.\n+     */\n+    public Map<String, List<String>> getHybridRoleListOfGroups(List<String> groupNames, String domainName)\n+            throws UserStoreException {\n+\n+        Map<String, List<String>> hybridRoleListOfGroups = new HashMap<>();\n+        String sqlStmt = realmConfig.getRealmProperty(HybridJDBCConstants.GET_ROLE_LIST_OF_GROUPS);\n+        StringBuilder groupNameParameter = new StringBuilder();\n+\n+        if (StringUtils.isEmpty(sqlStmt)) {\n+            sqlStmt = HybridJDBCConstants.GET_INTERNAL_ROLE_LIST_OF_GROUPS_SQL;\n+        }\n+        for (int i = 0; i < groupNames.size(); i++) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d302bc96513f99869f7271e0eaa575ff20de2154"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI1NTI0MA==", "bodyText": "Fixed and updated the PR.", "url": "https://github.com/wso2/carbon-kernel/pull/2722#discussion_r466255240", "createdAt": "2020-08-06T09:04:34Z", "author": {"login": "ashensw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridRoleManager.java", "diffHunk": "@@ -632,6 +714,66 @@ private String truncateInternalDomainFromFilter(String filter) {\n         return hybridRoleListOfUsers;\n     }\n \n+    /**\n+     * Get hybrid role list of groups.\n+     *\n+     * @param groupNames group name list.\n+     * @return map of hybrid role list of groups.\n+     * @throws UserStoreException userStoreException.\n+     */\n+    public Map<String, List<String>> getHybridRoleListOfGroups(List<String> groupNames, String domainName)\n+            throws UserStoreException {\n+\n+        Map<String, List<String>> hybridRoleListOfGroups = new HashMap<>();\n+        String sqlStmt = realmConfig.getRealmProperty(HybridJDBCConstants.GET_ROLE_LIST_OF_GROUPS);\n+        StringBuilder groupNameParameter = new StringBuilder();\n+\n+        if (StringUtils.isEmpty(sqlStmt)) {\n+            sqlStmt = HybridJDBCConstants.GET_INTERNAL_ROLE_LIST_OF_GROUPS_SQL;\n+        }\n+        for (int i = 0; i < groupNames.size(); i++) {\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4NDEzNw=="}, "originalCommit": {"oid": "d302bc96513f99869f7271e0eaa575ff20de2154"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDUwOTc4OnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/util/UserCoreUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMDozNTo1MVrOG8Zq-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTowNDozOVrOG8p9sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4ODM0NQ==", "bodyText": "Is this a common requirement to use as a Util? Better use as a private method.", "url": "https://github.com/wso2/carbon-kernel/pull/2722#discussion_r465988345", "createdAt": "2020-08-05T20:35:51Z", "author": {"login": "IsuraD"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/util/UserCoreUtil.java", "diffHunk": "@@ -120,6 +121,21 @@\n         return (String[]) h.toArray(new String[h.size()]);\n     }\n \n+    /**\n+     * Convert a map of lists to a list with unique elements.\n+     *\n+     * @param mapOfLists Map of lists.\n+     * @return list with unique elements.\n+     */\n+    public static Set<String> getList(Map<String, List<String>> mapOfLists) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d302bc96513f99869f7271e0eaa575ff20de2154"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI1NTI4Mg==", "bodyText": "Fixed and updated the PR.", "url": "https://github.com/wso2/carbon-kernel/pull/2722#discussion_r466255282", "createdAt": "2020-08-06T09:04:39Z", "author": {"login": "ashensw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/util/UserCoreUtil.java", "diffHunk": "@@ -120,6 +121,21 @@\n         return (String[]) h.toArray(new String[h.size()]);\n     }\n \n+    /**\n+     * Convert a map of lists to a list with unique elements.\n+     *\n+     * @param mapOfLists Map of lists.\n+     * @return list with unique elements.\n+     */\n+    public static Set<String> getList(Map<String, List<String>> mapOfLists) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4ODM0NQ=="}, "originalCommit": {"oid": "d302bc96513f99869f7271e0eaa575ff20de2154"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDUzNDkxOnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridJDBCConstants.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMDo0MzozOFrOG8Z6Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwNTozODowM1rOG8j_eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk5MjI3MQ==", "bodyText": "Why the table name is UM_HYBRID_GROUP_ROLE? We don't have HYBRID_GROUP... prefer UM_GROUP_ROLE", "url": "https://github.com/wso2/carbon-kernel/pull/2722#discussion_r465992271", "createdAt": "2020-08-05T20:43:38Z", "author": {"login": "IsuraD"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridJDBCConstants.java", "diffHunk": "@@ -107,6 +128,12 @@\n             + \".UM_TENANT_ID=? AND UM_HYBRID_USER_ROLE.UM_DOMAIN_ID=(SELECT UM_DOMAIN_ID FROM UM_DOMAIN WHERE \"\n             + \"UM_TENANT_ID=? AND UM_DOMAIN_NAME=?)\";\n \n+    public static final String GET_INTERNAL_ROLE_LIST_OF_GROUPS_SQL = \"SELECT UM_GROUP_NAME, UM_ROLE_NAME FROM \"\n+            + \"UM_HYBRID_GROUP_ROLE, UM_HYBRID_ROLE WHERE UM_GROUP_NAME IN (?) AND UM_HYBRID_GROUP_ROLE\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d302bc96513f99869f7271e0eaa575ff20de2154"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjE1NzQzNA==", "bodyText": "We do have a table called UM_HYBRID_USER_ROLE to maintain the role and user association. So a similar name was used for GROUP as well to maintain consistency.", "url": "https://github.com/wso2/carbon-kernel/pull/2722#discussion_r466157434", "createdAt": "2020-08-06T05:38:03Z", "author": {"login": "ashensw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridJDBCConstants.java", "diffHunk": "@@ -107,6 +128,12 @@\n             + \".UM_TENANT_ID=? AND UM_HYBRID_USER_ROLE.UM_DOMAIN_ID=(SELECT UM_DOMAIN_ID FROM UM_DOMAIN WHERE \"\n             + \"UM_TENANT_ID=? AND UM_DOMAIN_NAME=?)\";\n \n+    public static final String GET_INTERNAL_ROLE_LIST_OF_GROUPS_SQL = \"SELECT UM_GROUP_NAME, UM_ROLE_NAME FROM \"\n+            + \"UM_HYBRID_GROUP_ROLE, UM_HYBRID_ROLE WHERE UM_GROUP_NAME IN (?) AND UM_HYBRID_GROUP_ROLE\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk5MjI3MQ=="}, "originalCommit": {"oid": "d302bc96513f99869f7271e0eaa575ff20de2154"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTg3MjM0OnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridRoleManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNTowNDoxM1rOG9MlHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNTozNTowNVrOG9NEMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgyMjQyOA==", "bodyText": "why is this primaryDomainName? Can be differ", "url": "https://github.com/wso2/carbon-kernel/pull/2722#discussion_r466822428", "createdAt": "2020-08-07T05:04:13Z", "author": {"login": "IsuraD"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridRoleManager.java", "diffHunk": "@@ -433,6 +434,87 @@ public void updateUserListOfHybridRole(String roleName, String[] deletedUsers, S\n         }\n     }\n \n+    /**\n+     * Update group list of role.\n+     *\n+     * @param roleName      Role name.\n+     * @param deletedGroups Deleted groups.\n+     * @param newGroups     New groups.\n+     * @throws UserStoreException UserStoreException.\n+     */\n+    public void updateGroupListOfHybridRole(String roleName, String[] deletedGroups, String[] newGroups)\n+            throws UserStoreException {\n+\n+        String sqlStmt1 = HybridJDBCConstants.REMOVE_GROUP_FROM_ROLE_SQL;\n+        String sqlStmt2 = HybridJDBCConstants.ADD_GROUP_TO_ROLE_SQL;\n+\n+        try (Connection dbConnection = DatabaseUtil.getDBConnection(dataSource)) {\n+\n+            String primaryDomainName = getMyDomainName();\n+            if (primaryDomainName != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c734dbe5ab45fa4834944351e906e18556f3a41"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgzMDM4Nw==", "bodyText": "Changed the variable name.", "url": "https://github.com/wso2/carbon-kernel/pull/2722#discussion_r466830387", "createdAt": "2020-08-07T05:35:05Z", "author": {"login": "ashensw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridRoleManager.java", "diffHunk": "@@ -433,6 +434,87 @@ public void updateUserListOfHybridRole(String roleName, String[] deletedUsers, S\n         }\n     }\n \n+    /**\n+     * Update group list of role.\n+     *\n+     * @param roleName      Role name.\n+     * @param deletedGroups Deleted groups.\n+     * @param newGroups     New groups.\n+     * @throws UserStoreException UserStoreException.\n+     */\n+    public void updateGroupListOfHybridRole(String roleName, String[] deletedGroups, String[] newGroups)\n+            throws UserStoreException {\n+\n+        String sqlStmt1 = HybridJDBCConstants.REMOVE_GROUP_FROM_ROLE_SQL;\n+        String sqlStmt2 = HybridJDBCConstants.ADD_GROUP_TO_ROLE_SQL;\n+\n+        try (Connection dbConnection = DatabaseUtil.getDBConnection(dataSource)) {\n+\n+            String primaryDomainName = getMyDomainName();\n+            if (primaryDomainName != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgyMjQyOA=="}, "originalCommit": {"oid": "7c734dbe5ab45fa4834944351e906e18556f3a41"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTg3Mjk1OnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridRoleManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNTowNDo0MVrOG9MlfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwNTowNDo0MVrOG9MlfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjgyMjUyNQ==", "bodyText": "what is OPENEDGE_TYPE ?", "url": "https://github.com/wso2/carbon-kernel/pull/2722#discussion_r466822525", "createdAt": "2020-08-07T05:04:41Z", "author": {"login": "IsuraD"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/hybrid/HybridRoleManager.java", "diffHunk": "@@ -433,6 +434,87 @@ public void updateUserListOfHybridRole(String roleName, String[] deletedUsers, S\n         }\n     }\n \n+    /**\n+     * Update group list of role.\n+     *\n+     * @param roleName      Role name.\n+     * @param deletedGroups Deleted groups.\n+     * @param newGroups     New groups.\n+     * @throws UserStoreException UserStoreException.\n+     */\n+    public void updateGroupListOfHybridRole(String roleName, String[] deletedGroups, String[] newGroups)\n+            throws UserStoreException {\n+\n+        String sqlStmt1 = HybridJDBCConstants.REMOVE_GROUP_FROM_ROLE_SQL;\n+        String sqlStmt2 = HybridJDBCConstants.ADD_GROUP_TO_ROLE_SQL;\n+\n+        try (Connection dbConnection = DatabaseUtil.getDBConnection(dataSource)) {\n+\n+            String primaryDomainName = getMyDomainName();\n+            if (primaryDomainName != null) {\n+                primaryDomainName = primaryDomainName.toUpperCase();\n+            }\n+\n+            String type = DatabaseCreator.getDatabaseType(dbConnection);\n+            if (UserCoreConstants.MSSQL_TYPE.equals(type)) {\n+                sqlStmt2 = HybridJDBCConstants.ADD_GROUP_TO_ROLE_SQL_MSSQL;\n+            }\n+\n+            if (ArrayUtils.isNotEmpty(deletedGroups)) {\n+                DatabaseUtil.udpateUserRoleMappingInBatchModeForInternalRoles(dbConnection, sqlStmt1, primaryDomainName,\n+                        deletedGroups, roleName, tenantId, tenantId, tenantId);\n+            }\n+\n+            if (ArrayUtils.isNotEmpty(newGroups)) {\n+                if (UserCoreConstants.OPENEDGE_TYPE.equals(type)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c734dbe5ab45fa4834944351e906e18556f3a41"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2136, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}