{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NjA0NDAw", "number": 2693, "title": "Fix domain name being passed to the domain name free zone when using userStorePreferenceOrder", "bodyText": "Purpose\nResolves : wso2/product-is#8361, wso2/product-is#7874", "createdAt": "2020-05-31T12:25:59Z", "url": "https://github.com/wso2/carbon-kernel/pull/2693", "merged": true, "mergeCommit": {"oid": "08dc1a00640392ebc7579eee6e618ad69b0e6463"}, "closed": true, "closedAt": "2020-06-01T05:21:05Z", "author": {"login": "DinikaSen"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmquelgH2gAyNDI1NjA0NDAwOjVlYTExM2Q4OTllNjEzYjc4NGY0YTgxNmFmYWQ2NmJhZGIxNDNkNmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFAJ0hgFqTQ4MTE0OTE4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5ea113d899e613b784f4a816afad66badb143d6f", "author": {"user": {"login": "DinikaSen", "name": "Dinika Senarath"}}, "url": "https://github.com/wso2/carbon-kernel/commit/5ea113d899e613b784f4a816afad66badb143d6f", "committedDate": "2020-05-31T12:21:59Z", "message": "Fix domain name being passed to the domain name free zone when using userStorePreferenceOrder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTEyODYw", "url": "https://github.com/wso2/carbon-kernel/pull/2693#pullrequestreview-421512860", "createdAt": "2020-05-31T17:24:33Z", "commit": {"oid": "5ea113d899e613b784f4a816afad66badb143d6f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNzoyNDozM1rOGc6NNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNzoyNzoxNFrOGc6N9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2Njk2Ng==", "bodyText": "Shall we change this is invalid? WDYT?", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r432966966", "createdAt": "2020-05-31T17:24:33Z", "author": {"login": "somindatommy"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Wrong username or password is provided.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea113d899e613b784f4a816afad66badb143d6f"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NzEwNQ==", "bodyText": "Shall we end the sentence from instance of AbstractUserStoreManager and begin a new sentence? WDYT?", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r432967105", "createdAt": "2020-05-31T17:26:19Z", "author": {"login": "somindatommy"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Wrong username or password is provided.\");\n+                }\n+                handleOnAuthenticateFailure(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getCode(),\n+                        String.format(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getMessage(),\n+                                \"Authentication failed\"), userName, credential);\n+                throw new UserStoreException(\"Authentication failed. Invalid username or password.\");\n+            }\n+            UserStoreManager userStoreManager = this.getSecondaryUserStoreManager(providedDomainName);\n+            if (!(userStoreManager instanceof AbstractUserStoreManager)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"UserStoreManager is not an instance of AbstractUserStoreManager hence authenticate \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ea113d899e613b784f4a816afad66badb143d6f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NzE1OA==", "bodyText": "And shall we do the same in other relevant places?", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r432967158", "createdAt": "2020-05-31T17:27:14Z", "author": {"login": "somindatommy"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Wrong username or password is provided.\");\n+                }\n+                handleOnAuthenticateFailure(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getCode(),\n+                        String.format(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getMessage(),\n+                                \"Authentication failed\"), userName, credential);\n+                throw new UserStoreException(\"Authentication failed. Invalid username or password.\");\n+            }\n+            UserStoreManager userStoreManager = this.getSecondaryUserStoreManager(providedDomainName);\n+            if (!(userStoreManager instanceof AbstractUserStoreManager)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"UserStoreManager is not an instance of AbstractUserStoreManager hence authenticate \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2NzEwNQ=="}, "originalCommit": {"oid": "5ea113d899e613b784f4a816afad66badb143d6f"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268", "author": {"user": {"login": "DinikaSen", "name": "Dinika Senarath"}}, "url": "https://github.com/wso2/carbon-kernel/commit/74ae56a98cee2264181b99ae7432573049fac268", "committedDate": "2020-06-01T03:39:34Z", "message": "Address comments of the PR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTgxNTkw", "url": "https://github.com/wso2/carbon-kernel/pull/2693#pullrequestreview-421581590", "createdAt": "2020-06-01T04:01:55Z", "commit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTgzNjk1", "url": "https://github.com/wso2/carbon-kernel/pull/2693#pullrequestreview-421583695", "createdAt": "2020-06-01T04:13:17Z", "commit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTkwMjQ0", "url": "https://github.com/wso2/carbon-kernel/pull/2693#pullrequestreview-421590244", "createdAt": "2020-06-01T04:46:35Z", "commit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MTY2NTE4", "url": "https://github.com/wso2/carbon-kernel/pull/2693#pullrequestreview-475166518", "createdAt": "2020-08-26T05:45:27Z", "commit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNTo0NToyN1rOHG8rsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwNTo0NToyN1rOHG8rsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzA0NzczMQ==", "bodyText": "Is it possible to extract this logic to a method and reuse?", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r477047731", "createdAt": "2020-08-26T05:45:27Z", "author": {"login": "vihanga-liyanage"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -10180,6 +10214,34 @@ private AuthenticationResult generateUserStoreChainWithID(String preferredUserNa\n             String preferredUserNameValue, Object credential, String profileName, boolean domainProvided,\n             List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(preferredUserNameValue).getDomainName();\n+            // Check whether provided domain is in the preference list.\n+            if (!userStorePreferenceOrder.contains(providedDomainName)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Authentication failure. Invalid username or password is provided.\");\n+                }\n+                handleOnAuthenticateFailure(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getCode(),\n+                        String.format(ErrorMessages.ERROR_CODE_ERROR_WHILE_AUTHENTICATION.getMessage(),\n+                                \"Authentication failed\"), preferredUserNameValue, credential);\n+                throw new UserStoreException(\"Authentication failed. Invalid username or password.\");\n+            }\n+            UserStoreManager userStoreManager = this.getSecondaryUserStoreManager(providedDomainName);\n+            if (!(userStoreManager instanceof AbstractUserStoreManager)) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"UserStoreManager is not an instance of AbstractUserStoreManager. Hence \" +\n+                            \"authenticate the user through all the available user store list.\");\n+                }\n+                return authenticateInternalWithID(preferredUserNameClaim, preferredUserNameValue, credential,\n+                        profileName, domainProvided);\n+            }\n+            IterativeUserStoreManager iterativeUserStoreManager = new IterativeUserStoreManager(\n+                    (AbstractUserStoreManager) userStoreManager);\n+            return iterativeUserStoreManager.\n+                    authenticateWithID(preferredUserNameClaim, preferredUserNameValue, credential, profileName);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "originalPosition": 95}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMTQ5MDEw", "url": "https://github.com/wso2/carbon-kernel/pull/2693#pullrequestreview-481149010", "createdAt": "2020-09-02T18:17:30Z", "commit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxNzozMVrOHL7ieg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxNzozMVrOHL7ieg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTg2Ng==", "bodyText": "Why don't we use UserCoreUtil.extractDomainFromName(userName) here.", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r482271866", "createdAt": "2020-09-02T18:17:31Z", "author": {"login": "ashensw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -9633,6 +9641,32 @@ private boolean isUserStoreChainNeeded(List<String> userStorePreferenceOrder) th\n     private boolean generateUserStoreChain(String userName, Object credential, boolean domainProvided,\n                                            List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(userName).getDomainName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMTQ5MTg1", "url": "https://github.com/wso2/carbon-kernel/pull/2693#pullrequestreview-481149185", "createdAt": "2020-09-02T18:17:35Z", "commit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxNzozNVrOHL7iow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxODoxNzozNVrOHL7iow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjI3MTkwNw==", "bodyText": "Why don't we use UserCoreUtil.extractDomainFromName(userName) here.", "url": "https://github.com/wso2/carbon-kernel/pull/2693#discussion_r482271907", "createdAt": "2020-09-02T18:17:35Z", "author": {"login": "ashensw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/AbstractUserStoreManager.java", "diffHunk": "@@ -10180,6 +10214,34 @@ private AuthenticationResult generateUserStoreChainWithID(String preferredUserNa\n             String preferredUserNameValue, Object credential, String profileName, boolean domainProvided,\n             List<String> userStorePreferenceOrder) throws UserStoreException {\n \n+        // If domain name is provided, directly authenticate using the corresponding user store.\n+        if (domainProvided) {\n+            String providedDomainName = this.getUserStore(preferredUserNameValue).getDomainName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74ae56a98cee2264181b99ae7432573049fac268"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2042, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}