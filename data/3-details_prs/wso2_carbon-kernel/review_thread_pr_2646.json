{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MTI2Nzg0", "number": 2646, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNDowOFrODshi-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwODo1NjoyMFrOE-jWEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDEzNTYxOnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/RealmCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNDowOFrOF9a5lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNDowOFrOF9a5lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0ODE4Mw==", "bodyText": "Missing fullstop", "url": "https://github.com/wso2/carbon-kernel/pull/2646#discussion_r399948183", "createdAt": "2020-03-30T06:14:08Z", "author": {"login": "pamodaaw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/RealmCache.java", "diffHunk": "@@ -50,17 +53,27 @@ public synchronized static RealmCache getInstance() {\n             PrivilegedCarbonContext carbonContext = PrivilegedCarbonContext.getThreadLocalCarbonContext();\n             carbonContext.setTenantId(MultitenantConstants.SUPER_TENANT_ID);\n             carbonContext.setTenantDomain(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME);\n-            Cache<RealmCacheKey, RealmCacheEntry> cache;\n+            Cache<RealmCacheKey, RealmCacheEntry> realmCache = null;\n             CacheManager cacheManager = Caching.getCacheManagerFactory().getCacheManager(CUSTOM_TENANT_CACHE_MANAGER);\n-            if (cacheManager != null) {\n-                cache = cacheManager.getCache(CUSTOM_TENANT_CACHE);\n-            } else {\n-                cache = Caching.getCacheManager().getCache(CUSTOM_TENANT_CACHE);\n+\n+            for (Cache cache : cacheManager.getCaches()) {\n+                if (StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE) ||\n+                        StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE)) {\n+                    realmCache = cache;\n+                }\n             }\n+            if (realmCache == null) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Realm cache is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDE0MjIxOnYy", "diffSide": "RIGHT", "path": "core/javax.cache/src/main/java/org/wso2/carbon/caching/impl/Util.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNzowOVrOF9a9mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNzowOVrOF9a9mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0OTIxMQ==", "bodyText": "missing fullstop", "url": "https://github.com/wso2/carbon-kernel/pull/2646#discussion_r399949211", "createdAt": "2020-03-30T06:17:09Z", "author": {"login": "pamodaaw"}, "path": "core/javax.cache/src/main/java/org/wso2/carbon/caching/impl/Util.java", "diffHunk": "@@ -90,6 +91,22 @@ public static long getDefaultCacheTimeout() {\n         return CachingConstants.DEFAULT_CACHE_EXPIRY_MINS;\n     }\n \n+    /**\n+     * Return the default realm cache timeout value (Mins) specified in Carbon.xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDE0MzMwOnYy", "diffSide": "RIGHT", "path": "core/javax.cache/src/main/java/org/wso2/carbon/caching/impl/Util.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNzozNFrOF9a-Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNzozNFrOF9a-Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0OTM2Mg==", "bodyText": "please add a description of the return", "url": "https://github.com/wso2/carbon-kernel/pull/2646#discussion_r399949362", "createdAt": "2020-03-30T06:17:34Z", "author": {"login": "pamodaaw"}, "path": "core/javax.cache/src/main/java/org/wso2/carbon/caching/impl/Util.java", "diffHunk": "@@ -90,6 +91,22 @@ public static long getDefaultCacheTimeout() {\n         return CachingConstants.DEFAULT_CACHE_EXPIRY_MINS;\n     }\n \n+    /**\n+     * Return the default realm cache timeout value (Mins) specified in Carbon.xml\n+     *\n+     * @return long\n+     */\n+    public static long getDefaultRealmCacheTimeout() {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MDE1NDU2OnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/RealmCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoyMjoxNFrOF9bEog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoyMjoxNFrOF9bEog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk1MTAxMA==", "bodyText": "Add the fullstop to the debug log.", "url": "https://github.com/wso2/carbon-kernel/pull/2646#discussion_r399951010", "createdAt": "2020-03-30T06:22:14Z", "author": {"login": "pamodaaw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/RealmCache.java", "diffHunk": "@@ -50,17 +53,27 @@ public synchronized static RealmCache getInstance() {\n             PrivilegedCarbonContext carbonContext = PrivilegedCarbonContext.getThreadLocalCarbonContext();\n             carbonContext.setTenantId(MultitenantConstants.SUPER_TENANT_ID);\n             carbonContext.setTenantDomain(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME);\n-            Cache<RealmCacheKey, RealmCacheEntry> cache;\n+            Cache<RealmCacheKey, RealmCacheEntry> realmCache = null;\n             CacheManager cacheManager = Caching.getCacheManagerFactory().getCacheManager(CUSTOM_TENANT_CACHE_MANAGER);\n-            if (cacheManager != null) {\n-                cache = cacheManager.getCache(CUSTOM_TENANT_CACHE);\n-            } else {\n-                cache = Caching.getCacheManager().getCache(CUSTOM_TENANT_CACHE);\n+\n+            for (Cache cache : cacheManager.getCaches()) {\n+                if (StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE) ||\n+                        StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE)) {\n+                    realmCache = cache;\n+                }\n             }\n+            if (realmCache == null) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Realm cache is null\");\n+                }\n+                cacheManager.createCacheBuilder(CUSTOM_TENANT_CACHE).setExpiry(CacheConfiguration.ExpiryType.MODIFIED,\n+                        new CacheConfiguration.Duration(TimeUnit.MINUTES, DefaultRealm.timeOut)).build();\n+            }\n+\n             if (log.isDebugEnabled()) {\n-                log.debug(\"created authorization cache : \" + cache);\n+                log.debug(\"Authorization cache is created, cache: \" + realmCache);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NjM1MTA3OnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/RealmCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMzo0NTo1NlrOH1ZMDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMzo0NTo1NlrOH1ZMDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc0OTI2MA==", "bodyText": "Aren't both conditions in OR operation same here?", "url": "https://github.com/wso2/carbon-kernel/pull/2646#discussion_r525749260", "createdAt": "2020-11-18T03:45:56Z", "author": {"login": "erandiganepola"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/RealmCache.java", "diffHunk": "@@ -50,17 +53,27 @@ public synchronized static RealmCache getInstance() {\n             PrivilegedCarbonContext carbonContext = PrivilegedCarbonContext.getThreadLocalCarbonContext();\n             carbonContext.setTenantId(MultitenantConstants.SUPER_TENANT_ID);\n             carbonContext.setTenantDomain(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME);\n-            Cache<RealmCacheKey, RealmCacheEntry> cache;\n+            Cache<RealmCacheKey, RealmCacheEntry> realmCache = null;\n             CacheManager cacheManager = Caching.getCacheManagerFactory().getCacheManager(CUSTOM_TENANT_CACHE_MANAGER);\n-            if (cacheManager != null) {\n-                cache = cacheManager.getCache(CUSTOM_TENANT_CACHE);\n-            } else {\n-                cache = Caching.getCacheManager().getCache(CUSTOM_TENANT_CACHE);\n+\n+            for (Cache cache : cacheManager.getCaches()) {\n+                if (StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a314eeb391497ae07dc3afa53955720a173efb8"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDI2MjU3OnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/RealmCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwODo1NjoyMFrOH7xOCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwODo1NjoyMFrOH7xOCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzNDQ0Mw==", "bodyText": "I assume we need to have a break statement here too.", "url": "https://github.com/wso2/carbon-kernel/pull/2646#discussion_r532434443", "createdAt": "2020-11-30T08:56:20Z", "author": {"login": "manjulaRathnayaka"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/RealmCache.java", "diffHunk": "@@ -50,17 +53,27 @@ public synchronized static RealmCache getInstance() {\n             PrivilegedCarbonContext carbonContext = PrivilegedCarbonContext.getThreadLocalCarbonContext();\n             carbonContext.setTenantId(MultitenantConstants.SUPER_TENANT_ID);\n             carbonContext.setTenantDomain(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME);\n-            Cache<RealmCacheKey, RealmCacheEntry> cache;\n+            Cache<RealmCacheKey, RealmCacheEntry> realmCache = null;\n             CacheManager cacheManager = Caching.getCacheManagerFactory().getCacheManager(CUSTOM_TENANT_CACHE_MANAGER);\n-            if (cacheManager != null) {\n-                cache = cacheManager.getCache(CUSTOM_TENANT_CACHE);\n-            } else {\n-                cache = Caching.getCacheManager().getCache(CUSTOM_TENANT_CACHE);\n+\n+            for (Cache cache : cacheManager.getCaches()) {\n+                if (StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE) ||\n+                        StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE)) {\n+                    realmCache = cache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a314eeb391497ae07dc3afa53955720a173efb8"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2205, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}