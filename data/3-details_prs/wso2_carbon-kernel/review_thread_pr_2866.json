{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NjY4NjI2", "number": 2866, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyNjowM1rOFFaxiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjo1ODozMlrOFFbYlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjI1ODY3OnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/ldap/UniqueIDReadOnlyLDAPUserStoreManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjoyNjowM1rOIF66Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzo0Mjo1OFrOIF9Gbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3ODkzOA==", "bodyText": "formatting issues", "url": "https://github.com/wso2/carbon-kernel/pull/2866#discussion_r543078938", "createdAt": "2020-12-15T06:26:03Z", "author": {"login": "IsuraD"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/ldap/UniqueIDReadOnlyLDAPUserStoreManager.java", "diffHunk": "@@ -279,8 +290,15 @@ public AuthenticationResult doAuthenticateWithID(String preferredUserNamePropert\n             return handleAuthenticationFailure(reason);\n         }\n         User user;\n-        String[] users = super\n-                .getUserListFromProperties(preferredUserNameProperty, preferredUserNameValue, profileName);\n+        String[] users;\n+        String userPropertyName =\n+                realmConfig.getUserStoreProperty(LDAPConstants.USER_NAME_ATTRIBUTE);\n+        if (preferredUserNameProperty.equals(userPropertyName)) {\n+            users = new String[]{preferredUserNameValue};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2dcce9af71a926b9e0188d22187f7b15d37419a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNDg2Mg==", "bodyText": "Addressed in c80f2b7", "url": "https://github.com/wso2/carbon-kernel/pull/2866#discussion_r543114862", "createdAt": "2020-12-15T07:42:58Z", "author": {"login": "DinikaSen"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/ldap/UniqueIDReadOnlyLDAPUserStoreManager.java", "diffHunk": "@@ -279,8 +290,15 @@ public AuthenticationResult doAuthenticateWithID(String preferredUserNamePropert\n             return handleAuthenticationFailure(reason);\n         }\n         User user;\n-        String[] users = super\n-                .getUserListFromProperties(preferredUserNameProperty, preferredUserNameValue, profileName);\n+        String[] users;\n+        String userPropertyName =\n+                realmConfig.getUserStoreProperty(LDAPConstants.USER_NAME_ATTRIBUTE);\n+        if (preferredUserNameProperty.equals(userPropertyName)) {\n+            users = new String[]{preferredUserNameValue};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3ODkzOA=="}, "originalCommit": {"oid": "b2dcce9af71a926b9e0188d22187f7b15d37419a"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjM1MjYwOnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/ldap/UniqueIDReadOnlyLDAPUserStoreManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjo1NjozN1rOIF7sqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzo0MzowNlrOIF9GqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5MTg4MQ==", "bodyText": "Need to format", "url": "https://github.com/wso2/carbon-kernel/pull/2866#discussion_r543091881", "createdAt": "2020-12-15T06:56:37Z", "author": {"login": "IsuraD"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/ldap/UniqueIDReadOnlyLDAPUserStoreManager.java", "diffHunk": "@@ -1446,22 +1464,57 @@ public boolean isReadOnly() throws UserStoreException {\n         return values;\n     }\n \n+    /**\n+     * This method supports multi-attribute filters with paginated search for user(s).\n+     *\n+     * @param condition   Validated Condition tree.\n+     * @param profileName Default profile name.\n+     * @param limit       The number of entries to return in a page.\n+     * @param offset      Start index.\n+     * @param sortBy      Sort according to the given attribute name.\n+     * @param sortOrder   Sorting order.\n+     * @return A non-null PaginatedSearchResult instance. Typically contains user names with pagination.\n+     * @throws UserStoreException If an UserStoreException is encountered\n+     *                            while searching for users in a given condition.\n+     */\n     @Override\n     protected UniqueIDPaginatedSearchResult doGetUserListWithID(Condition condition, String profileName, int limit,\n             int offset, String sortBy, String sortOrder) throws UserStoreException {\n \n-        // TODO: Need to improve this method to get the userID as well.\n-        PaginatedSearchResult userNames = super.doGetUserList(condition, profileName, limit, offset, sortBy, sortOrder);\n-        UniqueIDPaginatedSearchResult userList = new UniqueIDPaginatedSearchResult();\n-        userList.setPaginatedSearchResult(userNames);\n-        userList.setSkippedUserCount(userNames.getSkippedUserCount());\n-        List<User> users = new ArrayList<>();\n-        for (String userName : userNames.getUsers()) {\n-            User user = getUser(null, userName);\n-            users.add(user);\n+        UniqueIDPaginatedSearchResult result = new UniqueIDPaginatedSearchResult();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2dcce9af71a926b9e0188d22187f7b15d37419a"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNDkyMA==", "bodyText": "Addressed in c80f2b7", "url": "https://github.com/wso2/carbon-kernel/pull/2866#discussion_r543114920", "createdAt": "2020-12-15T07:43:06Z", "author": {"login": "DinikaSen"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/ldap/UniqueIDReadOnlyLDAPUserStoreManager.java", "diffHunk": "@@ -1446,22 +1464,57 @@ public boolean isReadOnly() throws UserStoreException {\n         return values;\n     }\n \n+    /**\n+     * This method supports multi-attribute filters with paginated search for user(s).\n+     *\n+     * @param condition   Validated Condition tree.\n+     * @param profileName Default profile name.\n+     * @param limit       The number of entries to return in a page.\n+     * @param offset      Start index.\n+     * @param sortBy      Sort according to the given attribute name.\n+     * @param sortOrder   Sorting order.\n+     * @return A non-null PaginatedSearchResult instance. Typically contains user names with pagination.\n+     * @throws UserStoreException If an UserStoreException is encountered\n+     *                            while searching for users in a given condition.\n+     */\n     @Override\n     protected UniqueIDPaginatedSearchResult doGetUserListWithID(Condition condition, String profileName, int limit,\n             int offset, String sortBy, String sortOrder) throws UserStoreException {\n \n-        // TODO: Need to improve this method to get the userID as well.\n-        PaginatedSearchResult userNames = super.doGetUserList(condition, profileName, limit, offset, sortBy, sortOrder);\n-        UniqueIDPaginatedSearchResult userList = new UniqueIDPaginatedSearchResult();\n-        userList.setPaginatedSearchResult(userNames);\n-        userList.setSkippedUserCount(userNames.getSkippedUserCount());\n-        List<User> users = new ArrayList<>();\n-        for (String userName : userNames.getUsers()) {\n-            User user = getUser(null, userName);\n-            users.add(user);\n+        UniqueIDPaginatedSearchResult result = new UniqueIDPaginatedSearchResult();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5MTg4MQ=="}, "originalCommit": {"oid": "b2dcce9af71a926b9e0188d22187f7b15d37419a"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjM1ODYwOnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/ldap/UniqueIDReadOnlyLDAPUserStoreManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjo1ODozMlrOIF7v8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzo0NDozNVrOIF9JkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5MjcyMw==", "bodyText": "Can't we make the super as protected and reuse this?", "url": "https://github.com/wso2/carbon-kernel/pull/2866#discussion_r543092723", "createdAt": "2020-12-15T06:58:32Z", "author": {"login": "IsuraD"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/ldap/UniqueIDReadOnlyLDAPUserStoreManager.java", "diffHunk": "@@ -2195,4 +2248,570 @@ protected void processAttributesAfterRetrievalWithID(String userID, Map<String,\n         }\n     }\n \n+    /**\n+     * Do LDAP paginated search and return user objects as a list.\n+     *\n+     * @param ldapContext             LDAP connection context.\n+     * @param ldapSearchSpecification Contains LDAP context search parameters.\n+     * @param pageSize                Number of results per page.\n+     * @param offset                  Start index.\n+     * @param expressionConditions    List of input expressions.\n+     * @return List of users.\n+     * @throws UserStoreException\n+     */\n+    private List<User> performLDAPSearch(LdapContext ldapContext, LDAPSearchSpecification ldapSearchSpecification,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2dcce9af71a926b9e0188d22187f7b15d37419a"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNTY2NA==", "bodyText": "These newly added methods differ from super class as super class methods process a list of usernames (Strings) and new methods process a list of User objects.", "url": "https://github.com/wso2/carbon-kernel/pull/2866#discussion_r543115664", "createdAt": "2020-12-15T07:44:35Z", "author": {"login": "DinikaSen"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/ldap/UniqueIDReadOnlyLDAPUserStoreManager.java", "diffHunk": "@@ -2195,4 +2248,570 @@ protected void processAttributesAfterRetrievalWithID(String userID, Map<String,\n         }\n     }\n \n+    /**\n+     * Do LDAP paginated search and return user objects as a list.\n+     *\n+     * @param ldapContext             LDAP connection context.\n+     * @param ldapSearchSpecification Contains LDAP context search parameters.\n+     * @param pageSize                Number of results per page.\n+     * @param offset                  Start index.\n+     * @param expressionConditions    List of input expressions.\n+     * @return List of users.\n+     * @throws UserStoreException\n+     */\n+    private List<User> performLDAPSearch(LdapContext ldapContext, LDAPSearchSpecification ldapSearchSpecification,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA5MjcyMw=="}, "originalCommit": {"oid": "b2dcce9af71a926b9e0188d22187f7b15d37419a"}, "originalPosition": 144}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2112, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}