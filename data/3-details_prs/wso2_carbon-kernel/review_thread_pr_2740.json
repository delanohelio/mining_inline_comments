{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MzQyODY0", "number": 2740, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODoxNTo0OFrOEWsjhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTo1Njo1NFrOEWumIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjM0MTE5OnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDManger.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwODoxNTo0OFrOG-FLcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTozNzowNlrOG-Hqcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc0OTc0NA==", "bodyText": "I guess we should be able to use the UserCoreUtil.removeDomainFromName here to get the domainFreeUserName?", "url": "https://github.com/wso2/carbon-kernel/pull/2740#discussion_r467749744", "createdAt": "2020-08-10T08:15:48Z", "author": {"login": "ashensw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDManger.java", "diffHunk": "@@ -67,20 +68,36 @@ public User addUser(String username, String profileName, AbstractUserStoreManage\n     public User getUser(String uniqueId, AbstractUserStoreManager userStoreManager)\n             throws UserStoreException {\n \n-        String[] usernames = userStoreManager.getUserList(UserCoreClaimConstants.USER_ID_CLAIM_URI, uniqueId, null);\n+        String userName = userStoreManager.getFromUserNameCache(uniqueId);\n+        if (StringUtils.isEmpty(userName)) {\n \n-        if (usernames.length > 1) {\n-            throw new UserStoreException(\"More than one user presents with the same user unique id.\");\n-        }\n+            String[] usernames = userStoreManager.getUserList(UserCoreClaimConstants.USER_ID_CLAIM_URI, uniqueId, null);\n+\n+            if (usernames.length > 1) {\n+                throw new UserStoreException(\"More than one user presents with the same user unique id.\");\n+            }\n \n-        if (usernames.length == 0) {\n-            return null;\n+            if (usernames.length == 0) {\n+                return null;\n+            }\n+            userName = usernames[0];\n+            UserStore userStore = userStoreManager.getUserStoreWithID(uniqueId);\n+            String[] userNames = userName.split(CarbonConstants.DOMAIN_SEPARATOR);\n+            String domainFreeUserName;\n+\n+            if (userNames.length > 1) {\n+                domainFreeUserName = userNames[1];\n+            } else {\n+                domainFreeUserName = userName;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "130650e1998579f81d6e02b952e30d18165104e2"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc5MDQ1MA==", "bodyText": "Resolved", "url": "https://github.com/wso2/carbon-kernel/pull/2740#discussion_r467790450", "createdAt": "2020-08-10T09:37:06Z", "author": {"login": "Buddhimah"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDManger.java", "diffHunk": "@@ -67,20 +68,36 @@ public User addUser(String username, String profileName, AbstractUserStoreManage\n     public User getUser(String uniqueId, AbstractUserStoreManager userStoreManager)\n             throws UserStoreException {\n \n-        String[] usernames = userStoreManager.getUserList(UserCoreClaimConstants.USER_ID_CLAIM_URI, uniqueId, null);\n+        String userName = userStoreManager.getFromUserNameCache(uniqueId);\n+        if (StringUtils.isEmpty(userName)) {\n \n-        if (usernames.length > 1) {\n-            throw new UserStoreException(\"More than one user presents with the same user unique id.\");\n-        }\n+            String[] usernames = userStoreManager.getUserList(UserCoreClaimConstants.USER_ID_CLAIM_URI, uniqueId, null);\n+\n+            if (usernames.length > 1) {\n+                throw new UserStoreException(\"More than one user presents with the same user unique id.\");\n+            }\n \n-        if (usernames.length == 0) {\n-            return null;\n+            if (usernames.length == 0) {\n+                return null;\n+            }\n+            userName = usernames[0];\n+            UserStore userStore = userStoreManager.getUserStoreWithID(uniqueId);\n+            String[] userNames = userName.split(CarbonConstants.DOMAIN_SEPARATOR);\n+            String domainFreeUserName;\n+\n+            if (userNames.length > 1) {\n+                domainFreeUserName = userNames[1];\n+            } else {\n+                domainFreeUserName = userName;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzc0OTc0NA=="}, "originalCommit": {"oid": "130650e1998579f81d6e02b952e30d18165104e2"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjY3NTU1OnYy", "diffSide": "RIGHT", "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDManger.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwOTo1Njo1NFrOG-IQTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMDozMjo1NlrOG-JRKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgwMDE0Mw==", "bodyText": "Ideally this cache needs to be managed outside the user-store-manager level, as it needs to keep a reference from UUID to {tenant, user-store, user-store-local-id}", "url": "https://github.com/wso2/carbon-kernel/pull/2740#discussion_r467800143", "createdAt": "2020-08-10T09:56:54Z", "author": {"login": "ruwanta"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDManger.java", "diffHunk": "@@ -67,20 +68,29 @@ public User addUser(String username, String profileName, AbstractUserStoreManage\n     public User getUser(String uniqueId, AbstractUserStoreManager userStoreManager)\n             throws UserStoreException {\n \n-        String[] usernames = userStoreManager.getUserList(UserCoreClaimConstants.USER_ID_CLAIM_URI, uniqueId, null);\n+        String userName = userStoreManager.getFromUserNameCache(uniqueId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ca55a73965f69738229c1506731613c33f06212"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgxNjc0NA==", "bodyText": "+1. Currently, the cache is managed outside of user-store-manager.  It keeps UUID/tenantId--> to {full qualified username}\nhttps://github.com/wso2/carbon-kernel/blob/4.6.x/core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserIdResolverCache.java#L71", "url": "https://github.com/wso2/carbon-kernel/pull/2740#discussion_r467816744", "createdAt": "2020-08-10T10:32:56Z", "author": {"login": "IsuraD"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/UserUniqueIDManger.java", "diffHunk": "@@ -67,20 +68,29 @@ public User addUser(String username, String profileName, AbstractUserStoreManage\n     public User getUser(String uniqueId, AbstractUserStoreManager userStoreManager)\n             throws UserStoreException {\n \n-        String[] usernames = userStoreManager.getUserList(UserCoreClaimConstants.USER_ID_CLAIM_URI, uniqueId, null);\n+        String userName = userStoreManager.getFromUserNameCache(uniqueId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgwMDE0Mw=="}, "originalCommit": {"oid": "7ca55a73965f69738229c1506731613c33f06212"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2145, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}