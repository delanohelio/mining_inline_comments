{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MTI2Nzg0", "number": 2646, "title": "Add configurable realm cache timeout", "bodyText": "Purpose\nResolve wso2/product-is#7316", "createdAt": "2020-03-26T12:00:49Z", "url": "https://github.com/wso2/carbon-kernel/pull/2646", "merged": true, "mergeCommit": {"oid": "1a2dc637b139885f72a94e13c417d89e6e748053"}, "closed": true, "closedAt": "2020-03-31T05:57:42Z", "author": {"login": "sarubi"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRasKlAH2gAyMzk0MTI2Nzg0OjMyZDQwMjU4ZDA0NThkNDc2N2I5NmU0ZTAzZWY5ZGVkNzliMjYxMjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhhd-wgFqTU0MDcwNDU1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "32d40258d0458d4767b96e4e03ef9ded79b26128", "author": {"user": null}, "url": "https://github.com/wso2/carbon-kernel/commit/32d40258d0458d4767b96e4e03ef9ded79b26128", "committedDate": "2020-03-26T11:48:34Z", "message": "Added realm cache timeout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd3bbf853ded7b0128053c2757271da6b4f3a30e", "author": {"user": null}, "url": "https://github.com/wso2/carbon-kernel/commit/cd3bbf853ded7b0128053c2757271da6b4f3a30e", "committedDate": "2020-03-26T11:48:42Z", "message": "improved debug logs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54d05c43ae9d8d1be795b0f5711574f7def5c0aa", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/carbon-kernel/commit/54d05c43ae9d8d1be795b0f5711574f7def5c0aa", "committedDate": "2020-03-26T11:49:41Z", "message": "Fix https://github.com/wso2/product-is/issues/7316, add realm cache timeout."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/carbon-kernel/commit/bb5a44f90f96fed8f0211d233fb22bffcdb85e2b", "committedDate": "2020-03-27T07:49:18Z", "message": "refactored"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTU0MzYx", "url": "https://github.com/wso2/carbon-kernel/pull/2646#pullrequestreview-383554361", "createdAt": "2020-03-30T06:14:08Z", "commit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNDowOFrOF9a5lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNDowOFrOF9a5lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0ODE4Mw==", "bodyText": "Missing fullstop", "url": "https://github.com/wso2/carbon-kernel/pull/2646#discussion_r399948183", "createdAt": "2020-03-30T06:14:08Z", "author": {"login": "pamodaaw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/RealmCache.java", "diffHunk": "@@ -50,17 +53,27 @@ public synchronized static RealmCache getInstance() {\n             PrivilegedCarbonContext carbonContext = PrivilegedCarbonContext.getThreadLocalCarbonContext();\n             carbonContext.setTenantId(MultitenantConstants.SUPER_TENANT_ID);\n             carbonContext.setTenantDomain(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME);\n-            Cache<RealmCacheKey, RealmCacheEntry> cache;\n+            Cache<RealmCacheKey, RealmCacheEntry> realmCache = null;\n             CacheManager cacheManager = Caching.getCacheManagerFactory().getCacheManager(CUSTOM_TENANT_CACHE_MANAGER);\n-            if (cacheManager != null) {\n-                cache = cacheManager.getCache(CUSTOM_TENANT_CACHE);\n-            } else {\n-                cache = Caching.getCacheManager().getCache(CUSTOM_TENANT_CACHE);\n+\n+            for (Cache cache : cacheManager.getCaches()) {\n+                if (StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE) ||\n+                        StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE)) {\n+                    realmCache = cache;\n+                }\n             }\n+            if (realmCache == null) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Realm cache is null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTU1NjQ3", "url": "https://github.com/wso2/carbon-kernel/pull/2646#pullrequestreview-383555647", "createdAt": "2020-03-30T06:17:09Z", "commit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNzowOVrOF9a9mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNzowOVrOF9a9mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0OTIxMQ==", "bodyText": "missing fullstop", "url": "https://github.com/wso2/carbon-kernel/pull/2646#discussion_r399949211", "createdAt": "2020-03-30T06:17:09Z", "author": {"login": "pamodaaw"}, "path": "core/javax.cache/src/main/java/org/wso2/carbon/caching/impl/Util.java", "diffHunk": "@@ -90,6 +91,22 @@ public static long getDefaultCacheTimeout() {\n         return CachingConstants.DEFAULT_CACHE_EXPIRY_MINS;\n     }\n \n+    /**\n+     * Return the default realm cache timeout value (Mins) specified in Carbon.xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTU1ODIy", "url": "https://github.com/wso2/carbon-kernel/pull/2646#pullrequestreview-383555822", "createdAt": "2020-03-30T06:17:34Z", "commit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNzozNFrOF9a-Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoxNzozNFrOF9a-Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk0OTM2Mg==", "bodyText": "please add a description of the return", "url": "https://github.com/wso2/carbon-kernel/pull/2646#discussion_r399949362", "createdAt": "2020-03-30T06:17:34Z", "author": {"login": "pamodaaw"}, "path": "core/javax.cache/src/main/java/org/wso2/carbon/caching/impl/Util.java", "diffHunk": "@@ -90,6 +91,22 @@ public static long getDefaultCacheTimeout() {\n         return CachingConstants.DEFAULT_CACHE_EXPIRY_MINS;\n     }\n \n+    /**\n+     * Return the default realm cache timeout value (Mins) specified in Carbon.xml\n+     *\n+     * @return long\n+     */\n+    public static long getDefaultRealmCacheTimeout() {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTU3NzQ1", "url": "https://github.com/wso2/carbon-kernel/pull/2646#pullrequestreview-383557745", "createdAt": "2020-03-30T06:22:14Z", "commit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoyMjoxNFrOF9bEog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwNjoyMjoxNFrOF9bEog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTk1MTAxMA==", "bodyText": "Add the fullstop to the debug log.", "url": "https://github.com/wso2/carbon-kernel/pull/2646#discussion_r399951010", "createdAt": "2020-03-30T06:22:14Z", "author": {"login": "pamodaaw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/RealmCache.java", "diffHunk": "@@ -50,17 +53,27 @@ public synchronized static RealmCache getInstance() {\n             PrivilegedCarbonContext carbonContext = PrivilegedCarbonContext.getThreadLocalCarbonContext();\n             carbonContext.setTenantId(MultitenantConstants.SUPER_TENANT_ID);\n             carbonContext.setTenantDomain(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME);\n-            Cache<RealmCacheKey, RealmCacheEntry> cache;\n+            Cache<RealmCacheKey, RealmCacheEntry> realmCache = null;\n             CacheManager cacheManager = Caching.getCacheManagerFactory().getCacheManager(CUSTOM_TENANT_CACHE_MANAGER);\n-            if (cacheManager != null) {\n-                cache = cacheManager.getCache(CUSTOM_TENANT_CACHE);\n-            } else {\n-                cache = Caching.getCacheManager().getCache(CUSTOM_TENANT_CACHE);\n+\n+            for (Cache cache : cacheManager.getCaches()) {\n+                if (StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE) ||\n+                        StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE)) {\n+                    realmCache = cache;\n+                }\n             }\n+            if (realmCache == null) {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Realm cache is null\");\n+                }\n+                cacheManager.createCacheBuilder(CUSTOM_TENANT_CACHE).setExpiry(CacheConfiguration.ExpiryType.MODIFIED,\n+                        new CacheConfiguration.Duration(TimeUnit.MINUTES, DefaultRealm.timeOut)).build();\n+            }\n+\n             if (log.isDebugEnabled()) {\n-                log.debug(\"created authorization cache : \" + cache);\n+                log.debug(\"Authorization cache is created, cache: \" + realmCache);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5a44f90f96fed8f0211d233fb22bffcdb85e2b"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "269faf4fe1fda4d413e31513b34dae15c9fcf452", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/carbon-kernel/commit/269faf4fe1fda4d413e31513b34dae15c9fcf452", "committedDate": "2020-03-30T06:24:59Z", "message": "fix review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a314eeb391497ae07dc3afa53955720a173efb8", "author": {"user": {"login": "sarubi", "name": "Sarubi Thillainathan"}}, "url": "https://github.com/wso2/carbon-kernel/commit/2a314eeb391497ae07dc3afa53955720a173efb8", "committedDate": "2020-03-30T07:01:14Z", "message": "fix review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NDE0MjU1", "url": "https://github.com/wso2/carbon-kernel/pull/2646#pullrequestreview-384414255", "createdAt": "2020-03-31T05:36:45Z", "commit": {"oid": "2a314eeb391497ae07dc3afa53955720a173efb8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMDgzNDA5", "url": "https://github.com/wso2/carbon-kernel/pull/2646#pullrequestreview-533083409", "createdAt": "2020-11-18T03:45:56Z", "commit": {"oid": "2a314eeb391497ae07dc3afa53955720a173efb8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMzo0NTo1NlrOH1ZMDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMzo0NTo1NlrOH1ZMDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc0OTI2MA==", "bodyText": "Aren't both conditions in OR operation same here?", "url": "https://github.com/wso2/carbon-kernel/pull/2646#discussion_r525749260", "createdAt": "2020-11-18T03:45:56Z", "author": {"login": "erandiganepola"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/RealmCache.java", "diffHunk": "@@ -50,17 +53,27 @@ public synchronized static RealmCache getInstance() {\n             PrivilegedCarbonContext carbonContext = PrivilegedCarbonContext.getThreadLocalCarbonContext();\n             carbonContext.setTenantId(MultitenantConstants.SUPER_TENANT_ID);\n             carbonContext.setTenantDomain(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME);\n-            Cache<RealmCacheKey, RealmCacheEntry> cache;\n+            Cache<RealmCacheKey, RealmCacheEntry> realmCache = null;\n             CacheManager cacheManager = Caching.getCacheManagerFactory().getCacheManager(CUSTOM_TENANT_CACHE_MANAGER);\n-            if (cacheManager != null) {\n-                cache = cacheManager.getCache(CUSTOM_TENANT_CACHE);\n-            } else {\n-                cache = Caching.getCacheManager().getCache(CUSTOM_TENANT_CACHE);\n+\n+            for (Cache cache : cacheManager.getCaches()) {\n+                if (StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a314eeb391497ae07dc3afa53955720a173efb8"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNzA0NTU2", "url": "https://github.com/wso2/carbon-kernel/pull/2646#pullrequestreview-540704556", "createdAt": "2020-11-30T08:56:20Z", "commit": {"oid": "2a314eeb391497ae07dc3afa53955720a173efb8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwODo1NjoyMFrOH7xOCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwODo1NjoyMFrOH7xOCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzNDQ0Mw==", "bodyText": "I assume we need to have a break statement here too.", "url": "https://github.com/wso2/carbon-kernel/pull/2646#discussion_r532434443", "createdAt": "2020-11-30T08:56:20Z", "author": {"login": "manjulaRathnayaka"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/common/RealmCache.java", "diffHunk": "@@ -50,17 +53,27 @@ public synchronized static RealmCache getInstance() {\n             PrivilegedCarbonContext carbonContext = PrivilegedCarbonContext.getThreadLocalCarbonContext();\n             carbonContext.setTenantId(MultitenantConstants.SUPER_TENANT_ID);\n             carbonContext.setTenantDomain(MultitenantConstants.SUPER_TENANT_DOMAIN_NAME);\n-            Cache<RealmCacheKey, RealmCacheEntry> cache;\n+            Cache<RealmCacheKey, RealmCacheEntry> realmCache = null;\n             CacheManager cacheManager = Caching.getCacheManagerFactory().getCacheManager(CUSTOM_TENANT_CACHE_MANAGER);\n-            if (cacheManager != null) {\n-                cache = cacheManager.getCache(CUSTOM_TENANT_CACHE);\n-            } else {\n-                cache = Caching.getCacheManager().getCache(CUSTOM_TENANT_CACHE);\n+\n+            for (Cache cache : cacheManager.getCaches()) {\n+                if (StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE) ||\n+                        StringUtils.equals(cache.getName(), CUSTOM_TENANT_CACHE)) {\n+                    realmCache = cache;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a314eeb391497ae07dc3afa53955720a173efb8"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2100, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}