{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNjk4NTgz", "number": 2692, "title": "Implement UMData deletion", "bodyText": "Purpose\nImplement UMData deletion which is to be get called during the tenant deletion process\nRelated: wso2/carbon-multitenancy#196", "createdAt": "2020-05-25T11:21:20Z", "url": "https://github.com/wso2/carbon-kernel/pull/2692", "merged": true, "mergeCommit": {"oid": "762f4a629fddad491aeee9fdede4f2cb0b221300"}, "closed": true, "closedAt": "2020-08-10T15:36:28Z", "author": {"login": "sumedhe"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcku_s1AFqTQxNzY2NjY0NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdyjZgRgFqTU3Mzk4OTAwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NjY2NjQ1", "url": "https://github.com/wso2/carbon-kernel/pull/2692#pullrequestreview-417666645", "createdAt": "2020-05-25T12:07:49Z", "commit": {"oid": "7c5e0844453b1976ac5f452925f6c393553c8c33"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMjowNzo0OVrOGZ_Cqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMjoxMjoxOFrOGZ_JdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwMDQ1OA==", "bodyText": "Shall we format the newly added SQL lines to follow the maximum characters per line rule (<=120)? WDYT? Please format the other places as well.", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r429900458", "createdAt": "2020-05-25T12:07:49Z", "author": {"login": "ShanChathusanda93"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/authorization/DBConstants.java", "diffHunk": "@@ -73,6 +75,7 @@\n     public static final String DELETE_USER_PERMISSION_SQL = \"DELETE FROM UM_USER_PERMISSION WHERE UM_USER_NAME=? \" +\n             \"AND UM_PERMISSION_ID = (SELECT UM_ID FROM UM_PERMISSION WHERE UM_RESOURCE_ID = ? AND \" +\n             \"UM_ACTION = ? AND UM_TENANT_ID=?) AND UM_TENANT_ID=?\";\n+    public static final String DELETE_USER_PERMISSIONS_BY_TENANT_ID_SQL = \"DELETE FROM UM_USER_PERMISSION WHERE UM_TENANT_ID = ?\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5e0844453b1976ac5f452925f6c393553c8c33"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwMTM5MA==", "bodyText": "Shall we add only the UserStoreException rather than the relative path? WDYT?", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r429901390", "createdAt": "2020-05-25T12:10:15Z", "author": {"login": "ShanChathusanda93"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -905,6 +910,23 @@ public void deleteTenant(int tenantId, boolean removeFromPersistentStorage)\n         }\n     }\n \n+    /**\n+     * Delete all tenant information related to tenant stored in UM tables.\n+     *\n+     * @param tenantId Id of the tenant\n+     * @throws org.wso2.carbon.user.api.UserStoreException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5e0844453b1976ac5f452925f6c393553c8c33"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwMTczNA==", "bodyText": "Is it possible to catch a specific exception here rather than catching the Exception class?", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r429901734", "createdAt": "2020-05-25T12:11:04Z", "author": {"login": "ShanChathusanda93"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -1201,4 +1223,74 @@ private boolean checkUniqueIdColumnInTable() throws UserStoreException {\n         }\n         return false;\n     }\n+\n+    /**\n+     * Delete tenant UM Data.\n+     *\n+     * @param tenantId Id of the tenant\n+     * @param conn DB connection\n+     * @throws Exception\n+     */\n+    private static void deleteTenantUMData(int tenantId, Connection conn) throws Exception {\n+\n+        try {\n+            conn.setAutoCommit(false);\n+\n+            executeDeleteQuery(conn, DBConstants.DELETE_USER_PERMISSIONS_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, DBConstants.DELETE_ROLE_PERMISSIONS_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, DBConstants.DELETE_PERMISSION_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, ProfileDBConstant.DELETE_CLAIM_BEHAVIOR_BY_TENANT_ID, tenantId);\n+            executeDeleteQuery(conn, ProfileDBConstant.DELETE_PROFILE_CONFIG_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, ClaimDBConstants.DELETE_CLAIM_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, ClaimDBConstants.DELETE_DIALECT_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_USER_PROPERTY_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_DOMAIN_FROM_USER_ROLE_BY_TENANT_ID, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.REMOVE_USER_ROLES_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_ROLES_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_USERS_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, HybridJDBCConstants.DELETE_ROLES_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, HybridJDBCConstants.DELETE_REMEMBERME_VALUES_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, TenantConstants.DELETE_TENANT_SQL, tenantId);\n+\n+            conn.commit();\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5e0844453b1976ac5f452925f6c393553c8c33"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkwMjE5Nw==", "bodyText": "Shall we throw a specific exception from here? WDYT?", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r429902197", "createdAt": "2020-05-25T12:12:18Z", "author": {"login": "ShanChathusanda93"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -1201,4 +1223,74 @@ private boolean checkUniqueIdColumnInTable() throws UserStoreException {\n         }\n         return false;\n     }\n+\n+    /**\n+     * Delete tenant UM Data.\n+     *\n+     * @param tenantId Id of the tenant\n+     * @param conn DB connection\n+     * @throws Exception\n+     */\n+    private static void deleteTenantUMData(int tenantId, Connection conn) throws Exception {\n+\n+        try {\n+            conn.setAutoCommit(false);\n+\n+            executeDeleteQuery(conn, DBConstants.DELETE_USER_PERMISSIONS_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, DBConstants.DELETE_ROLE_PERMISSIONS_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, DBConstants.DELETE_PERMISSION_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, ProfileDBConstant.DELETE_CLAIM_BEHAVIOR_BY_TENANT_ID, tenantId);\n+            executeDeleteQuery(conn, ProfileDBConstant.DELETE_PROFILE_CONFIG_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, ClaimDBConstants.DELETE_CLAIM_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, ClaimDBConstants.DELETE_DIALECT_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_USER_PROPERTY_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_DOMAIN_FROM_USER_ROLE_BY_TENANT_ID, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.REMOVE_USER_ROLES_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_ROLES_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_USERS_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, HybridJDBCConstants.DELETE_ROLES_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, HybridJDBCConstants.DELETE_REMEMBERME_VALUES_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, TenantConstants.DELETE_TENANT_SQL, tenantId);\n+\n+            conn.commit();\n+        } catch (Exception e) {\n+            conn.rollback();\n+            String errorMsg = \"An error occurred while deleting um data for tenant: \" + tenantId;\n+            throw new Exception(errorMsg, e);\n+        } finally {\n+            conn.close();\n+        }\n+    }\n+\n+    /**\n+     * Execute deletion queries.\n+     *\n+     * @param conn DB connection\n+     * @param query SQL query\n+     * @param tenantId Id of the tenant\n+     * @throws Exception\n+     */\n+    private static void executeDeleteQuery(Connection conn, String query, int tenantId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5e0844453b1976ac5f452925f6c393553c8c33"}, "originalPosition": 97}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc75e5e2eb7fd3a0e9e3f6317582df0954a21f9f", "author": {"user": {"login": "sumedhe", "name": "Sumedhe Dissanayake"}}, "url": "https://github.com/wso2/carbon-kernel/commit/cc75e5e2eb7fd3a0e9e3f6317582df0954a21f9f", "committedDate": "2020-06-01T20:24:00Z", "message": "Fix minor issues"}, "afterCommit": {"oid": "3bbb6d67b542ec334acd35e0b6e40d0705626c0e", "author": {"user": {"login": "sumedhe", "name": "Sumedhe Dissanayake"}}, "url": "https://github.com/wso2/carbon-kernel/commit/3bbb6d67b542ec334acd35e0b6e40d0705626c0e", "committedDate": "2020-06-01T20:29:15Z", "message": "Fix minor issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bbb6d67b542ec334acd35e0b6e40d0705626c0e", "author": {"user": {"login": "sumedhe", "name": "Sumedhe Dissanayake"}}, "url": "https://github.com/wso2/carbon-kernel/commit/3bbb6d67b542ec334acd35e0b6e40d0705626c0e", "committedDate": "2020-06-01T20:29:15Z", "message": "Fix minor issues"}, "afterCommit": {"oid": "6756f163dee5a07d2deb7e74fea59ce102b2f14f", "author": {"user": {"login": "sumedhe", "name": "Sumedhe Dissanayake"}}, "url": "https://github.com/wso2/carbon-kernel/commit/6756f163dee5a07d2deb7e74fea59ce102b2f14f", "committedDate": "2020-06-11T19:44:09Z", "message": "Fix minor issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMDUxNDUz", "url": "https://github.com/wso2/carbon-kernel/pull/2692#pullrequestreview-433051453", "createdAt": "2020-06-18T08:24:06Z", "commit": {"oid": "6756f163dee5a07d2deb7e74fea59ce102b2f14f"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwODoyNDowNlrOGlk2CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwODoyODowOVrOGllAPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA1NDE1Mg==", "bodyText": "These should not be used from Identity Server. Improved claim manager functionality is moved to the carbon-identity-framework repo. Check if you have some necessary changes there as well.", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r442054152", "createdAt": "2020-06-18T08:24:06Z", "author": {"login": "madurangasiriwardena"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/claim/dao/ClaimDBConstants.java", "diffHunk": "@@ -27,6 +27,7 @@\n     public static final String DELETE_CLAIM_SQL = \"DELETE FROM UM_CLAIM WHERE UM_CLAIM_URI=? AND \" +\n             \"UM_DIALECT_ID=(SELECT UM_ID FROM UM_DIALECT WHERE UM_DIALECT_URI=? \" +\n             \"AND UM_TENANT_ID=?) AND UM_TENANT_ID=?\";\n+    public static final String DELETE_CLAIM_BY_TENANT_ID_SQL = \"DELETE FROM UM_CLAIM WHERE UM_TENANT_ID=?\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6756f163dee5a07d2deb7e74fea59ce102b2f14f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA1NTQ0NA==", "bodyText": "I don't see any advantage of extracting this method.", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r442055444", "createdAt": "2020-06-18T08:26:06Z", "author": {"login": "madurangasiriwardena"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -905,6 +910,23 @@ public void deleteTenant(int tenantId, boolean removeFromPersistentStorage)\n         }\n     }\n \n+    /**\n+     * Delete all tenant information related to tenant stored in UM tables.\n+     *\n+     * @param tenantId Id of the tenant\n+     * @throws UserStoreException\n+     */\n+    public void deleteTenantUMData(int tenantId) throws UserStoreException {\n+\n+        try {\n+            Connection conn = getDBConnection();\n+            deleteTenantUMData(tenantId, conn);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6756f163dee5a07d2deb7e74fea59ce102b2f14f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA1NTY3NA==", "bodyText": "use try with resource to close the connection.", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r442055674", "createdAt": "2020-06-18T08:26:31Z", "author": {"login": "madurangasiriwardena"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -1201,4 +1223,73 @@ private boolean checkUniqueIdColumnInTable() throws UserStoreException {\n         }\n         return false;\n     }\n+\n+    /**\n+     * Delete tenant UM Data.\n+     *\n+     * @param tenantId Id of the tenant\n+     * @param conn DB connection\n+     * @throws Exception\n+     */\n+    private static void deleteTenantUMData(int tenantId, Connection conn) throws SQLException {\n+\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6756f163dee5a07d2deb7e74fea59ce102b2f14f"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA1Njc2NQ==", "bodyText": "use try with resource to close the prepared statement.", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r442056765", "createdAt": "2020-06-18T08:28:09Z", "author": {"login": "madurangasiriwardena"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -1201,4 +1223,73 @@ private boolean checkUniqueIdColumnInTable() throws UserStoreException {\n         }\n         return false;\n     }\n+\n+    /**\n+     * Delete tenant UM Data.\n+     *\n+     * @param tenantId Id of the tenant\n+     * @param conn DB connection\n+     * @throws Exception\n+     */\n+    private static void deleteTenantUMData(int tenantId, Connection conn) throws SQLException {\n+\n+        try {\n+            conn.setAutoCommit(false);\n+\n+            executeDeleteQuery(conn, DBConstants.DELETE_USER_PERMISSIONS_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, DBConstants.DELETE_ROLE_PERMISSIONS_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, DBConstants.DELETE_PERMISSION_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, ProfileDBConstant.DELETE_CLAIM_BEHAVIOR_BY_TENANT_ID, tenantId);\n+            executeDeleteQuery(conn, ProfileDBConstant.DELETE_PROFILE_CONFIG_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, ClaimDBConstants.DELETE_CLAIM_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, ClaimDBConstants.DELETE_DIALECT_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_USER_PROPERTY_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_DOMAIN_FROM_USER_ROLE_BY_TENANT_ID, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.REMOVE_USER_ROLES_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_ROLES_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_USERS_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, HybridJDBCConstants.DELETE_ROLES_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, HybridJDBCConstants.DELETE_REMEMBERME_VALUES_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, TenantConstants.DELETE_TENANT_SQL, tenantId);\n+\n+            conn.commit();\n+        } catch (SQLException e) {\n+            conn.rollback();\n+            String errorMsg = \"An error occurred while deleting um data for tenant: \" + tenantId;\n+            throw new SQLException(errorMsg, e);\n+        } finally {\n+            conn.close();\n+        }\n+    }\n+\n+    /**\n+     * Execute deletion queries.\n+     *\n+     * @param conn DB connection\n+     * @param query SQL query\n+     * @param tenantId Id of the tenant\n+     * @throws Exception\n+     */\n+    private static void executeDeleteQuery(Connection conn, String query, int tenantId)  throws SQLException {\n+\n+        PreparedStatement prepStmt = null;\n+        try {\n+            prepStmt = conn.prepareStatement(query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6756f163dee5a07d2deb7e74fea59ce102b2f14f"}, "originalPosition": 110}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzOTY2Mjg1", "url": "https://github.com/wso2/carbon-kernel/pull/2692#pullrequestreview-433966285", "createdAt": "2020-06-19T10:21:35Z", "commit": {"oid": "6756f163dee5a07d2deb7e74fea59ce102b2f14f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMDoyMTozNVrOGmP2ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMDoyMTozNVrOGmP2ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc1ODc1Ng==", "bodyText": "What is the default behavior of executing this? Are we deleting users and roles with the tenant deletion by default or do we have to enable the config?", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r442758756", "createdAt": "2020-06-19T10:21:35Z", "author": {"login": "IsuraD"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -905,6 +910,23 @@ public void deleteTenant(int tenantId, boolean removeFromPersistentStorage)\n         }\n     }\n \n+    /**\n+     * Delete all tenant information related to tenant stored in UM tables.\n+     *\n+     * @param tenantId Id of the tenant\n+     * @throws UserStoreException\n+     */\n+    public void deleteTenantUMData(int tenantId) throws UserStoreException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6756f163dee5a07d2deb7e74fea59ce102b2f14f"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6756f163dee5a07d2deb7e74fea59ce102b2f14f", "author": {"user": {"login": "sumedhe", "name": "Sumedhe Dissanayake"}}, "url": "https://github.com/wso2/carbon-kernel/commit/6756f163dee5a07d2deb7e74fea59ce102b2f14f", "committedDate": "2020-06-11T19:44:09Z", "message": "Fix minor issues"}, "afterCommit": {"oid": "ad93e58bb86d06edf48f8b55b19a0aa622cdd986", "author": {"user": {"login": "sumedhe", "name": "Sumedhe Dissanayake"}}, "url": "https://github.com/wso2/carbon-kernel/commit/ad93e58bb86d06edf48f8b55b19a0aa622cdd986", "committedDate": "2020-06-21T20:55:01Z", "message": "Implement UMData deletion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69f3c9724053f6a161d626b22f5853498f2fd9c2", "author": {"user": {"login": "sumedhe", "name": "Sumedhe Dissanayake"}}, "url": "https://github.com/wso2/carbon-kernel/commit/69f3c9724053f6a161d626b22f5853498f2fd9c2", "committedDate": "2020-07-27T04:45:31Z", "message": "Implement UMData deletion"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad93e58bb86d06edf48f8b55b19a0aa622cdd986", "author": {"user": {"login": "sumedhe", "name": "Sumedhe Dissanayake"}}, "url": "https://github.com/wso2/carbon-kernel/commit/ad93e58bb86d06edf48f8b55b19a0aa622cdd986", "committedDate": "2020-06-21T20:55:01Z", "message": "Implement UMData deletion"}, "afterCommit": {"oid": "69f3c9724053f6a161d626b22f5853498f2fd9c2", "author": {"user": {"login": "sumedhe", "name": "Sumedhe Dissanayake"}}, "url": "https://github.com/wso2/carbon-kernel/commit/69f3c9724053f6a161d626b22f5853498f2fd9c2", "committedDate": "2020-07-27T04:45:31Z", "message": "Implement UMData deletion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0MzQ1OTk3", "url": "https://github.com/wso2/carbon-kernel/pull/2692#pullrequestreview-464345997", "createdAt": "2020-08-10T15:36:11Z", "commit": {"oid": "69f3c9724053f6a161d626b22f5853498f2fd9c2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjY2NDU5", "url": "https://github.com/wso2/carbon-kernel/pull/2692#pullrequestreview-561266459", "createdAt": "2021-01-04T19:02:30Z", "commit": {"oid": "69f3c9724053f6a161d626b22f5853498f2fd9c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOTowMjozMFrOIN9TXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOTowMjozMFrOIN9TXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUwNjc4MQ==", "bodyText": "Fix formatting issues.", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r551506781", "createdAt": "2021-01-04T19:02:30Z", "author": {"login": "ashensw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -1201,4 +1249,24 @@ private boolean checkUniqueIdColumnInTable() throws UserStoreException {\n         }\n         return false;\n     }\n+\n+    /**\n+     * Execute deletion queries.\n+     *\n+     * @param conn DB connection\n+     * @param query SQL query\n+     * @param tenantId Id of the tenant\n+     * @throws Exception\n+     */\n+    private void executeDeleteQuery(Connection conn, String query, int tenantId)  throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f3c9724053f6a161d626b22f5853498f2fd9c2"}, "originalPosition": 95}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjY4MDM0", "url": "https://github.com/wso2/carbon-kernel/pull/2692#pullrequestreview-561268034", "createdAt": "2021-01-04T19:05:04Z", "commit": {"oid": "69f3c9724053f6a161d626b22f5853498f2fd9c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOTowNTowNFrOIN9YMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOTowNTowNFrOIN9YMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUwODAxNg==", "bodyText": "Add the specific Exception type. Also, the param descriptions should start with a capital and end with a full stop. Fix all the other comments accrodingly.", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r551508016", "createdAt": "2021-01-04T19:05:04Z", "author": {"login": "ashensw"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -1201,4 +1249,24 @@ private boolean checkUniqueIdColumnInTable() throws UserStoreException {\n         }\n         return false;\n     }\n+\n+    /**\n+     * Execute deletion queries.\n+     *\n+     * @param conn DB connection\n+     * @param query SQL query\n+     * @param tenantId Id of the tenant\n+     * @throws Exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f3c9724053f6a161d626b22f5853498f2fd9c2"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczOTg4Nzc5", "url": "https://github.com/wso2/carbon-kernel/pull/2692#pullrequestreview-573988779", "createdAt": "2021-01-22T06:47:24Z", "commit": {"oid": "69f3c9724053f6a161d626b22f5853498f2fd9c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwNjo0NzoyNFrOIYXabg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwNjo0NzoyNFrOIYXabg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQyMDMzNA==", "bodyText": "Current practice is either handle exception and log it with appropriate information. OR throw it.  Log and throw is discouraged as it fills up the logs unnecessarily", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r562420334", "createdAt": "2021-01-22T06:47:24Z", "author": {"login": "ruwanta"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -905,6 +909,50 @@ public void deleteTenant(int tenantId, boolean removeFromPersistentStorage)\n         }\n     }\n \n+    /**\n+     * Delete all tenant information related to tenant stored in UM tables.\n+     *\n+     * @param tenantId Id of the tenant\n+     * @throws UserStoreException\n+     */\n+    @Override\n+    public void deleteTenantUMData(int tenantId) throws UserStoreException {\n+\n+        ServerConfigurationService serverConfigurationService = UserStoreMgtDSComponent.getServerConfigurationService();\n+\n+        try (Connection conn = getDBConnection()) {\n+            conn.setAutoCommit(false);\n+\n+            executeDeleteQuery(conn, DBConstants.DELETE_USER_PERMISSIONS_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, DBConstants.DELETE_ROLE_PERMISSIONS_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, DBConstants.DELETE_PERMISSION_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_USER_PROPERTY_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.DELETE_DOMAIN_FROM_USER_ROLE_BY_TENANT_ID, tenantId);\n+            executeDeleteQuery(conn, JDBCRealmConstants.REMOVE_USER_ROLES_BY_TENANT_ID_SQL, tenantId);\n+\n+            executeDeleteQuery(conn, HybridJDBCConstants.DELETE_ROLES_BY_TENANT_ID_SQL, tenantId);\n+            executeDeleteQuery(conn, HybridJDBCConstants.DELETE_REMEMBERME_VALUES_BY_TENANT_ID_SQL, tenantId);\n+\n+            if (Boolean.parseBoolean(serverConfigurationService\n+                    .getFirstProperty(\"Tenant.DeletePrimaryUsersOnTenantDeletion\"))) {\n+                executeDeleteQuery(conn, JDBCRealmConstants.DELETE_ROLES_BY_TENANT_ID_SQL, tenantId);\n+                executeDeleteQuery(conn, JDBCRealmConstants.DELETE_USERS_BY_TENANT_ID_SQL, tenantId);\n+            } else {\n+                if (log.isDebugEnabled()) {\n+                    log.debug(\"Tenant.DeletePrimaryUsersOnTenantDeletion flag is not enabled in carbon.xml. \" +\n+                            \"Users and Roles will not be deleted.\");\n+                }\n+            }\n+\n+            conn.commit();\n+        } catch (SQLException e) {\n+            String errorMsg = \"An error occurred while deleting um data for tenant: \" + tenantId;\n+            log.error(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f3c9724053f6a161d626b22f5853498f2fd9c2"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczOTg5MDA4", "url": "https://github.com/wso2/carbon-kernel/pull/2692#pullrequestreview-573989008", "createdAt": "2021-01-22T06:47:58Z", "commit": {"oid": "69f3c9724053f6a161d626b22f5853498f2fd9c2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwNjo0Nzo1OVrOIYXbTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQwNjo0Nzo1OVrOIYXbTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjQyMDU1OA==", "bodyText": "Log and throw the same exception is no longer considered best practice", "url": "https://github.com/wso2/carbon-kernel/pull/2692#discussion_r562420558", "createdAt": "2021-01-22T06:47:59Z", "author": {"login": "ruwanta"}, "path": "core/org.wso2.carbon.user.core/src/main/java/org/wso2/carbon/user/core/tenant/JDBCTenantManager.java", "diffHunk": "@@ -1201,4 +1249,24 @@ private boolean checkUniqueIdColumnInTable() throws UserStoreException {\n         }\n         return false;\n     }\n+\n+    /**\n+     * Execute deletion queries.\n+     *\n+     * @param conn DB connection\n+     * @param query SQL query\n+     * @param tenantId Id of the tenant\n+     * @throws Exception\n+     */\n+    private void executeDeleteQuery(Connection conn, String query, int tenantId)  throws SQLException {\n+\n+        try (PreparedStatement prepStmt = conn.prepareStatement(query)) {\n+            prepStmt.setInt(1, tenantId);\n+            prepStmt.executeUpdate();\n+        } catch (SQLException e) {\n+            String errMsg = \"Error executing query \" + query + \" for tenant: \" + tenantId;\n+            log.error(errMsg, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69f3c9724053f6a161d626b22f5853498f2fd9c2"}, "originalPosition": 102}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2040, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}