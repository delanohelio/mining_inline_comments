{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNDU3NDM1", "number": 9330, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNDozNzoxMlrOENgW2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNTozNzo0MlrOENgoSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTk3MDgxOnYy", "diffSide": "RIGHT", "path": "OsmAnd-java/src/main/java/net/osmand/GPXUtilities.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNDozNzoxMlrOGwNM7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNDozNzoxMlrOGwNM7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwMTEzNA==", "bodyText": "Why put null?", "url": "https://github.com/osmandapp/OsmAnd/pull/9330#discussion_r453201134", "createdAt": "2020-07-11T14:37:12Z", "author": {"login": "max-klaus"}, "path": "OsmAnd-java/src/main/java/net/osmand/GPXUtilities.java", "diffHunk": "@@ -1511,6 +1513,139 @@ public QuadRect getRect() {\n \t\t\t}\n \t\t\treturn new QuadRect(left, top, right, bottom);\n \t\t}\n+\n+\t\tpublic int getGradientScaleColor(GradientScaleType gradientScaleType, int defColor) {\n+\t\t\tString clrValue = null;\n+\t\t\tif (extensions != null) {\n+\t\t\t\tclrValue = extensions.get(gradientScaleType.getTypeName());\n+\t\t\t}\n+\t\t\treturn parseColor(clrValue, defColor);\n+\t\t}\n+\n+\t\tpublic void setGradientScaleColor(GradientScaleType gradientScaleType, int gradientScaleColor) {\n+\t\t\tgetExtensionsToWrite().put(gradientScaleType.getTypeName(), Algorithms.colorToString(gradientScaleColor));\n+\t\t}\n+\n+\t\tpublic GradientScaleType getGradientScaleType() {\n+\t\t\tif (extensions != null) {\n+\t\t\t\tString gradientScaleTypeName = extensions.get(\"gradient_scale_type\");\n+\t\t\t\tif (!Algorithms.isEmpty(gradientScaleTypeName)) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\treturn GradientScaleType.valueOf(gradientScaleTypeName);\n+\t\t\t\t\t} catch (IllegalArgumentException e) {\n+\t\t\t\t\t\tlog.error(\"Error reading gradientScaleType\", e);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tpublic void setGradientScaleType(GradientScaleType gradientScaleType) {\n+\t\t\tgetExtensionsToWrite().put(\"gradient_scale_type\", gradientScaleType != null ? gradientScaleType.name() : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eabba3489cecc6129d35829114a294c2be66052"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTk3MTAzOnYy", "diffSide": "RIGHT", "path": "OsmAnd-java/src/main/java/net/osmand/GPXUtilities.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNDozNzoxOFrOGwNNBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNDozNzoxOFrOGwNNBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwMTE1OQ==", "bodyText": "Why put null?", "url": "https://github.com/osmandapp/OsmAnd/pull/9330#discussion_r453201159", "createdAt": "2020-07-11T14:37:18Z", "author": {"login": "max-klaus"}, "path": "OsmAnd-java/src/main/java/net/osmand/GPXUtilities.java", "diffHunk": "@@ -1511,6 +1513,139 @@ public QuadRect getRect() {\n \t\t\t}\n \t\t\treturn new QuadRect(left, top, right, bottom);\n \t\t}\n+\n+\t\tpublic int getGradientScaleColor(GradientScaleType gradientScaleType, int defColor) {\n+\t\t\tString clrValue = null;\n+\t\t\tif (extensions != null) {\n+\t\t\t\tclrValue = extensions.get(gradientScaleType.getTypeName());\n+\t\t\t}\n+\t\t\treturn parseColor(clrValue, defColor);\n+\t\t}\n+\n+\t\tpublic void setGradientScaleColor(GradientScaleType gradientScaleType, int gradientScaleColor) {\n+\t\t\tgetExtensionsToWrite().put(gradientScaleType.getTypeName(), Algorithms.colorToString(gradientScaleColor));\n+\t\t}\n+\n+\t\tpublic GradientScaleType getGradientScaleType() {\n+\t\t\tif (extensions != null) {\n+\t\t\t\tString gradientScaleTypeName = extensions.get(\"gradient_scale_type\");\n+\t\t\t\tif (!Algorithms.isEmpty(gradientScaleTypeName)) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\treturn GradientScaleType.valueOf(gradientScaleTypeName);\n+\t\t\t\t\t} catch (IllegalArgumentException e) {\n+\t\t\t\t\t\tlog.error(\"Error reading gradientScaleType\", e);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tpublic void setGradientScaleType(GradientScaleType gradientScaleType) {\n+\t\t\tgetExtensionsToWrite().put(\"gradient_scale_type\", gradientScaleType != null ? gradientScaleType.name() : null);\n+\t\t}\n+\n+\t\tpublic GpxSplitType getSplitType() {\n+\t\t\tif (extensions != null) {\n+\t\t\t\tString gradientScaleTypeName = extensions.get(\"split_type\");\n+\t\t\t\tif (!Algorithms.isEmpty(gradientScaleTypeName)) {\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\treturn GpxSplitType.valueOf(gradientScaleTypeName);\n+\t\t\t\t\t} catch (IllegalArgumentException e) {\n+\t\t\t\t\t\tlog.error(\"Error reading GpxSplitType\", e);\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\treturn null;\n+\t\t}\n+\n+\t\tpublic void setSplitType(GpxSplitType gpxSplitType) {\n+\t\t\tgetExtensionsToWrite().put(\"split_type\", gpxSplitType != null ? gpxSplitType.name() : null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eabba3489cecc6129d35829114a294c2be66052"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjAwNjM0OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/helpers/ImportHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNToyNTo0NlrOGwNdqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNToyNTo0NlrOGwNdqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwNTQxOQ==", "bodyText": "Introduce new constructor public GpxDataItem(File file, GPXFile gpx) and drop all these setters.", "url": "https://github.com/osmandapp/OsmAnd/pull/9330#discussion_r453205419", "createdAt": "2020-07-11T15:25:46Z", "author": {"login": "max-klaus"}, "path": "OsmAnd/src/net/osmand/plus/helpers/ImportHelper.java", "diffHunk": "@@ -1018,7 +1019,18 @@ private String saveImport(final GPXFile gpxFile, final String fileName, final bo\n \t\t\t\t\tFile file = new File(gpxFile.path);\n \t\t\t\t\tif (!destinationExists) {\n \t\t\t\t\t\tGPXDatabase.GpxDataItem item = new GPXDatabase.GpxDataItem(file, gpxFile.getColor(0));\n+\t\t\t\t\t\titem.setWidth(gpxFile.getWidth(null));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eabba3489cecc6129d35829114a294c2be66052"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjAxNDM0OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/views/GPXLayer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNTozNTo1M1rOGwNhaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTowNzoyMlrOGwfttQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwNjM3Nw==", "bodyText": "7?", "url": "https://github.com/osmandapp/OsmAnd/pull/9330#discussion_r453206377", "createdAt": "2020-07-11T15:35:53Z", "author": {"login": "max-klaus"}, "path": "OsmAnd/src/net/osmand/plus/views/GPXLayer.java", "diffHunk": "@@ -213,36 +209,36 @@ public void onPrepareBufferImage(Canvas canvas, RotatedTileBox tileBox, DrawSett\n \t\t\t}\n \t\t\tdrawSelectedFilesSplits(canvas, tileBox, selectedGPXFiles, settings);\n \t\t\tdrawSelectedFilesPoints(canvas, tileBox, selectedGPXFiles);\n+\t\t\tdrawSelectedFilesStartEndPoints(canvas, tileBox, selectedGPXFiles);\n \t\t}\n \t\tif (textLayer != null && isTextVisible()) {\n \t\t\ttextLayer.putData(this, cache);\n \t\t}\n \n \t}\n \n-\tprivate int updatePaints(int color, boolean routePoints, boolean currentTrack, DrawSettings nightMode, RotatedTileBox tileBox) {\n+\tprivate int updatePaints(int color, String width, boolean routePoints, boolean currentTrack, DrawSettings drawSettings, RotatedTileBox tileBox) {\n \t\tRenderingRulesStorage rrs = view.getApplication().getRendererRegistry().getCurrentSelectedRenderer();\n-\t\tfinal boolean isNight = nightMode != null && nightMode.isNightMode();\n-\t\tint hsh = calculateHash(rrs, routePoints, isNight, tileBox.getMapDensity(), tileBox.getZoom(),\n-\t\t\tcurrentTrackColorPref.get(), currentTrackWidthPref.get());\n-\t\tif (hsh != cachedHash) {\n-\t\t\tcachedHash = hsh;\n+\t\tboolean nightMode = drawSettings != null && drawSettings.isNightMode();\n+\t\tint hash = calculateHash(rrs, cachedTrackWidth, routePoints, nightMode, tileBox.getMapDensity(), tileBox.getZoom(),\n+\t\t\t\tcurrentTrackColorPref.get(), currentTrackWidthPref.get());\n+\t\tif (hash != cachedHash) {\n+\t\t\tcachedHash = hash;\n \t\t\tcachedColor = ContextCompat.getColor(view.getApplication(), R.color.gpx_track);\n+\t\t\tdefaultTrackWidth = 7 * view.getDensity();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eabba3489cecc6129d35829114a294c2be66052"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUwNDQzNw==", "bodyText": "It was moved from here - https://github.com/osmandapp/Osmand/pull/9330/files#diff-3259c804faea84b62ab64ab1e0f87b01L277 for cases where track width parameter wasn't acquired from renderer or custom width has an invalid value.", "url": "https://github.com/osmandapp/OsmAnd/pull/9330#discussion_r453504437", "createdAt": "2020-07-13T09:07:22Z", "author": {"login": "Chumva"}, "path": "OsmAnd/src/net/osmand/plus/views/GPXLayer.java", "diffHunk": "@@ -213,36 +209,36 @@ public void onPrepareBufferImage(Canvas canvas, RotatedTileBox tileBox, DrawSett\n \t\t\t}\n \t\t\tdrawSelectedFilesSplits(canvas, tileBox, selectedGPXFiles, settings);\n \t\t\tdrawSelectedFilesPoints(canvas, tileBox, selectedGPXFiles);\n+\t\t\tdrawSelectedFilesStartEndPoints(canvas, tileBox, selectedGPXFiles);\n \t\t}\n \t\tif (textLayer != null && isTextVisible()) {\n \t\t\ttextLayer.putData(this, cache);\n \t\t}\n \n \t}\n \n-\tprivate int updatePaints(int color, boolean routePoints, boolean currentTrack, DrawSettings nightMode, RotatedTileBox tileBox) {\n+\tprivate int updatePaints(int color, String width, boolean routePoints, boolean currentTrack, DrawSettings drawSettings, RotatedTileBox tileBox) {\n \t\tRenderingRulesStorage rrs = view.getApplication().getRendererRegistry().getCurrentSelectedRenderer();\n-\t\tfinal boolean isNight = nightMode != null && nightMode.isNightMode();\n-\t\tint hsh = calculateHash(rrs, routePoints, isNight, tileBox.getMapDensity(), tileBox.getZoom(),\n-\t\t\tcurrentTrackColorPref.get(), currentTrackWidthPref.get());\n-\t\tif (hsh != cachedHash) {\n-\t\t\tcachedHash = hsh;\n+\t\tboolean nightMode = drawSettings != null && drawSettings.isNightMode();\n+\t\tint hash = calculateHash(rrs, cachedTrackWidth, routePoints, nightMode, tileBox.getMapDensity(), tileBox.getZoom(),\n+\t\t\t\tcurrentTrackColorPref.get(), currentTrackWidthPref.get());\n+\t\tif (hash != cachedHash) {\n+\t\t\tcachedHash = hash;\n \t\t\tcachedColor = ContextCompat.getColor(view.getApplication(), R.color.gpx_track);\n+\t\t\tdefaultTrackWidth = 7 * view.getDensity();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwNjM3Nw=="}, "originalCommit": {"oid": "4eabba3489cecc6129d35829114a294c2be66052"}, "originalPosition": 168}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjAxNTQ3OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/views/GPXLayer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNTozNzo0MlrOGwNh-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNTozNzo0MlrOGwNh-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwNjUyMA==", "bodyText": "searchTrackWidth > fetchTrackWidth or acquireTrackWidth", "url": "https://github.com/osmandapp/OsmAnd/pull/9330#discussion_r453206520", "createdAt": "2020-07-11T15:37:42Z", "author": {"login": "max-klaus"}, "path": "OsmAnd/src/net/osmand/plus/views/GPXLayer.java", "diffHunk": "@@ -262,32 +258,60 @@ private int updatePaints(int color, boolean routePoints, boolean currentTrack, D\n \t\t\t\t\trc.setDensityValue((float) tileBox.getMapDensity());\n \t\t\t\t\tcachedColor = req.getIntPropertyValue(rrs.PROPS.R_COLOR);\n \t\t\t\t\tosmandRenderer.updatePaint(req, paint, 0, false, rc);\n-\t\t\t\t\tisPaint2 = osmandRenderer.updatePaint(req, paint2, 1, false, rc);\n-\t\t\t\t\tisPaint_1 = osmandRenderer.updatePaint(req, paint_1, -1, false, rc);\n-\t\t\t\t\tisShadowPaint = req.isSpecified(rrs.PROPS.R_SHADOW_RADIUS);\n-\t\t\t\t\tif (isShadowPaint) {\n-\t\t\t\t\t\tColorFilter cf = new PorterDuffColorFilter(req.getIntPropertyValue(rrs.PROPS.R_SHADOW_COLOR),\n-\t\t\t\t\t\t\t\tMode.SRC_IN);\n-\t\t\t\t\t\tshadowPaint.setColorFilter(cf);\n-\t\t\t\t\t\tshadowPaint.setStrokeWidth(paint.getStrokeWidth() + 2\n-\t\t\t\t\t\t\t\t* rc.getComplexValue(req, rrs.PROPS.R_SHADOW_RADIUS));\n+\n+\t\t\t\t\tif (req.isSpecified(rrs.PROPS.R_SHADOW_RADIUS)) {\n+\t\t\t\t\t\tint shadowColor = req.getIntPropertyValue(rrs.PROPS.R_SHADOW_COLOR);\n+\t\t\t\t\t\tfloat shadowRadius = rc.getComplexValue(req, rrs.PROPS.R_SHADOW_RADIUS);\n+\t\t\t\t\t\tshadowPaint.setColorFilter(new PorterDuffColorFilter(shadowColor, Mode.SRC_IN));\n+\t\t\t\t\t\tshadowPaint.setStrokeWidth(paint.getStrokeWidth() + 2 * shadowRadius);\n+\t\t\t\t\t}\n+\t\t\t\t\tfor (String key : cachedTrackWidth.keySet()) {\n+\t\t\t\t\t\tsearchTrackWidth(key, rrs, req, rc);\n \t\t\t\t\t}\n \t\t\t\t} else {\n-\t\t\t\t\tSystem.err.println(\"Rendering attribute gpx is not found !\");\n-\t\t\t\t\tpaint.setStrokeWidth(7 * view.getDensity());\n+\t\t\t\t\tlog.error(\"Rendering attribute gpx is not found !\");\n+\t\t\t\t\tfor (String key : cachedTrackWidth.keySet()) {\n+\t\t\t\t\t\tcachedTrackWidth.put(key, defaultTrackWidth);\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \t\tpaint.setColor(color == 0 ? cachedColor : color);\n+\t\tFloat strikeWidth = cachedTrackWidth.get(width);\n+\t\tif (strikeWidth != null) {\n+\t\t\tpaint.setStrokeWidth(strikeWidth);\n+\t\t}\n \t\treturn cachedColor;\n \t}\n \n+\tprivate void searchTrackWidth(String widthKey, RenderingRulesStorage rrs, RenderingRuleSearchRequest req, RenderingContext rc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4eabba3489cecc6129d35829114a294c2be66052"}, "originalPosition": 233}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3478, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}