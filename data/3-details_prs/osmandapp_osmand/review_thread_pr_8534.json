{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MzU5MTAx", "number": 8534, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo0Mzo0NlrODiX8rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjoxODoyMVrODiY0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MzcwNTQzOnYy", "diffSide": "RIGHT", "path": "OsmAnd/res/values/strings.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo0Mzo0N1rOFtlXyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo0Mzo0N1rOFtlXyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0MjUzOA==", "bodyText": "Translations", "url": "https://github.com/osmandapp/OsmAnd/pull/8534#discussion_r383342538", "createdAt": "2020-02-24T15:43:47Z", "author": {"login": "max-klaus"}, "path": "OsmAnd/res/values/strings.xml", "diffHunk": "@@ -72,7 +72,7 @@\n     <string name=\"sunset_at\">Sunset at %1$s</string>\n     <string name=\"sunrise_at\">Sunrise at %1$s</string>\n     <string name=\"shared_string_routing\">Routing</string>\n-    <string name=\"shared_string_custom_rendering_style\">Custom rendering style</string>\n+    <string name=\"shared_string_custom_rendering_style\">Rendering styles</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff570d4b8103f73c172785a6cfe0b4eb6eaa33a7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzc1NTU3OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/SettingsHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1NTozOVrOFtl2Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1NTozOVrOFtl2Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MDM0Ng==", "bodyText": "Simplify", "url": "https://github.com/osmandapp/OsmAnd/pull/8534#discussion_r383350346", "createdAt": "2020-02-24T15:55:39Z", "author": {"login": "max-klaus"}, "path": "OsmAnd/src/net/osmand/plus/SettingsHelper.java", "diffHunk": "@@ -801,7 +805,7 @@ SettingsItemReader getReader() {\n \t\t\t\t@Override\n \t\t\t\tpublic void readFromStream(@NonNull InputStream inputStream) throws IOException, IllegalArgumentException {\n \t\t\t\t\tOutputStream output;\n-\t\t\t\t\tif (shouldReplace || !file.exists()) {\n+\t\t\t\t\tif (!file.exists() || file.exists() && shouldReplace) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff570d4b8103f73c172785a6cfe0b4eb6eaa33a7"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzc1Njg2OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/SettingsHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1NTo1NlrOFtl3FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1NTo1NlrOFtl3FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MDU0OA==", "bodyText": "Implement in superclass", "url": "https://github.com/osmandapp/OsmAnd/pull/8534#discussion_r383350548", "createdAt": "2020-02-24T15:55:56Z", "author": {"login": "max-klaus"}, "path": "OsmAnd/src/net/osmand/plus/SettingsHelper.java", "diffHunk": "@@ -1440,6 +1447,204 @@ public boolean writeToStream(@NonNull OutputStream outputStream) throws IOExcept\n \t\t}\n \t}\n \n+\tpublic static class AvoidRoadsSettingsItem extends CollectionSettingsItem<AvoidRoadInfo> {\n+\n+\t\tprivate OsmandApplication app;\n+\t\tprivate OsmandSettings settings;\n+\t\tprivate AvoidSpecificRoads specificRoads;\n+\n+\t\tpublic AvoidRoadsSettingsItem(@NonNull OsmandApplication app, @NonNull List<AvoidRoadInfo> items) {\n+\t\t\tsuper(SettingsItemType.AVOID_ROADS, items);\n+\t\t\tthis.app = app;\n+\t\t\tsettings = app.getSettings();\n+\t\t\tspecificRoads = app.getAvoidSpecificRoads();\n+\t\t\texistingItems = new ArrayList<>(specificRoads.getImpassableRoads().values());\n+\t\t\tduplicateItems = new ArrayList<>();\n+\t\t}\n+\n+\t\tAvoidRoadsSettingsItem(@NonNull OsmandApplication app, @NonNull JSONObject json) throws JSONException {\n+\t\t\tsuper(SettingsItemType.AVOID_ROADS, json);\n+\t\t\tthis.app = app;\n+\t\t\tsettings = app.getSettings();\n+\t\t\tspecificRoads = app.getAvoidSpecificRoads();\n+\t\t\texistingItems = new ArrayList<>(specificRoads.getImpassableRoads().values());\n+\t\t\tduplicateItems = new ArrayList<>();\n+\t\t}\n+\n+\t\t@NonNull\n+\t\t@Override\n+\t\tpublic String getName() {\n+\t\t\treturn \"avoid_roads\";\n+\t\t}\n+\n+\t\t@NonNull\n+\t\t@Override\n+\t\tpublic String getPublicName(@NonNull Context ctx) {\n+\t\t\treturn \"avoid_roads\";\n+\t\t}\n+\n+\t\t@NonNull\n+\t\t@Override\n+\t\tpublic String getFileName() {\n+\t\t\treturn getName() + \".json\";\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void apply() {\n+\t\t\tif (!items.isEmpty() || !duplicateItems.isEmpty()) {\n+\t\t\t\tfor (AvoidRoadInfo duplicate : duplicateItems) {\n+\t\t\t\t\tif (shouldReplace) {\n+\t\t\t\t\t\tLatLon latLon = new LatLon(duplicate.latitude, duplicate.longitude);\n+\t\t\t\t\t\tif (settings.removeImpassableRoad(latLon)) {\n+\t\t\t\t\t\t\tsettings.addImpassableRoad(duplicate);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tsettings.addImpassableRoad(renameItem(duplicate));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tfor (AvoidRoadInfo avoidRoad : items) {\n+\t\t\t\t\tsettings.addImpassableRoad(avoidRoad);\n+\t\t\t\t}\n+\t\t\t\tspecificRoads.loadImpassableRoads();\n+\t\t\t\tspecificRoads.initRouteObjects(true);\n+\t\t\t}\n+\t\t}\n+\n+\t\t@NonNull\n+\t\t@Override\n+\t\tpublic List<AvoidRoadInfo> excludeDuplicateItems() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff570d4b8103f73c172785a6cfe0b4eb6eaa33a7"}, "originalPosition": 174}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzc1ODA1OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/SettingsHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1NjoxNFrOFtl30w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo1NjoxNFrOFtl30w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM1MDczOQ==", "bodyText": "Implement equals in AvoidRoadInfo", "url": "https://github.com/osmandapp/OsmAnd/pull/8534#discussion_r383350739", "createdAt": "2020-02-24T15:56:14Z", "author": {"login": "max-klaus"}, "path": "OsmAnd/src/net/osmand/plus/SettingsHelper.java", "diffHunk": "@@ -1440,6 +1447,204 @@ public boolean writeToStream(@NonNull OutputStream outputStream) throws IOExcept\n \t\t}\n \t}\n \n+\tpublic static class AvoidRoadsSettingsItem extends CollectionSettingsItem<AvoidRoadInfo> {\n+\n+\t\tprivate OsmandApplication app;\n+\t\tprivate OsmandSettings settings;\n+\t\tprivate AvoidSpecificRoads specificRoads;\n+\n+\t\tpublic AvoidRoadsSettingsItem(@NonNull OsmandApplication app, @NonNull List<AvoidRoadInfo> items) {\n+\t\t\tsuper(SettingsItemType.AVOID_ROADS, items);\n+\t\t\tthis.app = app;\n+\t\t\tsettings = app.getSettings();\n+\t\t\tspecificRoads = app.getAvoidSpecificRoads();\n+\t\t\texistingItems = new ArrayList<>(specificRoads.getImpassableRoads().values());\n+\t\t\tduplicateItems = new ArrayList<>();\n+\t\t}\n+\n+\t\tAvoidRoadsSettingsItem(@NonNull OsmandApplication app, @NonNull JSONObject json) throws JSONException {\n+\t\t\tsuper(SettingsItemType.AVOID_ROADS, json);\n+\t\t\tthis.app = app;\n+\t\t\tsettings = app.getSettings();\n+\t\t\tspecificRoads = app.getAvoidSpecificRoads();\n+\t\t\texistingItems = new ArrayList<>(specificRoads.getImpassableRoads().values());\n+\t\t\tduplicateItems = new ArrayList<>();\n+\t\t}\n+\n+\t\t@NonNull\n+\t\t@Override\n+\t\tpublic String getName() {\n+\t\t\treturn \"avoid_roads\";\n+\t\t}\n+\n+\t\t@NonNull\n+\t\t@Override\n+\t\tpublic String getPublicName(@NonNull Context ctx) {\n+\t\t\treturn \"avoid_roads\";\n+\t\t}\n+\n+\t\t@NonNull\n+\t\t@Override\n+\t\tpublic String getFileName() {\n+\t\t\treturn getName() + \".json\";\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic void apply() {\n+\t\t\tif (!items.isEmpty() || !duplicateItems.isEmpty()) {\n+\t\t\t\tfor (AvoidRoadInfo duplicate : duplicateItems) {\n+\t\t\t\t\tif (shouldReplace) {\n+\t\t\t\t\t\tLatLon latLon = new LatLon(duplicate.latitude, duplicate.longitude);\n+\t\t\t\t\t\tif (settings.removeImpassableRoad(latLon)) {\n+\t\t\t\t\t\t\tsettings.addImpassableRoad(duplicate);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tsettings.addImpassableRoad(renameItem(duplicate));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tfor (AvoidRoadInfo avoidRoad : items) {\n+\t\t\t\t\tsettings.addImpassableRoad(avoidRoad);\n+\t\t\t\t}\n+\t\t\t\tspecificRoads.loadImpassableRoads();\n+\t\t\t\tspecificRoads.initRouteObjects(true);\n+\t\t\t}\n+\t\t}\n+\n+\t\t@NonNull\n+\t\t@Override\n+\t\tpublic List<AvoidRoadInfo> excludeDuplicateItems() {\n+\t\t\tfor (AvoidRoadInfo item : items) {\n+\t\t\t\tif (isDuplicate(item)) {\n+\t\t\t\t\tduplicateItems.add(item);\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\titems.removeAll(duplicateItems);\n+\t\t\treturn duplicateItems;\n+\t\t}\n+\n+\t\t@Override\n+\t\tpublic boolean isDuplicate(@NonNull AvoidRoadInfo item) {\n+\t\t\tfor (AvoidRoadInfo existingItem : existingItems) {\n+\t\t\t\tif (item.latitude == existingItem.latitude", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff570d4b8103f73c172785a6cfe0b4eb6eaa33a7"}, "originalPosition": 187}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3Mzg0NzUzOnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/SettingsHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjoxODoyMVrOFtmu3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNjoxODoyMVrOFtmu3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM2NDgyOA==", "bodyText": "Replace with if (items.contains(item))", "url": "https://github.com/osmandapp/OsmAnd/pull/8534#discussion_r383364828", "createdAt": "2020-02-24T16:18:21Z", "author": {"login": "max-klaus"}, "path": "OsmAnd/src/net/osmand/plus/SettingsHelper.java", "diffHunk": "@@ -1622,7 +1830,12 @@ void importItems(@NonNull File file, @NonNull List<SettingsItem> items) throws I\n \t\t\t\t\t\tif (item != null && collecting && item.shouldReadOnCollecting()\n \t\t\t\t\t\t\t\t|| item != null && !collecting && !item.shouldReadOnCollecting()) {\n \t\t\t\t\t\t\ttry {\n-\t\t\t\t\t\t\t\titem.getReader().readFromStream(ois);\n+\t\t\t\t\t\t\t\tfor (SettingsItem settingsItem : items) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff570d4b8103f73c172785a6cfe0b4eb6eaa33a7"}, "originalPosition": 325}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3378, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}