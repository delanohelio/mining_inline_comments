{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MTI1MTQ3", "number": 8746, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyMzozN1rODubJDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyNDoxM1rODubKEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDA1NzcyOnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/OsmAndAppCustomization.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyMzozN1rOGAaQTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyMzozN1rOGAaQTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MzM0MA==", "bodyText": "No ignore should always be in logs", "url": "https://github.com/osmandapp/OsmAnd/pull/8746#discussion_r403083340", "createdAt": "2020-04-03T15:23:37Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/OsmAndAppCustomization.java", "diffHunk": "@@ -227,18 +255,43 @@ public Bitmap getNavDrawerLogo() {\n \t}\n \n \tpublic boolean setNavDrawerLogo(String uri, @Nullable String packageName, @Nullable String intent) {\n+\t\tString connectedAppDirPath = IndexConstants.PLUGINS_DIR + packageName;\n+\t\tFile connectedAppDir = app.getAppPath(connectedAppDirPath);\n \t\tif (TextUtils.isEmpty(uri)) {\n-\t\t\tnavDrawerLogo = null;\n+\t\t\tapp.getSettings().NAV_DRAWER_LOGO.resetToDefault();\n+\t\t\tAlgorithms.removeAllFiles(connectedAppDir);\n \t\t} else {\n \t\t\ttry {\n-\t\t\t\tInputStream is = app.getContentResolver().openInputStream(Uri.parse(uri));\n+\t\t\t\tUri fileUri = Uri.parse(uri);\n+\t\t\t\tInputStream is = app.getContentResolver().openInputStream(fileUri);\n \t\t\t\tif (is != null) {\n-\t\t\t\t\tnavDrawerLogo = BitmapFactory.decodeStream(is);\n-\t\t\t\t\tis.close();\n-\n+\t\t\t\t\tString iconName = ImportHelper.getNameFromContentUri(app, fileUri);\n+\t\t\t\t\tif (!connectedAppDir.exists()) {\n+\t\t\t\t\t\tconnectedAppDir.mkdirs();\n+\t\t\t\t\t}\n+\t\t\t\t\tOutputStream fout = new FileOutputStream(new File(connectedAppDir, iconName));\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tAlgorithms.streamCopy(is, fout);\n+\t\t\t\t\t} finally {\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tis.close();\n+\t\t\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tfout.close();\n+\t\t\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t\tJSONObject json = new JSONObject();\n+\t\t\t\t\tjson.put(\"\", connectedAppDirPath + \"/\" + iconName);\n+\t\t\t\t\tapp.getSettings().NAV_DRAWER_LOGO.set(json.toString());\n \t\t\t\t}\n \t\t\t} catch (FileNotFoundException e) {\n \t\t\t\treturn false;\n+\t\t\t} catch (JSONException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a52a0b5dab9f0e202821ae37d399ca6078b7cc"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDA1ODIwOnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/OsmAndAppCustomization.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyMzo0NFrOGAaQmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyMzo0NFrOGAaQmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4MzQxNg==", "bodyText": "Use logging system", "url": "https://github.com/osmandapp/OsmAnd/pull/8746#discussion_r403083416", "createdAt": "2020-04-03T15:23:44Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/OsmAndAppCustomization.java", "diffHunk": "@@ -227,18 +255,43 @@ public Bitmap getNavDrawerLogo() {\n \t}\n \n \tpublic boolean setNavDrawerLogo(String uri, @Nullable String packageName, @Nullable String intent) {\n+\t\tString connectedAppDirPath = IndexConstants.PLUGINS_DIR + packageName;\n+\t\tFile connectedAppDir = app.getAppPath(connectedAppDirPath);\n \t\tif (TextUtils.isEmpty(uri)) {\n-\t\t\tnavDrawerLogo = null;\n+\t\t\tapp.getSettings().NAV_DRAWER_LOGO.resetToDefault();\n+\t\t\tAlgorithms.removeAllFiles(connectedAppDir);\n \t\t} else {\n \t\t\ttry {\n-\t\t\t\tInputStream is = app.getContentResolver().openInputStream(Uri.parse(uri));\n+\t\t\t\tUri fileUri = Uri.parse(uri);\n+\t\t\t\tInputStream is = app.getContentResolver().openInputStream(fileUri);\n \t\t\t\tif (is != null) {\n-\t\t\t\t\tnavDrawerLogo = BitmapFactory.decodeStream(is);\n-\t\t\t\t\tis.close();\n-\n+\t\t\t\t\tString iconName = ImportHelper.getNameFromContentUri(app, fileUri);\n+\t\t\t\t\tif (!connectedAppDir.exists()) {\n+\t\t\t\t\t\tconnectedAppDir.mkdirs();\n+\t\t\t\t\t}\n+\t\t\t\t\tOutputStream fout = new FileOutputStream(new File(connectedAppDir, iconName));\n+\t\t\t\t\ttry {\n+\t\t\t\t\t\tAlgorithms.streamCopy(is, fout);\n+\t\t\t\t\t} finally {\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tis.close();\n+\t\t\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\t\t\te.printStackTrace();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tfout.close();\n+\t\t\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\t\t\te.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a52a0b5dab9f0e202821ae37d399ca6078b7cc"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDA2MDMzOnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/osmedit/OsmEditingPlugin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyNDoxM1rOGAaR9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNToyNDoxM1rOGAaR9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA4Mzc2NA==", "bodyText": "ArrayList -> List", "url": "https://github.com/osmandapp/OsmAnd/pull/8746#discussion_r403083764", "createdAt": "2020-04-03T15:24:13Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/osmedit/OsmEditingPlugin.java", "diffHunk": "@@ -139,10 +140,12 @@ public OsmBugsDbHelper getDBBug() {\n //\tprivate EditingPOIDialogProvider poiActions;\n \n \t@Override\n-\tprotected void registerQuickActionTypes(List<QuickActionType> quickActionTypes) {\n+\tprotected List<QuickActionType> getQuickActionTypes() {\n+\t\tArrayList<QuickActionType> quickActionTypes = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16a52a0b5dab9f0e202821ae37d399ca6078b7cc"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3357, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}