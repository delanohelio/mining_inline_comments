{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0OTA3ODQ4", "number": 8457, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNToyMjo1NlrODfljyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxMjozMVrODfm01A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDQ3ODE3OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/views/RouteLayer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNToyMjo1NlrOFpX_Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNToyMjo1NlrOFpX_Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODkyODkxOA==", "bodyText": "Point of return to route calculated and passed to routeGeometry.drawSegments", "url": "https://github.com/osmandapp/OsmAnd/pull/8457#discussion_r378928918", "createdAt": "2020-02-13T15:22:56Z", "author": {"login": "MadWasp79"}, "path": "OsmAnd/src/net/osmand/plus/views/RouteLayer.java", "diffHunk": "@@ -1098,18 +1101,40 @@ public void drawLocations(RotatedTileBox tb, Canvas canvas, double topLatitude,\n \t\t\t\tLocation startLocation = new Location(\"transport\");\n \t\t\t\tstartLocation.setLatitude(start.getLatitude());\n \t\t\t\tstartLocation.setLongitude(start.getLongitude());\n-\t\t\t\trouteGeometry.drawSegments(tb, canvas, topLatitude, leftLongitude, bottomLatitude, rightLongitude, startLocation, 0, false);\n+\t\t\t\trouteGeometry.drawSegments(tb, canvas, topLatitude, leftLongitude, bottomLatitude, rightLongitude,\n+\t\t\t\t\t\tstartLocation, 0, false, null);\n \t\t\t}\n \t\t} else {\n \t\t\tRouteCalculationResult route = helper.getRoute();\n \t\t\trouteGeometry.clearTransportRoute();\n \t\t\trouteGeometry.updateRoute(tb, route);\n \t\t\tif (helper.getRoute().isShowOriginalRoute() && helper.getOriginalStartingLocation() != null) {\n \t\t\t\trouteGeometry.drawSegments(tb, canvas, topLatitude, leftLongitude, bottomLatitude, rightLongitude,\n-\t\t\t\t\t\thelper.getOriginalStartingLocation(),  0, true);\n+\t\t\t\t\t\thelper.getOriginalStartingLocation(),  0, true, null);\n \t\t\t} else {\n+\t\t\t\tLocation currentLoc = helper.getLastProjection();\n+\t\t\t\tint currentRoute = route == null ? 0 : route.getCurrentRoute();\n+\t\t\t\tLocation pointToReturn = null;\n+\t\t\t\tif (route != null && currentRoute > 0 && route.getRouteRecalcDistance() > 0) {\n+\t\t\t\t\tfinal Location from = routeGeometry.locations.get(currentRoute - 1);\n+\t\t\t\t\tfinal Location to = routeGeometry.locations.get(currentRoute);\n+\t\t\t\t\tfinal LatLon projection = MapUtils.getProjection(currentLoc.getLatitude(),\n+\t\t\t\t\t\t\tcurrentLoc.getLongitude(), from.getLatitude(), from.getLongitude(),\n+\t\t\t\t\t\t\tto.getLatitude(), to.getLongitude());\n+\n+\t\t\t\t\tfinal double deviation = MapUtils.getDistance(projection.getLatitude(), projection.getLongitude(), currentLoc.getLatitude(), currentLoc.getLongitude());\n+\t\t\t\t\tif (deviation < route.getRouteRecalcDistance()) {\n+\t\t\t\t\t\tdouble distFromProjectionToEnd = Math.sqrt(Math.pow(to.getLatitude() - projection.getLatitude(), 2) + Math.pow(to.getLongitude() - projection.getLongitude(), 2));\n+\t\t\t\t\t\tdouble coef = deviation / distFromProjectionToEnd;\n+\t\t\t\t\t\tpointToReturn = new Location(\"route_layer\");\n+\t\t\t\t\t\tpointToReturn.setLatitude(projection.getLatitude() + (to.getLatitude() - projection.getLatitude()) * coef);\n+\t\t\t\t\t\tpointToReturn.setLongitude(projection.getLongitude() + (to.getLongitude() - projection.getLatitude()) * coef);\n+\t\t\t\t\t\t//how to draw line to this point from lastProjection?!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "640fb6af3d1dfdfb90669dd061c121a2094ed88a"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDY4NTY0OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/routing/RouteCalculationResult.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxMjozMVrOFpaBUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjoxMjozMVrOFpaBUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk2MjI1OQ==", "bodyText": "formatting?", "url": "https://github.com/osmandapp/OsmAnd/pull/8457#discussion_r378962259", "createdAt": "2020-02-13T16:12:31Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/routing/RouteCalculationResult.java", "diffHunk": "@@ -113,6 +114,9 @@ public RouteCalculationResult(List<Location> list, List<RouteDirectionInfo> dire\n \t\tupdateDirectionsTime(this.directions, this.listDistance);\n \n \t\tthis.showOriginalRoute = params.showOriginalRoute;\n+\t\tthis.noRecalculations = params.noRecalculations;\n+\t\tif (params.routeRecalculationDistance != 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0d44e8ed46f829f7acd5d6d3fd3cac7e8af0a26"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3374, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}