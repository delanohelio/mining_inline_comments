{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2OTEyMjE3", "number": 10494, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxNDowNDo0M1rOFKSkkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxNDowNDo0M1rOFKSkkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2MzM0MzUyOnYy", "diffSide": "RIGHT", "path": "OsmAnd-java/src/main/java/net/osmand/util/GeoPointParserUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQxNDowNDo0M1rOIM_Oow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxMTozODozM1rOINPupA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4OTc2Mw==", "bodyText": "here should be a comment why do we set lat / lon to 0?\nI'm not sure if it's correct or not (probably it is)", "url": "https://github.com/osmandapp/OsmAnd/pull/10494#discussion_r550489763", "createdAt": "2020-12-31T14:04:43Z", "author": {"login": "vshcherb"}, "path": "OsmAnd-java/src/main/java/net/osmand/util/GeoPointParserUtil.java", "diffHunk": "@@ -558,6 +558,10 @@ public static GeoParsedPoint parse(final String uriString) {\n \t\t\t\tif (lat == 0.0 && lon == 0.0 && positionInSearchRequestMatcher.find()) {\n \t\t\t\t\tlat = Double.valueOf(positionInSearchRequestMatcher.group(1));\n \t\t\t\t\tlon = Double.valueOf(positionInSearchRequestMatcher.group(2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0205628a486fabb96b2dae5d637909d8292fcb2f"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc2MDEwMA==", "bodyText": "because from the line \"geo:0,0?q=Van+Bleiswijkstraat+66,+2582+LG+The+Hague\" in any case 66 and 2582 will be taken as latitude and longitude, which is wrong, because this is an address and there are a lot of such addresses. I decided to compare the minimum and maximum values \u200b\u200bfor coordinates in order to minimize the creation of incorrect coordinates.  maybe this is a temporary solution, maybe there are addresses that are in the min/max range, but nevertheless, similar addresses as from the issue are now processed normally, because further in the method there is a check for equality to 0.0 and the creation of a GeoParsedPoint from the searchRequest string", "url": "https://github.com/osmandapp/OsmAnd/pull/10494#discussion_r550760100", "createdAt": "2021-01-01T11:38:33Z", "author": {"login": "Skalii"}, "path": "OsmAnd-java/src/main/java/net/osmand/util/GeoPointParserUtil.java", "diffHunk": "@@ -558,6 +558,10 @@ public static GeoParsedPoint parse(final String uriString) {\n \t\t\t\tif (lat == 0.0 && lon == 0.0 && positionInSearchRequestMatcher.find()) {\n \t\t\t\t\tlat = Double.valueOf(positionInSearchRequestMatcher.group(1));\n \t\t\t\t\tlon = Double.valueOf(positionInSearchRequestMatcher.group(2));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQ4OTc2Mw=="}, "originalCommit": {"oid": "0205628a486fabb96b2dae5d637909d8292fcb2f"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3407, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}