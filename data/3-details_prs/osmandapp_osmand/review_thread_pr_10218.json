{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNDIxODA5", "number": 10218, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo0NTo1M1rOE6BfdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo1MToxMlrOE6Bodg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mjc3MzAwOnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/mapcontextmenu/MenuBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo0NTo1M1rOH01joA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo0NTo1M1rOH01joA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE2NTQ3Mg==", "bodyText": "Here should not be gone, it should be in separate request! And this request we should test with button present", "url": "https://github.com/osmandapp/OsmAnd/pull/10218#discussion_r525165472", "createdAt": "2020-11-17T13:45:53Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/mapcontextmenu/MenuBuilder.java", "diffHunk": "@@ -336,6 +336,8 @@ public void onClick(View view) {\n \t\tb.setTypeface(null, Typeface.BOLD);\n \t\tb.setText(context.getResources().getString(R.string.shared_string_add_photo));\n \t\tb.setBackgroundResource(R.drawable.btn_border_light);\n+\t\t//TODO feature under development\n+\t\tb.setVisibility(View.GONE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea9ba2925de6e5433cae3e4122b13a0d1b8578e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mjc3Njg2OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/mapcontextmenu/builders/cards/ImageCard.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo0Njo1MFrOH01mBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMDozNTozMFrOH3KPuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE2NjA4Nw==", "bodyText": "Here we need to fix pottential BUG! there is no clear evidence that\n((JSONObject) obj.get(0))\nhas no crash!", "url": "https://github.com/osmandapp/OsmAnd/pull/10218#discussion_r525166087", "createdAt": "2020-11-17T13:46:50Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/mapcontextmenu/builders/cards/ImageCard.java", "diffHunk": "@@ -509,6 +509,7 @@ private void getPicturesForPlace(List<ImageCard> result, long l) {\n \t\t\t\t\t\"Requesting location images...\", false, false);\n \t\t\ttry {\n \t\t\t\tif (!Algorithms.isEmpty(response)) {\n+\t\t\t\t\t//TODO extract place id\n \t\t\t\t\tJSONArray obj = new JSONObject(response).getJSONArray(\"objects\");\n \t\t\t\t\tJSONArray images = ((JSONObject) ((JSONObject) obj.get(0)).get(\"images\")).getJSONArray(\"outdoor\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea9ba2925de6e5433cae3e4122b13a0d1b8578e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYwMTU5NQ==", "bodyText": "try catchblock will handle the exception", "url": "https://github.com/osmandapp/OsmAnd/pull/10218#discussion_r527601595", "createdAt": "2020-11-20T10:35:30Z", "author": {"login": "angry010101"}, "path": "OsmAnd/src/net/osmand/plus/mapcontextmenu/builders/cards/ImageCard.java", "diffHunk": "@@ -509,6 +509,7 @@ private void getPicturesForPlace(List<ImageCard> result, long l) {\n \t\t\t\t\t\"Requesting location images...\", false, false);\n \t\t\ttry {\n \t\t\t\tif (!Algorithms.isEmpty(response)) {\n+\t\t\t\t\t//TODO extract place id\n \t\t\t\t\tJSONArray obj = new JSONObject(response).getJSONArray(\"objects\");\n \t\t\t\t\tJSONArray images = ((JSONObject) ((JSONObject) obj.get(0)).get(\"images\")).getJSONArray(\"outdoor\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE2NjA4Nw=="}, "originalCommit": {"oid": "8ea9ba2925de6e5433cae3e4122b13a0d1b8578e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mjc4MzIxOnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/osmedit/opr/OPRImage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo0ODoxNlrOH01p9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo0ODoxNlrOH01p9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE2NzA5Mg==", "bodyText": "What do we need such small class? Could be emdedded to the service it's used", "url": "https://github.com/osmandapp/OsmAnd/pull/10218#discussion_r525167092", "createdAt": "2020-11-17T13:48:16Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/osmedit/opr/OPRImage.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package net.osmand.plus.osmedit.opr;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea9ba2925de6e5433cae3e4122b13a0d1b8578e"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mjc5NjA2OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/osmedit/opr/OpenDBAPI.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo1MToxMlrOH01yJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo1MToxMlrOH01yJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE2OTE5MQ==", "bodyText": "local variable OPRImage - guidelines?", "url": "https://github.com/osmandapp/OsmAnd/pull/10218#discussion_r525169191", "createdAt": "2020-11-17T13:51:12Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/osmedit/opr/OpenDBAPI.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package net.osmand.plus.osmedit.opr;\n+\n+import android.net.TrafficStats;\n+import android.os.Build;\n+import com.google.gson.GsonBuilder;\n+import net.osmand.PlatformUtil;\n+import net.osmand.plus.BuildConfig;\n+import org.apache.commons.logging.Log;\n+import org.bouncycastle.jce.provider.BouncyCastleProvider;\n+import org.openplacereviews.opendb.SecUtils;\n+import org.openplacereviews.opendb.ops.OpOperation;\n+import org.openplacereviews.opendb.util.JsonFormatter;\n+import org.openplacereviews.opendb.util.exception.FailedVerificationException;\n+\n+import java.io.BufferedReader;\n+import java.io.DataOutputStream;\n+import java.io.IOException;\n+import java.io.InputStreamReader;\n+import java.net.HttpURLConnection;\n+import java.net.URL;\n+import java.security.KeyPair;\n+import java.security.Security;\n+import java.util.*;\n+\n+import static org.openplacereviews.opendb.SecUtils.*;\n+\n+\n+public class OpenDBAPI {\n+\tprivate static final Log log = PlatformUtil.getLog(SecUtils.class);\n+\n+\tprivate static final int THREAD_ID = 11200;\n+\n+\tpublic int uploadImage(String[] placeId, String privateKey, String username, String image) throws FailedVerificationException {\n+\t\tif (android.os.Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n+\t\t\tSecurity.removeProvider(\"BC\");\n+\t\t\tSecurity.addProvider(new BouncyCastleProvider());\n+\t\t}\n+\t\tKeyPair kp = SecUtils.getKeyPair(ALGO_EC, privateKey, null);\n+\t\tString signed = username;// + \":opr-web\";\n+\n+\t\tJsonFormatter formatter = new JsonFormatter();\n+\t\tOPRImage OPRImage = new GsonBuilder().create().fromJson(image, OPRImage.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ea9ba2925de6e5433cae3e4122b13a0d1b8578e"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3415, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}