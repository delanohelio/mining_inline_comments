{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MTYwMjUz", "number": 10369, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDoxMDo1NFrOFC8bRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0Njo0NlrOFFmJiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjMxNDk1OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/resources/ResourceManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDoxMDo1NFrOICWh0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNDoxMDo1NFrOICWh0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTMzNzE2OQ==", "bodyText": "wiki? I thought it should be \"travel\"", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r539337169", "createdAt": "2020-12-09T14:10:54Z", "author": {"login": "MadWasp79"}, "path": "OsmAnd/src/net/osmand/plus/resources/ResourceManager.java", "diffHunk": "@@ -1132,12 +1134,29 @@ public synchronized void close(){\n \t\treturn readers.toArray(new BinaryMapIndexReader[0]);\n \t}\n \n+\tpublic BinaryMapIndexReader[] getTravelFiles() {\n+\t\tCollection<BinaryMapReaderResource> fileReaders = getFileReaders();\n+\t\tList<BinaryMapIndexReader> readers = new ArrayList<>(fileReaders.size());\n+\t\tfor (BinaryMapReaderResource res : fileReaders) {\n+\t\t\tif (!res.filename.toString().toLowerCase().contains(\"wiki\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6babf25c399fac50d560ed87a5a501519df1c0bb"}, "originalPosition": 612}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4Njc4NDU0OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/resources/ResourceManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNTozNjoyNlrOICa9XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNTozNjoyNlrOICa9XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQwOTc1Ng==", "bodyText": "IndexConstants for constants", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r539409756", "createdAt": "2020-12-09T15:36:26Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/resources/ResourceManager.java", "diffHunk": "@@ -1132,6 +1134,24 @@ public synchronized void close(){\n \t\treturn readers.toArray(new BinaryMapIndexReader[0]);\n \t}\n \n+\tpublic BinaryMapIndexReader[] getTravelFiles() {\n+\t\tCollection<BinaryMapReaderResource> fileReaders = getFileReaders();\n+\t\tList<BinaryMapIndexReader> readers = new ArrayList<>(fileReaders.size());\n+\t\tfor (BinaryMapReaderResource res : fileReaders) {\n+\t\t\tif (!res.filename.toString().toLowerCase().contains(\"travel.obf\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aac3e5fd89002c27169a5b819a391542c7ac5d7"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4Njc5MDkwOnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/resources/ResourceManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNTozNzozN1rOICbBRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNTozNzozN1rOICbBRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQxMDc1OQ==", "bodyText": "@alex-osm why is it needed", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r539410759", "createdAt": "2020-12-09T15:37:37Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/resources/ResourceManager.java", "diffHunk": "@@ -1132,6 +1134,24 @@ public synchronized void close(){\n \t\treturn readers.toArray(new BinaryMapIndexReader[0]);\n \t}\n \n+\tpublic BinaryMapIndexReader[] getTravelFiles() {\n+\t\tCollection<BinaryMapReaderResource> fileReaders = getFileReaders();\n+\t\tList<BinaryMapIndexReader> readers = new ArrayList<>(fileReaders.size());\n+\t\tfor (BinaryMapReaderResource res : fileReaders) {\n+\t\t\tif (!res.filename.toString().toLowerCase().contains(\"travel.obf\")) {\n+\t\t\t\tcontinue;\n+\t\t\t}\n+\t\t\tBinaryMapIndexReader index = res.getReader(BinaryMapReaderResourceType.POI);\n+\t\t\tfor (BinaryIndexPart p : index.getIndexes()) {\n+\t\t\t\tif (p instanceof BinaryMapPoiReaderAdapter.PoiRegion) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2aac3e5fd89002c27169a5b819a391542c7ac5d7"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDA5NjU2OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelObfHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0MTo0NFrOIGLb-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0MTo0NFrOIGLb-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM0OTc1Mw==", "bodyText": "null", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r543349753", "createdAt": "2020-12-15T13:41:44Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelObfHelper.java", "diffHunk": "@@ -0,0 +1,189 @@\n+package net.osmand.plus.wikivoyage.data;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import net.osmand.CollatorStringMatcher;\n+import net.osmand.GPXUtilities;\n+import net.osmand.IndexConstants;\n+import net.osmand.PlatformUtil;\n+import net.osmand.ResultMatcher;\n+import net.osmand.binary.BinaryMapIndexReader;\n+import net.osmand.data.Amenity;\n+import net.osmand.data.MapObject;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.api.SQLiteAPI;\n+import net.osmand.util.Algorithms;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class TravelObfHelper implements TravelHelper {\n+\n+\tprivate static final Log LOG = PlatformUtil.getLog(TravelObfHelper.class);\n+\n+\tprivate static final int POPULAR_LIMIT = 25;\n+\n+\tprivate final OsmandApplication application;\n+\n+\tprivate TravelLocalDataHelper localDataHelper;\n+\n+\tprivate List<BinaryMapIndexReader> files;\n+\tprivate List<File> existingTravelBooks = new ArrayList<>();\n+\tprivate List<TravelArticle> popularArticles = new ArrayList<TravelArticle>();\n+\n+\n+\tpublic TravelObfHelper(OsmandApplication application) {\n+\t\tthis.application = application;\n+\t\tlocalDataHelper = new TravelLocalDataHelper(application);\n+\t}\n+\n+\tpublic TravelLocalDataHelper getBookmarksHelper() {\n+\t\treturn localDataHelper;\n+\t}\n+\n+\t@Override\n+\tpublic void initializeDataOnAppStartup() {\n+\n+\t}\n+\n+\t@Override\n+\tpublic boolean isAnyTravelBookPresent() {\n+\t\treturn checkIfObfFileExists(application);\n+\t}\n+\n+\n+\tpublic void initializeDataToDisplay() {\n+\t\tlocalDataHelper.refreshCachedData();\n+\t\tloadPopularArticles();\n+\t}\n+\n+\n+\t@NonNull\n+\tpublic List<WikivoyageSearchResult> search(final String searchQuery) {\n+\t\t// TODO remove\n+\t\t//this.files = application.getResourceManager().getTravelFiles();\n+\t\tList<WikivoyageSearchResult> res = new ArrayList<>();\n+//\t\tList<Amenity> searchObjects = new ArrayList<>();\n+//\t\tfor (BinaryMapIndexReader reader : files) {\n+//\t\t\ttry {\n+//\t\t\t\tBinaryMapIndexReader.SearchRequest<Amenity> searchRequest = BinaryMapIndexReader.\n+//\t\t\t\t\t\tbuildSearchPoiRequest(0, 0, searchQuery,\n+//\t\t\t\t\t\t\t\t0, Integer.MAX_VALUE, 0, Integer.MAX_VALUE, null);\n+//\n+//\t\t\t\tsearchObjects = reader.searchPoiByName(searchRequest);\n+//\t\t\t} catch (IOException e) {\n+//\t\t\t\tLOG.error(e);\n+//\t\t\t}\n+//\t\t}\n+//\t\tfor (MapObject obj : searchObjects) {\n+//\t\t\t//TODO map\n+//\t\t\tWikivoyageSearchResult r = new WikivoyageSearchResult();\n+//\t\t\tr.articleTitles = Collections.singletonList(obj.getName());\n+//\t\t\tr.langs = Collections.singletonList(obj.getName());\n+//\t\t\tr.imageTitle = (obj.getName());\n+//\t\t\tr.isPartOf = Collections.singletonList(obj.getName());\n+//\t\t\tr.routeId = \"routeid\";//obj.getId();\n+//\t\t\tres.add(r);\n+//\t\t}\n+\t\treturn res;\n+\t}\n+\n+\t@NonNull\n+\tpublic List<TravelArticle> getPopularArticles() {\n+\t\treturn popularArticles;\n+\t}\n+\n+\t@Override\n+\tpublic Map<WikivoyageSearchResult, List<WikivoyageSearchResult>> getNavigationMap(TravelArticle article) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic TravelArticle getArticleById(String routeId, String lang) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic TravelArticle getArticleByTitle(String title, String lang) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic String getArticleId(String title, String lang) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic ArrayList<String> getArticleLangs(String articleId) {\n+\t\treturn null;\n+\t}\n+\n+\t@NonNull\n+\tpublic List<TravelArticle> loadPopularArticles() {\n+\t\tpopularArticles = new ArrayList<>();\n+\t\treturn popularArticles;\n+\t}\n+\n+\tpublic String formatTravelBookName(File tb) {\n+\t\tif (tb == null) {\n+\t\t\treturn application.getString(R.string.shared_string_none);\n+\t\t}\n+\t\tString nm = tb.getName();\n+\t\treturn nm.substring(0, nm.indexOf('.')).replace('_', ' ');\n+\t}\n+\n+\tpublic String getGPXName(TravelArticle article) {\n+\t\treturn article.getTitle().replace('/', '_').replace('\\'', '_')\n+\t\t\t\t.replace('\\\"', '_') + IndexConstants.GPX_FILE_EXT;\n+\t}\n+\n+\tpublic File createGpxFile(TravelArticle article) {\n+\t\tfinal GPXUtilities.GPXFile gpx = article.getGpxFile();\n+\t\tFile file = application.getAppPath(IndexConstants.GPX_TRAVEL_DIR + getGPXName(article));\n+\t\tif (!file.exists()) {\n+\t\t\tGPXUtilities.writeGpxFile(file, gpx);\n+\t\t}\n+\t\treturn file;\n+\t}\n+\n+\t@Override\n+\tpublic String getSelectedTravelBookName() {\n+\t\t//TODO REPLACE\n+\t\treturn \"OBF TRAVEL BOOK\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a57dc562c6004bd632537c0c9742a3e7b45e87"}, "originalPosition": 160}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDA5ODk4OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelDbHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0MjowOFrOIGLdSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0MjowOFrOIGLdSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1MDA4OA==", "bodyText": "Duplicate to checkIfObfFileExists", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r543350088", "createdAt": "2020-12-15T13:42:08Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelDbHelper.java", "diffHunk": "@@ -114,6 +114,18 @@ public TravelDbHelper(OsmandApplication application) {\n \t\tlocalDataHelper = new TravelLocalDataHelper(application);\n \t}\n \n+\tpublic static boolean checkIfDbFileExists(OsmandApplication app) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a57dc562c6004bd632537c0c9742a3e7b45e87"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDEwMzk2OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelObfHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0MzowMFrOIGLgBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0MzowMFrOIGLgBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1MDc5MQ==", "bodyText": "ResourceManager", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r543350791", "createdAt": "2020-12-15T13:43:00Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelObfHelper.java", "diffHunk": "@@ -0,0 +1,189 @@\n+package net.osmand.plus.wikivoyage.data;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import net.osmand.CollatorStringMatcher;\n+import net.osmand.GPXUtilities;\n+import net.osmand.IndexConstants;\n+import net.osmand.PlatformUtil;\n+import net.osmand.ResultMatcher;\n+import net.osmand.binary.BinaryMapIndexReader;\n+import net.osmand.data.Amenity;\n+import net.osmand.data.MapObject;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.api.SQLiteAPI;\n+import net.osmand.util.Algorithms;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class TravelObfHelper implements TravelHelper {\n+\n+\tprivate static final Log LOG = PlatformUtil.getLog(TravelObfHelper.class);\n+\n+\tprivate static final int POPULAR_LIMIT = 25;\n+\n+\tprivate final OsmandApplication application;\n+\n+\tprivate TravelLocalDataHelper localDataHelper;\n+\n+\tprivate List<BinaryMapIndexReader> files;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a57dc562c6004bd632537c0c9742a3e7b45e87"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDEwNDUwOnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelObfHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0MzoxMVrOIGLgYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0MzoxMVrOIGLgYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1MDg4MA==", "bodyText": "Why it is needed?", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r543350880", "createdAt": "2020-12-15T13:43:11Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelObfHelper.java", "diffHunk": "@@ -0,0 +1,189 @@\n+package net.osmand.plus.wikivoyage.data;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import net.osmand.CollatorStringMatcher;\n+import net.osmand.GPXUtilities;\n+import net.osmand.IndexConstants;\n+import net.osmand.PlatformUtil;\n+import net.osmand.ResultMatcher;\n+import net.osmand.binary.BinaryMapIndexReader;\n+import net.osmand.data.Amenity;\n+import net.osmand.data.MapObject;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.api.SQLiteAPI;\n+import net.osmand.util.Algorithms;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class TravelObfHelper implements TravelHelper {\n+\n+\tprivate static final Log LOG = PlatformUtil.getLog(TravelObfHelper.class);\n+\n+\tprivate static final int POPULAR_LIMIT = 25;\n+\n+\tprivate final OsmandApplication application;\n+\n+\tprivate TravelLocalDataHelper localDataHelper;\n+\n+\tprivate List<BinaryMapIndexReader> files;\n+\tprivate List<File> existingTravelBooks = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a57dc562c6004bd632537c0c9742a3e7b45e87"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNDEyMjM1OnYy", "diffSide": "RIGHT", "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelObfHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0Njo0NlrOIGLqmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzo0Njo0NlrOIGLqmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM1MzQ5Nw==", "bodyText": "Delete not used class", "url": "https://github.com/osmandapp/OsmAnd/pull/10369#discussion_r543353497", "createdAt": "2020-12-15T13:46:46Z", "author": {"login": "vshcherb"}, "path": "OsmAnd/src/net/osmand/plus/wikivoyage/data/TravelObfHelper.java", "diffHunk": "@@ -0,0 +1,189 @@\n+package net.osmand.plus.wikivoyage.data;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import net.osmand.CollatorStringMatcher;\n+import net.osmand.GPXUtilities;\n+import net.osmand.IndexConstants;\n+import net.osmand.PlatformUtil;\n+import net.osmand.ResultMatcher;\n+import net.osmand.binary.BinaryMapIndexReader;\n+import net.osmand.data.Amenity;\n+import net.osmand.data.MapObject;\n+import net.osmand.plus.OsmandApplication;\n+import net.osmand.plus.R;\n+import net.osmand.plus.api.SQLiteAPI;\n+import net.osmand.util.Algorithms;\n+\n+import org.apache.commons.logging.Log;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class TravelObfHelper implements TravelHelper {\n+\n+\tprivate static final Log LOG = PlatformUtil.getLog(TravelObfHelper.class);\n+\n+\tprivate static final int POPULAR_LIMIT = 25;\n+\n+\tprivate final OsmandApplication application;\n+\n+\tprivate TravelLocalDataHelper localDataHelper;\n+\n+\tprivate List<BinaryMapIndexReader> files;\n+\tprivate List<File> existingTravelBooks = new ArrayList<>();\n+\tprivate List<TravelArticle> popularArticles = new ArrayList<TravelArticle>();\n+\n+\n+\tpublic TravelObfHelper(OsmandApplication application) {\n+\t\tthis.application = application;\n+\t\tlocalDataHelper = new TravelLocalDataHelper(application);\n+\t}\n+\n+\tpublic TravelLocalDataHelper getBookmarksHelper() {\n+\t\treturn localDataHelper;\n+\t}\n+\n+\t@Override\n+\tpublic void initializeDataOnAppStartup() {\n+\n+\t}\n+\n+\t@Override\n+\tpublic boolean isAnyTravelBookPresent() {\n+\t\treturn checkIfObfFileExists(application);\n+\t}\n+\n+\n+\tpublic void initializeDataToDisplay() {\n+\t\tlocalDataHelper.refreshCachedData();\n+\t\tloadPopularArticles();\n+\t}\n+\n+\n+\t@NonNull\n+\tpublic List<WikivoyageSearchResult> search(final String searchQuery) {\n+\t\t// TODO remove\n+\t\t//this.files = application.getResourceManager().getTravelFiles();\n+\t\tList<WikivoyageSearchResult> res = new ArrayList<>();\n+//\t\tList<Amenity> searchObjects = new ArrayList<>();\n+//\t\tfor (BinaryMapIndexReader reader : files) {\n+//\t\t\ttry {\n+//\t\t\t\tBinaryMapIndexReader.SearchRequest<Amenity> searchRequest = BinaryMapIndexReader.\n+//\t\t\t\t\t\tbuildSearchPoiRequest(0, 0, searchQuery,\n+//\t\t\t\t\t\t\t\t0, Integer.MAX_VALUE, 0, Integer.MAX_VALUE, null);\n+//\n+//\t\t\t\tsearchObjects = reader.searchPoiByName(searchRequest);\n+//\t\t\t} catch (IOException e) {\n+//\t\t\t\tLOG.error(e);\n+//\t\t\t}\n+//\t\t}\n+//\t\tfor (MapObject obj : searchObjects) {\n+//\t\t\t//TODO map\n+//\t\t\tWikivoyageSearchResult r = new WikivoyageSearchResult();\n+//\t\t\tr.articleTitles = Collections.singletonList(obj.getName());\n+//\t\t\tr.langs = Collections.singletonList(obj.getName());\n+//\t\t\tr.imageTitle = (obj.getName());\n+//\t\t\tr.isPartOf = Collections.singletonList(obj.getName());\n+//\t\t\tr.routeId = \"routeid\";//obj.getId();\n+//\t\t\tres.add(r);\n+//\t\t}\n+\t\treturn res;\n+\t}\n+\n+\t@NonNull\n+\tpublic List<TravelArticle> getPopularArticles() {\n+\t\treturn popularArticles;\n+\t}\n+\n+\t@Override\n+\tpublic Map<WikivoyageSearchResult, List<WikivoyageSearchResult>> getNavigationMap(TravelArticle article) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic TravelArticle getArticleById(String routeId, String lang) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic TravelArticle getArticleByTitle(String title, String lang) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic String getArticleId(String title, String lang) {\n+\t\treturn null;\n+\t}\n+\n+\t@Override\n+\tpublic ArrayList<String> getArticleLangs(String articleId) {\n+\t\treturn null;\n+\t}\n+\n+\t@NonNull\n+\tpublic List<TravelArticle> loadPopularArticles() {\n+\t\tpopularArticles = new ArrayList<>();\n+\t\treturn popularArticles;\n+\t}\n+\n+\tpublic String formatTravelBookName(File tb) {\n+\t\tif (tb == null) {\n+\t\t\treturn application.getString(R.string.shared_string_none);\n+\t\t}\n+\t\tString nm = tb.getName();\n+\t\treturn nm.substring(0, nm.indexOf('.')).replace('_', ' ');\n+\t}\n+\n+\tpublic String getGPXName(TravelArticle article) {\n+\t\treturn article.getTitle().replace('/', '_').replace('\\'', '_')\n+\t\t\t\t.replace('\\\"', '_') + IndexConstants.GPX_FILE_EXT;\n+\t}\n+\n+\tpublic File createGpxFile(TravelArticle article) {\n+\t\tfinal GPXUtilities.GPXFile gpx = article.getGpxFile();\n+\t\tFile file = application.getAppPath(IndexConstants.GPX_TRAVEL_DIR + getGPXName(article));\n+\t\tif (!file.exists()) {\n+\t\t\tGPXUtilities.writeGpxFile(file, gpx);\n+\t\t}\n+\t\treturn file;\n+\t}\n+\n+\t@Override\n+\tpublic String getSelectedTravelBookName() {\n+\t\t//TODO REPLACE\n+\t\treturn \"OBF TRAVEL BOOK\";\n+\t}\n+\n+\tpublic static boolean checkIfObfFileExists(OsmandApplication app) {\n+\t\tFile[] files = app.getAppPath(IndexConstants.WIKIVOYAGE_INDEX_DIR).listFiles();\n+\t\tif (files != null) {\n+\t\t\tfor (File f : files) {\n+\t\t\t\tif (f.getName().contains(IndexConstants.BINARY_TRAVEL_GUIDE_MAP_INDEX_EXT)) {\n+\t\t\t\t\treturn true;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t// might use in future\n+\tprotected static class PopularArticle {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29a57dc562c6004bd632537c0c9742a3e7b45e87"}, "originalPosition": 176}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3402, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}