{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwMzM4NjY0", "number": 1472, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDo0MDo1MVrOEjTjGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDozMDoyMFrOEleTUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NDU1ODk3OnYy", "diffSide": "LEFT", "path": "ql/src/test/queries/clientnegative/prepare_execute_1.q", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDo0MDo1MVrOHRlytA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDo0MDo1MVrOHRlytA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIwNzAyOA==", "bodyText": "This query no longer fails. I have opened a follow-up to fix this https://issues.apache.org/jira/browse/HIVE-24164", "url": "https://github.com/apache/hive/pull/1472#discussion_r488207028", "createdAt": "2020-09-14T20:40:51Z", "author": {"login": "vineetgarg02"}, "path": "ql/src/test/queries/clientnegative/prepare_execute_1.q", "diffHunk": "@@ -1,3 +0,0 @@\n---! qt:dataset:src\n-prepare query1 from select count(*) from src where key > ? and value < ? group by ?;\n-execute query1 using 1,100,1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cdb2b27312c095956177586ee7df46b5a023ee8"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzI0ODM5OnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/TableScanOperator.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMzozNjoyMVrOHU984w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODoxNDoyMlrOHW6wpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc0ODU3OQ==", "bodyText": "Do we need to keep all these fields for the plan cache in the operator, table, etc.? I am wondering about the implications of keeping them when the operator plan is serialized (i.e., whether that could have an performance impact). @t3rmin4t0r , @rbalamohan , could you comment on this?", "url": "https://github.com/apache/hive/pull/1472#discussion_r491748579", "createdAt": "2020-09-20T23:36:21Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/TableScanOperator.java", "diffHunk": "@@ -63,19 +63,19 @@\n \n   private VectorizationContext taskVectorizationContext;\n \n-  protected transient JobConf jc;\n-  private transient boolean inputFileChanged = false;\n+  protected JobConf jc;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyNDU2MQ==", "bodyText": "I actually tried not keeping these fields but I was running into all sorts of issues like unable to serialize/de-serialize or plan generating without metadata etc.\nI am not sure if we need to keep all of these fields or we can selectively choose, I went by almost all in interest of time. If Gopal or Rajesh thinks that this may cause performance issue I can open a follow-up to investigate and choose fields selectively.", "url": "https://github.com/apache/hive/pull/1472#discussion_r492224561", "createdAt": "2020-09-21T17:21:59Z", "author": {"login": "vineetgarg02"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/TableScanOperator.java", "diffHunk": "@@ -63,19 +63,19 @@\n \n   private VectorizationContext taskVectorizationContext;\n \n-  protected transient JobConf jc;\n-  private transient boolean inputFileChanged = false;\n+  protected JobConf jc;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc0ODU3OQ=="}, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUzOTAxMg==", "bodyText": "Let's create a follow-up to explore whether some of them may be made transient again and discuss over there.", "url": "https://github.com/apache/hive/pull/1472#discussion_r492539012", "createdAt": "2020-09-22T07:54:15Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/TableScanOperator.java", "diffHunk": "@@ -63,19 +63,19 @@\n \n   private VectorizationContext taskVectorizationContext;\n \n-  protected transient JobConf jc;\n-  private transient boolean inputFileChanged = false;\n+  protected JobConf jc;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc0ODU3OQ=="}, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc5MzQ0NA==", "bodyText": "I have updated HIVE-24005 to investigate this.", "url": "https://github.com/apache/hive/pull/1472#discussion_r493793444", "createdAt": "2020-09-23T18:14:22Z", "author": {"login": "vineetgarg02"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/TableScanOperator.java", "diffHunk": "@@ -63,19 +63,19 @@\n \n   private VectorizationContext taskVectorizationContext;\n \n-  protected transient JobConf jc;\n-  private transient boolean inputFileChanged = false;\n+  protected JobConf jc;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc0ODU3OQ=="}, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzI2OTQ4OnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/ExecuteStatementAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDowMzowOVrOHU-HaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDowMzowOVrOHU-HaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MTI3Mw==", "bodyText": "Can remove line commented out.", "url": "https://github.com/apache/hive/pull/1472#discussion_r491751273", "createdAt": "2020-09-21T00:03:09Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/ExecuteStatementAnalyzer.java", "diffHunk": "@@ -253,14 +191,17 @@ public void analyzeInternal(ASTNode root) throws SemanticException {\n     String queryName = getQueryName(root);\n     if (ss.getPreparePlans().containsKey(queryName)) {\n       // retrieve cached plan from session state\n-      BaseSemanticAnalyzer cachedPlan = ss.getPreparePlans().get(queryName);\n+      SemanticAnalyzer cachedPlan = ss.getPreparePlans().get(queryName);\n \n       // make copy of the plan\n-      createTaskCopy(cachedPlan);\n+      //createTaskCopy(cachedPlan);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 177}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzI2OTc4OnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/ExecuteStatementAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDowMzozNVrOHU-Hjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDowMzozNVrOHU-Hjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MTMxMQ==", "bodyText": "Same, can be removed?", "url": "https://github.com/apache/hive/pull/1472#discussion_r491751311", "createdAt": "2020-09-21T00:03:35Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/ExecuteStatementAnalyzer.java", "diffHunk": "@@ -286,6 +227,24 @@ public void analyzeInternal(ASTNode root) throws SemanticException {\n       this.acidFileSinks.addAll(cachedPlan.getAcidFileSinks());\n       this.initCtx(cachedPlan.getCtx());\n       this.ctx.setCboInfo(cachedPlan.getCboInfo());\n+      this.setLoadFileWork(cachedPlan.getLoadFileWork());\n+      this.setLoadTableWork(cachedPlan.getLoadTableWork());\n+\n+      this.setQB(cachedPlan.getQB());\n+\n+      ParseContext pctxt = this.getParseContext();\n+      // partition pruner\n+      Transform ppr = new PartitionPruner();\n+      ppr.transform(pctxt);\n+\n+      //pctxt.setQueryProperties(this.queryProperties);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 203}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzI2OTkxOnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/ExecuteStatementAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDowMzo1NFrOHU-How==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDowMzo1NFrOHU-How==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MTMzMQ==", "bodyText": "This comment too.", "url": "https://github.com/apache/hive/pull/1472#discussion_r491751331", "createdAt": "2020-09-21T00:03:54Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/ExecuteStatementAnalyzer.java", "diffHunk": "@@ -286,6 +227,24 @@ public void analyzeInternal(ASTNode root) throws SemanticException {\n       this.acidFileSinks.addAll(cachedPlan.getAcidFileSinks());\n       this.initCtx(cachedPlan.getCtx());\n       this.ctx.setCboInfo(cachedPlan.getCboInfo());\n+      this.setLoadFileWork(cachedPlan.getLoadFileWork());\n+      this.setLoadTableWork(cachedPlan.getLoadTableWork());\n+\n+      this.setQB(cachedPlan.getQB());\n+\n+      ParseContext pctxt = this.getParseContext();\n+      // partition pruner\n+      Transform ppr = new PartitionPruner();\n+      ppr.transform(pctxt);\n+\n+      //pctxt.setQueryProperties(this.queryProperties);\n+      if (!ctx.getExplainLogical()) {\n+        TaskCompiler compiler = TaskCompilerFactory.getCompiler(conf, pctxt);\n+        compiler.init(queryState, console, db);\n+        compiler.compile(pctxt, rootTasks, inputs, outputs);\n+        fetchTask = pctxt.getFetchTask();\n+        //fetchTask = makeCopy(cachedPlan.getFetchTask(), cachedPlan.getFetchTask().getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 209}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzI3NzQwOnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/PrepareStatementAnalyzer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDoxMTo1NlrOHU-LKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDoxMTo1NlrOHU-LKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MjIzMg==", "bodyText": "Can we leave a comment on this method to understand what it is trying to do?", "url": "https://github.com/apache/hive/pull/1472#discussion_r491752232", "createdAt": "2020-09-21T00:11:56Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/PrepareStatementAnalyzer.java", "diffHunk": "@@ -54,6 +58,21 @@ private void savePlan(String queryName) throws SemanticException{\n     ss.getPreparePlans().put(queryName, this);\n   }\n \n+  private <T> T makeCopy(final Object task, Class<T> objClass) {\n+    ByteArrayOutputStream baos = new ByteArrayOutputStream();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzI3ODY0OnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDoxMzozM1rOHU-Lxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzoyOTozMlrOHVbRyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MjM5MQ==", "bodyText": "Why do you need to keep a copy instead of using the original operators? Could you leave a comment on that?", "url": "https://github.com/apache/hive/pull/1472#discussion_r491752391", "createdAt": "2020-09-21T00:13:33Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java", "diffHunk": "@@ -387,6 +387,12 @@\n   protected volatile boolean disableJoinMerge = false;\n   protected final boolean defaultJoinMerge;\n \n+  /*\n+   * This is used by prepare/execute statement\n+   * Prepare/Execute requires operators to be copied and cached\n+   */\n+  protected Map<String, TableScanOperator> topOpsCopy = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyOTA2Nw==", "bodyText": "Original operator tree shape is changed when going through physical transformations and task generation (don't know why though), as a result this operator tree can not be used later to regenerate tasks or re-running physical transformations. Therefore we make a copy and cache it after operator tree is generated.\nI will leave a comment.", "url": "https://github.com/apache/hive/pull/1472#discussion_r492229067", "createdAt": "2020-09-21T17:29:32Z", "author": {"login": "vineetgarg02"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java", "diffHunk": "@@ -387,6 +387,12 @@\n   protected volatile boolean disableJoinMerge = false;\n   protected final boolean defaultJoinMerge;\n \n+  /*\n+   * This is used by prepare/execute statement\n+   * Prepare/Execute requires operators to be copied and cached\n+   */\n+  protected Map<String, TableScanOperator> topOpsCopy = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MjM5MQ=="}, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzI4MDY2OnYy", "diffSide": "RIGHT", "path": "ql/src/test/results/clientpositive/llap/constprog_dpp.q.out", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDoxNTozN1rOHU-MxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzozMDozNlrOHVbUfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MjY0NA==", "bodyText": "I guess this was actually unrelated to current patch? Probably due to some data structure not being serialized when different union branches are copied?", "url": "https://github.com/apache/hive/pull/1472#discussion_r491752644", "createdAt": "2020-09-21T00:15:37Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/llap/constprog_dpp.q.out", "diffHunk": "@@ -84,12 +84,13 @@ Stage-0\n                         Select Operator [SEL_40] (rows=1 width=4)\n                           Output:[\"_col0\"]\n                           TableScan [TS_24] (rows=1 width=4)\n-                            Output:[\"id\"]\n+                            default@tb2,tb2,Tbl:COMPLETE,Col:NONE,Output:[\"id\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIyOTc1OA==", "bodyText": "Yeah I think this is likely side effect of some changes in w.r.t serialization/de-serialization. Although this is positive side effect now that we have more information in explain plan.", "url": "https://github.com/apache/hive/pull/1472#discussion_r492229758", "createdAt": "2020-09-21T17:30:36Z", "author": {"login": "vineetgarg02"}, "path": "ql/src/test/results/clientpositive/llap/constprog_dpp.q.out", "diffHunk": "@@ -84,12 +84,13 @@ Stage-0\n                         Select Operator [SEL_40] (rows=1 width=4)\n                           Output:[\"_col0\"]\n                           TableScan [TS_24] (rows=1 width=4)\n-                            Output:[\"id\"]\n+                            default@tb2,tb2,Tbl:COMPLETE,Col:NONE,Output:[\"id\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MjY0NA=="}, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzI4MTQxOnYy", "diffSide": "RIGHT", "path": "ql/src/test/results/clientpositive/llap/constprog_dpp.q.out", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDoxNjozNlrOHU-NIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzo0ODowMVrOHVb88w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MjczOA==", "bodyText": "This seems different than the stats above. Do you know if it is expected? May be worth checking in a follow-up.", "url": "https://github.com/apache/hive/pull/1472#discussion_r491752738", "createdAt": "2020-09-21T00:16:36Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/llap/constprog_dpp.q.out", "diffHunk": "@@ -84,12 +84,13 @@ Stage-0\n                         Select Operator [SEL_40] (rows=1 width=4)\n                           Output:[\"_col0\"]\n                           TableScan [TS_24] (rows=1 width=4)\n-                            Output:[\"id\"]\n+                            default@tb2,tb2,Tbl:COMPLETE,Col:NONE,Output:[\"id\"]\n                   <-Map 6 [CONTAINS] vectorized, llap\n                     Reduce Output Operator [RS_45]\n                       Limit [LIM_44] (rows=1 width=2)\n                         Number of rows:1\n                         Select Operator [SEL_43] (rows=1 width=0)\n                           Output:[\"_col0\"]\n                           TableScan [TS_29] (rows=1 width=0)\n+                            default@tb2,tb2,Tbl:PARTIAL,Col:COMPLETE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjI0MDExNQ==", "bodyText": "I confirmed that this is expected. I compared this plan against master (with explain.user set to false) and there is no difference in the plan.", "url": "https://github.com/apache/hive/pull/1472#discussion_r492240115", "createdAt": "2020-09-21T17:48:01Z", "author": {"login": "vineetgarg02"}, "path": "ql/src/test/results/clientpositive/llap/constprog_dpp.q.out", "diffHunk": "@@ -84,12 +84,13 @@ Stage-0\n                         Select Operator [SEL_40] (rows=1 width=4)\n                           Output:[\"_col0\"]\n                           TableScan [TS_24] (rows=1 width=4)\n-                            Output:[\"id\"]\n+                            default@tb2,tb2,Tbl:COMPLETE,Col:NONE,Output:[\"id\"]\n                   <-Map 6 [CONTAINS] vectorized, llap\n                     Reduce Output Operator [RS_45]\n                       Limit [LIM_44] (rows=1 width=2)\n                         Number of rows:1\n                         Select Operator [SEL_43] (rows=1 width=0)\n                           Output:[\"_col0\"]\n                           TableScan [TS_29] (rows=1 width=0)\n+                            default@tb2,tb2,Tbl:PARTIAL,Col:COMPLETE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MjczOA=="}, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzI5MjM1OnYy", "diffSide": "RIGHT", "path": "ql/src/test/results/clientpositive/llap/prepare_plan.q.out", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDozMDoyMFrOHU-SmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDozMDoyMFrOHU-SmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1NDEzNw==", "bodyText": "Nice!", "url": "https://github.com/apache/hive/pull/1472#discussion_r491754137", "createdAt": "2020-09-21T00:30:20Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/llap/prepare_plan.q.out", "diffHunk": "@@ -170,10 +170,10 @@ STAGE PLANS:\n                           sort order: \n                           Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE\n                           value expressions: _col0 (type: bigint)\n-            Execution mode: llap\n+            Execution mode: vectorized, llap", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 421, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}