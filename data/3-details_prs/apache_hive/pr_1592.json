{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2ODA2OTY1", "number": 1592, "title": "HIVE-24291: Compaction cleaner should wait for all prev txn to commit", "bodyText": "What changes were proposed in this pull request?\nCompaction cleaner should wait for all previous txns to commit\nWhy are the changes needed?\nExample buggy scenario in the Jira\nDoes this PR introduce any user-facing change?\nNo\nHow was this patch tested?\nUnit tests", "createdAt": "2020-10-20T13:34:08Z", "url": "https://github.com/apache/hive/pull/1592", "merged": true, "mergeCommit": {"oid": "e305109ec3e0f2e8359e501633cee9f893bf471c"}, "closed": true, "closedAt": "2020-11-02T15:21:13Z", "author": {"login": "pvargacl"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUtCiMgBqjM5MDM3NTAzMTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYmJHZAFqTUyMTcyMzA4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c0686831fa3707bc17387ca4ab90829734dab73", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/2c0686831fa3707bc17387ca4ab90829734dab73", "committedDate": "2020-10-20T13:32:10Z", "message": "HIVE-24291: Compaction cleaner should wait for all prev txn to commit"}, "afterCommit": {"oid": "8df2f34b506766bd7892eab30437e30ede5022e1", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/8df2f34b506766bd7892eab30437e30ede5022e1", "committedDate": "2020-10-21T13:01:59Z", "message": "Fix issue with setting next_txn_id in markCompacted + test fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8df2f34b506766bd7892eab30437e30ede5022e1", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/8df2f34b506766bd7892eab30437e30ede5022e1", "committedDate": "2020-10-21T13:01:59Z", "message": "Fix issue with setting next_txn_id in markCompacted + test fixes"}, "afterCommit": {"oid": "f1401026088f6b9dea4418d1cfc949559ac0e77c", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/f1401026088f6b9dea4418d1cfc949559ac0e77c", "committedDate": "2020-10-21T13:11:28Z", "message": "HIVE-24291: Compaction cleaner should wait for all prev txn to commit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5ODA0MzUy", "url": "https://github.com/apache/hive/pull/1592#pullrequestreview-519804352", "createdAt": "2020-10-29T15:41:17Z", "commit": {"oid": "40468c3ed3951680e95c1c6b9488044d96677093"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNTo0MToxOFrOHqiElQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNTo0MzozN1rOHqiLxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM2MDQ2OQ==", "bodyText": "It's not the end of the world to add the CQ_TXN_ID column, but we can avoid that and keep things more straightforward (i.e. keep compaction stuff out of generic TxnHandler and limit it to CompactionTxnHandler which was made specifically for updating compaction-related tables) by updating CQ_NEXT_TXN_ID in CompactionTxnHandler instead, and calling it straight from Worker, maybe right between commitTxn and markCompacted. It would be so much simpler.", "url": "https://github.com/apache/hive/pull/1592#discussion_r514360469", "createdAt": "2020-10-29T15:41:18Z", "author": {"login": "klcopp"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/txn/TxnHandler.java", "diffHunk": "@@ -1526,6 +1529,10 @@ private void updateWSCommitIdAndCleanUpMetadata(Statement stmt, long txnid, TxnT\n     if (txnType == TxnType.MATER_VIEW_REBUILD) {\n       queryBatch.add(\"DELETE FROM \\\"MATERIALIZATION_REBUILD_LOCKS\\\" WHERE \\\"MRL_TXN_ID\\\" = \" + txnid);\n     }\n+    if (txnType == TxnType.COMPACTION) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40468c3ed3951680e95c1c6b9488044d96677093"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM2MjMwOQ==", "bodyText": "Cleaner already knows this value, Cleaner#run calls CompactionTxnHandler#findMinOpenTxnIdForCleaner first, then findReadyToClean, so you can just pass it into findReadyToClean.\n(Btw findMinOpenTxnIdForCleaner doesn't filter out timed out txns like getMinOpenTxnIdWaterMark does, might want to change that? (AcidHouseKeeperService should take care of that, but who knows if it's on... on the other hand that's another query and would take longer))", "url": "https://github.com/apache/hive/pull/1592#discussion_r514362309", "createdAt": "2020-10-29T15:43:37Z", "author": {"login": "klcopp"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/txn/CompactionTxnHandler.java", "diffHunk": "@@ -281,9 +280,14 @@ public void markCompacted(CompactionInfo info) throws MetaException {\n       try {\n         dbConn = getDbConn(Connection.TRANSACTION_READ_COMMITTED);\n         stmt = dbConn.createStatement();\n-        String s = \"SELECT \\\"CQ_ID\\\", \\\"CQ_DATABASE\\\", \\\"CQ_TABLE\\\", \\\"CQ_PARTITION\\\", \" +\n-            \"\\\"CQ_TYPE\\\", \\\"CQ_RUN_AS\\\", \\\"CQ_HIGHEST_WRITE_ID\\\" FROM \\\"COMPACTION_QUEUE\\\" \" +\n-            \"WHERE \\\"CQ_STATE\\\" = '\" + READY_FOR_CLEANING + \"'\";\n+        /*\n+         * By filtering on minOpenTxnWaterMark, we will only cleanup after every transaction is committed, that could see\n+         * the uncompacted deltas. This way the cleaner can clean up everything that was made obsolete by this compaction.\n+         */\n+        long minOpenTxnWaterMark = getMinOpenTxnIdWaterMark(dbConn);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40468c3ed3951680e95c1c6b9488044d96677093"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99ff6958a35a063110394e0ae1aff0e5f4f1603a", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/99ff6958a35a063110394e0ae1aff0e5f4f1603a", "committedDate": "2020-10-30T07:24:54Z", "message": "HIVE-24291: Compaction cleaner should wait for all prev txn to commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c882c4d3550648608d2368b00f7b911c21cbe711", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/c882c4d3550648608d2368b00f7b911c21cbe711", "committedDate": "2020-10-30T07:24:54Z", "message": "Fixing tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "40468c3ed3951680e95c1c6b9488044d96677093", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/40468c3ed3951680e95c1c6b9488044d96677093", "committedDate": "2020-10-22T07:35:08Z", "message": "Fixing tests"}, "afterCommit": {"oid": "d3ea9961365d4471ac6dc8a38af210831b251a58", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/d3ea9961365d4471ac6dc8a38af210831b251a58", "committedDate": "2020-10-30T07:38:38Z", "message": "Address review comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5388ecdc5c7c309f119e43d25f3f5ff0558e9e40", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/5388ecdc5c7c309f119e43d25f3f5ff0558e9e40", "committedDate": "2020-10-30T07:59:33Z", "message": "Address review comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3ea9961365d4471ac6dc8a38af210831b251a58", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/d3ea9961365d4471ac6dc8a38af210831b251a58", "committedDate": "2020-10-30T07:38:38Z", "message": "Address review comment"}, "afterCommit": {"oid": "5388ecdc5c7c309f119e43d25f3f5ff0558e9e40", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/5388ecdc5c7c309f119e43d25f3f5ff0558e9e40", "committedDate": "2020-10-30T07:59:33Z", "message": "Address review comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNTI2NjAw", "url": "https://github.com/apache/hive/pull/1592#pullrequestreview-520526600", "createdAt": "2020-10-30T10:07:27Z", "commit": {"oid": "5388ecdc5c7c309f119e43d25f3f5ff0558e9e40"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMDowNzoyN1rOHrIeoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMDowNzoyN1rOHrIeoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk4OTcyOA==", "bodyText": "Do we expect it to be <= 0? Could we have CQ_NEXT_TXN_ID = NULL?", "url": "https://github.com/apache/hive/pull/1592#discussion_r514989728", "createdAt": "2020-10-30T10:07:27Z", "author": {"login": "deniskuzZ"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/txn/CompactionTxnHandler.java", "diffHunk": "@@ -281,9 +281,16 @@ public void markCompacted(CompactionInfo info) throws MetaException {\n       try {\n         dbConn = getDbConn(Connection.TRANSACTION_READ_COMMITTED);\n         stmt = dbConn.createStatement();\n-        String s = \"SELECT \\\"CQ_ID\\\", \\\"CQ_DATABASE\\\", \\\"CQ_TABLE\\\", \\\"CQ_PARTITION\\\", \" +\n-            \"\\\"CQ_TYPE\\\", \\\"CQ_RUN_AS\\\", \\\"CQ_HIGHEST_WRITE_ID\\\" FROM \\\"COMPACTION_QUEUE\\\" \" +\n-            \"WHERE \\\"CQ_STATE\\\" = '\" + READY_FOR_CLEANING + \"'\";\n+        /*\n+         * By filtering on minOpenTxnWaterMark, we will only cleanup after every transaction is committed, that could see\n+         * the uncompacted deltas. This way the cleaner can clean up everything that was made obsolete by this compaction.\n+         */\n+        String s = \"SELECT \\\"CQ_ID\\\", \\\"CQ_DATABASE\\\", \\\"CQ_TABLE\\\", \\\"CQ_PARTITION\\\", \"\n+                + \"\\\"CQ_TYPE\\\", \\\"CQ_RUN_AS\\\", \\\"CQ_HIGHEST_WRITE_ID\\\" FROM \\\"COMPACTION_QUEUE\\\" WHERE \\\"CQ_STATE\\\" = '\"\n+                + READY_FOR_CLEANING;\n+        if (minOpenTxnWaterMark > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5388ecdc5c7c309f119e43d25f3f5ff0558e9e40"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNTM2NDA3", "url": "https://github.com/apache/hive/pull/1592#pullrequestreview-520536407", "createdAt": "2020-10-30T10:21:20Z", "commit": {"oid": "5388ecdc5c7c309f119e43d25f3f5ff0558e9e40"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5266d4bb34ab0c681fed7accb32495ea8c1ac1b3", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/5266d4bb34ab0c681fed7accb32495ea8c1ac1b3", "committedDate": "2020-10-30T14:24:31Z", "message": "move compaction update to CompactionTxnHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3008a5ee29e12759d0281564cfeba5d434d81619", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/3008a5ee29e12759d0281564cfeba5d434d81619", "committedDate": "2020-11-01T15:11:36Z", "message": "Revert \"move compaction update to CompactionTxnHandler\"\n\nThis reverts commit 5266d4bb34ab0c681fed7accb32495ea8c1ac1b3."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1068364252429cd7f65eac7a5a3106d66e3a272", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/e1068364252429cd7f65eac7a5a3106d66e3a272", "committedDate": "2020-11-01T15:22:06Z", "message": "move compaction update to CTH"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMjM2NDQ1", "url": "https://github.com/apache/hive/pull/1592#pullrequestreview-521236445", "createdAt": "2020-11-01T15:49:33Z", "commit": {"oid": "e1068364252429cd7f65eac7a5a3106d66e3a272"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNTo0OTozM1rOHrwCXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNTo0OTozM1rOHrwCXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTYzNzg1Mg==", "bodyText": "Thanks for the change! It looks much cleaner and more readable to me. Could you please add \"@OverRide\" annotation as well.\nPending tests ...", "url": "https://github.com/apache/hive/pull/1592#discussion_r515637852", "createdAt": "2020-11-01T15:49:33Z", "author": {"login": "deniskuzZ"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/txn/CompactionTxnHandler.java", "diffHunk": "@@ -1120,50 +1128,34 @@ public void setHadoopJobId(String hadoopJobId, long id) {\n \n   @Override\n   @RetrySemantics.Idempotent\n-  public long findMinOpenTxnIdForCleaner() throws MetaException{\n+  public long findMinOpenTxnIdForCleaner() throws MetaException {\n     Connection dbConn = null;\n-    Statement stmt = null;\n-    ResultSet rs = null;\n     try {\n       try {\n         dbConn = getDbConn(Connection.TRANSACTION_READ_COMMITTED);\n-        stmt = dbConn.createStatement();\n-        String query = \"SELECT COUNT(\\\"TXN_ID\\\") FROM \\\"TXNS\\\" WHERE \\\"TXN_STATE\\\" = \" + TxnStatus.OPEN;\n-        LOG.debug(\"Going to execute query <\" + query + \">\");\n-        rs = stmt.executeQuery(query);\n-        if (!rs.next()) {\n-          throw new MetaException(\"Transaction tables not properly initialized.\");\n-        }\n-        long numOpenTxns = rs.getLong(1);\n-        if (numOpenTxns > 0) {\n-          query = \"SELECT MIN(\\\"RES\\\".\\\"ID\\\") FROM (\" +\n-              \"SELECT MIN(\\\"TXN_ID\\\") AS \\\"ID\\\" FROM \\\"TXNS\\\" WHERE \\\"TXN_STATE\\\" = \" + TxnStatus.OPEN +\n-              \" UNION \" +\n-              \"SELECT MAX(\\\"CQ_NEXT_TXN_ID\\\") AS \\\"ID\\\" FROM \\\"COMPACTION_QUEUE\\\" WHERE \\\"CQ_STATE\\\" = \"\n-              + quoteChar(READY_FOR_CLEANING) +\n-              \") \\\"RES\\\"\";\n-        } else {\n-          query = \"SELECT MAX(\\\"TXN_ID\\\") + 1 FROM \\\"TXNS\\\"\";\n-        }\n-        LOG.debug(\"Going to execute query <\" + query + \">\");\n-        rs = stmt.executeQuery(query);\n-        if (!rs.next()) {\n-          throw new MetaException(\"Transaction tables not properly initialized, no record found in TXNS\");\n-        }\n-        return rs.getLong(1);\n+        return getMinOpenTxnIdWaterMark(dbConn);\n       } catch (SQLException e) {\n         LOG.error(\"Unable to getMinOpenTxnIdForCleaner\", e);\n         rollbackDBConn(dbConn);\n         checkRetryable(dbConn, e, \"getMinOpenTxnForCleaner\");\n         throw new MetaException(\"Unable to execute getMinOpenTxnIfForCleaner() \" +\n             StringUtils.stringifyException(e));\n       } finally {\n-        close(rs, stmt, dbConn);\n+        closeDbConn(dbConn);\n       }\n     } catch (RetryException e) {\n       return findMinOpenTxnIdForCleaner();\n     }\n   }\n+\n+  protected void updateWSCommitIdAndCleanUpMetadata(Statement stmt, long txnid, TxnType txnType, Long commitId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1068364252429cd7f65eac7a5a3106d66e3a272"}, "originalPosition": 122}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "002a50f39d1186ff6fdcaa07faac712ab6396620", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/002a50f39d1186ff6fdcaa07faac712ab6396620", "committedDate": "2020-11-01T18:15:42Z", "message": "typo fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3a3b512f7d97d0fc8d7e0e57f4a23a1d2b05000", "author": {"user": {"login": "pvargacl", "name": "Peter Varga"}}, "url": "https://github.com/apache/hive/commit/b3a3b512f7d97d0fc8d7e0e57f4a23a1d2b05000", "committedDate": "2020-11-02T10:00:58Z", "message": "Temporary fix HIVE-24325 test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzE2MDkw", "url": "https://github.com/apache/hive/pull/1592#pullrequestreview-521716090", "createdAt": "2020-11-02T15:10:05Z", "commit": {"oid": "b3a3b512f7d97d0fc8d7e0e57f4a23a1d2b05000"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNToxMDowNVrOHsIcLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNToxMDowNVrOHsIcLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjAzNzY3Nw==", "bodyText": "You can revert this, I disabled it a minute ago.", "url": "https://github.com/apache/hive/pull/1592#discussion_r516037677", "createdAt": "2020-11-02T15:10:05Z", "author": {"login": "klcopp"}, "path": "ql/src/test/results/clientpositive/llap/cardinality_preserving_join_opt2.q.out", "diffHunk": "@@ -239,7 +239,7 @@ HiveProject(c1=[$11], c5=[$13], c6=[$14], c3=[$1], c4=[$2], c51=[$3], c61=[$4],\n             HiveFilter(condition=[IS NOT NULL($0)])\n               HiveTableScan(table=[[mydb_e10, d4_tab_e10]], table:alias=[r])\n         HiveProject(c1=[$0], c2=[$1], c4=[$3], c5=[$4])\n-          HiveFilter(condition=[AND(OR(IS NULL($4), >($4, 2020-10-01)), IS NOT NULL($1), IS NOT NULL($0))])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3a3b512f7d97d0fc8d7e0e57f4a23a1d2b05000"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNzIzMDgw", "url": "https://github.com/apache/hive/pull/1592#pullrequestreview-521723080", "createdAt": "2020-11-02T15:17:46Z", "commit": {"oid": "b3a3b512f7d97d0fc8d7e0e57f4a23a1d2b05000"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3196, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}