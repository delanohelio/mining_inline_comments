{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MjU0Njg5", "number": 1405, "title": "HIVE-24041: Extend semijoin conversion rules", "bodyText": "What changes were proposed in this pull request?\n\nWhy are the changes needed?\n\nDoes this PR introduce any user-facing change?\n\nHow was this patch tested?", "createdAt": "2020-08-15T03:41:58Z", "url": "https://github.com/apache/hive/pull/1405", "merged": true, "mergeCommit": {"oid": "4ab6cd5b28fa1dee43db72c52264fb79515bbb34"}, "closed": true, "closedAt": "2020-08-26T05:47:18Z", "author": {"login": "jcamachor"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_A1RhAH2gAyNDY4MjU0Njg5OjI4MGIwM2JhMWRhMWZkMzU5MmE3NTljMzA3ZTJlMDhkOTlmZTY0ZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCjdvpgFqTQ3NTEyOTYxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "280b03ba1da1fd3592a759c307e2e08d99fe64d3", "author": {"user": {"login": "jcamachor", "name": "Jes\u00fas Camacho Rodr\u00edguez"}}, "url": "https://github.com/apache/hive/commit/280b03ba1da1fd3592a759c307e2e08d99fe64d3", "committedDate": "2020-08-15T03:41:30Z", "message": "HIVE-24041: Extend semijoin conversion rules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2192fb3bbd021c76cd07ea3b5f8fb240f969aa6", "author": {"user": {"login": "jcamachor", "name": "Jes\u00fas Camacho Rodr\u00edguez"}}, "url": "https://github.com/apache/hive/commit/e2192fb3bbd021c76cd07ea3b5f8fb240f969aa6", "committedDate": "2020-08-15T04:40:41Z", "message": "fix and q files update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ad7d74653a8f351c608567a18c33ff7c5707e6a", "author": {"user": {"login": "jcamachor", "name": "Jes\u00fas Camacho Rodr\u00edguez"}}, "url": "https://github.com/apache/hive/commit/0ad7d74653a8f351c608567a18c33ff7c5707e6a", "committedDate": "2020-08-24T19:39:02Z", "message": "update q files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4abe7aae82b33d877cea7c04e1ea54534ac08844", "author": {"user": {"login": "jcamachor", "name": "Jes\u00fas Camacho Rodr\u00edguez"}}, "url": "https://github.com/apache/hive/commit/4abe7aae82b33d877cea7c04e1ea54534ac08844", "committedDate": "2020-08-24T20:18:20Z", "message": "disable SMB conversion for test: Tackled in another JIRA"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0MTMxMjEz", "url": "https://github.com/apache/hive/pull/1405#pullrequestreview-474131213", "createdAt": "2020-08-25T04:45:53Z", "commit": {"oid": "4abe7aae82b33d877cea7c04e1ea54534ac08844"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNDo0NTo1M1rOHGHD8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwNToyMDowNlrOHGH8kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE2OTIwMQ==", "bodyText": "nit.: Is the parameter value always HiveRelFactories.HIVE_BUILDER ? It can be moved to the base class as a constant.", "url": "https://github.com/apache/hive/pull/1405#discussion_r476169201", "createdAt": "2020-08-25T04:45:53Z", "author": {"login": "kasakrisz"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/rules/HiveSemiJoinRule.java", "diffHunk": "@@ -33,194 +37,263 @@\n import org.apache.calcite.rex.RexBuilder;\n import org.apache.calcite.rex.RexNode;\n import org.apache.calcite.tools.RelBuilder;\n+import org.apache.calcite.tools.RelBuilder.GroupKey;\n import org.apache.calcite.tools.RelBuilderFactory;\n import org.apache.calcite.util.ImmutableBitSet;\n+import org.apache.calcite.util.ImmutableIntList;\n+import org.apache.hadoop.hive.ql.optimizer.calcite.HiveCalciteUtil;\n import org.apache.hadoop.hive.ql.optimizer.calcite.HiveRelFactories;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import com.google.common.collect.ImmutableList;\n-import com.google.common.collect.Lists;\n \n import java.util.ArrayList;\n import java.util.List;\n \n /**\n- * Planner rule that creates a {@code SemiJoinRule} from a\n- * {@link org.apache.calcite.rel.core.Join} on top of a\n- * {@link org.apache.calcite.rel.logical.LogicalAggregate}.\n- *\n- * TODO Remove this rule and use Calcite's SemiJoinRule. Not possible currently\n- * since Calcite doesnt use RelBuilder for this rule and we want to generate HiveSemiJoin rel here.\n+ * Class that gathers SemiJoin conversion rules.\n  */\n-public abstract class HiveSemiJoinRule extends RelOptRule {\n+public class HiveSemiJoinRule {\n \n-  protected static final Logger LOG = LoggerFactory.getLogger(HiveSemiJoinRule.class);\n+  public static final HiveProjectJoinToSemiJoinRule INSTANCE_PROJECT =\n+      new HiveProjectJoinToSemiJoinRule(HiveRelFactories.HIVE_BUILDER);\n \n-  public static final HiveProjectToSemiJoinRule INSTANCE_PROJECT =\n-      new HiveProjectToSemiJoinRule(HiveRelFactories.HIVE_BUILDER);\n+  public static final HiveAggregateJoinToSemiJoinRule INSTANCE_AGGREGATE =\n+      new HiveAggregateJoinToSemiJoinRule(HiveRelFactories.HIVE_BUILDER);\n \n-  public static final HiveProjectToSemiJoinRuleSwapInputs INSTANCE_PROJECT_SWAPPED =\n-      new HiveProjectToSemiJoinRuleSwapInputs(HiveRelFactories.HIVE_BUILDER);\n+  public static final HiveProjectJoinToSemiJoinRuleSwapInputs INSTANCE_PROJECT_SWAPPED =\n+      new HiveProjectJoinToSemiJoinRuleSwapInputs(HiveRelFactories.HIVE_BUILDER);\n \n-  public static final HiveAggregateToSemiJoinRule INSTANCE_AGGREGATE =\n-      new HiveAggregateToSemiJoinRule(HiveRelFactories.HIVE_BUILDER);\n+  public static final HiveAggregateJoinToSemiJoinRuleSwapInputs INSTANCE_AGGREGATE_SWAPPED =\n+      new HiveAggregateJoinToSemiJoinRuleSwapInputs(HiveRelFactories.HIVE_BUILDER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4abe7aae82b33d877cea7c04e1ea54534ac08844"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjE4MzY5Nw==", "bodyText": "Based on the test filename this test intend to test automatic conversion to a sort-merge join but it is not tested anymore if the feature is turned off.", "url": "https://github.com/apache/hive/pull/1405#discussion_r476183697", "createdAt": "2020-08-25T05:20:06Z", "author": {"login": "kasakrisz"}, "path": "ql/src/test/queries/clientpositive/auto_sortmerge_join_10.q", "diffHunk": "@@ -48,6 +48,8 @@ select count(*) from\n   (select a.key as key, a.value as value from tbl2_n4 a where key < 6) subq2\n   on subq1.key = subq2.key;\n \n+set hive.auto.convert.sortmerge.join=false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4abe7aae82b33d877cea7c04e1ea54534ac08844"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97fcb7158bca7a6c7576f5ee22de61d3ea6e0704", "author": {"user": {"login": "jcamachor", "name": "Jes\u00fas Camacho Rodr\u00edguez"}}, "url": "https://github.com/apache/hive/commit/97fcb7158bca7a6c7576f5ee22de61d3ea6e0704", "committedDate": "2020-08-25T14:26:08Z", "message": "moving builder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1MTI5NjEx", "url": "https://github.com/apache/hive/pull/1405#pullrequestreview-475129611", "createdAt": "2020-08-26T03:44:15Z", "commit": {"oid": "97fcb7158bca7a6c7576f5ee22de61d3ea6e0704"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3459, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}