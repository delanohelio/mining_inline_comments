{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0ODk5MjU1", "number": 1119, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMDo0Mzo0OVrOEFvjLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMDo0Mzo0OVrOEFvjLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDU3Mzg5OnYy", "diffSide": "RIGHT", "path": "common/src/java/org/apache/hadoop/hive/conf/HiveConf.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMDo0Mzo0OVrOGkHYJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQyMjo1ODoxMFrOGpwzfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyMjc4OA==", "bodyText": "Should I even bother with this interface? The intent was originally to have static definitions of getValidSet and getInvalid as part of the interface in addition to from. Except Java interfaces don't allow implementations of an interface to override static methods. The from method here is also not super useful in that I think I still have to fully qualify the call (I.E. HiveConfEnum.from()). It would be nice if we could define required static methods on a enum interface for future uses of enums in HiveConf, but I don't think it is cleanly possible.", "url": "https://github.com/apache/hive/pull/1119#discussion_r440522788", "createdAt": "2020-06-16T00:43:49Z", "author": {"login": "jfsii"}, "path": "common/src/java/org/apache/hadoop/hive/conf/HiveConf.java", "diffHunk": "@@ -101,6 +102,65 @@\n   private volatile boolean isSparkConfigUpdated = false;\n   private static final int LOG_PREFIX_LENGTH = 64;\n \n+  interface HiveConfEnum<T extends Enum<T>> {\n+    public static <T extends Enum<T>> T from(Class<T> cls, String value, T invalidEnum) {\n+      try {\n+        return T.valueOf(cls, value.toUpperCase());\n+      } catch (Exception e) {\n+        return invalidEnum;\n+      }\n+    }\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "462b7056e5ef0279e9a4b7448242dd1af65793bc"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ0Mjg4NA==", "bodyText": "I am not sure we need the interface indeed, probably the utility method would suffice?", "url": "https://github.com/apache/hive/pull/1119#discussion_r446442884", "createdAt": "2020-06-26T22:51:54Z", "author": {"login": "jcamachor"}, "path": "common/src/java/org/apache/hadoop/hive/conf/HiveConf.java", "diffHunk": "@@ -101,6 +102,65 @@\n   private volatile boolean isSparkConfigUpdated = false;\n   private static final int LOG_PREFIX_LENGTH = 64;\n \n+  interface HiveConfEnum<T extends Enum<T>> {\n+    public static <T extends Enum<T>> T from(Class<T> cls, String value, T invalidEnum) {\n+      try {\n+        return T.valueOf(cls, value.toUpperCase());\n+      } catch (Exception e) {\n+        return invalidEnum;\n+      }\n+    }\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyMjc4OA=="}, "originalCommit": {"oid": "462b7056e5ef0279e9a4b7448242dd1af65793bc"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjQ0NDQxNA==", "bodyText": "Yeah, I'll remove it. I don't even remember why it was a question for me.", "url": "https://github.com/apache/hive/pull/1119#discussion_r446444414", "createdAt": "2020-06-26T22:58:10Z", "author": {"login": "jfsii"}, "path": "common/src/java/org/apache/hadoop/hive/conf/HiveConf.java", "diffHunk": "@@ -101,6 +102,65 @@\n   private volatile boolean isSparkConfigUpdated = false;\n   private static final int LOG_PREFIX_LENGTH = 64;\n \n+  interface HiveConfEnum<T extends Enum<T>> {\n+    public static <T extends Enum<T>> T from(Class<T> cls, String value, T invalidEnum) {\n+      try {\n+        return T.valueOf(cls, value.toUpperCase());\n+      } catch (Exception e) {\n+        return invalidEnum;\n+      }\n+    }\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyMjc4OA=="}, "originalCommit": {"oid": "462b7056e5ef0279e9a4b7448242dd1af65793bc"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 619, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}