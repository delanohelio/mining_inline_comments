{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMzYyMjEz", "number": 1029, "title": "HIVE-23526: Beeline may throw the misleading exception.", "bodyText": "", "createdAt": "2020-05-21T13:48:36Z", "url": "https://github.com/apache/hive/pull/1029", "merged": true, "mergeCommit": {"oid": "58e2a2f4cf06ceee48275c41e29d1f803175a657"}, "closed": true, "closedAt": "2020-06-10T13:15:04Z", "author": {"login": "dengzhhu653"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckl_XFgBqjMzNjg1NDEyMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpypakABqjM0Mjc4NDgxNTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34b21391128f6ea983202036b71e6abedabe2384", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/34b21391128f6ea983202036b71e6abedabe2384", "committedDate": "2020-05-23T03:18:07Z", "message": "set driver timeout to 0 to avoid socket read timeout"}, "afterCommit": {"oid": "0ec6a1e7b922e496fc42688b7949e72df973fc2b", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/0ec6a1e7b922e496fc42688b7949e72df973fc2b", "committedDate": "2020-05-25T01:37:20Z", "message": "set driver timeout to 0 to avoid socket read timeout"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ec6a1e7b922e496fc42688b7949e72df973fc2b", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/0ec6a1e7b922e496fc42688b7949e72df973fc2b", "committedDate": "2020-05-25T01:37:20Z", "message": "set driver timeout to 0 to avoid socket read timeout"}, "afterCommit": {"oid": "b9ddd5a296c9a3257627d90602e09b3231025ff2", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/b9ddd5a296c9a3257627d90602e09b3231025ff2", "committedDate": "2020-05-28T02:39:21Z", "message": "HIVE-23526: Beeline may throw the misleading exception."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9ddd5a296c9a3257627d90602e09b3231025ff2", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/b9ddd5a296c9a3257627d90602e09b3231025ff2", "committedDate": "2020-05-28T02:39:21Z", "message": "HIVE-23526: Beeline may throw the misleading exception."}, "afterCommit": {"oid": "674abf18fa33d4ecd7659f06be467e377854c369", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/674abf18fa33d4ecd7659f06be467e377854c369", "committedDate": "2020-05-31T09:00:50Z", "message": "HIVE-23256: Beeline may throw the misleading exception."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNDE2ODQ1", "url": "https://github.com/apache/hive/pull/1029#pullrequestreview-422416845", "createdAt": "2020-06-02T07:38:20Z", "commit": {"oid": "674abf18fa33d4ecd7659f06be467e377854c369"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzozODoyMFrOGdlqkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzozODoyMFrOGdlqkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY3ODk5NQ==", "bodyText": "removing this line will mean that the resultset will be never closed - even when the issue doesn't happen...\nisn't there a way to fix this w/o removing this close call?", "url": "https://github.com/apache/hive/pull/1029#discussion_r433678995", "createdAt": "2020-06-02T07:38:20Z", "author": {"login": "kgyrtkirk"}, "path": "beeline/src/java/org/apache/hive/beeline/Commands.java", "diffHunk": "@@ -974,86 +974,79 @@ private boolean executeInternal(String sql, boolean call) {\n \n     ClientHook hook = ClientCommandHookFactory.get().getHook(beeLine, sql);\n \n-    try {\n-      Statement stmnt = null;\n-      boolean hasResults;\n-      Thread logThread = null;\n+    Statement stmnt = null;\n+    boolean hasResults;\n+    Thread logThread = null;\n \n-      try {\n-        long start = System.currentTimeMillis();\n+    try {\n+      long start = System.currentTimeMillis();\n \n-        if (call) {\n-          stmnt = beeLine.getDatabaseConnection().getConnection().prepareCall(sql);\n-          hasResults = ((CallableStatement) stmnt).execute();\n+      if (call) {\n+        stmnt = beeLine.getDatabaseConnection().getConnection().prepareCall(sql);\n+        hasResults = ((CallableStatement) stmnt).execute();\n+      } else {\n+        stmnt = beeLine.createStatement();\n+        // In test mode we want the operation logs regardless of the settings\n+        if (!beeLine.isTestMode() && beeLine.getOpts().isSilent()) {\n+          hasResults = stmnt.execute(sql);\n         } else {\n-          stmnt = beeLine.createStatement();\n-          // In test mode we want the operation logs regardless of the settings\n-          if (!beeLine.isTestMode() && beeLine.getOpts().isSilent()) {\n-            hasResults = stmnt.execute(sql);\n-          } else {\n-            InPlaceUpdateStream.EventNotifier eventNotifier =\n-                new InPlaceUpdateStream.EventNotifier();\n-            logThread = new Thread(createLogRunnable(stmnt, eventNotifier));\n-            logThread.setDaemon(true);\n-            logThread.start();\n-            if (stmnt instanceof HiveStatement) {\n-              HiveStatement hiveStatement = (HiveStatement) stmnt;\n-              hiveStatement.setInPlaceUpdateStream(\n-                  new BeelineInPlaceUpdateStream(\n-                      beeLine.getErrorStream(),\n-                      eventNotifier\n-                  ));\n-            }\n-            hasResults = stmnt.execute(sql);\n-            logThread.interrupt();\n-            logThread.join(DEFAULT_QUERY_PROGRESS_THREAD_TIMEOUT);\n+          InPlaceUpdateStream.EventNotifier eventNotifier =\n+              new InPlaceUpdateStream.EventNotifier();\n+          logThread = new Thread(createLogRunnable(stmnt, eventNotifier));\n+          logThread.setDaemon(true);\n+          logThread.start();\n+          if (stmnt instanceof HiveStatement) {\n+            HiveStatement hiveStatement = (HiveStatement) stmnt;\n+            hiveStatement.setInPlaceUpdateStream(\n+                new BeelineInPlaceUpdateStream(\n+                    beeLine.getErrorStream(),\n+                    eventNotifier\n+                ));\n           }\n+          hasResults = stmnt.execute(sql);\n+          logThread.interrupt();\n+          logThread.join(DEFAULT_QUERY_PROGRESS_THREAD_TIMEOUT);\n         }\n+      }\n \n-        beeLine.showWarnings();\n-\n-        if (hasResults) {\n-          OutputFile outputFile = beeLine.getRecordOutputFile();\n-          if (beeLine.isTestMode() && outputFile != null && outputFile.isActiveConverter()) {\n-            outputFile.fetchStarted();\n-            if (!sql.trim().toLowerCase().startsWith(\"explain\")) {\n-              outputFile.foundQuery(true);\n-            } else {\n-              outputFile.foundQuery(false);\n-            }\n-          }\n-          do {\n-            ResultSet rs = stmnt.getResultSet();\n-            try {\n-              int count = beeLine.print(rs);\n-              long end = System.currentTimeMillis();\n-\n-              if (showReport()) {\n-                beeLine.output(beeLine.loc(\"rows-selected\", count) + \" \" + beeLine.locElapsedTime(end - start),\n-                    true, beeLine.getErrorStream());\n-              }\n-            } finally {\n-              if (logThread != null) {\n-                logThread.join(DEFAULT_QUERY_PROGRESS_THREAD_TIMEOUT);\n-                showRemainingLogsIfAny(stmnt);\n-                logThread = null;\n-              }\n-              rs.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "674abf18fa33d4ecd7659f06be467e377854c369"}, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MDU1NzA5", "url": "https://github.com/apache/hive/pull/1029#pullrequestreview-424055709", "createdAt": "2020-06-04T02:15:59Z", "commit": {"oid": "22be75bb11ff744c4e6b4450c9c31f928846814a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMjoxNTo1OVrOGeze9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMjoxNTo1OVrOGeze9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk1Mzk3NQ==", "bodyText": "Closing the result set can throw a SQLException in which case it will skip over the Statement#close() method.", "url": "https://github.com/apache/hive/pull/1029#discussion_r434953975", "createdAt": "2020-06-04T02:15:59Z", "author": {"login": "belugabehr"}, "path": "beeline/src/java/org/apache/hive/beeline/Commands.java", "diffHunk": "@@ -1063,13 +1057,17 @@ private boolean executeInternal(String sql, boolean call) {\n             showRemainingLogsIfAny(stmnt);\n           }\n         }\n+        if (rs != null) {\n+          rs.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22be75bb11ff744c4e6b4450c9c31f928846814a"}, "originalPosition": 153}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6479d9d13d9a83bb76a8916cc1c4a1beacf4e5d6", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/6479d9d13d9a83bb76a8916cc1c4a1beacf4e5d6", "committedDate": "2020-06-04T08:58:42Z", "message": "HIVE-23526: Beeline may throw the misleading exception."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22be75bb11ff744c4e6b4450c9c31f928846814a", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/22be75bb11ff744c4e6b4450c9c31f928846814a", "committedDate": "2020-06-02T10:29:22Z", "message": "close resultset"}, "afterCommit": {"oid": "6479d9d13d9a83bb76a8916cc1c4a1beacf4e5d6", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/6479d9d13d9a83bb76a8916cc1c4a1beacf4e5d6", "committedDate": "2020-06-04T08:58:42Z", "message": "HIVE-23526: Beeline may throw the misleading exception."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NDI4NTc4", "url": "https://github.com/apache/hive/pull/1029#pullrequestreview-424428578", "createdAt": "2020-06-04T13:15:50Z", "commit": {"oid": "6479d9d13d9a83bb76a8916cc1c4a1beacf4e5d6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzoxNTo1MFrOGfFK4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzoxODoxN1rOGfFRrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI0Mzc0NQ==", "bodyText": "Please do not use instanceof here, just create a new catch block for TApplicationException types.", "url": "https://github.com/apache/hive/pull/1029#discussion_r435243745", "createdAt": "2020-06-04T13:15:50Z", "author": {"login": "belugabehr"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveStatement.java", "diffHunk": "@@ -197,6 +198,12 @@ private void closeStatementIfNeeded() throws SQLException {\n     } catch (SQLException e) {\n       throw e;\n     } catch (Exception e) {\n+      if (e instanceof TApplicationException && ((TApplicationException)e)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6479d9d13d9a83bb76a8916cc1c4a1beacf4e5d6"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI0NTQ4NQ==", "bodyText": "Please do not say 'is usually caused by'.  We do not yet know what \"usual\" is.\nTry something like:\nMismatch thrift sequence id.  A previous call to the Thrift library failed and now position within the input stream is lost.  Please enable verbose error logging and check the status of previous calls.", "url": "https://github.com/apache/hive/pull/1029#discussion_r435245485", "createdAt": "2020-06-04T13:18:17Z", "author": {"login": "belugabehr"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveStatement.java", "diffHunk": "@@ -197,6 +198,12 @@ private void closeStatementIfNeeded() throws SQLException {\n     } catch (SQLException e) {\n       throw e;\n     } catch (Exception e) {\n+      if (e instanceof TApplicationException && ((TApplicationException)e)\n+          .getType() == TApplicationException.BAD_SEQUENCE_ID) {\n+        String errorMsg = \"Mismatch thrift sequence id, which usually is caused by an OutOfMemoryError \" +\n+            \"or a SocketTimeoutException, please check the memory status and previous calls.\";\n+        throw new SQLException(errorMsg, \"08S01\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6479d9d13d9a83bb76a8916cc1c4a1beacf4e5d6"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NDc1MjMz", "url": "https://github.com/apache/hive/pull/1029#pullrequestreview-424475233", "createdAt": "2020-06-04T13:56:18Z", "commit": {"oid": "c2f82cf0ef92a66f2128d81a02705660ee79466d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzo1NjoxOFrOGfHOqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzo1NjoxOFrOGfHOqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI3NzQ4Mw==", "bodyText": "The default message should still be Failed to close statement.  The message of the TApplicationException will be preserved because the entire Exception is passed into the SQLException.\nWith that said, you can you please append that to the BAD_SEQUENCE_ID error as well?\n\nFailed to close statement.  Mismatch thrift sequence id. A previous ...", "url": "https://github.com/apache/hive/pull/1029#discussion_r435277483", "createdAt": "2020-06-04T13:56:18Z", "author": {"login": "belugabehr"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveStatement.java", "diffHunk": "@@ -196,6 +197,14 @@ private void closeStatementIfNeeded() throws SQLException {\n       }\n     } catch (SQLException e) {\n       throw e;\n+    } catch (TApplicationException tae) {\n+      String errorMsg = tae.getMessage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2f82cf0ef92a66f2128d81a02705660ee79466d"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NTEwNjE3", "url": "https://github.com/apache/hive/pull/1029#pullrequestreview-424510617", "createdAt": "2020-06-04T14:30:41Z", "commit": {"oid": "6e91c2494020c2e951dc4dc90b7b46ff7a4bb380"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDozMDo0MVrOGfI2tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDozMDo0MVrOGfI2tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTMwNDExOA==", "bodyText": "Lol.  I'm so sorry to do this to you, I've been in your seat quite a few times myself, but can you please do one more push?  Please do not do the string concatenation.  This could be ripe for errors if the code changes later.  Just use a single static string which includes the words \"Failed to close statement.\"", "url": "https://github.com/apache/hive/pull/1029#discussion_r435304118", "createdAt": "2020-06-04T14:30:41Z", "author": {"login": "belugabehr"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveStatement.java", "diffHunk": "@@ -198,9 +198,9 @@ private void closeStatementIfNeeded() throws SQLException {\n     } catch (SQLException e) {\n       throw e;\n     } catch (TApplicationException tae) {\n-      String errorMsg = tae.getMessage();\n+      String errorMsg = \"Failed to close statement\";\n       if (tae.getType() == TApplicationException.BAD_SEQUENCE_ID) {\n-        errorMsg = \"Mismatch thrift sequence id. A previous call to the Thrift library failed\"\n+        errorMsg += \". Mismatch thrift sequence id. A previous call to the Thrift library failed\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e91c2494020c2e951dc4dc90b7b46ff7a4bb380"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NTQ1MTY3", "url": "https://github.com/apache/hive/pull/1029#pullrequestreview-424545167", "createdAt": "2020-06-04T15:04:39Z", "commit": {"oid": "b9dbf532a1c7ca47434836d8011494df6a212b3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9dbf532a1c7ca47434836d8011494df6a212b3d", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/b9dbf532a1c7ca47434836d8011494df6a212b3d", "committedDate": "2020-06-04T14:54:59Z", "message": "remove line"}, "afterCommit": {"oid": "80bd8af70d3a697d1b80d37f87040962169f895a", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/80bd8af70d3a697d1b80d37f87040962169f895a", "committedDate": "2020-06-04T22:47:52Z", "message": "trigger test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80bd8af70d3a697d1b80d37f87040962169f895a", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/80bd8af70d3a697d1b80d37f87040962169f895a", "committedDate": "2020-06-04T22:47:52Z", "message": "trigger test"}, "afterCommit": {"oid": "8da3aa1b41298da9ed38b188607cad58edbbd66f", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/8da3aa1b41298da9ed38b188607cad58edbbd66f", "committedDate": "2020-06-05T05:12:27Z", "message": "trigger test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "feee7e41ae2e1e7c9e446cd86704ab659dcfd66e", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/feee7e41ae2e1e7c9e446cd86704ab659dcfd66e", "committedDate": "2020-06-10T05:16:54Z", "message": "fix error message"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8da3aa1b41298da9ed38b188607cad58edbbd66f", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/8da3aa1b41298da9ed38b188607cad58edbbd66f", "committedDate": "2020-06-05T05:12:27Z", "message": "trigger test"}, "afterCommit": {"oid": "feee7e41ae2e1e7c9e446cd86704ab659dcfd66e", "author": {"user": {"login": "dengzhhu653", "name": "dengzh"}}, "url": "https://github.com/apache/hive/commit/feee7e41ae2e1e7c9e446cd86704ab659dcfd66e", "committedDate": "2020-06-10T05:16:54Z", "message": "fix error message"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3764, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}