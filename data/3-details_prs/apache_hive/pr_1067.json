{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NTgwODEz", "number": 1067, "title": "HIVE-23627: Review of GroupByOperator", "bodyText": "", "createdAt": "2020-06-05T16:54:21Z", "url": "https://github.com/apache/hive/pull/1067", "merged": true, "mergeCommit": {"oid": "e3f2dfd27ec06c64b3092d243d784a5d08f00ed1"}, "closed": true, "closedAt": "2020-06-18T06:11:07Z", "author": {"login": "belugabehr"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoVyWHgFqTQyNTQ3NDY0OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsYMmXAFqTQzMjk2NjQwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NDc0NjQ4", "url": "https://github.com/apache/hive/pull/1067#pullrequestreview-425474648", "createdAt": "2020-06-05T17:06:02Z", "commit": {"oid": "6b31fea4b6c319066e952d6bc5057ff14bcfb6b7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzowNjowM1rOGf2ZzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzowNjowM1rOGf2ZzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA1MDM4MQ==", "bodyText": "We were skipping string garbage for this, I think we can switch to the {} format", "url": "https://github.com/apache/hive/pull/1067#discussion_r436050381", "createdAt": "2020-06-05T17:06:03Z", "author": {"login": "t3rmin4t0r"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/GroupByOperator.java", "diffHunk": "@@ -990,24 +955,17 @@ private void flushHashTable(boolean complete) throws HiveException {\n     // changed in the future\n \n     if (complete) {\n-      Iterator<Map.Entry<KeyWrapper, AggregationBuffer[]>> iter = hashAggregations\n-          .entrySet().iterator();\n-      while (iter.hasNext()) {\n-        Map.Entry<KeyWrapper, AggregationBuffer[]> m = iter.next();\n-        forward(m.getKey().getKeyArray(), m.getValue());\n+      for (Map.Entry<KeyWrapper, AggregationBuffer[]> entry : hashAggregations.entrySet()) {\n+        forward(entry.getKey().getKeyArray(), entry.getValue());\n       }\n-      hashAggregations.clear();\n       hashAggregations = null;\n-      if (LOG.isInfoEnabled()) {\n-        LOG.info(\"Hash Table completed flushed\");\n-      }\n+      LOG.info(\"Hash Table completed flushed\");\n       return;\n     }\n \n     int oldSize = hashAggregations.size();\n-    if (LOG.isInfoEnabled()) {\n-      LOG.info(\"Hash Tbl flush: #hash table = \" + oldSize);\n-    }\n+    LOG.info(\"Hash Tbl flush: #hash table = \" + oldSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b31fea4b6c319066e952d6bc5057ff14bcfb6b7"}, "originalPosition": 166}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07ab97144263397456fba60682f1c61c49e9716e", "author": {"user": {"login": "belugabehr", "name": null}}, "url": "https://github.com/apache/hive/commit/07ab97144263397456fba60682f1c61c49e9716e", "committedDate": "2020-06-05T19:13:37Z", "message": "Use SLF4J parameterized logging"}, "afterCommit": {"oid": "d36ba0a64ce1a0e6421e725313dff37fd582af64", "author": {"user": {"login": "belugabehr", "name": null}}, "url": "https://github.com/apache/hive/commit/d36ba0a64ce1a0e6421e725313dff37fd582af64", "committedDate": "2020-06-05T19:15:24Z", "message": "Use SLF4J parameterized logging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NjcxMjM1", "url": "https://github.com/apache/hive/pull/1067#pullrequestreview-425671235", "createdAt": "2020-06-05T22:57:30Z", "commit": {"oid": "d36ba0a64ce1a0e6421e725313dff37fd582af64"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMjo1NzozMFrOGf_e6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMjo1NzozMFrOGf_e6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE5OTE0Ng==", "bodyText": "I assume that LinkedHashSet was chosen in order to retain the order of the elements and avoid calling contains on a List.\nHowever, I have the impression that we can avoid the call to List#contains rather easy since the way we populate the list is controlled.\nMoreover, I think that the order of inserting the elements does not really matter since what we are storing inside is a pointer to an aggregate and when it is used it is used with indirection. The same pointer that we are putting in this list we are putting also to the nonDistinctKeyAggrs and distinctKeyAggrs inside the sets, so it is another indicator that retaining the order is useless.\nSo instead of using the LinkedHashSet some other alternatives would be to  would be to keep the ArrayList with a small refactoring to avoid List#contains or use a plain HashSet.", "url": "https://github.com/apache/hive/pull/1067#discussion_r436199146", "createdAt": "2020-06-05T22:57:30Z", "author": {"login": "zabetak"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/GroupByOperator.java", "diffHunk": "@@ -90,13 +91,11 @@\n   // so aggregationIsDistinct is a boolean array instead of a single number.\n   private transient boolean[] aggregationIsDistinct;\n   // Map from integer tag to distinct aggrs\n-  private transient Map<Integer, Set<Integer>> distinctKeyAggrs =\n-    new HashMap<Integer, Set<Integer>>();\n+  private transient Map<Integer, Set<Integer>> distinctKeyAggrs = new HashMap<>();\n   // Map from integer tag to non-distinct aggrs with key parameters.\n-  private transient Map<Integer, Set<Integer>> nonDistinctKeyAggrs =\n-    new HashMap<Integer, Set<Integer>>();\n+  private transient Map<Integer, Set<Integer>> nonDistinctKeyAggrs = new HashMap<>();\n   // List of non-distinct aggrs.\n-  private transient List<Integer> nonDistinctAggrs = new ArrayList<Integer>();\n+  private transient Set<Integer> nonDistinctAggrs = new LinkedHashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36ba0a64ce1a0e6421e725313dff37fd582af64"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d02077ab4d8919ff8555e5af69fd528f791e757", "author": {"user": {"login": "belugabehr", "name": null}}, "url": "https://github.com/apache/hive/commit/1d02077ab4d8919ff8555e5af69fd528f791e757", "committedDate": "2020-06-10T13:26:46Z", "message": "HIVE-23627: Review of GroupByOperator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "630a119efc5583f4b2e246939de246166e60bfff", "author": {"user": {"login": "belugabehr", "name": null}}, "url": "https://github.com/apache/hive/commit/630a119efc5583f4b2e246939de246166e60bfff", "committedDate": "2020-06-10T13:26:46Z", "message": "Use SLF4J parameterized logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0110b0c3c61d3a7220c1bcc7e8831713750ba82", "author": {"user": {"login": "belugabehr", "name": null}}, "url": "https://github.com/apache/hive/commit/f0110b0c3c61d3a7220c1bcc7e8831713750ba82", "committedDate": "2020-06-10T13:29:52Z", "message": "Use HashSet instead of LinkedHashSet"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d36ba0a64ce1a0e6421e725313dff37fd582af64", "author": {"user": {"login": "belugabehr", "name": null}}, "url": "https://github.com/apache/hive/commit/d36ba0a64ce1a0e6421e725313dff37fd582af64", "committedDate": "2020-06-05T19:15:24Z", "message": "Use SLF4J parameterized logging"}, "afterCommit": {"oid": "f0110b0c3c61d3a7220c1bcc7e8831713750ba82", "author": {"user": {"login": "belugabehr", "name": null}}, "url": "https://github.com/apache/hive/commit/f0110b0c3c61d3a7220c1bcc7e8831713750ba82", "committedDate": "2020-06-10T13:29:52Z", "message": "Use HashSet instead of LinkedHashSet"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMTc0Njc2", "url": "https://github.com/apache/hive/pull/1067#pullrequestreview-432174676", "createdAt": "2020-06-17T08:29:16Z", "commit": {"oid": "f0110b0c3c61d3a7220c1bcc7e8831713750ba82"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODoyOToxN1rOGk7TLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODoyOToxN1rOGk7TLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM3MzQ4Ng==", "bodyText": "nit: missing space", "url": "https://github.com/apache/hive/pull/1067#discussion_r441373486", "createdAt": "2020-06-17T08:29:17Z", "author": {"login": "pvary"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/GroupByOperator.java", "diffHunk": "@@ -899,12 +873,8 @@ private boolean shouldBeFlushed(KeyWrapper newKeys) {\n       // Assuming the used memory is equally divided among all executors.\n       usedMemory = isLlap ? usedMemory / numExecutors : usedMemory;\n       rate = (float) usedMemory / (float) maxMemory;\n-      if(rate > memoryThreshold){\n-        if (isTez && numEntriesHashTable == 0) {\n-          return false;\n-        } else {\n-          return true;\n-        }\n+      if (rate > memoryThreshold){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0110b0c3c61d3a7220c1bcc7e8831713750ba82"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe31437f5d61bd57a23577761ebe4ced67b9d837", "author": {"user": {"login": "belugabehr", "name": null}}, "url": "https://github.com/apache/hive/commit/fe31437f5d61bd57a23577761ebe4ced67b9d837", "committedDate": "2020-06-17T13:36:02Z", "message": "Fix checksyle issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNDEyMTc2", "url": "https://github.com/apache/hive/pull/1067#pullrequestreview-432412176", "createdAt": "2020-06-17T13:40:44Z", "commit": {"oid": "fe31437f5d61bd57a23577761ebe4ced67b9d837"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyOTY2NDA1", "url": "https://github.com/apache/hive/pull/1067#pullrequestreview-432966405", "createdAt": "2020-06-18T06:10:14Z", "commit": {"oid": "fe31437f5d61bd57a23577761ebe4ced67b9d837"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3810, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}