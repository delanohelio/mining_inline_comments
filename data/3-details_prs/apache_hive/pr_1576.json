{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMjg0NDM1", "number": 1576, "title": "HIVE-24266", "bodyText": "in HDFS environment if a writer is using hflush to write ORC ACID files during a transaction commit, the results might be seen as missing when reading the table before this file is completely persisted to disk (thus synced)\nThis is due to hflush not persisting the new buffers to disk, it rather just ensures that new readers can see the new content. This causes the block information to be incomplete, on which BISplitStrategy relies on. Although the side file (_flush_length) tracks the proper end of the file that is being written, this information is neglected in the favour of block information, and we may end up generating a very short split instead of the larger, available length.\nWhen ETLSplitStrategy is used there is not even a try to rely on ACID side file when calculating file length, so that needs to fixed too.\nMoreover we might see the newly committed rows not to appear due to OrcTail caching in ETLSplitStrategy. For now I'm just going to recommend turning that cache off to anyone that wants real time row updates to be read in:\nset hive.orc.cache.stripe.details.mem.size=0;\n..as tweaking with that code would probably open a can of worms..", "createdAt": "2020-10-13T13:00:27Z", "url": "https://github.com/apache/hive/pull/1576", "merged": true, "mergeCommit": {"oid": "5d1a7facf3dfc90a35611b7b5bcbd5c57e4e0dc9"}, "closed": true, "closedAt": "2020-10-14T19:21:01Z", "author": {"login": "szlta"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSIFqjAH2gAyNTAyMjg0NDM1OjY2ZDYxYWQ2ZjliZTBjMTVkZGMwOGE5YjFmMWM5ZmM0YjE5YzMyNTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSadfegFqTUwODIwMDIxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "66d61ad6f9be0c15ddc08a9b1f1c9fc4b19c3253", "author": {"user": {"login": "szlta", "name": "Adam Szita"}}, "url": "https://github.com/apache/hive/commit/66d61ad6f9be0c15ddc08a9b1f1c9fc4b19c3253", "committedDate": "2020-10-13T12:53:18Z", "message": "HIVE-24266 - initial commit\n\nChange-Id: I54f414af6b81f3180217f70ac7ac03d2c376324b"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NDI2Nzkx", "url": "https://github.com/apache/hive/pull/1576#pullrequestreview-507426791", "createdAt": "2020-10-13T13:21:01Z", "commit": {"oid": "66d61ad6f9be0c15ddc08a9b1f1c9fc4b19c3253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMzoyMTowMVrOHgmZiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMzoyMTowMVrOHgmZiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk0NTYwOQ==", "bodyText": "nit: space", "url": "https://github.com/apache/hive/pull/1576#discussion_r503945609", "createdAt": "2020-10-13T13:21:01Z", "author": {"login": "pvary"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/io/orc/OrcInputFormat.java", "diffHunk": "@@ -1156,13 +1157,36 @@ public BISplitStrategy(Context context, FileSystem fs, Path dir,\n           } else {\n             TreeMap<Long, BlockLocation> blockOffsets = SHIMS.getLocationsWithOffset(fs, fileStatus);\n             for (Map.Entry<Long, BlockLocation> entry : blockOffsets.entrySet()) {\n-              if (entry.getKey() + entry.getValue().getLength() > logicalLen) {\n+              long blockOffset = entry.getKey();\n+              long blockLength = entry.getValue().getLength();\n+              if(blockOffset > logicalLen) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66d61ad6f9be0c15ddc08a9b1f1c9fc4b19c3253"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NDMyNjU4", "url": "https://github.com/apache/hive/pull/1576#pullrequestreview-507432658", "createdAt": "2020-10-13T13:26:55Z", "commit": {"oid": "66d61ad6f9be0c15ddc08a9b1f1c9fc4b19c3253"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMzoyNjo1NVrOHgmq2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxMzoyNjo1NVrOHgmq2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk1MDA0MA==", "bodyText": "Why is this capped with blockSize?\nIsn't there a case where we are at the end of the block but still writing?\nSplitLength might be this and it is easier to understad:\nlogicalLen - blockOffset", "url": "https://github.com/apache/hive/pull/1576#discussion_r503950040", "createdAt": "2020-10-13T13:26:55Z", "author": {"login": "pvary"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/io/orc/OrcInputFormat.java", "diffHunk": "@@ -1156,13 +1157,36 @@ public BISplitStrategy(Context context, FileSystem fs, Path dir,\n           } else {\n             TreeMap<Long, BlockLocation> blockOffsets = SHIMS.getLocationsWithOffset(fs, fileStatus);\n             for (Map.Entry<Long, BlockLocation> entry : blockOffsets.entrySet()) {\n-              if (entry.getKey() + entry.getValue().getLength() > logicalLen) {\n+              long blockOffset = entry.getKey();\n+              long blockLength = entry.getValue().getLength();\n+              if(blockOffset > logicalLen) {\n                 //don't create splits for anything past logical EOF\n-                continue;\n+                //map is ordered, thus any possible entry in the iteration after this is bound to be > logicalLen\n+                break;\n               }\n-              OrcSplit orcSplit = new OrcSplit(fileStatus.getPath(), fileKey, entry.getKey(),\n-                entry.getValue().getLength(), entry.getValue().getHosts(), null, isOriginal, true,\n-                deltas, -1, logicalLen, dir, offsetAndBucket);\n+              long splitLength = blockLength;\n+\n+              long blockEndOvershoot = (blockOffset + blockLength) - logicalLen;\n+              if (blockEndOvershoot > 0) {\n+                // if logicalLen is placed within a block, we should make (this last) split out of the part of this block\n+                // -> we should read less than block end\n+                splitLength -= blockEndOvershoot;\n+              } else if (blockOffsets.lastKey() == blockOffset && blockEndOvershoot < 0) {\n+                // This is the last block but it ends before logicalLen\n+                // This can happen with HDFS if hflush was called and blocks are not persisted to disk yet, but content\n+                // is otherwise available for readers, as DNs have these buffers in memory at this time.\n+                // -> we should read more than (persisted) block end, but surely not more than the whole block\n+                if (fileStatus instanceof HdfsLocatedFileStatus) {\n+                  HdfsLocatedFileStatus hdfsFileStatus = (HdfsLocatedFileStatus)fileStatus;\n+                  if (hdfsFileStatus.getLocatedBlocks().isUnderConstruction()) {\n+                    // blockEndOvershoot is negative here...\n+                    splitLength = Math.min(splitLength - blockEndOvershoot, hdfsFileStatus.getBlockSize());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66d61ad6f9be0c15ddc08a9b1f1c9fc4b19c3253"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82d734c1f92e71b4ebdb391d7fc227c4b2344ce2", "author": {"user": {"login": "szlta", "name": "Adam Szita"}}, "url": "https://github.com/apache/hive/commit/82d734c1f92e71b4ebdb391d7fc227c4b2344ce2", "committedDate": "2020-10-14T09:50:31Z", "message": "Addressing review comments\n\nChange-Id: I5ba9f0f98d694b99b4a62ee9a322177a2a1c914d"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MjAwMjE2", "url": "https://github.com/apache/hive/pull/1576#pullrequestreview-508200216", "createdAt": "2020-10-14T10:17:37Z", "commit": {"oid": "82d734c1f92e71b4ebdb391d7fc227c4b2344ce2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3171, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}