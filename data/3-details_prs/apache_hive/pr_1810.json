{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0OTMyMzA2", "number": 1810, "title": "HIVE-24565: Implement standard trim function", "bodyText": "What changes were proposed in this pull request?\nImplement trim function defined by the SQL standard. Add functionality to specify which characters to trim.\nWhy are the changes needed?\nCurrent trim/ltrim/rtrim implementation in Hive accepts only one parameter and always trim space characters only. With this patch trim functions get a second optional parameter to defined which characters to trim.\nDoes this PR introduce any user-facing change?\nYes but existing behavior also remain available. New feature coming with this patch allows calling the trim function in an SQL standard way and enables specifying which characters to trim when calling trim/ltrim/rtrim.\nHow was this patch tested?\nmvn test -Dtest.output.overwrite -DskipSparkTests -Dtest=TestMiniLlapLocalCliDriver -Dqfile=udf_trim.q,udf_ltrim.q,udf_rtrim.q,udf_trim_vector.q,udf_ltrim_vector.q,udf_rtrim_vector.q -pl itests/qtest -Pitests", "createdAt": "2020-12-23T16:42:12Z", "url": "https://github.com/apache/hive/pull/1810", "merged": true, "mergeCommit": {"oid": "113f6af7528f016bf821f7a746bad496cc93f834"}, "closed": true, "closedAt": "2021-01-08T13:37:44Z", "author": {"login": "kasakrisz"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdpJItFgFqTU1ODI4ODE1Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABduIv2-AFqTU2NDI1ODExMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4Mjg4MTU3", "url": "https://github.com/apache/hive/pull/1810#pullrequestreview-558288157", "createdAt": "2020-12-24T00:54:41Z", "commit": {"oid": "d13a1a5fd2d1c91d7e26585500abe1366214c1d9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMDo1NDo0MVrOIK7vFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMTowNTozNlrOIK73mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMzNTM4Mg==", "bodyText": "Since these two keywords are reserved, can you add a test to TestSQL11ReservedKeyWordsNegative.java?", "url": "https://github.com/apache/hive/pull/1810#discussion_r548335382", "createdAt": "2020-12-24T00:54:41Z", "author": {"login": "jcamachor"}, "path": "parser/src/java/org/apache/hadoop/hive/ql/parse/HiveLexerParent.g", "diffHunk": "@@ -373,6 +373,8 @@ KW_COST: 'COST';\n KW_JOINCOST: 'JOINCOST';\n KW_WITHIN: 'WITHIN';\n KW_PKFK_JOIN: 'PKFK_JOIN';\n+KW_LEADING: 'LEADING';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d13a1a5fd2d1c91d7e26585500abe1366214c1d9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMzNzU2MA==", "bodyText": "I think this would match any function name, that then would be converted to trim (or any other variant) by the rules in trimFunction?\nI think one way of fixing this could be to declare TRIM as a keyword, and match directly on TRIM (TRIM is a reserved keyword in SQL standard) rather than functionName.\nCould you also add a negative test, i.e., a test where the trim construct is correct but the function name is different, and make sure it fails and it is not transformed by the parser?", "url": "https://github.com/apache/hive/pull/1810#discussion_r548337560", "createdAt": "2020-12-24T01:05:36Z", "author": {"login": "jcamachor"}, "path": "parser/src/java/org/apache/hadoop/hive/ql/parse/IdentifiersParser.g", "diffHunk": "@@ -464,6 +473,7 @@ atomExpression\n     | whenExpression\n     | (subQueryExpression)=> (subQueryExpression)\n         -> ^(TOK_SUBQUERY_EXPR TOK_SUBQUERY_OP subQueryExpression)\n+    | (functionName LPAREN (leading=KW_LEADING | trailing=KW_TRAILING | KW_BOTH)? (trim_characters=selectExpression)? KW_FROM (str=selectExpression) RPAREN) => trimFunction", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d13a1a5fd2d1c91d7e26585500abe1366214c1d9"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwOTQ5MzIy", "url": "https://github.com/apache/hive/pull/1810#pullrequestreview-560949322", "createdAt": "2021-01-04T11:10:03Z", "commit": {"oid": "d13a1a5fd2d1c91d7e26585500abe1366214c1d9"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMToxMDowNFrOINt2aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxMToyMToxN1rOINuKCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI1MzYwOA==", "bodyText": "this is a syntetic predicate expression; narrowing it down furthere will help for sure ; but since trimFunction also matches the functionName LPAREN prefix I think it should be placed in the function rule", "url": "https://github.com/apache/hive/pull/1810#discussion_r551253608", "createdAt": "2021-01-04T11:10:04Z", "author": {"login": "kgyrtkirk"}, "path": "parser/src/java/org/apache/hadoop/hive/ql/parse/IdentifiersParser.g", "diffHunk": "@@ -464,6 +473,7 @@ atomExpression\n     | whenExpression\n     | (subQueryExpression)=> (subQueryExpression)\n         -> ^(TOK_SUBQUERY_EXPR TOK_SUBQUERY_OP subQueryExpression)\n+    | (functionName LPAREN (leading=KW_LEADING | trailing=KW_TRAILING | KW_BOTH)? (trim_characters=selectExpression)? KW_FROM (str=selectExpression) RPAREN) => trimFunction", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMzNzU2MA=="}, "originalCommit": {"oid": "d13a1a5fd2d1c91d7e26585500abe1366214c1d9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI1MzY0OA==", "bodyText": "do we need to fully reserve these keywords - if not they could be added to: IdentifiersParser.g/nonReserved", "url": "https://github.com/apache/hive/pull/1810#discussion_r551253648", "createdAt": "2021-01-04T11:10:09Z", "author": {"login": "kgyrtkirk"}, "path": "parser/src/java/org/apache/hadoop/hive/ql/parse/HiveLexerParent.g", "diffHunk": "@@ -373,6 +373,8 @@ KW_COST: 'COST';\n KW_JOINCOST: 'JOINCOST';\n KW_WITHIN: 'WITHIN';\n KW_PKFK_JOIN: 'PKFK_JOIN';\n+KW_LEADING: 'LEADING';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMzNTM4Mg=="}, "originalCommit": {"oid": "d13a1a5fd2d1c91d7e26585500abe1366214c1d9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI1NzI2Nw==", "bodyText": "could you also add somenull cases as well trim(null,'x') and trim('x',null)\nI know they will probably work okay; but its better to cover them", "url": "https://github.com/apache/hive/pull/1810#discussion_r551257267", "createdAt": "2021-01-04T11:18:15Z", "author": {"login": "kgyrtkirk"}, "path": "ql/src/test/queries/clientpositive/udf_trim.q", "diffHunk": "@@ -1,2 +1,20 @@\n DESCRIBE FUNCTION trim;\n DESCRIBE FUNCTION EXTENDED trim;\n+\n+SELECT '\"' || trim('   tech   ') || '\"';\n+\n+SELECT '\"' || TRIM(' '  FROM  '   tech   ') || '\"';\n+\n+SELECT '\"' || TRIM(LEADING '0' FROM '000123') || '\"';\n+\n+SELECT '\"' || TRIM(TRAILING '1' FROM 'Tech1') || '\"';\n+\n+SELECT '\"' || TRIM(BOTH '1' FROM '123Tech111') || '\"';\n+\n+SELECT '\"' || ltrim('   tech   ') || '\"', '\"' || rtrim('   tech   ') || '\"';\n+\n+SELECT '\"' || lTRIM('0'  FROM  '000123') || '\"', '\"' || rTRIM('0'  FROM  '000123') || '\"';\n+\n+SELECT trim('000123', '0');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d13a1a5fd2d1c91d7e26585500abe1366214c1d9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTI1ODYzNQ==", "bodyText": "there is also some vectorized implementations (see StringRTrim for example)\nthe functionality is enhanced a bit here - those other implementations should be updated as well (and possibly also covered with tests)", "url": "https://github.com/apache/hive/pull/1810#discussion_r551258635", "createdAt": "2021-01-04T11:21:17Z", "author": {"login": "kgyrtkirk"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFBaseTrim.java", "diffHunk": "@@ -68,11 +82,24 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {\n     if (valObject == null) {\n       return null;\n     }\n-    String val = ((Text) converter.convert(valObject)).toString();\n+    String val = stringToTrimConverter.convert(valObject).toString();\n     if (val == null) {\n       return null;\n     }\n-    result.set(performOp(val.toString()));\n+\n+    String trimChars = \" \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d13a1a5fd2d1c91d7e26585500abe1366214c1d9"}, "originalPosition": 86}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d13a1a5fd2d1c91d7e26585500abe1366214c1d9", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/d13a1a5fd2d1c91d7e26585500abe1366214c1d9", "committedDate": "2020-12-23T13:28:56Z", "message": "support one and two parameter versions"}, "afterCommit": {"oid": "27a01dc7a0dcb7824f843c5694913e1b98466d87", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/27a01dc7a0dcb7824f843c5694913e1b98466d87", "committedDate": "2021-01-04T15:09:30Z", "message": "negative test: when function call has trim like structure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27a01dc7a0dcb7824f843c5694913e1b98466d87", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/27a01dc7a0dcb7824f843c5694913e1b98466d87", "committedDate": "2021-01-04T15:09:30Z", "message": "negative test: when function call has trim like structure"}, "afterCommit": {"oid": "2f8709b5b29ce0a8ef1af80a122036a26d9f026f", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/2f8709b5b29ce0a8ef1af80a122036a26d9f026f", "committedDate": "2021-01-05T14:09:59Z", "message": "support vectorized ltrim,rtrim"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d534b39d35923dff3022b63dd5308148eebe1b4", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/2d534b39d35923dff3022b63dd5308148eebe1b4", "committedDate": "2021-01-06T13:42:41Z", "message": "add parser rule"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "464493fd866e8968e2648f6ea4aa21d72e86bcfa", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/464493fd866e8968e2648f6ea4aa21d72e86bcfa", "committedDate": "2021-01-06T13:42:41Z", "message": "support l/r trim"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2a5750804b231fb5eb756aeb33774c16ca06330", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/c2a5750804b231fb5eb756aeb33774c16ca06330", "committedDate": "2021-01-06T13:42:41Z", "message": "modify UDF*Trim impl to accept second parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23a20913f891c34e153f32513e76c89473377db7", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/23a20913f891c34e153f32513e76c89473377db7", "committedDate": "2021-01-06T13:42:41Z", "message": "support one and two parameter versions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d71b6b1e3bcbf6504ff05169812fed2b7a573307", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/d71b6b1e3bcbf6504ff05169812fed2b7a573307", "committedDate": "2021-01-06T13:42:41Z", "message": "add negative test for keywords \"LEADING\", \"TRAILING\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d840cb145d2c658c842d4eba79f2ee00ae2bdd8", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/5d840cb145d2c658c842d4eba79f2ee00ae2bdd8", "committedDate": "2021-01-06T13:42:41Z", "message": "fix TestParseTrim.testParseTrimWithOneParameter assertion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28b01f6f83a8f93421836c107ee5d832867c0507", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/28b01f6f83a8f93421836c107ee5d832867c0507", "committedDate": "2021-01-06T13:42:41Z", "message": "rule match only trim function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b39754817e4cd6f25328fb24e5c85cc87e482fa", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/7b39754817e4cd6f25328fb24e5c85cc87e482fa", "committedDate": "2021-01-06T13:42:41Z", "message": "negative test: when function call has trim like structure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f58e8fb9aa27e5c5235bb8a3ffca76b6016e134c", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/f58e8fb9aa27e5c5235bb8a3ffca76b6016e134c", "committedDate": "2021-01-06T13:42:41Z", "message": "update udf descriptions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df90ad766a1ec79ae5a869b01744762150eef154", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/df90ad766a1ec79ae5a869b01744762150eef154", "committedDate": "2021-01-06T13:42:41Z", "message": "support vectorized trim"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56d73836e4611f6ec85fa44a4cd5b23d30822215", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/56d73836e4611f6ec85fa44a4cd5b23d30822215", "committedDate": "2021-01-06T13:42:41Z", "message": "test vectorized trim"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5abbc61014aafa42895e3cc7d93706b4ad9fca1e", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/5abbc61014aafa42895e3cc7d93706b4ad9fca1e", "committedDate": "2021-01-06T13:42:41Z", "message": "support vectorized ltrim,rtrim"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3216efaf9281ebcaacaeb29a28df891dbf565171", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/3216efaf9281ebcaacaeb29a28df891dbf565171", "committedDate": "2021-01-06T13:42:41Z", "message": "test using explain vectorization expression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6f59df880a7866499a42c870559a92a6e7032f5", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/f6f59df880a7866499a42c870559a92a6e7032f5", "committedDate": "2021-01-06T13:42:41Z", "message": "update q tests out"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62a1484a8fb3ad0bbfe7bf239297880b21197451", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/62a1484a8fb3ad0bbfe7bf239297880b21197451", "committedDate": "2021-01-06T13:42:41Z", "message": "update UT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a86ca4b7b51a73b573db831fbc53c6f4947e447", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/3a86ca4b7b51a73b573db831fbc53c6f4947e447", "committedDate": "2021-01-06T13:52:20Z", "message": "update q test out"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51cbc35c0119156872c7cd2e7b704a07f699c694", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/51cbc35c0119156872c7cd2e7b704a07f699c694", "committedDate": "2021-01-06T07:55:14Z", "message": "update UT"}, "afterCommit": {"oid": "3a86ca4b7b51a73b573db831fbc53c6f4947e447", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/3a86ca4b7b51a73b573db831fbc53c6f4947e447", "committedDate": "2021-01-06T13:52:20Z", "message": "update q test out"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0MjU4MTEx", "url": "https://github.com/apache/hive/pull/1810#pullrequestreview-564258111", "createdAt": "2021-01-08T13:29:16Z", "commit": {"oid": "3a86ca4b7b51a73b573db831fbc53c6f4947e447"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2961, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}