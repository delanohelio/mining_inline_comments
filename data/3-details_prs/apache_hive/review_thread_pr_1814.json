{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NTAyMTI5", "number": 1814, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNDowMzoyNlrOFLtvMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNDowMzoyNlrOFLtvMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3ODI4MDE4OnYy", "diffSide": "RIGHT", "path": "beeline/src/test/org/apache/hive/beeline/TestCommands.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNDowMzoyNlrOIPCeMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMTowNTozM1rOIPbnCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjY0MDA1MA==", "bodyText": "Could you please add a test scenario where a multiline query strings has comments in between fragments of query? just as an example\n\"select col1,\n--partitioned year column\nyear,\n--partitioned month column\nmonth,\n--partitioned date column\ndate\nfrom test_table\nwhere\n--for a particular user\nusername = 'foo';\"\nshould return something equivalent to\n\"select col1, year, month, date from test_table where username = 'foo';\"", "url": "https://github.com/apache/hive/pull/1814#discussion_r552640050", "createdAt": "2021-01-06T14:03:26Z", "author": {"login": "nrg4878"}, "path": "beeline/src/test/org/apache/hive/beeline/TestCommands.java", "diffHunk": "@@ -30,21 +30,35 @@\n \n   @Test\n   public void testLinesEndingWithComments() {\n-    int[] escape = {-1};\n-    assertEquals(\"show tables;\", removeComments(\"show tables;\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; --comments\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments;one;two;three;;;;\",escape));\n-    assertEquals(\"show\", removeComments(\"show-- tables; -------comments\",escape));\n-    assertEquals(\"show\", removeComments(\"show --tables; -------comments\",escape));\n-    assertEquals(\"s\", removeComments(\"s--how --tables; -------comments\",escape));\n-    assertEquals(\"\", removeComments(\"-- show tables; -------comments\",escape));\n+    assertEquals(\"show tables;\", removeComments(\"show tables;\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; --comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments;one;two;three;;;;\"));\n+    assertEquals(\"show\", removeComments(\"show-- tables; -------comments\"));\n+    assertEquals(\"show\", removeComments(\"show --tables; -------comments\"));\n+    assertEquals(\"s\", removeComments(\"s--how --tables; -------comments\"));\n+    assertEquals(\"\", removeComments(\"-- show tables; -------comments\"));\n \n-    assertEquals(\"\\\"show tables\\\"\", removeComments(\"\\\"show tables\\\" --comments\",escape));\n-    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"\\\"show --comments tables\\\" --comments\",escape));\n-    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"\\\"'show --comments' tables\\\" --comments\",escape));\n-    assertEquals(\"'show --comments tables'\", removeComments(\"'show --comments tables' --comments\",escape));\n-    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"'\\\"show --comments tables\\\"' --comments\",escape));\n+    assertEquals(\"\\\"show tables\\\"\", removeComments(\"\\\"show tables\\\" --comments\"));\n+    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"\\\"show --comments tables\\\" --comments\"));\n+    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"\\\"'show --comments' tables\\\" --comments\"));\n+    assertEquals(\"'show --comments tables'\", removeComments(\"'show --comments tables' --comments\"));\n+    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"'\\\"show --comments tables\\\"' --comments\"));\n+\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables;\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; --comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; -------comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; -------comments;one;two;three;;;;\"));\n+    assertEquals(\"show\", removeComments(\"--comments\\nshow-- tables; -------comments\"));\n+    assertEquals(\"show\", removeComments(\"--comments\\nshow --tables; -------comments\"));\n+    assertEquals(\"s\", removeComments(\"--comments\\ns--how --tables; -------comments\"));\n+    assertEquals(\"\", removeComments(\"--comments\\n-- show tables; -------comments\"));\n+\n+    assertEquals(\"\\\"show tables\\\"\", removeComments(\"--comments\\n\\\"show tables\\\" --comments\"));\n+    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"--comments\\n\\\"show --comments tables\\\" --comments\"));\n+    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"--comments\\n\\\"'show --comments' tables\\\" --comments\"));\n+    assertEquals(\"'show --comments tables'\", removeComments(\"--comments\\n'show --comments tables' --comments\"));\n+    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"--comments\\n'\\\"show --comments tables\\\"' --comments\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c0e46e8eb1a3f3ecc02c5a8def29c3c5f571a4c"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1MTkxNQ==", "bodyText": "Thanks for having a look! I added your example. It contains both separate comment lines and inline comment.", "url": "https://github.com/apache/hive/pull/1814#discussion_r553051915", "createdAt": "2021-01-07T01:05:33Z", "author": {"login": "ujc714"}, "path": "beeline/src/test/org/apache/hive/beeline/TestCommands.java", "diffHunk": "@@ -30,21 +30,35 @@\n \n   @Test\n   public void testLinesEndingWithComments() {\n-    int[] escape = {-1};\n-    assertEquals(\"show tables;\", removeComments(\"show tables;\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; --comments\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments;one;two;three;;;;\",escape));\n-    assertEquals(\"show\", removeComments(\"show-- tables; -------comments\",escape));\n-    assertEquals(\"show\", removeComments(\"show --tables; -------comments\",escape));\n-    assertEquals(\"s\", removeComments(\"s--how --tables; -------comments\",escape));\n-    assertEquals(\"\", removeComments(\"-- show tables; -------comments\",escape));\n+    assertEquals(\"show tables;\", removeComments(\"show tables;\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; --comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments;one;two;three;;;;\"));\n+    assertEquals(\"show\", removeComments(\"show-- tables; -------comments\"));\n+    assertEquals(\"show\", removeComments(\"show --tables; -------comments\"));\n+    assertEquals(\"s\", removeComments(\"s--how --tables; -------comments\"));\n+    assertEquals(\"\", removeComments(\"-- show tables; -------comments\"));\n \n-    assertEquals(\"\\\"show tables\\\"\", removeComments(\"\\\"show tables\\\" --comments\",escape));\n-    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"\\\"show --comments tables\\\" --comments\",escape));\n-    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"\\\"'show --comments' tables\\\" --comments\",escape));\n-    assertEquals(\"'show --comments tables'\", removeComments(\"'show --comments tables' --comments\",escape));\n-    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"'\\\"show --comments tables\\\"' --comments\",escape));\n+    assertEquals(\"\\\"show tables\\\"\", removeComments(\"\\\"show tables\\\" --comments\"));\n+    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"\\\"show --comments tables\\\" --comments\"));\n+    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"\\\"'show --comments' tables\\\" --comments\"));\n+    assertEquals(\"'show --comments tables'\", removeComments(\"'show --comments tables' --comments\"));\n+    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"'\\\"show --comments tables\\\"' --comments\"));\n+\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables;\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; --comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; -------comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; -------comments;one;two;three;;;;\"));\n+    assertEquals(\"show\", removeComments(\"--comments\\nshow-- tables; -------comments\"));\n+    assertEquals(\"show\", removeComments(\"--comments\\nshow --tables; -------comments\"));\n+    assertEquals(\"s\", removeComments(\"--comments\\ns--how --tables; -------comments\"));\n+    assertEquals(\"\", removeComments(\"--comments\\n-- show tables; -------comments\"));\n+\n+    assertEquals(\"\\\"show tables\\\"\", removeComments(\"--comments\\n\\\"show tables\\\" --comments\"));\n+    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"--comments\\n\\\"show --comments tables\\\" --comments\"));\n+    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"--comments\\n\\\"'show --comments' tables\\\" --comments\"));\n+    assertEquals(\"'show --comments tables'\", removeComments(\"--comments\\n'show --comments tables' --comments\"));\n+    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"--comments\\n'\\\"show --comments tables\\\"' --comments\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjY0MDA1MA=="}, "originalCommit": {"oid": "5c0e46e8eb1a3f3ecc02c5a8def29c3c5f571a4c"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 96, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}