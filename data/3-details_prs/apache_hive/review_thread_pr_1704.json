{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NjgyOTQ4", "number": 1704, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMTowODo0M1rOE9ln_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMTowOToxM1rOE9losQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDE1MDM2OnYy", "diffSide": "RIGHT", "path": "hcatalog/server-extensions/src/main/java/org/apache/hive/hcatalog/listener/DbNotificationListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMTowODo0M1rOH6WuSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwMjoxNzozMVrOH6u_Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk1MTc1Mg==", "bodyText": "These two are constants, please extract them.", "url": "https://github.com/apache/hive/pull/1704#discussion_r530951752", "createdAt": "2020-11-26T11:08:43Z", "author": {"login": "miklosgergely"}, "path": "hcatalog/server-extensions/src/main/java/org/apache/hive/hcatalog/listener/DbNotificationListener.java", "diffHunk": "@@ -970,28 +971,44 @@ private static void close(ResultSet rs) {\n     }\n   }\n \n-  private long getNextNLId(Statement stmt, SQLGenerator sqlGenerator, String sequence)\n+  /**\n+   * Get the next notification log ID.\n+   *\n+   * @return The next ID to use for a notification log message\n+   * @throws SQLException if a database access error occurs or this method is\n+   *           called on a closed connection\n+   * @throws MetaException if the sequence table is not properly initialized\n+   */\n+  private long getNextNLId(Connection con, SQLGenerator sqlGenerator, String sequence)\n           throws SQLException, MetaException {\n-    String s = sqlGenerator.addForUpdateClause(\"select \\\"NEXT_VAL\\\" from \" +\n-            \"\\\"SEQUENCE_TABLE\\\" where \\\"SEQUENCE_NAME\\\" = \" + quoteString(sequence));\n-    LOG.debug(\"Going to execute query <\" + s + \">\");\n-    ResultSet rs = null;\n-    try {\n-      rs = stmt.executeQuery(s);\n-      if (!rs.next()) {\n-        throw new MetaException(\"Transaction database not properly configured, can't find next NL id.\");\n+    final String seq_sql = \"select \\\"NEXT_VAL\\\" from \\\"SEQUENCE_TABLE\\\" where \\\"SEQUENCE_NAME\\\" = ?\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d8eb8880fc37acba1223db33c897d67b9d61026"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTM0OTI2Mw==", "bodyText": "Fixed.  Thanks!", "url": "https://github.com/apache/hive/pull/1704#discussion_r531349263", "createdAt": "2020-11-27T02:17:31Z", "author": {"login": "belugabehr"}, "path": "hcatalog/server-extensions/src/main/java/org/apache/hive/hcatalog/listener/DbNotificationListener.java", "diffHunk": "@@ -970,28 +971,44 @@ private static void close(ResultSet rs) {\n     }\n   }\n \n-  private long getNextNLId(Statement stmt, SQLGenerator sqlGenerator, String sequence)\n+  /**\n+   * Get the next notification log ID.\n+   *\n+   * @return The next ID to use for a notification log message\n+   * @throws SQLException if a database access error occurs or this method is\n+   *           called on a closed connection\n+   * @throws MetaException if the sequence table is not properly initialized\n+   */\n+  private long getNextNLId(Connection con, SQLGenerator sqlGenerator, String sequence)\n           throws SQLException, MetaException {\n-    String s = sqlGenerator.addForUpdateClause(\"select \\\"NEXT_VAL\\\" from \" +\n-            \"\\\"SEQUENCE_TABLE\\\" where \\\"SEQUENCE_NAME\\\" = \" + quoteString(sequence));\n-    LOG.debug(\"Going to execute query <\" + s + \">\");\n-    ResultSet rs = null;\n-    try {\n-      rs = stmt.executeQuery(s);\n-      if (!rs.next()) {\n-        throw new MetaException(\"Transaction database not properly configured, can't find next NL id.\");\n+    final String seq_sql = \"select \\\"NEXT_VAL\\\" from \\\"SEQUENCE_TABLE\\\" where \\\"SEQUENCE_NAME\\\" = ?\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk1MTc1Mg=="}, "originalCommit": {"oid": "5d8eb8880fc37acba1223db33c897d67b9d61026"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMDE1MjE3OnYy", "diffSide": "RIGHT", "path": "hcatalog/server-extensions/src/main/java/org/apache/hive/hcatalog/listener/DbNotificationListener.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMTowOToxM1rOH6WvXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxMTowOToxM1rOH6WvXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDk1MjAyOQ==", "bodyText": "Please use camelCase for variables within a function.", "url": "https://github.com/apache/hive/pull/1704#discussion_r530952029", "createdAt": "2020-11-26T11:09:13Z", "author": {"login": "miklosgergely"}, "path": "hcatalog/server-extensions/src/main/java/org/apache/hive/hcatalog/listener/DbNotificationListener.java", "diffHunk": "@@ -970,28 +971,44 @@ private static void close(ResultSet rs) {\n     }\n   }\n \n-  private long getNextNLId(Statement stmt, SQLGenerator sqlGenerator, String sequence)\n+  /**\n+   * Get the next notification log ID.\n+   *\n+   * @return The next ID to use for a notification log message\n+   * @throws SQLException if a database access error occurs or this method is\n+   *           called on a closed connection\n+   * @throws MetaException if the sequence table is not properly initialized\n+   */\n+  private long getNextNLId(Connection con, SQLGenerator sqlGenerator, String sequence)\n           throws SQLException, MetaException {\n-    String s = sqlGenerator.addForUpdateClause(\"select \\\"NEXT_VAL\\\" from \" +\n-            \"\\\"SEQUENCE_TABLE\\\" where \\\"SEQUENCE_NAME\\\" = \" + quoteString(sequence));\n-    LOG.debug(\"Going to execute query <\" + s + \">\");\n-    ResultSet rs = null;\n-    try {\n-      rs = stmt.executeQuery(s);\n-      if (!rs.next()) {\n-        throw new MetaException(\"Transaction database not properly configured, can't find next NL id.\");\n+    final String seq_sql = \"select \\\"NEXT_VAL\\\" from \\\"SEQUENCE_TABLE\\\" where \\\"SEQUENCE_NAME\\\" = ?\";\n+    final String upd_sql = \"update \\\"SEQUENCE_TABLE\\\" set \\\"NEXT_VAL\\\" = ? where \\\"SEQUENCE_NAME\\\" = ?\";\n+\n+    final String sou_sql = sqlGenerator.addForUpdateClause(seq_sql);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d8eb8880fc37acba1223db33c897d67b9d61026"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 267, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}