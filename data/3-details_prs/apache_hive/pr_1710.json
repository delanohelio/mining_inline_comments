{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3Njg3Nzcy", "number": 1710, "title": "HIVE-24432: Delete Notification Events in Batches", "bodyText": "What changes were proposed in this pull request?\n\nWhy are the changes needed?\n\nDoes this PR introduce any user-facing change?\n\nHow was this patch tested?", "createdAt": "2020-11-25T20:55:00Z", "url": "https://github.com/apache/hive/pull/1710", "merged": true, "mergeCommit": {"oid": "2cde6968014497b71bd64123852cd7760ee68049"}, "closed": true, "closedAt": "2020-12-17T14:20:28Z", "author": {"login": "belugabehr"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgEvZSAH2gAyNTI3Njg3NzcyOmVkZmRhMWE1YWM5Mzg5YThlMTMyODIzNTc2M2NkMmM0NDE4NTZmZDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmwWZkAFqTU1Mzc3ODE2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "edfda1a5ac9389a8e1328235763cd2c441856fd5", "author": {"user": {"login": "belugabehr", "name": null}}, "url": "https://github.com/apache/hive/commit/edfda1a5ac9389a8e1328235763cd2c441856fd5", "committedDate": "2020-11-25T20:54:12Z", "message": "HIVE-24432: Delete Notification Events in Batches"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODcyNDIw", "url": "https://github.com/apache/hive/pull/1710#pullrequestreview-547872420", "createdAt": "2020-12-09T06:23:30Z", "commit": {"oid": "edfda1a5ac9389a8e1328235763cd2c441856fd5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjoyMzozMFrOICEb-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNjoyMzozMFrOICEb-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTA0MDc2Mg==", "bodyText": "Is the comparison required? events will always be in ascending order of event id", "url": "https://github.com/apache/hive/pull/1710#discussion_r539040762", "createdAt": "2020-12-09T06:23:30Z", "author": {"login": "aasha"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -10800,53 +10801,89 @@ public void addNotificationEvent(NotificationEvent entry) throws MetaException {\n \n   @Override\n   public void cleanNotificationEvents(int olderThan) {\n-    boolean commited = false;\n-    Query query = null;\n+    final int eventBatchSize = MetastoreConf.getIntVar(conf, MetastoreConf.ConfVars.EVENT_CLEAN_MAX_EVENTS);\n+\n+    final long ageSec = olderThan;\n+    final Instant now = Instant.now();\n+\n+    final int tooOld = Math.toIntExact(now.getEpochSecond() - ageSec);\n+\n+    final Optional<Integer> batchSize = (eventBatchSize > 0) ? Optional.of(eventBatchSize) : Optional.empty();\n+\n+    final long start = System.nanoTime();\n+    int deleteCount = doCleanNotificationEvents(tooOld, batchSize);\n+\n+    if (deleteCount == 0) {\n+      LOG.info(\"No Notification events found to be cleaned with eventTime < {}\", tooOld);\n+    } else {\n+      int batchCount = 0;\n+      do {\n+        batchCount = doCleanNotificationEvents(tooOld, batchSize);\n+        deleteCount += batchCount;\n+      } while (batchCount > 0);\n+    }\n+\n+    final long finish = System.nanoTime();\n+\n+    LOG.info(\"Deleted {} notification events older than epoch:{} in {}ms\", deleteCount, tooOld,\n+        TimeUnit.NANOSECONDS.toMillis(finish - start));\n+  }\n+\n+  private int doCleanNotificationEvents(final int ageSec, final Optional<Integer> batchSize) {\n+    final Transaction tx = pm.currentTransaction();\n+    int eventsCount = 0;\n+\n     try {\n-      openTransaction();\n-      long tmp = System.currentTimeMillis() / 1000 - olderThan;\n-      int tooOld = (tmp > Integer.MAX_VALUE) ? 0 : (int) tmp;\n-      query = pm.newQuery(MNotificationLog.class, \"eventTime < tooOld\");\n-      query.declareParameters(\"java.lang.Integer tooOld\");\n+      tx.begin();\n \n-      int max_events = MetastoreConf.getIntVar(conf, MetastoreConf.ConfVars.EVENT_CLEAN_MAX_EVENTS);\n-      max_events = max_events > 0 ? max_events : Integer.MAX_VALUE;\n-      query.setRange(0, max_events);\n-      query.setOrdering(\"eventId ascending\");\n+      try (Query query = pm.newQuery(MNotificationLog.class, \"eventTime < tooOld\")) {\n+        query.declareParameters(\"java.lang.Integer tooOld\");\n+        query.setOrdering(\"eventId ascending\");\n+        if (batchSize.isPresent()) {\n+          query.setRange(0, batchSize.get());\n+        }\n \n-      List<MNotificationLog> toBeRemoved = (List) query.execute(tooOld);\n-      int iteration = 0;\n-      int eventCount = 0;\n-      long minEventId = 0;\n-      long minEventTime = 0;\n-      long maxEventId = 0;\n-      long maxEventTime = 0;\n-      while (CollectionUtils.isNotEmpty(toBeRemoved)) {\n-        int listSize = toBeRemoved.size();\n-        if (iteration == 0) {\n-          MNotificationLog firstNotification = toBeRemoved.get(0);\n-          minEventId = firstNotification.getEventId();\n-          minEventTime = firstNotification.getEventTime();\n+        List<MNotificationLog> events = (List) query.execute(ageSec);\n+        if (CollectionUtils.isNotEmpty(events)) {\n+          eventsCount = events.size();\n+\n+          if (LOG.isDebugEnabled()) {\n+            int minEventTime, maxEventTime;\n+            long minEventId, maxEventId;\n+            Iterator<MNotificationLog> iter = events.iterator();\n+            MNotificationLog firstNotification = iter.next();\n+\n+            minEventTime = maxEventTime = firstNotification.getEventTime();\n+            minEventId = maxEventId = firstNotification.getEventId();\n+\n+            while (iter.hasNext()) {\n+              MNotificationLog notification = iter.next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfda1a5ac9389a8e1328235763cd2c441856fd5"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3OTczNDMx", "url": "https://github.com/apache/hive/pull/1710#pullrequestreview-547973431", "createdAt": "2020-12-09T09:09:10Z", "commit": {"oid": "edfda1a5ac9389a8e1328235763cd2c441856fd5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTowOToxMVrOICJ8aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwOTowOToxMVrOICJ8aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTEzMDk4Nw==", "bodyText": "The same improvement done in cleanNotificationEvents can be applied to cleanWriteNotificationEvents also.", "url": "https://github.com/apache/hive/pull/1710#discussion_r539130987", "createdAt": "2020-12-09T09:09:11Z", "author": {"login": "aasha"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -10800,53 +10801,89 @@ public void addNotificationEvent(NotificationEvent entry) throws MetaException {\n \n   @Override\n   public void cleanNotificationEvents(int olderThan) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfda1a5ac9389a8e1328235763cd2c441856fd5"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "108a7c1d8f3776c1735d6b8615bb7ea8cee4bc1f", "author": {"user": {"login": "belugabehr", "name": null}}, "url": "https://github.com/apache/hive/commit/108a7c1d8f3776c1735d6b8615bb7ea8cee4bc1f", "committedDate": "2020-12-11T14:48:51Z", "message": "Update test to exercise batching code. Make TTL LTE operation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNzc4MTY4", "url": "https://github.com/apache/hive/pull/1710#pullrequestreview-553778168", "createdAt": "2020-12-16T15:06:16Z", "commit": {"oid": "108a7c1d8f3776c1735d6b8615bb7ea8cee4bc1f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3083, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}