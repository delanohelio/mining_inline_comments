{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3OTgzOTMx", "number": 1159, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTozOTo1OFrOEISzJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTozOTo1OFrOEISzJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTMyMDY4OnYy", "diffSide": "RIGHT", "path": "llap-server/src/java/org/apache/hadoop/hive/llap/cache/LowLevelCacheImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTozOTo1OFrOGoKueg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNDo1MjoxNVrOGo-bvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3MTk2Mg==", "bodyText": "This sets the reference from buffer to filecache instance alright.\nBut as far as I see this only happens when LowLevelCacheImpl is used, aka caching Orc files, how does this reference setting happen with the SerdeLowLevelCache (text based files)?", "url": "https://github.com/apache/hive/pull/1159#discussion_r444771962", "createdAt": "2020-06-24T09:39:58Z", "author": {"login": "szlta"}, "path": "llap-server/src/java/org/apache/hadoop/hive/llap/cache/LowLevelCacheImpl.java", "diffHunk": "@@ -305,10 +305,10 @@ private boolean lockBuffer(LlapDataBuffer buffer, boolean doNotifyPolicy) {\n         long offset = ranges[i].getOffset() + baseOffset;\n         assert buffer.declaredCachedLength == LlapDataBuffer.UNKNOWN_CACHED_LENGTH;\n         buffer.declaredCachedLength = ranges[i].getLength();\n-        buffer.setTag(tag);\n         while (true) { // Overwhelmingly executes once, or maybe twice (replacing stale value).\n           LlapDataBuffer oldVal = subCache.getCache().putIfAbsent(offset, buffer);\n           if (oldVal == null) {\n+            buffer.setFileCache(subCache);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "410c7b1601bd6cafa4b870011f1a0e7d1268bb32"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTYxOTEzMw==", "bodyText": "Thanks, it's fixed now.", "url": "https://github.com/apache/hive/pull/1159#discussion_r445619133", "createdAt": "2020-06-25T14:52:15Z", "author": {"login": "asinkovits"}, "path": "llap-server/src/java/org/apache/hadoop/hive/llap/cache/LowLevelCacheImpl.java", "diffHunk": "@@ -305,10 +305,10 @@ private boolean lockBuffer(LlapDataBuffer buffer, boolean doNotifyPolicy) {\n         long offset = ranges[i].getOffset() + baseOffset;\n         assert buffer.declaredCachedLength == LlapDataBuffer.UNKNOWN_CACHED_LENGTH;\n         buffer.declaredCachedLength = ranges[i].getLength();\n-        buffer.setTag(tag);\n         while (true) { // Overwhelmingly executes once, or maybe twice (replacing stale value).\n           LlapDataBuffer oldVal = subCache.getCache().putIfAbsent(offset, buffer);\n           if (oldVal == null) {\n+            buffer.setFileCache(subCache);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3MTk2Mg=="}, "originalCommit": {"oid": "410c7b1601bd6cafa4b870011f1a0e7d1268bb32"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 672, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}