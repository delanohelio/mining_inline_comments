{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMDIzMzAx", "number": 1611, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo1MDozMlrOFGJvJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo1MTo0NlrOFGJxUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTk1MzAzOnYy", "diffSide": "RIGHT", "path": "jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo1MDozMlrOIHBhsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMVQwNjo1MDo1M1rOIM6dGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNTk1Mg==", "bodyText": "What if the default value set to TimeUnit.SECONDS.toMillis(DriverManager.getLoginTimeout())?", "url": "https://github.com/apache/hive/pull/1611#discussion_r544235952", "createdAt": "2020-12-16T11:50:32Z", "author": {"login": "dengzhhu653"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java", "diffHunk": "@@ -1002,11 +1002,19 @@ private String getSessionValue(String varName, String varDefault) {\n     return varValue;\n   }\n \n-  // copy loginTimeout from driver manager. Thrift timeout needs to be in millis\n+  // use socketTimeout from jdbc connection url. Thrift timeout needs to be in millis\n   private void setupLoginTimeout() {\n-    long timeOut = TimeUnit.SECONDS.toMillis(DriverManager.getLoginTimeout());\n+    String socketTimeoutStr = sessConfMap.getOrDefault(JdbcConnectionParams.SOCKET_TIMEOUT, \"0\");\n+    long timeOut = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c66dce1213cfc3e7edc9832ef9cbfa04d11dfc9d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzNDQ5Mw==", "bodyText": "This issue describes the problem: HIVE-22196 : Socket timeouts happen when other drivers set DriverManager.loginTimeout.", "url": "https://github.com/apache/hive/pull/1611#discussion_r546534493", "createdAt": "2020-12-21T06:42:11Z", "author": {"login": "jshmchenxi"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java", "diffHunk": "@@ -1002,11 +1002,19 @@ private String getSessionValue(String varName, String varDefault) {\n     return varValue;\n   }\n \n-  // copy loginTimeout from driver manager. Thrift timeout needs to be in millis\n+  // use socketTimeout from jdbc connection url. Thrift timeout needs to be in millis\n   private void setupLoginTimeout() {\n-    long timeOut = TimeUnit.SECONDS.toMillis(DriverManager.getLoginTimeout());\n+    String socketTimeoutStr = sessConfMap.getOrDefault(JdbcConnectionParams.SOCKET_TIMEOUT, \"0\");\n+    long timeOut = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNTk1Mg=="}, "originalCommit": {"oid": "c66dce1213cfc3e7edc9832ef9cbfa04d11dfc9d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjcwMTQ5Ng==", "bodyText": "Set the default value to 0 may cause problems for those elder clients using DriverManager.loginTimeout to prevent the client from hang or return quickly if there are some problems in HS2, users have to refactor the uri with the socket timeout parameter after applying this.  After all, there are some preconditions should be met on the HIVE-22196: 1, There are different drivers that created in the same jvm; 2,  One of the driver sets the loginTimeout that is inappropriate for others.", "url": "https://github.com/apache/hive/pull/1611#discussion_r546701496", "createdAt": "2020-12-21T13:20:23Z", "author": {"login": "dengzhhu653"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java", "diffHunk": "@@ -1002,11 +1002,19 @@ private String getSessionValue(String varName, String varDefault) {\n     return varValue;\n   }\n \n-  // copy loginTimeout from driver manager. Thrift timeout needs to be in millis\n+  // use socketTimeout from jdbc connection url. Thrift timeout needs to be in millis\n   private void setupLoginTimeout() {\n-    long timeOut = TimeUnit.SECONDS.toMillis(DriverManager.getLoginTimeout());\n+    String socketTimeoutStr = sessConfMap.getOrDefault(JdbcConnectionParams.SOCKET_TIMEOUT, \"0\");\n+    long timeOut = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNTk1Mg=="}, "originalCommit": {"oid": "c66dce1213cfc3e7edc9832ef9cbfa04d11dfc9d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDQxMTU0Nw==", "bodyText": "Sorry for the late reply. If users depends on DriverManager.loginTimeout to control HS2 jdbc timeout, they will have to refactor their code after applying this. However, we haven't yet met a situation that we need this timeout to return quickly when HS2 hangs or something. Our problem is when submitting a big query which needs minutes to compile, the connection is lost because of this DriverManager.loginTimeout. Maybe we need to set a timeout parameter for HS2 on the server side too.", "url": "https://github.com/apache/hive/pull/1611#discussion_r550411547", "createdAt": "2020-12-31T06:50:53Z", "author": {"login": "jshmchenxi"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java", "diffHunk": "@@ -1002,11 +1002,19 @@ private String getSessionValue(String varName, String varDefault) {\n     return varValue;\n   }\n \n-  // copy loginTimeout from driver manager. Thrift timeout needs to be in millis\n+  // use socketTimeout from jdbc connection url. Thrift timeout needs to be in millis\n   private void setupLoginTimeout() {\n-    long timeOut = TimeUnit.SECONDS.toMillis(DriverManager.getLoginTimeout());\n+    String socketTimeoutStr = sessConfMap.getOrDefault(JdbcConnectionParams.SOCKET_TIMEOUT, \"0\");\n+    long timeOut = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNTk1Mg=="}, "originalCommit": {"oid": "c66dce1213cfc3e7edc9832ef9cbfa04d11dfc9d"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTk1ODU3OnYy", "diffSide": "RIGHT", "path": "jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTo1MTo0NlrOIHBkog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQwNjo0ODoyMFrOIJN7dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNjcwNg==", "bodyText": "A space may be needed here after of value", "url": "https://github.com/apache/hive/pull/1611#discussion_r544236706", "createdAt": "2020-12-16T11:51:46Z", "author": {"login": "dengzhhu653"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java", "diffHunk": "@@ -1002,11 +1002,19 @@ private String getSessionValue(String varName, String varDefault) {\n     return varValue;\n   }\n \n-  // copy loginTimeout from driver manager. Thrift timeout needs to be in millis\n+  // use socketTimeout from jdbc connection url. Thrift timeout needs to be in millis\n   private void setupLoginTimeout() {\n-    long timeOut = TimeUnit.SECONDS.toMillis(DriverManager.getLoginTimeout());\n+    String socketTimeoutStr = sessConfMap.getOrDefault(JdbcConnectionParams.SOCKET_TIMEOUT, \"0\");\n+    long timeOut = 0;\n+    try {\n+      timeOut = Long.parseLong(socketTimeoutStr);\n+    } catch (NumberFormatException e) {\n+      LOG.info(\"Failed to parse socketTimeout of value\" + socketTimeoutStr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c66dce1213cfc3e7edc9832ef9cbfa04d11dfc9d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjUzNjMwOA==", "bodyText": "fixed", "url": "https://github.com/apache/hive/pull/1611#discussion_r546536308", "createdAt": "2020-12-21T06:48:20Z", "author": {"login": "jshmchenxi"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java", "diffHunk": "@@ -1002,11 +1002,19 @@ private String getSessionValue(String varName, String varDefault) {\n     return varValue;\n   }\n \n-  // copy loginTimeout from driver manager. Thrift timeout needs to be in millis\n+  // use socketTimeout from jdbc connection url. Thrift timeout needs to be in millis\n   private void setupLoginTimeout() {\n-    long timeOut = TimeUnit.SECONDS.toMillis(DriverManager.getLoginTimeout());\n+    String socketTimeoutStr = sessConfMap.getOrDefault(JdbcConnectionParams.SOCKET_TIMEOUT, \"0\");\n+    long timeOut = 0;\n+    try {\n+      timeOut = Long.parseLong(socketTimeoutStr);\n+    } catch (NumberFormatException e) {\n+      LOG.info(\"Failed to parse socketTimeout of value\" + socketTimeoutStr);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIzNjcwNg=="}, "originalCommit": {"oid": "c66dce1213cfc3e7edc9832ef9cbfa04d11dfc9d"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 201, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}