{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NjcyNjcz", "number": 1134, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo0MzoxOVrOEGQTCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo0NzozNlrOEGQZ_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTkzOTMxOnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/OrcFileMergeOperator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo0MzoxOVrOGk71Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwOTozNjo0MVrOGk95CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4MjIzNQ==", "bodyText": "Can we do this outside the process loop? Maybe saving some time, since this part of the code runs for every item, and this can cause performance degradation (I guess)", "url": "https://github.com/apache/hive/pull/1134#discussion_r441382235", "createdAt": "2020-06-17T08:43:19Z", "author": {"login": "pvary"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/OrcFileMergeOperator.java", "diffHunk": "@@ -113,7 +116,11 @@ private void processKeyValuePairs(Object key, Object value)\n \n       // store the orc configuration from the first file. All other files should\n       // match this configuration before merging else will not be merged\n-      if (outWriter == null) {\n+      int bucketId = 0;\n+      if (conf.getIsCompactionTable()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e1ce9e18ad39431fa7d17a211047b2e6be9e1e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQxNTk0NA==", "bodyText": "Ok.. as discussed this was an overreaction \ud83d\ude04", "url": "https://github.com/apache/hive/pull/1134#discussion_r441415944", "createdAt": "2020-06-17T09:36:41Z", "author": {"login": "pvary"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/OrcFileMergeOperator.java", "diffHunk": "@@ -113,7 +116,11 @@ private void processKeyValuePairs(Object key, Object value)\n \n       // store the orc configuration from the first file. All other files should\n       // match this configuration before merging else will not be merged\n-      if (outWriter == null) {\n+      int bucketId = 0;\n+      if (conf.getIsCompactionTable()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4MjIzNQ=="}, "originalCommit": {"oid": "06e1ce9e18ad39431fa7d17a211047b2e6be9e1e"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTk0ODQ2OnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/FileSinkOperator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo0NToyMFrOGk763A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjozNToxMVrOGlDo1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4MzY0NA==", "bodyText": "Could you please add some clarification to the tables used in compaction, like technical/helper tables used in compaction.", "url": "https://github.com/apache/hive/pull/1134#discussion_r441383644", "createdAt": "2020-06-17T08:45:20Z", "author": {"login": "deniskuzZ"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/FileSinkOperator.java", "diffHunk": "@@ -334,6 +334,18 @@ public void initializeBucketPaths(int filesIdx, String taskId, boolean isNativeT\n         if (!isMmTable && !isDirectInsert) {\n           if (!bDynParts && !isSkewedStoredAsSubDirectories) {\n             finalPaths[filesIdx] = new Path(parent, taskWithExt);\n+            if (conf.isCompactionTable()) {\n+              // tables used in compaction are external and non-acid. We need to keep track of", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e1ce9e18ad39431fa7d17a211047b2e6be9e1e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUxMDEwMg==", "bodyText": "Done", "url": "https://github.com/apache/hive/pull/1134#discussion_r441510102", "createdAt": "2020-06-17T12:35:11Z", "author": {"login": "klcopp"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/FileSinkOperator.java", "diffHunk": "@@ -334,6 +334,18 @@ public void initializeBucketPaths(int filesIdx, String taskId, boolean isNativeT\n         if (!isMmTable && !isDirectInsert) {\n           if (!bDynParts && !isSkewedStoredAsSubDirectories) {\n             finalPaths[filesIdx] = new Path(parent, taskWithExt);\n+            if (conf.isCompactionTable()) {\n+              // tables used in compaction are external and non-acid. We need to keep track of", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4MzY0NA=="}, "originalCommit": {"oid": "06e1ce9e18ad39431fa7d17a211047b2e6be9e1e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTk0ODg1OnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo0NToyN1rOGk77Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjozNToxOFrOGlDpHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4MzcxMA==", "bodyText": "nit: I see this kind of formatting very rarely in Hive code", "url": "https://github.com/apache/hive/pull/1134#discussion_r441383710", "createdAt": "2020-06-17T08:45:27Z", "author": {"login": "pvary"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java", "diffHunk": "@@ -4123,9 +4125,28 @@ private static void copyFiles(final HiveConf conf, final FileSystem destFs,\n           }\n           throw new HiveException(e);\n         }\n-      } else {\n+      else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e1ce9e18ad39431fa7d17a211047b2e6be9e1e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUxMDE3Mw==", "bodyText": "Typo, done.", "url": "https://github.com/apache/hive/pull/1134#discussion_r441510173", "createdAt": "2020-06-17T12:35:18Z", "author": {"login": "klcopp"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java", "diffHunk": "@@ -4123,9 +4125,28 @@ private static void copyFiles(final HiveConf conf, final FileSystem destFs,\n           }\n           throw new HiveException(e);\n         }\n-      } else {\n+      else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4MzcxMA=="}, "originalCommit": {"oid": "06e1ce9e18ad39431fa7d17a211047b2e6be9e1e"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTk1NzEwOnYy", "diffSide": "RIGHT", "path": "ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHiveCopyFiles.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo0NzozNlrOGk8ARg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMjozNToyMFrOGlDpKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4NTAzMA==", "bodyText": "nit: Maybe add a missing space too :)", "url": "https://github.com/apache/hive/pull/1134#discussion_r441385030", "createdAt": "2020-06-17T08:47:36Z", "author": {"login": "pvary"}, "path": "ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHiveCopyFiles.java", "diffHunk": "@@ -83,7 +83,8 @@ public void testRenameNewFilesOnSameFileSystem() throws IOException {\n     FileSystem targetFs = targetPath.getFileSystem(hiveConf);\n \n     try {\n-      Hive.copyFiles(hiveConf, sourcePath, targetPath, targetFs, isSourceLocal, NO_ACID, false,null, false, false, false);\n+      Hive.copyFiles(hiveConf, sourcePath, targetPath, targetFs, isSourceLocal, NO_ACID, false,null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e1ce9e18ad39431fa7d17a211047b2e6be9e1e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUxMDE4NQ==", "bodyText": "Done", "url": "https://github.com/apache/hive/pull/1134#discussion_r441510185", "createdAt": "2020-06-17T12:35:20Z", "author": {"login": "klcopp"}, "path": "ql/src/test/org/apache/hadoop/hive/ql/metadata/TestHiveCopyFiles.java", "diffHunk": "@@ -83,7 +83,8 @@ public void testRenameNewFilesOnSameFileSystem() throws IOException {\n     FileSystem targetFs = targetPath.getFileSystem(hiveConf);\n \n     try {\n-      Hive.copyFiles(hiveConf, sourcePath, targetPath, targetFs, isSourceLocal, NO_ACID, false,null, false, false, false);\n+      Hive.copyFiles(hiveConf, sourcePath, targetPath, targetFs, isSourceLocal, NO_ACID, false,null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM4NTAzMA=="}, "originalCommit": {"oid": "06e1ce9e18ad39431fa7d17a211047b2e6be9e1e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 635, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}