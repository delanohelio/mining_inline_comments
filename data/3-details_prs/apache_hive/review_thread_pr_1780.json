{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5ODEzMjM3", "number": 1780, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjowNjoyNFrOFFabPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMDoyNzoxNFrOFP8Zww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjIwMTU2OnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/type/TypeCheckProcFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNjowNjoyNFrOIF6bjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNDoxOTo0M1rOIGNiaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3MTExOQ==", "bodyText": "These rules are seem to be constant. Can you please extract them?\nprivate static final Set<Set<PrimitiveObjectInspector.PrimitiveCategory>> decimalCharacterComparisonRules =\n  Collections.unmodifiableSet(new HashSet<>() {{add(...)...}})", "url": "https://github.com/apache/hive/pull/1780#discussion_r543071119", "createdAt": "2020-12-15T06:06:24Z", "author": {"login": "kasakrisz"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/type/TypeCheckProcFactory.java", "diffHunk": "@@ -801,6 +797,22 @@ private boolean unSafeCompareWithBigInt(TypeInfo otherTypeInfo, TypeInfo bigintC\n       }\n       return false;\n     }\n+    \n+    private boolean isDecimalCharacterComparison(TypeInfo type1, TypeInfo type2) {\n+      if(type1 instanceof PrimitiveTypeInfo && type2 instanceof PrimitiveTypeInfo) {\n+        Set<Set<PrimitiveObjectInspector.PrimitiveCategory>> comparisons = new HashSet<>(3);\n+        comparisons.add(EnumSet.of(\n+            PrimitiveObjectInspector.PrimitiveCategory.DECIMAL, PrimitiveObjectInspector.PrimitiveCategory.CHAR));\n+        comparisons.add(EnumSet.of(\n+            PrimitiveObjectInspector.PrimitiveCategory.DECIMAL, PrimitiveObjectInspector.PrimitiveCategory.VARCHAR));\n+        comparisons.add(EnumSet.of(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e32034d7236695f19e5663df7720d4f3d44a6c4"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzM4NDE2OA==", "bodyText": "Fixed in ab7432b. Overall there is more refactoring to be done but I want to keep it in a separate issue.", "url": "https://github.com/apache/hive/pull/1780#discussion_r543384168", "createdAt": "2020-12-15T14:19:43Z", "author": {"login": "zabetak"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/type/TypeCheckProcFactory.java", "diffHunk": "@@ -801,6 +797,22 @@ private boolean unSafeCompareWithBigInt(TypeInfo otherTypeInfo, TypeInfo bigintC\n       }\n       return false;\n     }\n+    \n+    private boolean isDecimalCharacterComparison(TypeInfo type1, TypeInfo type2) {\n+      if(type1 instanceof PrimitiveTypeInfo && type2 instanceof PrimitiveTypeInfo) {\n+        Set<Set<PrimitiveObjectInspector.PrimitiveCategory>> comparisons = new HashSet<>(3);\n+        comparisons.add(EnumSet.of(\n+            PrimitiveObjectInspector.PrimitiveCategory.DECIMAL, PrimitiveObjectInspector.PrimitiveCategory.CHAR));\n+        comparisons.add(EnumSet.of(\n+            PrimitiveObjectInspector.PrimitiveCategory.DECIMAL, PrimitiveObjectInspector.PrimitiveCategory.VARCHAR));\n+        comparisons.add(EnumSet.of(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA3MTExOQ=="}, "originalCommit": {"oid": "0e32034d7236695f19e5663df7720d4f3d44a6c4"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUyMjU5OTA3OnYy", "diffSide": "RIGHT", "path": "ql/src/test/results/clientpositive/llap/avrotblsjoin.q.out", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMDoyMDoxN1rOIVinLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMToyMTo1NFrOIVk7pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ1ODA5NQ==", "bodyText": "Maybe a loss of precision is more user friendly compared to information.", "url": "https://github.com/apache/hive/pull/1780#discussion_r559458095", "createdAt": "2021-01-18T10:20:17Z", "author": {"login": "dengzhhu653"}, "path": "ql/src/test/results/clientpositive/llap/avrotblsjoin.q.out", "diffHunk": "@@ -71,9 +71,9 @@ POSTHOOK: Input: _dummy_database@_dummy_table\n POSTHOOK: Output: default@table1_1\n POSTHOOK: Lineage: table1_1.col1 SCRIPT []\n POSTHOOK: Lineage: table1_1.col2 SCRIPT []\n-WARNING: Comparing a bigint and a string may result in a loss of precision.\n-WARNING: Comparing a bigint and a string may result in a loss of precision.\n-WARNING: Comparing a bigint and a string may result in a loss of precision.\n+WARNING: Comparing string and bigint may result in loss of information.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e67a8c655aba72bd13ebb4efb4f537c5bca423fe"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ5NjEwMA==", "bodyText": "I changed the message to loss of information since precision may not make sense for certain types such as string. I don't have a strong preference though so I can restore the old message.", "url": "https://github.com/apache/hive/pull/1780#discussion_r559496100", "createdAt": "2021-01-18T11:21:54Z", "author": {"login": "zabetak"}, "path": "ql/src/test/results/clientpositive/llap/avrotblsjoin.q.out", "diffHunk": "@@ -71,9 +71,9 @@ POSTHOOK: Input: _dummy_database@_dummy_table\n POSTHOOK: Output: default@table1_1\n POSTHOOK: Lineage: table1_1.col1 SCRIPT []\n POSTHOOK: Lineage: table1_1.col2 SCRIPT []\n-WARNING: Comparing a bigint and a string may result in a loss of precision.\n-WARNING: Comparing a bigint and a string may result in a loss of precision.\n-WARNING: Comparing a bigint and a string may result in a loss of precision.\n+WARNING: Comparing string and bigint may result in loss of information.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ1ODA5NQ=="}, "originalCommit": {"oid": "e67a8c655aba72bd13ebb4efb4f537c5bca423fe"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUyMjYyNTk1OnYy", "diffSide": "LEFT", "path": "ql/src/test/results/clientpositive/llap/partition_wise_fileformat2.q.out", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMDoyNzoxNFrOIVi3PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxMDoyNzoxNFrOIVi3PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ2MjIwNQ==", "bodyText": "the result of this qfile seems unrelated to the changes...", "url": "https://github.com/apache/hive/pull/1780#discussion_r559462205", "createdAt": "2021-01-18T10:27:14Z", "author": {"login": "dengzhhu653"}, "path": "ql/src/test/results/clientpositive/llap/partition_wise_fileformat2.q.out", "diffHunk": "@@ -123,31 +123,6 @@ POSTHOOK: Input: default@partition_test_partitioned@dt=102\n \t\t100\n \t\t100\n \t\t100\n-238\tval_238\t102", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e67a8c655aba72bd13ebb4efb4f537c5bca423fe"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 158, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}