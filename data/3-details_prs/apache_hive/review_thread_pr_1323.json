{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MjA0MzYz", "number": 1323, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTozMzowNVrOES3rHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo0NDo0NVrOETm6uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjIxOTgwOnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/OrderlessLimitPushDownOptimizer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNTozMzowNVrOG4ScuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzo0MDoxN1rOG447Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY3NTcwNA==", "bodyText": "Should we also check whether the ReduceSink also has a topn value greater then 0?\nreduceSink.getConf().getTopN() > 0", "url": "https://github.com/apache/hive/pull/1323#discussion_r461675704", "createdAt": "2020-07-28T15:33:05Z", "author": {"login": "kasakrisz"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/OrderlessLimitPushDownOptimizer.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ *\n+ *  * Licensed to the Apache Software Foundation (ASF) under one\n+ *  * or more contributor license agreements.  See the NOTICE file\n+ *  * distributed with this work for additional information\n+ *  * regarding copyright ownership.  The ASF licenses this file\n+ *  * to you under the Apache License, Version 2.0 (the\n+ *  * \"License\"); you may not use this file except in compliance\n+ *  * with the License.  You may obtain a copy of the License at\n+ *  *\n+ *  *     http://www.apache.org/licenses/LICENSE-2.0\n+ *  *\n+ *  * Unless required by applicable law or agreed to in writing, software\n+ *  * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  * See the License for the specific language governing permissions and\n+ *  * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.hadoop.hive.ql.optimizer;\n+\n+import static org.apache.hadoop.hive.ql.optimizer.topnkey.TopNKeyProcessor.copyDown;\n+import static org.apache.hadoop.hive.ql.optimizer.topnkey.TopNKeyPushdownProcessor.moveDown;\n+\n+import java.util.ArrayList;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Stack;\n+\n+import org.apache.hadoop.hive.ql.exec.CommonJoinOperator;\n+import org.apache.hadoop.hive.ql.exec.LimitOperator;\n+import org.apache.hadoop.hive.ql.exec.Operator;\n+import org.apache.hadoop.hive.ql.exec.ReduceSinkOperator;\n+import org.apache.hadoop.hive.ql.lib.DefaultGraphWalker;\n+import org.apache.hadoop.hive.ql.lib.DefaultRuleDispatcher;\n+import org.apache.hadoop.hive.ql.lib.Node;\n+import org.apache.hadoop.hive.ql.lib.NodeProcessorCtx;\n+import org.apache.hadoop.hive.ql.lib.RuleRegExp;\n+import org.apache.hadoop.hive.ql.lib.SemanticGraphWalker;\n+import org.apache.hadoop.hive.ql.lib.SemanticNodeProcessor;\n+import org.apache.hadoop.hive.ql.lib.SemanticRule;\n+import org.apache.hadoop.hive.ql.parse.ParseContext;\n+import org.apache.hadoop.hive.ql.parse.SemanticException;\n+import org.apache.hadoop.hive.ql.plan.JoinCondDesc;\n+import org.apache.hadoop.hive.ql.plan.JoinDesc;\n+import org.apache.hadoop.hive.ql.plan.OperatorDesc;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Push LIMIT without an Order By through Selects and Left Outer Joins\n+ */\n+public class OrderlessLimitPushDownOptimizer extends Transform {\n+  private static final Logger LOG = LoggerFactory.getLogger(OrderlessLimitPushDownOptimizer.class);\n+\n+  @Override\n+  public ParseContext transform(ParseContext pctx) throws SemanticException {\n+    Map<SemanticRule, SemanticNodeProcessor> opRules = new LinkedHashMap<SemanticRule, SemanticNodeProcessor>();\n+    opRules.put(\n+            new RuleRegExp(\"LIMIT push down\", LimitOperator.getOperatorName() + \"%\"),\n+            new LimitPushDown());\n+    SemanticGraphWalker walker = new DefaultGraphWalker(new DefaultRuleDispatcher(null, opRules, null));\n+    walker.startWalking(new ArrayList<>(pctx.getTopOps().values()), null);\n+    return pctx;\n+  }\n+\n+  private static class LimitPushDown implements SemanticNodeProcessor {\n+    @Override\n+    public Object process(Node nd, Stack<Node> stack, NodeProcessorCtx procCtx, Object... nodeOutputs) throws SemanticException {\n+      ReduceSinkOperator reduceSink = findReduceSink(stack);\n+      if (reduceSink != null && !reduceSink.getConf().hasOrderBy()) { // LIMIT + ORDER BY handled by TopNKey push down", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2759c81ae5e39137f669b1d21e9d68be674bfe5d"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMwNjE1MA==", "bodyText": "As we discussed offline a limit without order by, sort by and group by doesn't set ReduceSinkDesc.topn", "url": "https://github.com/apache/hive/pull/1323#discussion_r462306150", "createdAt": "2020-07-29T13:40:17Z", "author": {"login": "kasakrisz"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/OrderlessLimitPushDownOptimizer.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/*\n+ *\n+ *  * Licensed to the Apache Software Foundation (ASF) under one\n+ *  * or more contributor license agreements.  See the NOTICE file\n+ *  * distributed with this work for additional information\n+ *  * regarding copyright ownership.  The ASF licenses this file\n+ *  * to you under the Apache License, Version 2.0 (the\n+ *  * \"License\"); you may not use this file except in compliance\n+ *  * with the License.  You may obtain a copy of the License at\n+ *  *\n+ *  *     http://www.apache.org/licenses/LICENSE-2.0\n+ *  *\n+ *  * Unless required by applicable law or agreed to in writing, software\n+ *  * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  * See the License for the specific language governing permissions and\n+ *  * limitations under the License.\n+ *\n+ */\n+\n+package org.apache.hadoop.hive.ql.optimizer;\n+\n+import static org.apache.hadoop.hive.ql.optimizer.topnkey.TopNKeyProcessor.copyDown;\n+import static org.apache.hadoop.hive.ql.optimizer.topnkey.TopNKeyPushdownProcessor.moveDown;\n+\n+import java.util.ArrayList;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Stack;\n+\n+import org.apache.hadoop.hive.ql.exec.CommonJoinOperator;\n+import org.apache.hadoop.hive.ql.exec.LimitOperator;\n+import org.apache.hadoop.hive.ql.exec.Operator;\n+import org.apache.hadoop.hive.ql.exec.ReduceSinkOperator;\n+import org.apache.hadoop.hive.ql.lib.DefaultGraphWalker;\n+import org.apache.hadoop.hive.ql.lib.DefaultRuleDispatcher;\n+import org.apache.hadoop.hive.ql.lib.Node;\n+import org.apache.hadoop.hive.ql.lib.NodeProcessorCtx;\n+import org.apache.hadoop.hive.ql.lib.RuleRegExp;\n+import org.apache.hadoop.hive.ql.lib.SemanticGraphWalker;\n+import org.apache.hadoop.hive.ql.lib.SemanticNodeProcessor;\n+import org.apache.hadoop.hive.ql.lib.SemanticRule;\n+import org.apache.hadoop.hive.ql.parse.ParseContext;\n+import org.apache.hadoop.hive.ql.parse.SemanticException;\n+import org.apache.hadoop.hive.ql.plan.JoinCondDesc;\n+import org.apache.hadoop.hive.ql.plan.JoinDesc;\n+import org.apache.hadoop.hive.ql.plan.OperatorDesc;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Push LIMIT without an Order By through Selects and Left Outer Joins\n+ */\n+public class OrderlessLimitPushDownOptimizer extends Transform {\n+  private static final Logger LOG = LoggerFactory.getLogger(OrderlessLimitPushDownOptimizer.class);\n+\n+  @Override\n+  public ParseContext transform(ParseContext pctx) throws SemanticException {\n+    Map<SemanticRule, SemanticNodeProcessor> opRules = new LinkedHashMap<SemanticRule, SemanticNodeProcessor>();\n+    opRules.put(\n+            new RuleRegExp(\"LIMIT push down\", LimitOperator.getOperatorName() + \"%\"),\n+            new LimitPushDown());\n+    SemanticGraphWalker walker = new DefaultGraphWalker(new DefaultRuleDispatcher(null, opRules, null));\n+    walker.startWalking(new ArrayList<>(pctx.getTopOps().values()), null);\n+    return pctx;\n+  }\n+\n+  private static class LimitPushDown implements SemanticNodeProcessor {\n+    @Override\n+    public Object process(Node nd, Stack<Node> stack, NodeProcessorCtx procCtx, Object... nodeOutputs) throws SemanticException {\n+      ReduceSinkOperator reduceSink = findReduceSink(stack);\n+      if (reduceSink != null && !reduceSink.getConf().hasOrderBy()) { // LIMIT + ORDER BY handled by TopNKey push down", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY3NTcwNA=="}, "originalCommit": {"oid": "2759c81ae5e39137f669b1d21e9d68be674bfe5d"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTc4OTgxOnYy", "diffSide": "RIGHT", "path": "ql/src/test/results/clientpositive/llap/explainuser_1.q.out", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwODo1Njo0OFrOG5aQ3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzo0MTo1NlrOG8KNlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg1MjMxNg==", "bodyText": "Why couldn't be pushed through[SEL_1]  ?", "url": "https://github.com/apache/hive/pull/1323#discussion_r462852316", "createdAt": "2020-07-30T08:56:48Z", "author": {"login": "kasakrisz"}, "path": "ql/src/test/results/clientpositive/llap/explainuser_1.q.out", "diffHunk": "@@ -124,27 +124,25 @@ Stage-3\n                   <-Reducer 2 [SIMPLE_EDGE] llap\n                     File Output Operator [FS_7]\n                       table:{\"name:\":\"default.src_orc_merge_test_part_n1\"}\n-                      Select Operator [SEL_6] (rows=100 width=95)\n+                      Select Operator [SEL_4] (rows=100 width=178)\n                         Output:[\"_col0\",\"_col1\"]\n                         Limit [LIM_5] (rows=100 width=178)\n                           Number of rows:100\n-                          Select Operator [SEL_4] (rows=100 width=178)\n-                            Output:[\"_col0\",\"_col1\"]\n-                          <-Map 1 [CUSTOM_SIMPLE_EDGE] llap\n-                            PARTITION_ONLY_SHUFFLE [RS_3]\n-                              Limit [LIM_2] (rows=100 width=178)\n-                                Number of rows:100\n-                                Select Operator [SEL_1] (rows=500 width=178)\n-                                  Output:[\"_col0\",\"_col1\"]\n-                                  TableScan [TS_0] (rows=500 width=178)\n-                                    default@src,src,Tbl:COMPLETE,Col:COMPLETE,Output:[\"key\",\"value\"]\n+                        <-Map 1 [CUSTOM_SIMPLE_EDGE] llap\n+                          PARTITION_ONLY_SHUFFLE [RS_3]\n+                            Limit [LIM_2] (rows=100 width=178)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c90da56c3bd920b8fb446e63e7481446fd53a4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTczNTA2MQ==", "bodyText": "fixed", "url": "https://github.com/apache/hive/pull/1323#discussion_r465735061", "createdAt": "2020-08-05T13:41:56Z", "author": {"login": "zeroflag"}, "path": "ql/src/test/results/clientpositive/llap/explainuser_1.q.out", "diffHunk": "@@ -124,27 +124,25 @@ Stage-3\n                   <-Reducer 2 [SIMPLE_EDGE] llap\n                     File Output Operator [FS_7]\n                       table:{\"name:\":\"default.src_orc_merge_test_part_n1\"}\n-                      Select Operator [SEL_6] (rows=100 width=95)\n+                      Select Operator [SEL_4] (rows=100 width=178)\n                         Output:[\"_col0\",\"_col1\"]\n                         Limit [LIM_5] (rows=100 width=178)\n                           Number of rows:100\n-                          Select Operator [SEL_4] (rows=100 width=178)\n-                            Output:[\"_col0\",\"_col1\"]\n-                          <-Map 1 [CUSTOM_SIMPLE_EDGE] llap\n-                            PARTITION_ONLY_SHUFFLE [RS_3]\n-                              Limit [LIM_2] (rows=100 width=178)\n-                                Number of rows:100\n-                                Select Operator [SEL_1] (rows=500 width=178)\n-                                  Output:[\"_col0\",\"_col1\"]\n-                                  TableScan [TS_0] (rows=500 width=178)\n-                                    default@src,src,Tbl:COMPLETE,Col:COMPLETE,Output:[\"key\",\"value\"]\n+                        <-Map 1 [CUSTOM_SIMPLE_EDGE] llap\n+                          PARTITION_ONLY_SHUFFLE [RS_3]\n+                            Limit [LIM_2] (rows=100 width=178)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg1MjMxNg=="}, "originalCommit": {"oid": "78c90da56c3bd920b8fb446e63e7481446fd53a4"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTg5ODI3OnYy", "diffSide": "RIGHT", "path": "ql/src/test/results/clientpositive/llap/limit_join_transpose.q.out", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToyNzowMVrOG5bUkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjozNDo0OVrOG5q7bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2OTY1MA==", "bodyText": "Does -- SORT_QUERY_RESULTS help avoid resultset change?", "url": "https://github.com/apache/hive/pull/1323#discussion_r462869650", "createdAt": "2020-07-30T09:27:01Z", "author": {"login": "kasakrisz"}, "path": "ql/src/test/results/clientpositive/llap/limit_join_transpose.q.out", "diffHunk": "@@ -108,7 +111,7 @@ limit 1\n POSTHOOK: type: QUERY\n POSTHOOK: Input: default@src\n #### A masked pattern was here ####\n-0\tval_0\t0\tval_0\n+238\tval_238\t238\tval_238", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c90da56c3bd920b8fb446e63e7481446fd53a4"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEyNTM1Nw==", "bodyText": "I'll try but I don't think it will help in this case. My understanding is that SORT_QUERY_RESULTS sorts the rows on the standard output on the client/driver side.", "url": "https://github.com/apache/hive/pull/1323#discussion_r463125357", "createdAt": "2020-07-30T16:34:49Z", "author": {"login": "zeroflag"}, "path": "ql/src/test/results/clientpositive/llap/limit_join_transpose.q.out", "diffHunk": "@@ -108,7 +111,7 @@ limit 1\n POSTHOOK: type: QUERY\n POSTHOOK: Input: default@src\n #### A masked pattern was here ####\n-0\tval_0\t0\tval_0\n+238\tval_238\t238\tval_238", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg2OTY1MA=="}, "originalCommit": {"oid": "78c90da56c3bd920b8fb446e63e7481446fd53a4"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTkwMTk2OnYy", "diffSide": "LEFT", "path": "ql/src/test/results/clientpositive/llap/limit_join_transpose.q.out", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOToyODowOVrOG5bW-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjoxOTo0M1rOG5qWHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3MDI2NA==", "bodyText": "Result set disappeared.", "url": "https://github.com/apache/hive/pull/1323#discussion_r462870264", "createdAt": "2020-07-30T09:28:09Z", "author": {"login": "kasakrisz"}, "path": "ql/src/test/results/clientpositive/llap/limit_join_transpose.q.out", "diffHunk": "@@ -1207,7 +1223,6 @@ limit 1 offset 1\n POSTHOOK: type: QUERY\n POSTHOOK: Input: default@src\n #### A masked pattern was here ####\n-0\tval_0\t0\tval_0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c90da56c3bd920b8fb446e63e7481446fd53a4"}, "originalPosition": 313}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzExNTgwNg==", "bodyText": "Good catch, it might be because there is an offset=1 belongs to the limit. The Limit is pushed through the LOJ, but the original one is also kept. The first limit emits 1 row, but the second emits 0 because of offset=1.", "url": "https://github.com/apache/hive/pull/1323#discussion_r463115806", "createdAt": "2020-07-30T16:19:43Z", "author": {"login": "zeroflag"}, "path": "ql/src/test/results/clientpositive/llap/limit_join_transpose.q.out", "diffHunk": "@@ -1207,7 +1223,6 @@ limit 1 offset 1\n POSTHOOK: type: QUERY\n POSTHOOK: Input: default@src\n #### A masked pattern was here ####\n-0\tval_0\t0\tval_0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3MDI2NA=="}, "originalCommit": {"oid": "78c90da56c3bd920b8fb446e63e7481446fd53a4"}, "originalPosition": 313}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTk2MDI1OnYy", "diffSide": "RIGHT", "path": "ql/src/test/results/clientpositive/llap/input14_limit.q.out", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwOTo0NDo0NVrOG5b77Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNjowNjowNFrOG5p0aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3OTcyNQ==", "bodyText": "It is worth investigating why we end up with a plan where the parent of a TNK is a Limit but that can be a follow-up patch since it is out of scope of this patch.", "url": "https://github.com/apache/hive/pull/1323#discussion_r462879725", "createdAt": "2020-07-30T09:44:45Z", "author": {"login": "kasakrisz"}, "path": "ql/src/test/results/clientpositive/llap/input14_limit.q.out", "diffHunk": "@@ -75,19 +75,19 @@ STAGE PLANS:\n         Reducer 2 \n             Execution mode: vectorized, llap\n             Reduce Operator Tree:\n-              Select Operator\n-                expressions: VALUE._col0 (type: string), VALUE._col1 (type: string)\n-                outputColumnNames: _col0, _col1\n-                Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE\n-                Limit\n-                  Number of rows: 20\n-                  Statistics: Num rows: 20 Data size: 3560 Basic stats: COMPLETE Column stats: COMPLETE\n-                  Top N Key Operator\n-                    sort order: +\n-                    keys: _col0 (type: string)\n-                    null sort order: a\n+              Limit", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c90da56c3bd920b8fb446e63e7481446fd53a4"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzEwNzE3OQ==", "bodyText": "I agree, opened HIVE-23957 about it..", "url": "https://github.com/apache/hive/pull/1323#discussion_r463107179", "createdAt": "2020-07-30T16:06:04Z", "author": {"login": "zeroflag"}, "path": "ql/src/test/results/clientpositive/llap/input14_limit.q.out", "diffHunk": "@@ -75,19 +75,19 @@ STAGE PLANS:\n         Reducer 2 \n             Execution mode: vectorized, llap\n             Reduce Operator Tree:\n-              Select Operator\n-                expressions: VALUE._col0 (type: string), VALUE._col1 (type: string)\n-                outputColumnNames: _col0, _col1\n-                Statistics: Num rows: 500 Data size: 89000 Basic stats: COMPLETE Column stats: COMPLETE\n-                Limit\n-                  Number of rows: 20\n-                  Statistics: Num rows: 20 Data size: 3560 Basic stats: COMPLETE Column stats: COMPLETE\n-                  Top N Key Operator\n-                    sort order: +\n-                    keys: _col0 (type: string)\n-                    null sort order: a\n+              Limit", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjg3OTcyNQ=="}, "originalCommit": {"oid": "78c90da56c3bd920b8fb446e63e7481446fd53a4"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 452, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}