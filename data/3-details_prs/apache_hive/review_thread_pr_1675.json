{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNTY2NzUw", "number": 1675, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDozMDozNFrOE5YvGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDo1OTo0M1rOE5Z6QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NjA5NTYyOnYy", "diffSide": "RIGHT", "path": "llap-server/src/java/org/apache/hadoop/hive/llap/cache/LowLevelLrfuCachePolicy.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDozMDozNFrOHzz-RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDozNjo0MVrOHz0XlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5MDk0OQ==", "bodyText": "Why is this?", "url": "https://github.com/apache/hive/pull/1675#discussion_r524090949", "createdAt": "2020-11-16T10:30:34Z", "author": {"login": "pvary"}, "path": "llap-server/src/java/org/apache/hadoop/hive/llap/cache/LowLevelLrfuCachePolicy.java", "diffHunk": "@@ -147,7 +152,9 @@ public void notifyLock(LlapCacheableBuffer buffer) {\n \n   @Override\n   public void notifyUnlock(LlapCacheableBuffer buffer) {\n-\n+    if (proactiveEvictionEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e8ff5605606d8c60ffc38a59374bb4cea4b1c9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5NDAwNg==", "bodyText": "notifyUnlock(buffer) is invoked whenever a buffer was accessed (and the read from it has been finished)\nThis here covers a very rare scenario, details in the test here: https://github.com/apache/hive/pull/1675/files#diff-826be47ae17dbe2de96b3a40cf13fcc40604c5f630fd95d2732a646318ef33d4R307-R311", "url": "https://github.com/apache/hive/pull/1675#discussion_r524094006", "createdAt": "2020-11-16T10:33:38Z", "author": {"login": "szlta"}, "path": "llap-server/src/java/org/apache/hadoop/hive/llap/cache/LowLevelLrfuCachePolicy.java", "diffHunk": "@@ -147,7 +152,9 @@ public void notifyLock(LlapCacheableBuffer buffer) {\n \n   @Override\n   public void notifyUnlock(LlapCacheableBuffer buffer) {\n-\n+    if (proactiveEvictionEnabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5MDk0OQ=="}, "originalCommit": {"oid": "d3e8ff5605606d8c60ffc38a59374bb4cea4b1c9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5NjEyMg==", "bodyText": "Maybe add a comment, if we have to push any changes?", "url": "https://github.com/apache/hive/pull/1675#discussion_r524096122", "createdAt": "2020-11-16T10:35:33Z", "author": {"login": "pvary"}, "path": "llap-server/src/java/org/apache/hadoop/hive/llap/cache/LowLevelLrfuCachePolicy.java", "diffHunk": "@@ -147,7 +152,9 @@ public void notifyLock(LlapCacheableBuffer buffer) {\n \n   @Override\n   public void notifyUnlock(LlapCacheableBuffer buffer) {\n-\n+    if (proactiveEvictionEnabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5MDk0OQ=="}, "originalCommit": {"oid": "d3e8ff5605606d8c60ffc38a59374bb4cea4b1c9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5NzQyOA==", "bodyText": "ok", "url": "https://github.com/apache/hive/pull/1675#discussion_r524097428", "createdAt": "2020-11-16T10:36:41Z", "author": {"login": "szlta"}, "path": "llap-server/src/java/org/apache/hadoop/hive/llap/cache/LowLevelLrfuCachePolicy.java", "diffHunk": "@@ -147,7 +152,9 @@ public void notifyLock(LlapCacheableBuffer buffer) {\n \n   @Override\n   public void notifyUnlock(LlapCacheableBuffer buffer) {\n-\n+    if (proactiveEvictionEnabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA5MDk0OQ=="}, "originalCommit": {"oid": "d3e8ff5605606d8c60ffc38a59374bb4cea4b1c9"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NjI4ODAwOnYy", "diffSide": "RIGHT", "path": "llap-server/src/java/org/apache/hadoop/hive/llap/cache/LowLevelLrfuCachePolicy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDo1OTo0M1rOHz17Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDo1OTo0M1rOHz17Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDEyMjkyMw==", "bodyText": "Have I told you that I hate continue?\nThis is basically an if/else in disguise :(", "url": "https://github.com/apache/hive/pull/1675#discussion_r524122923", "createdAt": "2020-11-16T10:59:43Z", "author": {"login": "pvary"}, "path": "llap-server/src/java/org/apache/hadoop/hive/llap/cache/LowLevelLrfuCachePolicy.java", "diffHunk": "@@ -240,18 +247,38 @@ public void setEvictionListener(EvictionListener listener) {\n     this.evictionListener = listener;\n   }\n \n-  @Override\n-  public long purge() {\n+  private long evictOrPurge(boolean isPurge) {\n     long evicted = 0;\n     LlapCacheableBuffer oldTail;\n     listLock.lock();\n     try {\n       LlapCacheableBuffer current = listTail;\n+      LlapCacheableBuffer lockedHead = null;\n+      LlapCacheableBuffer lockedTail = null;\n       oldTail = listTail;\n       while (current != null) {\n-        boolean canEvict = LlapCacheableBuffer.INVALIDATE_OK == current.invalidate();\n+        // Case for when there is proactive eviction, but current buffer is not marked -> thus need to be kept\n+        if (!isPurge && !current.isMarkedForEviction()) {\n+          LlapCacheableBuffer newCurrent = current.prev;\n+          oldTail = removeFromLocalList(oldTail, current);\n+\n+          current.indexInHeap = LlapCacheableBuffer.IN_LIST;\n+          if (lockedHead != null) {\n+            current.next = lockedHead;\n+            lockedHead.prev = current;\n+            lockedHead = current;\n+          } else {\n+            lockedHead = current;\n+            lockedTail = current;\n+            current.next = null;\n+          }\n+\n+          current = newCurrent;\n+          continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3e8ff5605606d8c60ffc38a59374bb4cea4b1c9"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 245, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}