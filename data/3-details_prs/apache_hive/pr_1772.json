{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MzQ5NDk1", "number": 1772, "title": "HIVE-24519: Optimize MV: Materialized views should not rebuild when tables are not modified", "bodyText": "What changes were proposed in this pull request?\n\nIf the materialized view before compilation in AlterMaterializedViewRebuildAnalyzer is up to date bail out to cancel query execution and print a message to the console.\nAdd ALTER_MATERIALIZED_VIEW_REBUILD HiveOperation\nvalidTxnsList, currentTxnWriteIds and timeWindow was calculated before every call of isOutdatedMaterializedView. These are moved to isOutdatedMaterializedView method body. Since this requires Hive instance some part of  isOutdatedMaterializedView which depends on the Hive obeject is moved from HiveMaterializedViewUtils to Hive.java as an instance method.\nCall Hive.isOutdatedMaterializedView from AlterMaterializedViewRebuildAnalyzer and DescTableOperation\n\nWhy are the changes needed?\nOptimize MV rewrite.\nDoes this PR introduce any user-facing change?\nYes. When executing alter materialized view <materialized view name> rebuild commands and MV is up to date a message like this is written into console:\nMaterialized view default.mat1 is up to date. Cancelling rebuild.\n\nHow was this patch tested?\nmvn test -Dtest.output.overwrite -DskipSparkTests -Dtest=TestMiniLlapLocalCliDriver -Dqfile=materialized_view_rebuild_2.q -pl itests/qtest -Pitests\nmvn test -DskipSparkTests -Dtest=TestMiniLlapLocalCliDriver -Dqfile=materialized_view_rewrite_1.q,materialized_view_rewrite_2.q,materialized_view_rewrite_3.q,materialized_view_rewrite_4.q,materialized_view_rewrite_5.q,materialized_view_rewrite_6.q,materialized_view_rewrite_7.q,materialized_view_rewrite_8.q,materialized_view_rewrite_9.q,materialized_view_rewrite_10.q -pl itests/qtest -Pitests", "createdAt": "2020-12-14T10:44:34Z", "url": "https://github.com/apache/hive/pull/1772", "merged": true, "mergeCommit": {"oid": "75825c07e6f30b6a7d72705522a145f999712ddb"}, "closed": true, "closedAt": "2021-01-07T03:57:32Z", "author": {"login": "kasakrisz"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmHUHiAFqTU1MTQ2OTEyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdti1UJAH2gAyNTM5MzQ5NDk1OjI3ZGUwNzU1MzBiOGIwMTBjNzk0ZDAxMWNlZjM2MDczMzIzMTkxNWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxNDY5MTI0", "url": "https://github.com/apache/hive/pull/1772#pullrequestreview-551469124", "createdAt": "2020-12-14T15:17:39Z", "commit": {"oid": "a97f4087c468dcc62dc69ea7df70e3d5b8480c1b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNToxNzo0MFrOIFVbUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNToxNzo0MFrOIFVbUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjQ2NDg1MA==", "bodyText": "Is there any reason not to do this check right after tableName is parsed from the tree? Probably I'm missing something, but I believe that right after  line 62 this could be checked - no need to create the rootTasks then clear them. Also it would be nice to move this logic into a separate function, returning. boolean if it is outdated or not.", "url": "https://github.com/apache/hive/pull/1772#discussion_r542464850", "createdAt": "2020-12-14T15:17:40Z", "author": {"login": "miklosgergely"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/ddl/view/materialized/alter/rebuild/AlterMaterializedViewRebuildAnalyzer.java", "diffHunk": "@@ -69,6 +72,23 @@ public void analyzeInternal(ASTNode root) throws SemanticException {\n \n     LOG.debug(\"Rebuilding materialized view \" + tableName.getNotEmptyDbTable());\n     super.analyzeInternal(rewrittenAST);\n+\n+    try {\n+      Table table = db.getTable(tableName.getDb(), tableName.getTable());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a97f4087c468dcc62dc69ea7df70e3d5b8480c1b"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a97f4087c468dcc62dc69ea7df70e3d5b8480c1b", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/a97f4087c468dcc62dc69ea7df70e3d5b8480c1b", "committedDate": "2020-12-14T10:30:09Z", "message": "HIVE-24519: Optimize MV: Materialized views should not rebuild when tables are not modified"}, "afterCommit": {"oid": "47a33e6b97072c1e0dc282423116cdfe5dce5d88", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/47a33e6b97072c1e0dc282423116cdfe5dce5d88", "committedDate": "2020-12-16T12:39:30Z", "message": "add ALTER_MATERIALIZED_VIEW_REBUILD Operation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71b21e0b161fbff6fcb268a34cdf2261eafd109b", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/71b21e0b161fbff6fcb268a34cdf2261eafd109b", "committedDate": "2020-12-16T12:57:58Z", "message": "mode check before getRewrittenAST"}, "afterCommit": {"oid": "8cb8da886d68d75c0a42b938005de1f954fd6fd2", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/8cb8da886d68d75c0a42b938005de1f954fd6fd2", "committedDate": "2020-12-16T13:00:28Z", "message": "move check before getRewrittenAST"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8cb8da886d68d75c0a42b938005de1f954fd6fd2", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/8cb8da886d68d75c0a42b938005de1f954fd6fd2", "committedDate": "2020-12-16T13:00:28Z", "message": "move check before getRewrittenAST"}, "afterCommit": {"oid": "f278c42c5a5d5a8827c1abfa8553b26b5f3b5639", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/f278c42c5a5d5a8827c1abfa8553b26b5f3b5639", "committedDate": "2020-12-16T16:49:37Z", "message": "skip checking of rewriting.time.window when rebuild MV"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f278c42c5a5d5a8827c1abfa8553b26b5f3b5639", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/f278c42c5a5d5a8827c1abfa8553b26b5f3b5639", "committedDate": "2020-12-16T16:49:37Z", "message": "skip checking of rewriting.time.window when rebuild MV"}, "afterCommit": {"oid": "7bfce8bcff2fe28b7528d90c0215786f1d379fb8", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/7bfce8bcff2fe28b7528d90c0215786f1d379fb8", "committedDate": "2020-12-21T10:43:30Z", "message": "pass HiveTxnManager to isOutdatedMaterializedView"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7bfce8bcff2fe28b7528d90c0215786f1d379fb8", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/7bfce8bcff2fe28b7528d90c0215786f1d379fb8", "committedDate": "2020-12-21T10:43:30Z", "message": "pass HiveTxnManager to isOutdatedMaterializedView"}, "afterCommit": {"oid": "e1c365cf87dd3672506bd35a5eac72dc72816e1e", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/e1c365cf87dd3672506bd35a5eac72dc72816e1e", "committedDate": "2020-12-21T13:06:15Z", "message": "add ALTER_MATERIALIZED_VIEW_REBUILD to Operation2Privilege"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4Mjc4ODc4", "url": "https://github.com/apache/hive/pull/1772#pullrequestreview-558278878", "createdAt": "2020-12-24T00:04:16Z", "commit": {"oid": "e1c365cf87dd3672506bd35a5eac72dc72816e1e"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMDowNDoxNlrOIK7Jcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwMDozNDo1N1rOIK7gLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMyNTc0Ng==", "bodyText": "This should not be printed since this is a CREATE MV statement. Please review the code, we may miss a check to avoid printing a message.", "url": "https://github.com/apache/hive/pull/1772#discussion_r548325746", "createdAt": "2020-12-24T00:04:16Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/llap/materialized_view_rebuild_2.q.out", "diffHunk": "@@ -0,0 +1,171 @@\n+PREHOOK: query: create table t1(col0 int) stored as orc TBLPROPERTIES ('transactional'='true')\n+PREHOOK: type: CREATETABLE\n+PREHOOK: Output: database:default\n+PREHOOK: Output: default@t1\n+POSTHOOK: query: create table t1(col0 int) stored as orc TBLPROPERTIES ('transactional'='true')\n+POSTHOOK: type: CREATETABLE\n+POSTHOOK: Output: database:default\n+POSTHOOK: Output: default@t1\n+PREHOOK: query: insert into t1(col0) values(1)\n+PREHOOK: type: QUERY\n+PREHOOK: Input: _dummy_database@_dummy_table\n+PREHOOK: Output: default@t1\n+POSTHOOK: query: insert into t1(col0) values(1)\n+POSTHOOK: type: QUERY\n+POSTHOOK: Input: _dummy_database@_dummy_table\n+POSTHOOK: Output: default@t1\n+POSTHOOK: Lineage: t1.col0 SCRIPT []\n+PREHOOK: query: create materialized view mat1 as\n+select col0 from t1 where col0 = 1\n+PREHOOK: type: CREATE_MATERIALIZED_VIEW\n+PREHOOK: Input: default@t1\n+PREHOOK: Output: database:default\n+PREHOOK: Output: default@mat1\n+POSTHOOK: query: create materialized view mat1 as\n+select col0 from t1 where col0 = 1\n+POSTHOOK: type: CREATE_MATERIALIZED_VIEW\n+POSTHOOK: Input: default@t1\n+POSTHOOK: Output: database:default\n+POSTHOOK: Output: default@mat1\n+Materialized view default.mat1 is up to date. Cancelling rebuild.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1c365cf87dd3672506bd35a5eac72dc72816e1e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMyNzc1MA==", "bodyText": "nit. Materialized view %s.%s is up to date. Cancelling rebuild. -> Materialized view %s.%s is up to date. Skipping rebuild. ?", "url": "https://github.com/apache/hive/pull/1772#discussion_r548327750", "createdAt": "2020-12-24T00:14:50Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/ddl/view/materialized/alter/rebuild/AlterMaterializedViewRebuildAnalyzer.java", "diffHunk": "@@ -63,6 +66,20 @@ public void analyzeInternal(ASTNode root) throws SemanticException {\n       unparseTranslator.addTableNameTranslation(tableTree, SessionState.get().getCurrentDatabase());\n       return;\n     }\n+\n+    try {\n+      Boolean outdated = db.isOutdatedMaterializedView(getTxnMgr(), tableName);\n+      if (outdated != null && !outdated) {\n+        String msg = String.format(\"Materialized view %s.%s is up to date. Cancelling rebuild.\",\n+                tableName.getDb(), tableName.getTable());\n+        LOG.info(msg);\n+        console.printInfo(msg, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1c365cf87dd3672506bd35a5eac72dc72816e1e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMyODQ3Nw==", "bodyText": "If it is easy to do, can STAGE DEPENDENCIES and STAGE PLANS not be printed, e.g., it could be that if they are made null instead of empty, they are skipped in the EXPLAIN?", "url": "https://github.com/apache/hive/pull/1772#discussion_r548328477", "createdAt": "2020-12-24T00:18:15Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/llap/materialized_view_rebuild_2.q.out", "diffHunk": "@@ -0,0 +1,171 @@\n+PREHOOK: query: create table t1(col0 int) stored as orc TBLPROPERTIES ('transactional'='true')\n+PREHOOK: type: CREATETABLE\n+PREHOOK: Output: database:default\n+PREHOOK: Output: default@t1\n+POSTHOOK: query: create table t1(col0 int) stored as orc TBLPROPERTIES ('transactional'='true')\n+POSTHOOK: type: CREATETABLE\n+POSTHOOK: Output: database:default\n+POSTHOOK: Output: default@t1\n+PREHOOK: query: insert into t1(col0) values(1)\n+PREHOOK: type: QUERY\n+PREHOOK: Input: _dummy_database@_dummy_table\n+PREHOOK: Output: default@t1\n+POSTHOOK: query: insert into t1(col0) values(1)\n+POSTHOOK: type: QUERY\n+POSTHOOK: Input: _dummy_database@_dummy_table\n+POSTHOOK: Output: default@t1\n+POSTHOOK: Lineage: t1.col0 SCRIPT []\n+PREHOOK: query: create materialized view mat1 as\n+select col0 from t1 where col0 = 1\n+PREHOOK: type: CREATE_MATERIALIZED_VIEW\n+PREHOOK: Input: default@t1\n+PREHOOK: Output: database:default\n+PREHOOK: Output: default@mat1\n+POSTHOOK: query: create materialized view mat1 as\n+select col0 from t1 where col0 = 1\n+POSTHOOK: type: CREATE_MATERIALIZED_VIEW\n+POSTHOOK: Input: default@t1\n+POSTHOOK: Output: database:default\n+POSTHOOK: Output: default@mat1\n+Materialized view default.mat1 is up to date. Cancelling rebuild.\n+PREHOOK: query: explain\n+alter materialized view mat1 rebuild\n+PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD\n+POSTHOOK: query: explain\n+alter materialized view mat1 rebuild\n+POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD\n+STAGE DEPENDENCIES:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1c365cf87dd3672506bd35a5eac72dc72816e1e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMyOTgwNg==", "bodyText": "Can we add a similar test with an aggregate MV too (incremental rebuild with merge)?", "url": "https://github.com/apache/hive/pull/1772#discussion_r548329806", "createdAt": "2020-12-24T00:25:24Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/llap/materialized_view_rebuild_2.q.out", "diffHunk": "@@ -0,0 +1,171 @@\n+PREHOOK: query: create table t1(col0 int) stored as orc TBLPROPERTIES ('transactional'='true')\n+PREHOOK: type: CREATETABLE\n+PREHOOK: Output: database:default\n+PREHOOK: Output: default@t1\n+POSTHOOK: query: create table t1(col0 int) stored as orc TBLPROPERTIES ('transactional'='true')\n+POSTHOOK: type: CREATETABLE\n+POSTHOOK: Output: database:default\n+POSTHOOK: Output: default@t1\n+PREHOOK: query: insert into t1(col0) values(1)\n+PREHOOK: type: QUERY\n+PREHOOK: Input: _dummy_database@_dummy_table\n+PREHOOK: Output: default@t1\n+POSTHOOK: query: insert into t1(col0) values(1)\n+POSTHOOK: type: QUERY\n+POSTHOOK: Input: _dummy_database@_dummy_table\n+POSTHOOK: Output: default@t1\n+POSTHOOK: Lineage: t1.col0 SCRIPT []\n+PREHOOK: query: create materialized view mat1 as\n+select col0 from t1 where col0 = 1\n+PREHOOK: type: CREATE_MATERIALIZED_VIEW\n+PREHOOK: Input: default@t1\n+PREHOOK: Output: database:default\n+PREHOOK: Output: default@mat1\n+POSTHOOK: query: create materialized view mat1 as\n+select col0 from t1 where col0 = 1\n+POSTHOOK: type: CREATE_MATERIALIZED_VIEW\n+POSTHOOK: Input: default@t1\n+POSTHOOK: Output: database:default\n+POSTHOOK: Output: default@mat1\n+Materialized view default.mat1 is up to date. Cancelling rebuild.\n+PREHOOK: query: explain\n+alter materialized view mat1 rebuild\n+PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD\n+POSTHOOK: query: explain\n+alter materialized view mat1 rebuild\n+POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD\n+STAGE DEPENDENCIES:\n+\n+STAGE PLANS:\n+Materialized view default.mat1 is up to date. Cancelling rebuild.\n+PREHOOK: query: alter materialized view mat1 rebuild\n+PREHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD\n+POSTHOOK: query: alter materialized view mat1 rebuild\n+POSTHOOK: type: ALTER_MATERIALIZED_VIEW_REBUILD\n+PREHOOK: query: insert into t1(col0) values(1)\n+PREHOOK: type: QUERY\n+PREHOOK: Input: _dummy_database@_dummy_table\n+PREHOOK: Output: default@t1\n+POSTHOOK: query: insert into t1(col0) values(1)\n+POSTHOOK: type: QUERY\n+POSTHOOK: Input: _dummy_database@_dummy_table\n+POSTHOOK: Output: default@t1\n+POSTHOOK: Lineage: t1.col0 SCRIPT []\n+PREHOOK: query: explain\n+alter materialized view mat1 rebuild\n+PREHOOK: type: QUERY\n+PREHOOK: Input: default@t1\n+PREHOOK: Output: default@mat1\n+POSTHOOK: query: explain\n+alter materialized view mat1 rebuild\n+POSTHOOK: type: QUERY\n+POSTHOOK: Input: default@t1\n+POSTHOOK: Output: default@mat1\n+STAGE DEPENDENCIES:\n+  Stage-1 is a root stage\n+  Stage-2 depends on stages: Stage-1\n+  Stage-0 depends on stages: Stage-2\n+  Stage-3 depends on stages: Stage-0\n+  Stage-4 depends on stages: Stage-3\n+\n+STAGE PLANS:\n+  Stage: Stage-1\n+    Tez\n+#### A masked pattern was here ####\n+      Edges:\n+        Reducer 2 <- Map 1 (CUSTOM_SIMPLE_EDGE)\n+#### A masked pattern was here ####\n+      Vertices:\n+        Map 1 \n+            Map Operator Tree:\n+                TableScan\n+                  alias: t1\n+                  filterExpr: ((ROW__ID.writeid > 1L) and (col0 = 1)) (type: boolean)\n+                  Statistics: Num rows: 2 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE\n+                  Filter Operator\n+                    predicate: ((ROW__ID.writeid > 1L) and (col0 = 1)) (type: boolean)\n+                    Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE\n+                    Select Operator\n+                      expressions: 1 (type: int)\n+                      outputColumnNames: _col0\n+                      Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE\n+                      File Output Operator\n+                        compressed: false\n+                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE\n+                        table:\n+                            input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat\n+                            output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat\n+                            serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde\n+                            name: default.mat1\n+                      Select Operator\n+                        expressions: _col0 (type: int)\n+                        outputColumnNames: col0\n+                        Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE\n+                        Group By Operator\n+                          aggregations: min(col0), max(col0), count(1), count(col0), compute_bit_vector(col0, 'hll')\n+                          minReductionHashAggr: 0.4\n+                          mode: hash\n+                          outputColumnNames: _col0, _col1, _col2, _col3, _col4\n+                          Statistics: Num rows: 1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE\n+                          Reduce Output Operator\n+                            null sort order: \n+                            sort order: \n+                            Statistics: Num rows: 1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE\n+                            value expressions: _col0 (type: int), _col1 (type: int), _col2 (type: bigint), _col3 (type: bigint), _col4 (type: binary)\n+            Execution mode: llap\n+            LLAP IO: may be used (ACID table)\n+        Reducer 2 \n+            Execution mode: llap\n+            Reduce Operator Tree:\n+              Group By Operator\n+                aggregations: min(VALUE._col0), max(VALUE._col1), count(VALUE._col2), count(VALUE._col3), compute_bit_vector(VALUE._col4)\n+                mode: mergepartial\n+                outputColumnNames: _col0, _col1, _col2, _col3, _col4\n+                Statistics: Num rows: 1 Data size: 168 Basic stats: COMPLETE Column stats: COMPLETE\n+                Select Operator\n+                  expressions: 'LONG' (type: string), UDFToLong(_col0) (type: bigint), UDFToLong(_col1) (type: bigint), (_col2 - _col3) (type: bigint), COALESCE(ndv_compute_bit_vector(_col4),0) (type: bigint), _col4 (type: binary)\n+                  outputColumnNames: _col0, _col1, _col2, _col3, _col4, _col5\n+                  Statistics: Num rows: 1 Data size: 264 Basic stats: COMPLETE Column stats: COMPLETE\n+                  File Output Operator\n+                    compressed: false\n+                    Statistics: Num rows: 1 Data size: 264 Basic stats: COMPLETE Column stats: COMPLETE\n+                    table:\n+                        input format: org.apache.hadoop.mapred.SequenceFileInputFormat\n+                        output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat\n+                        serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe\n+\n+  Stage: Stage-2\n+    Dependency Collection\n+\n+  Stage: Stage-0\n+    Move Operator\n+      tables:\n+          replace: false\n+          table:\n+              input format: org.apache.hadoop.hive.ql.io.orc.OrcInputFormat\n+              output format: org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat\n+              serde: org.apache.hadoop.hive.ql.io.orc.OrcSerde\n+              name: default.mat1\n+\n+  Stage: Stage-3\n+    Stats Work\n+      Basic Stats Work:\n+      Column Stats Desc:\n+          Columns: col0\n+          Column Types: int\n+          Table: default.mat1\n+\n+  Stage: Stage-4\n+    Materialized View Update\n+      name: default.mat1\n+      update creation metadata: true\n+\n+PREHOOK: query: alter materialized view mat1 rebuild\n+PREHOOK: type: QUERY\n+PREHOOK: Input: default@t1\n+PREHOOK: Output: default@mat1\n+POSTHOOK: query: alter materialized view mat1 rebuild\n+POSTHOOK: type: QUERY\n+POSTHOOK: Input: default@t1\n+POSTHOOK: Output: default@mat1\n+POSTHOOK: Lineage: mat1.col0 SIMPLE []", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1c365cf87dd3672506bd35a5eac72dc72816e1e"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMzMTU2Ng==", "bodyText": "Why do we need to add this operation? I saw a comment about it in another conversation but it was not clear over there.\nIn the q file below, I see that that this change is leading to inconsistent operation type when rebuild is executed (QUERY) vs skipped (ALTER_MATERIALIZED_VIEW_REBUILD). This should not happen: The operation type should be the same in both cases.", "url": "https://github.com/apache/hive/pull/1772#discussion_r548331566", "createdAt": "2020-12-24T00:34:57Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/plan/HiveOperation.java", "diffHunk": "@@ -120,6 +120,8 @@\n       new Privilege[]{Privilege.DROP}),\n   ALTER_MATERIALIZED_VIEW_REWRITE(\"ALTER_MATERIALIZED_VIEW_REWRITE\", HiveParser.TOK_ALTER_MATERIALIZED_VIEW_REWRITE,\n       new Privilege[]{Privilege.ALTER_METADATA}, null),\n+  ALTER_MATERIALIZED_VIEW_REBUILD(\"ALTER_MATERIALIZED_VIEW_REBUILD\", HiveParser.TOK_ALTER_MATERIALIZED_VIEW_REBUILD,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1c365cf87dd3672506bd35a5eac72dc72816e1e"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1c365cf87dd3672506bd35a5eac72dc72816e1e", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/e1c365cf87dd3672506bd35a5eac72dc72816e1e", "committedDate": "2020-12-21T13:06:15Z", "message": "add ALTER_MATERIALIZED_VIEW_REBUILD to Operation2Privilege"}, "afterCommit": {"oid": "d37b775aaa189ce279f9b4a29f2d4b981d1bb121", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/d37b775aaa189ce279f9b4a29f2d4b981d1bb121", "committedDate": "2021-01-04T06:59:48Z", "message": "Change message: Cancelling -> Skipping"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f97876a3c374d7df4d7823e36d8a32d49526921a", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/f97876a3c374d7df4d7823e36d8a32d49526921a", "committedDate": "2021-01-04T10:07:20Z", "message": "setting back command type to Alter_Materialized_View_Rebuild"}, "afterCommit": {"oid": "2a8263cc5a6e5b9474a1442124f818d0e1f78476", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/2a8263cc5a6e5b9474a1442124f818d0e1f78476", "committedDate": "2021-01-05T07:06:51Z", "message": "update q test outs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxOTQwNDAx", "url": "https://github.com/apache/hive/pull/1772#pullrequestreview-561940401", "createdAt": "2021-01-05T16:30:26Z", "commit": {"oid": "2a8263cc5a6e5b9474a1442124f818d0e1f78476"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNjozMDoyNlrOIOeKCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNjozODo1NVrOIOefuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA0NTA2NQ==", "bodyText": "It seems we need object ownership for rebuild now (this is probably because of the changes in Operation2Privilege.java). We should mimic HiveOperationType.QUERY privileges instead of other ALTER statements (we probably need SELECT, INSERT, and DELETE on the MV).", "url": "https://github.com/apache/hive/pull/1772#discussion_r552045065", "createdAt": "2021-01-05T16:30:26Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientnegative/materialized_view_authorization_rebuild_no_grant.q.out", "diffHunk": "@@ -33,4 +33,4 @@ POSTHOOK: type: CREATE_MATERIALIZED_VIEW\n POSTHOOK: Input: default@amvrng_table\n POSTHOOK: Output: database:default\n POSTHOOK: Output: default@amvrng_mat_view\n-FAILED: HiveAccessControlException Permission denied: Principal [name=user1, type=USER] does not have following privileges for operation QUERY [[INSERT, DELETE] on Object [type=TABLE_OR_VIEW, name=default.amvrng_mat_view, action=INSERT_OVERWRITE]]\n+FAILED: HiveAccessControlException Permission denied: Principal [name=user1, type=USER] does not have following privileges for operation ALTER_MATERIALIZED_VIEW_REBUILD [[OBJECT OWNERSHIP] on Object [type=TABLE_OR_VIEW, name=default.amvrng_mat_view, action=INSERT_OVERWRITE]]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a8263cc5a6e5b9474a1442124f818d0e1f78476"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA0NzM3OA==", "bodyText": "I'm going to back down from this change. It seems there were occasions where this was empty. Let's just keep it as it was for backwards compatibility. If we want to remove them, we can do it in a separate JIRA. Sorry about the confusion.", "url": "https://github.com/apache/hive/pull/1772#discussion_r552047378", "createdAt": "2021-01-05T16:33:47Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/llap/insert1_overwrite_partitions.q.out", "diffHunk": "@@ -198,9 +198,7 @@ PREHOOK: type: QUERY\n POSTHOOK: query: EXPLAIN INSERT OVERWRITE TABLE destinTable PARTITION (ds='2011-11-11', hr='11') if not exists\n SELECT one,two FROM sourceTable WHERE ds='2011-11-11' AND hr='12' order by one desc, two desc limit 5\n POSTHOOK: type: QUERY\n-STAGE DEPENDENCIES:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a8263cc5a6e5b9474a1442124f818d0e1f78476"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA1MDYxOQ==", "bodyText": "nit. repeated import", "url": "https://github.com/apache/hive/pull/1772#discussion_r552050619", "createdAt": "2021-01-05T16:38:55Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java", "diffHunk": "@@ -28,11 +28,14 @@\n import com.google.common.util.concurrent.MoreExecutors;\n import com.google.common.util.concurrent.ThreadFactoryBuilder;\n \n+import static org.apache.hadoop.hive.conf.Constants.MATERIALIZED_VIEW_REWRITING_TIME_WINDOW;\n import static org.apache.hadoop.hive.metastore.api.hive_metastoreConstants.META_TABLE_STORAGE;\n import static org.apache.hadoop.hive.metastore.utils.MetaStoreUtils.getDefaultCatalog;\n import static org.apache.hadoop.hive.ql.io.AcidUtils.getFullTableName;\n import static org.apache.hadoop.hive.ql.metadata.HiveRelOptMaterialization.RewriteAlgorithm.CALCITE;\n import static org.apache.hadoop.hive.ql.metadata.HiveRelOptMaterialization.RewriteAlgorithm.ALL;\n+import static org.apache.hadoop.hive.ql.metadata.HiveRelOptMaterialization.RewriteAlgorithm.CALCITE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a8263cc5a6e5b9474a1442124f818d0e1f78476"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a90d7cee0060b4569c58a313c712f12e6d4fbf2a", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/a90d7cee0060b4569c58a313c712f12e6d4fbf2a", "committedDate": "2021-01-06T07:57:07Z", "message": "HIVE-24519: Optimize MV: Materialized views should not rebuild when tables are not modified"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fdb21bddbedc974cc29de69f26f0b91d930fe435", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/fdb21bddbedc974cc29de69f26f0b91d930fe435", "committedDate": "2021-01-06T07:57:07Z", "message": "HIVE-24519: Optimize MV: Materialized views should not rebuild when tables are not modified - move outdate check before analyzeInternal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bf1e6191dcf4a5d79e4b9cd0e477a5d41cdf31c", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/9bf1e6191dcf4a5d79e4b9cd0e477a5d41cdf31c", "committedDate": "2021-01-06T07:57:07Z", "message": "update q test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5bf8952edcfc563b09b76fbeaacea2113bd1876", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/a5bf8952edcfc563b09b76fbeaacea2113bd1876", "committedDate": "2021-01-06T07:57:07Z", "message": "rename q test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0eebc271fb3ef740f1510ef24c7ddfbf2e9e89c", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/f0eebc271fb3ef740f1510ef24c7ddfbf2e9e89c", "committedDate": "2021-01-06T07:57:07Z", "message": "add ALTER_MATERIALIZED_VIEW_REBUILD Operation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efbc9f5f4bfb8ee9bcc41f625bf53ae691c10407", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/efbc9f5f4bfb8ee9bcc41f625bf53ae691c10407", "committedDate": "2021-01-06T07:57:08Z", "message": "move check before getRewrittenAST"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b779c87c192556f135311898449d0f0d3595cb60", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/b779c87c192556f135311898449d0f0d3595cb60", "committedDate": "2021-01-06T07:57:08Z", "message": "skip checking of rewriting.time.window when rebuild MV"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d08f1b309a33b19b97fcd999cfe1b130f9e9557", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/9d08f1b309a33b19b97fcd999cfe1b130f9e9557", "committedDate": "2021-01-06T07:57:08Z", "message": "add ALTER_MATERIALIZED_VIEW_REBUILD to HiveOperationType.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3da31e249f45843fc4c999f0b9e265b404cc73a", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/e3da31e249f45843fc4c999f0b9e265b404cc73a", "committedDate": "2021-01-06T07:57:08Z", "message": "pass HiveTxnManager to isOutdatedMaterializedView"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4f6bbfc62abdf9d357108a64cfd5ab737cf5130", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/a4f6bbfc62abdf9d357108a64cfd5ab737cf5130", "committedDate": "2021-01-06T07:57:08Z", "message": "add ALTER_MATERIALIZED_VIEW_REBUILD to Operation2Privilege"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e92b2e29f74035886a3be845bd1031dd24d96a71", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/e92b2e29f74035886a3be845bd1031dd24d96a71", "committedDate": "2021-01-06T07:57:08Z", "message": "drop test mv after test run"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d135a4f666973af36bb886fa930a98136f76c252", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/d135a4f666973af36bb886fa930a98136f76c252", "committedDate": "2021-01-06T07:57:08Z", "message": "Change message: Cancelling -> Skipping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88e0859f6535193dd99ff23e2ac9b77a94fdda30", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/88e0859f6535193dd99ff23e2ac9b77a94fdda30", "committedDate": "2021-01-06T07:57:08Z", "message": "do not print stage dependencies/plan if tasks is empty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "625a75760088d4393f14d352ad18e369dc539b7e", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/625a75760088d4393f14d352ad18e369dc539b7e", "committedDate": "2021-01-06T07:57:08Z", "message": "added q test: aggregation in MV definition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09a6c74edbc246681c785603033467b290cdf7ca", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/09a6c74edbc246681c785603033467b290cdf7ca", "committedDate": "2021-01-06T07:57:08Z", "message": "do not add stage dependencies/plan to json if empty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "766188f3650f90315d7ba34972abdf01a7ca0a57", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/766188f3650f90315d7ba34972abdf01a7ca0a57", "committedDate": "2021-01-06T07:57:08Z", "message": "setting back command type to Alter_Materialized_View_Rebuild"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "778a53d11cc72516e0f694ece2aa736aefd57a84", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/778a53d11cc72516e0f694ece2aa736aefd57a84", "committedDate": "2021-01-06T07:57:08Z", "message": "Revert \"do not add stage dependencies/plan to json if empty\"\n\nThis reverts commit e42bdce567a8e31e6f4a65751f9aa4c1825120b9."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "666f4b558ce0e799eb06135ae51c717ebfc338e5", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/666f4b558ce0e799eb06135ae51c717ebfc338e5", "committedDate": "2021-01-06T07:57:08Z", "message": "refac: extract constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b346f12c3db5fa7a90d357f690a453c4b89128f9", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/b346f12c3db5fa7a90d357f690a453c4b89128f9", "committedDate": "2021-01-06T07:57:08Z", "message": "update q test outs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e55864279c5651ebd37935d13a7bff15f8f6aa5e", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/e55864279c5651ebd37935d13a7bff15f8f6aa5e", "committedDate": "2021-01-06T08:29:49Z", "message": "remove duplicate imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d43ef9fcc68a2a4bbde66da15d058170d2e3618e", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/d43ef9fcc68a2a4bbde66da15d058170d2e3618e", "committedDate": "2021-01-06T08:49:56Z", "message": "revert: refac: extract constants, do not print stage dependencies/plan if tasks is empty"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a8263cc5a6e5b9474a1442124f818d0e1f78476", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/2a8263cc5a6e5b9474a1442124f818d0e1f78476", "committedDate": "2021-01-05T07:06:51Z", "message": "update q test outs"}, "afterCommit": {"oid": "d43ef9fcc68a2a4bbde66da15d058170d2e3618e", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/d43ef9fcc68a2a4bbde66da15d058170d2e3618e", "committedDate": "2021-01-06T08:49:56Z", "message": "revert: refac: extract constants, do not print stage dependencies/plan if tasks is empty"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0a953c8640fdd6334e9aa8d198a639d591d24a9", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/c0a953c8640fdd6334e9aa8d198a639d591d24a9", "committedDate": "2021-01-06T10:14:06Z", "message": "fix privileges"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyODIwOTYx", "url": "https://github.com/apache/hive/pull/1772#pullrequestreview-562820961", "createdAt": "2021-01-06T15:53:52Z", "commit": {"oid": "c0a953c8640fdd6334e9aa8d198a639d591d24a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27de075530b8b010c794d011cef360733231915c", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/27de075530b8b010c794d011cef360733231915c", "committedDate": "2021-01-06T17:18:50Z", "message": "update q tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2908, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}