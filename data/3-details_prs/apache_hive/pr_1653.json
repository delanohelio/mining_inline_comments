{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NjkwMzk5", "number": 1653, "title": "HIVE-24357: Exchange SWO table/algorithm strategy", "bodyText": "What changes were proposed in this pull request?\n\nWhy are the changes needed?\n\nDoes this PR introduce any user-facing change?\n\nHow was this patch tested?", "createdAt": "2020-11-04T23:11:27Z", "url": "https://github.com/apache/hive/pull/1653", "merged": true, "mergeCommit": {"oid": "daa59dc71b3a27635d54193c8d2dd40844eedf5a"}, "closed": true, "closedAt": "2020-11-13T07:43:59Z", "author": {"login": "kgyrtkirk"}, "timelineItems": {"totalCount": 45, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZWGyYAH2gAyNTE1NjkwMzk5OjhhNGQwNWI2NmZlYWRiZGFlZTBjMzIzZTNjZDRiZDI2MWU2ZWJkZTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcBUbcAFqTUyOTc5NTIzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a4d05b66feadbdaee0c323e3cd4bd261e6ebde3", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/8a4d05b66feadbdaee0c323e3cd4bd261e6ebde3", "committedDate": "2020-11-04T23:10:40Z", "message": "make the switch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbfe28081700d701ea5e99463d3761bdae259d15", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/fbfe28081700d701ea5e99463d3761bdae259d15", "committedDate": "2020-11-04T23:12:11Z", "message": "add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d492cfead1594e8a40ac868c6a965dcb1c02250", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/9d492cfead1594e8a40ac868c6a965dcb1c02250", "committedDate": "2020-11-04T23:14:35Z", "message": "add comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "416c21d4e4c367edb17794845c35e4304e6f8784", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/416c21d4e4c367edb17794845c35e4304e6f8784", "committedDate": "2020-11-05T08:10:48Z", "message": "changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25d1b1f6e30d4572e035ec9f5c809555056f4ec6", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/25d1b1f6e30d4572e035ec9f5c809555056f4ec6", "committedDate": "2020-11-05T08:11:01Z", "message": "remove unrelated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d4bc3212ad9c306ddd3173d4079b50170aadead", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/8d4bc3212ad9c306ddd3173d4079b50170aadead", "committedDate": "2020-11-05T08:15:39Z", "message": "add test out"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3dea45cbc5c4f19ef0a4a103686859988e3106a", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/d3dea45cbc5c4f19ef0a4a103686859988e3106a", "committedDate": "2020-11-05T09:30:42Z", "message": "re-do more complete check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cfc0d9f2caa1867573f11bdf7a26abe83deb012", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/7cfc0d9f2caa1867573f11bdf7a26abe83deb012", "committedDate": "2020-11-05T09:30:52Z", "message": "log4j"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e70ec3cddbbd4410db9eee3379786177d758effe", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/e70ec3cddbbd4410db9eee3379786177d758effe", "committedDate": "2020-11-05T09:33:20Z", "message": "orig graph changes from downstreammerge patch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe8e54a5ac35db1e9ace30274759a2dc9c97f064", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/fe8e54a5ac35db1e9ace30274759a2dc9c97f064", "committedDate": "2020-11-05T09:35:26Z", "message": "graph changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dea05ee62634ba90035c5efb0b6956f12de49abf", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/dea05ee62634ba90035c5efb0b6956f12de49abf", "committedDate": "2020-11-05T09:45:01Z", "message": "add javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eefe4f74e7e96a75941738114356f30d23c417b", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/6eefe4f74e7e96a75941738114356f30d23c417b", "committedDate": "2020-11-05T09:48:01Z", "message": "move stuff around"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47848f715f61263db4f6854f2b6400e23dd8a951", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/47848f715f61263db4f6854f2b6400e23dd8a951", "committedDate": "2020-11-05T09:52:43Z", "message": "stricter dppu conditions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc75f375df4d65b75b79f52972d272e2a5094df0", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/bc75f375df4d65b75b79f52972d272e2a5094df0", "committedDate": "2020-11-05T09:54:30Z", "message": "add check to avoid tail-to-head connected plans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "137cadf26ad40a7cd3d6ea4e244a2c51498439f5", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/137cadf26ad40a7cd3d6ea4e244a2c51498439f5", "committedDate": "2020-11-05T10:50:49Z", "message": "move exporter to new file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae404cc4c312a7cb80318328a8e201435d46b32d", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/ae404cc4c312a7cb80318328a8e201435d46b32d", "committedDate": "2020-11-05T14:14:53Z", "message": "fix import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87bb01eff8986a99661842c388b6a8abb5aab497", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/87bb01eff8986a99661842c388b6a8abb5aab497", "committedDate": "2020-11-05T14:16:24Z", "message": "dd"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3396478e18e55c48b26a04b552fcb1f3aa454bc", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/e3396478e18e55c48b26a04b552fcb1f3aa454bc", "committedDate": "2020-11-05T14:29:46Z", "message": "dppu"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67fb03da821de2956543eda883966e047d0b0c42", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/67fb03da821de2956543eda883966e047d0b0c42", "committedDate": "2020-11-05T14:47:06Z", "message": "x0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dcc9d0d3c33fee1279bf8bf2663360655e4558f", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/0dcc9d0d3c33fee1279bf8bf2663360655e4558f", "committedDate": "2020-11-05T15:08:15Z", "message": "ff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a039e56911648cedb6c1babeb77f29e0629e3402", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/a039e56911648cedb6c1babeb77f29e0629e3402", "committedDate": "2020-11-06T09:15:09Z", "message": "q.out updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e8d5a3d49018bbd319e9d49eccd1a281946d4d1", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/4e8d5a3d49018bbd319e9d49eccd1a281946d4d1", "committedDate": "2020-11-09T12:14:17Z", "message": "Merge remote-tracking branch 'kgyrtkirk/HIVE-24360-dppu-fix' into HIVE-24357-swo-table-algo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a4c7786d9f948f23f3e6160e06ec0b23e098070", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/2a4c7786d9f948f23f3e6160e06ec0b23e098070", "committedDate": "2020-11-10T07:44:47Z", "message": "Merge remote-tracking branch 'apache/master' into HIVE-24357-swo-table-algo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b81ecd3183b7798628609b31985afb9df1e6654c", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/b81ecd3183b7798628609b31985afb9df1e6654c", "committedDate": "2020-11-10T08:12:55Z", "message": "remove multimap1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "692f0887f1ca1242d5d8728e09d688e2cb5b6607", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/692f0887f1ca1242d5d8728e09d688e2cb5b6607", "committedDate": "2020-11-10T08:23:04Z", "message": "1 step closer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df93a7a65d35e05c0cce904cfe083d0a37b1b5df", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/df93a7a65d35e05c0cce904cfe083d0a37b1b5df", "committedDate": "2020-11-10T08:26:08Z", "message": "use tablename"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd37d83cd7689a38a1a47825fea0906ea77dc600", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/fd37d83cd7689a38a1a47825fea0906ea77dc600", "committedDate": "2020-11-10T08:31:44Z", "message": "half way"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b01937b1eb95600be5c77ba5354ffaf99e2b0d2", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/4b01937b1eb95600be5c77ba5354ffaf99e2b0d2", "committedDate": "2020-11-10T08:33:30Z", "message": "change signature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03b02a80066b1a54d39fc7fdd83696e567dc9321", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/03b02a80066b1a54d39fc7fdd83696e567dc9321", "committedDate": "2020-11-10T08:33:58Z", "message": "indent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16d025b601593dd05776c21d054befd992349809", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/16d025b601593dd05776c21d054befd992349809", "committedDate": "2020-11-10T08:35:26Z", "message": "inline/cleanup/etc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d08f2cf2534955b5372a365ef0286f601b37d47e", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/d08f2cf2534955b5372a365ef0286f601b37d47e", "committedDate": "2020-11-10T09:23:59Z", "message": "remove invalid ts -es from the list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e448964021fc485ea015e2b2b953fe4f423af85", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/4e448964021fc485ea015e2b2b953fe4f423af85", "committedDate": "2020-11-10T09:46:02Z", "message": "fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14f2a7bde9d83b52b2a12a01bd57ee0b0065322d", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/14f2a7bde9d83b52b2a12a01bd57ee0b0065322d", "committedDate": "2020-11-10T11:17:13Z", "message": "save dot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5623ee8e16611a2964ae39c53064ce886c30150d", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/5623ee8e16611a2964ae39c53064ce886c30150d", "committedDate": "2020-11-10T12:30:52Z", "message": "Revert \"save dot\"\n\nThis reverts commit 14f2a7bde9d83b52b2a12a01bd57ee0b0065322d."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c0c942dea104637260ac1dccb1652764e652ec6", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/6c0c942dea104637260ac1dccb1652764e652ec6", "committedDate": "2020-11-10T12:54:15Z", "message": "bad test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dec61fe7d085a854d97eb5df9ab2ab7c1b6e74c8", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/dec61fe7d085a854d97eb5df9ab2ab7c1b6e74c8", "committedDate": "2020-11-10T12:54:40Z", "message": "remove test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5dd73922b05cec2b19a7c89cccdabb3a4c38fd7", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/f5dd73922b05cec2b19a7c89cccdabb3a4c38fd7", "committedDate": "2020-11-10T16:03:29Z", "message": "tabalias replace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c19ee5ac3a50f7d92ab2f6472d4fc72111511ce", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/0c19ee5ac3a50f7d92ab2f6472d4fc72111511ce", "committedDate": "2020-11-10T16:07:17Z", "message": "add pushfiltertotopoftablescan changes as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d99e3ba45be5094db084f829da6cc62f86cb300", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/5d99e3ba45be5094db084f829da6cc62f86cb300", "committedDate": "2020-11-10T16:13:34Z", "message": "some conditionals are removed by the improved push filter to ts method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b56126b244f03eaaef6fe7ae2d8a64f3fdb3163b", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/b56126b244f03eaaef6fe7ae2d8a64f3fdb3163b", "committedDate": "2020-11-10T16:58:55Z", "message": "known-filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0c6d6ec8390de6537105881d7f030f101bb530c", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/e0c6d6ec8390de6537105881d7f030f101bb530c", "committedDate": "2020-11-10T16:59:00Z", "message": "Revert \"known-filter\"\n\nThis reverts commit b56126b244f03eaaef6fe7ae2d8a64f3fdb3163b."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb6bf5790675797f3836c101c2ee65221c8b33a8", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/fb6bf5790675797f3836c101c2ee65221c8b33a8", "committedDate": "2020-11-10T17:22:21Z", "message": "update all"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MDE3MTA1", "url": "https://github.com/apache/hive/pull/1653#pullrequestreview-524017105", "createdAt": "2020-11-05T08:23:27Z", "commit": {"oid": "8d4bc3212ad9c306ddd3173d4079b50170aadead"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODoyMzoyOFrOHt4CzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNzozMjoxOVrOHwnrHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2NjE4OQ==", "bodyText": "I see 2 new subtree reusals in this plan - which have resulted in the removal of 4 vertices", "url": "https://github.com/apache/hive/pull/1653#discussion_r517866189", "createdAt": "2020-11-05T08:23:28Z", "author": {"login": "kgyrtkirk"}, "path": "ql/src/test/results/clientpositive/perf/tez/constraints/query14.q.out", "diffHunk": "@@ -622,148 +619,103 @@ Stage-3\n                                   <-Reducer 16 [CUSTOM_SIMPLE_EDGE] vectorized\n                                     PARTITION_ONLY_SHUFFLE [RS_1234]\n                                        Please refer to the previous Select Operator [SEL_1232]\n-                              <-Reducer 43 [CUSTOM_SIMPLE_EDGE] vectorized\n-                                PARTITION_ONLY_SHUFFLE [RS_1330]\n-                                  Filter Operator [FIL_1329] (rows=72 width=131)\n+                              <-Reducer 42 [CUSTOM_SIMPLE_EDGE] vectorized\n+                                PARTITION_ONLY_SHUFFLE [RS_1321]\n+                                  Filter Operator [FIL_1320] (rows=72 width=131)\n                                     predicate:_col3 is not null\n-                                    Group By Operator [GBY_1328] (rows=72 width=131)\n+                                    Group By Operator [GBY_1319] (rows=72 width=131)\n                                       Output:[\"_col0\",\"_col1\",\"_col2\",\"_col3\",\"_col4\"],aggregations:[\"sum(VALUE._col0)\",\"count(VALUE._col1)\"],keys:KEY._col0, KEY._col1, KEY._col2\n-                                    <-Reducer 42 [SIMPLE_EDGE]\n+                                    <-Reducer 41 [SIMPLE_EDGE]\n                                       SHUFFLE [RS_359]\n                                         PartitionCols:_col0, _col1, _col2\n                                         Group By Operator [GBY_358] (rows=72 width=131)\n                                           Output:[\"_col0\",\"_col1\",\"_col2\",\"_col3\",\"_col4\"],aggregations:[\"sum(_col3)\",\"count()\"],keys:_col0, _col1, _col2\n                                           Select Operator [SEL_356] (rows=12217 width=10)\n                                             Output:[\"_col0\",\"_col1\",\"_col2\",\"_col3\"]\n                                             Merge Join Operator [MERGEJOIN_1150] (rows=12217 width=10)\n-                                              Conds:RS_353._col1=RS_1289._col0(Inner),Output:[\"_col2\",\"_col3\",\"_col13\",\"_col14\",\"_col15\"]\n-                                            <-Map 73 [SIMPLE_EDGE] vectorized\n-                                              SHUFFLE [RS_1289]\n+                                              Conds:RS_353._col1=RS_1283._col0(Inner),Output:[\"_col2\",\"_col3\",\"_col13\",\"_col14\",\"_col15\"]\n+                                            <-Map 70 [SIMPLE_EDGE] vectorized\n+                                              SHUFFLE [RS_1283]\n                                                 PartitionCols:_col0\n-                                                Select Operator [SEL_1280] (rows=462000 width=15)\n+                                                Select Operator [SEL_1277] (rows=462000 width=15)\n                                                   Output:[\"_col0\",\"_col1\",\"_col2\",\"_col3\"]\n                                                    Please refer to the previous TableScan [TS_154]\n-                                            <-Reducer 41 [SIMPLE_EDGE]\n+                                            <-Reducer 40 [SIMPLE_EDGE]\n                                               SHUFFLE [RS_353]\n                                                 PartitionCols:_col1\n                                                 Merge Join Operator [MERGEJOIN_1149] (rows=12217 width=4)\n-                                                  Conds:RS_350._col6, _col7, _col8=RS_1317._col0, _col1, _col2(Inner),Output:[\"_col1\",\"_col2\",\"_col3\"]\n-                                                <-Reducer 40 [SIMPLE_EDGE] vectorized\n-                                                  SHUFFLE [RS_1317]\n+                                                  Conds:RS_350._col6, _col7, _col8=RS_1308._col0, _col1, _col2(Inner),Output:[\"_col1\",\"_col2\",\"_col3\"]\n+                                                <-Reducer 39 [SIMPLE_EDGE] vectorized\n+                                                  SHUFFLE [RS_1308]\n                                                     PartitionCols:_col0, _col1, _col2\n-                                                    Select Operator [SEL_1316] (rows=1 width=12)\n+                                                    Select Operator [SEL_1307] (rows=1 width=12)\n                                                       Output:[\"_col0\",\"_col1\",\"_col2\"]\n-                                                      Filter Operator [FIL_1315] (rows=1 width=20)\n+                                                      Filter Operator [FIL_1306] (rows=1 width=20)\n                                                         predicate:(_col3 = 3L)\n-                                                        Group By Operator [GBY_1314] (rows=121728 width=19)\n+                                                        Group By Operator [GBY_1305] (rows=121728 width=19)\n                                                           Output:[\"_col0\",\"_col1\",\"_col2\",\"_col3\"],aggregations:[\"count(VALUE._col0)\"],keys:KEY._col0, KEY._col1, KEY._col2\n-                                                        <-Union 39 [SIMPLE_EDGE]\n-                                                          <-Reducer 38 [CONTAINS] vectorized\n-                                                            Reduce Output Operator [RS_1353]\n+                                                        <-Union 38 [SIMPLE_EDGE]\n+                                                          <-Reducer 37 [CONTAINS] vectorized\n+                                                            Reduce Output Operator [RS_1344]\n                                                               PartitionCols:_col0, _col1, _col2\n-                                                              Group By Operator [GBY_1352] (rows=121728 width=19)\n+                                                              Group By Operator [GBY_1343] (rows=121728 width=19)\n                                                                 Output:[\"_col0\",\"_col1\",\"_col2\",\"_col3\"],aggregations:[\"count(_col3)\"],keys:_col0, _col1, _col2\n-                                                                Group By Operator [GBY_1351] (rows=121728 width=19)\n+                                                                Group By Operator [GBY_1342] (rows=121728 width=19)\n                                                                   Output:[\"_col0\",\"_col1\",\"_col2\",\"_col3\"],aggregations:[\"count(VALUE._col0)\"],keys:KEY._col0, KEY._col1, KEY._col2\n-                                                                <-Reducer 37 [SIMPLE_EDGE]\n+                                                                <-Reducer 33 [SIMPLE_EDGE]\n                                                                   SHUFFLE [RS_291]\n                                                                     PartitionCols:_col0, _col1, _col2\n-                                                                    Group By Operator [GBY_290] (rows=121728 width=19)\n-                                                                      Output:[\"_col0\",\"_col1\",\"_col2\",\"_col3\"],aggregations:[\"count()\"],keys:_col4, _col5, _col6\n-                                                                      Merge Join Operator [MERGEJOIN_1144] (rows=14628613 width=11)\n-                                                                        Conds:RS_286._col1=RS_1297._col0(Inner),Output:[\"_col4\",\"_col5\",\"_col6\"]\n-                                                                      <-Map 73 [SIMPLE_EDGE] vectorized\n-                                                                        SHUFFLE [RS_1297]\n-                                                                          PartitionCols:_col0\n-                                                                          Select Operator [SEL_1286] (rows=458612 width=15)\n-                                                                            Output:[\"_col0\",\"_col1\",\"_col2\",\"_col3\"]\n-                                                                            Filter Operator [FIL_1277] (rows=458612 width=15)\n-                                                                              predicate:(i_category_id is not null and i_brand_id is not null and i_class_id is not null)\n-                                                                               Please refer to the previous TableScan [TS_154]\n-                                                                      <-Reducer 32 [SIMPLE_EDGE]\n-                                                                        SHUFFLE [RS_286]\n-                                                                          PartitionCols:_col1\n-                                                                           Please refer to the previous Merge Join Operator [MERGEJOIN_1132]\n-                                                          <-Reducer 63 [CONTAINS] vectorized\n-                                                            Reduce Output Operator [RS_1362]\n+                                                                     Please refer to the previous Group By Operator [GBY_173]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d4bc3212ad9c306ddd3173d4079b50170aadead"}, "originalPosition": 515}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2OTkzNA==", "bodyText": "this SJ filter became absent after HIVE-23939 (ts schema merge patch)\nthe merged TS operators were retained in the working list when the schema merge related logic was called - I have not digged deeper into this - taking a look at the input plan this SJ filter makes sense to me", "url": "https://github.com/apache/hive/pull/1653#discussion_r517869934", "createdAt": "2020-11-05T08:29:44Z", "author": {"login": "kgyrtkirk"}, "path": "ql/src/test/results/clientpositive/perf/tez/query61.q.out", "diffHunk": "@@ -165,70 +167,81 @@ Stage-0\n                       SHUFFLE [RS_38]\n                         PartitionCols:_col2\n                         Merge Join Operator [MERGEJOIN_256] (rows=2526982 width=0)\n-                          Conds:RS_30._col4=RS_290._col0(Inner),Output:[\"_col2\",\"_col5\"]\n-                        <-Map 20 [SIMPLE_EDGE] vectorized\n-                          SHUFFLE [RS_290]\n+                          Conds:RS_30._col4=RS_295._col0(Inner),Output:[\"_col2\",\"_col5\"]\n+                        <-Map 21 [SIMPLE_EDGE] vectorized\n+                          SHUFFLE [RS_295]\n                             PartitionCols:_col0\n-                            Select Operator [SEL_289] (rows=2300 width=4)\n+                            Select Operator [SEL_294] (rows=2300 width=4)\n                               Output:[\"_col0\"]\n-                              Filter Operator [FIL_288] (rows=2300 width=259)\n+                              Filter Operator [FIL_293] (rows=2300 width=259)\n                                 predicate:(((p_channel_dmail = 'Y') or (p_channel_email = 'Y') or (p_channel_tv = 'Y')) and p_promo_sk is not null)\n                                 TableScan [TS_18] (rows=2300 width=259)\n                                   default@promotion,promotion,Tbl:COMPLETE,Col:COMPLETE,Output:[\"p_promo_sk\",\"p_channel_dmail\",\"p_channel_email\",\"p_channel_tv\"]\n                         <-Reducer 12 [SIMPLE_EDGE]\n                           SHUFFLE [RS_30]\n                             PartitionCols:_col4\n                             Merge Join Operator [MERGEJOIN_255] (rows=2526982 width=0)\n-                              Conds:RS_27._col3=RS_286._col0(Inner),Output:[\"_col2\",\"_col4\",\"_col5\"]\n-                            <-Map 19 [SIMPLE_EDGE] vectorized\n-                              SHUFFLE [RS_286]\n+                              Conds:RS_27._col3=RS_291._col0(Inner),Output:[\"_col2\",\"_col4\",\"_col5\"]\n+                            <-Map 20 [SIMPLE_EDGE] vectorized\n+                              SHUFFLE [RS_291]\n                                 PartitionCols:_col0\n-                                Select Operator [SEL_285] (rows=341 width=4)\n+                                Select Operator [SEL_290] (rows=341 width=4)\n                                   Output:[\"_col0\"]\n-                                  Filter Operator [FIL_284] (rows=341 width=115)\n+                                  Filter Operator [FIL_289] (rows=341 width=115)\n                                     predicate:((s_gmt_offset = -7) and s_store_sk is not null)\n                                     TableScan [TS_15] (rows=1704 width=115)\n                                       default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:[\"s_store_sk\",\"s_gmt_offset\"]\n                             <-Reducer 11 [SIMPLE_EDGE]\n                               SHUFFLE [RS_27]\n                                 PartitionCols:_col3\n                                 Merge Join Operator [MERGEJOIN_254] (rows=12627499 width=0)\n-                                  Conds:RS_24._col1=RS_282._col0(Inner),Output:[\"_col2\",\"_col3\",\"_col4\",\"_col5\"]\n-                                <-Map 18 [SIMPLE_EDGE] vectorized\n-                                  SHUFFLE [RS_282]\n+                                  Conds:RS_24._col1=RS_287._col0(Inner),Output:[\"_col2\",\"_col3\",\"_col4\",\"_col5\"]\n+                                <-Map 19 [SIMPLE_EDGE] vectorized\n+                                  SHUFFLE [RS_287]\n                                     PartitionCols:_col0\n-                                    Select Operator [SEL_281] (rows=46200 width=4)\n+                                    Select Operator [SEL_286] (rows=46200 width=4)\n                                       Output:[\"_col0\"]\n-                                      Filter Operator [FIL_280] (rows=46200 width=94)\n+                                      Filter Operator [FIL_285] (rows=46200 width=94)\n                                         predicate:((i_category = 'Electronics') and i_item_sk is not null)\n                                         TableScan [TS_12] (rows=462000 width=94)\n                                           default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:[\"i_item_sk\",\"i_category\"]\n                                 <-Reducer 10 [SIMPLE_EDGE]\n                                   SHUFFLE [RS_24]\n                                     PartitionCols:_col1\n                                     Merge Join Operator [MERGEJOIN_253] (rows=13119234 width=4)\n-                                      Conds:RS_274._col0=RS_278._col0(Inner),Output:[\"_col1\",\"_col2\",\"_col3\",\"_col4\",\"_col5\"]\n+                                      Conds:RS_283._col0=RS_272._col0(Inner),Output:[\"_col1\",\"_col2\",\"_col3\",\"_col4\",\"_col5\"]\n                                     <-Map 17 [SIMPLE_EDGE] vectorized\n-                                      SHUFFLE [RS_278]\n+                                      PARTITION_ONLY_SHUFFLE [RS_272]\n                                         PartitionCols:_col0\n-                                        Select Operator [SEL_277] (rows=50 width=4)\n+                                        Select Operator [SEL_271] (rows=50 width=4)\n                                           Output:[\"_col0\"]\n-                                          Filter Operator [FIL_276] (rows=50 width=12)\n+                                          Filter Operator [FIL_270] (rows=50 width=12)\n                                             predicate:((d_year = 1999) and (d_moy = 11) and d_date_sk is not null)\n                                             TableScan [TS_9] (rows=73049 width=12)\n                                               default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:[\"d_date_sk\",\"d_year\",\"d_moy\"]\n                                     <-Map 9 [SIMPLE_EDGE] vectorized\n-                                      SHUFFLE [RS_274]\n+                                      SHUFFLE [RS_283]\n                                         PartitionCols:_col0\n-                                        Select Operator [SEL_272] (rows=479120969 width=126)\n+                                        Select Operator [SEL_281] (rows=479120969 width=126)\n                                           Output:[\"_col0\",\"_col1\",\"_col2\",\"_col3\",\"_col4\",\"_col5\"]\n-                                          Filter Operator [FIL_270] (rows=479120969 width=126)\n-                                            predicate:(ss_sold_date_sk is not null and ss_promo_sk is not null and ss_customer_sk is not null and ss_store_sk is not null and ss_item_sk is not null)\n+                                          Filter Operator [FIL_279] (rows=479120969 width=126)\n+                                            predicate:(ss_sold_date_sk is not null and ss_promo_sk is not null and ss_customer_sk is not null and ss_store_sk is not null and ss_item_sk is not null and ss_sold_date_sk BETWEEN DynamicValue(RS_22_date_dim_d_date_sk_min) AND DynamicValue(RS_22_date_dim_d_date_sk_max) and in_bloom_filter(ss_sold_date_sk, DynamicValue(RS_22_date_dim_d_date_sk_bloom_filter)) and ((ss_sold_date_sk is not null and ss_promo_sk is not null and ss_customer_sk is not null and ss_store_sk is not null and ss_item_sk is not null) or (ss_sold_date_sk is not null and ss_customer_sk is not null and ss_store_sk is not null and ss_item_sk is not null)))\n                                             TableScan [TS_6] (rows=575995635 width=126)\n                                               default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:[\"ss_sold_date_sk\",\"ss_item_sk\",\"ss_customer_sk\",\"ss_store_sk\",\"ss_promo_sk\",\"ss_ext_sales_price\"]\n+                                            <-Reducer 18 [BROADCAST_EDGE] vectorized", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d4bc3212ad9c306ddd3173d4079b50170aadead"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc0MzcwOA==", "bodyText": "HIVE-24365 will address these conditions", "url": "https://github.com/apache/hive/pull/1653#discussion_r520743708", "createdAt": "2020-11-10T17:32:19Z", "author": {"login": "kgyrtkirk"}, "path": "ql/src/test/results/clientpositive/perf/tez/constraints/query23.q.out", "diffHunk": "@@ -255,7 +255,7 @@ Stage-0\n                                                             Select Operator [SEL_421] (rows=525327388 width=119)\n                                                               Output:[\"_col0\",\"_col1\",\"_col2\"]\n                                                               Filter Operator [FIL_417] (rows=525327388 width=118)\n-                                                                predicate:(ss_sold_date_sk is not null and ss_customer_sk is not null and ss_sold_date_sk BETWEEN DynamicValue(RS_26_date_dim_d_date_sk_min) AND DynamicValue(RS_26_date_dim_d_date_sk_max) and in_bloom_filter(ss_sold_date_sk, DynamicValue(RS_26_date_dim_d_date_sk_bloom_filter)) and (ss_customer_sk is not null or (ss_sold_date_sk is not null and ss_customer_sk is not null)) and ((ss_customer_sk BETWEEN DynamicValue(RS_47_catalog_sales_cs_bill_customer_sk_min) AND DynamicValue(RS_47_catalog_sales_cs_bill_customer_sk_max) and in_bloom_filter(ss_customer_sk, DynamicValue(RS_47_catalog_sales_cs_bill_customer_sk_bloom_filter))) or (ss_sold_date_sk BETWEEN DynamicValue(RS_26_date_dim_d_date_sk_min) AND DynamicValue(RS_26_date_dim_d_date_sk_max) and in_bloom_filter(ss_sold_date_sk, DynamicValue(RS_26_date_dim_d_date_sk_bloom_filter)))) and (((ss_customer_sk is not null or (ss_sold_date_sk is not null and ss_customer_sk is not null)) and ((ss_customer_sk BETWEEN DynamicValue(RS_47_catalog_sales_cs_bill_customer_sk_min) AND DynamicValue(RS_47_catalog_sales_cs_bill_customer_sk_max) and in_bloom_filter(ss_customer_sk, DynamicValue(RS_47_catalog_sales_cs_bill_customer_sk_bloom_filter))) or (ss_sold_date_sk BETWEEN DynamicValue(RS_26_date_dim_d_date_sk_min) AND DynamicValue(RS_26_date_dim_d_date_sk_max) and in_bloom_filter(ss_sold_date_sk, DynamicValue(RS_26_date_dim_d_date_sk_bloom_filter))))) or ss_sold_date_sk is not null) and (ss_sold_date_sk BETWEEN DynamicValue(RS_58_date_dim_d_date_sk_min) AND DynamicValue(RS_58_date_dim_d_date_sk_max) and in_bloom_filter(ss_sold_date_sk, DynamicValue(RS_58_date_dim_d_date_sk_bloom_filter))))\n+                                                                predicate:(ss_sold_date_sk is not null and ss_customer_sk is not null and ss_sold_date_sk BETWEEN DynamicValue(RS_26_date_dim_d_date_sk_min) AND DynamicValue(RS_26_date_dim_d_date_sk_max) and in_bloom_filter(ss_sold_date_sk, DynamicValue(RS_26_date_dim_d_date_sk_bloom_filter)) and (ss_customer_sk is not null or (ss_sold_date_sk is not null and ss_customer_sk is not null)) and ((ss_customer_sk BETWEEN DynamicValue(RS_47_catalog_sales_cs_bill_customer_sk_min) AND DynamicValue(RS_47_catalog_sales_cs_bill_customer_sk_max) and in_bloom_filter(ss_customer_sk, DynamicValue(RS_47_catalog_sales_cs_bill_customer_sk_bloom_filter))) or (ss_sold_date_sk BETWEEN DynamicValue(RS_26_date_dim_d_date_sk_min) AND DynamicValue(RS_26_date_dim_d_date_sk_max) and in_bloom_filter(ss_sold_date_sk, DynamicValue(RS_26_date_dim_d_date_sk_bloom_filter)))) and (((ss_customer_sk is not null or (ss_sold_date_sk is not null and ss_customer_sk is not null)) and ((ss_customer_sk BETWEEN DynamicValue(RS_47_catalog_sales_cs_bill_customer_sk_min) AND DynamicValue(RS_47_catalog_sales_cs_bill_customer_sk_max) and in_bloom_filter(ss_customer_sk, DynamicValue(RS_47_catalog_sales_cs_bill_customer_sk_bloom_filter))) or (ss_sold_date_sk BETWEEN DynamicValue(RS_26_date_dim_d_date_sk_min) AND DynamicValue(RS_26_date_dim_d_date_sk_max) and in_bloom_filter(ss_sold_date_sk, DynamicValue(RS_26_date_dim_d_date_sk_bloom_filter))))) or ss_sold_date_sk is not null) and ss_sold_date_sk BETWEEN DynamicValue(RS_58_date_dim_d_date_sk_min) AND DynamicValue(RS_58_date_dim_d_date_sk_max) and in_bloom_filter(ss_sold_date_sk, DynamicValue(RS_58_date_dim_d_date_sk_bloom_filter)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb6bf5790675797f3836c101c2ee65221c8b33a8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92e0ba3722ab18d9dc4ba5112600440d2a4554d0", "author": {"user": {"login": "kgyrtkirk", "name": "Zoltan Haindrich"}}, "url": "https://github.com/apache/hive/commit/92e0ba3722ab18d9dc4ba5112600440d2a4554d0", "committedDate": "2020-11-11T09:08:12Z", "message": "A || A => A"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5Nzk1MjM5", "url": "https://github.com/apache/hive/pull/1653#pullrequestreview-529795239", "createdAt": "2020-11-13T06:28:09Z", "commit": {"oid": "92e0ba3722ab18d9dc4ba5112600440d2a4554d0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjoyODowOVrOHydxAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjoyODowOVrOHydxAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3ODUyOQ==", "bodyText": "Maybe it was because one TS was targeted by a SJ and the other one was not?", "url": "https://github.com/apache/hive/pull/1653#discussion_r522678529", "createdAt": "2020-11-13T06:28:09Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/perf/tez/query61.q.out", "diffHunk": "@@ -165,70 +167,81 @@ Stage-0\n                       SHUFFLE [RS_38]\n                         PartitionCols:_col2\n                         Merge Join Operator [MERGEJOIN_256] (rows=2526982 width=0)\n-                          Conds:RS_30._col4=RS_290._col0(Inner),Output:[\"_col2\",\"_col5\"]\n-                        <-Map 20 [SIMPLE_EDGE] vectorized\n-                          SHUFFLE [RS_290]\n+                          Conds:RS_30._col4=RS_295._col0(Inner),Output:[\"_col2\",\"_col5\"]\n+                        <-Map 21 [SIMPLE_EDGE] vectorized\n+                          SHUFFLE [RS_295]\n                             PartitionCols:_col0\n-                            Select Operator [SEL_289] (rows=2300 width=4)\n+                            Select Operator [SEL_294] (rows=2300 width=4)\n                               Output:[\"_col0\"]\n-                              Filter Operator [FIL_288] (rows=2300 width=259)\n+                              Filter Operator [FIL_293] (rows=2300 width=259)\n                                 predicate:(((p_channel_dmail = 'Y') or (p_channel_email = 'Y') or (p_channel_tv = 'Y')) and p_promo_sk is not null)\n                                 TableScan [TS_18] (rows=2300 width=259)\n                                   default@promotion,promotion,Tbl:COMPLETE,Col:COMPLETE,Output:[\"p_promo_sk\",\"p_channel_dmail\",\"p_channel_email\",\"p_channel_tv\"]\n                         <-Reducer 12 [SIMPLE_EDGE]\n                           SHUFFLE [RS_30]\n                             PartitionCols:_col4\n                             Merge Join Operator [MERGEJOIN_255] (rows=2526982 width=0)\n-                              Conds:RS_27._col3=RS_286._col0(Inner),Output:[\"_col2\",\"_col4\",\"_col5\"]\n-                            <-Map 19 [SIMPLE_EDGE] vectorized\n-                              SHUFFLE [RS_286]\n+                              Conds:RS_27._col3=RS_291._col0(Inner),Output:[\"_col2\",\"_col4\",\"_col5\"]\n+                            <-Map 20 [SIMPLE_EDGE] vectorized\n+                              SHUFFLE [RS_291]\n                                 PartitionCols:_col0\n-                                Select Operator [SEL_285] (rows=341 width=4)\n+                                Select Operator [SEL_290] (rows=341 width=4)\n                                   Output:[\"_col0\"]\n-                                  Filter Operator [FIL_284] (rows=341 width=115)\n+                                  Filter Operator [FIL_289] (rows=341 width=115)\n                                     predicate:((s_gmt_offset = -7) and s_store_sk is not null)\n                                     TableScan [TS_15] (rows=1704 width=115)\n                                       default@store,store,Tbl:COMPLETE,Col:COMPLETE,Output:[\"s_store_sk\",\"s_gmt_offset\"]\n                             <-Reducer 11 [SIMPLE_EDGE]\n                               SHUFFLE [RS_27]\n                                 PartitionCols:_col3\n                                 Merge Join Operator [MERGEJOIN_254] (rows=12627499 width=0)\n-                                  Conds:RS_24._col1=RS_282._col0(Inner),Output:[\"_col2\",\"_col3\",\"_col4\",\"_col5\"]\n-                                <-Map 18 [SIMPLE_EDGE] vectorized\n-                                  SHUFFLE [RS_282]\n+                                  Conds:RS_24._col1=RS_287._col0(Inner),Output:[\"_col2\",\"_col3\",\"_col4\",\"_col5\"]\n+                                <-Map 19 [SIMPLE_EDGE] vectorized\n+                                  SHUFFLE [RS_287]\n                                     PartitionCols:_col0\n-                                    Select Operator [SEL_281] (rows=46200 width=4)\n+                                    Select Operator [SEL_286] (rows=46200 width=4)\n                                       Output:[\"_col0\"]\n-                                      Filter Operator [FIL_280] (rows=46200 width=94)\n+                                      Filter Operator [FIL_285] (rows=46200 width=94)\n                                         predicate:((i_category = 'Electronics') and i_item_sk is not null)\n                                         TableScan [TS_12] (rows=462000 width=94)\n                                           default@item,item,Tbl:COMPLETE,Col:COMPLETE,Output:[\"i_item_sk\",\"i_category\"]\n                                 <-Reducer 10 [SIMPLE_EDGE]\n                                   SHUFFLE [RS_24]\n                                     PartitionCols:_col1\n                                     Merge Join Operator [MERGEJOIN_253] (rows=13119234 width=4)\n-                                      Conds:RS_274._col0=RS_278._col0(Inner),Output:[\"_col1\",\"_col2\",\"_col3\",\"_col4\",\"_col5\"]\n+                                      Conds:RS_283._col0=RS_272._col0(Inner),Output:[\"_col1\",\"_col2\",\"_col3\",\"_col4\",\"_col5\"]\n                                     <-Map 17 [SIMPLE_EDGE] vectorized\n-                                      SHUFFLE [RS_278]\n+                                      PARTITION_ONLY_SHUFFLE [RS_272]\n                                         PartitionCols:_col0\n-                                        Select Operator [SEL_277] (rows=50 width=4)\n+                                        Select Operator [SEL_271] (rows=50 width=4)\n                                           Output:[\"_col0\"]\n-                                          Filter Operator [FIL_276] (rows=50 width=12)\n+                                          Filter Operator [FIL_270] (rows=50 width=12)\n                                             predicate:((d_year = 1999) and (d_moy = 11) and d_date_sk is not null)\n                                             TableScan [TS_9] (rows=73049 width=12)\n                                               default@date_dim,date_dim,Tbl:COMPLETE,Col:COMPLETE,Output:[\"d_date_sk\",\"d_year\",\"d_moy\"]\n                                     <-Map 9 [SIMPLE_EDGE] vectorized\n-                                      SHUFFLE [RS_274]\n+                                      SHUFFLE [RS_283]\n                                         PartitionCols:_col0\n-                                        Select Operator [SEL_272] (rows=479120969 width=126)\n+                                        Select Operator [SEL_281] (rows=479120969 width=126)\n                                           Output:[\"_col0\",\"_col1\",\"_col2\",\"_col3\",\"_col4\",\"_col5\"]\n-                                          Filter Operator [FIL_270] (rows=479120969 width=126)\n-                                            predicate:(ss_sold_date_sk is not null and ss_promo_sk is not null and ss_customer_sk is not null and ss_store_sk is not null and ss_item_sk is not null)\n+                                          Filter Operator [FIL_279] (rows=479120969 width=126)\n+                                            predicate:(ss_sold_date_sk is not null and ss_promo_sk is not null and ss_customer_sk is not null and ss_store_sk is not null and ss_item_sk is not null and ss_sold_date_sk BETWEEN DynamicValue(RS_22_date_dim_d_date_sk_min) AND DynamicValue(RS_22_date_dim_d_date_sk_max) and in_bloom_filter(ss_sold_date_sk, DynamicValue(RS_22_date_dim_d_date_sk_bloom_filter)) and ((ss_sold_date_sk is not null and ss_promo_sk is not null and ss_customer_sk is not null and ss_store_sk is not null and ss_item_sk is not null) or (ss_sold_date_sk is not null and ss_customer_sk is not null and ss_store_sk is not null and ss_item_sk is not null)))\n                                             TableScan [TS_6] (rows=575995635 width=126)\n                                               default@store_sales,store_sales,Tbl:COMPLETE,Col:COMPLETE,Output:[\"ss_sold_date_sk\",\"ss_item_sk\",\"ss_customer_sk\",\"ss_store_sk\",\"ss_promo_sk\",\"ss_ext_sales_price\"]\n+                                            <-Reducer 18 [BROADCAST_EDGE] vectorized", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg2OTkzNA=="}, "originalCommit": {"oid": "8d4bc3212ad9c306ddd3173d4079b50170aadead"}, "originalPosition": 120}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3013, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}