{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNzk5OTY1", "number": 1786, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDozMDoyMVrOFGYj1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo1MToxOFrOFIBcgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjM4MTY0OnYy", "diffSide": "RIGHT", "path": "common/src/java/org/apache/hadoop/hive/conf/HiveConf.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDozMDoyMVrOIHX4pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDozMDoyMVrOIHX4pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwMjI3Ng==", "bodyText": "typo: estimatation", "url": "https://github.com/apache/hive/pull/1786#discussion_r544602276", "createdAt": "2020-12-16T20:30:21Z", "author": {"login": "jcamachor"}, "path": "common/src/java/org/apache/hadoop/hive/conf/HiveConf.java", "diffHunk": "@@ -2686,6 +2686,8 @@ private static void populateLlapDaemonVarsSet(Set<String> llapDaemonVarsSetLocal\n         \"Estimate statistics in absence of statistics.\"),\n     HIVE_STATS_NDV_ESTIMATE_PERC(\"hive.stats.ndv.estimate.percent\", (float)20,\n         \"This many percentage of rows will be estimated as count distinct in absence of statistics.\"),\n+    HIVE_STATS_JOIN_NDV_READJUSTMENT(\"hive.stats.join.ndv.readjustment\", false,\n+        \"Setting this to true will make Hive use Calcite to adjust estimatation for ndv after join.\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f9dbb2a921b285935400c4b4859f7fc9e262834"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjM4NjUzOnYy", "diffSide": "RIGHT", "path": "common/src/java/org/apache/hadoop/hive/conf/HiveConf.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDozMTozNVrOIHX7fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDozMTozNVrOIHX7fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwMzAwNg==", "bodyText": "Setting this to true will make Hive use Calcite\nInstead of 'Calcite' logic, could you maybe mention (one-liner since it is a config and there is no need of it to be too long) the kind of estimation it does?", "url": "https://github.com/apache/hive/pull/1786#discussion_r544603006", "createdAt": "2020-12-16T20:31:35Z", "author": {"login": "jcamachor"}, "path": "common/src/java/org/apache/hadoop/hive/conf/HiveConf.java", "diffHunk": "@@ -2686,6 +2686,8 @@ private static void populateLlapDaemonVarsSet(Set<String> llapDaemonVarsSetLocal\n         \"Estimate statistics in absence of statistics.\"),\n     HIVE_STATS_NDV_ESTIMATE_PERC(\"hive.stats.ndv.estimate.percent\", (float)20,\n         \"This many percentage of rows will be estimated as count distinct in absence of statistics.\"),\n+    HIVE_STATS_JOIN_NDV_READJUSTMENT(\"hive.stats.join.ndv.readjustment\", false,\n+        \"Setting this to true will make Hive use Calcite to adjust estimatation for ndv after join.\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f9dbb2a921b285935400c4b4859f7fc9e262834"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjM4OTk0OnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/stats/annotation/StatsRulesProcFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDozMjoyNVrOIHX9gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDozMjoyNVrOIHX9gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYwMzUyMA==", "bodyText": "Can RelMdUtil.numDistinctVals return null? Just making sure we do not need a null check.", "url": "https://github.com/apache/hive/pull/1786#discussion_r544603520", "createdAt": "2020-12-16T20:32:25Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/stats/annotation/StatsRulesProcFactory.java", "diffHunk": "@@ -2546,19 +2547,25 @@ private void updateColStats(HiveConf conf, Statistics stats, long leftUnmatchedR\n       for (ColStatistics cs : colStats) {\n         colNameStatsAvailable.add(cs.getColumnName());\n         int pos = jop.getConf().getReversedExprs().get(cs.getColumnName());\n-        long oldRowCount = rowCountParents.get(pos);\n-        double ratio = (double) newNumRows / (double) oldRowCount;\n         long oldDV = cs.getCountDistint();\n+\n+        boolean useCalciteForNdvReadjustment\n+            = HiveConf.getBoolVar(conf, ConfVars.HIVE_STATS_JOIN_NDV_READJUSTMENT);\n         long newDV = oldDV;\n+        if (useCalciteForNdvReadjustment) {\n+          newDV = RelMdUtil.numDistinctVals(oldDV * 1.0, newNumRows * 1.0).longValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f9dbb2a921b285935400c4b4859f7fc9e262834"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTU2NjA4OnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/stats/annotation/StatsRulesProcFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo1MToxOFrOIJuS0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDo1MToxOFrOIJuS0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA2NjU3OQ==", "bodyText": "We should probably add a precondition so we fail it if is null. Otherwise, we will basically not scale the value silently, which is neither the new behavior or the old behavior.", "url": "https://github.com/apache/hive/pull/1786#discussion_r547066579", "createdAt": "2020-12-22T04:51:18Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/stats/annotation/StatsRulesProcFactory.java", "diffHunk": "@@ -2553,7 +2553,10 @@ private void updateColStats(HiveConf conf, Statistics stats, long leftUnmatchedR\n             = HiveConf.getBoolVar(conf, ConfVars.HIVE_STATS_JOIN_NDV_READJUSTMENT);\n         long newDV = oldDV;\n         if (useCalciteForNdvReadjustment) {\n-          newDV = RelMdUtil.numDistinctVals(oldDV * 1.0, newNumRows * 1.0).longValue();\n+          Double approxNdv = RelMdUtil.numDistinctVals(oldDV * 1.0, newNumRows * 1.0);\n+          if (approxNdv != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d3fef877cbf45ea3a54379137490e8f80b9bd48"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 170, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}