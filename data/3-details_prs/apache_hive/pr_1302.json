{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NTkyNzQ0", "number": 1302, "title": "HIVE-23908: Rewrite plan to join back tables: handle root input is an Aggregate", "bodyText": "Testing done:\nmvn test -Dtest.output.overwrite -DskipSparkTests -Dtest=TestMiniLlapLocalCliDriver -Dqfile=constraints_optimization.q -pl itests/qtest -Pitests", "createdAt": "2020-07-23T09:46:35Z", "url": "https://github.com/apache/hive/pull/1302", "merged": true, "mergeCommit": {"oid": "72ca978260a7219a9da637047ad0aa64193597ba"}, "closed": true, "closedAt": "2020-07-25T00:42:21Z", "author": {"login": "kasakrisz"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3sPVEgH2gAyNDU1NTkyNzQ0OjA5MmNjODcxNmVlNjZkNzY1NGIxYjg5ZDE4ZTZiOTFhZjYzN2EzODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4NrJUAFqTQ1NTI0NDc3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "092cc8716ee66d7654b1b89d18e6b91af637a383", "author": {"user": {"login": "kasakrisz", "name": "Krisztian Kasa"}}, "url": "https://github.com/apache/hive/commit/092cc8716ee66d7654b1b89d18e6b91af637a383", "committedDate": "2020-07-23T09:44:29Z", "message": "HIVE-23908: Rewrite plan to join back tables: handle root input is an Aggregate"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjQ0Nzcx", "url": "https://github.com/apache/hive/pull/1302#pullrequestreview-455244771", "createdAt": "2020-07-25T00:41:39Z", "commit": {"oid": "092cc8716ee66d7654b1b89d18e6b91af637a383"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMDo0MTozOVrOG3BBQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwMDo0MTozOVrOG3BBQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM0MTU2OA==", "bodyText": "We should not trigger the optimization in this case, since it is just doing consecutively the same join. However, this is not actually related to this patch. Can we create a follow-up?", "url": "https://github.com/apache/hive/pull/1302#discussion_r460341568", "createdAt": "2020-07-25T00:41:39Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/llap/constraints_optimization.q.out", "diffHunk": "@@ -2689,13 +2689,17 @@ POSTHOOK: Input: default@store_sales\n #### A masked pattern was here ####\n CBO PLAN:\n HiveProject(c_customer_id=[$1])\n-  HiveAggregate(group=[{0, 1}])\n-    HiveJoin(condition=[=($0, $8)], joinType=[inner], algorithm=[none], cost=[not available])\n-      HiveProject(c_customer_sk=[$0], c_customer_id=[$1], c_first_name=[$8], c_last_name=[$9], c_preferred_cust_flag=[$10], c_birth_country=[$14], c_login=[$15], c_email_address=[$16])\n-        HiveTableScan(table=[[default, customer]], table:alias=[customer])\n-      HiveProject(ss_customer_sk=[$3])\n-        HiveFilter(condition=[IS NOT NULL($3)])\n-          HiveTableScan(table=[[default, store_sales]], table:alias=[store_sales])\n+  HiveSemiJoin(condition=[=($0, $2)], joinType=[semi])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "092cc8716ee66d7654b1b89d18e6b91af637a383"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3608, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}