{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NjA4ODIz", "number": 1497, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDo0MjoyMlrOEoldVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTowMzo1OVrOEomIGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTkyMjE0OnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/udf/TimestampCastRestrictorResolver.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDo0MjoyMlrOHZwxYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDo0MjoyMlrOHZwxYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc3NTUyMg==", "bodyText": "Could we add a comment to the class?", "url": "https://github.com/apache/hive/pull/1497#discussion_r496775522", "createdAt": "2020-09-29T14:42:22Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/udf/TimestampCastRestrictorResolver.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hadoop.hive.ql.udf;\n+\n+import java.lang.reflect.Method;\n+import java.util.List;\n+\n+import org.apache.hadoop.hive.conf.HiveConf.ConfVars;\n+import org.apache.hadoop.hive.ql.exec.UDFArgumentException;\n+import org.apache.hadoop.hive.ql.exec.UDFMethodResolver;\n+import org.apache.hadoop.hive.ql.session.SessionState;\n+import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector.PrimitiveCategory;\n+import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorUtils;\n+import org.apache.hadoop.hive.serde2.objectinspector.primitive.PrimitiveObjectInspectorUtils.PrimitiveGrouping;\n+import org.apache.hadoop.hive.serde2.typeinfo.PrimitiveTypeInfo;\n+import org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;\n+\n+public class TimestampCastRestrictorResolver implements UDFMethodResolver {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31894dd81c54da95a8440966e1c7f1c518b97af4"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMDAzMTYwOnYy", "diffSide": "RIGHT", "path": "ql/src/test/queries/clientnegative/strict_numeric_to_timestamp.q", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTowMzo1OVrOHZx2Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDo0MzozMFrOHbErcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5MzA5MQ==", "bodyText": "Can we add a couple of negative tests on column ref instead of constant? And/or with some complex expressions?", "url": "https://github.com/apache/hive/pull/1497#discussion_r496793091", "createdAt": "2020-09-29T15:03:59Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/queries/clientnegative/strict_numeric_to_timestamp.q", "diffHunk": "@@ -0,0 +1,2 @@\n+set hive.strict.timestamp.conversion=true;\n+select cast(123 as timestamp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31894dd81c54da95a8440966e1c7f1c518b97af4"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYxMzQ5MQ==", "bodyText": "I've added a few more tests; and I've also added one with a struct - however I don't really feel it that much different from the others (the way the check works) - I might be too much \"inside the box\"; so if you have any suggestions what tests to add - please let me know", "url": "https://github.com/apache/hive/pull/1497#discussion_r497613491", "createdAt": "2020-09-30T15:43:48Z", "author": {"login": "kgyrtkirk"}, "path": "ql/src/test/queries/clientnegative/strict_numeric_to_timestamp.q", "diffHunk": "@@ -0,0 +1,2 @@\n+set hive.strict.timestamp.conversion=true;\n+select cast(123 as timestamp);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5MzA5MQ=="}, "originalCommit": {"oid": "31894dd81c54da95a8440966e1c7f1c518b97af4"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg1ODQ2OA==", "bodyText": "Maybe a couple with a comparison timestamp and numeric (e.g., = or <) which should lead to a cast to double being introduced (yeah, comparison is effectively done in double) and then the query failing.", "url": "https://github.com/apache/hive/pull/1497#discussion_r497858468", "createdAt": "2020-09-30T23:38:04Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/queries/clientnegative/strict_numeric_to_timestamp.q", "diffHunk": "@@ -0,0 +1,2 @@\n+set hive.strict.timestamp.conversion=true;\n+select cast(123 as timestamp);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5MzA5MQ=="}, "originalCommit": {"oid": "31894dd81c54da95a8440966e1c7f1c518b97af4"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE1MDI1OQ==", "bodyText": "good catch! I didn't expected that = will work without casting - but since its using the converters it could avoid these checks.\nI considered moving the check into the converters - however that would involved getting a SessionState in serde codes...so I instead added 1 more check to cover all the comparisions. Generic binary operator seem to don't auto-convert things ; + was complaining about adding a timestamp and an integer - so I think we are good.", "url": "https://github.com/apache/hive/pull/1497#discussion_r498150259", "createdAt": "2020-10-01T10:43:30Z", "author": {"login": "kgyrtkirk"}, "path": "ql/src/test/queries/clientnegative/strict_numeric_to_timestamp.q", "diffHunk": "@@ -0,0 +1,2 @@\n+set hive.strict.timestamp.conversion=true;\n+select cast(123 as timestamp);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5MzA5MQ=="}, "originalCommit": {"oid": "31894dd81c54da95a8440966e1c7f1c518b97af4"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 433, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}