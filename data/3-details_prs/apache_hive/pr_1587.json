{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1OTEzNDQx", "number": 1587, "title": "HIVE-24258: [CachedStore] Data miss match between cachedstore and rawstore", "bodyText": "Data miss match between cachedstore and rawstore\n\nWhat changes were proposed in this pull request?\n\nWhy are the changes needed?\n\nDoes this PR introduce any user-facing change?\n\nNo\nHow was this patch tested?\n\ntest case  added", "createdAt": "2020-10-19T12:01:23Z", "url": "https://github.com/apache/hive/pull/1587", "merged": true, "mergeCommit": {"oid": "db895f374bf63b77b683574fdf678bfac91a5ac6"}, "closed": true, "closedAt": "2020-10-25T09:01:43Z", "author": {"login": "ashish-kumar-sharma"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUSuvgABqjM4OTY4Mzc5NjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdV5Gj6ABqjM5MTc0ODc3MjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "75c4982bc9ba10a29b004805b11e2bd0f51c0d01", "author": {"user": {"login": "ashish-kumar-sharma", "name": "Ashish Kumar Sharma"}}, "url": "https://github.com/apache/hive/commit/75c4982bc9ba10a29b004805b11e2bd0f51c0d01", "committedDate": "2020-10-19T17:13:54Z", "message": "HIVE-24258: test updated"}, "afterCommit": {"oid": "649134e5dae2e1df2840f2159178a19ad4ca0209", "author": {"user": {"login": "ashish-kumar-sharma", "name": "Ashish Kumar Sharma"}}, "url": "https://github.com/apache/hive/commit/649134e5dae2e1df2840f2159178a19ad4ca0209", "committedDate": "2020-10-20T06:24:39Z", "message": "HIVE-24358: [CachedStore] Data miss match between cachedstore and rawstore"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "649134e5dae2e1df2840f2159178a19ad4ca0209", "author": {"user": {"login": "ashish-kumar-sharma", "name": "Ashish Kumar Sharma"}}, "url": "https://github.com/apache/hive/commit/649134e5dae2e1df2840f2159178a19ad4ca0209", "committedDate": "2020-10-20T06:24:39Z", "message": "HIVE-24358: [CachedStore] Data miss match between cachedstore and rawstore"}, "afterCommit": {"oid": "9faac4625d75de73733a83caa05dd7d89fa3be17", "author": {"user": {"login": "ashish-kumar-sharma", "name": "Ashish Kumar Sharma"}}, "url": "https://github.com/apache/hive/commit/9faac4625d75de73733a83caa05dd7d89fa3be17", "committedDate": "2020-10-21T04:12:29Z", "message": "HIVE-24358: [CachedStore] Data miss match between cachedstore and rawstore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NTYyOTU0", "url": "https://github.com/apache/hive/pull/1587#pullrequestreview-515562954", "createdAt": "2020-10-23T11:02:12Z", "commit": {"oid": "9faac4625d75de73733a83caa05dd7d89fa3be17"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMTowMjoxM1rOHnJIKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMToyNDozMlrOHnJwiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgwNjA1OQ==", "bodyText": "nit: Add space after ,", "url": "https://github.com/apache/hive/pull/1587#discussion_r510806059", "createdAt": "2020-10-23T11:02:13Z", "author": {"login": "sankarh"}, "path": "itests/hive-unit/src/test/java/org/apache/hadoop/hive/metastore/cache/TestCachedStoreUpdateUsingEvents.java", "diffHunk": "@@ -419,18 +412,14 @@ public void testConstraintsForUpdateUsingEvents() throws Exception {\n   public void assertRawStoreAndCachedStoreConstraint(String catName, String dbName, String tblName)\n       throws MetaException, NoSuchObjectException {\n     SQLAllTableConstraints rawStoreConstraints = rawStore.getAllTableConstraints(catName, dbName, tblName);\n-    List<SQLPrimaryKey> primaryKeys = sharedCache.listCachedPrimaryKeys(catName, dbName, tblName);\n-    List<SQLNotNullConstraint> notNullConstraints = sharedCache.listCachedNotNullConstraints(catName, dbName, tblName);\n-    List<SQLUniqueConstraint> uniqueConstraints = sharedCache.listCachedUniqueConstraint(catName, dbName, tblName);\n-    List<SQLDefaultConstraint> defaultConstraints = sharedCache.listCachedDefaultConstraint(catName, dbName, tblName);\n-    List<SQLCheckConstraint> checkConstraints = sharedCache.listCachedCheckConstraint(catName, dbName, tblName);\n-    List<SQLForeignKey> foreignKeys = sharedCache.listCachedForeignKeys(catName, dbName, tblName, null, null);\n-    Assert.assertEquals(rawStoreConstraints.getPrimaryKeys(), primaryKeys);\n-    Assert.assertEquals(rawStoreConstraints.getNotNullConstraints(), notNullConstraints);\n-    Assert.assertEquals(rawStoreConstraints.getUniqueConstraints(), uniqueConstraints);\n-    Assert.assertEquals(rawStoreConstraints.getDefaultConstraints(), defaultConstraints);\n-    Assert.assertEquals(rawStoreConstraints.getCheckConstraints(), checkConstraints);\n-    Assert.assertEquals(rawStoreConstraints.getForeignKeys(), foreignKeys);\n+    SQLAllTableConstraints cachedStoreConstraints = new SQLAllTableConstraints();\n+    cachedStoreConstraints.setPrimaryKeys(sharedCache.listCachedPrimaryKeys(catName, dbName, tblName));\n+    cachedStoreConstraints.setForeignKeys(sharedCache.listCachedForeignKeys(catName, dbName, tblName, null, null));\n+    cachedStoreConstraints.setNotNullConstraints(sharedCache.listCachedNotNullConstraints(catName, dbName, tblName));\n+    cachedStoreConstraints.setDefaultConstraints(sharedCache.listCachedDefaultConstraint(catName, dbName, tblName));\n+    cachedStoreConstraints.setCheckConstraints(sharedCache.listCachedCheckConstraint(catName, dbName, tblName));\n+    cachedStoreConstraints.setUniqueConstraints(sharedCache.listCachedUniqueConstraint(catName, dbName, tblName));\n+    Assert.assertEquals(rawStoreConstraints,cachedStoreConstraints);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9faac4625d75de73733a83caa05dd7d89fa3be17"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgwNjk5NQ==", "bodyText": "nit: Use for () {\n}\neven for single statement.\nOr use this instead: constraints.getPrimaryKeys().forEach(pk -> pk.setCatName(tbl.getCatName()));", "url": "https://github.com/apache/hive/pull/1587#discussion_r510806995", "createdAt": "2020-10-23T11:04:01Z", "author": {"login": "sankarh"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java", "diffHunk": "@@ -2255,121 +2257,61 @@ private void create_table_core(final RawStore ms, final CreateTableRequest req)\n           tbl.putToParameters(hive_metastoreConstants.DDL_TIME, Long.toString(time));\n         }\n \n-        if (primaryKeys == null && foreignKeys == null\n-                && uniqueConstraints == null && notNullConstraints == null && defaultConstraints == null\n-            && checkConstraints == null) {\n+        if (CollectionUtils.isEmpty(constraints.getPrimaryKeys()) && CollectionUtils.isEmpty(constraints.getForeignKeys())\n+                && CollectionUtils.isEmpty(constraints.getUniqueConstraints())&& CollectionUtils.isEmpty(constraints.getNotNullConstraints())&& CollectionUtils.isEmpty(constraints.getDefaultConstraints())\n+            && CollectionUtils.isEmpty(constraints.getCheckConstraints())) {\n           ms.createTable(tbl);\n         } else {\n           // Check that constraints have catalog name properly set first\n-          if (primaryKeys != null && !primaryKeys.isEmpty() && !primaryKeys.get(0).isSetCatName()) {\n-            for (SQLPrimaryKey pkcol : primaryKeys) pkcol.setCatName(tbl.getCatName());\n+          if (CollectionUtils.isNotEmpty(constraints.getPrimaryKeys()) && !constraints.getPrimaryKeys().get(0).isSetCatName()) {\n+            for (SQLPrimaryKey pkcol : constraints.getPrimaryKeys()) pkcol.setCatName(tbl.getCatName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9faac4625d75de73733a83caa05dd7d89fa3be17"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxMjU5MQ==", "bodyText": "nit: Add space before =", "url": "https://github.com/apache/hive/pull/1587#discussion_r510812591", "createdAt": "2020-10-23T11:16:33Z", "author": {"login": "sankarh"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/HiveMetaStore.java", "diffHunk": "@@ -2785,31 +2696,23 @@ public void add_not_null_constraint(AddNotNullConstraintRequest req)\n     @Override\n     public void add_default_constraint(AddDefaultConstraintRequest req)\n         throws MetaException, InvalidObjectException {\n-      List<SQLDefaultConstraint> defaultConstraintCols= req.getDefaultConstraintCols();\n-      String constraintName = (defaultConstraintCols != null && defaultConstraintCols.size() > 0) ?\n-          defaultConstraintCols.get(0).getDc_name() : \"null\";\n+      List<SQLDefaultConstraint> defaultConstraints= req.getDefaultConstraintCols();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9faac4625d75de73733a83caa05dd7d89fa3be17"}, "originalPosition": 421}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxNDEzOQ==", "bodyText": "nit: Update comments for change in return type for all apis.", "url": "https://github.com/apache/hive/pull/1587#discussion_r510814139", "createdAt": "2020-10-23T11:20:04Z", "author": {"login": "sankarh"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/RawStore.java", "diffHunk": "@@ -1499,20 +1499,11 @@ SQLAllTableConstraints getAllTableConstraints(String catName, String dbName, Str\n   /**\n    * Create a table with constraints\n    * @param tbl table definition\n-   * @param primaryKeys primary key definition, or null\n-   * @param foreignKeys foreign key definition, or null\n-   * @param uniqueConstraints unique constraints definition, or null\n-   * @param notNullConstraints not null constraints definition, or null\n-   * @param defaultConstraints default values definition, or null\n    * @return list of constraint names", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9faac4625d75de73733a83caa05dd7d89fa3be17"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxNDc4OA==", "bodyText": "nit: Space after ,", "url": "https://github.com/apache/hive/pull/1587#discussion_r510814788", "createdAt": "2020-10-23T11:21:22Z", "author": {"login": "sankarh"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/cache/CacheUtils.java", "diffHunk": "@@ -58,14 +59,11 @@ public static String buildDbKeyWithDelimiterSuffix(String catName, String dbName\n    *\n    */\n   public static String buildPartitionCacheKey(List<String> partVals) {\n-    if (partVals == null || partVals.isEmpty()) {\n-      return \"\";\n-    }\n-    return String.join(delimit, partVals);\n+    return CollectionUtils.isNotEmpty(partVals) ? String.join(delimit, partVals) : \"\";\n   }\n \n   public static String buildTableKey(String catName, String dbName, String tableName) {\n-    return buildKey(catName.toLowerCase(), dbName.toLowerCase(), tableName.toLowerCase());\n+    return buildKey(StringUtils.normalizeIdentifier(catName),StringUtils.normalizeIdentifier(dbName),StringUtils.normalizeIdentifier(tableName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9faac4625d75de73733a83caa05dd7d89fa3be17"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxNTUyMA==", "bodyText": "nit: Shall keep annotation and api declaration ins separate lines.", "url": "https://github.com/apache/hive/pull/1587#discussion_r510815520", "createdAt": "2020-10-23T11:22:37Z", "author": {"login": "sankarh"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/cache/CachedStore.java", "diffHunk": "@@ -2846,31 +2846,28 @@ public SQLAllTableConstraints getAllTableConstraints(String catName, String dbNa\n     return sqlAllTableConstraints;\n   }\n \n-  @Override public List<String> createTableWithConstraints(Table tbl, List<SQLPrimaryKey> primaryKeys,\n-      List<SQLForeignKey> foreignKeys, List<SQLUniqueConstraint> uniqueConstraints,\n-      List<SQLNotNullConstraint> notNullConstraints, List<SQLDefaultConstraint> defaultConstraints,\n-      List<SQLCheckConstraint> checkConstraints) throws InvalidObjectException, MetaException {\n-    List<String> constraintNames = rawStore\n-        .createTableWithConstraints(tbl, primaryKeys, foreignKeys, uniqueConstraints, notNullConstraints,\n-            defaultConstraints, checkConstraints);\n+  @Override public SQLAllTableConstraints createTableWithConstraints(Table tbl, SQLAllTableConstraints constraints) throws InvalidObjectException, MetaException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9faac4625d75de73733a83caa05dd7d89fa3be17"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDgxNjM5NQ==", "bodyText": "nit: Space after ,", "url": "https://github.com/apache/hive/pull/1587#discussion_r510816395", "createdAt": "2020-10-23T11:24:32Z", "author": {"login": "sankarh"}, "path": "standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/cache/TestCachedStore.java", "diffHunk": "@@ -1568,12 +1568,7 @@ public void testPrimaryKeys() {\n     List<SQLPrimaryKey> cachedKeys = sharedCache.listCachedPrimaryKeys(\n             DEFAULT_CATALOG_NAME, tbl.getDbName(), tbl.getTableName());\n \n-    Assert.assertEquals(cachedKeys.size(), 1);\n-    Assert.assertEquals(cachedKeys.get(0).getPk_name(), \"pk1\");\n-    Assert.assertEquals(cachedKeys.get(0).getTable_db(), \"db\");\n-    Assert.assertEquals(cachedKeys.get(0).getTable_name(), tbl.getTableName());\n-    Assert.assertEquals(cachedKeys.get(0).getColumn_name(), \"col1\");\n-    Assert.assertEquals(cachedKeys.get(0).getCatName(), DEFAULT_CATALOG_NAME);\n+    Assert.assertEquals(origKeys,cachedKeys);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9faac4625d75de73733a83caa05dd7d89fa3be17"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2MzIzODM1", "url": "https://github.com/apache/hive/pull/1587#pullrequestreview-516323835", "createdAt": "2020-10-25T04:23:16Z", "commit": {"oid": "3f31ff63aaaecf281fc987e09a3a3b66a46f8c3c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fa26d75290b4869b516c83c683a79b1eee5c4fd", "author": {"user": {"login": "ashish-kumar-sharma", "name": "Ashish Kumar Sharma"}}, "url": "https://github.com/apache/hive/commit/5fa26d75290b4869b516c83c683a79b1eee5c4fd", "committedDate": "2020-10-25T05:39:18Z", "message": "HIVE-24358: [CachedStore] Data miss match between cachedstore and rawstore"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f31ff63aaaecf281fc987e09a3a3b66a46f8c3c", "author": {"user": {"login": "ashish-kumar-sharma", "name": "Ashish Kumar Sharma"}}, "url": "https://github.com/apache/hive/commit/3f31ff63aaaecf281fc987e09a3a3b66a46f8c3c", "committedDate": "2020-10-23T16:09:08Z", "message": "Comment addresed"}, "afterCommit": {"oid": "5fa26d75290b4869b516c83c683a79b1eee5c4fd", "author": {"user": {"login": "ashish-kumar-sharma", "name": "Ashish Kumar Sharma"}}, "url": "https://github.com/apache/hive/commit/5fa26d75290b4869b516c83c683a79b1eee5c4fd", "committedDate": "2020-10-25T05:39:18Z", "message": "HIVE-24358: [CachedStore] Data miss match between cachedstore and rawstore"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3184, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}