{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MTg1NDEx", "number": 1390, "title": "[HIVE-24025] Add getAggrColStatsFor to the HS2 local cache", "bodyText": "getAggrColStats API takes a long time to run in HMS. Adding it to the HS2 local cache can reduce the query compilation time significantly.\nhttps://issues.apache.org/jira/browse/HIVE-24025", "createdAt": "2020-08-11T15:35:12Z", "url": "https://github.com/apache/hive/pull/1390", "merged": true, "mergeCommit": {"oid": "3998cd086ca289c60c62250ca4c5f20aa0c4ba74"}, "closed": true, "closedAt": "2020-08-12T21:03:48Z", "author": {"login": "soumyakanti3578"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc94mjBgH2gAyNDY2MTg1NDExOmQyZGYwOGQ1YzdhZTdjMzdhMDY3OTJjZmUxMTM4NjEwZDc1YjMxOTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-OWYLAH2gAyNDY2MTg1NDExOmQ1MWZkZjMxNTZiMDM5NjdkNmZkZjk0NmYxZWZhZmY4ODBiMzA3YWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d2df08d5c7ae7c37a06792cfe1138610d75b3197", "author": {"user": {"login": "soumyakanti3578", "name": "Soumyakanti Das"}}, "url": "https://github.com/apache/hive/commit/d2df08d5c7ae7c37a06792cfe1138610d75b3197", "committedDate": "2020-08-11T15:32:15Z", "message": "Add getTable and getAggrColStatsFor to the HS2 local cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MjU4Mjg3", "url": "https://github.com/apache/hive/pull/1390#pullrequestreview-465258287", "createdAt": "2020-08-11T16:59:54Z", "commit": {"oid": "d2df08d5c7ae7c37a06792cfe1138610d75b3197"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNjo1OTo1NFrOG_A9sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxNzo1MjoxOVrOG_C1Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcyOTI2Nw==", "bodyText": "HiveMetaStoreClient should not refer to local cache. Please change the name for these methods, e.g., getAggrStatsInternal or anything alike.", "url": "https://github.com/apache/hive/pull/1390#discussion_r468729267", "createdAt": "2020-08-11T16:59:54Z", "author": {"login": "jcamachor"}, "path": "standalone-metastore/metastore-common/src/main/java/org/apache/hadoop/hive/metastore/HiveMetaStoreClient.java", "diffHunk": "@@ -1056,7 +1056,7 @@ public AggrStats getAggrColStatsFor(String catName, String dbName, String tblNam\n       req.setCatName(catName);\n       req.setValidWriteIdList(writeIdList);\n \n-      return client.get_aggr_stats_for(req);\n+      return getAggrStatsFromLocalCache(req);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2df08d5c7ae7c37a06792cfe1138610d75b3197"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODcyOTU0OA==", "bodyText": "Same comment as above for getTableFromLocalCache.", "url": "https://github.com/apache/hive/pull/1390#discussion_r468729548", "createdAt": "2020-08-11T17:00:19Z", "author": {"login": "jcamachor"}, "path": "standalone-metastore/metastore-common/src/main/java/org/apache/hadoop/hive/metastore/HiveMetaStoreClient.java", "diffHunk": "@@ -2255,7 +2259,7 @@ public Table getTable(String catName, String dbName, String tableName,\n       if (processorIdentifier != null)\n         req.setProcessorIdentifier(processorIdentifier);\n \n-      Table t = client.get_table_req(req).getTable();\n+      Table t = getTableFromLocalCache(req);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2df08d5c7ae7c37a06792cfe1138610d75b3197"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc1OTg5NA==", "bodyText": "It seems getValidWriteIdList has a different purpose in these requests that has to do with stats retrieval.\nI think it's easier to move away from relying on it at this stage. Instead, we could retrieve the writeIdList using AcidUtils.TableSnapshot tableSnapshot = AcidUtils.getTableSnapshot(conf, tbl);, and create an object in the cache that stores the writeIdList and the PartitionsStatsRequest separately.", "url": "https://github.com/apache/hive/pull/1390#discussion_r468759894", "createdAt": "2020-08-11T17:52:19Z", "author": {"login": "jcamachor"}, "path": "standalone-metastore/metastore-common/src/main/java/org/apache/hadoop/hive/metastore/HiveMetaStoreClientWithLocalCache.java", "diffHunk": "@@ -252,18 +264,86 @@ protected PartitionsSpecByExprResult getPartitionsSpecByExprResult(PartitionsByE\n     return r;\n   }\n \n+  @Override\n+  protected Table getTableFromLocalCache(GetTableRequest req) throws TException{\n+    Table t;\n+\n+    if (isCacheEnabledAndInitialized() && isRequestCacheable(req, KeyType.GET_TABLE)) {\n+      CacheKey cacheKey = new CacheKey(KeyType.GET_TABLE, req);\n+      try {\n+        t = (Table) mscLocalCache.get(cacheKey, this::load);\n+\n+        if (LOG.isDebugEnabled() && RECORD_STATS) {\n+          LOG.debug(cacheObjName + \": \" + mscLocalCache.stats().toString());\n+        }\n+      } catch (UncheckedCacheException e) {\n+        if (e.getCause() instanceof MetaException) {\n+          throw (MetaException) e.getCause();\n+        } else if (e.getCause() instanceof TException) {\n+          throw (TException) e.getCause();\n+        } else {\n+          throw new TException(e.getCause());\n+        }\n+      }\n+    } else {\n+      t =  super.getTableFromLocalCache(req);\n+    }\n+\n+    return t;\n+  }\n+\n+  @Override\n+  protected AggrStats getAggrStatsFromLocalCache(PartitionsStatsRequest req) throws TException {\n+    AggrStats r;\n+\n+    if (isCacheEnabledAndInitialized() && isRequestCacheable(req, KeyType.AGGR_COL_STATS)) {\n+      CacheKey cacheKey = new CacheKey(KeyType.AGGR_COL_STATS, req);\n+      try {\n+        r = (AggrStats) mscLocalCache.get(cacheKey, this::load);\n+\n+        if (LOG.isDebugEnabled() && RECORD_STATS) {\n+          LOG.debug(cacheObjName + \": \" + mscLocalCache.stats().toString());\n+        }\n+      } catch (UncheckedCacheException e) {\n+        if (e.getCause() instanceof MetaException) {\n+          throw (MetaException) e.getCause();\n+        } else if (e.getCause() instanceof TException) {\n+          throw (TException) e.getCause();\n+        } else {\n+          throw new TException(e.getCause());\n+        }\n+      }\n+    } else {\n+      r = super.getAggrStatsFromLocalCache(req);\n+    }\n+\n+    return r;\n+  }\n+\n   /**\n    * This method determines if the request should be cached.\n    * @param request Request object\n    * @return boolean\n    */\n-  private boolean isRequestCachable(Object request, KeyType keyType) {\n+  private boolean isRequestCacheable(Object request, KeyType keyType) {\n     switch (keyType) {\n       //cache only requests for transactional tables, with a valid table id\n       case PARTITIONS_BY_EXPR:\n       case PARTITIONS_SPEC_BY_EXPR:\n         PartitionsByExprRequest req = (PartitionsByExprRequest) request;\n         return req.getValidWriteIdList() != null && req.getId() != -1;\n+      case GET_TABLE:\n+        GetTableRequest gtr = (GetTableRequest) request;\n+        return gtr.getValidWriteIdList() != null;\n+      case AGGR_COL_STATS:\n+        PartitionsStatsRequest psr = (PartitionsStatsRequest) request;\n+        Table tbl = null;\n+        try {\n+          tbl = getTable(psr.getDbName(), psr.getTblName());\n+        } catch (TException e) {\n+          return false;\n+        }\n+        return tbl != null && tbl.getId() != -1 && psr.getValidWriteIdList() != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2df08d5c7ae7c37a06792cfe1138610d75b3197"}, "originalPosition": 141}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "042a56e30ac3a91369870e2068953746f55bc303", "author": {"user": {"login": "soumyakanti3578", "name": "Soumyakanti Das"}}, "url": "https://github.com/apache/hive/commit/042a56e30ac3a91369870e2068953746f55bc303", "committedDate": "2020-08-12T16:08:15Z", "message": "Resolve comments, and remove getTable from cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDk1NjMz", "url": "https://github.com/apache/hive/pull/1390#pullrequestreview-466095633", "createdAt": "2020-08-12T16:47:58Z", "commit": {"oid": "042a56e30ac3a91369870e2068953746f55bc303"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d51fdf3156b03967d6fdf946f1efaff880b307ab", "author": {"user": {"login": "soumyakanti3578", "name": "Soumyakanti Das"}}, "url": "https://github.com/apache/hive/commit/d51fdf3156b03967d6fdf946f1efaff880b307ab", "committedDate": "2020-08-12T16:52:30Z", "message": "Changed PartitionsStatsCustomRequest to static class"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3443, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}