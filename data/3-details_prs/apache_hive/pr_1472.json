{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwMzM4NjY0", "number": 1472, "title": "HIVE-24009 Support partition pruning, vectorization and other physical transformations for EXECUTE statement", "bodyText": "What changes were proposed in this pull request?\n\nWhy are the changes needed?\n\nDoes this PR introduce any user-facing change?\n\nHow was this patch tested?", "createdAt": "2020-09-05T01:06:39Z", "url": "https://github.com/apache/hive/pull/1472", "merged": true, "mergeCommit": {"oid": "1dc2564271eed64a9371b6a3ae43c86d7e1736a3"}, "closed": true, "closedAt": "2020-09-23T18:15:52Z", "author": {"login": "vineetgarg02"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI5VQRAH2gAyNDgwMzM4NjY0OjRjZGIyYjI3MzEyYzA5NTk1NjE3NzU4NmVlN2RmNDZiNWEwMjNlZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLhHgUAH2gAyNDgwMzM4NjY0OmNlZDkzYWQwZDRjZGQ1MDhiMGExN2FmYTQxMDE4MzYyNmNkNzM5ZmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4cdb2b27312c095956177586ee7df46b5a023ee8", "author": {"user": {"login": "vineetgarg02", "name": "Vineet G"}}, "url": "https://github.com/apache/hive/commit/4cdb2b27312c095956177586ee7df46b5a023ee8", "committedDate": "2020-09-14T20:36:26Z", "message": "HIVE-24009: Support partition pruning and other physical transformations for EXECUTE statement"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fea820447e090f36799e411d26d8dd1c2a75a72e", "author": {"user": {"login": "vineetgarg02", "name": "Vineet G"}}, "url": "https://github.com/apache/hive/commit/fea820447e090f36799e411d26d8dd1c2a75a72e", "committedDate": "2020-09-14T20:35:22Z", "message": "clean up"}, "afterCommit": {"oid": "4cdb2b27312c095956177586ee7df46b5a023ee8", "author": {"user": {"login": "vineetgarg02", "name": "Vineet G"}}, "url": "https://github.com/apache/hive/commit/4cdb2b27312c095956177586ee7df46b5a023ee8", "committedDate": "2020-09-14T20:36:26Z", "message": "HIVE-24009: Support partition pruning and other physical transformations for EXECUTE statement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MTI0NTgz", "url": "https://github.com/apache/hive/pull/1472#pullrequestreview-488124583", "createdAt": "2020-09-14T20:40:51Z", "commit": {"oid": "4cdb2b27312c095956177586ee7df46b5a023ee8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDo0MDo1MVrOHRlytA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDo0MDo1MVrOHRlytA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIwNzAyOA==", "bodyText": "This query no longer fails. I have opened a follow-up to fix this https://issues.apache.org/jira/browse/HIVE-24164", "url": "https://github.com/apache/hive/pull/1472#discussion_r488207028", "createdAt": "2020-09-14T20:40:51Z", "author": {"login": "vineetgarg02"}, "path": "ql/src/test/queries/clientnegative/prepare_execute_1.q", "diffHunk": "@@ -1,3 +0,0 @@\n---! qt:dataset:src\n-prepare query1 from select count(*) from src where key > ? and value < ? group by ?;\n-execute query1 using 1,100,1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cdb2b27312c095956177586ee7df46b5a023ee8"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6420acfd5f1dfc7bfebb4f83241184e84b6066ff", "author": {"user": {"login": "vineetgarg02", "name": "Vineet G"}}, "url": "https://github.com/apache/hive/commit/6420acfd5f1dfc7bfebb4f83241184e84b6066ff", "committedDate": "2020-09-15T20:40:01Z", "message": "fixing test failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdff173ee3142a459c70ccadbfa82b3d594aeaa5", "author": {"user": {"login": "vineetgarg02", "name": "Vineet G"}}, "url": "https://github.com/apache/hive/commit/bdff173ee3142a459c70ccadbfa82b3d594aeaa5", "committedDate": "2020-09-16T19:48:14Z", "message": "test fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018", "author": {"user": {"login": "vineetgarg02", "name": "Vineet G"}}, "url": "https://github.com/apache/hive/commit/893e49ad481089b2ce37e369c44c3b3427bdf018", "committedDate": "2020-09-16T19:56:24Z", "message": "Merge remote-tracking branch 'upstream/master' into HIVE-24009"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyMjMzMTQz", "url": "https://github.com/apache/hive/pull/1472#pullrequestreview-492233143", "createdAt": "2020-09-20T23:36:20Z", "commit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMzozNjoyMVrOHU984w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwMDozMDoyMFrOHU-SmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc0ODU3OQ==", "bodyText": "Do we need to keep all these fields for the plan cache in the operator, table, etc.? I am wondering about the implications of keeping them when the operator plan is serialized (i.e., whether that could have an performance impact). @t3rmin4t0r , @rbalamohan , could you comment on this?", "url": "https://github.com/apache/hive/pull/1472#discussion_r491748579", "createdAt": "2020-09-20T23:36:21Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/TableScanOperator.java", "diffHunk": "@@ -63,19 +63,19 @@\n \n   private VectorizationContext taskVectorizationContext;\n \n-  protected transient JobConf jc;\n-  private transient boolean inputFileChanged = false;\n+  protected JobConf jc;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MTI3Mw==", "bodyText": "Can remove line commented out.", "url": "https://github.com/apache/hive/pull/1472#discussion_r491751273", "createdAt": "2020-09-21T00:03:09Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/ExecuteStatementAnalyzer.java", "diffHunk": "@@ -253,14 +191,17 @@ public void analyzeInternal(ASTNode root) throws SemanticException {\n     String queryName = getQueryName(root);\n     if (ss.getPreparePlans().containsKey(queryName)) {\n       // retrieve cached plan from session state\n-      BaseSemanticAnalyzer cachedPlan = ss.getPreparePlans().get(queryName);\n+      SemanticAnalyzer cachedPlan = ss.getPreparePlans().get(queryName);\n \n       // make copy of the plan\n-      createTaskCopy(cachedPlan);\n+      //createTaskCopy(cachedPlan);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MTMxMQ==", "bodyText": "Same, can be removed?", "url": "https://github.com/apache/hive/pull/1472#discussion_r491751311", "createdAt": "2020-09-21T00:03:35Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/ExecuteStatementAnalyzer.java", "diffHunk": "@@ -286,6 +227,24 @@ public void analyzeInternal(ASTNode root) throws SemanticException {\n       this.acidFileSinks.addAll(cachedPlan.getAcidFileSinks());\n       this.initCtx(cachedPlan.getCtx());\n       this.ctx.setCboInfo(cachedPlan.getCboInfo());\n+      this.setLoadFileWork(cachedPlan.getLoadFileWork());\n+      this.setLoadTableWork(cachedPlan.getLoadTableWork());\n+\n+      this.setQB(cachedPlan.getQB());\n+\n+      ParseContext pctxt = this.getParseContext();\n+      // partition pruner\n+      Transform ppr = new PartitionPruner();\n+      ppr.transform(pctxt);\n+\n+      //pctxt.setQueryProperties(this.queryProperties);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MTMzMQ==", "bodyText": "This comment too.", "url": "https://github.com/apache/hive/pull/1472#discussion_r491751331", "createdAt": "2020-09-21T00:03:54Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/ExecuteStatementAnalyzer.java", "diffHunk": "@@ -286,6 +227,24 @@ public void analyzeInternal(ASTNode root) throws SemanticException {\n       this.acidFileSinks.addAll(cachedPlan.getAcidFileSinks());\n       this.initCtx(cachedPlan.getCtx());\n       this.ctx.setCboInfo(cachedPlan.getCboInfo());\n+      this.setLoadFileWork(cachedPlan.getLoadFileWork());\n+      this.setLoadTableWork(cachedPlan.getLoadTableWork());\n+\n+      this.setQB(cachedPlan.getQB());\n+\n+      ParseContext pctxt = this.getParseContext();\n+      // partition pruner\n+      Transform ppr = new PartitionPruner();\n+      ppr.transform(pctxt);\n+\n+      //pctxt.setQueryProperties(this.queryProperties);\n+      if (!ctx.getExplainLogical()) {\n+        TaskCompiler compiler = TaskCompilerFactory.getCompiler(conf, pctxt);\n+        compiler.init(queryState, console, db);\n+        compiler.compile(pctxt, rootTasks, inputs, outputs);\n+        fetchTask = pctxt.getFetchTask();\n+        //fetchTask = makeCopy(cachedPlan.getFetchTask(), cachedPlan.getFetchTask().getClass());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 209}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MjIzMg==", "bodyText": "Can we leave a comment on this method to understand what it is trying to do?", "url": "https://github.com/apache/hive/pull/1472#discussion_r491752232", "createdAt": "2020-09-21T00:11:56Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/PrepareStatementAnalyzer.java", "diffHunk": "@@ -54,6 +58,21 @@ private void savePlan(String queryName) throws SemanticException{\n     ss.getPreparePlans().put(queryName, this);\n   }\n \n+  private <T> T makeCopy(final Object task, Class<T> objClass) {\n+    ByteArrayOutputStream baos = new ByteArrayOutputStream();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MjM5MQ==", "bodyText": "Why do you need to keep a copy instead of using the original operators? Could you leave a comment on that?", "url": "https://github.com/apache/hive/pull/1472#discussion_r491752391", "createdAt": "2020-09-21T00:13:33Z", "author": {"login": "jcamachor"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/SemanticAnalyzer.java", "diffHunk": "@@ -387,6 +387,12 @@\n   protected volatile boolean disableJoinMerge = false;\n   protected final boolean defaultJoinMerge;\n \n+  /*\n+   * This is used by prepare/execute statement\n+   * Prepare/Execute requires operators to be copied and cached\n+   */\n+  protected Map<String, TableScanOperator> topOpsCopy = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MjY0NA==", "bodyText": "I guess this was actually unrelated to current patch? Probably due to some data structure not being serialized when different union branches are copied?", "url": "https://github.com/apache/hive/pull/1472#discussion_r491752644", "createdAt": "2020-09-21T00:15:37Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/llap/constprog_dpp.q.out", "diffHunk": "@@ -84,12 +84,13 @@ Stage-0\n                         Select Operator [SEL_40] (rows=1 width=4)\n                           Output:[\"_col0\"]\n                           TableScan [TS_24] (rows=1 width=4)\n-                            Output:[\"id\"]\n+                            default@tb2,tb2,Tbl:COMPLETE,Col:NONE,Output:[\"id\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1MjczOA==", "bodyText": "This seems different than the stats above. Do you know if it is expected? May be worth checking in a follow-up.", "url": "https://github.com/apache/hive/pull/1472#discussion_r491752738", "createdAt": "2020-09-21T00:16:36Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/llap/constprog_dpp.q.out", "diffHunk": "@@ -84,12 +84,13 @@ Stage-0\n                         Select Operator [SEL_40] (rows=1 width=4)\n                           Output:[\"_col0\"]\n                           TableScan [TS_24] (rows=1 width=4)\n-                            Output:[\"id\"]\n+                            default@tb2,tb2,Tbl:COMPLETE,Col:NONE,Output:[\"id\"]\n                   <-Map 6 [CONTAINS] vectorized, llap\n                     Reduce Output Operator [RS_45]\n                       Limit [LIM_44] (rows=1 width=2)\n                         Number of rows:1\n                         Select Operator [SEL_43] (rows=1 width=0)\n                           Output:[\"_col0\"]\n                           TableScan [TS_29] (rows=1 width=0)\n+                            default@tb2,tb2,Tbl:PARTIAL,Col:COMPLETE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc1NDEzNw==", "bodyText": "Nice!", "url": "https://github.com/apache/hive/pull/1472#discussion_r491754137", "createdAt": "2020-09-21T00:30:20Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/llap/prepare_plan.q.out", "diffHunk": "@@ -170,10 +170,10 @@ STAGE PLANS:\n                           sort order: \n                           Statistics: Num rows: 1 Data size: 8 Basic stats: COMPLETE Column stats: COMPLETE\n                           value expressions: _col0 (type: bigint)\n-            Execution mode: llap\n+            Execution mode: vectorized, llap", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893e49ad481089b2ce37e369c44c3b3427bdf018"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ec26dcabc3320e892f8c27cfc151db8bcda9894", "author": {"user": {"login": "vineetgarg02", "name": "Vineet G"}}, "url": "https://github.com/apache/hive/commit/7ec26dcabc3320e892f8c27cfc151db8bcda9894", "committedDate": "2020-09-21T17:33:29Z", "message": "addressing review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b3ee2024d9c24b5b7313f1c6d742252d9f7571f", "author": {"user": {"login": "vineetgarg02", "name": "Vineet G"}}, "url": "https://github.com/apache/hive/commit/4b3ee2024d9c24b5b7313f1c6d742252d9f7571f", "committedDate": "2020-09-21T17:48:30Z", "message": "Merge remote-tracking branch 'upstream/master' into HIVE-24009"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjAwOTU3", "url": "https://github.com/apache/hive/pull/1472#pullrequestreview-493200957", "createdAt": "2020-09-22T07:46:40Z", "commit": {"oid": "4b3ee2024d9c24b5b7313f1c6d742252d9f7571f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ced93ad0d4cdd508b0a17afa410183626cd739fe", "author": {"user": {"login": "vineetgarg02", "name": "Vineet G"}}, "url": "https://github.com/apache/hive/commit/ced93ad0d4cdd508b0a17afa410183626cd739fe", "committedDate": "2020-09-23T00:05:28Z", "message": "fixing test failures"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3290, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}