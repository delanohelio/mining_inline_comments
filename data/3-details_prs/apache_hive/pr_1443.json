{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1ODIzMTc0", "number": 1443, "title": "Implement jdbc methods invoked by Calcite", "bodyText": "What changes were proposed in this pull request?\nImplement below JDBC methods\nnullsAreSortedAtEnd\nnullsAreSortedAtStart\nnullsAreSortedLow\nnullsAreSortedHigh\nstoresLowerCaseIdentifiers\nstoresLowerCaseQuotedIdentifiers\nstoresMixedCaseIdentifiers\nstoresMixedCaseQuotedIdentifiers\nstoresUpperCaseIdentifiers\nstoresUpperCaseQuotedIdentifiers\nsupportsMixedCaseIdentifiers\nsupportsMixedCaseQuotedIdentifiers\nWhy are the changes needed?\nCalcite may rely on the following JDBC methods to generate SQL queries for Hive JDBC storage handler, which in the case of Hive itself, return a Method not supported exception. We should implement such methods, as listed below.\nnullsAreSortedAtEnd\nnullsAreSortedAtStart\nnullsAreSortedLow\nnullsAreSortedHigh\nstoresLowerCaseIdentifiers\nstoresLowerCaseQuotedIdentifiers\nstoresMixedCaseIdentifiers\nstoresMixedCaseQuotedIdentifiers\nstoresUpperCaseIdentifiers\nstoresUpperCaseQuotedIdentifiers\nsupportsMixedCaseIdentifiers\nsupportsMixedCaseQuotedIdentifiers\nDoes this PR introduce any user-facing change?\nNo\nHow was this patch tested?\nThis change relies on existing tests.", "createdAt": "2020-08-29T20:09:22Z", "url": "https://github.com/apache/hive/pull/1443", "merged": true, "mergeCommit": {"oid": "0c040fb786c0deadfad3259cb2c9230938228d8f"}, "closed": true, "closedAt": "2020-09-10T15:40:42Z", "author": {"login": "kishendas"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDvSDgAH2gAyNDc1ODIzMTc0OjkwZWUxZDU1MzBhZmFjZTdiNzk5ZTJiMTg3MTc2OTAyYmRiY2E3YTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGQu4SAH2gAyNDc1ODIzMTc0OjUwM2FmZjZjYWE1OWQ5YjY0ZWYxMDU2NWQ4Yjk4MmIzMzhmZWJkYmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "90ee1d5530aface7b799e2b187176902bdbca7a3", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/90ee1d5530aface7b799e2b187176902bdbca7a3", "committedDate": "2020-08-29T20:04:16Z", "message": "implement jdbc methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTcxOTQw", "url": "https://github.com/apache/hive/pull/1443#pullrequestreview-478171940", "createdAt": "2020-08-30T04:58:19Z", "commit": {"oid": "90ee1d5530aface7b799e2b187176902bdbca7a3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwNDo1ODoxOVrOHJf6Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwNTowNDoxMFrOHJf72w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcyMjA3OA==", "bodyText": "extra space, pls fix indent", "url": "https://github.com/apache/hive/pull/1443#discussion_r479722078", "createdAt": "2020-08-30T04:58:19Z", "author": {"login": "thejasmn"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java", "diffHunk": "@@ -291,7 +291,7 @@ public HiveConnection(String uri, Properties info) throws SQLException {\n \n     if (isEmbeddedMode) {\n       client = EmbeddedCLIServicePortal.get(connParams.getHiveConfs());\n-      connParams.getHiveConfs().clear();\n+        connParams.getHiveConfs().clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90ee1d5530aface7b799e2b187176902bdbca7a3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcyMjQ1OQ==", "bodyText": "HIVE_DEFAULT_NULLS_LAST could be overridden on the HiveServer2 using hive-site.xml settings. We need to get a value of this from HS2.\nI am not sure if we get the current settings from HS2 (i need to check).", "url": "https://github.com/apache/hive/pull/1443#discussion_r479722459", "createdAt": "2020-08-30T05:04:10Z", "author": {"login": "thejasmn"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveDatabaseMetaData.java", "diffHunk": "@@ -1227,4 +1232,13 @@ private TGetInfoResp getServerInfo(TGetInfoType type) throws SQLException {\n     Utils.verifySuccess(resp.getStatus());\n     return resp;\n   }\n+\n+  private boolean getHiveDefaultNullsLast() {\n+    boolean response = ConfVars.HIVE_DEFAULT_NULLS_LAST.defaultBoolVal;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90ee1d5530aface7b799e2b187176902bdbca7a3"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTcyMjI1", "url": "https://github.com/apache/hive/pull/1443#pullrequestreview-478172225", "createdAt": "2020-08-30T05:07:05Z", "commit": {"oid": "90ee1d5530aface7b799e2b187176902bdbca7a3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwNTowNzowNlrOHJf8mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQwNTowNzowNlrOHJf8mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTcyMjY0OA==", "bodyText": "An unit test would be useful for nullsAreSortedHigh and nullsAreSortedLow", "url": "https://github.com/apache/hive/pull/1443#discussion_r479722648", "createdAt": "2020-08-30T05:07:06Z", "author": {"login": "thejasmn"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveDatabaseMetaData.java", "diffHunk": "@@ -855,19 +860,19 @@ public boolean nullPlusNonNullIsNull() throws SQLException {\n   }\n \n   public boolean nullsAreSortedAtEnd() throws SQLException {\n-    throw new SQLFeatureNotSupportedException(\"Method not supported\");\n+    return false;\n   }\n \n   public boolean nullsAreSortedAtStart() throws SQLException {\n-    throw new SQLFeatureNotSupportedException(\"Method not supported\");\n+    return false;\n   }\n \n   public boolean nullsAreSortedHigh() throws SQLException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90ee1d5530aface7b799e2b187176902bdbca7a3"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99ed1252723928768764e59badac714b55c3e431", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/99ed1252723928768764e59badac714b55c3e431", "committedDate": "2020-08-31T22:20:09Z", "message": "add unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d50b57e5688b9b2c36536da329cd25150a5a205f", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/d50b57e5688b9b2c36536da329cd25150a5a205f", "committedDate": "2020-08-31T22:22:28Z", "message": "Add unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5OTQ0ODg2", "url": "https://github.com/apache/hive/pull/1443#pullrequestreview-479944886", "createdAt": "2020-09-01T16:58:25Z", "commit": {"oid": "d50b57e5688b9b2c36536da329cd25150a5a205f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNjo1ODoyNVrOHK_9sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNjo1ODoyNVrOHK_9sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI5NTc5Mg==", "bodyText": "Can you also please test for value of true ? That way it checks that method return value is changing based on the config param value.", "url": "https://github.com/apache/hive/pull/1443#discussion_r481295792", "createdAt": "2020-09-01T16:58:25Z", "author": {"login": "thejasmn"}, "path": "itests/hive-unit/src/test/java/org/apache/hive/jdbc/TestHiveDatabaseMetaData.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.hive.jdbc;\n+\n+import org.apache.hive.jdbc.HiveConnection;\n+import org.apache.hadoop.hive.conf.HiveConf.ConfVars;\n+import org.apache.hive.jdbc.Utils;\n+import org.apache.hive.jdbc.Utils.JdbcConnectionParams;\n+\n+\n+import java.util.HashMap;\n+import java.util.Properties;\n+import java.util.Map;\n+import java.sql.SQLException;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.*;\n+\n+/**\n+ * TestHiveDatabaseMetaData.\n+ *\n+ */\n+public class TestHiveDatabaseMetaData {\n+\n+  private static final Map<String, String> map = new HashMap<>();\n+  private HiveDatabaseMetaData hiveDatabaseMetaData;\n+\n+  @Before\n+  public void setup() throws Exception {\n+    map.put(Utils.HIVE_CONF_PREFIX + ConfVars.HIVE_DEFAULT_NULLS_LAST, \"false\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d50b57e5688b9b2c36536da329cd25150a5a205f"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99e04d3760353f248769ba707fd8db06f6c00472", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/99e04d3760353f248769ba707fd8db06f6c00472", "committedDate": "2020-09-01T20:27:31Z", "message": "Add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c57a1e5e7ac0ef30e2c83b15ff5ea52bfb763e01", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/c57a1e5e7ac0ef30e2c83b15ff5ea52bfb763e01", "committedDate": "2020-09-01T20:30:55Z", "message": "remove logger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2c817ab5bbd6573f3793e43306da2cd26ee1e61", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/b2c817ab5bbd6573f3793e43306da2cd26ee1e61", "committedDate": "2020-09-01T20:32:17Z", "message": "remove logger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7184b4f27067abfec9e4c1ecf1b869dc0ea9d8e8", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/7184b4f27067abfec9e4c1ecf1b869dc0ea9d8e8", "committedDate": "2020-09-01T20:33:38Z", "message": "remove logger"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2dc34c3a793a735fdd94f76025f9f1402c6c45f", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/c2dc34c3a793a735fdd94f76025f9f1402c6c45f", "committedDate": "2020-09-02T19:21:01Z", "message": "Pull HiveConf from HS2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56bd77d27283a511932f53121c11d9988ef2e2ed", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/56bd77d27283a511932f53121c11d9988ef2e2ed", "committedDate": "2020-09-02T19:22:41Z", "message": "Pull HiveConf from HS2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMzM1ODc5", "url": "https://github.com/apache/hive/pull/1443#pullrequestreview-481335879", "createdAt": "2020-09-02T22:10:29Z", "commit": {"oid": "56bd77d27283a511932f53121c11d9988ef2e2ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMjoxMDozMFrOHMK8nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMjoxMDozMFrOHMK8nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUyNDMxOQ==", "bodyText": "Shouldn't this be the opposite, i.e., isn't hive.default.nulls.last same as nullsAreSortedHigh?\nWhether to set NULLS LAST as the default null ordering for ASC order.", "url": "https://github.com/apache/hive/pull/1443#discussion_r482524319", "createdAt": "2020-09-02T22:10:30Z", "author": {"login": "jcamachor"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveDatabaseMetaData.java", "diffHunk": "@@ -855,19 +860,19 @@ public boolean nullPlusNonNullIsNull() throws SQLException {\n   }\n \n   public boolean nullsAreSortedAtEnd() throws SQLException {\n-    throw new SQLFeatureNotSupportedException(\"Method not supported\");\n+    return false;\n   }\n \n   public boolean nullsAreSortedAtStart() throws SQLException {\n-    throw new SQLFeatureNotSupportedException(\"Method not supported\");\n+    return false;\n   }\n \n   public boolean nullsAreSortedHigh() throws SQLException {\n-    throw new SQLFeatureNotSupportedException(\"Method not supported\");\n+    return !getHiveDefaultNullsLast(connection.getConnParams().getHiveConfs());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56bd77d27283a511932f53121c11d9988ef2e2ed"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c366a2836c087ccc14a18dfadf51bf6f3fe9b414", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/c366a2836c087ccc14a18dfadf51bf6f3fe9b414", "committedDate": "2020-09-02T23:40:11Z", "message": "Fixed the logic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMDcwMjY0", "url": "https://github.com/apache/hive/pull/1443#pullrequestreview-482070264", "createdAt": "2020-09-03T17:49:40Z", "commit": {"oid": "c366a2836c087ccc14a18dfadf51bf6f3fe9b414"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzo0OTo0MFrOHMxWVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODowODoyMFrOHMx9aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1MzQ5Mw==", "bodyText": "The setting in client side should override the server settings. ie, server setting should be used if no such value is set in the client side\nCan we make this generic ? Ie, loop through all the server settings and set it in hiveConfs only if there is no value set currently ?", "url": "https://github.com/apache/hive/pull/1443#discussion_r483153493", "createdAt": "2020-09-03T17:49:40Z", "author": {"login": "thejasmn"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveConnection.java", "diffHunk": "@@ -866,6 +874,13 @@ private void openSession() throws SQLException {\n     try {\n       TOpenSessionResp openResp = client.OpenSession(openReq);\n \n+      // Override HS2 server HiveConf in Connection parameter HiveConf", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c366a2836c087ccc14a18dfadf51bf6f3fe9b414"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1ODQ4NQ==", "bodyText": "This if statement should never return false. Something is wrong if it does, we should throw an error in that case (otherwise, we might run into some harder to debug issues).", "url": "https://github.com/apache/hive/pull/1443#discussion_r483158485", "createdAt": "2020-09-03T17:58:37Z", "author": {"login": "thejasmn"}, "path": "jdbc/src/java/org/apache/hive/jdbc/HiveDatabaseMetaData.java", "diffHunk": "@@ -1227,4 +1232,18 @@ private TGetInfoResp getServerInfo(TGetInfoType type) throws SQLException {\n     Utils.verifySuccess(resp.getStatus());\n     return resp;\n   }\n+\n+  /**\n+   * This returns Hive configuration for HIVE_DEFAULT_NULLS_LAST.\n+   *\n+   * @param hiveConfs\n+   * @return\n+   */\n+  public static boolean getHiveDefaultNullsLast(Map<String, String> hiveConfs) {\n+    boolean response = ConfVars.HIVE_DEFAULT_NULLS_LAST.defaultBoolVal;\n+    if ((hiveConfs != null) && (hiveConfs.get(JdbcConnectionParams.HIVE_DEFAULT_NULLS_LAST_KEY) != null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c366a2836c087ccc14a18dfadf51bf6f3fe9b414"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2MzQ5OQ==", "bodyText": "Can we add a test to verify we are getting the config value from server ? Either in TestHiveDatabaseMetaData or a different test ?", "url": "https://github.com/apache/hive/pull/1443#discussion_r483163499", "createdAt": "2020-09-03T18:08:20Z", "author": {"login": "thejasmn"}, "path": "service/src/java/org/apache/hive/service/cli/thrift/ThriftCLIService.java", "diffHunk": "@@ -326,10 +327,12 @@ public TOpenSessionResp OpenSession(TOpenSessionReq req) throws TException {\n \n       final int fetchSize = hiveConf.getIntVar(HiveConf.ConfVars.HIVE_SERVER2_THRIFT_RESULTSET_DEFAULT_FETCH_SIZE);\n \n+      Map<String, String> map = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c366a2836c087ccc14a18dfadf51bf6f3fe9b414"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4ff1e6e5a6506490c1e62bc6ae3220a84037912", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/d4ff1e6e5a6506490c1e62bc6ae3220a84037912", "committedDate": "2020-09-03T21:32:42Z", "message": "Address Thejas feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "950c0e9c980fb7b9f30d133541c19f59e5ee0ebf", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/950c0e9c980fb7b9f30d133541c19f59e5ee0ebf", "committedDate": "2020-09-03T21:33:26Z", "message": "Address Thejas feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a5bd456dc7dd2a574648250a993d7b135158e00", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/2a5bd456dc7dd2a574648250a993d7b135158e00", "committedDate": "2020-09-04T00:41:10Z", "message": "Fix unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c1d218c9bae53ba2ae60895e37507000de6d67", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/89c1d218c9bae53ba2ae60895e37507000de6d67", "committedDate": "2020-09-04T19:22:27Z", "message": "Fix unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1fafd10741e355ce149f1899d889c6b1c409743", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/a1fafd10741e355ce149f1899d889c6b1c409743", "committedDate": "2020-09-04T23:30:35Z", "message": "Fix unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85665be559cc3c1a093adf1cd0f825ce6760711c", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/85665be559cc3c1a093adf1cd0f825ce6760711c", "committedDate": "2020-09-05T09:04:14Z", "message": "Fix unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a4910769bd42e5a27cd224f48615a2da2b12991", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/1a4910769bd42e5a27cd224f48615a2da2b12991", "committedDate": "2020-09-05T09:15:33Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1511f893559a8a86c7c2de940231b338d27a7236", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/1511f893559a8a86c7c2de940231b338d27a7236", "committedDate": "2020-09-06T09:41:34Z", "message": "Add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "503aff6caa59d9b64ef10565d8b982b338febdbc", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/503aff6caa59d9b64ef10565d8b982b338febdbc", "committedDate": "2020-09-06T16:10:28Z", "message": "Add comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3263, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}