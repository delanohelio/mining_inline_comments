{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwNjM4NTAx", "number": 1349, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwOTo0NzowM1rOEUimKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwOTo0NzowM1rOEUimKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5OTczODAxOnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/rules/HiveFilterJoinRule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwOTo0NzowM1rOG6zLpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwOTo0NzowM1rOG6zLpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDMwOTE1Ng==", "bodyText": "nit: you can expose the id parameter to the constructor of HiveFilterJoinMergeRule", "url": "https://github.com/apache/hive/pull/1349#discussion_r464309156", "createdAt": "2020-08-03T09:47:03Z", "author": {"login": "kasakrisz"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/rules/HiveFilterJoinRule.java", "diffHunk": "@@ -52,14 +55,34 @@ protected HiveFilterJoinRule(RelOptRuleOperand operand, String id, boolean smart\n     super(operand, id, smart, relBuilderFactory, TRUE_PREDICATE);\n   }\n \n+  /**\n+   * Rule that tries to push filter expressions into a join condition and into\n+   * the inputs of the join, iff the join is a column appending\n+   * non-filtering join.\n+   */\n+  public static class HiveFilterNonFilteringJoinMergeRule extends HiveFilterJoinMergeRule {\n+\n+    @Override\n+    public boolean matches(RelOptRuleCall call) {\n+      Join join = call.rel(1);\n+      RewritablePKFKJoinInfo joinInfo = HiveRelOptUtil.isRewritablePKFKJoin(\n+          join, true, call.getMetadataQuery());\n+      if (!joinInfo.rewritable) {\n+        return false;\n+      }\n+      return super.matches(call);\n+    }\n+\n+  }\n+\n   /**\n    * Rule that tries to push filter expressions into a join condition and into\n    * the inputs of the join.\n    */\n   public static class HiveFilterJoinMergeRule extends HiveFilterJoinRule {\n     public HiveFilterJoinMergeRule() {\n-      super(RelOptRule.operand(Filter.class, RelOptRule.operand(Join.class, RelOptRule.any())),\n-          \"HiveFilterJoinRule:filter\", true, HiveRelFactories.HIVE_BUILDER);\n+      super(operand(Filter.class, operand(Join.class, any())),\n+          null, true, HiveRelFactories.HIVE_BUILDER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b2b6f8c344ff30d0a389272bb88fe878f73ea03"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 482, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}