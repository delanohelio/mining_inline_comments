{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1OTIwOTAy", "number": 1305, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOToyODoxNFrOESTwdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTo0MDowOFrOESUBMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjMzNTI1OnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/translator/ExprNodeConverter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOToyODoxNFrOG3av_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOToyODoxNFrOG3av_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2MzEzNA==", "bodyText": "I don't know why I've not choosen this path in HIVE-21316...\nmaybe I missed that MAX_VARCHAR_LENGTH  and  MAX_CHAR_LENGTH is both below 64K", "url": "https://github.com/apache/hive/pull/1305#discussion_r460763134", "createdAt": "2020-07-27T09:28:14Z", "author": {"login": "kgyrtkirk"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/optimizer/calcite/translator/ExprNodeConverter.java", "diffHunk": "@@ -341,26 +342,22 @@ public static ExprNodeConstantDesc toExprNodeConstantDesc(RexLiteral literal) {\n       case DECIMAL:\n         return new ExprNodeConstantDesc(TypeInfoFactory.getDecimalTypeInfo(lType.getPrecision(),\n             lType.getScale()), HiveDecimal.create((BigDecimal)literal.getValue3()));\n-      case VARCHAR:\n       case CHAR: {\n-        if (literal.getValue() instanceof HiveNlsString) {\n-          HiveNlsString mxNlsString = (HiveNlsString) literal.getValue();\n-          switch (mxNlsString.interpretation) {\n-          case STRING:\n-            return new ExprNodeConstantDesc(TypeInfoFactory.stringTypeInfo, literal.getValue3());\n-          case CHAR: {\n-            int precision = lType.getPrecision();\n-            HiveChar value = new HiveChar((String) literal.getValue3(), precision);\n-            return new ExprNodeConstantDesc(new CharTypeInfo(precision), value);\n-          }\n-          case VARCHAR: {\n-            int precision = lType.getPrecision();\n-            HiveVarchar value = new HiveVarchar((String) literal.getValue3(), precision);\n-            return new ExprNodeConstantDesc(new VarcharTypeInfo(precision), value);\n-          }\n-          }\n+        Preconditions.checkState(literal.getValue() instanceof NlsString,\n+            \"char values must use NlsString for correctness\");\n+        int precision = lType.getPrecision();\n+        HiveChar value = new HiveChar((String) literal.getValue3(), precision);\n+        return new ExprNodeConstantDesc(new CharTypeInfo(precision), value);\n+      }\n+      case VARCHAR: {\n+        Preconditions.checkState(literal.getValue() instanceof NlsString,\n+            \"varchar/string values must use NlsString for correctness\");\n+        int precision = lType.getPrecision();\n+        if (precision == Integer.MAX_VALUE) {\n+          return new ExprNodeConstantDesc(TypeInfoFactory.stringTypeInfo, literal.getValue3());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6101458772eb1a2f8b934217af2657b6a306dc1a"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjM1MzExOnYy", "diffSide": "RIGHT", "path": "ql/src/test/results/clientpositive/llap/vector_const.q.out", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTozMzoxMlrOG3a66Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNzozNDowMFrOG3sltA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2NTkyOQ==", "bodyText": "interesting change; will this also mean that:\nCONCAT(CAST('F' AS CHAR(200)),CAST('F' AS CHAR(200)))\n\nwill not be processable because it would need CHAR(400) - which is not supported?", "url": "https://github.com/apache/hive/pull/1305#discussion_r460765929", "createdAt": "2020-07-27T09:33:12Z", "author": {"login": "kgyrtkirk"}, "path": "ql/src/test/results/clientpositive/llap/vector_const.q.out", "diffHunk": "@@ -40,7 +40,7 @@ STAGE PLANS:\n                   alias: varchar_const_1\n                   Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE\n                   Select Operator\n-                    expressions: 'FF' (type: varchar(3))\n+                    expressions: 'FF' (type: varchar(4))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6101458772eb1a2f8b934217af2657b6a306dc1a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA1NTQxMg==", "bodyText": "I have just checked and added a test. This gets converted into a STRING: It is the same behavior before/after the patch. If the precision of any single one of them is above 255, then an error message is thrown.", "url": "https://github.com/apache/hive/pull/1305#discussion_r461055412", "createdAt": "2020-07-27T17:34:00Z", "author": {"login": "jcamachor"}, "path": "ql/src/test/results/clientpositive/llap/vector_const.q.out", "diffHunk": "@@ -40,7 +40,7 @@ STAGE PLANS:\n                   alias: varchar_const_1\n                   Statistics: Num rows: 1 Data size: 4 Basic stats: COMPLETE Column stats: COMPLETE\n                   Select Operator\n-                    expressions: 'FF' (type: varchar(3))\n+                    expressions: 'FF' (type: varchar(4))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2NTkyOQ=="}, "originalCommit": {"oid": "6101458772eb1a2f8b934217af2657b6a306dc1a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NjM3ODEwOnYy", "diffSide": "RIGHT", "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/type/RexNodeExprFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTo0MDowOFrOG3bJ_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTo0MDowOFrOG3bJ_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc2OTc5MA==", "bodyText": "this will discard type distinction between char/varchar - but because CHAR is already padded at this point; it will work correctly!\nawesome! :)", "url": "https://github.com/apache/hive/pull/1305#discussion_r460769790", "createdAt": "2020-07-27T09:40:08Z", "author": {"login": "kgyrtkirk"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/parse/type/RexNodeExprFactory.java", "diffHunk": "@@ -374,7 +373,7 @@ protected Object interpretConstantAsPrimitive(PrimitiveTypeInfo targetType, Obje\n         HiveChar newValue = new HiveChar(constValue, length);\n         HiveChar maxCharConst = new HiveChar(constValue, HiveChar.MAX_CHAR_LENGTH);\n         if (maxCharConst.equals(newValue)) {\n-          return makeHiveUnicodeString(Interpretation.CHAR, newValue.getValue());\n+          return makeHiveUnicodeString(newValue.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6101458772eb1a2f8b934217af2657b6a306dc1a"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 613, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}