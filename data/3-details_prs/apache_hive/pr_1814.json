{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NTAyMTI5", "number": 1814, "title": "HIVE-15820: comment at the head of beeline -e", "bodyText": "What changes were proposed in this pull request?\n\nDon't check if a line is a comment in Beeline.dispatch(). Instead, remove the comments from the line.\nReplace removeComments(String, int[]) with removeComments(String) in Commands.handleMultiLineCmd().\n\nWhy are the changes needed?\n\nThe queries in '-e' parameter is passed to Beeline.dispatch() as a single line although there could be multiple lines. If the first line is a comment, the rest lines are ignored. We should pass the query strings to Commands.execute().\nHiveStringUtils.removeComments(String, int[]) is used for a single line. In this method. If we use it to check a multiple line string and there is one comment line, the lines after this comment line will be discarded. In fact, HiveStringUtils.removeComments(String) splits a multiple line string to several single line strings and calls HiveStringUtils.removeComments(String, int[]) to process each single line. So HiveStringUtils.removeComments(String) is what we should use in Commands.handleMultiLineCmd().\n\nDoes this PR introduce any user-facing change?\nNo.\nHow was this patch tested?\n\norg.apache.hive.beeline.testLinesEndingWithComments is used to test HiveStringUtils.removeComments(String).\norg.apache.hive.beeline.cli.testSqlFromCmdWithComments* are used to test queries passed via '-e' option. And testSqlFromCmdWithComments2 is used to test the query after a comment line.", "createdAt": "2020-12-25T03:04:20Z", "url": "https://github.com/apache/hive/pull/1814", "merged": true, "mergeCommit": {"oid": "425e1ff7c054f87c4db87e77d004282d529599ae"}, "closed": true, "closedAt": "2021-01-08T08:43:57Z", "author": {"login": "ujc714"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdpe-6cAH2gAyNTQ1NTAyMTI5OmYyNDRhOWQ3ZjY2OGM4YWU0MWFiMDg5MWJiOTdlM2U3ZGI4ZWEyMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdt3Qt-AFqTU2MzY2MjcyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f244a9d7f668c8ae41ab0891bb97e3e7db8ea217", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/f244a9d7f668c8ae41ab0891bb97e3e7db8ea217", "committedDate": "2020-12-25T02:34:00Z", "message": "HIVE-15820: comment at the head of beeline -e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3db4a0debe9b305e484e710be11c04c710a9d565", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/3db4a0debe9b305e484e710be11c04c710a9d565", "committedDate": "2021-01-04T05:56:45Z", "message": "HIVE-15820: comment at the head of beeline -e"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8782b75245a47b6370af971ef3809d4d71f1005", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/a8782b75245a47b6370af971ef3809d4d71f1005", "committedDate": "2021-01-04T06:00:02Z", "message": "Merge branch 'HIVE-15820' of github.com:ujc714/hive into HIVE-15820"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba936b17eb53d6b6b27d1bf20ab5098869827214", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/ba936b17eb53d6b6b27d1bf20ab5098869827214", "committedDate": "2021-01-05T03:23:33Z", "message": "Merge branch 'HIVE-15820' of github.com:ujc714/hive into HIVE-15820"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fad9d58123d213dea45bff2100b03e809464cff0", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/fad9d58123d213dea45bff2100b03e809464cff0", "committedDate": "2021-01-05T03:36:51Z", "message": "Merge branch 'HIVE-15820' of github.com:ujc714/hive into HIVE-15820"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e5cff241653a734a1f9dd36f9e08b3d3fff064a", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/3e5cff241653a734a1f9dd36f9e08b3d3fff064a", "committedDate": "2021-01-05T05:31:53Z", "message": "Merge branch 'HIVE-15820' of github.com:ujc714/hive into HIVE-15820"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c0e46e8eb1a3f3ecc02c5a8def29c3c5f571a4c", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/5c0e46e8eb1a3f3ecc02c5a8def29c3c5f571a4c", "committedDate": "2021-01-05T05:32:01Z", "message": "Merge branch 'HIVE-15820' of github.com:ujc714/hive into HIVE-15820"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyNzMwMTY4", "url": "https://github.com/apache/hive/pull/1814#pullrequestreview-562730168", "createdAt": "2021-01-06T14:03:26Z", "commit": {"oid": "5c0e46e8eb1a3f3ecc02c5a8def29c3c5f571a4c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNDowMzoyNlrOIPCeMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNDowMzoyNlrOIPCeMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjY0MDA1MA==", "bodyText": "Could you please add a test scenario where a multiline query strings has comments in between fragments of query? just as an example\n\"select col1,\n--partitioned year column\nyear,\n--partitioned month column\nmonth,\n--partitioned date column\ndate\nfrom test_table\nwhere\n--for a particular user\nusername = 'foo';\"\nshould return something equivalent to\n\"select col1, year, month, date from test_table where username = 'foo';\"", "url": "https://github.com/apache/hive/pull/1814#discussion_r552640050", "createdAt": "2021-01-06T14:03:26Z", "author": {"login": "nrg4878"}, "path": "beeline/src/test/org/apache/hive/beeline/TestCommands.java", "diffHunk": "@@ -30,21 +30,35 @@\n \n   @Test\n   public void testLinesEndingWithComments() {\n-    int[] escape = {-1};\n-    assertEquals(\"show tables;\", removeComments(\"show tables;\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; --comments\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments;one;two;three;;;;\",escape));\n-    assertEquals(\"show\", removeComments(\"show-- tables; -------comments\",escape));\n-    assertEquals(\"show\", removeComments(\"show --tables; -------comments\",escape));\n-    assertEquals(\"s\", removeComments(\"s--how --tables; -------comments\",escape));\n-    assertEquals(\"\", removeComments(\"-- show tables; -------comments\",escape));\n+    assertEquals(\"show tables;\", removeComments(\"show tables;\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; --comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments;one;two;three;;;;\"));\n+    assertEquals(\"show\", removeComments(\"show-- tables; -------comments\"));\n+    assertEquals(\"show\", removeComments(\"show --tables; -------comments\"));\n+    assertEquals(\"s\", removeComments(\"s--how --tables; -------comments\"));\n+    assertEquals(\"\", removeComments(\"-- show tables; -------comments\"));\n \n-    assertEquals(\"\\\"show tables\\\"\", removeComments(\"\\\"show tables\\\" --comments\",escape));\n-    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"\\\"show --comments tables\\\" --comments\",escape));\n-    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"\\\"'show --comments' tables\\\" --comments\",escape));\n-    assertEquals(\"'show --comments tables'\", removeComments(\"'show --comments tables' --comments\",escape));\n-    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"'\\\"show --comments tables\\\"' --comments\",escape));\n+    assertEquals(\"\\\"show tables\\\"\", removeComments(\"\\\"show tables\\\" --comments\"));\n+    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"\\\"show --comments tables\\\" --comments\"));\n+    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"\\\"'show --comments' tables\\\" --comments\"));\n+    assertEquals(\"'show --comments tables'\", removeComments(\"'show --comments tables' --comments\"));\n+    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"'\\\"show --comments tables\\\"' --comments\"));\n+\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables;\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; --comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; -------comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; -------comments;one;two;three;;;;\"));\n+    assertEquals(\"show\", removeComments(\"--comments\\nshow-- tables; -------comments\"));\n+    assertEquals(\"show\", removeComments(\"--comments\\nshow --tables; -------comments\"));\n+    assertEquals(\"s\", removeComments(\"--comments\\ns--how --tables; -------comments\"));\n+    assertEquals(\"\", removeComments(\"--comments\\n-- show tables; -------comments\"));\n+\n+    assertEquals(\"\\\"show tables\\\"\", removeComments(\"--comments\\n\\\"show tables\\\" --comments\"));\n+    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"--comments\\n\\\"show --comments tables\\\" --comments\"));\n+    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"--comments\\n\\\"'show --comments' tables\\\" --comments\"));\n+    assertEquals(\"'show --comments tables'\", removeComments(\"--comments\\n'show --comments tables' --comments\"));\n+    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"--comments\\n'\\\"show --comments tables\\\"' --comments\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c0e46e8eb1a3f3ecc02c5a8def29c3c5f571a4c"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c104caa7a5ca5217e8c1f187716193282c010e4", "author": {"user": null}, "url": "https://github.com/apache/hive/commit/2c104caa7a5ca5217e8c1f187716193282c010e4", "committedDate": "2021-01-06T22:14:59Z", "message": "HIVE-15820: comment at the head of beeline -e"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMTQ2NDUz", "url": "https://github.com/apache/hive/pull/1814#pullrequestreview-563146453", "createdAt": "2021-01-07T01:05:33Z", "commit": {"oid": "2c104caa7a5ca5217e8c1f187716193282c010e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMTowNTozM1rOIPbnCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMTowNTozM1rOIPbnCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzA1MTkxNQ==", "bodyText": "Thanks for having a look! I added your example. It contains both separate comment lines and inline comment.", "url": "https://github.com/apache/hive/pull/1814#discussion_r553051915", "createdAt": "2021-01-07T01:05:33Z", "author": {"login": "ujc714"}, "path": "beeline/src/test/org/apache/hive/beeline/TestCommands.java", "diffHunk": "@@ -30,21 +30,35 @@\n \n   @Test\n   public void testLinesEndingWithComments() {\n-    int[] escape = {-1};\n-    assertEquals(\"show tables;\", removeComments(\"show tables;\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; --comments\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments\",escape));\n-    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments;one;two;three;;;;\",escape));\n-    assertEquals(\"show\", removeComments(\"show-- tables; -------comments\",escape));\n-    assertEquals(\"show\", removeComments(\"show --tables; -------comments\",escape));\n-    assertEquals(\"s\", removeComments(\"s--how --tables; -------comments\",escape));\n-    assertEquals(\"\", removeComments(\"-- show tables; -------comments\",escape));\n+    assertEquals(\"show tables;\", removeComments(\"show tables;\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; --comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"show tables; -------comments;one;two;three;;;;\"));\n+    assertEquals(\"show\", removeComments(\"show-- tables; -------comments\"));\n+    assertEquals(\"show\", removeComments(\"show --tables; -------comments\"));\n+    assertEquals(\"s\", removeComments(\"s--how --tables; -------comments\"));\n+    assertEquals(\"\", removeComments(\"-- show tables; -------comments\"));\n \n-    assertEquals(\"\\\"show tables\\\"\", removeComments(\"\\\"show tables\\\" --comments\",escape));\n-    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"\\\"show --comments tables\\\" --comments\",escape));\n-    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"\\\"'show --comments' tables\\\" --comments\",escape));\n-    assertEquals(\"'show --comments tables'\", removeComments(\"'show --comments tables' --comments\",escape));\n-    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"'\\\"show --comments tables\\\"' --comments\",escape));\n+    assertEquals(\"\\\"show tables\\\"\", removeComments(\"\\\"show tables\\\" --comments\"));\n+    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"\\\"show --comments tables\\\" --comments\"));\n+    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"\\\"'show --comments' tables\\\" --comments\"));\n+    assertEquals(\"'show --comments tables'\", removeComments(\"'show --comments tables' --comments\"));\n+    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"'\\\"show --comments tables\\\"' --comments\"));\n+\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables;\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; --comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; -------comments\"));\n+    assertEquals(\"show tables;\", removeComments(\"--comments\\nshow tables; -------comments;one;two;three;;;;\"));\n+    assertEquals(\"show\", removeComments(\"--comments\\nshow-- tables; -------comments\"));\n+    assertEquals(\"show\", removeComments(\"--comments\\nshow --tables; -------comments\"));\n+    assertEquals(\"s\", removeComments(\"--comments\\ns--how --tables; -------comments\"));\n+    assertEquals(\"\", removeComments(\"--comments\\n-- show tables; -------comments\"));\n+\n+    assertEquals(\"\\\"show tables\\\"\", removeComments(\"--comments\\n\\\"show tables\\\" --comments\"));\n+    assertEquals(\"\\\"show --comments tables\\\"\", removeComments(\"--comments\\n\\\"show --comments tables\\\" --comments\"));\n+    assertEquals(\"\\\"'show --comments' tables\\\"\", removeComments(\"--comments\\n\\\"'show --comments' tables\\\" --comments\"));\n+    assertEquals(\"'show --comments tables'\", removeComments(\"--comments\\n'show --comments tables' --comments\"));\n+    assertEquals(\"'\\\"show --comments tables\\\"'\", removeComments(\"--comments\\n'\\\"show --comments tables\\\"' --comments\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjY0MDA1MA=="}, "originalCommit": {"oid": "5c0e46e8eb1a3f3ecc02c5a8def29c3c5f571a4c"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNjYyNzI1", "url": "https://github.com/apache/hive/pull/1814#pullrequestreview-563662725", "createdAt": "2021-01-07T17:06:52Z", "commit": {"oid": "2c104caa7a5ca5217e8c1f187716193282c010e4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2816, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}