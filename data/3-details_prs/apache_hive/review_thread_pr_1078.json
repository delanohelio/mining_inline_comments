{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMjg1ODA3", "number": 1078, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNTozNToyNFrOEDt4Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNTo0Mzo0NlrOEDt-uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzMyODE1OnYy", "diffSide": "RIGHT", "path": "standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/VerifyingObjectStore.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNTozNToyNFrOGg5YKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDowMDo0OVrOGhgZDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NzY5MA==", "bodyText": "what if exception happens when getPartitionsInternal,  the transaction may become unbalanced", "url": "https://github.com/apache/hive/pull/1078#discussion_r437147690", "createdAt": "2020-06-09T05:35:24Z", "author": {"login": "dengzhhu653"}, "path": "standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/VerifyingObjectStore.java", "diffHunk": "@@ -93,9 +93,11 @@ public boolean getPartitionsByExpr(String catName, String dbName, String tblName\n   @Override\n   public List<Partition> getPartitions(\n       String catName, String dbName, String tableName, int maxParts) throws MetaException, NoSuchObjectException {\n+    openTransaction();\n     List<Partition> sqlResults = getPartitionsInternal(catName, dbName, tableName, maxParts, true, false);\n     List<Partition> ormResults = getPartitionsInternal(catName, dbName, tableName, maxParts, false, true);\n     verifyLists(sqlResults, ormResults, Partition.class);\n+    commitTransaction();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1ODQxNg==", "bodyText": "This is a test class.  If things become unbalanced here it doesn't really matter because the test will fail from Exception anyway.", "url": "https://github.com/apache/hive/pull/1078#discussion_r437458416", "createdAt": "2020-06-09T14:17:22Z", "author": {"login": "belugabehr"}, "path": "standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/VerifyingObjectStore.java", "diffHunk": "@@ -93,9 +93,11 @@ public boolean getPartitionsByExpr(String catName, String dbName, String tblName\n   @Override\n   public List<Partition> getPartitions(\n       String catName, String dbName, String tableName, int maxParts) throws MetaException, NoSuchObjectException {\n+    openTransaction();\n     List<Partition> sqlResults = getPartitionsInternal(catName, dbName, tableName, maxParts, true, false);\n     List<Partition> ormResults = getPartitionsInternal(catName, dbName, tableName, maxParts, false, true);\n     verifyLists(sqlResults, ormResults, Partition.class);\n+    commitTransaction();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NzY5MA=="}, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4Njg5NQ==", "bodyText": "OK, got it.", "url": "https://github.com/apache/hive/pull/1078#discussion_r437786895", "createdAt": "2020-06-10T00:00:49Z", "author": {"login": "dengzhhu653"}, "path": "standalone-metastore/metastore-server/src/test/java/org/apache/hadoop/hive/metastore/VerifyingObjectStore.java", "diffHunk": "@@ -93,9 +93,11 @@ public boolean getPartitionsByExpr(String catName, String dbName, String tblName\n   @Override\n   public List<Partition> getPartitions(\n       String catName, String dbName, String tableName, int maxParts) throws MetaException, NoSuchObjectException {\n+    openTransaction();\n     List<Partition> sqlResults = getPartitionsInternal(catName, dbName, tableName, maxParts, true, false);\n     List<Partition> ormResults = getPartitionsInternal(catName, dbName, tableName, maxParts, false, true);\n     verifyLists(sqlResults, ormResults, Partition.class);\n+    commitTransaction();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0NzY5MA=="}, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzMzNjMwOnYy", "diffSide": "RIGHT", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNTozOTozNlrOGg5dHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDo1MTozOVrOGig8bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0ODk1OQ==", "bodyText": "rollbackAndCleanup", "url": "https://github.com/apache/hive/pull/1078#discussion_r437148959", "createdAt": "2020-06-09T05:39:36Z", "author": {"login": "dengzhhu653"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -7109,22 +7121,37 @@ protected String describeResult() {\n   }\n \n   @Override\n-  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(\n-      String principalName, PrincipalType principalType) {\n-    try (QueryWrapper queryWrapper = new QueryWrapper()) {\n-      return convertDB(listPrincipalAllDBGrant(principalName, principalType, queryWrapper));\n+  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(String principalName, PrincipalType principalType) {\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = convertDB(listPrincipalAllDBGrant(principalName, principalType));\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);\n     }\n+    return results;\n   }\n \n   @Override\n   public List<HiveObjectPrivilege> listDBGrantsAll(String catName, String dbName) {\n-    return listDBGrantsAll(catName, dbName, null);\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = listDBGrantsAll(catName, dbName, null);\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 540}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1ODc2NA==", "bodyText": "I'm sorry?", "url": "https://github.com/apache/hive/pull/1078#discussion_r437458764", "createdAt": "2020-06-09T14:17:48Z", "author": {"login": "belugabehr"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -7109,22 +7121,37 @@ protected String describeResult() {\n   }\n \n   @Override\n-  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(\n-      String principalName, PrincipalType principalType) {\n-    try (QueryWrapper queryWrapper = new QueryWrapper()) {\n-      return convertDB(listPrincipalAllDBGrant(principalName, principalType, queryWrapper));\n+  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(String principalName, PrincipalType principalType) {\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = convertDB(listPrincipalAllDBGrant(principalName, principalType));\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);\n     }\n+    return results;\n   }\n \n   @Override\n   public List<HiveObjectPrivilege> listDBGrantsAll(String catName, String dbName) {\n-    return listDBGrantsAll(catName, dbName, null);\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = listDBGrantsAll(catName, dbName, null);\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0ODk1OQ=="}, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 540}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4NjM0NA==", "bodyText": "Sorry for the delay, my concern is that set success to true on rollbackAndCleanup here may make the transaction unable to rollback.", "url": "https://github.com/apache/hive/pull/1078#discussion_r437786344", "createdAt": "2020-06-09T23:58:57Z", "author": {"login": "dengzhhu653"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -7109,22 +7121,37 @@ protected String describeResult() {\n   }\n \n   @Override\n-  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(\n-      String principalName, PrincipalType principalType) {\n-    try (QueryWrapper queryWrapper = new QueryWrapper()) {\n-      return convertDB(listPrincipalAllDBGrant(principalName, principalType, queryWrapper));\n+  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(String principalName, PrincipalType principalType) {\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = convertDB(listPrincipalAllDBGrant(principalName, principalType));\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);\n     }\n+    return results;\n   }\n \n   @Override\n   public List<HiveObjectPrivilege> listDBGrantsAll(String catName, String dbName) {\n-    return listDBGrantsAll(catName, dbName, null);\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = listDBGrantsAll(catName, dbName, null);\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0ODk1OQ=="}, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 540}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0NDUyNQ==", "bodyText": "OK.  I just took a look at it.  'true' here means 'do not roll back'.  This particular method is a top-level method and it is read-only.  Therefore, there will never be anything to roll back.", "url": "https://github.com/apache/hive/pull/1078#discussion_r438844525", "createdAt": "2020-06-11T14:51:39Z", "author": {"login": "belugabehr"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -7109,22 +7121,37 @@ protected String describeResult() {\n   }\n \n   @Override\n-  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(\n-      String principalName, PrincipalType principalType) {\n-    try (QueryWrapper queryWrapper = new QueryWrapper()) {\n-      return convertDB(listPrincipalAllDBGrant(principalName, principalType, queryWrapper));\n+  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(String principalName, PrincipalType principalType) {\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = convertDB(listPrincipalAllDBGrant(principalName, principalType));\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);\n     }\n+    return results;\n   }\n \n   @Override\n   public List<HiveObjectPrivilege> listDBGrantsAll(String catName, String dbName) {\n-    return listDBGrantsAll(catName, dbName, null);\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = listDBGrantsAll(catName, dbName, null);\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE0ODk1OQ=="}, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 540}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzM0NTIwOnYy", "diffSide": "RIGHT", "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwNTo0Mzo0NlrOGg5iVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMzowOTo0NFrOGixsXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1MDI5NQ==", "bodyText": "The transaction may unable to rollback when exception happens.", "url": "https://github.com/apache/hive/pull/1078#discussion_r437150295", "createdAt": "2020-06-09T05:43:46Z", "author": {"login": "dengzhhu653"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -7109,22 +7121,37 @@ protected String describeResult() {\n   }\n \n   @Override\n-  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(\n-      String principalName, PrincipalType principalType) {\n-    try (QueryWrapper queryWrapper = new QueryWrapper()) {\n-      return convertDB(listPrincipalAllDBGrant(principalName, principalType, queryWrapper));\n+  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(String principalName, PrincipalType principalType) {\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = convertDB(listPrincipalAllDBGrant(principalName, principalType));\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 524}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1OTA5MQ==", "bodyText": "Why is that?", "url": "https://github.com/apache/hive/pull/1078#discussion_r437459091", "createdAt": "2020-06-09T14:18:11Z", "author": {"login": "belugabehr"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -7109,22 +7121,37 @@ protected String describeResult() {\n   }\n \n   @Override\n-  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(\n-      String principalName, PrincipalType principalType) {\n-    try (QueryWrapper queryWrapper = new QueryWrapper()) {\n-      return convertDB(listPrincipalAllDBGrant(principalName, principalType, queryWrapper));\n+  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(String principalName, PrincipalType principalType) {\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = convertDB(listPrincipalAllDBGrant(principalName, principalType));\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1MDI5NQ=="}, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 524}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4MzE1NA==", "bodyText": "hive/standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java\n    \n    \n        Lines 11729 to 11739\n      in\n      871ee80\n    \n    \n    \n    \n\n        \n          \n           void rollbackAndCleanup(boolean success, Query query) { \n        \n\n        \n          \n             try { \n        \n\n        \n          \n               if (!success) { \n        \n\n        \n          \n                 rollbackTransaction(); \n        \n\n        \n          \n               } \n        \n\n        \n          \n             } finally { \n        \n\n        \n          \n               if (query != null) { \n        \n\n        \n          \n                 query.closeAll(); \n        \n\n        \n          \n               } \n        \n\n        \n          \n             } \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nI'm wondering that the opened transaction may be unable to be committed when exception happens on listPrincipalAllDBGrant  or rolled back as we set the success to true  on the method rollbackAndCleanup. Could you explain more about why set success to true here?  Thanks @belugabehr", "url": "https://github.com/apache/hive/pull/1078#discussion_r437783154", "createdAt": "2020-06-09T23:48:12Z", "author": {"login": "dengzhhu653"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -7109,22 +7121,37 @@ protected String describeResult() {\n   }\n \n   @Override\n-  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(\n-      String principalName, PrincipalType principalType) {\n-    try (QueryWrapper queryWrapper = new QueryWrapper()) {\n-      return convertDB(listPrincipalAllDBGrant(principalName, principalType, queryWrapper));\n+  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(String principalName, PrincipalType principalType) {\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = convertDB(listPrincipalAllDBGrant(principalName, principalType));\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1MDI5NQ=="}, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 524}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0NDk1Ng==", "bodyText": "@dengzhhu653\nThis particular method is a top-level method and it is read-only.  Therefore, there will never be anything to roll back.", "url": "https://github.com/apache/hive/pull/1078#discussion_r438844956", "createdAt": "2020-06-11T14:52:16Z", "author": {"login": "belugabehr"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -7109,22 +7121,37 @@ protected String describeResult() {\n   }\n \n   @Override\n-  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(\n-      String principalName, PrincipalType principalType) {\n-    try (QueryWrapper queryWrapper = new QueryWrapper()) {\n-      return convertDB(listPrincipalAllDBGrant(principalName, principalType, queryWrapper));\n+  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(String principalName, PrincipalType principalType) {\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = convertDB(listPrincipalAllDBGrant(principalName, principalType));\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1MDI5NQ=="}, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 524}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg3MjgwMg==", "bodyText": "When exception happens in this method, if the same ObjectStore tries to create table afterwards,  he may be unable to commit the transaction as openTrasactionCalls should be greater than 0 or rollback as the method commitTransaction returns true, the modification would be lost when metastore client shutdown.", "url": "https://github.com/apache/hive/pull/1078#discussion_r438872802", "createdAt": "2020-06-11T15:30:23Z", "author": {"login": "dengzhhu653"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -7109,22 +7121,37 @@ protected String describeResult() {\n   }\n \n   @Override\n-  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(\n-      String principalName, PrincipalType principalType) {\n-    try (QueryWrapper queryWrapper = new QueryWrapper()) {\n-      return convertDB(listPrincipalAllDBGrant(principalName, principalType, queryWrapper));\n+  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(String principalName, PrincipalType principalType) {\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = convertDB(listPrincipalAllDBGrant(principalName, principalType));\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1MDI5NQ=="}, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 524}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkwOTE0Nw==", "bodyText": "@dengzhhu653 OK, I am following you now.  I will address this is new push.  Thanks so much.\nThis whole setup is pretty wonky (hence my inspiration to simplify the Query close stuff in this PR) and I'd like to address, but in another JIRA.", "url": "https://github.com/apache/hive/pull/1078#discussion_r438909147", "createdAt": "2020-06-11T16:16:40Z", "author": {"login": "belugabehr"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -7109,22 +7121,37 @@ protected String describeResult() {\n   }\n \n   @Override\n-  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(\n-      String principalName, PrincipalType principalType) {\n-    try (QueryWrapper queryWrapper = new QueryWrapper()) {\n-      return convertDB(listPrincipalAllDBGrant(principalName, principalType, queryWrapper));\n+  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(String principalName, PrincipalType principalType) {\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = convertDB(listPrincipalAllDBGrant(principalName, principalType));\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1MDI5NQ=="}, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 524}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTExODk0Mw==", "bodyText": "I found that using try (QueryWrapper wrapper = new QueryWrapper()) does not need to add a catch clause comparing to try(Query q = pm.newQuery(....)).", "url": "https://github.com/apache/hive/pull/1078#discussion_r439118943", "createdAt": "2020-06-11T23:09:44Z", "author": {"login": "dengzhhu653"}, "path": "standalone-metastore/metastore-server/src/main/java/org/apache/hadoop/hive/metastore/ObjectStore.java", "diffHunk": "@@ -7109,22 +7121,37 @@ protected String describeResult() {\n   }\n \n   @Override\n-  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(\n-      String principalName, PrincipalType principalType) {\n-    try (QueryWrapper queryWrapper = new QueryWrapper()) {\n-      return convertDB(listPrincipalAllDBGrant(principalName, principalType, queryWrapper));\n+  public List<HiveObjectPrivilege> listPrincipalDBGrantsAll(String principalName, PrincipalType principalType) {\n+    List<HiveObjectPrivilege> results = Collections.emptyList();\n+    try {\n+      openTransaction();\n+      results = convertDB(listPrincipalAllDBGrant(principalName, principalType));\n+      commitTransaction();\n+    } catch (Exception e) {\n+      throw new RuntimeException(e);\n+    } finally {\n+      rollbackAndCleanup(true, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzE1MDI5NQ=="}, "originalCommit": {"oid": "2a1f52917002f434ebcbb22c1d5f356a7733f9d3"}, "originalPosition": 524}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 750, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}