{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNjE1NjQ0", "number": 1798, "title": "HIVE-22944: Upgrade to Kryo5", "bodyText": "What changes were proposed in this pull request?\nUpgrade from kryo4 to kryo5.\nWhy are the changes needed?\nPerformance improvement, possible code improvements later based on new FieldSerializer.\nDoes this PR introduce any user-facing change?\nNo.\nHow was this patch tested?\nAll the qtests involve kryo usage as it's used for plan serialization/deserialization.", "createdAt": "2020-12-21T17:10:55Z", "url": "https://github.com/apache/hive/pull/1798", "merged": true, "mergeCommit": {"oid": "9256afbe7625ba4c3916501074a53c51f9d07e29"}, "closed": true, "closedAt": "2021-02-01T13:01:06Z", "author": {"login": "abstractdog"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdoajWcgBqjQxMzcyMjE1NDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd1w2TtgBqjQyNzE2OTIwODQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a759d8db472577c21d86a94968224e39f8395c97", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/a759d8db472577c21d86a94968224e39f8395c97", "committedDate": "2020-12-21T17:06:30Z", "message": "HIVE-22944: Upgrade to Kryo5"}, "afterCommit": {"oid": "6567cef52592faecaa99055b40a5549376d95f23", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/6567cef52592faecaa99055b40a5549376d95f23", "committedDate": "2020-12-21T18:50:08Z", "message": "HIVE-22944: Upgrade to Kryo5"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6567cef52592faecaa99055b40a5549376d95f23", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/6567cef52592faecaa99055b40a5549376d95f23", "committedDate": "2020-12-21T18:50:08Z", "message": "HIVE-22944: Upgrade to Kryo5"}, "afterCommit": {"oid": "aacc386571d9a573cb1a3d67ba3783e3783f6e5a", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/aacc386571d9a573cb1a3d67ba3783e3783f6e5a", "committedDate": "2020-12-27T16:12:23Z", "message": "HIVE-22944: Upgrade to Kryo5 - benchmark"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aacc386571d9a573cb1a3d67ba3783e3783f6e5a", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/aacc386571d9a573cb1a3d67ba3783e3783f6e5a", "committedDate": "2020-12-27T16:12:23Z", "message": "HIVE-22944: Upgrade to Kryo5 - benchmark"}, "afterCommit": {"oid": "f569fd31f5ad25998258ed3f6c477dc47adcb109", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/f569fd31f5ad25998258ed3f6c477dc47adcb109", "committedDate": "2020-12-28T09:17:54Z", "message": "HIVE-22944: Upgrade to Kryo5 - benchmark"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f569fd31f5ad25998258ed3f6c477dc47adcb109", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/f569fd31f5ad25998258ed3f6c477dc47adcb109", "committedDate": "2020-12-28T09:17:54Z", "message": "HIVE-22944: Upgrade to Kryo5 - benchmark"}, "afterCommit": {"oid": "d0452ecefbd73f88cea61f61deb47b573a671079", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/d0452ecefbd73f88cea61f61deb47b573a671079", "committedDate": "2021-01-07T14:40:54Z", "message": "HIVE-22944: Upgrade to Kryo5 - benchmark"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5d8c10e24f341a7be331e38738c9c3bec21b5659", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/5d8c10e24f341a7be331e38738c9c3bec21b5659", "committedDate": "2021-01-07T18:37:43Z", "message": "@Ignore"}, "afterCommit": {"oid": "0cebb875cdf3f830425a7c1c4c62f81fbfc07408", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/0cebb875cdf3f830425a7c1c4c62f81fbfc07408", "committedDate": "2021-01-08T06:42:55Z", "message": "@Ignore"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0cebb875cdf3f830425a7c1c4c62f81fbfc07408", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/0cebb875cdf3f830425a7c1c4c62f81fbfc07408", "committedDate": "2021-01-08T06:42:55Z", "message": "@Ignore"}, "afterCommit": {"oid": "a51fee9c4b5f8137ad83949d54858240dab221ec", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/a51fee9c4b5f8137ad83949d54858240dab221ec", "committedDate": "2021-01-14T08:37:31Z", "message": "@Ignore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczNTc4MTEz", "url": "https://github.com/apache/hive/pull/1798#pullrequestreview-573578113", "createdAt": "2021-01-21T17:39:54Z", "commit": {"oid": "a51fee9c4b5f8137ad83949d54858240dab221ec"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxNzozOTo1NFrOIYCNbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxNzo1MDo1MFrOIYCp2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjA3Mjk0Mg==", "bodyText": "nit: maybe move Sarg  Expr creation to separate method for consistency?", "url": "https://github.com/apache/hive/pull/1798#discussion_r562072942", "createdAt": "2021-01-21T17:39:54Z", "author": {"login": "pgaref"}, "path": "ql/src/test/org/apache/hadoop/hive/ql/io/sarg/TestConvertAstToSearchArg.java", "diffHunk": "@@ -2855,16 +2836,26 @@ public void TestBigintSarg() throws Exception {\n   }\n \n   @Test\n-  public void TestBooleanSarg() throws Exception {\n-    String serialAst =\n-        \"AQEAamF2YS51dGlsLkFycmF5TGlz9AECAQFvcmcuYXBhY2hlLmhhZG9vcC5oaXZlLnFsLnBsYW4uRXh\" +\n-            \"wck5vZGVHZW5lcmljRnVuY0Rlc+MBAQABAgECb3JnLmFwYWNoZS5oYWRvb3AuaGl2ZS5xbC5wbGFuLk\" +\n-            \"V4cHJOb2RlQ29sdW1uRGVz4wEBYrEAAAFib29sb3LjAQNvcmcuYXBhY2hlLmhhZG9vcC5oaXZlLnNlc\" +\n-            \"mRlMi50eXBlaW5mby5QcmltaXRpdmVUeXBlSW5m7wEBYm9vbGVh7gEEb3JnLmFwYWNoZS5oYWRvb3Au\" +\n-            \"aGl2ZS5xbC5wbGFuLkV4cHJOb2RlQ29uc3RhbnREZXPjAQEDCQUBAQVvcmcuYXBhY2hlLmhhZG9vcC5\" +\n-            \"oaXZlLnFsLnVkZi5nZW5lcmljLkdlbmVyaWNVREZPUEVxdWHsAQAAAYI9AUVRVUHMAQZvcmcuYXBhY2\" +\n-            \"hlLmhhZG9vcC5pby5Cb29sZWFuV3JpdGFibOUBAAABAwkBAgEBYrIAAAgBAwkBB29yZy5hcGFjaGUua\" +\n-            \"GFkb29wLmhpdmUucWwudWRmLmdlbmVyaWMuR2VuZXJpY1VERk9QQW7kAQEGAQAAAQMJ\";\n+  public void testBooleanSarg() throws Exception {\n+    ExprNodeDesc column1 =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51fee9c4b5f8137ad83949d54858240dab221ec"}, "originalPosition": 169}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjA3NDIwMQ==", "bodyText": "Does this mean this is a breaking change for Spark?", "url": "https://github.com/apache/hive/pull/1798#discussion_r562074201", "createdAt": "2021-01-21T17:41:45Z", "author": {"login": "pgaref"}, "path": "ql/src/test/org/apache/hadoop/hive/ql/exec/spark/TestSparkInvalidFileFormat.java", "diffHunk": "@@ -30,11 +30,13 @@\n import org.apache.hadoop.hive.ql.session.SessionState;\n \n import org.junit.Assert;\n+import org.junit.Ignore;\n import org.junit.Test;\n \n import java.io.File;\n import java.io.IOException;\n \n+@Ignore(\"HIVE-22944: Kryo 5 upgrade conflicts with Spark, which is not supported anymore\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51fee9c4b5f8137ad83949d54858240dab221ec"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjA3NTI1NQ==", "bodyText": "Maybe rename the method itself here as well?  something like obtainKryo() ?", "url": "https://github.com/apache/hive/pull/1798#discussion_r562075255", "createdAt": "2021-01-21T17:43:27Z", "author": {"login": "pgaref"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/SerializationUtilities.java", "diffHunk": "@@ -278,7 +284,7 @@ public Kryo create() {\n    * @return kryo instance\n    */\n   public static Kryo borrowKryo() {\n-    Kryo kryo = kryoPool.borrow();\n+    Kryo kryo = kryoPool.obtain();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51fee9c4b5f8137ad83949d54858240dab221ec"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjA3OTI0MA==", "bodyText": "Add a comment linking to Spark removal JIRA as a TODO?", "url": "https://github.com/apache/hive/pull/1798#discussion_r562079240", "createdAt": "2021-01-21T17:49:22Z", "author": {"login": "pgaref"}, "path": "pom.xml", "diffHunk": "@@ -170,7 +170,9 @@\n     <junit.jupiter.version>5.6.2</junit.jupiter.version>\n     <junit.vintage.version>5.6.2</junit.vintage.version>\n     <kafka.version>2.5.0</kafka.version>\n-    <kryo.version>4.0.2</kryo.version>\n+    <kryo.version>5.0.3</kryo.version>\n+    <kryo4.version>4.0.2</kryo4.version> <!-- old kryo, for spark-client -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51fee9c4b5f8137ad83949d54858240dab221ec"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjA3OTU3NA==", "bodyText": "This is cool! Shall we add a more complex Map for bench here and a perf number for reference?\nMaybe previous kryo4 vs kryo5?", "url": "https://github.com/apache/hive/pull/1798#discussion_r562079574", "createdAt": "2021-01-21T17:49:52Z", "author": {"login": "pgaref"}, "path": "itests/hive-jmh/src/main/java/org/apache/hive/benchmark/ql/exec/KryoBench.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hive.benchmark.ql.exec;\n+\n+import java.util.ArrayList;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Properties;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.hive.ql.exec.SerializationUtilities;\n+import org.apache.hadoop.hive.ql.exec.Utilities;\n+import org.apache.hadoop.hive.ql.exec.vector.VectorizedRowBatchCtx;\n+import org.apache.hadoop.hive.ql.io.orc.OrcInputFormat;\n+import org.apache.hadoop.hive.ql.io.orc.OrcOutputFormat;\n+import org.apache.hadoop.hive.ql.io.orc.OrcSerde;\n+import org.apache.hadoop.hive.ql.io.orc.TestInputOutputFormat.BigRowInspector;\n+import org.apache.hadoop.hive.ql.plan.MapWork;\n+import org.apache.hadoop.hive.ql.plan.PartitionDesc;\n+import org.apache.hadoop.hive.ql.plan.TableDesc;\n+import org.apache.hadoop.hive.ql.plan.VectorPartitionDesc;\n+import org.apache.hadoop.hive.serde.serdeConstants;\n+import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;\n+import org.apache.hadoop.hive.serde2.objectinspector.StructField;\n+import org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector;\n+import org.apache.hadoop.mapred.JobConf;\n+import org.openjdk.jmh.annotations.Benchmark;\n+import org.openjdk.jmh.annotations.BenchmarkMode;\n+import org.openjdk.jmh.annotations.Fork;\n+import org.openjdk.jmh.annotations.Measurement;\n+import org.openjdk.jmh.annotations.Mode;\n+import org.openjdk.jmh.annotations.OutputTimeUnit;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+import org.openjdk.jmh.annotations.Warmup;\n+import org.openjdk.jmh.runner.Runner;\n+import org.openjdk.jmh.runner.RunnerException;\n+import org.openjdk.jmh.runner.options.Options;\n+import org.openjdk.jmh.runner.options.OptionsBuilder;\n+\n+import com.google.common.io.ByteStreams;\n+\n+@State(Scope.Benchmark)\n+public class KryoBench {\n+\n+  @BenchmarkMode(Mode.AverageTime)\n+  @Fork(1)\n+  @State(Scope.Thread)\n+  @OutputTimeUnit(TimeUnit.MILLISECONDS)\n+  public static class BaseBench {\n+\n+    private MapWork mapWork;\n+\n+    @Setup\n+    public void setup() throws Exception {\n+      mapWork = KryoBench.mockMapWork(\"my_table\", 1000, new BigRowInspector());\n+    }\n+\n+    @Benchmark\n+    @Warmup(iterations = 2, time = 2, timeUnit = TimeUnit.SECONDS)\n+    @Measurement(iterations = 20, time = 2, timeUnit = TimeUnit.SECONDS)\n+    public void testSerializeMapWork() {\n+      SerializationUtilities.serializePlan(mapWork, ByteStreams.nullOutputStream());\n+    }\n+  }\n+\n+  public static void main(String[] args) throws RunnerException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51fee9c4b5f8137ad83949d54858240dab221ec"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjA4MDIxOA==", "bodyText": "Maybe add a comment why the above 3 lines are needed?", "url": "https://github.com/apache/hive/pull/1798#discussion_r562080218", "createdAt": "2021-01-21T17:50:50Z", "author": {"login": "pgaref"}, "path": "ql/src/java/org/apache/hadoop/hive/ql/exec/SerializationUtilities.java", "diffHunk": "@@ -224,51 +224,57 @@ public Registration readClass(Input input) {\n \n   private static final Object FAKE_REFERENCE = new Object();\n \n-  private static KryoFactory factory = new KryoFactory() {\n-    @Override\n-    public Kryo create() {\n-      KryoWithHooks kryo = new KryoWithHooks();\n-      kryo.register(java.sql.Date.class, new SqlDateSerializer());\n-      kryo.register(java.sql.Timestamp.class, new TimestampSerializer());\n-      kryo.register(TimestampTZ.class, new TimestampTZSerializer());\n-      kryo.register(Path.class, new PathSerializer());\n-      kryo.register(Arrays.asList(\"\").getClass(), new ArraysAsListSerializer());\n-      kryo.register(new java.util.ArrayList().subList(0,0).getClass(), new ArrayListSubListSerializer());\n-      kryo.register(CopyOnFirstWriteProperties.class, new CopyOnFirstWritePropertiesSerializer());\n-      kryo.register(PartitionDesc.class, new PartitionDescSerializer(kryo, PartitionDesc.class));\n-\n-      ((Kryo.DefaultInstantiatorStrategy) kryo.getInstantiatorStrategy())\n-          .setFallbackInstantiatorStrategy(\n-              new StdInstantiatorStrategy());\n-      removeField(kryo, AbstractOperatorDesc.class, \"colExprMap\");\n-      removeField(kryo, AbstractOperatorDesc.class, \"statistics\");\n-      kryo.register(ReduceWork.class);\n-      kryo.register(TableDesc.class);\n-      kryo.register(UnionOperator.class);\n-      kryo.register(FileSinkOperator.class);\n-      kryo.register(VectorFileSinkOperator.class);\n-      kryo.register(HiveIgnoreKeyTextOutputFormat.class);\n-      kryo.register(StandardConstantListObjectInspector.class);\n-      kryo.register(StandardConstantMapObjectInspector.class);\n-      kryo.register(StandardConstantStructObjectInspector.class);\n-      kryo.register(SequenceFileInputFormat.class);\n-      kryo.register(RCFileInputFormat.class);\n-      kryo.register(HiveSequenceFileOutputFormat.class);\n-      kryo.register(LlapOutputFormat.class);\n-      kryo.register(SparkEdgeProperty.class);\n-      kryo.register(SparkWork.class);\n-      kryo.register(Pair.class);\n-      kryo.register(MemoryMonitorInfo.class);\n-\n-      // This must be called after all the explicit register calls.\n-      return kryo.processHooks(kryoTypeHooks, globalHook);\n-    }\n-  };\n-\n   // Bounded queue could be specified here but that will lead to blocking.\n   // ConcurrentLinkedQueue is unbounded and will release soft referenced kryo instances under\n   // memory pressure.\n-  private static KryoPool kryoPool = new KryoPool.Builder(factory).softReferences().build();\n+  private static Pool<Kryo> kryoPool = new Pool<Kryo>(true, false, 8) {\n+    protected Kryo create() {\n+      return createNewKryo();\n+    }\n+  };\n+\n+  public static Kryo createNewKryo() {\n+    KryoWithHooks kryo = new KryoWithHooks();\n+\n+    kryo.setReferences(true);\n+    kryo.setCopyReferences(true);\n+    kryo.setRegistrationRequired(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a51fee9c4b5f8137ad83949d54858240dab221ec"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73d60e09bb97d7eac74afd5e528116962e4327c0", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/73d60e09bb97d7eac74afd5e528116962e4327c0", "committedDate": "2021-01-25T15:49:05Z", "message": "HIVE-22944: Upgrade to Kryo5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69392d8adcdb6c53df90180b1bf79ba1bec63b27", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/69392d8adcdb6c53df90180b1bf79ba1bec63b27", "committedDate": "2021-01-25T15:49:05Z", "message": "HIVE-22944: Upgrade to Kryo5 - benchmark"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d41336fe51f64d00ce1b3a59bb30c9c9bf7c8b7", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/3d41336fe51f64d00ce1b3a59bb30c9c9bf7c8b7", "committedDate": "2021-01-25T15:49:05Z", "message": "@Ignore"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a51fee9c4b5f8137ad83949d54858240dab221ec", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/a51fee9c4b5f8137ad83949d54858240dab221ec", "committedDate": "2021-01-14T08:37:31Z", "message": "@Ignore"}, "afterCommit": {"oid": "2a1ecd8393228885b66ccd2cab802b2706d3fa22", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/2a1ecd8393228885b66ccd2cab802b2706d3fa22", "committedDate": "2021-01-25T16:34:40Z", "message": "some changes after PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc2MTk1NzA2", "url": "https://github.com/apache/hive/pull/1798#pullrequestreview-576195706", "createdAt": "2021-01-26T10:04:42Z", "commit": {"oid": "2a1ecd8393228885b66ccd2cab802b2706d3fa22"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a1ecd8393228885b66ccd2cab802b2706d3fa22", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/2a1ecd8393228885b66ccd2cab802b2706d3fa22", "committedDate": "2021-01-25T16:34:40Z", "message": "some changes after PR comments"}, "afterCommit": {"oid": "cf5921b071b23928d4df1075b4d01ee1aad04854", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/cf5921b071b23928d4df1075b4d01ee1aad04854", "committedDate": "2021-01-28T17:57:04Z", "message": "some changes after PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf5921b071b23928d4df1075b4d01ee1aad04854", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/cf5921b071b23928d4df1075b4d01ee1aad04854", "committedDate": "2021-01-28T17:57:04Z", "message": "some changes after PR comments"}, "afterCommit": {"oid": "ec63776394ff2438e6d510566aa9820d1da7fa29", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/ec63776394ff2438e6d510566aa9820d1da7fa29", "committedDate": "2021-01-29T13:54:21Z", "message": "some changes after PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4accc489515366632ca84a77b3a99a99f2de19bb", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/4accc489515366632ca84a77b3a99a99f2de19bb", "committedDate": "2021-02-01T06:09:43Z", "message": "some changes after PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec63776394ff2438e6d510566aa9820d1da7fa29", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/ec63776394ff2438e6d510566aa9820d1da7fa29", "committedDate": "2021-01-29T13:54:21Z", "message": "some changes after PR comments"}, "afterCommit": {"oid": "4accc489515366632ca84a77b3a99a99f2de19bb", "author": {"user": {"login": "abstractdog", "name": "Bodor Laszlo"}}, "url": "https://github.com/apache/hive/commit/4accc489515366632ca84a77b3a99a99f2de19bb", "committedDate": "2021-02-01T06:09:43Z", "message": "some changes after PR comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2951, "cost": 1, "resetAt": "2021-10-29T19:57:52Z"}}}