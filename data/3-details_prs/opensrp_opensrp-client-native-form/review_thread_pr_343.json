{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MzI1OTI5", "number": 343, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyMDo1MFrODZghCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyMzo0MlrODZglFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDczNzM5OnYy", "diffSide": "RIGHT", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/activities/JsonFormActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyMDo1MFrOFf7pWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyMDo1MFrOFf7pWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyNzQxOA==", "bodyText": "Conventional naming of variables here", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/343#discussion_r369027418", "createdAt": "2020-01-21T14:20:50Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/activities/JsonFormActivity.java", "diffHunk": "@@ -309,7 +309,12 @@ public void refreshCalculationLogic(String parentKey, String childKey, boolean p\n \n                         String[] address = getAddressFromMap(widgetKey, stepName, JsonFormConstants.CALCULATION);\n                         if (address == null && curRelevance.has(JsonFormConstants.JSON_FORM_KEY.EX_RULES)) {\n-                            address = getRulesEngineAddress(curKey, curRelevance, curView, JsonFormConstants.CALCULATION);\n+                            JSONObject ex_rules = curRelevance.getJSONObject(JsonFormConstants.JSON_FORM_KEY.EX_RULES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477a5b8234ae60e999ae14c21ee80fdde30ef389"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDc0MTg0OnYy", "diffSide": "RIGHT", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/activities/JsonFormActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyMjowMVrOFf7sAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyMjowMVrOFf7sAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyODA5Ng==", "bodyText": "change the name of rulesFile to a address", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/343#discussion_r369028096", "createdAt": "2020-01-21T14:22:01Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/activities/JsonFormActivity.java", "diffHunk": "@@ -1665,11 +1665,14 @@ private ExObjectResult isExObjectRelevant(Facts curValueMap, JSONObject object)\n         return Utils.getConditionKeys(condition);\n     }\n \n-    private void updateCalculation(Facts valueMap, View view, String rulesFile) {\n-\n+    private void updateCalculation(Facts valueMap, View view, String[] rulesFile) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477a5b8234ae60e999ae14c21ee80fdde30ef389"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDc0Nzc0OnYy", "diffSide": "RIGHT", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/task/AttachRepeatingGroupTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyMzo0MlrOFf7vjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxNDoyMzo0MlrOFf7vjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTAyOTAwNw==", "bodyText": "any naming with relevance i guess should now be changed to calculation", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/343#discussion_r369029007", "createdAt": "2020-01-21T14:23:42Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/task/AttachRepeatingGroupTask.java", "diffHunk": "@@ -242,4 +244,58 @@ private void buildRelevanceWithUniqueIds(JSONObject element, String uniqueId) th\n         }\n \n     }\n+\n+    private void buildCalculationWithUniqueId(JSONObject element, String uniqueId) throws JSONException {\n+        JSONObject calculation = element.optJSONObject(CALCULATION);\n+        if (calculation != null) {\n+            if (calculation.has(RuleConstant.RULES_ENGINE) && widgetArgs != null) {\n+                JSONObject jsonRulesEngineObject = calculation.optJSONObject(RuleConstant.RULES_ENGINE);\n+                JSONObject jsonExRules = jsonRulesEngineObject.optJSONObject(JsonFormConstants.JSON_FORM_KEY.EX_RULES);\n+                String fileName = JsonFormConstants.RULE + jsonExRules.optString(RuleConstant.RULES_DYNAMIC);\n+\n+                if (!rulesFileMap.containsKey(fileName)) {\n+                    Iterable<Object> objectIterable = Utils.readYamlFile(fileName, widgetArgs.getContext());\n+                    List<Map<String, Object>> arrayList = new ArrayList<>();\n+                    while (objectIterable.iterator().hasNext()) {\n+                        Map<String, Object> map = (Map<String, Object>) objectIterable.iterator().next();\n+                        if (map != null) {\n+                            arrayList.add(map);\n+                        }\n+                    }\n+                    rulesFileMap.put(fileName, arrayList);\n+                }\n+\n+                List<Map<String, Object>> mapArrayList = rulesFileMap.get(fileName);\n+\n+                JSONArray jsonArrayRules = new JSONArray();\n+                JSONObject keyJsonObject = new JSONObject();\n+                keyJsonObject.put(KEY, uniqueId);\n+                jsonArrayRules.put(keyJsonObject);\n+                for (Map<String, Object> map : mapArrayList) {\n+                    JSONObject jsonRulesDynamicObject = new JSONObject();\n+                    String strCondition = (String) map.get(RuleConstant.CONDITION);\n+                    List<String> conditionKeys = Utils.getConditionKeys(strCondition);\n+                    for (String conditionKey : conditionKeys) {\n+                        strCondition = strCondition.replace(conditionKey, conditionKey + \"_\" + uniqueId);\n+                    }\n+                    jsonRulesDynamicObject.put(RuleConstant.NAME, String.valueOf(map.get(RuleConstant.NAME)).concat(\"_\").concat(uniqueId));\n+                    jsonRulesDynamicObject.put(RuleConstant.DESCRIPTION, String.valueOf(map.get(RuleConstant.DESCRIPTION)).concat(\"_\").concat(uniqueId));\n+                    jsonRulesDynamicObject.put(RuleConstant.PRIORITY, map.get(RuleConstant.PRIORITY));\n+                    jsonRulesDynamicObject.put(RuleConstant.ACTIONS, ((ArrayList<String>) map.get(RuleConstant.ACTIONS)).get(0));\n+                    jsonRulesDynamicObject.put(RuleConstant.CONDITION, String.valueOf(strCondition));\n+                    jsonArrayRules.put(jsonRulesDynamicObject);\n+                }\n+\n+                jsonExRules.put(RuleConstant.RULES_DYNAMIC, jsonArrayRules);\n+\n+            } else {\n+                String currRelevanceKey = calculation.keys().next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "477a5b8234ae60e999ae14c21ee80fdde30ef389"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2071, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}