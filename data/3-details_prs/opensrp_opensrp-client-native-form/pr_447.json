{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1MjY5NTc3", "number": 447, "title": "Testing Tuesday", "bodyText": "", "createdAt": "2020-07-07T09:04:05Z", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/447", "merged": true, "mergeCommit": {"oid": "cd20689a84ae066cdbb6e457d7ee79903ffd7774"}, "closed": true, "closedAt": "2020-07-07T14:43:59Z", "author": {"login": "dubdabasoduba"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyiCIqAH2gAyNDQ1MjY5NTc3OmJhNGU1YzRmMDdhZmRjYmQ2ZDVmNzYxMzkxNDY2YzM0NDgyYjU1MWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcymy1ogFqTQ0Mzk1MzAyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ba4e5c4f07afdcbd6d5f761391466c34482b551d", "author": {"user": {"login": "dubdabasoduba", "name": "Benjamin Mwalimu"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/ba4e5c4f07afdcbd6d5f761391466c34482b551d", "committedDate": "2020-07-07T09:01:24Z", "message": ":heavy_check_mark: update tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec517c7f0fe50e89c26df27f19349adb09820961", "author": {"user": {"login": "dubdabasoduba", "name": "Benjamin Mwalimu"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/ec517c7f0fe50e89c26df27f19349adb09820961", "committedDate": "2020-07-07T09:04:52Z", "message": "Merge branch 'master' of github.com:OpenSRP/opensrp-client-native-form into feature/testing_tuesday"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b79d278f83268b7350434ddc21c4b2d2f25021f", "author": {"user": {"login": "dubdabasoduba", "name": "Benjamin Mwalimu"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/9b79d278f83268b7350434ddc21c4b2d2f25021f", "committedDate": "2020-07-07T09:28:41Z", "message": ":heavy_check_mark: add basic rdt tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzM0MTI2", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/447#pullrequestreview-443734126", "createdAt": "2020-07-07T09:47:52Z", "commit": {"oid": "9b79d278f83268b7350434ddc21c4b2d2f25021f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOTo0Nzo1M1rOGt3LQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwOTo0OTo1NVrOGt3QIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc0MzEwNg==", "bodyText": "Are these necessary?", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/447#discussion_r450743106", "createdAt": "2020-07-07T09:47:53Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/BasicRDTCaptureFactoryTest.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.vijay.jsonwizard.widgets;\n+\n+import android.view.View;\n+\n+import com.vijay.jsonwizard.BaseTest;\n+import com.vijay.jsonwizard.activities.JsonFormActivity;\n+import com.vijay.jsonwizard.fragments.JsonFormFragment;\n+import com.vijay.jsonwizard.interfaces.CommonListener;\n+\n+import org.json.JSONObject;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+public class BasicRDTCaptureFactoryTest extends BaseTest {\n+    private BasicRDTCaptureFactory factory;\n+    @Mock\n+    private JsonFormActivity context;\n+    @Mock\n+    private JsonFormFragment formFragment;\n+    @Mock\n+    private CommonListener listener;\n+    @Mock\n+    private View rootLayout;\n+\n+    @Before\n+    public void setUp() {\n+        MockitoAnnotations.initMocks(this);\n+        factory = new BasicRDTCaptureFactory();\n+    }\n+\n+    @Test\n+    public void testRDTCaptureFactoryInstantiatesViewsCorrectly() throws Exception {\n+        String rdtCaptureString = \"{\\\"key\\\":\\\"rdt_capture\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"rdt_capture\\\",\\\"calculation\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-calculation-rules.yml\\\"}}},\\\"relevance\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-relevance-rules.yml\\\"}}},\\\"constraints\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-constraints-rules.yml\\\"}}}}\";\n+        JSONObject rdtCapture = new JSONObject(rdtCaptureString);\n+        Assert.assertNotNull(rdtCapture);\n+\n+        Assert.assertNotNull(factory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b79d278f83268b7350434ddc21c4b2d2f25021f"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc0MzQyNQ==", "bodyText": "Is this necessary", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/447#discussion_r450743425", "createdAt": "2020-07-07T09:48:27Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/BasicRDTCaptureFactoryTest.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.vijay.jsonwizard.widgets;\n+\n+import android.view.View;\n+\n+import com.vijay.jsonwizard.BaseTest;\n+import com.vijay.jsonwizard.activities.JsonFormActivity;\n+import com.vijay.jsonwizard.fragments.JsonFormFragment;\n+import com.vijay.jsonwizard.interfaces.CommonListener;\n+\n+import org.json.JSONObject;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+public class BasicRDTCaptureFactoryTest extends BaseTest {\n+    private BasicRDTCaptureFactory factory;\n+    @Mock\n+    private JsonFormActivity context;\n+    @Mock\n+    private JsonFormFragment formFragment;\n+    @Mock\n+    private CommonListener listener;\n+    @Mock\n+    private View rootLayout;\n+\n+    @Before\n+    public void setUp() {\n+        MockitoAnnotations.initMocks(this);\n+        factory = new BasicRDTCaptureFactory();\n+    }\n+\n+    @Test\n+    public void testRDTCaptureFactoryInstantiatesViewsCorrectly() throws Exception {\n+        String rdtCaptureString = \"{\\\"key\\\":\\\"rdt_capture\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"rdt_capture\\\",\\\"calculation\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-calculation-rules.yml\\\"}}},\\\"relevance\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-relevance-rules.yml\\\"}}},\\\"constraints\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-constraints-rules.yml\\\"}}}}\";\n+        JSONObject rdtCapture = new JSONObject(rdtCaptureString);\n+        Assert.assertNotNull(rdtCapture);\n+\n+        Assert.assertNotNull(factory);\n+        BasicRDTCaptureFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);\n+\n+        Mockito.doReturn(rootLayout).when(factorySpy).getRootLayout(context);\n+        Mockito.doReturn(false).when(factorySpy).isPermissionGiven();\n+\n+        List<View> viewList = factorySpy.getViewsFromJson(\"RandomStepName\", context, formFragment, rdtCapture, listener);\n+        Assert.assertNotNull(viewList);\n+        Assert.assertEquals(viewList.size(), 1);\n+    }\n+\n+    @Test\n+    public void testGetCustomTranslatableWidgetFields() {\n+        Assert.assertNotNull(factory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b79d278f83268b7350434ddc21c4b2d2f25021f"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc0MzY0Mw==", "bodyText": "Are these necessary?", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/447#discussion_r450743643", "createdAt": "2020-07-07T09:48:46Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/NumberSelectorFactoryTest.java", "diffHunk": "@@ -1,17 +1,66 @@\n package com.vijay.jsonwizard.widgets;\n \n+import android.content.res.Resources;\n+import android.view.View;\n+import android.widget.LinearLayout;\n+\n import com.vijay.jsonwizard.BaseTest;\n+import com.vijay.jsonwizard.activities.JsonFormActivity;\n+import com.vijay.jsonwizard.fragments.JsonFormFragment;\n+import com.vijay.jsonwizard.interfaces.CommonListener;\n+import com.vijay.jsonwizard.views.CustomTextView;\n \n+import org.json.JSONObject;\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n+import org.mockito.ArgumentMatchers;\n+import org.mockito.Mock;\n import org.mockito.Mockito;\n import org.mockito.MockitoAnnotations;\n \n+import java.util.List;\n+import java.util.Set;\n+\n public class NumberSelectorFactoryTest extends BaseTest {\n+    private NumberSelectorFactory factory;\n+    @Mock\n+    private JsonFormActivity context;\n+    @Mock\n+    private JsonFormFragment formFragment;\n+    @Mock\n+    private CommonListener listener;\n+    @Mock\n+    private LinearLayout rootLayout;\n+    @Mock\n+    private CustomTextView customTextView;\n+    @Mock\n+    private Resources resources;\n+\n     @Before\n     public void setUp() {\n         MockitoAnnotations.initMocks(this);\n+        factory = new NumberSelectorFactory();\n+    }\n+\n+    @Test\n+    public void testNumberSelectorFactoryInstantiatesViewsCorrectly() throws Exception {\n+        String numberSelectorFactoryString = \"{\\\"key\\\":\\\"user_form\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"numbers_selector\\\",\\\"number_of_selectors\\\":\\\"5\\\",\\\"start_number\\\":\\\"1\\\",\\\"max_value\\\":\\\"15\\\",\\\"text_size\\\":\\\"16px\\\",\\\"text_color\\\":\\\"#000000\\\",\\\"selected_text_color\\\":\\\"#ffffff\\\",\\\"v_required\\\":{\\\"value\\\":true},\\\"calculation\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-calculation-rules.yml\\\"}}},\\\"relevance\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-relevance-rules.yml\\\"}}},\\\"constraints\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-constraints-rules.yml\\\"}}}}\";\n+        JSONObject numberSelectorObject = new JSONObject(numberSelectorFactoryString);\n+        Assert.assertNotNull(numberSelectorFactoryString);\n+\n+        Assert.assertNotNull(factory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b79d278f83268b7350434ddc21c4b2d2f25021f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc0NDAzMw==", "bodyText": "its supposed to be the other way round", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/447#discussion_r450744033", "createdAt": "2020-07-07T09:49:27Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/NumberSelectorFactoryTest.java", "diffHunk": "@@ -1,17 +1,66 @@\n package com.vijay.jsonwizard.widgets;\n \n+import android.content.res.Resources;\n+import android.view.View;\n+import android.widget.LinearLayout;\n+\n import com.vijay.jsonwizard.BaseTest;\n+import com.vijay.jsonwizard.activities.JsonFormActivity;\n+import com.vijay.jsonwizard.fragments.JsonFormFragment;\n+import com.vijay.jsonwizard.interfaces.CommonListener;\n+import com.vijay.jsonwizard.views.CustomTextView;\n \n+import org.json.JSONObject;\n import org.junit.Assert;\n import org.junit.Before;\n import org.junit.Test;\n+import org.mockito.ArgumentMatchers;\n+import org.mockito.Mock;\n import org.mockito.Mockito;\n import org.mockito.MockitoAnnotations;\n \n+import java.util.List;\n+import java.util.Set;\n+\n public class NumberSelectorFactoryTest extends BaseTest {\n+    private NumberSelectorFactory factory;\n+    @Mock\n+    private JsonFormActivity context;\n+    @Mock\n+    private JsonFormFragment formFragment;\n+    @Mock\n+    private CommonListener listener;\n+    @Mock\n+    private LinearLayout rootLayout;\n+    @Mock\n+    private CustomTextView customTextView;\n+    @Mock\n+    private Resources resources;\n+\n     @Before\n     public void setUp() {\n         MockitoAnnotations.initMocks(this);\n+        factory = new NumberSelectorFactory();\n+    }\n+\n+    @Test\n+    public void testNumberSelectorFactoryInstantiatesViewsCorrectly() throws Exception {\n+        String numberSelectorFactoryString = \"{\\\"key\\\":\\\"user_form\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"numbers_selector\\\",\\\"number_of_selectors\\\":\\\"5\\\",\\\"start_number\\\":\\\"1\\\",\\\"max_value\\\":\\\"15\\\",\\\"text_size\\\":\\\"16px\\\",\\\"text_color\\\":\\\"#000000\\\",\\\"selected_text_color\\\":\\\"#ffffff\\\",\\\"v_required\\\":{\\\"value\\\":true},\\\"calculation\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-calculation-rules.yml\\\"}}},\\\"relevance\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-relevance-rules.yml\\\"}}},\\\"constraints\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-constraints-rules.yml\\\"}}}}\";\n+        JSONObject numberSelectorObject = new JSONObject(numberSelectorFactoryString);\n+        Assert.assertNotNull(numberSelectorFactoryString);\n+\n+        Assert.assertNotNull(factory);\n+        NumberSelectorFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);\n+\n+        Mockito.doReturn(rootLayout).when(factorySpy).getRootLayout(context);\n+        Mockito.doReturn(customTextView).when(factorySpy).getCustomTextView(ArgumentMatchers.eq(context), ArgumentMatchers.eq(numberSelectorObject), ArgumentMatchers.anyInt(), ArgumentMatchers.anyInt());\n+        Mockito.doReturn(resources).when(context).getResources();\n+        Mockito.doReturn(\"2\").when(customTextView).getText();\n+\n+        List<View> viewList = factorySpy.getViewsFromJson(\"RandomStepName\", context, formFragment, numberSelectorObject, listener);\n+        Assert.assertNotNull(viewList);\n+        Assert.assertEquals(viewList.size(), 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b79d278f83268b7350434ddc21c4b2d2f25021f"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc0NDM1Mg==", "bodyText": "its supposed to be the other way round", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/447#discussion_r450744352", "createdAt": "2020-07-07T09:49:55Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/BasicRDTCaptureFactoryTest.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package com.vijay.jsonwizard.widgets;\n+\n+import android.view.View;\n+\n+import com.vijay.jsonwizard.BaseTest;\n+import com.vijay.jsonwizard.activities.JsonFormActivity;\n+import com.vijay.jsonwizard.fragments.JsonFormFragment;\n+import com.vijay.jsonwizard.interfaces.CommonListener;\n+\n+import org.json.JSONObject;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+public class BasicRDTCaptureFactoryTest extends BaseTest {\n+    private BasicRDTCaptureFactory factory;\n+    @Mock\n+    private JsonFormActivity context;\n+    @Mock\n+    private JsonFormFragment formFragment;\n+    @Mock\n+    private CommonListener listener;\n+    @Mock\n+    private View rootLayout;\n+\n+    @Before\n+    public void setUp() {\n+        MockitoAnnotations.initMocks(this);\n+        factory = new BasicRDTCaptureFactory();\n+    }\n+\n+    @Test\n+    public void testRDTCaptureFactoryInstantiatesViewsCorrectly() throws Exception {\n+        String rdtCaptureString = \"{\\\"key\\\":\\\"rdt_capture\\\",\\\"openmrs_entity_parent\\\":\\\"\\\",\\\"openmrs_entity\\\":\\\"\\\",\\\"openmrs_entity_id\\\":\\\"\\\",\\\"type\\\":\\\"rdt_capture\\\",\\\"calculation\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-calculation-rules.yml\\\"}}},\\\"relevance\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-relevance-rules.yml\\\"}}},\\\"constraints\\\":{\\\"rules-engine\\\":{\\\"ex-rules\\\":{\\\"rules-file\\\":\\\"sample-constraints-rules.yml\\\"}}}}\";\n+        JSONObject rdtCapture = new JSONObject(rdtCaptureString);\n+        Assert.assertNotNull(rdtCapture);\n+\n+        Assert.assertNotNull(factory);\n+        BasicRDTCaptureFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);\n+\n+        Mockito.doReturn(rootLayout).when(factorySpy).getRootLayout(context);\n+        Mockito.doReturn(false).when(factorySpy).isPermissionGiven();\n+\n+        List<View> viewList = factorySpy.getViewsFromJson(\"RandomStepName\", context, formFragment, rdtCapture, listener);\n+        Assert.assertNotNull(viewList);\n+        Assert.assertEquals(viewList.size(), 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b79d278f83268b7350434ddc21c4b2d2f25021f"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df2a25d53e42f0ef817aa70c761890eca515c772", "author": {"user": {"login": "dubdabasoduba", "name": "Benjamin Mwalimu"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/df2a25d53e42f0ef817aa70c761890eca515c772", "committedDate": "2020-07-07T11:25:09Z", "message": ":ok_hand: code review requests fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzOTUzMDI4", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/447#pullrequestreview-443953028", "createdAt": "2020-07-07T14:34:13Z", "commit": {"oid": "df2a25d53e42f0ef817aa70c761890eca515c772"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2409, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}