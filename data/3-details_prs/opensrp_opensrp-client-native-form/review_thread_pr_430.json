{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNjM3MjM5", "number": 430, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjo0Njo1M1rOEFhWcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNjoxNDowNVrOEFy4zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjI0NzUyOnYy", "diffSide": "RIGHT", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/widgets/TimePickerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjo0Njo1M1rOGjwnLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjo0Njo1M1rOGjwnLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE0OTgwNg==", "bodyText": "could you catch a more specific exception?", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/430#discussion_r440149806", "createdAt": "2020-06-15T12:46:53Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/widgets/TimePickerFactory.java", "diffHunk": "@@ -78,12 +83,17 @@\n             views.add(dateViewRelativeLayout);\n \n         } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "730ab58c8855f05bc3503213794344877f29e0b0"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjI2MDY2OnYy", "diffSide": "RIGHT", "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/widgets/TimePickerFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjo1MDoyOVrOGjwvmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjo1MDoyOVrOGjwvmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1MTk2Mg==", "bodyText": "Could you catch a more specific exception?", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/430#discussion_r440151962", "createdAt": "2020-06-15T12:50:29Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/widgets/TimePickerFactory.java", "diffHunk": "@@ -133,77 +143,19 @@ public boolean onLongClick(View v) {\n             addRefreshLogicView(context, editText, relevance, constraints, calculations);\n             editText.setFocusable(false);\n         } catch (Exception e) {\n-            e.printStackTrace();\n-        }\n-\n-    }\n-\n-    private void addRefreshLogicView(Context context, MaterialEditText editText, String relevance, String constraints,\n-                                     String calculations) {\n-        if (!TextUtils.isEmpty(relevance) && context instanceof JsonApi) {\n-            editText.setTag(R.id.relevance, relevance);\n-            ((JsonApi) context).addSkipLogicView(editText);\n-        }\n-\n-        if (!TextUtils.isEmpty(constraints) && context instanceof JsonApi) {\n-            editText.setTag(R.id.constraints, constraints);\n-            ((JsonApi) context).addConstrainedView(editText);\n-        }\n-\n-        if (!TextUtils.isEmpty(calculations) && context instanceof JsonApi) {\n-            editText.setTag(R.id.calculation, calculations);\n-            ((JsonApi) context).addCalculationLogicView(editText);\n-        }\n-    }\n-\n-    @NonNull\n-    private GenericTextWatcher getGenericTextWatcher(String stepName, final Activity context, JsonFormFragment formFragment,\n-                                                     final MaterialEditText editText,\n-                                                     final TimePickerDialog timePickerDialog) {\n-        GenericTextWatcher genericTextWatcher = new GenericTextWatcher(stepName, formFragment, editText);\n-        genericTextWatcher.addOnFocusChangeListener(new View.OnFocusChangeListener() {\n-            @Override\n-            public void onFocusChange(View v, boolean hasFocus) {\n-                if (hasFocus) {\n-                    showTimePickerDialog(context, timePickerDialog);\n-                }\n-            }\n-        });\n-        return genericTextWatcher;\n-    }\n-\n-    private static void showTimePickerDialog(Activity context,\n-                                             TimePickerDialog timePickerDialog\n-    ) {\n-        FragmentTransaction ft = context.getFragmentManager().beginTransaction();\n-        Fragment prev = context.getFragmentManager().findFragmentByTag(TAG);\n-        if (prev != null) {\n-            ft.remove(prev);\n+            Timber.e(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "730ab58c8855f05bc3503213794344877f29e0b0"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjI3NTQ2OnYy", "diffSide": "RIGHT", "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/CountDownTimerFactoryTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjo1NDo0NFrOGjw5IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjo1NDo0NFrOGjw5IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1NDQwMA==", "bodyText": "Is this necessary?", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/430#discussion_r440154400", "createdAt": "2020-06-15T12:54:44Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/CountDownTimerFactoryTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.vijay.jsonwizard.widgets;\n+\n+import android.content.res.Resources;\n+import android.util.DisplayMetrics;\n+import android.view.View;\n+import android.widget.TextView;\n+\n+import com.emredavarci.circleprogressbar.CircleProgressBar;\n+import com.vijay.jsonwizard.BaseTest;\n+import com.vijay.jsonwizard.R;\n+import com.vijay.jsonwizard.activities.JsonFormActivity;\n+import com.vijay.jsonwizard.fragments.JsonFormFragment;\n+import com.vijay.jsonwizard.interfaces.CommonListener;\n+import com.vijay.jsonwizard.utils.FormUtils;\n+\n+import org.json.JSONObject;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+import org.powermock.reflect.Whitebox;\n+\n+import java.util.List;\n+\n+public class CountDownTimerFactoryTest extends BaseTest {\n+    private CountDownTimerFactory factory;\n+    @Mock\n+    private JsonFormActivity context;\n+\n+    @Mock\n+    private JsonFormFragment formFragment;\n+\n+    @Mock\n+    private Resources resources;\n+\n+    @Mock\n+    private CommonListener listener;\n+\n+    @Mock\n+    private View rootLayout;\n+\n+    @Mock\n+    private TextView labelView;\n+    @Mock\n+    private CircleProgressBar progressBar;\n+\n+    @Before\n+    public void setUp() {\n+        MockitoAnnotations.initMocks(this);\n+        factory = new CountDownTimerFactory();\n+    }\n+\n+    @Test\n+    public void testCountDownTimerFactoryInstantiatesViewsCorrectly() throws Exception {\n+        Assert.assertNotNull(factory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "730ab58c8855f05bc3503213794344877f29e0b0"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjI3NzM2OnYy", "diffSide": "RIGHT", "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/CountDownTimerFactoryTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjo1NToxMVrOGjw6Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxMjo1NToxMVrOGjw6Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE1NDY4Ng==", "bodyText": "Is this necessary?", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/430#discussion_r440154686", "createdAt": "2020-06-15T12:55:11Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/CountDownTimerFactoryTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package com.vijay.jsonwizard.widgets;\n+\n+import android.content.res.Resources;\n+import android.util.DisplayMetrics;\n+import android.view.View;\n+import android.widget.TextView;\n+\n+import com.emredavarci.circleprogressbar.CircleProgressBar;\n+import com.vijay.jsonwizard.BaseTest;\n+import com.vijay.jsonwizard.R;\n+import com.vijay.jsonwizard.activities.JsonFormActivity;\n+import com.vijay.jsonwizard.fragments.JsonFormFragment;\n+import com.vijay.jsonwizard.interfaces.CommonListener;\n+import com.vijay.jsonwizard.utils.FormUtils;\n+\n+import org.json.JSONObject;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+import org.powermock.reflect.Whitebox;\n+\n+import java.util.List;\n+\n+public class CountDownTimerFactoryTest extends BaseTest {\n+    private CountDownTimerFactory factory;\n+    @Mock\n+    private JsonFormActivity context;\n+\n+    @Mock\n+    private JsonFormFragment formFragment;\n+\n+    @Mock\n+    private Resources resources;\n+\n+    @Mock\n+    private CommonListener listener;\n+\n+    @Mock\n+    private View rootLayout;\n+\n+    @Mock\n+    private TextView labelView;\n+    @Mock\n+    private CircleProgressBar progressBar;\n+\n+    @Before\n+    public void setUp() {\n+        MockitoAnnotations.initMocks(this);\n+        factory = new CountDownTimerFactory();\n+    }\n+\n+    @Test\n+    public void testCountDownTimerFactoryInstantiatesViewsCorrectly() throws Exception {\n+        Assert.assertNotNull(factory);\n+        CountDownTimerFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);\n+\n+        FormUtils formUtils = new FormUtils();\n+        FormUtils formUtilsSpy = Mockito.spy(formUtils);\n+        Assert.assertNotNull(formUtilsSpy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "730ab58c8855f05bc3503213794344877f29e0b0"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NTEyMDc4OnYy", "diffSide": "RIGHT", "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/TimePickerFactoryTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNjoxNDowNVrOGkMmnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNjoxNDowNVrOGkMmnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDYwODQxMw==", "bodyText": "is this necessary?", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/430#discussion_r440608413", "createdAt": "2020-06-16T06:14:05Z", "author": {"login": "bennsimon"}, "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/widgets/TimePickerFactoryTest.java", "diffHunk": "@@ -0,0 +1,103 @@\n+package com.vijay.jsonwizard.widgets;\n+\n+import android.content.res.Resources;\n+import android.text.Editable;\n+import android.view.View;\n+import android.widget.RelativeLayout;\n+import android.widget.TextView;\n+\n+import com.rengwuxian.materialedittext.MaterialEditText;\n+import com.vijay.jsonwizard.BaseTest;\n+import com.vijay.jsonwizard.R;\n+import com.vijay.jsonwizard.activities.JsonFormActivity;\n+import com.vijay.jsonwizard.fragments.JsonFormFragment;\n+import com.vijay.jsonwizard.interfaces.CommonListener;\n+\n+import org.json.JSONObject;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.mockito.ArgumentMatchers;\n+import org.mockito.Mock;\n+import org.mockito.Mockito;\n+import org.mockito.MockitoAnnotations;\n+import org.powermock.reflect.Whitebox;\n+\n+import java.util.List;\n+import java.util.Locale;\n+import java.util.Set;\n+\n+public class TimePickerFactoryTest extends BaseTest {\n+    private TimePickerFactory factory;\n+    @Mock\n+    private JsonFormActivity context;\n+\n+    @Mock\n+    private JsonFormFragment formFragment;\n+\n+    @Mock\n+    private Resources resources;\n+\n+    @Mock\n+    private CommonListener listener;\n+\n+    @Mock\n+    private RelativeLayout rootLayout;\n+\n+    @Mock\n+    private MaterialEditText editText;\n+\n+    @Mock\n+    private TextView duration;\n+\n+    @Before\n+    public void setUp() {\n+        MockitoAnnotations.initMocks(this);\n+        factory = new TimePickerFactory();\n+    }\n+\n+    @Test\n+    public void testTimePickerFactoryInstantiatesViewsCorrectly() throws Exception {\n+        Assert.assertNotNull(factory);\n+        TimePickerFactory factorySpy = Mockito.spy(factory);\n+        Assert.assertNotNull(factorySpy);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ddb022ea3942982f225d879e3a712b4d3d97f27"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2057, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}