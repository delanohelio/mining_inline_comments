{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyOTA4NDg3", "number": 378, "title": "add disabling and hiding feature for views on form load", "bodyText": "", "createdAt": "2020-03-03T11:55:39Z", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/378", "merged": true, "mergeCommit": {"oid": "12827d78323afc65a1b88fcac698b66d9f5420b1"}, "closed": true, "closedAt": "2020-03-17T07:10:16Z", "author": {"login": "bennsimon"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKA_f-gH2gAyMzgyOTA4NDg3OjFhMTkwNjQ0MGUwOTk5ZWFmMjUwMTgwZTQ2Njk5MThmMGYwODg2MTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOdT8PgFqTM3NTc4MzMxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1a1906440e0999eaf250180e4669918f0f088610", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/1a1906440e0999eaf250180e4669918f0f088610", "committedDate": "2020-03-03T11:54:41Z", "message": "add disabling and hiding feature for views on form load"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cf761c47cebbc070164677667658586380b73e4", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/5cf761c47cebbc070164677667658586380b73e4", "committedDate": "2020-03-03T12:22:35Z", "message": "code re-arrangment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "875424f0be9ef4d044edd49a0955662b82cd64e8", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/875424f0be9ef4d044edd49a0955662b82cd64e8", "committedDate": "2020-03-03T13:58:12Z", "message": "code re-arrangment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50fe0c2e71863389c18a1db6b2f40ace0e196b48", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/50fe0c2e71863389c18a1db6b2f40ace0e196b48", "committedDate": "2020-03-03T14:00:39Z", "message": "code cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50b494259c9798b78eff45ada2d13a50260cd38c", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/50b494259c9798b78eff45ada2d13a50260cd38c", "committedDate": "2020-03-03T14:01:24Z", "message": "code cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79e31be8b12f7cf0efc17e3fa54cafdc9c1cb233", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/79e31be8b12f7cf0efc17e3fa54cafdc9c1cb233", "committedDate": "2020-03-03T14:30:34Z", "message": "code cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f884b037d2ace91ce054144b466b1a5f0a1f201d", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/f884b037d2ace91ce054144b466b1a5f0a1f201d", "committedDate": "2020-03-04T08:21:19Z", "message": "fix override"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a49d572c591c9fd2f46b8b434b609fdf1e6db2b8", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/a49d572c591c9fd2f46b8b434b609fdf1e6db2b8", "committedDate": "2020-03-05T14:33:55Z", "message": "fix condition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b69b6c458cf2eeb1bcbf0e693c31e179b90d8c65", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/b69b6c458cf2eeb1bcbf0e693c31e179b90d8c65", "committedDate": "2020-03-05T14:40:22Z", "message": "Merge branch 'master' into add-disable-hide-feature-on-forms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59f83ec381a9798602df9a2bc5bb020f4151f76f", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/59f83ec381a9798602df9a2bc5bb020f4151f76f", "committedDate": "2020-03-06T12:58:27Z", "message": "update snapshot version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNDIxNjY1", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/378#pullrequestreview-373421665", "createdAt": "2020-03-12T10:08:04Z", "commit": {"oid": "b69b6c458cf2eeb1bcbf0e693c31e179b90d8c65"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDowODowNFrOF1YQbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDoyNToyMlrOF1Y1kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxNjI2OA==", "bodyText": "Consider using this com.vijay.jsonwizard.utils.FormUtils#getMultiStepFormFields method to get all the form fields.", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/378#discussion_r391516268", "createdAt": "2020-03-12T10:08:04Z", "author": {"login": "dubdabasoduba"}, "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/activities/JsonFormActivity.java", "diffHunk": "@@ -540,7 +540,24 @@ public JSONObject getmJSONObject() {\n \n     @Override\n     public void setmJSONObject(JSONObject mJSONObject) {\n-        this.mJSONObject = mJSONObject;\n+        super.setmJSONObject(mJSONObject);\n+    }\n+\n+    @Override\n+    protected void initiateFormUpdate(JSONObject json) {\n+        if (getForm() != null && ((getForm().getHiddenFields() != null && !getForm().getHiddenFields().isEmpty()) || (getForm().getDisabledFields() != null && !getForm().getDisabledFields().isEmpty()))) {\n+            String strCount = json.optString(JsonFormConstants.COUNT);\n+            if (StringUtils.isNotBlank(strCount)) {\n+                int count = Integer.parseInt(strCount);\n+                for (int i = 1; i <= count; i++) {\n+                    JSONObject ithStepObject = json.optJSONObject(JsonFormConstants.STEP + i);\n+                    JSONArray fieldsJsonObject = ithStepObject.optJSONArray(JsonFormConstants.FIELDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69b6c458cf2eeb1bcbf0e693c31e179b90d8c65"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxOTIxMw==", "bodyText": "This implementations are not needed since whatever they are returning is already a public static method in the Utils", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/378#discussion_r391519213", "createdAt": "2020-03-12T10:13:42Z", "author": {"login": "dubdabasoduba"}, "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/activities/JsonFormActivity.java", "diffHunk": "@@ -623,6 +640,21 @@ public boolean skipBlankSteps() {\n         }\n     }\n \n+    @Override\n+    public void makeFieldHidden(JSONObject fieldObject) {\n+        Utils.makeFieldHidden(fieldObject);\n+    }\n+\n+    @Override\n+    public void makeFieldDisabled(JSONObject fieldObject) {\n+        Utils.makeFieldDisabled(fieldObject);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69b6c458cf2eeb1bcbf0e693c31e179b90d8c65"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyMTY4Mw==", "bodyText": "This initialization can be inline.", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/378#discussion_r391521683", "createdAt": "2020-03-12T10:18:03Z", "author": {"login": "dubdabasoduba"}, "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/activities/JsonFormBaseActivity.java", "diffHunk": "@@ -84,7 +84,8 @@ protected void onCreate(Bundle savedInstanceState) {\n \n     public void init(String json) {\n         try {\n-            setmJSONObject(new JSONObject(json));\n+            JSONObject formObject = new JSONObject(json);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69b6c458cf2eeb1bcbf0e693c31e179b90d8c65"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyMjIyMw==", "bodyText": "move encounter_type to a constants file", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/378#discussion_r391522223", "createdAt": "2020-03-12T10:18:59Z", "author": {"login": "dubdabasoduba"}, "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/activities/JsonFormBaseActivity.java", "diffHunk": "@@ -84,7 +84,8 @@ protected void onCreate(Bundle savedInstanceState) {\n \n     public void init(String json) {\n         try {\n-            setmJSONObject(new JSONObject(json));\n+            JSONObject formObject = new JSONObject(json);\n+            setmJSONObject(formObject);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69b6c458cf2eeb1bcbf0e693c31e179b90d8c65"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyMjczOQ==", "bodyText": "Please add java docs for public methods.", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/378#discussion_r391522739", "createdAt": "2020-03-12T10:19:58Z", "author": {"login": "dubdabasoduba"}, "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java", "diffHunk": "@@ -285,156 +284,42 @@ public static void resetRadioButtonsSpecifyText(RadioButton button) throws JSONE\n \n     }\n \n-    public List<String> createExpansionPanelChildren(JSONArray jsonArray) throws JSONException {\n-        List<String> stringList = new ArrayList<>();\n-        String label;\n-        for (int i = 0; i < jsonArray.length(); i++) {\n-            if (!jsonArray.isNull(i)) {\n-                JSONObject jsonObject = jsonArray.getJSONObject(i);\n-                if (jsonObject.has(JsonFormConstants.VALUES) && jsonObject.has(JsonFormConstants.LABEL) &&\n-                        !\"\".equals(jsonObject.getString(JsonFormConstants.LABEL))) {\n-                    //Get label and replace any colon in some labels. Not needed at this point\n-                    label = jsonObject.getString(JsonFormConstants.LABEL).replace(\":\", \"\");\n-                    stringList.add(label + \":\" + getStringValue(jsonObject));\n-                }\n-            }\n+    public static void updateSubFormFields(JSONObject subForm, Form form) {\n+        for (int i = 0; i < subForm.optJSONArray(JsonFormConstants.CONTENT_FORM).length(); i++) {\n+            handleFieldBehaviour(subForm.optJSONArray(JsonFormConstants.CONTENT_FORM).optJSONObject(i), form);\n         }\n-\n-        return stringList;\n     }\n \n-    private String getStringValue(JSONObject jsonObject) throws JSONException {\n-        StringBuilder value = new StringBuilder();\n-        if (jsonObject != null) {\n-            JSONArray jsonArray = jsonObject.getJSONArray(JsonFormConstants.VALUES);\n-            for (int i = 0; i < jsonArray.length(); i++) {\n-                String stringValue = jsonArray.getString(i);\n-                value.append(getValueFromSecondaryValues(stringValue));\n-                value.append(\", \");\n-            }\n-        }\n+    public static void handleFieldBehaviour(JSONObject fieldObject, Form form) {\n+        String key = fieldObject.optString(JsonFormConstants.KEY);\n \n-        return value.toString().replaceAll(\", $\", \"\");\n-    }\n-\n-    private String getValueFromSecondaryValues(String itemString) {\n-        String[] strings = itemString.split(\":\");\n-        return strings.length > 1 ? strings[1] : strings[0];\n-    }\n-\n-    protected String getKey(JSONObject object) throws JSONException {\n-        return object.has(RuleConstant.IS_RULE_CHECK) && object.getBoolean(RuleConstant.IS_RULE_CHECK) ?\n-                object.get(RuleConstant.STEP) + \"_\" + object.get(JsonFormConstants.KEY) : JsonFormConstants.VALUE;\n-    }\n-\n-    protected Object getValue(JSONObject object) throws JSONException {\n-        Object value;\n-\n-        if (object.has(JsonFormConstants.VALUE)) {\n-\n-            value = object.opt(JsonFormConstants.VALUE);\n-\n-            if (isNumberWidget(object)) {\n-                value = TextUtils.isEmpty(object.optString(JsonFormConstants.VALUE)) ? 0 :\n-                        processNumberValues(object.optString(JsonFormConstants.VALUE));\n-            } else if (value != null && !TextUtils.isEmpty(object.getString(JsonFormConstants.VALUE)) &&\n-                    canHaveNumber(object)) {\n-                value = processNumberValues(value);\n-            }\n-\n-        } else {\n-            value = isNumberWidget(object) ? 0 : \"\";\n+        if (form != null && form.getHiddenFields() != null && form.getHiddenFields().contains(key)) {\n+            makeFieldHidden(fieldObject);\n         }\n \n-        return value;\n-    }\n-\n-    protected boolean isNumberWidget(JSONObject object) throws JSONException {\n-        return object.has(JsonFormConstants.EDIT_TYPE) &&\n-                object.getString(JsonFormConstants.EDIT_TYPE).equals(JsonFormConstants.EDIT_TEXT_TYPE.NUMBER) ||\n-                object.getString(JsonFormConstants.TYPE).equals(JsonFormConstants.NUMBER_SELECTOR);\n-    }\n-\n-    protected Object processNumberValues(Object object) {\n-        Object jsonObject = object;\n-        try {\n-            if (jsonObject.toString().contains(\".\")) {\n-                jsonObject = String.valueOf((float) Math.round(Float.valueOf(jsonObject.toString()) * 100) / 100);\n-            } else {\n-                jsonObject = Integer.valueOf(jsonObject.toString());\n-            }\n-        } catch (NumberFormatException e) {\n-            //Log.e(TAG, \"Error trying to convert \" + object + \" to a number \", e);\n+        if (form != null && form.getDisabledFields() != null && form.getDisabledFields().contains(key)) {\n+            makeFieldDisabled(fieldObject);\n         }\n-        return jsonObject;\n-    }\n \n-    protected boolean canHaveNumber(JSONObject object) throws JSONException {\n-        return isNumberWidget(object) || object.getString(JsonFormConstants.TYPE).equals(JsonFormConstants.HIDDEN) ||\n-                object.getString(JsonFormConstants.TYPE).equals(JsonFormConstants.SPINNER);\n     }\n \n-    public void setChildKey(View view, String type, ExpansionPanelGenericPopupDialog genericPopupDialog) {\n-        String childKey;\n-        if (type != null && (type.equals(JsonFormConstants.CHECK_BOX) || type.equals(JsonFormConstants.NATIVE_RADIO_BUTTON) || type.equals(JsonFormConstants.EXTENDED_RADIO_BUTTON))) {\n-            childKey = (String) view.getTag(com.vijay.jsonwizard.R.id.childKey);\n-            genericPopupDialog.setChildKey(childKey);\n-        }\n-    }\n-\n-    public void setExpansionPanelDetails(String type, String toolbarHeader, String container, ExpansionPanelGenericPopupDialog genericPopupDialog) {\n-        if (type != null && type.equals(JsonFormConstants.EXPANSION_PANEL)) {\n-            genericPopupDialog.setHeader(toolbarHeader);\n-            genericPopupDialog.setContainer(container);\n+    public static void makeFieldDisabled(JSONObject fieldObject) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69b6c458cf2eeb1bcbf0e693c31e179b90d8c65"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyMjkzMg==", "bodyText": "Please add java docs for public methods.", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/378#discussion_r391522932", "createdAt": "2020-03-12T10:20:19Z", "author": {"login": "dubdabasoduba"}, "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/utils/Utils.java", "diffHunk": "@@ -285,156 +284,42 @@ public static void resetRadioButtonsSpecifyText(RadioButton button) throws JSONE\n \n     }\n \n-    public List<String> createExpansionPanelChildren(JSONArray jsonArray) throws JSONException {\n-        List<String> stringList = new ArrayList<>();\n-        String label;\n-        for (int i = 0; i < jsonArray.length(); i++) {\n-            if (!jsonArray.isNull(i)) {\n-                JSONObject jsonObject = jsonArray.getJSONObject(i);\n-                if (jsonObject.has(JsonFormConstants.VALUES) && jsonObject.has(JsonFormConstants.LABEL) &&\n-                        !\"\".equals(jsonObject.getString(JsonFormConstants.LABEL))) {\n-                    //Get label and replace any colon in some labels. Not needed at this point\n-                    label = jsonObject.getString(JsonFormConstants.LABEL).replace(\":\", \"\");\n-                    stringList.add(label + \":\" + getStringValue(jsonObject));\n-                }\n-            }\n+    public static void updateSubFormFields(JSONObject subForm, Form form) {\n+        for (int i = 0; i < subForm.optJSONArray(JsonFormConstants.CONTENT_FORM).length(); i++) {\n+            handleFieldBehaviour(subForm.optJSONArray(JsonFormConstants.CONTENT_FORM).optJSONObject(i), form);\n         }\n-\n-        return stringList;\n     }\n \n-    private String getStringValue(JSONObject jsonObject) throws JSONException {\n-        StringBuilder value = new StringBuilder();\n-        if (jsonObject != null) {\n-            JSONArray jsonArray = jsonObject.getJSONArray(JsonFormConstants.VALUES);\n-            for (int i = 0; i < jsonArray.length(); i++) {\n-                String stringValue = jsonArray.getString(i);\n-                value.append(getValueFromSecondaryValues(stringValue));\n-                value.append(\", \");\n-            }\n-        }\n+    public static void handleFieldBehaviour(JSONObject fieldObject, Form form) {\n+        String key = fieldObject.optString(JsonFormConstants.KEY);\n \n-        return value.toString().replaceAll(\", $\", \"\");\n-    }\n-\n-    private String getValueFromSecondaryValues(String itemString) {\n-        String[] strings = itemString.split(\":\");\n-        return strings.length > 1 ? strings[1] : strings[0];\n-    }\n-\n-    protected String getKey(JSONObject object) throws JSONException {\n-        return object.has(RuleConstant.IS_RULE_CHECK) && object.getBoolean(RuleConstant.IS_RULE_CHECK) ?\n-                object.get(RuleConstant.STEP) + \"_\" + object.get(JsonFormConstants.KEY) : JsonFormConstants.VALUE;\n-    }\n-\n-    protected Object getValue(JSONObject object) throws JSONException {\n-        Object value;\n-\n-        if (object.has(JsonFormConstants.VALUE)) {\n-\n-            value = object.opt(JsonFormConstants.VALUE);\n-\n-            if (isNumberWidget(object)) {\n-                value = TextUtils.isEmpty(object.optString(JsonFormConstants.VALUE)) ? 0 :\n-                        processNumberValues(object.optString(JsonFormConstants.VALUE));\n-            } else if (value != null && !TextUtils.isEmpty(object.getString(JsonFormConstants.VALUE)) &&\n-                    canHaveNumber(object)) {\n-                value = processNumberValues(value);\n-            }\n-\n-        } else {\n-            value = isNumberWidget(object) ? 0 : \"\";\n+        if (form != null && form.getHiddenFields() != null && form.getHiddenFields().contains(key)) {\n+            makeFieldHidden(fieldObject);\n         }\n \n-        return value;\n-    }\n-\n-    protected boolean isNumberWidget(JSONObject object) throws JSONException {\n-        return object.has(JsonFormConstants.EDIT_TYPE) &&\n-                object.getString(JsonFormConstants.EDIT_TYPE).equals(JsonFormConstants.EDIT_TEXT_TYPE.NUMBER) ||\n-                object.getString(JsonFormConstants.TYPE).equals(JsonFormConstants.NUMBER_SELECTOR);\n-    }\n-\n-    protected Object processNumberValues(Object object) {\n-        Object jsonObject = object;\n-        try {\n-            if (jsonObject.toString().contains(\".\")) {\n-                jsonObject = String.valueOf((float) Math.round(Float.valueOf(jsonObject.toString()) * 100) / 100);\n-            } else {\n-                jsonObject = Integer.valueOf(jsonObject.toString());\n-            }\n-        } catch (NumberFormatException e) {\n-            //Log.e(TAG, \"Error trying to convert \" + object + \" to a number \", e);\n+        if (form != null && form.getDisabledFields() != null && form.getDisabledFields().contains(key)) {\n+            makeFieldDisabled(fieldObject);\n         }\n-        return jsonObject;\n-    }\n \n-    protected boolean canHaveNumber(JSONObject object) throws JSONException {\n-        return isNumberWidget(object) || object.getString(JsonFormConstants.TYPE).equals(JsonFormConstants.HIDDEN) ||\n-                object.getString(JsonFormConstants.TYPE).equals(JsonFormConstants.SPINNER);\n     }\n \n-    public void setChildKey(View view, String type, ExpansionPanelGenericPopupDialog genericPopupDialog) {\n-        String childKey;\n-        if (type != null && (type.equals(JsonFormConstants.CHECK_BOX) || type.equals(JsonFormConstants.NATIVE_RADIO_BUTTON) || type.equals(JsonFormConstants.EXTENDED_RADIO_BUTTON))) {\n-            childKey = (String) view.getTag(com.vijay.jsonwizard.R.id.childKey);\n-            genericPopupDialog.setChildKey(childKey);\n-        }\n-    }\n-\n-    public void setExpansionPanelDetails(String type, String toolbarHeader, String container, ExpansionPanelGenericPopupDialog genericPopupDialog) {\n-        if (type != null && type.equals(JsonFormConstants.EXPANSION_PANEL)) {\n-            genericPopupDialog.setHeader(toolbarHeader);\n-            genericPopupDialog.setContainer(container);\n+    public static void makeFieldDisabled(JSONObject fieldObject) {\n+        try {\n+            makeFieldHidden(fieldObject);\n+            fieldObject.put(JsonFormConstants.DISABLED, true);\n+        } catch (JSONException e) {\n+            Timber.e(e);\n         }\n     }\n \n-    /**\n-     * Gets the {@link android.support.v4.app.FragmentTransaction} from the {@link Context} and removes any {@link android.support.v4.app.Fragment} with the tag `GenericPopup` from the transaction.\n-     * Then nullifies the stack by calling {@link android.support.v4.app.FragmentTransaction#addToBackStack(String)} with a null value.\n-     *\n-     * @param context {@link Activity} The activity context where this transaction called from\n-     * @return fragmentTransaction {@link android.support.v4.app.FragmentTransaction}\n-     */\n-    @NotNull\n-    public FragmentTransaction getFragmentTransaction(Activity context) {\n-        FragmentTransaction fragmentTransaction = context.getFragmentManager().beginTransaction();\n-        Fragment fragment = context.getFragmentManager().findFragmentByTag(\"GenericPopup\");\n-        if (fragment != null) {\n-            fragmentTransaction.remove(fragment);\n+    public static void makeFieldHidden(JSONObject fieldObject) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69b6c458cf2eeb1bcbf0e693c31e179b90d8c65"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyMzQzNw==", "bodyText": "Update to the correct version", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/378#discussion_r391523437", "createdAt": "2020-03-12T10:21:14Z", "author": {"login": "dubdabasoduba"}, "path": "gradle.properties", "diffHunk": "@@ -1,4 +1,4 @@\n-VERSION_NAME=1.7.24-SNAPSHOT\n+VERSION_NAME=1.7.24.23-SNAPSHOT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69b6c458cf2eeb1bcbf0e693c31e179b90d8c65"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyNTc3Ng==", "bodyText": "This are not required since their implementations are returning values of public static methods in a utils class", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/378#discussion_r391525776", "createdAt": "2020-03-12T10:25:22Z", "author": {"login": "dubdabasoduba"}, "path": "android-json-form-wizard/src/main/java/com/vijay/jsonwizard/interfaces/JsonApi.java", "diffHunk": "@@ -119,4 +120,10 @@ void addOnActivityRequestPermissionResultListener(Integer requestCode,\n     boolean isPreviousPressed();\n \n     void setPreviousPressed(boolean previousPressed);\n+\n+    void makeFieldHidden(JSONObject fieldObject);\n+\n+    void makeFieldDisabled(JSONObject fieldObject);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b69b6c458cf2eeb1bcbf0e693c31e179b90d8c65"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e0803890a58eb5e7b11edcbd5f52525bcb710a9", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/6e0803890a58eb5e7b11edcbd5f52525bcb710a9", "committedDate": "2020-03-13T14:11:35Z", "message": "code cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2a2e9098bc68a5cbebec63904c1b16bb05ee8c9", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/c2a2e9098bc68a5cbebec63904c1b16bb05ee8c9", "committedDate": "2020-03-13T14:12:16Z", "message": "Merge branch 'add-disable-hide-feature-on-forms' of github.com:OpenSRP/opensrp-client-native-form into add-disable-hide-feature-on-forms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de7c60cee5c51c06ea5162c1f839afc2eafdd43c", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/de7c60cee5c51c06ea5162c1f839afc2eafdd43c", "committedDate": "2020-03-13T14:39:56Z", "message": "Merge branch 'master' of github.com:OpenSRP/opensrp-client-native-form into add-disable-hide-feature-on-forms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "965dabbea4d44c3a040061f2816fc211b4ae836c", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/965dabbea4d44c3a040061f2816fc211b4ae836c", "committedDate": "2020-03-16T06:32:03Z", "message": "fix conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73e9f197e56a17b41e7851b2a09c7158f681c249", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/73e9f197e56a17b41e7851b2a09c7158f681c249", "committedDate": "2020-03-16T07:11:53Z", "message": "move form config methods to native forms"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2937dd2962f04fddfe5da401747235272bf01a4d", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/2937dd2962f04fddfe5da401747235272bf01a4d", "committedDate": "2020-03-16T07:29:06Z", "message": "add test for form config methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1Nzc0NTA3", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/378#pullrequestreview-375774507", "createdAt": "2020-03-17T06:47:42Z", "commit": {"oid": "2937dd2962f04fddfe5da401747235272bf01a4d"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b4c34e15da71350dd0de1d68dca3cd629190ed5", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/7b4c34e15da71350dd0de1d68dca3cd629190ed5", "committedDate": "2020-03-17T06:55:24Z", "message": "bump snapshot version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NzgzMzE1", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/378#pullrequestreview-375783315", "createdAt": "2020-03-17T07:10:03Z", "commit": {"oid": "7b4c34e15da71350dd0de1d68dca3cd629190ed5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2361, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}