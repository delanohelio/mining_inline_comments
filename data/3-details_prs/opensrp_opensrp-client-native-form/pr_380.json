{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1OTkxMTY4", "number": 380, "title": "Rule engine factory test", "bodyText": "", "createdAt": "2020-03-10T08:09:56Z", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/380", "merged": true, "mergeCommit": {"oid": "ee8ab0a0a06522514c7be3b4b81cdb98d05d6ea8"}, "closed": true, "closedAt": "2020-03-10T11:55:20Z", "author": {"login": "bennsimon"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMOG8rAH2gAyMzg1OTkxMTY4OmQ2YmYyMjkyMzQ4Mjc4ZGQ2OTdhMmY3MjhmMDI5MzJjMGFjY2E1Y2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMRMIygFqTM3MTg4NjI1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d6bf2292348278dd697a2f728f02932c0acca5cb", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/d6bf2292348278dd697a2f728f02932c0acca5cb", "committedDate": "2020-03-10T08:19:26Z", "message": "code cleanup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4ebb293803d5163cfb34aca283176adbe39eb9a", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/a4ebb293803d5163cfb34aca283176adbe39eb9a", "committedDate": "2020-03-10T08:08:55Z", "message": "add tests tt"}, "afterCommit": {"oid": "d6bf2292348278dd697a2f728f02932c0acca5cb", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/d6bf2292348278dd697a2f728f02932c0acca5cb", "committedDate": "2020-03-10T08:19:26Z", "message": "code cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "457084bb0f9a68e4514538e52721595ac2ae832b", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/457084bb0f9a68e4514538e52721595ac2ae832b", "committedDate": "2020-03-10T08:47:47Z", "message": "add tests for multiselectUtils"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxODc5ODQ0", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/380#pullrequestreview-371879844", "createdAt": "2020-03-10T11:43:31Z", "commit": {"oid": "457084bb0f9a68e4514538e52721595ac2ae832b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMTo0MzozMVrOF0LZVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMTo0Mzo0M1rOF0LZsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI1Njk4Mw==", "bodyText": "User timber.", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/380#discussion_r390256983", "createdAt": "2020-03-10T11:43:31Z", "author": {"login": "dubdabasoduba"}, "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/rules/RulesEngineFactoryTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.vijay.jsonwizard.rules;\n+\n+import android.content.Context;\n+\n+import org.jeasy.rules.api.Rule;\n+import org.jeasy.rules.api.Rules;\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.powermock.reflect.internal.WhiteboxImpl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class RulesEngineFactoryTest {\n+\n+    private RulesEngineFactory rulesEngineFactory;\n+\n+    @Before\n+    public void setUp() {\n+        rulesEngineFactory = new RulesEngineFactory();\n+    }\n+\n+    @Test\n+    public void testGetDynamicRulesFromJsonArrayShouldReturnNonEmptyRulesList() throws Exception {\n+        String expected = \"[\" +\n+                \"{\\\"key\\\":\\\"c29afdf9843e4c909a793dafd70e045b\\\"},\" +\n+                \"{\" +\n+                \"\\\"condition\\\":\\\"step1_diagnostic_test_c29afdf9843e4c909a793dafd70e045b == 'Pregnancy Test'\\\",\" +\n+                \"\\\"name\\\":\\\"step1_diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\\\",\" +\n+                \"\\\"description\\\":\\\"diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\\\",\" +\n+                \"\\\"priority\\\":1,\" +\n+                \"\\\"actions\\\":\\\"isRelevant = true\\\"\" +\n+                \"}\" +\n+                \"]\";\n+        try {\n+            JSONArray jsonArray = new JSONArray(expected);\n+            rulesEngineFactory = new RulesEngineFactory(Mockito.mock(Context.class), new HashMap<String, String>());\n+            Map<String, Rules> ruleMap = new HashMap<>();\n+            WhiteboxImpl.setInternalState(rulesEngineFactory, \"ruleMap\", ruleMap);\n+            Rules result = WhiteboxImpl.invokeMethod(rulesEngineFactory, \"getDynamicRulesFromJsonArray\", jsonArray);\n+            Rule ruleObject = result.iterator().next();\n+            Assert.assertEquals(\"step1_diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\", ruleObject.getName());\n+            Assert.assertEquals(\"diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\", ruleObject.getDescription());\n+            Assert.assertEquals(1, ruleObject.getPriority());\n+        } catch (JSONException e) {\n+            e.printStackTrace();\n+        }\n+    }\n+\n+    @Test\n+    public void testGetDynamicRulesFromJsonArrayShouldReturnNullIfKeyElementIsMissing() throws Exception {\n+        String expected = \"[\" +\n+                \"{\" +\n+                \"\\\"condition\\\":\\\"step1_diagnostic_test_c29afdf9843e4c909a793dafd70e045b == 'Pregnancy Test'\\\",\" +\n+                \"\\\"name\\\":\\\"step1_diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\\\",\" +\n+                \"\\\"description\\\":\\\"diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\\\",\" +\n+                \"\\\"priority\\\":1,\" +\n+                \"\\\"actions\\\":\\\"isRelevant = true\\\"\" +\n+                \"}\" +\n+                \"]\";\n+        try {\n+            JSONArray jsonArray = new JSONArray(expected);\n+            rulesEngineFactory = new RulesEngineFactory();\n+            Map<String, Rules> ruleMap = new HashMap<>();\n+            WhiteboxImpl.setInternalState(rulesEngineFactory, \"ruleMap\", ruleMap);\n+            Rules result = WhiteboxImpl.invokeMethod(rulesEngineFactory, \"getDynamicRulesFromJsonArray\", jsonArray);\n+            Assert.assertNull(result);\n+        } catch (JSONException e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457084bb0f9a68e4514538e52721595ac2ae832b"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI1NzA3NA==", "bodyText": "use timber", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/380#discussion_r390257074", "createdAt": "2020-03-10T11:43:43Z", "author": {"login": "dubdabasoduba"}, "path": "android-json-form-wizard/src/test/java/com/vijay/jsonwizard/rules/RulesEngineFactoryTest.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package com.vijay.jsonwizard.rules;\n+\n+import android.content.Context;\n+\n+import org.jeasy.rules.api.Rule;\n+import org.jeasy.rules.api.Rules;\n+import org.json.JSONArray;\n+import org.json.JSONException;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mockito;\n+import org.mockito.junit.MockitoJUnitRunner;\n+import org.powermock.reflect.internal.WhiteboxImpl;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+@RunWith(MockitoJUnitRunner.class)\n+public class RulesEngineFactoryTest {\n+\n+    private RulesEngineFactory rulesEngineFactory;\n+\n+    @Before\n+    public void setUp() {\n+        rulesEngineFactory = new RulesEngineFactory();\n+    }\n+\n+    @Test\n+    public void testGetDynamicRulesFromJsonArrayShouldReturnNonEmptyRulesList() throws Exception {\n+        String expected = \"[\" +\n+                \"{\\\"key\\\":\\\"c29afdf9843e4c909a793dafd70e045b\\\"},\" +\n+                \"{\" +\n+                \"\\\"condition\\\":\\\"step1_diagnostic_test_c29afdf9843e4c909a793dafd70e045b == 'Pregnancy Test'\\\",\" +\n+                \"\\\"name\\\":\\\"step1_diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\\\",\" +\n+                \"\\\"description\\\":\\\"diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\\\",\" +\n+                \"\\\"priority\\\":1,\" +\n+                \"\\\"actions\\\":\\\"isRelevant = true\\\"\" +\n+                \"}\" +\n+                \"]\";\n+        try {\n+            JSONArray jsonArray = new JSONArray(expected);\n+            rulesEngineFactory = new RulesEngineFactory(Mockito.mock(Context.class), new HashMap<String, String>());\n+            Map<String, Rules> ruleMap = new HashMap<>();\n+            WhiteboxImpl.setInternalState(rulesEngineFactory, \"ruleMap\", ruleMap);\n+            Rules result = WhiteboxImpl.invokeMethod(rulesEngineFactory, \"getDynamicRulesFromJsonArray\", jsonArray);\n+            Rule ruleObject = result.iterator().next();\n+            Assert.assertEquals(\"step1_diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\", ruleObject.getName());\n+            Assert.assertEquals(\"diagnostic_test_result_spinner_c29afdf9843e4c909a793dafd70e045b\", ruleObject.getDescription());\n+            Assert.assertEquals(1, ruleObject.getPriority());\n+        } catch (JSONException e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "457084bb0f9a68e4514538e52721595ac2ae832b"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eb344d5faabd935af05a36f395e7558808ce772", "author": {"user": {"login": "bennsimon", "name": "Benn Simon"}}, "url": "https://github.com/opensrp/opensrp-client-native-form/commit/9eb344d5faabd935af05a36f395e7558808ce772", "committedDate": "2020-03-10T11:47:20Z", "message": "code cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxODg2MjUy", "url": "https://github.com/opensrp/opensrp-client-native-form/pull/380#pullrequestreview-371886252", "createdAt": "2020-03-10T11:54:49Z", "commit": {"oid": "9eb344d5faabd935af05a36f395e7558808ce772"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2363, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}