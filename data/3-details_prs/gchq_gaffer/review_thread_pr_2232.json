{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1OTAyMTc3", "number": 2232, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjowMTo1M1rODZ4rNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjo0Mjo1OFrODZ5mog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDY5NTU2OnYy", "diffSide": "RIGHT", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjowMTo1M1rOFghm3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNzoxMzowMFrOFgkJ6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTM3NA==", "bodyText": "Don't think you need this second check", "url": "https://github.com/gchq/Gaffer/pull/2232#discussion_r369649374", "createdAt": "2020-01-22T16:01:53Z", "author": {"login": "d47853"}, "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java", "diffHunk": "@@ -513,4 +513,36 @@ private void makeAllGraphsFromCache() throws StorageException {\n             }\n         }\n     }\n+\n+    HashMap<String, Object> getAllGraphsAndAuths(final User user, final List<String> graphIds) {\n+        final HashMap<String, Object> graphIdFedAccessMap = new HashMap<>();\n+        storage.entrySet()\n+                .stream()\n+                .filter(entry -> isValidToView(user, entry.getKey()))\n+                .forEach(entry -> {\n+                    FederatedAccess federatedAccess = entry.getKey();\n+                    populateGraphIdAccessMap(graphIdFedAccessMap, graphIds, federatedAccess, entry.getValue());\n+                });\n+\n+        return graphIdFedAccessMap;\n+    }\n+\n+    private void populateGraphIdAccessMap(final HashMap<String, Object> graphIdFedAccessMap, final List<String> graphIds, final FederatedAccess federatedAccess, final Set<Graph> graphs) {\n+        for (final Graph g : graphs) {\n+            if (nonNull(graphIds) && !graphIds.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a9065ea0d479997e8f5ea215063ce47afaa921b"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY5MTExMw==", "bodyText": "As we have seen this is to change the logic.\nif no lists is provided I want all the graphs. I'll add text.", "url": "https://github.com/gchq/Gaffer/pull/2232#discussion_r369691113", "createdAt": "2020-01-22T17:13:00Z", "author": {"login": "GCHQDev404"}, "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java", "diffHunk": "@@ -513,4 +513,36 @@ private void makeAllGraphsFromCache() throws StorageException {\n             }\n         }\n     }\n+\n+    HashMap<String, Object> getAllGraphsAndAuths(final User user, final List<String> graphIds) {\n+        final HashMap<String, Object> graphIdFedAccessMap = new HashMap<>();\n+        storage.entrySet()\n+                .stream()\n+                .filter(entry -> isValidToView(user, entry.getKey()))\n+                .forEach(entry -> {\n+                    FederatedAccess federatedAccess = entry.getKey();\n+                    populateGraphIdAccessMap(graphIdFedAccessMap, graphIds, federatedAccess, entry.getValue());\n+                });\n+\n+        return graphIdFedAccessMap;\n+    }\n+\n+    private void populateGraphIdAccessMap(final HashMap<String, Object> graphIdFedAccessMap, final List<String> graphIds, final FederatedAccess federatedAccess, final Set<Graph> graphs) {\n+        for (final Graph g : graphs) {\n+            if (nonNull(graphIds) && !graphIds.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTM3NA=="}, "originalCommit": {"oid": "2a9065ea0d479997e8f5ea215063ce47afaa921b"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDgyMDQ3OnYy", "diffSide": "RIGHT", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjozNTo0NFrOFgi2Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjozNTo0NFrOFgi2Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2OTY2Mw==", "bodyText": "Why use the toString()? Isn't it simpler to just add the FederatedAccess object directly?", "url": "https://github.com/gchq/Gaffer/pull/2232#discussion_r369669663", "createdAt": "2020-01-22T16:35:44Z", "author": {"login": "d47853"}, "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/FederatedGraphStorage.java", "diffHunk": "@@ -513,4 +513,36 @@ private void makeAllGraphsFromCache() throws StorageException {\n             }\n         }\n     }\n+\n+    HashMap<String, Object> getAllGraphsAndAuths(final User user, final List<String> graphIds) {\n+        final HashMap<String, Object> graphIdFedAccessMap = new HashMap<>();\n+        storage.entrySet()\n+                .stream()\n+                .filter(entry -> isValidToView(user, entry.getKey()))\n+                .forEach(entry -> {\n+                    FederatedAccess federatedAccess = entry.getKey();\n+                    populateGraphIdAccessMap(graphIdFedAccessMap, graphIds, federatedAccess, entry.getValue());\n+                });\n+\n+        return graphIdFedAccessMap;\n+    }\n+\n+    private void populateGraphIdAccessMap(final HashMap<String, Object> graphIdFedAccessMap, final List<String> graphIds, final FederatedAccess federatedAccess, final Set<Graph> graphs) {\n+        for (final Graph g : graphs) {\n+            if (nonNull(graphIds) && !graphIds.isEmpty()) {\n+                if (graphIds.contains(g.getGraphId())) {\n+                    graphIdFedAccessMap.put(g.getGraphId(), federatedAccess.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a9065ea0d479997e8f5ea215063ce47afaa921b"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDgzNzg5OnYy", "diffSide": "RIGHT", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/GetAllGraphInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjo0MDoyNVrOFgjA-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjo0MDoyNVrOFgjA-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3MjQ0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2017-2019 Crown Copyright\n          \n          \n            \n             * Copyright 2020 Crown Copyright", "url": "https://github.com/gchq/Gaffer/pull/2232#discussion_r369672440", "createdAt": "2020-01-22T16:40:25Z", "author": {"login": "d47853"}, "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/GetAllGraphInfo.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2017-2019 Crown Copyright", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a9065ea0d479997e8f5ea215063ce47afaa921b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDg0MTEzOnYy", "diffSide": "RIGHT", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/GetAllGraphInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjo0MToxN1rOFgjDBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjo0MToxN1rOFgjDBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3Mjk2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Since(\"1.10.4\")\n          \n          \n            \n            @Since(\"1.10.6\")", "url": "https://github.com/gchq/Gaffer/pull/2232#discussion_r369672966", "createdAt": "2020-01-22T16:41:17Z", "author": {"login": "d47853"}, "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/GetAllGraphInfo.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2017-2019 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.federatedstore.operation;\n+\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import org.apache.commons.lang3.exception.CloneFailedException;\n+\n+import uk.gov.gchq.gaffer.operation.io.Output;\n+import uk.gov.gchq.gaffer.operation.serialisation.TypeReferenceImpl;\n+import uk.gov.gchq.koryphe.Since;\n+import uk.gov.gchq.koryphe.Summary;\n+\n+import java.util.Map;\n+\n+import static uk.gov.gchq.gaffer.federatedstore.FederatedStoreConstants.KEY_OPERATION_OPTIONS_GRAPH_IDS;\n+\n+/**\n+ * An Operation to get all the graphIds within scope of the FederatedStore.\n+ */\n+@JsonPropertyOrder(value = {\"class\"}, alphabetic = true)\n+@Since(\"1.10.4\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a9065ea0d479997e8f5ea215063ce47afaa921b"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDg0NDAzOnYy", "diffSide": "RIGHT", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/handler/impl/FederatedGetAllGraphInfoHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjo0MjowNVrOFgjE4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjo0MjowNVrOFgjE4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3MzQ0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2017-2019 Crown Copyright\n          \n          \n            \n             * Copyright 2020 Crown Copyright", "url": "https://github.com/gchq/Gaffer/pull/2232#discussion_r369673440", "createdAt": "2020-01-22T16:42:05Z", "author": {"login": "d47853"}, "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/handler/impl/FederatedGetAllGraphInfoHandler.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2017-2019 Crown Copyright", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a9065ea0d479997e8f5ea215063ce47afaa921b"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDg0NzcwOnYy", "diffSide": "RIGHT", "path": "store-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/GetAllGraphInfoTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjo0Mjo1OFrOFgjHHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjo0Mjo1OFrOFgjHHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY3NDAxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2017-2019 Crown Copyright\n          \n          \n            \n             * Copyright 2020 Crown Copyright", "url": "https://github.com/gchq/Gaffer/pull/2232#discussion_r369674012", "createdAt": "2020-01-22T16:42:58Z", "author": {"login": "d47853"}, "path": "store-implementation/federated-store/src/test/java/uk/gov/gchq/gaffer/federatedstore/operation/GetAllGraphInfoTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ * Copyright 2017-2019 Crown Copyright", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a9065ea0d479997e8f5ea215063ce47afaa921b"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4329, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}