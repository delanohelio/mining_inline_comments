{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzE0MzQ3", "number": 2267, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODoxNDo0MFrODzmlHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODoyNToxMVrODzm3TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NDM2MDYwOnYy", "diffSide": "RIGHT", "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/named/operation/AddNamedOperation.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODoxNDo0MFrOGIIiLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjoxMjo1N1rOGIRbbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4MTYxNQ==", "bodyText": "It might be better to have a list of labels so that named operations can have more than one.", "url": "https://github.com/gchq/Gaffer/pull/2267#discussion_r411181615", "createdAt": "2020-04-20T08:14:40Z", "author": {"login": "d47853"}, "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/named/operation/AddNamedOperation.java", "diffHunk": "@@ -54,9 +54,11 @@\n @Since(\"1.0.0\")\n @Summary(\"Adds a new named operation\")\n public class AddNamedOperation implements Operation, Operations<Operation> {\n+\n     @Required\n     private String operations;\n     private String operationName;\n+    private String label;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "238cb4a7c08b2e26f5578e9faa7390529d7f839f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIwMzM5Mw==", "bodyText": "Ah yes it did cross my mind. Having an Operation linked to many groups would be a better feature - and a lot more flexible - I'll make the change thanks", "url": "https://github.com/gchq/Gaffer/pull/2267#discussion_r411203393", "createdAt": "2020-04-20T08:47:39Z", "author": {"login": "macenturalxl1"}, "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/named/operation/AddNamedOperation.java", "diffHunk": "@@ -54,9 +54,11 @@\n @Since(\"1.0.0\")\n @Summary(\"Adds a new named operation\")\n public class AddNamedOperation implements Operation, Operations<Operation> {\n+\n     @Required\n     private String operations;\n     private String operationName;\n+    private String label;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4MTYxNQ=="}, "originalCommit": {"oid": "238cb4a7c08b2e26f5578e9faa7390529d7f839f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMyNzM0MQ==", "bodyText": "Done", "url": "https://github.com/gchq/Gaffer/pull/2267#discussion_r411327341", "createdAt": "2020-04-20T12:12:57Z", "author": {"login": "macenturalxl1"}, "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/named/operation/AddNamedOperation.java", "diffHunk": "@@ -54,9 +54,11 @@\n @Since(\"1.0.0\")\n @Summary(\"Adds a new named operation\")\n public class AddNamedOperation implements Operation, Operations<Operation> {\n+\n     @Required\n     private String operations;\n     private String operationName;\n+    private String label;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4MTYxNQ=="}, "originalCommit": {"oid": "238cb4a7c08b2e26f5578e9faa7390529d7f839f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NDQwNzE2OnYy", "diffSide": "RIGHT", "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/named/operation/NamedOperationDetail.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODoyNToxMVrOGII8rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjoxMzowM1rOGIRblA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4ODM5OA==", "bodyText": "For backwards compatability, these constructors should remain the same and instead call a new constructor which has the label as the final parameter.\nSo instead of adding a label in all the constructors:\npublic Example(String example1, String Label, String example2) {\n    this(example1, label, example2, null);\n}\n\npublic Example(String example1, String Label, String example2, Integer example3) {\n    // do stuff\n}\nLeave the constructors as they are so any existing code still call them and they maintain the same behaviour:\npublic Example(String example1, String example2) {\n    this(example1, example2, null, null);\n}\n\npublic Example(String example1, String example2, Integer example3) {\n    this(example1, example2, example3, null);\n}\n\n// new constructor\npublic Example(String example1, String example2, Integer example3, String label) {\n    // do stuff\n}", "url": "https://github.com/gchq/Gaffer/pull/2267#discussion_r411188398", "createdAt": "2020-04-20T08:25:11Z", "author": {"login": "d47853"}, "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/named/operation/NamedOperationDetail.java", "diffHunk": "@@ -58,15 +59,15 @@\n     public NamedOperationDetail() {\n     }\n \n-    public NamedOperationDetail(final String operationName, final String description, final String userId,\n+    public NamedOperationDetail(final String operationName, final String label, final String description, final String userId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "238cb4a7c08b2e26f5578e9faa7390529d7f839f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIwMzc0OA==", "bodyText": "Agreed, thanks for the recommended solution", "url": "https://github.com/gchq/Gaffer/pull/2267#discussion_r411203748", "createdAt": "2020-04-20T08:48:10Z", "author": {"login": "macenturalxl1"}, "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/named/operation/NamedOperationDetail.java", "diffHunk": "@@ -58,15 +59,15 @@\n     public NamedOperationDetail() {\n     }\n \n-    public NamedOperationDetail(final String operationName, final String description, final String userId,\n+    public NamedOperationDetail(final String operationName, final String label, final String description, final String userId,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4ODM5OA=="}, "originalCommit": {"oid": "238cb4a7c08b2e26f5578e9faa7390529d7f839f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMyNzM4MA==", "bodyText": "Done", "url": "https://github.com/gchq/Gaffer/pull/2267#discussion_r411327380", "createdAt": "2020-04-20T12:13:03Z", "author": {"login": "macenturalxl1"}, "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/named/operation/NamedOperationDetail.java", "diffHunk": "@@ -58,15 +59,15 @@\n     public NamedOperationDetail() {\n     }\n \n-    public NamedOperationDetail(final String operationName, final String description, final String userId,\n+    public NamedOperationDetail(final String operationName, final String label, final String description, final String userId,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE4ODM5OA=="}, "originalCommit": {"oid": "238cb4a7c08b2e26f5578e9faa7390529d7f839f"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4364, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}