{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MDM0NDU4", "number": 2289, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDowMzoxN1rOEOMNkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTo0Njo0MlrOERgmEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzE1NjAwOnYy", "diffSide": "RIGHT", "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/DemoMiniAccumuloStore.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDowMzoxN1rOGxM9Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMjo0MTozOFrOGx8PmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0NTczNQ==", "bodyText": "Not really sure this will work as you'll probably get a hostname resolution failure", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454245735", "createdAt": "2020-07-14T10:03:17Z", "author": {"login": "d47853"}, "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/DemoMiniAccumuloStore.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.accumulostore;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import uk.gov.gchq.gaffer.store.StoreException;\n+import uk.gov.gchq.gaffer.store.StoreProperties;\n+import uk.gov.gchq.gaffer.store.schema.Schema;\n+\n+import java.io.File;\n+\n+public class DemoMiniAccumuloStore extends AccumuloStore {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DemoMiniAccumuloStore.class);\n+    private static AccumuloTestClusterManager accumuloTestClusterManager;\n+    private static final AccumuloProperties ACCUMULO_PROPERTIES = new AccumuloProperties();\n+\n+    static {\n+        ACCUMULO_PROPERTIES.setStoreClass(MiniAccumuloStore.class);\n+        ACCUMULO_PROPERTIES.setZookeepers(\"aZookeeper\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5NTIzMQ==", "bodyText": "It works because the properties instance gets updated by the AccumuloTestClusterManager with the actual zookeeper details for the cluster it has started.\nThat is why I made accumuloTestClusterManager accept a StoreProperties object rather than a file reference or name: it allows the zookeeper details to be passed back seamlessly.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454395231", "createdAt": "2020-07-14T14:24:36Z", "author": {"login": "phosphorbronze50"}, "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/DemoMiniAccumuloStore.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.accumulostore;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import uk.gov.gchq.gaffer.store.StoreException;\n+import uk.gov.gchq.gaffer.store.StoreProperties;\n+import uk.gov.gchq.gaffer.store.schema.Schema;\n+\n+import java.io.File;\n+\n+public class DemoMiniAccumuloStore extends AccumuloStore {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DemoMiniAccumuloStore.class);\n+    private static AccumuloTestClusterManager accumuloTestClusterManager;\n+    private static final AccumuloProperties ACCUMULO_PROPERTIES = new AccumuloProperties();\n+\n+    static {\n+        ACCUMULO_PROPERTIES.setStoreClass(MiniAccumuloStore.class);\n+        ACCUMULO_PROPERTIES.setZookeepers(\"aZookeeper\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0NTczNQ=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkxMjcwNA==", "bodyText": "Okay in that case is it worth removing it to avoid confusion?", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454912704", "createdAt": "2020-07-15T09:19:56Z", "author": {"login": "d47853"}, "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/DemoMiniAccumuloStore.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.accumulostore;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import uk.gov.gchq.gaffer.store.StoreException;\n+import uk.gov.gchq.gaffer.store.StoreProperties;\n+import uk.gov.gchq.gaffer.store.schema.Schema;\n+\n+import java.io.File;\n+\n+public class DemoMiniAccumuloStore extends AccumuloStore {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DemoMiniAccumuloStore.class);\n+    private static AccumuloTestClusterManager accumuloTestClusterManager;\n+    private static final AccumuloProperties ACCUMULO_PROPERTIES = new AccumuloProperties();\n+\n+    static {\n+        ACCUMULO_PROPERTIES.setStoreClass(MiniAccumuloStore.class);\n+        ACCUMULO_PROPERTIES.setZookeepers(\"aZookeeper\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0NTczNQ=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAyMDQ0MQ==", "bodyText": "I shall remove it.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r455020441", "createdAt": "2020-07-15T12:41:38Z", "author": {"login": "phosphorbronze50"}, "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/DemoMiniAccumuloStore.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.accumulostore;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import uk.gov.gchq.gaffer.store.StoreException;\n+import uk.gov.gchq.gaffer.store.StoreProperties;\n+import uk.gov.gchq.gaffer.store.schema.Schema;\n+\n+import java.io.File;\n+\n+public class DemoMiniAccumuloStore extends AccumuloStore {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DemoMiniAccumuloStore.class);\n+    private static AccumuloTestClusterManager accumuloTestClusterManager;\n+    private static final AccumuloProperties ACCUMULO_PROPERTIES = new AccumuloProperties();\n+\n+    static {\n+        ACCUMULO_PROPERTIES.setStoreClass(MiniAccumuloStore.class);\n+        ACCUMULO_PROPERTIES.setZookeepers(\"aZookeeper\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0NTczNQ=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzE3NjQzOnYy", "diffSide": "RIGHT", "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/DemoMiniAccumuloStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDowOTozN1rOGxNKGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDoyNDoyOFrOGxWE4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0ODk4NA==", "bodyText": "Won't this fail because the manager checks the class is Mini or SingleUseMini? Would changing the class to extend Mini and modifying the check to also look at extensions work?", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454248984", "createdAt": "2020-07-14T10:09:37Z", "author": {"login": "d47853"}, "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/DemoMiniAccumuloStore.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.accumulostore;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import uk.gov.gchq.gaffer.store.StoreException;\n+import uk.gov.gchq.gaffer.store.StoreProperties;\n+import uk.gov.gchq.gaffer.store.schema.Schema;\n+\n+import java.io.File;\n+\n+public class DemoMiniAccumuloStore extends AccumuloStore {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DemoMiniAccumuloStore.class);\n+    private static AccumuloTestClusterManager accumuloTestClusterManager;\n+    private static final AccumuloProperties ACCUMULO_PROPERTIES = new AccumuloProperties();\n+\n+    static {\n+        ACCUMULO_PROPERTIES.setStoreClass(MiniAccumuloStore.class);\n+        ACCUMULO_PROPERTIES.setZookeepers(\"aZookeeper\");\n+        ACCUMULO_PROPERTIES.setUser(\"user01\");\n+        ACCUMULO_PROPERTIES.setPassword(\"password01\");\n+        ACCUMULO_PROPERTIES.setInstance(\"instance01\");\n+\n+        final String tmpDirectoryProperty = System.getProperty(\"java.io.tmpdir\");\n+        File storeFolder = null;\n+        if (null != tmpDirectoryProperty) {\n+            storeFolder = new File(tmpDirectoryProperty);\n+        } else {\n+            LOGGER.error(DemoMiniAccumuloStore.class + \": Could not create storeFolder directory\");\n+        }\n+\n+        accumuloTestClusterManager = new AccumuloTestClusterManager(ACCUMULO_PROPERTIES, storeFolder.getAbsolutePath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5NTEwNg==", "bodyText": "The manager checks the class specified in the properties which has been set to MiniAccumuloStore so it works OK.\nDemo is only intended for very limited and specific use (hence the hard coding of the properties) and not for general use as a store.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454395106", "createdAt": "2020-07-14T14:24:28Z", "author": {"login": "phosphorbronze50"}, "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/DemoMiniAccumuloStore.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.accumulostore;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import uk.gov.gchq.gaffer.store.StoreException;\n+import uk.gov.gchq.gaffer.store.StoreProperties;\n+import uk.gov.gchq.gaffer.store.schema.Schema;\n+\n+import java.io.File;\n+\n+public class DemoMiniAccumuloStore extends AccumuloStore {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DemoMiniAccumuloStore.class);\n+    private static AccumuloTestClusterManager accumuloTestClusterManager;\n+    private static final AccumuloProperties ACCUMULO_PROPERTIES = new AccumuloProperties();\n+\n+    static {\n+        ACCUMULO_PROPERTIES.setStoreClass(MiniAccumuloStore.class);\n+        ACCUMULO_PROPERTIES.setZookeepers(\"aZookeeper\");\n+        ACCUMULO_PROPERTIES.setUser(\"user01\");\n+        ACCUMULO_PROPERTIES.setPassword(\"password01\");\n+        ACCUMULO_PROPERTIES.setInstance(\"instance01\");\n+\n+        final String tmpDirectoryProperty = System.getProperty(\"java.io.tmpdir\");\n+        File storeFolder = null;\n+        if (null != tmpDirectoryProperty) {\n+            storeFolder = new File(tmpDirectoryProperty);\n+        } else {\n+            LOGGER.error(DemoMiniAccumuloStore.class + \": Could not create storeFolder directory\");\n+        }\n+\n+        accumuloTestClusterManager = new AccumuloTestClusterManager(ACCUMULO_PROPERTIES, storeFolder.getAbsolutePath());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0ODk4NA=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzE3Nzc1OnYy", "diffSide": "RIGHT", "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/SingleUseMiniAccumuloStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDoxMDowMVrOGxNK9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDoyNDoyMlrOGxWEpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0OTIwNA==", "bodyText": "Log just in case", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454249204", "createdAt": "2020-07-14T10:10:01Z", "author": {"login": "d47853"}, "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/SingleUseMiniAccumuloStore.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.accumulostore;\n+\n+import org.apache.accumulo.core.client.AccumuloException;\n+import org.apache.accumulo.core.client.AccumuloSecurityException;\n+import org.apache.accumulo.core.client.TableNotFoundException;\n+\n+import uk.gov.gchq.gaffer.store.StoreException;\n+import uk.gov.gchq.gaffer.store.StoreProperties;\n+import uk.gov.gchq.gaffer.store.schema.Schema;\n+\n+public class SingleUseMiniAccumuloStore extends MiniAccumuloStore {\n+    @Override\n+    public void preInitialise(final String graphId, final Schema schema, final StoreProperties properties)\n+            throws StoreException {\n+        // Initialise is deliberately called both before and after the deletion of the table.\n+        // The first call sets up a connection to the MiniAccumulo instance\n+        // The second call is used to re-create the table\n+\n+        try {\n+            super.preInitialise(graphId, schema, properties);\n+        } catch (final StoreException e) {\n+            // This is due to an invalid table, but the table is about to be deleted to we can ignore it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5NTA0NA==", "bodyText": "Logger INFO message added.\nThis is a hangover from the MockAccumuloStore on which this method is closely based.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454395044", "createdAt": "2020-07-14T14:24:22Z", "author": {"login": "phosphorbronze50"}, "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/SingleUseMiniAccumuloStore.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.accumulostore;\n+\n+import org.apache.accumulo.core.client.AccumuloException;\n+import org.apache.accumulo.core.client.AccumuloSecurityException;\n+import org.apache.accumulo.core.client.TableNotFoundException;\n+\n+import uk.gov.gchq.gaffer.store.StoreException;\n+import uk.gov.gchq.gaffer.store.StoreProperties;\n+import uk.gov.gchq.gaffer.store.schema.Schema;\n+\n+public class SingleUseMiniAccumuloStore extends MiniAccumuloStore {\n+    @Override\n+    public void preInitialise(final String graphId, final Schema schema, final StoreProperties properties)\n+            throws StoreException {\n+        // Initialise is deliberately called both before and after the deletion of the table.\n+        // The first call sets up a connection to the MiniAccumulo instance\n+        // The second call is used to re-create the table\n+\n+        try {\n+            super.preInitialise(graphId, schema, properties);\n+        } catch (final StoreException e) {\n+            // This is due to an invalid table, but the table is about to be deleted to we can ignore it.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0OTIwNA=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzE3ODkwOnYy", "diffSide": "RIGHT", "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/SingleUseMiniAccumuloStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDoxMDoxN1rOGxNLlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDoyODoxMlrOGxWQBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0OTM2Nw==", "bodyText": "Same as above", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454249367", "createdAt": "2020-07-14T10:10:17Z", "author": {"login": "d47853"}, "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/SingleUseMiniAccumuloStore.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.accumulostore;\n+\n+import org.apache.accumulo.core.client.AccumuloException;\n+import org.apache.accumulo.core.client.AccumuloSecurityException;\n+import org.apache.accumulo.core.client.TableNotFoundException;\n+\n+import uk.gov.gchq.gaffer.store.StoreException;\n+import uk.gov.gchq.gaffer.store.StoreProperties;\n+import uk.gov.gchq.gaffer.store.schema.Schema;\n+\n+public class SingleUseMiniAccumuloStore extends MiniAccumuloStore {\n+    @Override\n+    public void preInitialise(final String graphId, final Schema schema, final StoreProperties properties)\n+            throws StoreException {\n+        // Initialise is deliberately called both before and after the deletion of the table.\n+        // The first call sets up a connection to the MiniAccumulo instance\n+        // The second call is used to re-create the table\n+\n+        try {\n+            super.preInitialise(graphId, schema, properties);\n+        } catch (final StoreException e) {\n+            // This is due to an invalid table, but the table is about to be deleted to we can ignore it.\n+        }\n+\n+        try {\n+            getConnection().tableOperations().delete(getTableName());\n+        } catch (final StoreException | AccumuloException | AccumuloSecurityException | TableNotFoundException e) {\n+            // no action required", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5Nzk1OA==", "bodyText": "Same as above, except a WARN message this time.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454397958", "createdAt": "2020-07-14T14:28:12Z", "author": {"login": "phosphorbronze50"}, "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/SingleUseMiniAccumuloStore.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.accumulostore;\n+\n+import org.apache.accumulo.core.client.AccumuloException;\n+import org.apache.accumulo.core.client.AccumuloSecurityException;\n+import org.apache.accumulo.core.client.TableNotFoundException;\n+\n+import uk.gov.gchq.gaffer.store.StoreException;\n+import uk.gov.gchq.gaffer.store.StoreProperties;\n+import uk.gov.gchq.gaffer.store.schema.Schema;\n+\n+public class SingleUseMiniAccumuloStore extends MiniAccumuloStore {\n+    @Override\n+    public void preInitialise(final String graphId, final Schema schema, final StoreProperties properties)\n+            throws StoreException {\n+        // Initialise is deliberately called both before and after the deletion of the table.\n+        // The first call sets up a connection to the MiniAccumulo instance\n+        // The second call is used to re-create the table\n+\n+        try {\n+            super.preInitialise(graphId, schema, properties);\n+        } catch (final StoreException e) {\n+            // This is due to an invalid table, but the table is about to be deleted to we can ignore it.\n+        }\n+\n+        try {\n+            getConnection().tableOperations().delete(getTableName());\n+        } catch (final StoreException | AccumuloException | AccumuloSecurityException | TableNotFoundException e) {\n+            // no action required", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI0OTM2Nw=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzE4NzMyOnYy", "diffSide": "RIGHT", "path": "store-implementation/accumulo-store/src/test/java/uk/gov/gchq/gaffer/accumulostore/AccumuloStoreTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDoxMjo1N1rOGxNQ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDozNzoxNVrOGxWsEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1MDcwOA==", "bodyText": "Can you use two temporary folders to skip this?", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454250708", "createdAt": "2020-07-14T10:12:57Z", "author": {"login": "d47853"}, "path": "store-implementation/accumulo-store/src/test/java/uk/gov/gchq/gaffer/accumulostore/AccumuloStoreTest.java", "diffHunk": "@@ -102,21 +109,41 @@\n import static uk.gov.gchq.gaffer.store.StoreTrait.VISIBILITY;\n \n public class AccumuloStoreTest {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AccumuloStoreTest.class);\n     private static final String BYTE_ENTITY_GRAPH = \"byteEntityGraph\";\n     private static final String GAFFER_1_GRAPH = \"gaffer1Graph\";\n-    private static SingleUseMockAccumuloStore byteEntityStore;\n-    private static SingleUseMockAccumuloStore gaffer1KeyStore;\n+    private static AccumuloStore byteEntityStore;\n+    private static AccumuloStore gaffer1KeyStore;\n     private static final Schema SCHEMA = Schema.fromJson(StreamUtil.schemas(AccumuloStoreTest.class));\n     private static final AccumuloProperties PROPERTIES = AccumuloProperties.loadStoreProperties(StreamUtil.storeProps(AccumuloStoreTest.class));\n     private static final AccumuloProperties CLASSIC_PROPERTIES = AccumuloProperties.loadStoreProperties(StreamUtil.openStream(AccumuloStoreTest.class, \"/accumuloStoreClassicKeys.properties\"));\n+    private static AccumuloTestClusterManager accumuloTestClusterManagerByteEntity = null;\n+    private static AccumuloTestClusterManager accumuloTestClusterManagerGaffer1Key = null;\n+\n+    @ClassRule\n+    public static TemporaryFolder storeBaseFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n \n     @Rule\n     public ExpectedException thrown = ExpectedException.none();\n \n     @BeforeClass\n     public static void setup() {\n-        byteEntityStore = new SingleUseMockAccumuloStore();\n-        gaffer1KeyStore = new SingleUseMockAccumuloStore();\n+        File storeFolder1 = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQwNTEzNg==", "bodyText": "I have found that sometimes multiple TemporaryFolder entries get set by JUnit4 with the same file store location.\nAdditionally, TemporaryFolder is deprecated in the coming JUnit5 changes so this will be quite short lived anyway.\nI will leave as is, if that is OK with you.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454405136", "createdAt": "2020-07-14T14:37:15Z", "author": {"login": "phosphorbronze50"}, "path": "store-implementation/accumulo-store/src/test/java/uk/gov/gchq/gaffer/accumulostore/AccumuloStoreTest.java", "diffHunk": "@@ -102,21 +109,41 @@\n import static uk.gov.gchq.gaffer.store.StoreTrait.VISIBILITY;\n \n public class AccumuloStoreTest {\n+    private static final Logger LOGGER = LoggerFactory.getLogger(AccumuloStoreTest.class);\n     private static final String BYTE_ENTITY_GRAPH = \"byteEntityGraph\";\n     private static final String GAFFER_1_GRAPH = \"gaffer1Graph\";\n-    private static SingleUseMockAccumuloStore byteEntityStore;\n-    private static SingleUseMockAccumuloStore gaffer1KeyStore;\n+    private static AccumuloStore byteEntityStore;\n+    private static AccumuloStore gaffer1KeyStore;\n     private static final Schema SCHEMA = Schema.fromJson(StreamUtil.schemas(AccumuloStoreTest.class));\n     private static final AccumuloProperties PROPERTIES = AccumuloProperties.loadStoreProperties(StreamUtil.storeProps(AccumuloStoreTest.class));\n     private static final AccumuloProperties CLASSIC_PROPERTIES = AccumuloProperties.loadStoreProperties(StreamUtil.openStream(AccumuloStoreTest.class, \"/accumuloStoreClassicKeys.properties\"));\n+    private static AccumuloTestClusterManager accumuloTestClusterManagerByteEntity = null;\n+    private static AccumuloTestClusterManager accumuloTestClusterManagerGaffer1Key = null;\n+\n+    @ClassRule\n+    public static TemporaryFolder storeBaseFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n \n     @Rule\n     public ExpectedException thrown = ExpectedException.none();\n \n     @BeforeClass\n     public static void setup() {\n-        byteEntityStore = new SingleUseMockAccumuloStore();\n-        gaffer1KeyStore = new SingleUseMockAccumuloStore();\n+        File storeFolder1 = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1MDcwOA=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzIxNDcxOnYy", "diffSide": "RIGHT", "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/AccumuloTestClusterManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDoyMDo1MVrOGxNhRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDo0ODoxMVrOGxXMlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1NDkxNw==", "bodyText": "Can you remove the Test part of this as it's used outside of tests? Something Like MiniAccumuloClusterManager would be more descriptive.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454254917", "createdAt": "2020-07-14T10:20:51Z", "author": {"login": "d47853"}, "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/AccumuloTestClusterManager.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.accumulostore;\n+\n+import org.apache.accumulo.core.client.AccumuloException;\n+import org.apache.accumulo.core.client.AccumuloSecurityException;\n+import org.apache.accumulo.core.client.security.tokens.PasswordToken;\n+import org.apache.accumulo.core.security.Authorizations;\n+import org.apache.accumulo.core.security.SystemPermission;\n+import org.apache.accumulo.minicluster.MiniAccumuloCluster;\n+import org.apache.accumulo.minicluster.MiniAccumuloConfig;\n+import org.apache.commons.io.FileUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import uk.gov.gchq.gaffer.store.StoreProperties;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.UUID;\n+\n+public class AccumuloTestClusterManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQxMzQ2MQ==", "bodyText": "Done.\nIt started out life in test but had to migrate to the main codebase for various reasons (e.g. the rest demos). The name ended up the same in the change..", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454413461", "createdAt": "2020-07-14T14:48:11Z", "author": {"login": "phosphorbronze50"}, "path": "store-implementation/accumulo-store/src/main/java/uk/gov/gchq/gaffer/accumulostore/AccumuloTestClusterManager.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.accumulostore;\n+\n+import org.apache.accumulo.core.client.AccumuloException;\n+import org.apache.accumulo.core.client.AccumuloSecurityException;\n+import org.apache.accumulo.core.client.security.tokens.PasswordToken;\n+import org.apache.accumulo.core.security.Authorizations;\n+import org.apache.accumulo.core.security.SystemPermission;\n+import org.apache.accumulo.minicluster.MiniAccumuloCluster;\n+import org.apache.accumulo.minicluster.MiniAccumuloConfig;\n+import org.apache.commons.io.FileUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import uk.gov.gchq.gaffer.store.StoreProperties;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.UUID;\n+\n+public class AccumuloTestClusterManager {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1NDkxNw=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzIzNzYyOnYy", "diffSide": "RIGHT", "path": "store-implementation/accumulo-store/src/test/java/uk/gov/gchq/gaffer/accumulostore/inputformat/InputFormatTest.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDoyNzoyNFrOGxNu5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToxMjoxNFrOGyC4vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1ODQwNQ==", "bodyText": "Some of the setup logic seems to be repeated here and other classes. Would it be possible to move the PropertiesDrivenTest from sparkaccumulo and use it here?", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454258405", "createdAt": "2020-07-14T10:27:24Z", "author": {"login": "d47853"}, "path": "store-implementation/accumulo-store/src/test/java/uk/gov/gchq/gaffer/accumulostore/inputformat/InputFormatTest.java", "diffHunk": "@@ -134,6 +141,30 @@\n     @Rule\n     public final TemporaryFolder testFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n \n+    @ClassRule\n+    public static TemporaryFolder storeBaseFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n+\n+    private static SingleUseAccumuloStore store;\n+    private static AccumuloTestClusterManager accumuloTestClusterManager;\n+    private static final AccumuloProperties PROPERTIES = AccumuloProperties.loadStoreProperties(StreamUtil.storeProps(InputFormatTest.class));\n+\n+    @BeforeClass\n+    public static void setup() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ0ODA0NA==", "bodyText": "I have removed all the repeating code.\nThe MiniAccumuloClusterManager creates a unique sub-directory under the TemporaryFolder for each cluster instance. This means where more than one MiniAccumuloClusterManager is used in tests each can be instantiated using the same temporary directory name from the TemporaryFolder.\nThe filename is supplied to the MiniAccumuloClusterManager constructor rather than the TemporaryFolder object because the TemporaryFolder class is a JUnit4 artifact so ought not to be used in a main codebase class. Additionally the @rule / @ClassRule / TemporaryFolder construct is effectively deprecated by the arrival of JUnit5.\nThis fix is more wide-ranging than the Abstract superclass would be as it can be used in tests that are already subclasses.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454448044", "createdAt": "2020-07-14T15:34:27Z", "author": {"login": "phosphorbronze50"}, "path": "store-implementation/accumulo-store/src/test/java/uk/gov/gchq/gaffer/accumulostore/inputformat/InputFormatTest.java", "diffHunk": "@@ -134,6 +141,30 @@\n     @Rule\n     public final TemporaryFolder testFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n \n+    @ClassRule\n+    public static TemporaryFolder storeBaseFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n+\n+    private static SingleUseAccumuloStore store;\n+    private static AccumuloTestClusterManager accumuloTestClusterManager;\n+    private static final AccumuloProperties PROPERTIES = AccumuloProperties.loadStoreProperties(StreamUtil.storeProps(InputFormatTest.class));\n+\n+    @BeforeClass\n+    public static void setup() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1ODQwNQ=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyNzE1MQ==", "bodyText": "Mainly it's the directory setup and cluster creation that could be delegated to a superclass. I'm also not too sure about having a static store and re-initialising it. As it's merely a connection object, could we create a new one for each test?", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454927151", "createdAt": "2020-07-15T09:44:27Z", "author": {"login": "d47853"}, "path": "store-implementation/accumulo-store/src/test/java/uk/gov/gchq/gaffer/accumulostore/inputformat/InputFormatTest.java", "diffHunk": "@@ -134,6 +141,30 @@\n     @Rule\n     public final TemporaryFolder testFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n \n+    @ClassRule\n+    public static TemporaryFolder storeBaseFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n+\n+    private static SingleUseAccumuloStore store;\n+    private static AccumuloTestClusterManager accumuloTestClusterManager;\n+    private static final AccumuloProperties PROPERTIES = AccumuloProperties.loadStoreProperties(StreamUtil.storeProps(InputFormatTest.class));\n+\n+    @BeforeClass\n+    public static void setup() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1ODQwNQ=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTAxODE3MQ==", "bodyText": "Sorry - hadn't been expecting your input so soon so updated my previous comments!\nPlease see the replacement comment.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r455018171", "createdAt": "2020-07-15T12:37:36Z", "author": {"login": "phosphorbronze50"}, "path": "store-implementation/accumulo-store/src/test/java/uk/gov/gchq/gaffer/accumulostore/inputformat/InputFormatTest.java", "diffHunk": "@@ -134,6 +141,30 @@\n     @Rule\n     public final TemporaryFolder testFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n \n+    @ClassRule\n+    public static TemporaryFolder storeBaseFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n+\n+    private static SingleUseAccumuloStore store;\n+    private static AccumuloTestClusterManager accumuloTestClusterManager;\n+    private static final AccumuloProperties PROPERTIES = AccumuloProperties.loadStoreProperties(StreamUtil.storeProps(InputFormatTest.class));\n+\n+    @BeforeClass\n+    public static void setup() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1ODQwNQ=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA4MTkzMQ==", "bodyText": "Tah. I shall take another look", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r455081931", "createdAt": "2020-07-15T14:10:42Z", "author": {"login": "d47853"}, "path": "store-implementation/accumulo-store/src/test/java/uk/gov/gchq/gaffer/accumulostore/inputformat/InputFormatTest.java", "diffHunk": "@@ -134,6 +141,30 @@\n     @Rule\n     public final TemporaryFolder testFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n \n+    @ClassRule\n+    public static TemporaryFolder storeBaseFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n+\n+    private static SingleUseAccumuloStore store;\n+    private static AccumuloTestClusterManager accumuloTestClusterManager;\n+    private static final AccumuloProperties PROPERTIES = AccumuloProperties.loadStoreProperties(StreamUtil.storeProps(InputFormatTest.class));\n+\n+    @BeforeClass\n+    public static void setup() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1ODQwNQ=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEyOTI3Nw==", "bodyText": "Made the connection object local again.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r455129277", "createdAt": "2020-07-15T15:12:14Z", "author": {"login": "phosphorbronze50"}, "path": "store-implementation/accumulo-store/src/test/java/uk/gov/gchq/gaffer/accumulostore/inputformat/InputFormatTest.java", "diffHunk": "@@ -134,6 +141,30 @@\n     @Rule\n     public final TemporaryFolder testFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n \n+    @ClassRule\n+    public static TemporaryFolder storeBaseFolder = new TemporaryFolder(CommonTestConstants.TMP_DIRECTORY);\n+\n+    private static SingleUseAccumuloStore store;\n+    private static AccumuloTestClusterManager accumuloTestClusterManager;\n+    private static final AccumuloProperties PROPERTIES = AccumuloProperties.loadStoreProperties(StreamUtil.storeProps(InputFormatTest.class));\n+\n+    @BeforeClass\n+    public static void setup() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI1ODQwNQ=="}, "originalCommit": {"oid": "dbe4a24982862875491cbeb372c4ff47084461f2"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzM1MDgxOnYy", "diffSide": "RIGHT", "path": "store-implementation/accumulo-store/src/test/resources/store.properties", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTowMjoxOVrOGxOzZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjo1OTo1OVrOG02v-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NTk0Mw==", "bodyText": "don't you need to use localhost?", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454275943", "createdAt": "2020-07-14T11:02:19Z", "author": {"login": "d47853"}, "path": "store-implementation/accumulo-store/src/test/resources/store.properties", "diffHunk": "@@ -13,9 +13,9 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n-gaffer.store.class=uk.gov.gchq.gaffer.accumulostore.SingleUseMockAccumuloStore\n-accumulo.instance=byteEntityInstance\n-accumulo.zookeepers=aZookeeper\n+gaffer.store.class=uk.gov.gchq.gaffer.accumulostore.SingleUseMiniAccumuloStore\n+accumulo.instance=accumuloInstance\n+accumulo.zookeepers=zookeeper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca275f5811d3998088c80c7bbcc2c896967fba8e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQyOTA2MA==", "bodyText": "zookeeper is updated in the properties with the actual value when MiniAccumuloClusterManager starts the cluster.\nSee above.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r454429060", "createdAt": "2020-07-14T15:08:40Z", "author": {"login": "phosphorbronze50"}, "path": "store-implementation/accumulo-store/src/test/resources/store.properties", "diffHunk": "@@ -13,9 +13,9 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n-gaffer.store.class=uk.gov.gchq.gaffer.accumulostore.SingleUseMockAccumuloStore\n-accumulo.instance=byteEntityInstance\n-accumulo.zookeepers=aZookeeper\n+gaffer.store.class=uk.gov.gchq.gaffer.accumulostore.SingleUseMiniAccumuloStore\n+accumulo.instance=accumuloInstance\n+accumulo.zookeepers=zookeeper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NTk0Mw=="}, "originalCommit": {"oid": "ca275f5811d3998088c80c7bbcc2c896967fba8e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTA4MjY0OA==", "bodyText": "Thanks for clarifying. Would it be possible to remove them or add a comment above it explaining that it get's overwritten?", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r455082648", "createdAt": "2020-07-15T14:11:44Z", "author": {"login": "d47853"}, "path": "store-implementation/accumulo-store/src/test/resources/store.properties", "diffHunk": "@@ -13,9 +13,9 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n-gaffer.store.class=uk.gov.gchq.gaffer.accumulostore.SingleUseMockAccumuloStore\n-accumulo.instance=byteEntityInstance\n-accumulo.zookeepers=aZookeeper\n+gaffer.store.class=uk.gov.gchq.gaffer.accumulostore.SingleUseMiniAccumuloStore\n+accumulo.instance=accumuloInstance\n+accumulo.zookeepers=zookeeper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NTk0Mw=="}, "originalCommit": {"oid": "ca275f5811d3998088c80c7bbcc2c896967fba8e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA3NjE1Mg==", "bodyText": "Comment added to the file.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r458076152", "createdAt": "2020-07-21T12:59:59Z", "author": {"login": "phosphorbronze50"}, "path": "store-implementation/accumulo-store/src/test/resources/store.properties", "diffHunk": "@@ -13,9 +13,9 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n #\n-gaffer.store.class=uk.gov.gchq.gaffer.accumulostore.SingleUseMockAccumuloStore\n-accumulo.instance=byteEntityInstance\n-accumulo.zookeepers=aZookeeper\n+gaffer.store.class=uk.gov.gchq.gaffer.accumulostore.SingleUseMiniAccumuloStore\n+accumulo.instance=accumuloInstance\n+accumulo.zookeepers=zookeeper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NTk0Mw=="}, "originalCommit": {"oid": "ca275f5811d3998088c80c7bbcc2c896967fba8e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzcyNDU0OnYy", "diffSide": "RIGHT", "path": "output.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNDo1NTo0NlrOG2ObrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMToxOTo0MFrOG2rx3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUxMjc0OA==", "bodyText": "What's this file for?", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r459512748", "createdAt": "2020-07-23T14:55:46Z", "author": {"login": "t11947"}, "path": "output.txt", "diffHunk": "@@ -0,0 +1,549 @@\n+[INFO] Scanning for projects...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ae9103b4c4b5c10a5104387689bee31c7614ba"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk5MzU2NA==", "bodyText": "Oops! Working file now removed.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r459993564", "createdAt": "2020-07-24T11:19:40Z", "author": {"login": "phosphorbronze50"}, "path": "output.txt", "diffHunk": "@@ -0,0 +1,549 @@\n+[INFO] Scanning for projects...", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTUxMjc0OA=="}, "originalCommit": {"oid": "01ae9103b4c4b5c10a5104387689bee31c7614ba"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Nzk1MjgwOnYy", "diffSide": "RIGHT", "path": "j5pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxNTo0Njo0MlrOG2Qqpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMToyMDowM1rOG2rybw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0OTM1MQ==", "bodyText": "j5pom? Is this file used for anything?", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r459549351", "createdAt": "2020-07-23T15:46:42Z", "author": {"login": "t11947"}, "path": "j5pom.xml", "diffHunk": "@@ -0,0 +1,1362 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ae9103b4c4b5c10a5104387689bee31c7614ba"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTk5MzcxMQ==", "bodyText": "Oops 2! A working file now removed.", "url": "https://github.com/gchq/Gaffer/pull/2289#discussion_r459993711", "createdAt": "2020-07-24T11:20:03Z", "author": {"login": "phosphorbronze50"}, "path": "j5pom.xml", "diffHunk": "@@ -0,0 +1,1362 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTU0OTM1MQ=="}, "originalCommit": {"oid": "01ae9103b4c4b5c10a5104387689bee31c7614ba"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4380, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}