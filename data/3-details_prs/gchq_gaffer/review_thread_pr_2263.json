{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MjM1NTk1", "number": 2263, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODozOTozNlrODryHFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODozOTozNlrODryHFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjM2MzczOnYy", "diffSide": "RIGHT", "path": "core/store/src/test/java/uk/gov/gchq/gaffer/store/schema/SchemaTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODozOTozNlrOF8VMtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxODozOTozNlrOF8VMtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgwNjE5OA==", "bodyText": "Should these tests be using schemaNested instead of schema?", "url": "https://github.com/gchq/Gaffer/pull/2263#discussion_r398806198", "createdAt": "2020-03-26T18:39:36Z", "author": {"login": "d47853"}, "path": "core/store/src/test/java/uk/gov/gchq/gaffer/store/schema/SchemaTest.java", "diffHunk": "@@ -451,23 +452,62 @@ public void testSchemaConstructedFromInputStream() throws IOException {\n         final Schema deserialisedSchema = new Schema.Builder().json(resourceAsStream).build();\n         assertNotNull(deserialisedSchema);\n \n-        final Map<String, SchemaEdgeDefinition> edges = deserialisedSchema.getEdges();\n+        assertExpectedSchemaElementsContent(deserialisedSchema);\n+    }\n+\n+    @Test\n+    public void testSchemaConstructedFromPath() throws Exception {\n+\n+        final Schema schema = Schema.fromJson(Paths.get(SchemaTest.class.getResource(\"/schema\").toURI()));\n+\n+        assertExpectedSchemaElementsContent(schema);\n+        assertExpectedSchemaSerialisationContent(schema);\n+        assertExpectedSchemaTypesContent(schema);\n+    }\n+\n+    @Test\n+    public void testSchemaConstructedByRecursiveDirectoryProcessingOfPath() throws Exception {\n+\n+        final Schema schemaNested = Schema.fromJson(Paths.get(SchemaTest.class.getResource(\"/schema-nested\").toURI()));\n+\n+        assertExpectedSchemaElementsContent(schemaNested);\n+        assertExpectedSchemaSerialisationContent(schema);\n+        assertExpectedSchemaTypesContent(schema);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfee6dcfd9167dea67220083ea73da1e67c3f4f2"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4355, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}