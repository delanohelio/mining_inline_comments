{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NjQ0Mjkw", "number": 2265, "title": "gh-2257 Set Accumulo store split points based on sampled elements from RDD's", "bodyText": "", "createdAt": "2020-04-02T15:16:57Z", "url": "https://github.com/gchq/Gaffer/pull/2265", "merged": true, "mergeCommit": {"oid": "088afc36afcaf8820c4fee28ea1ea29cd5c4a38d"}, "closed": true, "closedAt": "2020-04-20T08:09:02Z", "author": {"login": "m29827"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSDCyqgH2gAyMzk3NjQ0MjkwOjJkODZjMmNhZmE0NGM2YTBjZjkzYzliMTNlYmI4ZWQwYzQ3YWI1ZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX32jFAFqTM5Mzc1NzI5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "author": {"user": {"login": "m29827", "name": null}}, "url": "https://github.com/gchq/Gaffer/commit/2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7", "committedDate": "2020-03-28T10:49:29Z", "message": "gh-2257 Adding OperationHandlers to set Accumulo store split points based on sampled elements from JavaRDD and RDD."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f28a835c289f498fb06a88fa3b8a675f55229cff", "author": {"user": {"login": "GCHQDev404", "name": null}}, "url": "https://github.com/gchq/Gaffer/commit/f28a835c289f498fb06a88fa3b8a675f55229cff", "committedDate": "2020-04-02T21:14:50Z", "message": "Merge branch 'develop' into gh-2257-set-accumulo-stores-split-points-using-RDD"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NzgyMDk3", "url": "https://github.com/gchq/Gaffer/pull/2265#pullrequestreview-386782097", "createdAt": "2020-04-02T21:16:01Z", "commit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToxNjowMlrOF_8y6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToxNjowMlrOF_8y6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMDY4MQ==", "bodyText": "2020", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402600681", "createdAt": "2020-04-02T21:16:02Z", "author": {"login": "GCHQDev404"}, "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPoints.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2016-2020 Crown Copyright", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NzgyNjE2", "url": "https://github.com/gchq/Gaffer/pull/2265#pullrequestreview-386782616", "createdAt": "2020-04-02T21:16:50Z", "commit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToxNjo1MVrOF_80Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToxNjo1MVrOF_80Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMTA1MQ==", "bodyText": "2020", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402601051", "createdAt": "2020-04-02T21:16:51Z", "author": {"login": "GCHQDev404"}, "path": "core/operation/src/test/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPointsTest.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Nzg0OTk0", "url": "https://github.com/gchq/Gaffer/pull/2265#pullrequestreview-386784994", "createdAt": "2020-04-02T21:20:37Z", "commit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToyMDozN1rOF_871w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToyMDozN1rOF_871w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMjk2Nw==", "bodyText": "2020", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402602967", "createdAt": "2020-04-02T21:20:37Z", "author": {"login": "GCHQDev404"}, "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Nzg1NjI2", "url": "https://github.com/gchq/Gaffer/pull/2265#pullrequestreview-386785626", "createdAt": "2020-04-02T21:21:39Z", "commit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToyMTozOVrOF_89nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToyMTozOVrOF_89nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwMzQyMw==", "bodyText": "isNull(numSplits)", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402603423", "createdAt": "2020-04-02T21:21:39Z", "author": {"login": "GCHQDev404"}, "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.store.operation.handler;\n+\n+import uk.gov.gchq.gaffer.commonutil.stream.Streams;\n+import uk.gov.gchq.gaffer.operation.OperationException;\n+import uk.gov.gchq.gaffer.operation.impl.SampleToSplitPoints;\n+import uk.gov.gchq.gaffer.store.Context;\n+import uk.gov.gchq.gaffer.store.Store;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public abstract class AbstractSampleToSplitPointsHandler <T, S extends Store> implements OutputOperationHandler<SampleToSplitPoints<T>, List<T>> {\n+\n+    @Override\n+    public List<T> doOperation(final SampleToSplitPoints<T> operation, final Context context, final Store store) throws OperationException {\n+\n+        final S typedStore = (S) store;\n+\n+        validate(operation, typedStore);\n+\n+        final Integer numSplits = getNumSplits(operation, typedStore);\n+        if (null == numSplits) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Nzg4MTY1", "url": "https://github.com/gchq/Gaffer/pull/2265#pullrequestreview-386788165", "createdAt": "2020-04-02T21:25:35Z", "commit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToyNTozNVrOF_9FGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMToyNTozNVrOF_9FGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwNTMzNw==", "bodyText": "Code Complet 17.1\nMinimize the number of returns in each routine", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402605337", "createdAt": "2020-04-02T21:25:35Z", "author": {"login": "GCHQDev404"}, "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.store.operation.handler;\n+\n+import uk.gov.gchq.gaffer.commonutil.stream.Streams;\n+import uk.gov.gchq.gaffer.operation.OperationException;\n+import uk.gov.gchq.gaffer.operation.impl.SampleToSplitPoints;\n+import uk.gov.gchq.gaffer.store.Context;\n+import uk.gov.gchq.gaffer.store.Store;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public abstract class AbstractSampleToSplitPointsHandler <T, S extends Store> implements OutputOperationHandler<SampleToSplitPoints<T>, List<T>> {\n+\n+    @Override\n+    public List<T> doOperation(final SampleToSplitPoints<T> operation, final Context context, final Store store) throws OperationException {\n+\n+        final S typedStore = (S) store;\n+\n+        validate(operation, typedStore);\n+\n+        final Integer numSplits = getNumSplits(operation, typedStore);\n+        if (null == numSplits) {\n+            throw new OperationException(\"Number of splits is required\");\n+        }\n+        if (numSplits < 1) {\n+            return Collections.emptyList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NzkzMzU5", "url": "https://github.com/gchq/Gaffer/pull/2265#pullrequestreview-386793359", "createdAt": "2020-04-02T21:34:14Z", "commit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTozNDoxNFrOF_9UyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTozNDoxNFrOF_9UyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwOTM1Mw==", "bodyText": "one line? for (int nthCount = 0; nthCount < records.size(); nthCount++) {", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402609353", "createdAt": "2020-04-02T21:34:14Z", "author": {"login": "GCHQDev404"}, "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.store.operation.handler;\n+\n+import uk.gov.gchq.gaffer.commonutil.stream.Streams;\n+import uk.gov.gchq.gaffer.operation.OperationException;\n+import uk.gov.gchq.gaffer.operation.impl.SampleToSplitPoints;\n+import uk.gov.gchq.gaffer.store.Context;\n+import uk.gov.gchq.gaffer.store.Store;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public abstract class AbstractSampleToSplitPointsHandler <T, S extends Store> implements OutputOperationHandler<SampleToSplitPoints<T>, List<T>> {\n+\n+    @Override\n+    public List<T> doOperation(final SampleToSplitPoints<T> operation, final Context context, final Store store) throws OperationException {\n+\n+        final S typedStore = (S) store;\n+\n+        validate(operation, typedStore);\n+\n+        final Integer numSplits = getNumSplits(operation, typedStore);\n+        if (null == numSplits) {\n+            throw new OperationException(\"Number of splits is required\");\n+        }\n+        if (numSplits < 1) {\n+            return Collections.emptyList();\n+        }\n+\n+        final List<T> records = Streams.toStream(operation.getInput()).collect(Collectors.toList());\n+\n+        final List<T> splits;\n+        if (records.size() < 2 || records.size() <= numSplits) {\n+            splits = records;\n+        } else {\n+            final LinkedHashSet<T> splitsSet = Integer.MAX_VALUE != numSplits ? new LinkedHashSet<>(numSplits) : new LinkedHashSet<>();\n+            final double outputEveryNthRecord = ((double) records.size()) / (numSplits + 1);\n+            int nthCount = 0;\n+            for (final T record : records) {\n+                nthCount++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NzkzODEx", "url": "https://github.com/gchq/Gaffer/pull/2265#pullrequestreview-386793811", "createdAt": "2020-04-02T21:35:03Z", "commit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTozNTowM1rOF_9WUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTozNTowM1rOF_9WUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYwOTc0Nw==", "bodyText": "isNull(operation.getInput())", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402609747", "createdAt": "2020-04-02T21:35:03Z", "author": {"login": "GCHQDev404"}, "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.store.operation.handler;\n+\n+import uk.gov.gchq.gaffer.commonutil.stream.Streams;\n+import uk.gov.gchq.gaffer.operation.OperationException;\n+import uk.gov.gchq.gaffer.operation.impl.SampleToSplitPoints;\n+import uk.gov.gchq.gaffer.store.Context;\n+import uk.gov.gchq.gaffer.store.Store;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public abstract class AbstractSampleToSplitPointsHandler <T, S extends Store> implements OutputOperationHandler<SampleToSplitPoints<T>, List<T>> {\n+\n+    @Override\n+    public List<T> doOperation(final SampleToSplitPoints<T> operation, final Context context, final Store store) throws OperationException {\n+\n+        final S typedStore = (S) store;\n+\n+        validate(operation, typedStore);\n+\n+        final Integer numSplits = getNumSplits(operation, typedStore);\n+        if (null == numSplits) {\n+            throw new OperationException(\"Number of splits is required\");\n+        }\n+        if (numSplits < 1) {\n+            return Collections.emptyList();\n+        }\n+\n+        final List<T> records = Streams.toStream(operation.getInput()).collect(Collectors.toList());\n+\n+        final List<T> splits;\n+        if (records.size() < 2 || records.size() <= numSplits) {\n+            splits = records;\n+        } else {\n+            final LinkedHashSet<T> splitsSet = Integer.MAX_VALUE != numSplits ? new LinkedHashSet<>(numSplits) : new LinkedHashSet<>();\n+            final double outputEveryNthRecord = ((double) records.size()) / (numSplits + 1);\n+            int nthCount = 0;\n+            for (final T record : records) {\n+                nthCount++;\n+                if (nthCount >= (int) (outputEveryNthRecord * (splitsSet.size() + 1))) {\n+                    splitsSet.add(record);\n+                    if (numSplits == splitsSet.size()) {\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            splits = new ArrayList<>(splitsSet);\n+        }\n+\n+        return splits;\n+    }\n+\n+    protected void validate(final SampleToSplitPoints operation, final S store) throws OperationException {\n+        if (null == operation.getInput()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Nzk0NzM1", "url": "https://github.com/gchq/Gaffer/pull/2265#pullrequestreview-386794735", "createdAt": "2020-04-02T21:36:42Z", "commit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTozNjo0MlrOF_9ZBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTozNjo0MlrOF_9ZBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMDQzOQ==", "bodyText": "How big is input expected to be, pulling the iterator into memory.", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402610439", "createdAt": "2020-04-02T21:36:42Z", "author": {"login": "GCHQDev404"}, "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.store.operation.handler;\n+\n+import uk.gov.gchq.gaffer.commonutil.stream.Streams;\n+import uk.gov.gchq.gaffer.operation.OperationException;\n+import uk.gov.gchq.gaffer.operation.impl.SampleToSplitPoints;\n+import uk.gov.gchq.gaffer.store.Context;\n+import uk.gov.gchq.gaffer.store.Store;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public abstract class AbstractSampleToSplitPointsHandler <T, S extends Store> implements OutputOperationHandler<SampleToSplitPoints<T>, List<T>> {\n+\n+    @Override\n+    public List<T> doOperation(final SampleToSplitPoints<T> operation, final Context context, final Store store) throws OperationException {\n+\n+        final S typedStore = (S) store;\n+\n+        validate(operation, typedStore);\n+\n+        final Integer numSplits = getNumSplits(operation, typedStore);\n+        if (null == numSplits) {\n+            throw new OperationException(\"Number of splits is required\");\n+        }\n+        if (numSplits < 1) {\n+            return Collections.emptyList();\n+        }\n+\n+        final List<T> records = Streams.toStream(operation.getInput()).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Nzk3NDEz", "url": "https://github.com/gchq/Gaffer/pull/2265#pullrequestreview-386797413", "createdAt": "2020-04-02T21:41:29Z", "commit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTo0MTozMFrOF_9hOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTo0MTozMFrOF_9hOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMjUzOA==", "bodyText": "2020", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402612538", "createdAt": "2020-04-02T21:41:30Z", "author": {"login": "GCHQDev404"}, "path": "core/store/src/test/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandlerTest.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Nzk3Njg0", "url": "https://github.com/gchq/Gaffer/pull/2265#pullrequestreview-386797684", "createdAt": "2020-04-02T21:41:57Z", "commit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTo0MTo1N1rOF_9h9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTo0MTo1N1rOF_9h9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMjcyNw==", "bodyText": "2020", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r402612727", "createdAt": "2020-04-02T21:41:57Z", "author": {"login": "GCHQDev404"}, "path": "library/spark/spark-accumulo-library/src/main/java/uk/gov/gchq/gaffer/sparkaccumulo/operation/handler/AbstractSplitStoreFromRDDOfElementsHandler.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7828677b084e407e6cec371a7e378c7d14ee532c", "author": {"user": {"login": "m29827", "name": null}}, "url": "https://github.com/gchq/Gaffer/commit/7828677b084e407e6cec371a7e378c7d14ee532c", "committedDate": "2020-04-03T12:58:49Z", "message": "gh-2257 Code review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNzMxNDg2", "url": "https://github.com/gchq/Gaffer/pull/2265#pullrequestreview-392731486", "createdAt": "2020-04-14T08:56:32Z", "commit": {"oid": "7828677b084e407e6cec371a7e378c7d14ee532c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwODo1NjozMlrOGFEzzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwOTozNjowOFrOGFGXaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk3NDg2Mg==", "bodyText": "Just a suggestion really but this operation should probably be called GenerateSplitPointsFromSample so that it's obvious what it does and follows the the verb-oriented standard of the other operations.", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r407974862", "createdAt": "2020-04-14T08:56:32Z", "author": {"login": "d47853"}, "path": "core/operation/src/main/java/uk/gov/gchq/gaffer/operation/impl/SampleToSplitPoints.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.operation.impl;\n+\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import org.apache.commons.lang3.exception.CloneFailedException;\n+\n+import uk.gov.gchq.gaffer.operation.Operation;\n+import uk.gov.gchq.gaffer.operation.io.InputOutput;\n+import uk.gov.gchq.gaffer.operation.io.MultiInput;\n+import uk.gov.gchq.gaffer.operation.serialisation.TypeReferenceImpl;\n+import uk.gov.gchq.koryphe.Since;\n+import uk.gov.gchq.koryphe.Summary;\n+import uk.gov.gchq.koryphe.ValidationResult;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * <p>\n+ * The {@code SampleToSplitPoints} operation takes an {@link Iterable} sample\n+ * and generates a {@link List} of split points from that. The sample and\n+ * split points are normally UTF strings but this may differ for different\n+ * Stores.\n+ * </p>\n+ * <p>\n+ * You can manually set the number of splits using the numSplits field. If\n+ * you don't set it then the Gaffer Store should calculate a number of splits\n+ * for you.\n+ * </p>\n+ *\n+ * @param <T> the type of splits\n+ * @see SampleToSplitPoints.Builder\n+ */\n+@JsonPropertyOrder(value = {\"class\", \"input\"}, alphabetic = true)\n+@Since(\"1.12.0\")\n+@Summary(\"Generates split points from the supplied Iterable\")\n+public class SampleToSplitPoints<T> implements", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7828677b084e407e6cec371a7e378c7d14ee532c"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwMDM2Mw==", "bodyText": "@m29827 Yes if it's possible for a user to run this operation through the REST service, then it should be guarded against. However this can be disabled using a disableOperations.json file. There's one of these in the accumulo-rest, core-rest and hbase-rest modules (under rest-api). If you add the new operations to this list, then users will not be able to run them via the REST API.", "url": "https://github.com/gchq/Gaffer/pull/2265#discussion_r408000363", "createdAt": "2020-04-14T09:36:08Z", "author": {"login": "d47853"}, "path": "core/store/src/main/java/uk/gov/gchq/gaffer/store/operation/handler/AbstractSampleToSplitPointsHandler.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2017-2020 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package uk.gov.gchq.gaffer.store.operation.handler;\n+\n+import uk.gov.gchq.gaffer.commonutil.stream.Streams;\n+import uk.gov.gchq.gaffer.operation.OperationException;\n+import uk.gov.gchq.gaffer.operation.impl.SampleToSplitPoints;\n+import uk.gov.gchq.gaffer.store.Context;\n+import uk.gov.gchq.gaffer.store.Store;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.LinkedHashSet;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+public abstract class AbstractSampleToSplitPointsHandler <T, S extends Store> implements OutputOperationHandler<SampleToSplitPoints<T>, List<T>> {\n+\n+    @Override\n+    public List<T> doOperation(final SampleToSplitPoints<T> operation, final Context context, final Store store) throws OperationException {\n+\n+        final S typedStore = (S) store;\n+\n+        validate(operation, typedStore);\n+\n+        final Integer numSplits = getNumSplits(operation, typedStore);\n+        if (null == numSplits) {\n+            throw new OperationException(\"Number of splits is required\");\n+        }\n+        if (numSplits < 1) {\n+            return Collections.emptyList();\n+        }\n+\n+        final List<T> records = Streams.toStream(operation.getInput()).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxMDQzOQ=="}, "originalCommit": {"oid": "2d86c2cafa44c6a0cf93c9b13ebb8ed0c47ab5e7"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db947de814687c99f54c84ea056137dadd10b61c", "author": {"user": {"login": "m29827", "name": null}}, "url": "https://github.com/gchq/Gaffer/commit/db947de814687c99f54c84ea056137dadd10b61c", "committedDate": "2020-04-15T09:05:03Z", "message": "Merge branch 'develop' into gh-2257-set-accumulo-stores-split-points-using-RDD"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2f7e2e19fc2e9e4cca85c0b015a82e66801c790", "author": {"user": {"login": "m29827", "name": null}}, "url": "https://github.com/gchq/Gaffer/commit/e2f7e2e19fc2e9e4cca85c0b015a82e66801c790", "committedDate": "2020-04-15T09:41:40Z", "message": "gh-2257 Code review comments:\n- Rename SampleToSplitPointsHandler -> GenerateSplitPointsFromSampleHandler.\n- Prevent direct access to GenerateSplitPointsFromSample Operation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNzU3Mjky", "url": "https://github.com/gchq/Gaffer/pull/2265#pullrequestreview-393757292", "createdAt": "2020-04-15T13:10:42Z", "commit": {"oid": "e2f7e2e19fc2e9e4cca85c0b015a82e66801c790"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1860, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}