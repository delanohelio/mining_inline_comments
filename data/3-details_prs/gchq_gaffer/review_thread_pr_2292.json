{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NDI4ODU0", "number": 2292, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOToxOTo1M1rOEOLPww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOTozNToxOVrOEOLmBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjk5Nzc5OnYy", "diffSide": "RIGHT", "path": "core/graph/src/test/java/uk/gov/gchq/gaffer/operation/export/graph/handler/ExportToOtherGraphHandlerTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOToxOTo1M1rOGxLcrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzo0MzoxMFrOG4NNMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyMDk3Mg==", "bodyText": "Any particular reason you've chosen to remove the imported template exception strings in favour of literals?", "url": "https://github.com/gchq/Gaffer/pull/2292#discussion_r454220972", "createdAt": "2020-07-14T09:19:53Z", "author": {"login": "t11947"}, "path": "core/graph/src/test/java/uk/gov/gchq/gaffer/operation/export/graph/handler/ExportToOtherGraphHandlerTest.java", "diffHunk": "@@ -414,13 +391,11 @@ public void shouldValidateParentSchemaIdCannotBeUsedWhenGraphIdAlreadyExists() {\n                 .build();\n \n         // When / Then`\n-        try {\n-            createGraph(export);\n-            fail(EXCEPTION_EXPECTED);\n-        } catch (final IllegalArgumentException e) {\n-            assertEquals(\"Validation errors: \\n\" +\n-                    String.format(GRAPH_S_ALREADY_EXISTS_SO_YOU_CANNOT_USE_A_DIFFERENT_S_DO_NOT_SET_THE_S_FIELD, \"graphId1\", SCHEMA_STRING, \"parentSchemaIds\"), e.getMessage());\n-        }\n+        final Exception exception = assertThrows(IllegalArgumentException.class, () -> createGraph(export));\n+\n+        final String expected = \"Validation errors: \\n\" +\n+                \"Graph: graphId1 already exists so you cannot use a different Schema. Do not set the parentSchemaIds field\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e159ae025c6db83e3132512bf136443bed06b03"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0OTAyNw==", "bodyText": "Sorry just force of habit isolating tests and thought it might make it more readable to compare exception messages - realise now that importing the template exceptions is probably more beneficial when the exception messages change and easy to change across multiple classes - I'll change them back to using the imported templates...", "url": "https://github.com/gchq/Gaffer/pull/2292#discussion_r458049027", "createdAt": "2020-07-21T12:12:59Z", "author": {"login": "macenturalxl1"}, "path": "core/graph/src/test/java/uk/gov/gchq/gaffer/operation/export/graph/handler/ExportToOtherGraphHandlerTest.java", "diffHunk": "@@ -414,13 +391,11 @@ public void shouldValidateParentSchemaIdCannotBeUsedWhenGraphIdAlreadyExists() {\n                 .build();\n \n         // When / Then`\n-        try {\n-            createGraph(export);\n-            fail(EXCEPTION_EXPECTED);\n-        } catch (final IllegalArgumentException e) {\n-            assertEquals(\"Validation errors: \\n\" +\n-                    String.format(GRAPH_S_ALREADY_EXISTS_SO_YOU_CANNOT_USE_A_DIFFERENT_S_DO_NOT_SET_THE_S_FIELD, \"graphId1\", SCHEMA_STRING, \"parentSchemaIds\"), e.getMessage());\n-        }\n+        final Exception exception = assertThrows(IllegalArgumentException.class, () -> createGraph(export));\n+\n+        final String expected = \"Validation errors: \\n\" +\n+                \"Graph: graphId1 already exists so you cannot use a different Schema. Do not set the parentSchemaIds field\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyMDk3Mg=="}, "originalCommit": {"oid": "4e159ae025c6db83e3132512bf136443bed06b03"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY1MjAyNw==", "bodyText": "Before I change it back - do you have a preference on the imported messages? Would you like me to revert to the original or keep the current change?", "url": "https://github.com/gchq/Gaffer/pull/2292#discussion_r458652027", "createdAt": "2020-07-22T09:13:59Z", "author": {"login": "macenturalxl1"}, "path": "core/graph/src/test/java/uk/gov/gchq/gaffer/operation/export/graph/handler/ExportToOtherGraphHandlerTest.java", "diffHunk": "@@ -414,13 +391,11 @@ public void shouldValidateParentSchemaIdCannotBeUsedWhenGraphIdAlreadyExists() {\n                 .build();\n \n         // When / Then`\n-        try {\n-            createGraph(export);\n-            fail(EXCEPTION_EXPECTED);\n-        } catch (final IllegalArgumentException e) {\n-            assertEquals(\"Validation errors: \\n\" +\n-                    String.format(GRAPH_S_ALREADY_EXISTS_SO_YOU_CANNOT_USE_A_DIFFERENT_S_DO_NOT_SET_THE_S_FIELD, \"graphId1\", SCHEMA_STRING, \"parentSchemaIds\"), e.getMessage());\n-        }\n+        final Exception exception = assertThrows(IllegalArgumentException.class, () -> createGraph(export));\n+\n+        final String expected = \"Validation errors: \\n\" +\n+                \"Graph: graphId1 already exists so you cannot use a different Schema. Do not set the parentSchemaIds field\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyMDk3Mg=="}, "originalCommit": {"oid": "4e159ae025c6db83e3132512bf136443bed06b03"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc0NTk3Mw==", "bodyText": "Hi just checking if you have a preference on this first? If you prefer to change back to original?", "url": "https://github.com/gchq/Gaffer/pull/2292#discussion_r460745973", "createdAt": "2020-07-27T08:58:32Z", "author": {"login": "macenturalxl1"}, "path": "core/graph/src/test/java/uk/gov/gchq/gaffer/operation/export/graph/handler/ExportToOtherGraphHandlerTest.java", "diffHunk": "@@ -414,13 +391,11 @@ public void shouldValidateParentSchemaIdCannotBeUsedWhenGraphIdAlreadyExists() {\n                 .build();\n \n         // When / Then`\n-        try {\n-            createGraph(export);\n-            fail(EXCEPTION_EXPECTED);\n-        } catch (final IllegalArgumentException e) {\n-            assertEquals(\"Validation errors: \\n\" +\n-                    String.format(GRAPH_S_ALREADY_EXISTS_SO_YOU_CANNOT_USE_A_DIFFERENT_S_DO_NOT_SET_THE_S_FIELD, \"graphId1\", SCHEMA_STRING, \"parentSchemaIds\"), e.getMessage());\n-        }\n+        final Exception exception = assertThrows(IllegalArgumentException.class, () -> createGraph(export));\n+\n+        final String expected = \"Validation errors: \\n\" +\n+                \"Graph: graphId1 already exists so you cannot use a different Schema. Do not set the parentSchemaIds field\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyMDk3Mg=="}, "originalCommit": {"oid": "4e159ae025c6db83e3132512bf136443bed06b03"}, "originalPosition": 202}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4OTgxMQ==", "bodyText": "Apologies for the delay in getting back to you. I do see your point about test isolation. Unfortunately, it seems that we've not followed either style consistently throughout the project. I'm happy with the way they are.", "url": "https://github.com/gchq/Gaffer/pull/2292#discussion_r461589811", "createdAt": "2020-07-28T13:43:10Z", "author": {"login": "t11947"}, "path": "core/graph/src/test/java/uk/gov/gchq/gaffer/operation/export/graph/handler/ExportToOtherGraphHandlerTest.java", "diffHunk": "@@ -414,13 +391,11 @@ public void shouldValidateParentSchemaIdCannotBeUsedWhenGraphIdAlreadyExists() {\n                 .build();\n \n         // When / Then`\n-        try {\n-            createGraph(export);\n-            fail(EXCEPTION_EXPECTED);\n-        } catch (final IllegalArgumentException e) {\n-            assertEquals(\"Validation errors: \\n\" +\n-                    String.format(GRAPH_S_ALREADY_EXISTS_SO_YOU_CANNOT_USE_A_DIFFERENT_S_DO_NOT_SET_THE_S_FIELD, \"graphId1\", SCHEMA_STRING, \"parentSchemaIds\"), e.getMessage());\n-        }\n+        final Exception exception = assertThrows(IllegalArgumentException.class, () -> createGraph(export));\n+\n+        final String expected = \"Validation errors: \\n\" +\n+                \"Graph: graphId1 already exists so you cannot use a different Schema. Do not set the parentSchemaIds field\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyMDk3Mg=="}, "originalCommit": {"oid": "4e159ae025c6db83e3132512bf136443bed06b03"}, "originalPosition": 202}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzA1NDc3OnYy", "diffSide": "RIGHT", "path": "core/operation/src/test/java/uk/gov/gchq/gaffer/operation/OperationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwOTozNToxOVrOGxL_7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMjoxMzoxOVrOG01GpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyOTk5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new AssumptionViolatedException(\"Missing Since annotation on class \" + instance.getClass().getName());\n          \n          \n            \n                        throw new AssumptionViolatedException(\"Missing Summary annotation on class \" + instance.getClass().getName());", "url": "https://github.com/gchq/Gaffer/pull/2292#discussion_r454229999", "createdAt": "2020-07-14T09:35:19Z", "author": {"login": "t11947"}, "path": "core/operation/src/test/java/uk/gov/gchq/gaffer/operation/OperationTest.java", "diffHunk": "@@ -108,10 +109,10 @@ public void shouldHaveSummaryAnnotation() {\n \n         // Then\n         if (null == annotation || null == annotation.value()) {\n-            throw new AssumptionViolatedException(\"Missing Summary annotation on class \" + instance.getClass().getName());\n+            throw new AssumptionViolatedException(\"Missing Since annotation on class \" + instance.getClass().getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e159ae025c6db83e3132512bf136443bed06b03"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODA0OTE4OQ==", "bodyText": "Thanks for spotting the error", "url": "https://github.com/gchq/Gaffer/pull/2292#discussion_r458049189", "createdAt": "2020-07-21T12:13:19Z", "author": {"login": "macenturalxl1"}, "path": "core/operation/src/test/java/uk/gov/gchq/gaffer/operation/OperationTest.java", "diffHunk": "@@ -108,10 +109,10 @@ public void shouldHaveSummaryAnnotation() {\n \n         // Then\n         if (null == annotation || null == annotation.value()) {\n-            throw new AssumptionViolatedException(\"Missing Summary annotation on class \" + instance.getClass().getName());\n+            throw new AssumptionViolatedException(\"Missing Since annotation on class \" + instance.getClass().getName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDIyOTk5OQ=="}, "originalCommit": {"oid": "4e159ae025c6db83e3132512bf136443bed06b03"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4383, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}