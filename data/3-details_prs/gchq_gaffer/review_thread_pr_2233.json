{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1OTAyODE0", "number": 2233, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDoyODozMlrODacYSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDozNToxMVrODacfkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDU0NTM2OnYy", "diffSide": "RIGHT", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDoyODozMlrOFhZiYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDoyODozMlrOFhZiYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU2NTcyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2017-2019 Crown Copyright\n          \n          \n            \n             * Copyright 2020 Crown Copyright", "url": "https://github.com/gchq/Gaffer/pull/2233#discussion_r370565728", "createdAt": "2020-01-24T10:28:32Z", "author": {"login": "d47853"}, "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * Copyright 2017-2019 Crown Copyright", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa44598d37d6a08273bc64c818dbf4eb5e1cf463"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDU0ODU4OnYy", "diffSide": "RIGHT", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDoyOTo0M1rOFhZkZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDoyOTo0M1rOFhZkZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU2NjI0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @Since(\"1.10.5\")\n          \n          \n            \n            @Since(\"1.10.6\")", "url": "https://github.com/gchq/Gaffer/pull/2233#discussion_r370566244", "createdAt": "2020-01-24T10:29:43Z", "author": {"login": "d47853"}, "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * Copyright 2017-2019 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.federatedstore.operation;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonInclude.Include;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.google.common.collect.Sets;\n+import org.apache.commons.lang3.exception.CloneFailedException;\n+\n+import uk.gov.gchq.gaffer.commonutil.Required;\n+import uk.gov.gchq.gaffer.federatedstore.FederatedGraphStorage;\n+import uk.gov.gchq.gaffer.operation.io.Output;\n+import uk.gov.gchq.gaffer.operation.serialisation.TypeReferenceImpl;\n+import uk.gov.gchq.koryphe.Since;\n+import uk.gov.gchq.koryphe.Summary;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import static uk.gov.gchq.gaffer.federatedstore.FederatedStoreConstants.KEY_OPERATION_OPTIONS_GRAPH_IDS;\n+\n+\n+@JsonPropertyOrder(value = {\"class\", \"graphId\"}, alphabetic = true)\n+@Since(\"1.10.5\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa44598d37d6a08273bc64c818dbf4eb5e1cf463"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDU2MzE3OnYy", "diffSide": "RIGHT", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDozNDo1MFrOFhZs1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDozNDo1MFrOFhZs1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU2ODQwNA==", "bodyText": "Why the abstract class if theres only going to be one implementation?", "url": "https://github.com/gchq/Gaffer/pull/2233#discussion_r370568404", "createdAt": "2020-01-24T10:34:50Z", "author": {"login": "d47853"}, "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/ChangeGraphAccess.java", "diffHunk": "@@ -0,0 +1,172 @@\n+/*\n+ * Copyright 2017-2019 Crown Copyright\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package uk.gov.gchq.gaffer.federatedstore.operation;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonInclude.Include;\n+import com.fasterxml.jackson.annotation.JsonPropertyOrder;\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import com.google.common.collect.Sets;\n+import org.apache.commons.lang3.exception.CloneFailedException;\n+\n+import uk.gov.gchq.gaffer.commonutil.Required;\n+import uk.gov.gchq.gaffer.federatedstore.FederatedGraphStorage;\n+import uk.gov.gchq.gaffer.operation.io.Output;\n+import uk.gov.gchq.gaffer.operation.serialisation.TypeReferenceImpl;\n+import uk.gov.gchq.koryphe.Since;\n+import uk.gov.gchq.koryphe.Summary;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Map;\n+import java.util.Set;\n+\n+import static uk.gov.gchq.gaffer.federatedstore.FederatedStoreConstants.KEY_OPERATION_OPTIONS_GRAPH_IDS;\n+\n+\n+@JsonPropertyOrder(value = {\"class\", \"graphId\"}, alphabetic = true)\n+@Since(\"1.10.5\")\n+@Summary(\"Changes the protection used for accessing graphs\")\n+@JsonInclude(Include.NON_DEFAULT)\n+public class ChangeGraphAccess implements Output<Boolean> {\n+    @Required\n+    private String graphId;\n+    private Set<String> graphAuths = new HashSet<>();\n+    private Map<String, String> options = new HashMap<>();\n+    private boolean isPublic = false;\n+    private boolean disabledByDefault = FederatedGraphStorage.DEFAULT_DISABLED_BY_DEFAULT;\n+\n+    private String ownerUserId;\n+\n+    public ChangeGraphAccess() {\n+        addOption(KEY_OPERATION_OPTIONS_GRAPH_IDS, \"\");\n+    }\n+\n+    public String getGraphId() {\n+        return graphId;\n+    }\n+\n+    public void setGraphId(final String graphId) {\n+        this.graphId = graphId;\n+    }\n+\n+    @Override\n+    public ChangeGraphAccess shallowClone() throws CloneFailedException {\n+        final Builder builder = new Builder()\n+                .graphId(graphId)\n+                .disabledByDefault(disabledByDefault)\n+                .options(this.options)\n+                .isPublic(this.isPublic)\n+                .ownerUserId(this.ownerUserId);\n+\n+        if (null != graphAuths) {\n+            builder.graphAuths(graphAuths.toArray(new String[graphAuths.size()]));\n+        }\n+\n+        return builder.build();\n+    }\n+\n+    public boolean isDisabledByDefault() {\n+        return disabledByDefault;\n+    }\n+\n+    public void setDisabledByDefault(final boolean disabledByDefault) {\n+        this.disabledByDefault = disabledByDefault;\n+    }\n+\n+    @Override\n+    public Map<String, String> getOptions() {\n+        return options;\n+    }\n+\n+    @Override\n+    public void setOptions(final Map<String, String> options) {\n+        this.options = options;\n+    }\n+\n+    public Set<String> getGraphAuths() {\n+        return graphAuths;\n+    }\n+\n+    public void setGraphAuths(final Set<String> graphAuths) {\n+        this.graphAuths = graphAuths;\n+    }\n+\n+    public void setIsPublic(final boolean isPublic) {\n+        this.isPublic = isPublic;\n+    }\n+\n+    public boolean getIsPublic() {\n+        return isPublic;\n+    }\n+\n+    public void setOwnerUserId(final String ownerUserId) {\n+        this.ownerUserId = ownerUserId;\n+    }\n+\n+    public String getOwnerUserId() {\n+        return this.ownerUserId;\n+    }\n+\n+    @Override\n+    public TypeReference<Boolean> getOutputTypeReference() {\n+        return new TypeReferenceImpl.Boolean();\n+    }\n+\n+    public abstract static class GraphBuilder<OP extends ChangeGraphAccess, B extends GraphBuilder<OP, ?>> extends BaseBuilder<OP, B> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa44598d37d6a08273bc64c818dbf4eb5e1cf463"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDU2NDAyOnYy", "diffSide": "RIGHT", "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/handler/impl/FederatedChangeGraphAccessHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDozNToxMVrOFhZtXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDozNToxMVrOFhZtXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU2ODU0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Copyright 2017-2019 Crown Copyright\n          \n          \n            \n             * Copyright 2020 Crown Copyright", "url": "https://github.com/gchq/Gaffer/pull/2233#discussion_r370568543", "createdAt": "2020-01-24T10:35:11Z", "author": {"login": "d47853"}, "path": "store-implementation/federated-store/src/main/java/uk/gov/gchq/gaffer/federatedstore/operation/handler/impl/FederatedChangeGraphAccessHandler.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Copyright 2017-2019 Crown Copyright", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa44598d37d6a08273bc64c818dbf4eb5e1cf463"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4332, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}