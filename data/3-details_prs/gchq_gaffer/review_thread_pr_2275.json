{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNTMxNjAx", "number": 2275, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNTo0NVrOD-JoEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMToxMTo0NlrOD-Kt0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk2MDE4OnYy", "diffSide": "RIGHT", "path": "core/common-util/src/test/java/uk/gov/gchq/gaffer/commonutil/JsonAssert.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNTo0NVrOGYE0_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMzoxMDo1OVrOGdJ6Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODExMQ==", "bodyText": "All public methods in this class should keep the same name as external tests may depend on it.", "url": "https://github.com/gchq/Gaffer/pull/2275#discussion_r427898111", "createdAt": "2020-05-20T10:15:45Z", "author": {"login": "d47853"}, "path": "core/common-util/src/test/java/uk/gov/gchq/gaffer/commonutil/JsonAssert.java", "diffHunk": "@@ -17,25 +17,27 @@\n package uk.gov.gchq.gaffer.commonutil;\n \n import com.fasterxml.jackson.databind.ObjectMapper;\n-import org.junit.Assert;\n \n import java.io.IOException;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+\n public final class JsonAssert {\n     private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n \n     private JsonAssert() {\n         //Private to prevent instantiation\n     }\n \n-    public static void assertEquals(final String expectedJson, final String actualJson) {\n+    public static void assertJsonEquals(final String expectedJson, final String actualJson) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05db011d4205768d89c91d797ebfd4242a08ed1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIyNDI5MQ==", "bodyText": "Agreed I've reverted this back to original method name", "url": "https://github.com/gchq/Gaffer/pull/2275#discussion_r433224291", "createdAt": "2020-06-01T13:10:59Z", "author": {"login": "macenturalxl1"}, "path": "core/common-util/src/test/java/uk/gov/gchq/gaffer/commonutil/JsonAssert.java", "diffHunk": "@@ -17,25 +17,27 @@\n package uk.gov.gchq.gaffer.commonutil;\n \n import com.fasterxml.jackson.databind.ObjectMapper;\n-import org.junit.Assert;\n \n import java.io.IOException;\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n \n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotEquals;\n+\n public final class JsonAssert {\n     private static final ObjectMapper OBJECT_MAPPER = new ObjectMapper();\n \n     private JsonAssert() {\n         //Private to prevent instantiation\n     }\n \n-    public static void assertEquals(final String expectedJson, final String actualJson) {\n+    public static void assertJsonEquals(final String expectedJson, final String actualJson) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODExMQ=="}, "originalCommit": {"oid": "e05db011d4205768d89c91d797ebfd4242a08ed1"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTA4NTY3OnYy", "diffSide": "RIGHT", "path": "core/data/src/test/java/uk/gov/gchq/gaffer/data/element/function/FunctionTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDo1NDo0NlrOGYGGCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMzoxMjowOVrOGdJ8eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkxODg1Nw==", "bodyText": "There should probably be a comment on this class saying it is copied from Koryphe and should only be used while Koryphe and Gaffer use different versions of Junit.", "url": "https://github.com/gchq/Gaffer/pull/2275#discussion_r427918857", "createdAt": "2020-05-20T10:54:46Z", "author": {"login": "d47853"}, "path": "core/data/src/test/java/uk/gov/gchq/gaffer/data/element/function/FunctionTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05db011d4205768d89c91d797ebfd4242a08ed1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIyNDgyNg==", "bodyText": "I've added documentation to this class with a @see annotation to reference the koryphe dependency and why (in regards to JUnit5)", "url": "https://github.com/gchq/Gaffer/pull/2275#discussion_r433224826", "createdAt": "2020-06-01T13:12:09Z", "author": {"login": "macenturalxl1"}, "path": "core/data/src/test/java/uk/gov/gchq/gaffer/data/element/function/FunctionTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkxODg1Nw=="}, "originalCommit": {"oid": "e05db011d4205768d89c91d797ebfd4242a08ed1"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTEzODc0OnYy", "diffSide": "RIGHT", "path": "library/flink-library/src/test/java/uk/gov/gchq/gaffer/flink/operation/FlinkTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMToxMTo0NlrOGYGoWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxMTo0MzoxNFrOGdt2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkyNzY0Mg==", "bodyText": "Is this failing at the moment?", "url": "https://github.com/gchq/Gaffer/pull/2275#discussion_r427927642", "createdAt": "2020-05-20T11:11:46Z", "author": {"login": "d47853"}, "path": "library/flink-library/src/test/java/uk/gov/gchq/gaffer/flink/operation/FlinkTest.java", "diffHunk": "@@ -122,7 +122,7 @@ public static Store createStore() {\n \n     public static void verifyElements(final Graph graph) throws OperationException, InterruptedException {\n         // Wait for the elements to be ingested.\n-        Thread.sleep(2000);\n+        Thread.sleep(3000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05db011d4205768d89c91d797ebfd4242a08ed1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzIyNTk1NA==", "bodyText": "I think it originally failed once on the pipeline and intermittently on my personal machine (maybe it is slightly slower in some test runs) so the assertion runs too early and fails the test or breaks pipeline\nI can change it back to 2000?", "url": "https://github.com/gchq/Gaffer/pull/2275#discussion_r433225954", "createdAt": "2020-06-01T13:14:28Z", "author": {"login": "macenturalxl1"}, "path": "library/flink-library/src/test/java/uk/gov/gchq/gaffer/flink/operation/FlinkTest.java", "diffHunk": "@@ -122,7 +122,7 @@ public static Store createStore() {\n \n     public static void verifyElements(final Graph graph) throws OperationException, InterruptedException {\n         // Wait for the elements to be ingested.\n-        Thread.sleep(2000);\n+        Thread.sleep(3000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkyNzY0Mg=="}, "originalCommit": {"oid": "e05db011d4205768d89c91d797ebfd4242a08ed1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzgxMzA0Mg==", "bodyText": "No it's fine just might be worth noting if it's unreliable.", "url": "https://github.com/gchq/Gaffer/pull/2275#discussion_r433813042", "createdAt": "2020-06-02T11:43:14Z", "author": {"login": "d47853"}, "path": "library/flink-library/src/test/java/uk/gov/gchq/gaffer/flink/operation/FlinkTest.java", "diffHunk": "@@ -122,7 +122,7 @@ public static Store createStore() {\n \n     public static void verifyElements(final Graph graph) throws OperationException, InterruptedException {\n         // Wait for the elements to be ingested.\n-        Thread.sleep(2000);\n+        Thread.sleep(3000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkyNzY0Mg=="}, "originalCommit": {"oid": "e05db011d4205768d89c91d797ebfd4242a08ed1"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4374, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}