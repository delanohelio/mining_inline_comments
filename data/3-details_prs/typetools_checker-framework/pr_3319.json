{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNTc3Mjc3", "number": 3319, "title": "Improve AnnotatedTypeScanner and SimpleAnnotatedTypeScanner", "bodyText": "I tried to add documentation for SimpleAnnotatedTypeScanner in #3254, but I found problems with both the design and implementation of both SimpleAnnotatedTypeScanner and AnnotatedTypeScanner.  This pull request fixes those issues.  Review AnnotatedTypeScanner and SimpleAnnotatedTypeScanner first.  The other changes take advantage of the new features.\nMerge with typetools/checker-framework-inference#160.", "createdAt": "2020-05-21T20:46:18Z", "url": "https://github.com/typetools/checker-framework/pull/3319", "merged": true, "mergeCommit": {"oid": "23814209e4426966a0f89a13064e5c3026dd2478"}, "closed": true, "closedAt": "2020-06-15T20:36:05Z", "author": {"login": "smillst"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXa9oBgH2gAyNDIxNTc3Mjc3OjcxMDNmMzE1NjRjOTEwYzhhMjBmZmMzNjE2YTRkMjNjZDFkNjZiZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrk4dygH2gAyNDIxNTc3Mjc3OmRhZDY5MDg0ZWVjYWU4ZDc5MWViYTRiZTBhMTU4YTViMjZlYzljM2E=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7103f31564c910c8a20ffc3616a4d23cd1d66bf2", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/7103f31564c910c8a20ffc3616a4d23cd1d66bf2", "committedDate": "2020-04-14T03:31:11Z", "message": "Move a file and explain the `visitor` directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3740dd645b4b0f1c8f368e4922baadea72e6cf22", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/3740dd645b4b0f1c8f368e4922baadea72e6cf22", "committedDate": "2020-04-19T21:57:13Z", "message": "Move text to a different file."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee7dfaa9df28eb509ba16d5f4bda4d7de6b768ee", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/ee7dfaa9df28eb509ba16d5f4bda4d7de6b768ee", "committedDate": "2020-04-19T22:00:41Z", "message": "Make classes abstract"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "565bbf06c221eeabcff84c2a7f8294b84d5552c8", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/565bbf06c221eeabcff84c2a7f8294b84d5552c8", "committedDate": "2020-04-19T22:27:55Z", "message": "Merge ../checker-framework-branch-master into framework-visitor-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed6cda52a5a0e65539177dbe4f65020922ff71d0", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/ed6cda52a5a0e65539177dbe4f65020922ff71d0", "committedDate": "2020-04-19T23:04:38Z", "message": "Fix compilation errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35a3014ad19c20bf270dc22db08579ba6c6aaa85", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/35a3014ad19c20bf270dc22db08579ba6c6aaa85", "committedDate": "2020-04-20T14:55:18Z", "message": "Add (vague) Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22fb38f515d864cf9ba9aaf45c923adec2dc6cf3", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/22fb38f515d864cf9ba9aaf45c923adec2dc6cf3", "committedDate": "2020-04-20T21:24:09Z", "message": "Merge ../checker-framework-branch-master into framework-visitor-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e58efe0ce6115d200bee89d8140f845a47ec64d", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/2e58efe0ce6115d200bee89d8140f845a47ec64d", "committedDate": "2020-05-18T20:10:44Z", "message": "Merge branch 'master' into framework-visitor-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b4892e7b99cbea9b7030ad5c31ad3b9483681a4", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/3b4892e7b99cbea9b7030ad5c31ad3b9483681a4", "committedDate": "2020-05-19T16:50:41Z", "message": "Add functional constructors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8898b99c7ab41faa83766257cdeb387ae16ca86c", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/8898b99c7ab41faa83766257cdeb387ae16ca86c", "committedDate": "2020-05-19T17:47:12Z", "message": "Convert to functional."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f80a5b2793c44660feb2b94f069abe1c47115f3b", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/f80a5b2793c44660feb2b94f069abe1c47115f3b", "committedDate": "2020-05-19T20:18:51Z", "message": "Fix bug."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b41c86c37cb8eddba85cef6a5e38efc348e3459e", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/b41c86c37cb8eddba85cef6a5e38efc348e3459e", "committedDate": "2020-05-20T16:09:52Z", "message": "Add default value, add Javadoc, fix few bugs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ee72e9ea85d63d473cce7295a101d70f4c97c5d", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/0ee72e9ea85d63d473cce7295a101d70f4c97c5d", "committedDate": "2020-05-20T16:41:04Z", "message": "Use SimpleATS."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28c281da948096eaddbf9dcfc7be94be7ad5a0a6", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/28c281da948096eaddbf9dcfc7be94be7ad5a0a6", "committedDate": "2020-05-20T16:43:26Z", "message": "Add default result and javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c192b0512056c34adc6aae615b86652b3a3e0422", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/c192b0512056c34adc6aae615b86652b3a3e0422", "committedDate": "2020-05-20T16:46:06Z", "message": "Correct Javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e97dd0114ccc166446d03a033040912a770cfccd", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/e97dd0114ccc166446d03a033040912a770cfccd", "committedDate": "2020-05-20T16:49:24Z", "message": "Correct bug."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70e676bc132e67233219cf9c6807acb2a3c8c1f7", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/70e676bc132e67233219cf9c6807acb2a3c8c1f7", "committedDate": "2020-05-20T16:58:15Z", "message": "Merge branch 'tmp' into type-scanner-function\n\n# Conflicts:\n#\tframework/src/main/java/org/checkerframework/framework/type/visitor/AnnotatedTypeScanner.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bad9816fbd07f3035bc8ec30069486620f0e0b4f", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/bad9816fbd07f3035bc8ec30069486620f0e0b4f", "committedDate": "2020-05-20T17:14:13Z", "message": "Clean up hashcode visitor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1dcfd96d3fe3b150d59eb608bcb1193f52e4621", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/f1dcfd96d3fe3b150d59eb608bcb1193f52e4621", "committedDate": "2020-05-20T17:26:38Z", "message": "ExpressionErrorChecker and TCConvert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07610753024f13a0ddc0b478037495d194e070b1", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/07610753024f13a0ddc0b478037495d194e070b1", "committedDate": "2020-05-20T17:37:53Z", "message": "Add comment."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b992c77d3df48b6a3b726e8a8a6cadc36f54de12", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/b992c77d3df48b6a3b726e8a8a6cadc36f54de12", "committedDate": "2020-05-20T17:40:41Z", "message": "Correct."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59103e378c782fe54f8158769b0ac74e3a7d3af8", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/59103e378c782fe54f8158769b0ac74e3a7d3af8", "committedDate": "2020-05-20T19:17:50Z", "message": "Javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2636e540146622be03f40c27fb1225e4cf1b962c", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/2636e540146622be03f40c27fb1225e4cf1b962c", "committedDate": "2020-05-20T19:39:00Z", "message": "Javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c01e604c0ad74166dfe323fe84fe27c456c8a806", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/c01e604c0ad74166dfe323fe84fe27c456c8a806", "committedDate": "2020-05-20T19:51:08Z", "message": "Javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8347e3ba6c46741936d664059faa8ce76d37d32", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/e8347e3ba6c46741936d664059faa8ce76d37d32", "committedDate": "2020-05-20T20:08:55Z", "message": "Fix Javdoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfceaa0a720d64de442c21c10f91b643c346a0dc", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/dfceaa0a720d64de442c21c10f91b643c346a0dc", "committedDate": "2020-05-20T20:28:10Z", "message": "Fix typo."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f38d40f2fa15b8550cae149c87e4611e7c868bff", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/f38d40f2fa15b8550cae149c87e4611e7c868bff", "committedDate": "2020-05-20T21:02:01Z", "message": "Checkpoint."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8eb1004a223e016120840b4a411901908a754648", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/8eb1004a223e016120840b4a411901908a754648", "committedDate": "2020-05-20T21:18:15Z", "message": "Checkpoint."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8c5b0e128335c5a57c4b17f38cf454fbb3bd702", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/c8c5b0e128335c5a57c4b17f38cf454fbb3bd702", "committedDate": "2020-05-20T21:30:35Z", "message": "Checkpoint."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75d67dfef6a288d082df3a6b6e92bcad980de8d8", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/75d67dfef6a288d082df3a6b6e92bcad980de8d8", "committedDate": "2020-05-20T21:48:29Z", "message": "Correct HashCodeVisitor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c09b8089e7041dbe85f7602dc97df2e0972e1f09", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/c09b8089e7041dbe85f7602dc97df2e0972e1f09", "committedDate": "2020-05-21T16:29:08Z", "message": "Tweaks and more Javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b00e050d41f6f2d2e6bd17ca441c726c3d922a2", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/0b00e050d41f6f2d2e6bd17ca441c726c3d922a2", "committedDate": "2020-05-21T16:30:10Z", "message": "Tweaks and more Javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dffc1a07134b6eefc853d44009b47dbb6e289120", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/dffc1a07134b6eefc853d44009b47dbb6e289120", "committedDate": "2020-05-21T16:31:35Z", "message": "Correction."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbd9774dd7bc614620ba09af5d456bca388a53c9", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/bbd9774dd7bc614620ba09af5d456bca388a53c9", "committedDate": "2020-05-21T17:08:11Z", "message": "Reduce code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0f0bdbf974c2a6cc957dd822700b8fb40436201", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/c0f0bdbf974c2a6cc957dd822700b8fb40436201", "committedDate": "2020-05-21T17:36:39Z", "message": "Corrections."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f04357c88e82fc2df5b9838a51b0c99e6b2b7ce6", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/f04357c88e82fc2df5b9838a51b0c99e6b2b7ce6", "committedDate": "2020-05-21T18:37:14Z", "message": "Add Javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b4bd7e7bb1135871bb86e9f93c4bf01e991716a", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/7b4bd7e7bb1135871bb86e9f93c4bf01e991716a", "committedDate": "2020-05-21T18:56:11Z", "message": "Add Javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4b17b6712f68b47617081c80b11cc05f102006f", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/e4b17b6712f68b47617081c80b11cc05f102006f", "committedDate": "2020-06-02T19:26:30Z", "message": "Merge remote-tracking branch 'remotes/origin/master' into type-scanner-function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abb998e995b1f6d7c39f62704509ecbf25735fca", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/abb998e995b1f6d7c39f62704509ecbf25735fca", "committedDate": "2020-06-03T16:53:28Z", "message": "Merge ../checker-framework-branch-master into type-scanner-function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0120a6ebe6437728b7b47e1621eabe59eed0cd3e", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/0120a6ebe6437728b7b47e1621eabe59eed0cd3e", "committedDate": "2020-06-03T18:43:51Z", "message": "Fix ErrorProne warnings."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzcyNzA1", "url": "https://github.com/typetools/checker-framework/pull/3319#pullrequestreview-430772705", "createdAt": "2020-06-15T15:48:12Z", "commit": {"oid": "0120a6ebe6437728b7b47e1621eabe59eed0cd3e"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTo0ODoxMlrOGj4KMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjowNjozOFrOGj46ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3MzQ1OA==", "bodyText": "At least for the completer I think I would keep the separate non-anonymous class. The lambda contains a nested lambda and it get's quite hard to read.", "url": "https://github.com/typetools/checker-framework/pull/3319#discussion_r440273458", "createdAt": "2020-06-15T15:48:12Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/poly/AbstractQualifierPolymorphism.java", "diffHunk": "@@ -98,6 +98,33 @@ protected AbstractQualifierPolymorphism(\n         this.atypeFactory = factory;\n         this.qualHierarchy = factory.getQualifierHierarchy();\n         this.topQuals = new AnnotationMirrorSet(qualHierarchy.getTopAnnotations());\n+\n+        this.completer =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0120a6ebe6437728b7b47e1621eabe59eed0cd3e"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3NDkwMQ==", "bodyText": "Should the overriden be overriding?", "url": "https://github.com/typetools/checker-framework/pull/3319#discussion_r440274901", "createdAt": "2020-06-15T15:50:17Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/visitor/AnnotatedTypeScanner.java", "diffHunk": "@@ -15,46 +16,140 @@\n import org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType;\n \n /**\n- * A TypeVisitor that visits all the child tree nodes. To visit types of a particular type, just\n- * override the corresponding visitXYZ method. Inside your method, call super.visitXYZ to visit\n- * descendant nodes.\n+ * An {@code AnnotatedTypeScanner} visits an {@link AnnotatedTypeMirror} and all of its child {@link\n+ * AnnotatedTypeMirror} and preforms some function depending on the kind of type. A {@link\n+ * SimpleAnnotatedTypeScanner} scans an {@link AnnotatedTypeMirror} and preforms the same function\n+ * regardless of the kind of type. The function returns some value with type {@link R} and takes an\n+ * argument of type {@link P}. If the function does not return any value, then {@code R} should be\n+ * {@link Void}. If the function takes not arguments, then {@code P} should be {@link Void}.\n  *\n- * <p>The default implementation of the visitXYZ methods will determine a result as follows:\n+ * <p>The default implementation of the visitAnnotatedTypeMirror methods will determine a result as\n+ * follows:\n  *\n  * <ul>\n- *   <li>If the node being visited has no children, the result will be null.\n- *   <li>If the node being visited has one child, the result will be the result of calling scan on\n- *       that child. The child may be a simple node or itself a list of nodes.\n- *   <li>If the node being visited has more than one child, the result will be determined by calling\n- *       scan each child in turn, and then combining the result of each scan after the first with\n- *       the cumulative result so far, as determined by the reduce(R, R) method. Each child may be\n- *       either a simple node or a list of nodes. The default behavior of the reduce method is such\n- *       that the result of the visitXYZ method will be the result of the last child scanned.\n+ *   <li>If the type being visited has no children, the {@link #defaultResult} is returned.\n+ *   <li>If the type being visited has one child, the result of visiting the child type is returned.\n+ *   <li>If the type being visited has more than one child, the result is determined by visiting\n+ *       each child in turn, and then combining the result of each with the cumulative result so\n+ *       far, as determined by the {@link #reduce} method.\n  * </ul>\n  *\n- * Here is an example to count the parameter types number of nodes in a tree:\n+ * The {@link #reduce} method combines the results of visiting child types. It can be specified by\n+ * passing an {@link Reduce} object to one of the constructors or by overriden the method directly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0120a6ebe6437728b7b47e1621eabe59eed0cd3e"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3NTQwMg==", "bodyText": "Should overridden be overriding?", "url": "https://github.com/typetools/checker-framework/pull/3319#discussion_r440275402", "createdAt": "2020-06-15T15:51:00Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/visitor/AnnotatedTypeScanner.java", "diffHunk": "@@ -15,46 +16,140 @@\n import org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType;\n \n /**\n- * A TypeVisitor that visits all the child tree nodes. To visit types of a particular type, just\n- * override the corresponding visitXYZ method. Inside your method, call super.visitXYZ to visit\n- * descendant nodes.\n+ * An {@code AnnotatedTypeScanner} visits an {@link AnnotatedTypeMirror} and all of its child {@link\n+ * AnnotatedTypeMirror} and preforms some function depending on the kind of type. A {@link\n+ * SimpleAnnotatedTypeScanner} scans an {@link AnnotatedTypeMirror} and preforms the same function\n+ * regardless of the kind of type. The function returns some value with type {@link R} and takes an\n+ * argument of type {@link P}. If the function does not return any value, then {@code R} should be\n+ * {@link Void}. If the function takes not arguments, then {@code P} should be {@link Void}.\n  *\n- * <p>The default implementation of the visitXYZ methods will determine a result as follows:\n+ * <p>The default implementation of the visitAnnotatedTypeMirror methods will determine a result as\n+ * follows:\n  *\n  * <ul>\n- *   <li>If the node being visited has no children, the result will be null.\n- *   <li>If the node being visited has one child, the result will be the result of calling scan on\n- *       that child. The child may be a simple node or itself a list of nodes.\n- *   <li>If the node being visited has more than one child, the result will be determined by calling\n- *       scan each child in turn, and then combining the result of each scan after the first with\n- *       the cumulative result so far, as determined by the reduce(R, R) method. Each child may be\n- *       either a simple node or a list of nodes. The default behavior of the reduce method is such\n- *       that the result of the visitXYZ method will be the result of the last child scanned.\n+ *   <li>If the type being visited has no children, the {@link #defaultResult} is returned.\n+ *   <li>If the type being visited has one child, the result of visiting the child type is returned.\n+ *   <li>If the type being visited has more than one child, the result is determined by visiting\n+ *       each child in turn, and then combining the result of each with the cumulative result so\n+ *       far, as determined by the {@link #reduce} method.\n  * </ul>\n  *\n- * Here is an example to count the parameter types number of nodes in a tree:\n+ * The {@link #reduce} method combines the results of visiting child types. It can be specified by\n+ * passing an {@link Reduce} object to one of the constructors or by overriden the method directly.\n+ * If it is not otherwise specified, the reduce returns the first result if it is not null;\n+ * otherwise, the second result is returned. If the default result is nonnull and reduce never\n+ * returns null, then both parameters passed to reduce will be nonnull.\n  *\n- * <pre><code>\n- * class CountTypeVariable extends TreeScanner {\n+ * <p>When overridden a visitAnnotatedTypeMirror method, the returned expression should be {@code", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0120a6ebe6437728b7b47e1621eabe59eed0cd3e"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3OTUzMg==", "bodyText": "Should the an be and? Or something else should be reformulated here.", "url": "https://github.com/typetools/checker-framework/pull/3319#discussion_r440279532", "createdAt": "2020-06-15T15:56:51Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/visitor/SimpleAnnotatedTypeScanner.java", "diffHunk": "@@ -9,9 +9,92 @@\n import org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedPrimitiveType;\n import org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedTypeVariable;\n import org.checkerframework.framework.type.AnnotatedTypeMirror.AnnotatedWildcardType;\n+import org.checkerframework.javacutil.BugInCF;\n \n+/**\n+ * An {@link AnnotatedTypeScanner} that scans an {@link AnnotatedTypeMirror} and performs some\n+ * {@link #defaultAction} on each type. The defaultAction can be passed to the constructor {@link\n+ * #SimpleAnnotatedTypeScanner(DefaultAction)} or this class can be extended an {@link", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0120a6ebe6437728b7b47e1621eabe59eed0cd3e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4MjYzOQ==", "bodyText": "Couldn't you also pass the default action in the super call above?", "url": "https://github.com/typetools/checker-framework/pull/3319#discussion_r440282639", "createdAt": "2020-06-15T16:01:35Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/util/dependenttypes/DependentTypesHelper.java", "diffHunk": "@@ -829,37 +830,29 @@ private boolean isExpressionAnno(AnnotationMirror am) {\n      * returned.\n      */\n     private class ExpressionErrorChecker\n-            extends AnnotatedTypeScanner<List<DependentTypesError>, Void> {\n+            extends SimpleAnnotatedTypeScanner<List<DependentTypesError>, Void> {\n+\n+        /** Create ExpressionErrorChecker. */\n+        private ExpressionErrorChecker() {\n+            super(\n+                    (r1, r2) -> {\n+                        List<DependentTypesError> newList = new ArrayList<>(r1);\n+                        newList.addAll(r2);\n+                        return newList;\n+                    },\n+                    Collections.emptyList());\n+        }\n \n         @Override\n-        protected List<DependentTypesError> scan(AnnotatedTypeMirror type, Void aVoid) {\n+        protected List<DependentTypesError> defaultAction(AnnotatedTypeMirror type, Void aVoid) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0120a6ebe6437728b7b47e1621eabe59eed0cd3e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI4NTg1NA==", "bodyText": "Could this be rewritten something like type.getAnnotations().stream().anyMatch(am -> isExpressionAnno(am))?", "url": "https://github.com/typetools/checker-framework/pull/3319#discussion_r440285854", "createdAt": "2020-06-15T16:06:38Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/util/dependenttypes/DependentTypesHelper.java", "diffHunk": "@@ -918,40 +911,22 @@ private boolean hasDependentType(AnnotatedTypeMirror atm) {\n         if (atm == null) {\n             return false;\n         }\n-        Boolean b = new ContainsDependentType().visit(atm);\n-        if (b == null) {\n-            return false;\n-        }\n+        boolean b =\n+                new SimpleAnnotatedTypeScanner<>(\n+                                (type, p) -> {\n+                                    for (AnnotationMirror am : type.getAnnotations()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0120a6ebe6437728b7b47e1621eabe59eed0cd3e"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6aff8870268e3e1cbd6e4445dc1bb70a160d56dc", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/6aff8870268e3e1cbd6e4445dc1bb70a160d56dc", "committedDate": "2020-06-15T16:51:19Z", "message": "Address review comments."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb54febe1a04efa57236d034ef6fa92993679496", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/bb54febe1a04efa57236d034ef6fa92993679496", "committedDate": "2020-06-15T16:52:17Z", "message": "Merge remote-tracking branch 'origin/master' into type-scanner-function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dad69084eecae8d791eba4be0a158a5b26ec9c3a", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/dad69084eecae8d791eba4be0a158a5b26ec9c3a", "committedDate": "2020-06-15T18:23:05Z", "message": "Map.Entry."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2998, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}