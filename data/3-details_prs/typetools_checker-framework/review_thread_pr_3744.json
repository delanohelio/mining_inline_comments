{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4OTYxODc3", "number": 3744, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjo0ODoyNFrOErRMBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjo0ODoyNFrOErRMBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzODA1ODMwOnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjo0ODoyNFrOHd8f0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjo0ODoyNFrOHd8f0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE2MTkzNw==", "bodyText": "This method is not called if  {@link #shouldCheckTopLevelDeclaredOrPrimitiveType(AnnotatedTypeMirror, Tree)} returns false.", "url": "https://github.com/typetools/checker-framework/pull/3744#discussion_r501161937", "createdAt": "2020-10-07T16:48:24Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -4076,6 +4076,11 @@ protected boolean isAccessAllowed(\n      * <p>In most cases, {@code useType} simply needs to be a subtype of {@code declarationType}. If\n      * a type system makes exceptions to this rule, its implementation should override this method.\n      *\n+     * <p>This method is not called if checkTopLevelDeclaredOrPrimitiveType is false -- by default,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e38a3a3bb1c1003cd324ca6490ecfa681b4156"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 971, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}