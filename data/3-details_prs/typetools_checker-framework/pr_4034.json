{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMzkzMDAx", "number": 4034, "title": "Use terminology \"annotation file\" in preference to \"stub file\"", "bodyText": "", "createdAt": "2020-12-16T19:34:53Z", "url": "https://github.com/typetools/checker-framework/pull/4034", "merged": true, "mergeCommit": {"oid": "be0e8caeb9ed56d3c29a546b196245a9e5973003"}, "closed": true, "closedAt": "2020-12-17T02:51:24Z", "author": {"login": "mernst"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmyL_7gH2gAyNTQxMzkzMDAxOmQ3MzBhMzQwY2QzNmY4M2ZlNzdlZGYxZjU3YjU1NTVkNWYyMTM5ODQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdm6bNJAH2gAyNTQxMzkzMDAxOjkwNmM4Mjg0YTc4MmJjN2Q5NmYzNDA4NzQ1ODYwZWJmNjFlNDU0MDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d730a340cd36f83fe77edf1f57b5555d5f213984", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/d730a340cd36f83fe77edf1f57b5555d5f213984", "committedDate": "2020-12-16T17:14:43Z", "message": "Use terminology \"annotation file\" in preference to \"stub file\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa9f8e11c7ee5b8eb600ebd5c6049fdec6c81ce7", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/aa9f8e11c7ee5b8eb600ebd5c6049fdec6c81ce7", "committedDate": "2020-12-16T19:49:39Z", "message": "Undo an undesirable change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/0bcd9217721893cad3a3b0bc34c95d85db142bdb", "committedDate": "2020-12-16T21:10:58Z", "message": "Merge ../checker-framework-branch-master into rename-stub-to-annotation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MDk0Mjkz", "url": "https://github.com/typetools/checker-framework/pull/4034#pullrequestreview-554094293", "createdAt": "2020-12-16T21:21:54Z", "commit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMToyMTo1NFrOIHZr4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMTozMjozOFrOIHaEbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzMTc3Nw==", "bodyText": "This is in a method parseStubFiles, so saying stub here makes sense. Same comment applies to rest of method.", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544631777", "createdAt": "2020-12-16T21:21:54Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java", "diffHunk": "@@ -201,25 +201,26 @@ public void parseStubFiles() {\n                             annotationFileStream,\n                             factory,\n                             processingEnv,\n-                            stubAnnos);\n+                            annotationFileAnnos);\n                 }\n             } else {\n-                // We didn't find the stub files.\n-                // If the stub file has a prefix of \"checker.jar/\" then look for the file in the top\n+                // We didn't find the files.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzMzcyNw==", "bodyText": "I think now it only side-effects the last argument rather than the last two. Also, on this comment can also change \"stub\" to \"annotation file\".", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544633727", "createdAt": "2020-12-16T21:25:14Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -101,9 +101,9 @@\n  * two maps passed as arguments.\n  *\n  * <p>The main entry point is {@link AnnotationFileParser#parse(String, InputStream,\n- * AnnotatedTypeFactory, ProcessingEnvironment, StubAnnotations)}, which side-effects its last two\n- * arguments. It operates in two steps. First, it calls the Stub Parser to parse a stub file. Then,\n- * it walks the Stub Parser's AST to create/collect types and declaration annotations.\n+ * AnnotatedTypeFactory, ProcessingEnvironment, AnnotationFileAnnotations)}, which side-effects its\n+ * last two arguments. It operates in two steps. First, it calls the Stub Parser to parse a stub", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNDUzNw==", "bodyText": "\"stub file\" -> \"annotation file\".", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544634537", "createdAt": "2020-12-16T21:26:35Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -548,43 +548,44 @@ private void parseStubUnit(InputStream inputStream) {\n     /**\n      * Process {@link #stubUnit}, which is the AST produced by {@link #parseStubUnit}.\n      *\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the file; side-effected by this method\n      */\n-    private void process(StubAnnotations stubAnnos) {\n-        processStubUnit(this.stubUnit, stubAnnos);\n+    private void process(AnnotationFileAnnotations annotationFileAnnos) {\n+        processStubUnit(this.stubUnit, annotationFileAnnos);\n     }\n \n     /**\n      * Process the given StubUnit.\n      *\n      * @param su the StubUnit to process\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNDc3Mg==", "bodyText": "\"stub file\" -> \"annotation file\"", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544634772", "createdAt": "2020-12-16T21:26:54Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -482,32 +482,32 @@ public static void parseJdkFileAsStub(\n             InputStream inputStream,\n             AnnotatedTypeFactory atypeFactory,\n             ProcessingEnvironment processingEnv,\n-            StubAnnotations stubAnnos) {\n+            AnnotationFileAnnotations stubAnnos) {\n         parse(filename, inputStream, atypeFactory, processingEnv, stubAnnos, true);\n     }\n \n     /**\n-     * Parse a stub file and adds annotations to {@code stubAnnos}.\n+     * Parse a stub file and adds annotations to {@code annotationFileAnnos}.\n      *\n      * @param filename name of stub file, used only for diagnostic messages\n      * @param inputStream of stub file to parse\n      * @param atypeFactory AnnotatedTypeFactory to use\n      * @param processingEnv ProcessingEnvironment to use\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTAwNg==", "bodyText": "\"stub file\" -> \"annotation file\"", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635006", "createdAt": "2020-12-16T21:27:16Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -456,15 +456,15 @@ private void addEnclosingTypesToImportedTypes(Element element) {\n      * @param inputStream of stub file to parse\n      * @param atypeFactory AnnotatedTypeFactory to use\n      * @param processingEnv ProcessingEnvironment to use\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTIxNQ==", "bodyText": "\"stub file\" -> \"annotation file\"", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635215", "createdAt": "2020-12-16T21:27:34Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -548,43 +548,44 @@ private void parseStubUnit(InputStream inputStream) {\n     /**\n      * Process {@link #stubUnit}, which is the AST produced by {@link #parseStubUnit}.\n      *\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the file; side-effected by this method\n      */\n-    private void process(StubAnnotations stubAnnos) {\n-        processStubUnit(this.stubUnit, stubAnnos);\n+    private void process(AnnotationFileAnnotations annotationFileAnnos) {\n+        processStubUnit(this.stubUnit, annotationFileAnnos);\n     }\n \n     /**\n      * Process the given StubUnit.\n      *\n      * @param su the StubUnit to process\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method\n      */\n-    private void processStubUnit(StubUnit su, StubAnnotations stubAnnos) {\n+    private void processStubUnit(StubUnit su, AnnotationFileAnnotations annotationFileAnnos) {\n         for (CompilationUnit cu : su.getCompilationUnits()) {\n-            processCompilationUnit(cu, stubAnnos);\n+            processCompilationUnit(cu, annotationFileAnnos);\n         }\n     }\n \n     /**\n      * Process the given CompilationUnit.\n      *\n      * @param cu the CompilationUnit to process\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTQzMQ==", "bodyText": "\"stub file\" -> \"annotation file\"", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635431", "createdAt": "2020-12-16T21:27:59Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -593,17 +594,18 @@ private void processCompilationUnit(CompilationUnit cu, StubAnnotations stubAnno\n      * Process the given package declaration\n      *\n      * @param packDecl the package declaration to process\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTUzMQ==", "bodyText": "\"stub file\" -> \"annotation file\"", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635531", "createdAt": "2020-12-16T21:28:09Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -614,10 +616,12 @@ private void processPackage(PackageDeclaration packDecl, StubAnnotations stubAnn\n      * @param typeDecl the type declaration to process\n      * @param outertypeName the name of the containing class, when processing a nested class;\n      *     otherwise null\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 175}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTYxOA==", "bodyText": "\"stub file\" -> \"annotation file\"", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635618", "createdAt": "2020-12-16T21:28:22Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -744,13 +756,15 @@ private boolean hasNoAnnotationFileParserWarning(Iterable<AnnotationExpr> aexprs\n      *\n      * @param decl a type declaration\n      * @param elt the type's element\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 245}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTcwMQ==", "bodyText": "\"stub file\" -> \"annotation file\"", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635701", "createdAt": "2020-12-16T21:28:34Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -808,17 +822,17 @@ private boolean hasNoAnnotationFileParserWarning(Iterable<AnnotationExpr> aexprs\n      *\n      * @param decl enum declaration\n      * @param elt element representing enum\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 276}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNTc0NQ==", "bodyText": "\"stub file\" -> \"annotation file\"", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544635745", "createdAt": "2020-12-16T21:28:40Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -878,27 +892,36 @@ private void annotateSupertypes(\n      *\n      * @param decl a method or constructor declaration\n      * @param elt the method or constructor's element\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 298}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNjAxNg==", "bodyText": "\"stub file\" -> \"annotation file\"", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544636016", "createdAt": "2020-12-16T21:29:06Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -970,13 +993,13 @@ private void processCallableDeclaration(\n      * @param method a Method or Constructor declaration\n      * @param elt ExecutableElement of {@code method}\n      * @param methodType annotated type of {@code method}\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 359}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNjE3Nw==", "bodyText": "\"stub file\" -> \"annotation file\"", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544636177", "createdAt": "2020-12-16T21:29:22Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -1229,24 +1253,27 @@ private void annotate(\n \n     /**\n      * Process the field declaration in decl, and attach any type qualifiers to the type of elt in\n-     * {@code stubAnnos}.\n+     * {@code annotationFileAnnos}.\n      *\n      * @param decl the declaration in the annotation file\n      * @param elt the element representing that same declaration\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 401}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNjI3NQ==", "bodyText": "\"stub file\" -> \"annotation file\"", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544636275", "createdAt": "2020-12-16T21:29:32Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -1268,15 +1295,17 @@ private void processField(\n      *\n      * @param decl the enum constant, in Javaparser AST form (the source of annotations)\n      * @param elt the enum constant declaration, as an element (the destination for annotations)\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 439}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzNjYyNw==", "bodyText": "\"stub file\" -> \"annotation file\"", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544636627", "createdAt": "2020-12-16T21:30:09Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -1329,19 +1358,19 @@ private void annotate(\n     }\n \n     /**\n-     * Adds to {@code stubAnnos} all the annotations in {@code annotations} that are applicable to\n-     * {@code elt}'s location. For example, if an annotation is a type annotation but {@code elt} is\n-     * a field declaration, the type annotation will be ignored.\n+     * Adds to {@code annotationFileAnnos} all the annotations in {@code annotations} that are\n+     * applicable to {@code elt}'s location. For example, if an annotation is a type annotation but\n+     * {@code elt} is a field declaration, the type annotation will be ignored.\n      *\n      * @param elt the element to be annotated\n      * @param annotations set of annotations that may be applicable to elt\n-     * @param stubAnnos annotations from the stub file; side-effected by this method\n+     * @param annotationFileAnnos annotations from the stub file; side-effected by this method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 471}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDYzODA2MA==", "bodyText": "Same comment as jwaataja#1. Retain usage of word \"source\".", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544638060", "createdAt": "2020-12-16T21:32:38Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileResource.java", "diffHunk": "@@ -3,7 +3,7 @@\n import java.io.IOException;\n import java.io.InputStream;\n \n-/** Contract for sources of stub data. */\n+/** Interface for annotation files (stub files). */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bcd9217721893cad3a3b0bc34c95d85db142bdb"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df71ffb6fa53f110e00c32d718b20a39b96c2b75", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/df71ffb6fa53f110e00c32d718b20a39b96c2b75", "committedDate": "2020-12-16T21:56:43Z", "message": "Improve wording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12044865eb55bb74ba282a641c38596bcb206c9d", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/12044865eb55bb74ba282a641c38596bcb206c9d", "committedDate": "2020-12-17T00:48:46Z", "message": "Merge ../checker-framework-branch-master into rename-stub-to-annotation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjIyODg0", "url": "https://github.com/typetools/checker-framework/pull/4034#pullrequestreview-554222884", "createdAt": "2020-12-17T01:53:18Z", "commit": {"oid": "df71ffb6fa53f110e00c32d718b20a39b96c2b75"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTo1NDoxMVrOIHhDXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMTo1NDozOVrOIHhEKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc1MjQ3OQ==", "bodyText": "In parseStubFile, don't remove \"stub\".", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544752479", "createdAt": "2020-12-17T01:54:11Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java", "diffHunk": "@@ -212,14 +212,15 @@ public void parseStubFiles() {\n                 }\n                 InputStream in = checker.getClass().getResourceAsStream(path);\n                 if (in != null) {\n-                    AnnotationFileParser.parse(path, in, factory, processingEnv, stubAnnos);\n+                    AnnotationFileParser.parse(\n+                            path, in, factory, processingEnv, annotationFileAnnos);\n                 } else {\n-                    // Didn't find the stub file.  Issue a warning.\n+                    // Didn't find the file.  Issue a warning.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12044865eb55bb74ba282a641c38596bcb206c9d"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc1MjUyNQ==", "bodyText": "In parseStubFile, don't remove \"stub\".", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544752525", "createdAt": "2020-12-17T01:54:17Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java", "diffHunk": "@@ -212,14 +212,15 @@ public void parseStubFiles() {\n                 }\n                 InputStream in = checker.getClass().getResourceAsStream(path);\n                 if (in != null) {\n-                    AnnotationFileParser.parse(path, in, factory, processingEnv, stubAnnos);\n+                    AnnotationFileParser.parse(\n+                            path, in, factory, processingEnv, annotationFileAnnos);\n                 } else {\n-                    // Didn't find the stub file.  Issue a warning.\n+                    // Didn't find the file.  Issue a warning.\n \n-                    // When using a compound checker, the target stub file may be found by the\n+                    // When using a compound checker, the target file may be found by the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12044865eb55bb74ba282a641c38596bcb206c9d"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc1MjU1MA==", "bodyText": "In parseStubFile, don't remove \"stub\".", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544752550", "createdAt": "2020-12-17T01:54:23Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java", "diffHunk": "@@ -212,14 +212,15 @@ public void parseStubFiles() {\n                 }\n                 InputStream in = checker.getClass().getResourceAsStream(path);\n                 if (in != null) {\n-                    AnnotationFileParser.parse(path, in, factory, processingEnv, stubAnnos);\n+                    AnnotationFileParser.parse(\n+                            path, in, factory, processingEnv, annotationFileAnnos);\n                 } else {\n-                    // Didn't find the stub file.  Issue a warning.\n+                    // Didn't find the file.  Issue a warning.\n \n-                    // When using a compound checker, the target stub file may be found by the\n+                    // When using a compound checker, the target file may be found by the\n                     // current checker's parent checkers. Also check this to avoid a false\n                     // warning. Currently, only the original checker will try to parse the target\n-                    // stub file, the parent checkers are only used to reduce false warnings.\n+                    // file, the parent checkers are only used to reduce false warnings.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12044865eb55bb74ba282a641c38596bcb206c9d"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc1MjY4MQ==", "bodyText": "In parseStubFile, don't remove \"stub\".", "url": "https://github.com/typetools/checker-framework/pull/4034#discussion_r544752681", "createdAt": "2020-12-17T01:54:39Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileElementTypes.java", "diffHunk": "@@ -238,7 +239,7 @@ public void parseStubFiles() {\n                             currentChecker = currentChecker.getParentChecker();\n                         }\n                     }\n-                    // If there exists one parent checker that can find this stub file, don't\n+                    // If there exists one parent checker that can find this file, don't", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12044865eb55bb74ba282a641c38596bcb206c9d"}, "originalPosition": 94}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b53d28c915e7e5413eca59e3307b1690e73bd66f", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/b53d28c915e7e5413eca59e3307b1690e73bd66f", "committedDate": "2020-12-17T02:47:57Z", "message": "Merge ../checker-framework-branch-master into rename-stub-to-annotation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "906c8284a782bc7d96f3408745860ebf61e45403", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/906c8284a782bc7d96f3408745860ebf61e45403", "committedDate": "2020-12-17T02:50:34Z", "message": "Undo changes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2459, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}