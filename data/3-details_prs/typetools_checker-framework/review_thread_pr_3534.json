{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5Nzk2NTcz", "number": 3534, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDoxODowNlrOEULsQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDoyMTo1MFrOEULv7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTk4NTI5OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/Block.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDoxODowN1rOG6VEyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDo0MzoxNlrOG6VtPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgxNTg4MQ==", "bodyText": "Should this be Set like for getPredecessors()? We don't need duplicates in the result.", "url": "https://github.com/typetools/checker-framework/pull/3534#discussion_r463815881", "createdAt": "2020-07-31T20:18:07Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/Block.java", "diffHunk": "@@ -41,4 +42,11 @@\n      * @return the predecessors of this basic block\n      */\n     Set<Block> getPredecessors();\n+\n+    /**\n+     * Returns all the successors of this basic block.\n+     *\n+     * @return all the successors of this basic block\n+     */\n+    Collection<Block> getSuccessors();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f864e1e2695cc05a985a86c74f50651340fea08"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyNjIzNg==", "bodyText": "This forces use of LinkedHashSet throughout instead of the more efficient ArrayList.  I don't see anywhere that clients of getPredecessors require (for correctness) that the result is a set.", "url": "https://github.com/typetools/checker-framework/pull/3534#discussion_r463826236", "createdAt": "2020-07-31T20:43:16Z", "author": {"login": "mernst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/Block.java", "diffHunk": "@@ -41,4 +42,11 @@\n      * @return the predecessors of this basic block\n      */\n     Set<Block> getPredecessors();\n+\n+    /**\n+     * Returns all the successors of this basic block.\n+     *\n+     * @return all the successors of this basic block\n+     */\n+    Collection<Block> getSuccessors();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgxNTg4MQ=="}, "originalCommit": {"oid": "8f864e1e2695cc05a985a86c74f50651340fea08"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTk5NDY5OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/Block.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDoyMTo1MFrOG6VKgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDoyMTo1MFrOG6VKgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgxNzM0NQ==", "bodyText": "In contrast to getPredecessors there is an all in this sentence, which made me think this gives all transitive successors. It doesn't look like that is the case or intention.\nSo how about replacing all with direct or removing the all?", "url": "https://github.com/typetools/checker-framework/pull/3534#discussion_r463817345", "createdAt": "2020-07-31T20:21:50Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/Block.java", "diffHunk": "@@ -41,4 +42,11 @@\n      * @return the predecessors of this basic block\n      */\n     Set<Block> getPredecessors();\n+\n+    /**\n+     * Returns all the successors of this basic block.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f864e1e2695cc05a985a86c74f50651340fea08"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1623, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}