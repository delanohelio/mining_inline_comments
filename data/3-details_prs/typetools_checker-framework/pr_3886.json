{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NTg4NTIy", "number": 3886, "title": "Handle code that is not in a method; fixes #3884", "bodyText": "", "createdAt": "2020-11-10T15:55:19Z", "url": "https://github.com/typetools/checker-framework/pull/3886", "merged": true, "mergeCommit": {"oid": "452ce97db68a1e189eba8044dfec4c692e816689"}, "closed": true, "closedAt": "2020-11-10T21:30:52Z", "author": {"login": "mernst"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABda-tlLAH2gAyNTE4NTg4NTIyOmM3N2QzMzFhYmRiZjI4Mjg2YjZjZTE1OGZmMjljNzRiMTVhNTQwNGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbNeezgFqTUyNzQ3NzY0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c77d331abdbf28286b6ce158ff29c74b15a5404c", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/c77d331abdbf28286b6ce158ff29c74b15a5404c", "committedDate": "2020-11-10T01:03:10Z", "message": "Fix test for whether a tree has a receiver; fixes #3884"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b739b59bf56505ae08ad264fac367a3a199bdee8", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/b739b59bf56505ae08ad264fac367a3a199bdee8", "committedDate": "2020-11-10T03:55:38Z", "message": "Handle synthetic trees"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65d5845522e05fc8344970f7821ec8637522bd8d", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/65d5845522e05fc8344970f7821ec8637522bd8d", "committedDate": "2020-11-10T15:53:28Z", "message": "Merge ../checker-framework-branch-master into issue3884"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MzkxNDAz", "url": "https://github.com/typetools/checker-framework/pull/3886#pullrequestreview-527391403", "createdAt": "2020-11-10T16:37:22Z", "commit": {"oid": "65d5845522e05fc8344970f7821ec8637522bd8d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjozNzoyMlrOHwlSGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjozNzoyMlrOHwlSGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwNDUzNg==", "bodyText": "Shouldn't all code be within at least a class? Can we specify more clearly when this method can return null?\nIn the long term, we should probably think about checking for enclosing lambda's and field declarations and how to handle such trees.\nUpdate: TreeUtils.enclosingMethodOrLambda also seems relevant https://github.com/typetools/checker-framework/blob/master/javacutil/src/main/java/org/checkerframework/javacutil/TreeUtils.java#L330", "url": "https://github.com/typetools/checker-framework/pull/3886#discussion_r520704536", "createdAt": "2020-11-10T16:37:22Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/AnnotatedTypeFactory.java", "diffHunk": "@@ -1757,7 +1760,7 @@ public AnnotatedNullType getAnnotatedNullType(Set<? extends AnnotationMirror> an\n      * @param tree tree to whose inner most enclosing method or class is returned.\n      * @return the inner most enclosing method or class tree of {@code tree}\n      */\n-    protected Tree getEnclosingClassOrMethod(Tree tree) {\n+    protected @Nullable Tree getEnclosingClassOrMethod(Tree tree) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65d5845522e05fc8344970f7821ec8637522bd8d"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59772afe5c4750edfb6098f056bd6d74c4ac7fde", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/59772afe5c4750edfb6098f056bd6d74c4ac7fde", "committedDate": "2020-11-10T16:45:24Z", "message": "Merge ../checker-framework-branch-master into issue3884"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "295a40d4019046d1e9c2ac6e821db6ee48c2984c", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/295a40d4019046d1e9c2ac6e821db6ee48c2984c", "committedDate": "2020-11-10T16:46:56Z", "message": "Don't return null from getEnclosingClassOrMethod"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78323cefd1a6b3eee265aae74f3172302d850df6", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/78323cefd1a6b3eee265aae74f3172302d850df6", "committedDate": "2020-11-10T18:13:06Z", "message": "Correct fix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NDc3NjQ2", "url": "https://github.com/typetools/checker-framework/pull/3886#pullrequestreview-527477646", "createdAt": "2020-11-10T18:14:58Z", "commit": {"oid": "78323cefd1a6b3eee265aae74f3172302d850df6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODoxNDo1OFrOHwpUVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODoxNDo1OFrOHwpUVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc3MDY0Nw==", "bodyText": "I'm didn't see any easy way to mark them as static, but this could cause problems else where in the code.", "url": "https://github.com/typetools/checker-framework/pull/3886#discussion_r520770647", "createdAt": "2020-11-10T18:14:58Z", "author": {"login": "smillst"}, "path": "javacutil/src/main/java/org/checkerframework/javacutil/ElementUtils.java", "diffHunk": "@@ -432,8 +432,11 @@ public static boolean hasReceiver(Element element) {\n             // A constructor can only have a receiver if the class it creates has an outer type.\n             TypeMirror t = element.getEnclosingElement().asType();\n             return TypesUtils.hasEnclosingType(t);\n-        } else if (element.getKind().isField()) {\n-            if (ElementUtils.isStatic(element)) {\n+        } else if (element.getKind() == ElementKind.FIELD) {\n+            if (ElementUtils.isStatic(element)\n+                    // Artificial fields in interfaces are not marked as static, so check that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78323cefd1a6b3eee265aae74f3172302d850df6"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2504, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}