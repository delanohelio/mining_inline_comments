{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTUzOTU1", "number": 3450, "title": "Do not do inference on temporary variables in whole-program inference", "bodyText": "fixes #3442 for both -Ainfer=stubs and -Ainfer=jaifs", "createdAt": "2020-07-09T00:43:32Z", "url": "https://github.com/typetools/checker-framework/pull/3450", "merged": true, "mergeCommit": {"oid": "cc5c3c7fed63ee4bebfe055d428fbbf25ad7f9da"}, "closed": true, "closedAt": "2020-07-09T18:25:31Z", "author": {"login": "kelloggm"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczEFuzAH2gAyNDQ2NTUzOTU1OjkxYzM4NzJkZjYwZDQzNmM0Nzk0ODcwMzBjODg1Mzg4Y2ZmY2VlNzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczSK_dgFqTQ0NTgwOTA2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "91c3872df60d436c479487030c885388cffcee70", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/91c3872df60d436c479487030c885388cffcee70", "committedDate": "2020-07-09T00:42:06Z", "message": "do not do inference on temporary variables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjYwNDI4", "url": "https://github.com/typetools/checker-framework/pull/3450#pullrequestreview-445260428", "createdAt": "2020-07-09T03:07:53Z", "commit": {"oid": "91c3872df60d436c479487030c885388cffcee70"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMzowNzo1M1rOGvAIBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMzoyMjo1OVrOGvAWMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkzODMwOA==", "bodyText": "It's unclear how this comment applies to the check being performed. Maybe something like \"Do not attempt to infer types for variables with invalid names, which can be generated by temporary variables. See ...\".", "url": "https://github.com/typetools/checker-framework/pull/3450#discussion_r451938308", "createdAt": "2020-07-09T03:07:53Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/common/wholeprograminference/WholeProgramInferenceScenes.java", "diffHunk": "@@ -283,6 +284,12 @@ public void updateFromFieldAssignment(\n                             + lhs.getClass());\n         }\n \n+        // Do not attempt to infer types for temporary variables.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91c3872df60d436c479487030c885388cffcee70"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk0MTkzOQ==", "bodyText": "Two questions.\n\n\nIs it having a valid identifier equivalent equivalent to being a temporary variable? If not, then this fix might work for the issue in question, but still do inference on other temporary nodes. I noticed near this line from the code that creates the variable that setInSource(false) is called on the generated nodes. Would something like that work here instead?\n\n\nWhy is the temporary variable considered a field in the first place? I feel like we would want to do inference on temporary variables in an expression like int n = i++ because the temporary variable would hold the inferred type of the expression i++. It seems to me like the root of the problem is that in static blocks in particular, the temporary variable is somehow \"attached\" to the class as a field.", "url": "https://github.com/typetools/checker-framework/pull/3450#discussion_r451941939", "createdAt": "2020-07-09T03:22:59Z", "author": {"login": "jwaataja"}, "path": "framework/src/main/java/org/checkerframework/common/wholeprograminference/WholeProgramInferenceScenes.java", "diffHunk": "@@ -283,6 +284,12 @@ public void updateFromFieldAssignment(\n                             + lhs.getClass());\n         }\n \n+        // Do not attempt to infer types for temporary variables.\n+        // See https://github.com/typetools/checker-framework/issues/3442\n+        if (!SourceVersion.isIdentifier(fieldName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91c3872df60d436c479487030c885388cffcee70"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1Mjc4MDY0", "url": "https://github.com/typetools/checker-framework/pull/3450#pullrequestreview-445278064", "createdAt": "2020-07-09T04:14:46Z", "commit": {"oid": "91c3872df60d436c479487030c885388cffcee70"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNDoxNDo0NlrOGvBEIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwNDoxNDo0NlrOGvBEIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk1MzY5OA==", "bodyText": "Can you define the term \"temporary variable\"?  Do you mean \"compiler-generated\"?", "url": "https://github.com/typetools/checker-framework/pull/3450#discussion_r451953698", "createdAt": "2020-07-09T04:14:46Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/common/wholeprograminference/WholeProgramInferenceScenes.java", "diffHunk": "@@ -283,6 +284,12 @@ public void updateFromFieldAssignment(\n                             + lhs.getClass());\n         }\n \n+        // Do not attempt to infer types for temporary variables.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91c3872df60d436c479487030c885388cffcee70"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c566f15b2ac1eee2647eb0994af7df69c43d560e", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/c566f15b2ac1eee2647eb0994af7df69c43d560e", "committedDate": "2020-07-09T16:00:16Z", "message": "improve documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1Nzg2NjA5", "url": "https://github.com/typetools/checker-framework/pull/3450#pullrequestreview-445786609", "createdAt": "2020-07-09T16:36:54Z", "commit": {"oid": "c566f15b2ac1eee2647eb0994af7df69c43d560e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODA5MDYy", "url": "https://github.com/typetools/checker-framework/pull/3450#pullrequestreview-445809062", "createdAt": "2020-07-09T17:06:31Z", "commit": {"oid": "c566f15b2ac1eee2647eb0994af7df69c43d560e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2655, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}