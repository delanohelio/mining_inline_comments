{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MzM5NTA4", "number": 3796, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyNTozNlrOEvZi1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjozMTowN1rOEvZrgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTM3MDQ1OnYy", "diffSide": "RIGHT", "path": "checker/build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyNTozNlrOHkW_fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyNTozNlrOHkW_fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4NzQ4Ng==", "bodyText": "The exclude takes a file path, not a class name.", "url": "https://github.com/typetools/checker-framework/pull/3796#discussion_r507887486", "createdAt": "2020-10-19T16:25:36Z", "author": {"login": "smillst"}, "path": "checker/build.gradle", "diffHunk": "@@ -247,6 +247,15 @@ task jtregJdk11Tests(dependsOn: ':downloadJtreg', group: 'Verification') {\n     }\n }\n \n+// JSpecify tests are excluded by default.  To run them:\n+// ./gradlew NullnessJspecifySamplesTest\n+test {\n+    // The fully-qualified name does not work.  I'm not sure why.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4314d799f7721969a4bce172c59e6f2597adddf4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTM3NDQ0OnYy", "diffSide": "RIGHT", "path": "checker/src/test/java/org/checkerframework/checker/test/junit/NullnessJspecifySamplesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyNjozNlrOHkXCHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjoyNjozNlrOHkXCHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg4ODE1Nw==", "bodyText": "You also need to have jspecify installed in a sibling directory.", "url": "https://github.com/typetools/checker-framework/pull/3796#discussion_r507888157", "createdAt": "2020-10-19T16:26:36Z", "author": {"login": "smillst"}, "path": "checker/src/test/java/org/checkerframework/checker/test/junit/NullnessJspecifySamplesTest.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package org.checkerframework.checker.test.junit;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.checkerframework.framework.test.CheckerFrameworkPerDirectoryTest;\n+import org.checkerframework.framework.test.TypecheckResult;\n+import org.checkerframework.framework.test.diagnostics.DiagnosticKind;\n+import org.checkerframework.framework.test.diagnostics.TestDiagnostic;\n+import org.checkerframework.javacutil.BugInCF;\n+import org.junit.runners.Parameterized.Parameters;\n+\n+/**\n+ * JUnit tests for the Nullness Checker -- test the Jspecify samples. To run this test:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4314d799f7721969a4bce172c59e6f2597adddf4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTM5MjY1OnYy", "diffSide": "RIGHT", "path": "checker/src/test/java/org/checkerframework/checker/test/junit/NullnessJspecifySamplesTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjozMTowN1rOHkXNtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjozMTowN1rOHkXNtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5MTEyNA==", "bodyText": "This should be \"../../../jspecify/samples\".", "url": "https://github.com/typetools/checker-framework/pull/3796#discussion_r507891124", "createdAt": "2020-10-19T16:31:07Z", "author": {"login": "smillst"}, "path": "checker/src/test/java/org/checkerframework/checker/test/junit/NullnessJspecifySamplesTest.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package org.checkerframework.checker.test.junit;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.List;\n+import org.checkerframework.framework.test.CheckerFrameworkPerDirectoryTest;\n+import org.checkerframework.framework.test.TypecheckResult;\n+import org.checkerframework.framework.test.diagnostics.DiagnosticKind;\n+import org.checkerframework.framework.test.diagnostics.TestDiagnostic;\n+import org.checkerframework.javacutil.BugInCF;\n+import org.junit.runners.Parameterized.Parameters;\n+\n+/**\n+ * JUnit tests for the Nullness Checker -- test the Jspecify samples. To run this test:\n+ *\n+ * <pre>{@code\n+ * ./gradlew :checker:NullnessJspecifySamples\n+ * }</pre>\n+ */\n+public class NullnessJspecifySamplesTest extends CheckerFrameworkPerDirectoryTest {\n+\n+    /**\n+     * Create a NullnessJspecifySamplesTest.\n+     *\n+     * @param testFiles the files containing test code, which will be type-checked\n+     */\n+    public NullnessJspecifySamplesTest(List<File> testFiles) {\n+        super(\n+                testFiles,\n+                org.checkerframework.checker.nullness.NullnessChecker.class,\n+                \"nullness\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4314d799f7721969a4bce172c59e6f2597adddf4"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 984, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}