{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MDQzOTc1", "number": 3389, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDowNjowMFrOEIgsyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDoxMDoxMVrOEIgxsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzU5ODE2OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDowNjowMFrOGohQUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMToyNTo1OFrOGojr6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE0MTA3NA==", "bodyText": "true is a literal not a constant. So this should say Determine whether loop condition is the boolean literal \"true\",.   You've used constant instead of literal in other places in this pull request.  Please change all uses.", "url": "https://github.com/typetools/checker-framework/pull/3389#discussion_r445141074", "createdAt": "2020-06-24T20:06:00Z", "author": {"login": "smillst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "diffHunk": "@@ -4913,15 +4915,30 @@ public Node visitWhileLoop(WhileLoopTree tree, Void p) {\n             // Condition\n             addLabelForNextNode(conditionStart);\n             assert tree.getCondition() != null;\n+            // Determine whether loop condition is a constant true, according to the compiler logic.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ec2db1afbbf0c1e7fc24acb1491bda1a4b405e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE1OTI5MA==", "bodyText": "More generally, a literal appears in source code, and a constant is an expression that can be evaluated at compile time.  So, true is both a literal and a constant.  4 > 3 is a constant.\nUsing these terms consistently will help to make the code easier to read.  Thanks!\n(I haven't read the code to determine whether it is checking for the literal true or the constant true.)", "url": "https://github.com/typetools/checker-framework/pull/3389#discussion_r445159290", "createdAt": "2020-06-24T20:41:39Z", "author": {"login": "mernst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "diffHunk": "@@ -4913,15 +4915,30 @@ public Node visitWhileLoop(WhileLoopTree tree, Void p) {\n             // Condition\n             addLabelForNextNode(conditionStart);\n             assert tree.getCondition() != null;\n+            // Determine whether loop condition is a constant true, according to the compiler logic.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE0MTA3NA=="}, "originalCommit": {"oid": "33ec2db1afbbf0c1e7fc24acb1491bda1a4b405e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE4MDkwNQ==", "bodyText": "@smillst This PR correctly uses constant. The compiler handles \"!false\" and \"6 > 4\" as being the compile-time constant true.\n@d367wang Please add the following test case:\n    Issue3249() {\n        double local;\n        while (6 > 4) {\n            local = 1;\n            break;\n        }\n        field = local;\n    }", "url": "https://github.com/typetools/checker-framework/pull/3389#discussion_r445180905", "createdAt": "2020-06-24T21:25:58Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "diffHunk": "@@ -4913,15 +4915,30 @@ public Node visitWhileLoop(WhileLoopTree tree, Void p) {\n             // Condition\n             addLabelForNextNode(conditionStart);\n             assert tree.getCondition() != null;\n+            // Determine whether loop condition is a constant true, according to the compiler logic.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE0MTA3NA=="}, "originalCommit": {"oid": "33ec2db1afbbf0c1e7fc24acb1491bda1a4b405e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzYxMDczOnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDoxMDoxMVrOGohYhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMTozODoxMFrOGokB0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE0MzE3NQ==", "bodyText": "This method works for any tree, even if that tree is not a loop condition.  We might find uses for this method outside of this class, would you please move it to TreeUtils and rename it to isLiteralTrue.", "url": "https://github.com/typetools/checker-framework/pull/3389#discussion_r445143175", "createdAt": "2020-06-24T20:10:11Z", "author": {"login": "smillst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "diffHunk": "@@ -4985,6 +5002,35 @@ public Node visitOther(Tree tree, Void p) {\n         }\n     }\n \n+    /**\n+     * Determine whether loop condition {@link JCTree} is a constant true, according to the compiler", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33ec2db1afbbf0c1e7fc24acb1491bda1a4b405e"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE4MTc4MQ==", "bodyText": "Moving to TreeUtils sounds good. As name I would use isExpressionConstantTrue or isExprConstTrue, or the current isCondConstTrue.", "url": "https://github.com/typetools/checker-framework/pull/3389#discussion_r445181781", "createdAt": "2020-06-24T21:27:54Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "diffHunk": "@@ -4985,6 +5002,35 @@ public Node visitOther(Tree tree, Void p) {\n         }\n     }\n \n+    /**\n+     * Determine whether loop condition {@link JCTree} is a constant true, according to the compiler", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE0MzE3NQ=="}, "originalCommit": {"oid": "33ec2db1afbbf0c1e7fc24acb1491bda1a4b405e"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE4NjUxMg==", "bodyText": "The Javadoc should say is a compile-time constant true or as the JLS uses a condition expression has the constant value true.  (I clearly misunderstood the term constant true, other might, too.)", "url": "https://github.com/typetools/checker-framework/pull/3389#discussion_r445186512", "createdAt": "2020-06-24T21:38:10Z", "author": {"login": "smillst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "diffHunk": "@@ -4985,6 +5002,35 @@ public Node visitOther(Tree tree, Void p) {\n         }\n     }\n \n+    /**\n+     * Determine whether loop condition {@link JCTree} is a constant true, according to the compiler", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE0MzE3NQ=="}, "originalCommit": {"oid": "33ec2db1afbbf0c1e7fc24acb1491bda1a4b405e"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1704, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}