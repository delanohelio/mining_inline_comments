{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NTA4OTMy", "number": 3509, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxNTo0MTozNVrOESD4Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToxNjoxMVrOETTXDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzczMzE1OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxNTo0MTozNVrOG3FmCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMzo1MzozMFrOG3IKUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNjUyMA==", "bodyText": "What does \"without analysis\" mean?  It's here and in the method name.\nI realize this phrase exists elsewhere in the code (it's not your invention), but I don't understand it in the other places and its documentation could be improved throughout.  Thanks!", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r460416520", "createdAt": "2020-07-25T15:41:35Z", "author": {"login": "mernst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "diffHunk": "@@ -116,6 +127,25 @@ protected void generateDOTofCFGWithoutAnalysis(\n         generateDOTofCFG(inputFile, outputDir, method, clas, pdf, verbose, null);\n     }\n \n+    /**\n+     * Generate the String representation of the CFG for a method without analysis.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941bc4c421da136441600c50540a0e850b5c2ccf"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyMzY0Ng==", "bodyText": "\"without analysis\" means that analysis=null. So analysis.performAnalysis(cfg); will not be executed. Only the control flow graph will be visualized.\nBefore this PR, you can generate the dot representation of the control flow graph by:\njava -Xbootclasspath/p:$CHECKERFRAMEWORK/checker/dist/javac.jar \\\n  -cp $CHECKERFRAMEWORK/checker/dist/checker.jar \\\n  org.checkerframework.dataflow.cfg.CFGVisualizeLauncher \\\nTest.java cfg -class Test -method test\n\nThen the dot files will be generated. (You can also add -pdf to generate pdf files.)\nBut there is no way to see the string representation from the command line.\nAfter this PR (add -string at the end of the command):\njava -Xbootclasspath/p:$CHECKERFRAMEWORK/checker/dist/javac.jar \\\n  -cp $CHECKERFRAMEWORK/checker/dist/checker.jar \\\n  org.checkerframework.dataflow.cfg.CFGVisualizeLauncher \\\nTest.java cfg -class Test -method test -string\n\nA string graph will be printed:\n2 -> 3\n3 -> 4\n4 -> 8\n4 -> 10\n8 -> 0\n10 -> 0\n\n2:\n<entry>\n\n3:\na   [ VariableDeclaration ]\n1   [ IntegerLiteral ]\na = 1   [ Assignment ]\nb   [ VariableDeclaration ]\n2   [ IntegerLiteral ]\nb = 2   [ Assignment ]\nc   [ VariableDeclaration ]\n3   [ IntegerLiteral ]\nc = 3   [ Assignment ]\na   [ LocalVariable ]\n0   [ IntegerLiteral ]\n(a > 0)   [ GreaterThan ]\n\n4:\nConditionalBlock: then: 8, else: 10\n\n8:\nd   [ VariableDeclaration ]\na   [ LocalVariable ]\nc   [ LocalVariable ]\n(a + c)   [ NumericalAddition ]\nd = (a + c)   [ Assignment ]\n\n10:\ne   [ VariableDeclaration ]\na   [ LocalVariable ]\nb   [ LocalVariable ]\n(a + b)   [ NumericalAddition ]\ne = (a + b)   [ Assignment ]\n\n0:\n<exit>\n\nI think this may be convenient when we only want to visualize a simple program.", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r460423646", "createdAt": "2020-07-25T17:01:01Z", "author": {"login": "xingweitian"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "diffHunk": "@@ -116,6 +127,25 @@ protected void generateDOTofCFGWithoutAnalysis(\n         generateDOTofCFG(inputFile, outputDir, method, clas, pdf, verbose, null);\n     }\n \n+    /**\n+     * Generate the String representation of the CFG for a method without analysis.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNjUyMA=="}, "originalCommit": {"oid": "941bc4c421da136441600c50540a0e850b5c2ccf"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ1ODU3OQ==", "bodyText": "Thanks for the explanation.  I wrote some text for the manual (which is what I really wanted.)  Please check to see that it is accurate.\nI am not convinced I would want to use this, but I don't object to providing the feature.\nCould you please document it in the manual as well as in the changelog?", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r460458579", "createdAt": "2020-07-25T23:53:30Z", "author": {"login": "mernst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "diffHunk": "@@ -116,6 +127,25 @@ protected void generateDOTofCFGWithoutAnalysis(\n         generateDOTofCFG(inputFile, outputDir, method, clas, pdf, verbose, null);\n     }\n \n+    /**\n+     * Generate the String representation of the CFG for a method without analysis.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQxNjUyMA=="}, "originalCommit": {"oid": "941bc4c421da136441600c50540a0e850b5c2ccf"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTM3MjMwOnYy", "diffSide": "RIGHT", "path": "docs/manual/creating-a-checker.tex", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMjo0MDozNVrOG3R5ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMjo0MDozNVrOG3R5ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYxODA4NQ==", "bodyText": "javac -processor myProcessor -Aflowdotdir=. MyClass.java will do the dataflow analysis. So I think we should remove this line.", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r460618085", "createdAt": "2020-07-27T02:40:35Z", "author": {"login": "xingweitian"}, "path": "docs/manual/creating-a-checker.tex", "diffHunk": "@@ -1892,6 +1892,7 @@\n   \\<-Acfgviz=org.checkerframework.dataflow.cfg.DOTCFGVisualizer,outdir=\\emph{somedir}>.\n   % TODO: create the directory if it doesn't exist.\n   The directory must already exist.\n+  The CFG is generated and output, but no dataflow analysis is performed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4317f77e7488ea73ed77cb5e3d6f4a28cca2fa8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTM3NjI3OnYy", "diffSide": "RIGHT", "path": "docs/manual/creating-a-checker.tex", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMjo0MzoyMlrOG3R7ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMjo0MzoyMlrOG3R7ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYxODY1OQ==", "bodyText": "The same for here. CFGVisualizeLauncher is not used in this case.", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r460618659", "createdAt": "2020-07-27T02:43:22Z", "author": {"login": "xingweitian"}, "path": "docs/manual/creating-a-checker.tex", "diffHunk": "@@ -1904,6 +1905,7 @@\n   analyzed by the dataflow analysis (Section~\\ref{creating-dataflow}).\n   The graph also contains information about flow-sensitively refined\n   types of various expressions at many program points.\n+  The CFG is generated and output, but no dataflow analysis is performed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4317f77e7488ea73ed77cb5e3d6f4a28cca2fa8"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODU4MDQ3OnYy", "diffSide": "RIGHT", "path": "docs/manual/creating-a-checker.tex", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOToxNzoxMlrOG3wFHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDoxMTozNFrOG338rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTExMjYwNA==", "bodyText": "To simplify the command, how about leaving off the -output command-line argument?", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r461112604", "createdAt": "2020-07-27T19:17:12Z", "author": {"login": "mernst"}, "path": "docs/manual/creating-a-checker.tex", "diffHunk": "@@ -1926,7 +1927,7 @@\n java -Xbootclasspath/p:$CHECKERFRAMEWORK/checker/dist/javac.jar \\\n   -cp $CHECKERFRAMEWORK/checker/dist/checker.jar \\\n   org.checkerframework.dataflow.cfg.CFGVisualizeLauncher \\\n-  MyClass.java output/ -class MyClass -method test -pdf\n+  MyClass.java -output output/ -class MyClass -method test -pdf", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f02e9b9652da4ca52503c6c53df87694dd4ac2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI0MDExOQ==", "bodyText": "Thanks for the comments!\nIf we remove --output, then the outputdir becomes a mandatory argument (String outputdir = args[1];). Although users want to generate a string graph, they still need to provide outputdir in the command. E.g., MyClass.java output/ --class MyClass --method test --string.", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r461240119", "createdAt": "2020-07-28T00:07:10Z", "author": {"login": "xingweitian"}, "path": "docs/manual/creating-a-checker.tex", "diffHunk": "@@ -1926,7 +1927,7 @@\n java -Xbootclasspath/p:$CHECKERFRAMEWORK/checker/dist/javac.jar \\\n   -cp $CHECKERFRAMEWORK/checker/dist/checker.jar \\\n   org.checkerframework.dataflow.cfg.CFGVisualizeLauncher \\\n-  MyClass.java output/ -class MyClass -method test -pdf\n+  MyClass.java -output output/ -class MyClass -method test -pdf", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTExMjYwNA=="}, "originalCommit": {"oid": "e2f02e9b9652da4ca52503c6c53df87694dd4ac2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI0MDcyNw==", "bodyText": "Sorry that my comment was ambiguous.  I think that the tool should support the command-line argument.  I was just suggesting that this example invocation could leave it off, using the default, to make the command line shorter and to reduce the difference between the --string version below.", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r461240727", "createdAt": "2020-07-28T00:09:10Z", "author": {"login": "mernst"}, "path": "docs/manual/creating-a-checker.tex", "diffHunk": "@@ -1926,7 +1927,7 @@\n java -Xbootclasspath/p:$CHECKERFRAMEWORK/checker/dist/javac.jar \\\n   -cp $CHECKERFRAMEWORK/checker/dist/checker.jar \\\n   org.checkerframework.dataflow.cfg.CFGVisualizeLauncher \\\n-  MyClass.java output/ -class MyClass -method test -pdf\n+  MyClass.java -output output/ -class MyClass -method test -pdf", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTExMjYwNA=="}, "originalCommit": {"oid": "e2f02e9b9652da4ca52503c6c53df87694dd4ac2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI0MTUxNw==", "bodyText": "Oh! I get it. Thanks a lot! I will do it.", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r461241517", "createdAt": "2020-07-28T00:11:34Z", "author": {"login": "xingweitian"}, "path": "docs/manual/creating-a-checker.tex", "diffHunk": "@@ -1926,7 +1927,7 @@\n java -Xbootclasspath/p:$CHECKERFRAMEWORK/checker/dist/javac.jar \\\n   -cp $CHECKERFRAMEWORK/checker/dist/checker.jar \\\n   org.checkerframework.dataflow.cfg.CFGVisualizeLauncher \\\n-  MyClass.java output/ -class MyClass -method test -pdf\n+  MyClass.java -output output/ -class MyClass -method test -pdf", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTExMjYwNA=="}, "originalCommit": {"oid": "e2f02e9b9652da4ca52503c6c53df87694dd4ac2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODU4MDgyOnYy", "diffSide": "RIGHT", "path": "docs/manual/creating-a-checker.tex", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOToxNzoxOFrOG3wFTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOToxNzoxOFrOG3wFTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTExMjY1NA==", "bodyText": "To simplify the command, how about leaving off the -output command-line argument?", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r461112654", "createdAt": "2020-07-27T19:17:18Z", "author": {"login": "mernst"}, "path": "docs/manual/creating-a-checker.tex", "diffHunk": "@@ -1937,17 +1938,29 @@\n \\begin{Verbatim}\n java -cp $CHECKERFRAMEWORK/checker/dist/checker.jar \\\n   org.checkerframework.dataflow.cfg.CFGVisualizeLauncher \\\n-  MyClass.java output/ -class MyClass -method test -pdf\n+  MyClass.java -output output/ -class MyClass -method test -pdf", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2f02e9b9652da4ca52503c6c53df87694dd4ac2"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODU4NzM1OnYy", "diffSide": "RIGHT", "path": "docs/manual/creating-a-checker.tex", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOToxOToxOFrOG3wJHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOToxOToxOFrOG3wJHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTExMzYzMA==", "bodyText": "If you drop -output, you would need to adjust this text too.", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r461113630", "createdAt": "2020-07-27T19:19:18Z", "author": {"login": "mernst"}, "path": "docs/manual/creating-a-checker.tex", "diffHunk": "@@ -1937,17 +1938,31 @@\n \\begin{Verbatim}\n java -cp $CHECKERFRAMEWORK/checker/dist/checker.jar \\\n   org.checkerframework.dataflow.cfg.CFGVisualizeLauncher \\\n-  MyClass.java output/ -class MyClass -method test -pdf\n+  MyClass.java -output output/ -class MyClass -method test -pdf\n \\end{Verbatim}\n \\end{smaller}\n \n \\end{itemize}\n \n \\noindent\n The above command will generate the corresponding dot and pdf files for the\n-method \\code{test} in the class \\code{MyClass} in the directory \\<output>. For more\n-information, run \\refclass{dataflow/cfg}{CFGVisualizeLauncher} with no arguments to\n-see the usage.\n+method \\code{test} in the class \\code{MyClass} in the directory \\<output>.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c24d409531ac2db6c6eb9bead90804ce4e326106"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODU5ODcxOnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOToyMjoyNlrOG3wPqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOToyMjoyNlrOG3wPqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTExNTMwNA==", "bodyText": "This name suggests a file to me.  I would call it \"--outputdir\".", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r461115304", "createdAt": "2020-07-27T19:22:26Z", "author": {"login": "mernst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "diffHunk": "@@ -53,12 +52,22 @@ public static void main(String[] args) {\n \n         String method = \"test\";\n         String clas = \"Test\";\n+        String output = \".\";\n         boolean pdf = false;\n         boolean error = false;\n         boolean verbose = false;\n+        boolean string = false;\n \n-        for (int i = 2; i < args.length; i++) {\n+        for (int i = 1; i < args.length; i++) {\n             switch (args[i]) {\n+                case \"-output\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a5c7bba092f5a87a042e27f9aee8a80da31e83"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3ODYwMzc2OnYy", "diffSide": "RIGHT", "path": "changelog.txt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOToyNDowMlrOG3wS0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxOToyNDowMlrOG3wS0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTExNjExMg==", "bodyText": "The command-line arguments to this program not follow the convention that - is for single-character flags and -- is for multi-character flags?  I think that would make the program easier to follow.\nI realize this isn't your fault!  It could be fixed in this pull request or in a different pull request that is merged before this one.", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r461116112", "createdAt": "2020-07-27T19:24:02Z", "author": {"login": "mernst"}, "path": "changelog.txt", "diffHunk": "@@ -8,6 +8,10 @@ Added an overloaded version of NullnessUtil.castNonNull that takes an error mess\n \n Added a new option `-Aversion` to print the version of the Checker Framework.\n \n+New CFGVisualizeLauncher command-line arguments:\n+ * `-outdir`: directory in which to write output files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01a5c7bba092f5a87a042e27f9aee8a80da31e83"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjcyMjI5OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTowODo1OVrOG49Ejw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTowODo1OVrOG49Ejw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3NDAzMQ==", "bodyText": "Is == 0 clearer?", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r462374031", "createdAt": "2020-07-29T15:08:59Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "diffHunk": "@@ -38,12 +38,11 @@\n      */\n     public static void main(String[] args) {\n         CFGVisualizeLauncher cfgVisualizeLauncher = new CFGVisualizeLauncher();\n-        if (args.length < 2) {\n+        if (args.length < 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e491820c2d7c8940785009b96cefe3d7a6c7fd9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjcyMzk2OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTowOToyMFrOG49Fqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTowOToyMFrOG49Fqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3NDMxNA==", "bodyText": "Use -- for all mentions of flags.", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r462374314", "createdAt": "2020-07-29T15:09:20Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "diffHunk": "@@ -53,34 +52,48 @@ public static void main(String[] args) {\n \n         String method = \"test\";\n         String clas = \"Test\";\n+        String output = \".\";\n         boolean pdf = false;\n         boolean error = false;\n         boolean verbose = false;\n+        boolean string = false;\n \n-        for (int i = 2; i < args.length; i++) {\n+        for (int i = 1; i < args.length; i++) {\n             switch (args[i]) {\n-                case \"-pdf\":\n+                case \"--outputdir\":\n+                    if (i >= args.length - 1) {\n+                        cfgVisualizeLauncher.printError(\n+                                \"Did not find <outputdir> after -outputdir.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e491820c2d7c8940785009b96cefe3d7a6c7fd9"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjcyNzI1OnYy", "diffSide": "RIGHT", "path": "changelog.txt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToxMDowMlrOG49HtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToxMDowMlrOG49HtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3NDgzNw==", "bodyText": "Mention that in general flags now use --.", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r462374837", "createdAt": "2020-07-29T15:10:02Z", "author": {"login": "wmdietl"}, "path": "changelog.txt", "diffHunk": "@@ -8,6 +8,10 @@ Added an overloaded version of NullnessUtil.castNonNull that takes an error mess\n \n Added a new option `-Aversion` to print the version of the Checker Framework.\n \n+New CFGVisualizeLauncher command-line arguments:\n+ * `--outputdir`: directory in which to write output files\n+ * `--string`: print the control flow graph in the terminal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e491820c2d7c8940785009b96cefe3d7a6c7fd9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Njc0NDE5OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToxMzo0MFrOG49SWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToxMzo0MFrOG49SWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3NzU2Mw==", "bodyText": "Duplicate analysis.", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r462377563", "createdAt": "2020-07-29T15:13:40Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "diffHunk": "@@ -116,6 +136,26 @@ protected void generateDOTofCFGWithoutAnalysis(\n         generateDOTofCFG(inputFile, outputDir, method, clas, pdf, verbose, null);\n     }\n \n+    /**\n+     * Generate the String representation of the CFG for a method, only. Does no dataflow analysis\n+     * analysis.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e491820c2d7c8940785009b96cefe3d7a6c7fd9"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Njc1NTEyOnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToxNTo1NlrOG49ZPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToxNTo1NlrOG49ZPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3OTMyNQ==", "bodyText": "Make non-null.", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r462379325", "createdAt": "2020-07-29T15:15:56Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "diffHunk": "@@ -116,6 +136,26 @@ protected void generateDOTofCFGWithoutAnalysis(\n         generateDOTofCFG(inputFile, outputDir, method, clas, pdf, verbose, null);\n     }\n \n+    /**\n+     * Generate the String representation of the CFG for a method, only. Does no dataflow analysis\n+     * analysis.\n+     *\n+     * @param inputFile java source input file\n+     * @param method name of the method to generate the CFG for\n+     * @param clas name of the class which includes the method to generate the CFG for\n+     * @param verbose show verbose information in CFG\n+     * @return the String representation of the CFG\n+     */\n+    protected @Nullable String generateStringOfCFGWithoutAnalysis(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e491820c2d7c8940785009b96cefe3d7a6c7fd9"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Njc1NTk4OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToxNjoxMVrOG49Z3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToxNjoxMVrOG49Z3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM3OTQ4Nw==", "bodyText": "Return useful error message?", "url": "https://github.com/typetools/checker-framework/pull/3509#discussion_r462379487", "createdAt": "2020-07-29T15:16:11Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGVisualizeLauncher.java", "diffHunk": "@@ -116,6 +136,26 @@ protected void generateDOTofCFGWithoutAnalysis(\n         generateDOTofCFG(inputFile, outputDir, method, clas, pdf, verbose, null);\n     }\n \n+    /**\n+     * Generate the String representation of the CFG for a method, only. Does no dataflow analysis\n+     * analysis.\n+     *\n+     * @param inputFile java source input file\n+     * @param method name of the method to generate the CFG for\n+     * @param clas name of the class which includes the method to generate the CFG for\n+     * @param verbose show verbose information in CFG\n+     * @return the String representation of the CFG\n+     */\n+    protected @Nullable String generateStringOfCFGWithoutAnalysis(\n+            String inputFile, String method, String clas, boolean verbose) {\n+        @Nullable Map<String, Object> res = generateStringOfCFG(inputFile, method, clas, verbose, null);\n+        if (res != null) {\n+            return (String) res.get(\"stringGraph\");\n+        } else {\n+            return \"null\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e491820c2d7c8940785009b96cefe3d7a6c7fd9"}, "originalPosition": 111}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1590, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}