{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NzQ1NTA1", "number": 3464, "title": "Add -Aversion command-line option; fixes #3381", "bodyText": "#3381 Add -Aversion option", "createdAt": "2020-07-11T09:30:25Z", "url": "https://github.com/typetools/checker-framework/pull/3464", "merged": true, "mergeCommit": {"oid": "34989702ef50f1ae3939d7acda3ad3b8dabc56e1"}, "closed": true, "closedAt": "2020-07-20T22:51:43Z", "author": {"login": "PRITI1999"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczjFNLgH2gAyNDQ3NzQ1NTA1OjU2MjRkMjdhNzhiNGYwMDFiMWUzYzIyMWJlZjM3M2Y2NmNiMjJhN2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1XCo3AFqTQ0OTQ4OTQwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5624d27a78b4f001b1e3c221bef373f66cb22a7d", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/5624d27a78b4f001b1e3c221bef373f66cb22a7d", "committedDate": "2020-07-10T12:48:35Z", "message": "Merge pull request #1 from typetools/master\n\nUpdate fork"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3f119dc3ec24e5e2ce6ccaedde461e283ec2100", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/c3f119dc3ec24e5e2ce6ccaedde461e283ec2100", "committedDate": "2020-07-10T12:49:27Z", "message": "Add version option and extract release properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6839fac8660cc2b560cb392db870deb899868be", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/f6839fac8660cc2b560cb392db870deb899868be", "committedDate": "2020-07-10T12:53:44Z", "message": "Add version and extract relese properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22e5c0be1420e9c47aff8590ac768edfd7c1f8fb", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/22e5c0be1420e9c47aff8590ac768edfd7c1f8fb", "committedDate": "2020-07-10T12:54:19Z", "message": "Merge branch 'master' of https://github.com/priti1999/checker-framework into fix-issue-3381"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23d3c46f11d6bab107717c6332ce19002f95a25d", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/23d3c46f11d6bab107717c6332ce19002f95a25d", "committedDate": "2020-07-11T08:47:39Z", "message": "Adding functionality for -Aversion option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26c69df089121a2dfbaad646eb5e1996424bd8bb", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/26c69df089121a2dfbaad646eb5e1996424bd8bb", "committedDate": "2020-07-11T09:22:44Z", "message": "Remove unnecessary change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a8331657649890bf7ec2261ffd3c18a965ea06e", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/8a8331657649890bf7ec2261ffd3c18a965ea06e", "committedDate": "2020-07-11T09:26:26Z", "message": "Improve comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODE3ODI4", "url": "https://github.com/typetools/checker-framework/pull/3464#pullrequestreview-446817828", "createdAt": "2020-07-11T17:41:46Z", "commit": {"oid": "8a8331657649890bf7ec2261ffd3c18a965ea06e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNzo0MTo0NlrOGwOMsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNzo1MToxOFrOGwOQQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxNzQ1OA==", "bodyText": "Please use correct capitalization for Checker Framework.", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r453217458", "createdAt": "2020-07-11T17:41:46Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -253,6 +253,8 @@\n \n     /// Amount of detail in messages\n \n+    // Print the version of the checker framework", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8331657649890bf7ec2261ffd3c18a965ea06e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxNzQ4NQ==", "bodyText": "Use correct name for Checker Framework.", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r453217485", "createdAt": "2020-07-11T17:42:14Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -781,6 +783,14 @@ public void run() {\n                                     }\n                                 });\n             }\n+            if (hasOption(\"version\")) {\n+                String version = getCheckerVersion();\n+                if (version == null) {\n+                    messager.printMessage(Kind.NOTE, \"Version info not available!\");\n+                } else {\n+                    messager.printMessage(Kind.NOTE, \"checker-framework \" + version);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8331657649890bf7ec2261ffd3c18a965ea06e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxNzY1Mg==", "bodyText": "You need to document that this can return null.  Under what circumstances can it do so?  Should it throw an exception rather than returning null?", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r453217652", "createdAt": "2020-07-11T17:43:53Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -2530,4 +2540,28 @@ private void printGitProperties() {\n             System.out.println(\"IOException while reading git.properties: \" + e.getMessage());\n         }\n     }\n+\n+    /** Extract the version of the Checker Framework */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8331657649890bf7ec2261ffd3c18a965ea06e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxNzczOQ==", "bodyText": "Why does this loop continue after setting version?  Could you use a return statement here?", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r453217739", "createdAt": "2020-07-11T17:44:51Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -2530,4 +2540,28 @@ private void printGitProperties() {\n             System.out.println(\"IOException while reading git.properties: \" + e.getMessage());\n         }\n     }\n+\n+    /** Extract the version of the Checker Framework */\n+    private String getCheckerVersion() {\n+        String version = null;\n+        Properties p = new Properties();\n+        String RLS_FILE = \"/docs/developer/release/release.properties\";\n+        p.putAll(getProperties(getClass(), RLS_FILE));\n+        String startTag = p.getProperty(\"checkers.ver.0\");\n+        String endTag = p.getProperty(\"checkers.ver.1\");\n+        String XML_FILE = \"/docs/examples/MavenExample/pom.xml\";\n+        try {\n+            InputStream in = getClass().getResourceAsStream(XML_FILE);\n+            BufferedReader reader = new BufferedReader(new InputStreamReader(in));\n+            String line = null;\n+            while ((line = reader.readLine()) != null && version == null) {\n+                if (line.split(startTag).length > 1) {\n+                    version = line.split(startTag)[1].split(endTag)[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8331657649890bf7ec2261ffd3c18a965ea06e"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxODE2MA==", "bodyText": "Rather than creating an empty Properties on line 2547 and then merging a Properties into it, can this line be\nProperties p = getProperties(getClass(), RLS_FILE);\n\n?", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r453218160", "createdAt": "2020-07-11T17:49:03Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -2530,4 +2540,28 @@ private void printGitProperties() {\n             System.out.println(\"IOException while reading git.properties: \" + e.getMessage());\n         }\n     }\n+\n+    /** Extract the version of the Checker Framework */\n+    private String getCheckerVersion() {\n+        String version = null;\n+        Properties p = new Properties();\n+        String RLS_FILE = \"/docs/developer/release/release.properties\";\n+        p.putAll(getProperties(getClass(), RLS_FILE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8331657649890bf7ec2261ffd3c18a965ea06e"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxODMwNg==", "bodyText": "Is it a bug if this line is reached?  If so, it is better to fail than to print a line that users are likely to overlook.", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r453218306", "createdAt": "2020-07-11T17:50:34Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -2530,4 +2540,28 @@ private void printGitProperties() {\n             System.out.println(\"IOException while reading git.properties: \" + e.getMessage());\n         }\n     }\n+\n+    /** Extract the version of the Checker Framework */\n+    private String getCheckerVersion() {\n+        String version = null;\n+        Properties p = new Properties();\n+        String RLS_FILE = \"/docs/developer/release/release.properties\";\n+        p.putAll(getProperties(getClass(), RLS_FILE));\n+        String startTag = p.getProperty(\"checkers.ver.0\");\n+        String endTag = p.getProperty(\"checkers.ver.1\");\n+        String XML_FILE = \"/docs/examples/MavenExample/pom.xml\";\n+        try {\n+            InputStream in = getClass().getResourceAsStream(XML_FILE);\n+            BufferedReader reader = new BufferedReader(new InputStreamReader(in));\n+            String line = null;\n+            while ((line = reader.readLine()) != null && version == null) {\n+                if (line.split(startTag).length > 1) {\n+                    version = line.split(startTag)[1].split(endTag)[0];\n+                }\n+            }\n+        } catch (IOException e) {\n+            System.out.println(\"IOException while reading version information: \" + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8331657649890bf7ec2261ffd3c18a965ea06e"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxODM3MQ==", "bodyText": "Under what circumstances is version null?  Is that a bug?", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r453218371", "createdAt": "2020-07-11T17:51:18Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -781,6 +783,14 @@ public void run() {\n                                     }\n                                 });\n             }\n+            if (hasOption(\"version\")) {\n+                String version = getCheckerVersion();\n+                if (version == null) {\n+                    messager.printMessage(Kind.NOTE, \"Version info not available!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a8331657649890bf7ec2261ffd3c18a965ea06e"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74985e7e998116e309b7dec37e15d21085d8831e", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/74985e7e998116e309b7dec37e15d21085d8831e", "committedDate": "2020-07-12T03:33:11Z", "message": "Improve naming and code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c6584fd3ed8b32d84968056488a498bc45d6736", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/7c6584fd3ed8b32d84968056488a498bc45d6736", "committedDate": "2020-07-12T06:00:45Z", "message": "improve fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cef0d29f42f4922c1638860005d0bd4515b8d449", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/cef0d29f42f4922c1638860005d0bd4515b8d449", "committedDate": "2020-07-14T03:42:21Z", "message": "Improve documentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MTUwMzI0", "url": "https://github.com/typetools/checker-framework/pull/3464#pullrequestreview-448150324", "createdAt": "2020-07-14T14:17:30Z", "commit": {"oid": "cef0d29f42f4922c1638860005d0bd4515b8d449"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDoxNzozMVrOGxVxQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNDoyNzowMFrOGxWMig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5MDA4MA==", "bodyText": "Minor: end sentences with punctuation (in this case, a period).", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r454390080", "createdAt": "2020-07-14T14:17:31Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -2530,4 +2535,33 @@ private void printGitProperties() {\n             System.out.println(\"IOException while reading git.properties: \" + e.getMessage());\n         }\n     }\n+\n+    /**\n+     * Extract the version of the Checker Framework", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cef0d29f42f4922c1638860005d0bd4515b8d449"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5MDcyNw==", "bodyText": "It is usually not necessary to state the type, which is already stated nearby in the source code and in the generated API documentation.", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r454390727", "createdAt": "2020-07-14T14:18:27Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -2530,4 +2535,33 @@ private void printGitProperties() {\n             System.out.println(\"IOException while reading git.properties: \" + e.getMessage());\n         }\n     }\n+\n+    /**\n+     * Extract the version of the Checker Framework\n+     *\n+     * @throws IOException if unable to read docs/developer/release/release.properties or\n+     *     docs/examples/MavenExample/pom.xml file\n+     * @throws NullPointerException if tag present in release.properties for Checker Framework\n+     *     version is not found in docs/examples/MavenExample/pom.xml\n+     * @return Checker Framework version {@link String}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cef0d29f42f4922c1638860005d0bd4515b8d449"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5MDc3Nw==", "bodyText": "Why is this variable needed?", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r454390777", "createdAt": "2020-07-14T14:18:31Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -2530,4 +2535,33 @@ private void printGitProperties() {\n             System.out.println(\"IOException while reading git.properties: \" + e.getMessage());\n         }\n     }\n+\n+    /**\n+     * Extract the version of the Checker Framework\n+     *\n+     * @throws IOException if unable to read docs/developer/release/release.properties or\n+     *     docs/examples/MavenExample/pom.xml file\n+     * @throws NullPointerException if tag present in release.properties for Checker Framework\n+     *     version is not found in docs/examples/MavenExample/pom.xml\n+     * @return Checker Framework version {@link String}\n+     */\n+    private String getCheckerVersion() throws IOException {\n+        String version = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cef0d29f42f4922c1638860005d0bd4515b8d449"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5MTM0Mw==", "bodyText": "If you use \"Extract\", say from where.  Even better, I would leave implementation details like that out of the specification and just use \"Returns\".", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r454391343", "createdAt": "2020-07-14T14:19:22Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -2530,4 +2535,33 @@ private void printGitProperties() {\n             System.out.println(\"IOException while reading git.properties: \" + e.getMessage());\n         }\n     }\n+\n+    /**\n+     * Extract the version of the Checker Framework", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cef0d29f42f4922c1638860005d0bd4515b8d449"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5Mjk1NQ==", "bodyText": "This is an odd choice of exception.  Why not use BugInCF?", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r454392955", "createdAt": "2020-07-14T14:21:38Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -2530,4 +2535,33 @@ private void printGitProperties() {\n             System.out.println(\"IOException while reading git.properties: \" + e.getMessage());\n         }\n     }\n+\n+    /**\n+     * Extract the version of the Checker Framework\n+     *\n+     * @throws IOException if unable to read docs/developer/release/release.properties or\n+     *     docs/examples/MavenExample/pom.xml file\n+     * @throws NullPointerException if tag present in release.properties for Checker Framework\n+     *     version is not found in docs/examples/MavenExample/pom.xml\n+     * @return Checker Framework version {@link String}\n+     */\n+    private String getCheckerVersion() throws IOException {\n+        String version = null;\n+        String RLS_FILE = \"/docs/developer/release/release.properties\";\n+        Properties releaseProperties = getProperties(getClass(), RLS_FILE);\n+        String startTag = releaseProperties.getProperty(\"checkers.ver.0\");\n+        String endTag = releaseProperties.getProperty(\"checkers.ver.1\");\n+        String XML_FILE = \"/docs/examples/MavenExample/pom.xml\";\n+        InputStream in = getClass().getResourceAsStream(XML_FILE);\n+        BufferedReader reader = new BufferedReader(new InputStreamReader(in));\n+        String line = null;\n+        while ((line = reader.readLine()) != null) {\n+            if (line.split(startTag).length > 1) {\n+                version = line.split(startTag)[1].split(endTag)[0];\n+                return version;\n+            }\n+        }\n+        throw new NullPointerException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cef0d29f42f4922c1638860005d0bd4515b8d449"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5NTM1OQ==", "bodyText": "This line can be combined with the following one.", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r454395359", "createdAt": "2020-07-14T14:24:46Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -2530,4 +2535,33 @@ private void printGitProperties() {\n             System.out.println(\"IOException while reading git.properties: \" + e.getMessage());\n         }\n     }\n+\n+    /**\n+     * Extract the version of the Checker Framework\n+     *\n+     * @throws IOException if unable to read docs/developer/release/release.properties or\n+     *     docs/examples/MavenExample/pom.xml file\n+     * @throws NullPointerException if tag present in release.properties for Checker Framework\n+     *     version is not found in docs/examples/MavenExample/pom.xml\n+     * @return Checker Framework version {@link String}\n+     */\n+    private String getCheckerVersion() throws IOException {\n+        String version = null;\n+        String RLS_FILE = \"/docs/developer/release/release.properties\";\n+        Properties releaseProperties = getProperties(getClass(), RLS_FILE);\n+        String startTag = releaseProperties.getProperty(\"checkers.ver.0\");\n+        String endTag = releaseProperties.getProperty(\"checkers.ver.1\");\n+        String XML_FILE = \"/docs/examples/MavenExample/pom.xml\";\n+        InputStream in = getClass().getResourceAsStream(XML_FILE);\n+        BufferedReader reader = new BufferedReader(new InputStreamReader(in));\n+        String line = null;\n+        while ((line = reader.readLine()) != null) {\n+            if (line.split(startTag).length > 1) {\n+                version = line.split(startTag)[1].split(endTag)[0];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cef0d29f42f4922c1638860005d0bd4515b8d449"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5NjYyNA==", "bodyText": "This user-visible change needs to be documented in the manual and in the changelog.", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r454396624", "createdAt": "2020-07-14T14:26:24Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -253,6 +253,8 @@\n \n     /// Amount of detail in messages\n \n+    // Print the version of the Checker Framework\n+    \"version\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cef0d29f42f4922c1638860005d0bd4515b8d449"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDM5NzA2Ng==", "bodyText": "Does this work?  It crashed for me when I tried to run it, because neither of the two files is not available in checker.jar.", "url": "https://github.com/typetools/checker-framework/pull/3464#discussion_r454397066", "createdAt": "2020-07-14T14:27:00Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -2530,4 +2535,33 @@ private void printGitProperties() {\n             System.out.println(\"IOException while reading git.properties: \" + e.getMessage());\n         }\n     }\n+\n+    /**\n+     * Extract the version of the Checker Framework\n+     *\n+     * @throws IOException if unable to read docs/developer/release/release.properties or\n+     *     docs/examples/MavenExample/pom.xml file\n+     * @throws NullPointerException if tag present in release.properties for Checker Framework\n+     *     version is not found in docs/examples/MavenExample/pom.xml\n+     * @return Checker Framework version {@link String}\n+     */\n+    private String getCheckerVersion() throws IOException {\n+        String version = null;\n+        String RLS_FILE = \"/docs/developer/release/release.properties\";\n+        Properties releaseProperties = getProperties(getClass(), RLS_FILE);\n+        String startTag = releaseProperties.getProperty(\"checkers.ver.0\");\n+        String endTag = releaseProperties.getProperty(\"checkers.ver.1\");\n+        String XML_FILE = \"/docs/examples/MavenExample/pom.xml\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cef0d29f42f4922c1638860005d0bd4515b8d449"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5addc49a4c65931242a9486fcdd47e857889b9fd", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/5addc49a4c65931242a9486fcdd47e857889b9fd", "committedDate": "2020-07-15T06:03:19Z", "message": "Add requested changes to code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d29f7df1f6de39ea106050a247b63eedf3b03ef", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/2d29f7df1f6de39ea106050a247b63eedf3b03ef", "committedDate": "2020-07-15T06:06:27Z", "message": "Remove unnecessary exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71a4d3f6b9de85500fbce5a58ffb5eed3f339612", "author": {"user": {"login": "PRITI1999", "name": "Priti Chattopadhyay"}}, "url": "https://github.com/typetools/checker-framework/commit/71a4d3f6b9de85500fbce5a58ffb5eed3f339612", "committedDate": "2020-07-15T06:33:53Z", "message": "Add documentation for the -Aversion option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8655852730026b5a5869a2641af92c100c653d4", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/c8655852730026b5a5869a2641af92c100c653d4", "committedDate": "2020-07-16T03:53:38Z", "message": "No need to document BugInCF condition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NDg5NDA0", "url": "https://github.com/typetools/checker-framework/pull/3464#pullrequestreview-449489404", "createdAt": "2020-07-16T03:54:46Z", "commit": {"oid": "c8655852730026b5a5869a2641af92c100c653d4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2670, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}