{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5ODgwMTMy", "number": 3173, "title": "Correct method type argument inference with null; fixes #3056; fixes #3150.", "bodyText": "Fixes #3150.   (#3149 is partially fixed by this pull request because the annotations in the JDK are wrong.  I'll fix them in a different pull request and enable the test.)", "createdAt": "2020-03-17T14:44:08Z", "url": "https://github.com/typetools/checker-framework/pull/3173", "merged": true, "mergeCommit": {"oid": "2c6e1108de5ad05a16639d124ca05a23f6d572c5"}, "closed": true, "closedAt": "2020-04-01T14:59:27Z", "author": {"login": "smillst"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOjxj7AH2gAyMzg5ODgwMTMyOjA2N2JlZDkxYTFiY2YzMzhhMjMwYjExYjE5ZDkzM2IwNjA3ZDJkMzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ1wyuAH2gAyMzg5ODgwMTMyOmY5ZmYyOTA2N2U2OGYxNjFlZmJmMTEzMmY5ZDI2MzA3ZDU3ZjcyNDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "067bed91a1bcf338a230b11b19d933b0607d2d31", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/067bed91a1bcf338a230b11b19d933b0607d2d31", "committedDate": "2020-03-17T14:41:50Z", "message": "Fix issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e442dfd6bfc990a646fe8be2546767a9dff43207", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/e442dfd6bfc990a646fe8be2546767a9dff43207", "committedDate": "2020-03-17T18:11:58Z", "message": "Fix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c48450bc7fa076733115b96b9fb9675e7ffc8d99", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/c48450bc7fa076733115b96b9fb9675e7ffc8d99", "committedDate": "2020-03-17T19:12:56Z", "message": "Skip test for now."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MDUzMTY5", "url": "https://github.com/typetools/checker-framework/pull/3173#pullrequestreview-377053169", "createdAt": "2020-03-18T16:50:41Z", "commit": {"oid": "c48450bc7fa076733115b96b9fb9675e7ffc8d99"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNjo1MDo0MVrOF4ODsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNjo1Mzo0MVrOF4OMRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NDg5OQ==", "bodyText": "I find this change in expected error message unintuitive and undesirable.\nThere is no type argument here, so raising an invalid type argument error is misleading.\nType argument inference should always produce type arguments that respect the bounds. Then supplied arguments can cause errors if they don't respect that bound.\nHere, I would expect that type argument inference determines @NonNull Object as the type argument and then the argument should give an error.\nFor a similar reason I don't like typetools/jdk#36 : it changes the signature just to account for bad type inference, even though that bad type inference shouldn't give different errors.\nWould it be hard to do a GLB between each inferred type argument and the bounds?", "url": "https://github.com/typetools/checker-framework/pull/3173#discussion_r394494899", "createdAt": "2020-03-18T16:50:41Z", "author": {"login": "wmdietl"}, "path": "checker/tests/nullness/Issue3150.java", "diffHunk": "@@ -1,15 +1,13 @@\n-// @skip-test until the bug is fixed\n-\n // Test case for https://tinyurl.com/cfissue/3150 .\n \n import org.checkerframework.checker.nullness.qual.NonNull;\n import org.checkerframework.checker.nullness.qual.Nullable;\n \n class Issue3150 {\n     void foo(@Nullable Object nble, @NonNull Object nn) {\n-        // :: error: (argument.type.incompatible)\n+        // :: error: (type.argument.type.incompatible)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c48450bc7fa076733115b96b9fb9675e7ffc8d99"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NjgyNA==", "bodyText": "I'm confused why it is the right thing to use the annotations only from the first result. The loop goes through all type parameters, multiple of which might come from null, but only the first determines the value of objectWithAnnosFromNull.\nCan you add an explanation?\nOr should you ask the type factory what the type of null is, instead?", "url": "https://github.com/typetools/checker-framework/pull/3173#discussion_r394496824", "createdAt": "2020-03-18T16:53:19Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/util/typeinference/DefaultTypeArgumentInference.java", "diffHunk": "@@ -237,7 +244,14 @@ private void handleNullTypeArguments(\n                 if (withoutNullResult == null) {\n                     // withoutNullResult is null when the only constraint on a type argument is\n                     // where a method argument is null.\n-                    withoutNullResult = typeFactory.getUninferredWildcardType(atv);\n+                    if (objectWithAnnosFromNull == null) {\n+                        Elements elements = typeFactory.getProcessingEnv().getElementUtils();\n+                        TypeMirror objectTM = elements.getTypeElement(\"java.lang.Object\").asType();\n+                        objectWithAnnosFromNull =\n+                                AnnotatedTypeMirror.createType(objectTM, typeFactory, false);\n+                        objectWithAnnosFromNull.addAnnotations(result.getAnnotations());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c48450bc7fa076733115b96b9fb9675e7ffc8d99"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NzA5Mw==", "bodyText": "Also, should objectWithAnnosFromNull be set to null again at some point?", "url": "https://github.com/typetools/checker-framework/pull/3173#discussion_r394497093", "createdAt": "2020-03-18T16:53:41Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/util/typeinference/DefaultTypeArgumentInference.java", "diffHunk": "@@ -237,7 +244,14 @@ private void handleNullTypeArguments(\n                 if (withoutNullResult == null) {\n                     // withoutNullResult is null when the only constraint on a type argument is\n                     // where a method argument is null.\n-                    withoutNullResult = typeFactory.getUninferredWildcardType(atv);\n+                    if (objectWithAnnosFromNull == null) {\n+                        Elements elements = typeFactory.getProcessingEnv().getElementUtils();\n+                        TypeMirror objectTM = elements.getTypeElement(\"java.lang.Object\").asType();\n+                        objectWithAnnosFromNull =\n+                                AnnotatedTypeMirror.createType(objectTM, typeFactory, false);\n+                        objectWithAnnosFromNull.addAnnotations(result.getAnnotations());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ5NjgyNA=="}, "originalCommit": {"oid": "c48450bc7fa076733115b96b9fb9675e7ffc8d99"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0475a56e9744e2c97e5da41d1aefb0c9b2b143cd", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/0475a56e9744e2c97e5da41d1aefb0c9b2b143cd", "committedDate": "2020-03-19T13:33:15Z", "message": "Fix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c40967d141d5a1f92e87315369665c89041d31c4", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/c40967d141d5a1f92e87315369665c89041d31c4", "committedDate": "2020-03-20T16:52:56Z", "message": "Merge remote-tracking branch 'origin/master' into issue3150"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9ff29067e68f161efbf1132f9d26307d57f7246", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/f9ff29067e68f161efbf1132f9d26307d57f7246", "committedDate": "2020-03-24T16:47:08Z", "message": "Unskip test that is fixed by this pull request"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3006, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}