{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NzI0OTc3", "number": 3501, "title": "Add a TypeHierarchy for the Signedness Checker", "bodyText": "", "createdAt": "2020-07-23T13:53:19Z", "url": "https://github.com/typetools/checker-framework/pull/3501", "merged": true, "mergeCommit": {"oid": "25d045ffe64b2e490c810cdcd8010e64796cc0fd"}, "closed": true, "closedAt": "2020-07-24T17:23:00Z", "author": {"login": "mernst"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3oZyOgH2gAyNDU1NzI0OTc3OjUzMWZjYzQ2Yjg5YTEyYjBjMTFiZTUxN2EwYzc2MzhlM2I5YTcwODA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4GABrAH2gAyNDU1NzI0OTc3Ojg3ZTNhNTRiMjJhMWU3MmNkYjE4MzMxZjk3ZTBhMjlkZDA0YzA4ZDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "531fcc46b89a12b0c11be517a0c7638e3b9a7080", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/531fcc46b89a12b0c11be517a0c7638e3b9a7080", "committedDate": "2020-07-23T05:16:17Z", "message": "Add a TypeHierarchy for the Signedness Checker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "443f7a58efd4d87d41058f9fc244bba23a5869c2", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/443f7a58efd4d87d41058f9fc244bba23a5869c2", "committedDate": "2020-07-23T05:19:01Z", "message": "Merge ../checker-framework-branch-master into signedness-typehierarchy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3191e05cf5832d80c0832368edbf075b92882523", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/3191e05cf5832d80c0832368edbf075b92882523", "committedDate": "2020-07-23T05:30:38Z", "message": "Javadoc fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12694b1cbf9ad400bbf2f32f23deed3f9acb9586", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/12694b1cbf9ad400bbf2f32f23deed3f9acb9586", "committedDate": "2020-07-23T13:22:03Z", "message": "Test against correct variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "786ddbcb80bc9f148350ba871af4cbefe6a0c83f", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/786ddbcb80bc9f148350ba871af4cbefe6a0c83f", "committedDate": "2020-07-23T13:25:27Z", "message": "Merge ../checker-framework-branch-master into signedness-typehierarchy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d027c184342522a568dcef3a430928d3e7b2251", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/3d027c184342522a568dcef3a430928d3e7b2251", "committedDate": "2020-07-24T14:14:36Z", "message": "Avoid change to framework"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fe13b280ec1e0a631c7ad3dd2b89e532fb15f8a", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/1fe13b280ec1e0a631c7ad3dd2b89e532fb15f8a", "committedDate": "2020-07-24T14:25:32Z", "message": "Add manual section about widening conversions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35ce7b42a8cb02978438b5849aaf11c8617eac39", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/35ce7b42a8cb02978438b5849aaf11c8617eac39", "committedDate": "2020-07-24T14:30:39Z", "message": "Remove references to removed method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0OTgxNjYy", "url": "https://github.com/typetools/checker-framework/pull/3501#pullrequestreview-454981662", "createdAt": "2020-07-24T15:28:23Z", "commit": {"oid": "35ce7b42a8cb02978438b5849aaf11c8617eac39"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNToyODoyM1rOG2z1kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNTozMToxOVrOG2z8Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEyNTU4NQ==", "bodyText": "This should be !AnnotationUtils.areSameByName(superAnno, SIGNEDNESS_BOTTOM).", "url": "https://github.com/typetools/checker-framework/pull/3501#discussion_r460125585", "createdAt": "2020-07-24T15:28:23Z", "author": {"login": "smillst"}, "path": "checker/src/main/java/org/checkerframework/checker/signedness/SignednessAnnotatedTypeFactory.java", "diffHunk": "@@ -239,4 +251,140 @@ public Void visitCompoundAssignment(CompoundAssignmentTree tree, AnnotatedTypeMi\n             return null;\n         }\n     }\n+\n+    @Override\n+    protected TypeHierarchy createTypeHierarchy() {\n+        return new SignednessTypeHierarchy(\n+                checker,\n+                getQualifierHierarchy(),\n+                checker.getBooleanOption(\"ignoreRawTypeArguments\", true),\n+                checker.hasOption(\"invariantArrays\"));\n+    }\n+\n+    /**\n+     * The type hierarchy for the signedness type system. If A is narrower (fewer bits) than B, then\n+     * A with any qualifier is a subtype of @SignedPositive B.\n+     */\n+    protected class SignednessTypeHierarchy extends DefaultTypeHierarchy {\n+\n+        /**\n+         * Create a new SignednessTypeHierarchy.\n+         *\n+         * @param checker the checker\n+         * @param qualifierHierarchy the qualifier hierarchy\n+         * @param ignoreRawTypes from -AignoreRawTypes\n+         * @param invariantArrayComponents from -AinvariantArrays\n+         */\n+        public SignednessTypeHierarchy(\n+                BaseTypeChecker checker,\n+                QualifierHierarchy qualifierHierarchy,\n+                boolean ignoreRawTypes,\n+                boolean invariantArrayComponents) {\n+            super(checker, qualifierHierarchy, ignoreRawTypes, invariantArrayComponents);\n+        }\n+\n+        @Override\n+        public Boolean visitPrimitive_Primitive(\n+                AnnotatedPrimitiveType subtype, AnnotatedPrimitiveType supertype, Void p) {\n+\n+            boolean superResult = super.visitPrimitive_Primitive(subtype, supertype, p);\n+            if (superResult) {\n+                return true;\n+            }\n+\n+            PrimitiveType subPrimitive = subtype.getUnderlyingType();\n+            PrimitiveType superPrimitive = supertype.getUnderlyingType();\n+            if (isNarrowerIntegral(subPrimitive, superPrimitive)) {\n+                // AnnotationMirror subAnno = subtype.getAnnotationInHierarchy(UNKNOWN_SIGNEDNESS);\n+                AnnotationMirror superAnno = supertype.getAnnotationInHierarchy(UNKNOWN_SIGNEDNESS);\n+                if (!superAnno.equals(SIGNEDNESS_BOTTOM)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35ce7b42a8cb02978438b5849aaf11c8617eac39"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDEyNzI4Ng==", "bodyText": "Maybe delete this?", "url": "https://github.com/typetools/checker-framework/pull/3501#discussion_r460127286", "createdAt": "2020-07-24T15:31:19Z", "author": {"login": "smillst"}, "path": "checker/src/main/java/org/checkerframework/checker/signedness/SignednessAnnotatedTypeFactory.java", "diffHunk": "@@ -239,4 +251,140 @@ public Void visitCompoundAssignment(CompoundAssignmentTree tree, AnnotatedTypeMi\n             return null;\n         }\n     }\n+\n+    @Override\n+    protected TypeHierarchy createTypeHierarchy() {\n+        return new SignednessTypeHierarchy(\n+                checker,\n+                getQualifierHierarchy(),\n+                checker.getBooleanOption(\"ignoreRawTypeArguments\", true),\n+                checker.hasOption(\"invariantArrays\"));\n+    }\n+\n+    /**\n+     * The type hierarchy for the signedness type system. If A is narrower (fewer bits) than B, then\n+     * A with any qualifier is a subtype of @SignedPositive B.\n+     */\n+    protected class SignednessTypeHierarchy extends DefaultTypeHierarchy {\n+\n+        /**\n+         * Create a new SignednessTypeHierarchy.\n+         *\n+         * @param checker the checker\n+         * @param qualifierHierarchy the qualifier hierarchy\n+         * @param ignoreRawTypes from -AignoreRawTypes\n+         * @param invariantArrayComponents from -AinvariantArrays\n+         */\n+        public SignednessTypeHierarchy(\n+                BaseTypeChecker checker,\n+                QualifierHierarchy qualifierHierarchy,\n+                boolean ignoreRawTypes,\n+                boolean invariantArrayComponents) {\n+            super(checker, qualifierHierarchy, ignoreRawTypes, invariantArrayComponents);\n+        }\n+\n+        @Override\n+        public Boolean visitPrimitive_Primitive(\n+                AnnotatedPrimitiveType subtype, AnnotatedPrimitiveType supertype, Void p) {\n+\n+            boolean superResult = super.visitPrimitive_Primitive(subtype, supertype, p);\n+            if (superResult) {\n+                return true;\n+            }\n+\n+            PrimitiveType subPrimitive = subtype.getUnderlyingType();\n+            PrimitiveType superPrimitive = supertype.getUnderlyingType();\n+            if (isNarrowerIntegral(subPrimitive, superPrimitive)) {\n+                // AnnotationMirror subAnno = subtype.getAnnotationInHierarchy(UNKNOWN_SIGNEDNESS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35ce7b42a8cb02978438b5849aaf11c8617eac39"}, "originalPosition": 103}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ab3001ba665eed327936d59ac7a68761668ea8c", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/3ab3001ba665eed327936d59ac7a68761668ea8c", "committedDate": "2020-07-24T15:35:33Z", "message": "Fixes from code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87e3a54b22a1e72cdb18331f97e0a29dd04c08d9", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/87e3a54b22a1e72cdb18331f97e0a29dd04c08d9", "committedDate": "2020-07-24T15:45:18Z", "message": "Add import statement"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2702, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}