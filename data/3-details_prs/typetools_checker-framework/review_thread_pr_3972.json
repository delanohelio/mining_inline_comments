{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NzM4ODIy", "number": 3972, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMTo0NTozOFrOFCnGsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMTo0NTozOFrOFCnGsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4MjgyMTYzOnYy", "diffSide": "RIGHT", "path": "checker/src/main/java/org/checkerframework/checker/calledmethods/CalledMethodsChecker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMTo0NTozOFrOIB3nbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMTo0NTozOFrOIB3nbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgzMDcwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // BaseTypeChecker#hasOption calls this getImmediateSubcheckerClasses (so that all\n          \n          \n            \n                        // BaseTypeChecker#hasOption calls getImmediateSubcheckerClasses (so that all", "url": "https://github.com/typetools/checker-framework/pull/3972#discussion_r538830700", "createdAt": "2020-12-08T21:45:38Z", "author": {"login": "msridhar"}, "path": "checker/src/main/java/org/checkerframework/checker/calledmethods/CalledMethodsChecker.java", "diffHunk": "@@ -50,20 +51,55 @@\n      */\n     public static final String USE_VALUE_CHECKER = \"useValueChecker\";\n \n+    /**\n+     * Some use cases for the Called Methods Checker do not involve checking fluent APIs, and in\n+     * those cases disabling the Returns Receiver Checker using this flag will make the Called\n+     * Methods Checker run much faster.\n+     */\n+    public static final String DISABLE_RETURNS_RECEIVER = \"disableReturnsReceiver\";\n+\n     /**\n      * The number of calls to build frameworks supported by this invocation. Incremented only if the\n      * {@link #COUNT_FRAMEWORK_BUILD_CALLS} option was supplied.\n      */\n     int numBuildCalls = 0;\n \n+    /** Never access this boolean directly. Call {@link #isRRDisabled()} instead. */\n+    private @MonotonicNonNull Boolean rrDisabled = null;\n+\n+    /**\n+     * Was the returns receiver checker disabled on the command line?\n+     *\n+     * @return whether the -AdisableReturnsReceiver option was specified on the command line.\n+     */\n+    private boolean isRRDisabled() {\n+        if (rrDisabled == null) {\n+            // BaseTypeChecker#hasOption calls this getImmediateSubcheckerClasses (so that all", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79d18b607a9876bc19ddf05cf2995b3195670d08"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 840, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}