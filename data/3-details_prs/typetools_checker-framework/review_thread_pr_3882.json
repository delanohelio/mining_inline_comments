{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NDkzMDg0", "number": 3882, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1MjoyNFrOE255ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNzo0NDo0MlrOE4Rqow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA3MTk4OnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1MjoyNFrOHv8wmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1MjoyNFrOHv8wmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MDYwMQ==", "bodyText": "This method operates on AnnotatedTypeMirrors, so instead of, if both annotations this should be if neither annotated type has a primary annotation.", "url": "https://github.com/typetools/checker-framework/pull/3882#discussion_r520040601", "createdAt": "2020-11-09T18:52:24Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java", "diffHunk": "@@ -215,10 +215,12 @@ protected boolean isPrimarySubtype(AnnotatedTypeMirror subtype, AnnotatedTypeMir\n     /**\n      * Compare the primary annotations of {@code subtype} and {@code supertype}.\n      *\n+     * @param subtype the type that might be a subtype\n+     * @param supertype the type that might be a supertype\n      * @param annosCanBeEmtpy indicates that annotations may be missing from the typemirror\n      * @return true if the primary annotation on subtype {@literal <:} primary annotation on\n-     *     supertype for the current top or both annotations are null. False is returned if one\n-     *     annotation is null and the other is not.\n+     *     supertype for the current top. Returns true if both annotations are null. Returns false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dd0199690f79a3a11238a25fe110ade8a9fb65c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDA4MTgxOnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODo1NDo0OVrOHv82gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMjoxMDo1OVrOHwDn3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MjExMw==", "bodyText": "Without this change, if only one of the annotations is null,  qualifierHierarchy.isSubtype(subtypeAnno, supertypeAnno); would throw an exception.  But the Javadoc says that false should be returned in that case, so I think this is a good change.", "url": "https://github.com/typetools/checker-framework/pull/3882#discussion_r520042113", "createdAt": "2020-11-09T18:54:49Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java", "diffHunk": "@@ -247,8 +249,13 @@ protected boolean isAnnoSubtype(\n             @Nullable AnnotationMirror subtypeAnno,\n             @Nullable AnnotationMirror supertypeAnno,\n             boolean annosCanBeEmtpy) {\n-        if (annosCanBeEmtpy && subtypeAnno == null && supertypeAnno == null) {\n-            return true;\n+        if (annosCanBeEmtpy) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dd0199690f79a3a11238a25fe110ade8a9fb65c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0NDQxMg==", "bodyText": "If that is the case, then no client has ever taken advantage of this documented behavior.  Would it be better to simplify the specification rather than making the implementation more complex?  (I'm not sure which way I lean on that question.)", "url": "https://github.com/typetools/checker-framework/pull/3882#discussion_r520044412", "createdAt": "2020-11-09T18:58:29Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java", "diffHunk": "@@ -247,8 +249,13 @@ protected boolean isAnnoSubtype(\n             @Nullable AnnotationMirror subtypeAnno,\n             @Nullable AnnotationMirror supertypeAnno,\n             boolean annosCanBeEmtpy) {\n-        if (annosCanBeEmtpy && subtypeAnno == null && supertypeAnno == null) {\n-            return true;\n+        if (annosCanBeEmtpy) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MjExMw=="}, "originalCommit": {"oid": "9dd0199690f79a3a11238a25fe110ade8a9fb65c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDExNjUzMQ==", "bodyText": "I don't have a good argument for either option.  Really if both annotations are null this method shouldn't be called, so throwing an exception in that case makes sense.  So maybe it is better to change the documentation.", "url": "https://github.com/typetools/checker-framework/pull/3882#discussion_r520116531", "createdAt": "2020-11-09T20:59:41Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java", "diffHunk": "@@ -247,8 +249,13 @@ protected boolean isAnnoSubtype(\n             @Nullable AnnotationMirror subtypeAnno,\n             @Nullable AnnotationMirror supertypeAnno,\n             boolean annosCanBeEmtpy) {\n-        if (annosCanBeEmtpy && subtypeAnno == null && supertypeAnno == null) {\n-            return true;\n+        if (annosCanBeEmtpy) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MjExMw=="}, "originalCommit": {"oid": "9dd0199690f79a3a11238a25fe110ade8a9fb65c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDE1MzA1Mg==", "bodyText": "Mention type variables in javadoc.  Change the Javadoc to match implementation.", "url": "https://github.com/typetools/checker-framework/pull/3882#discussion_r520153052", "createdAt": "2020-11-09T22:10:59Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java", "diffHunk": "@@ -247,8 +249,13 @@ protected boolean isAnnoSubtype(\n             @Nullable AnnotationMirror subtypeAnno,\n             @Nullable AnnotationMirror supertypeAnno,\n             boolean annosCanBeEmtpy) {\n-        if (annosCanBeEmtpy && subtypeAnno == null && supertypeAnno == null) {\n-            return true;\n+        if (annosCanBeEmtpy) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA0MjExMw=="}, "originalCommit": {"oid": "9dd0199690f79a3a11238a25fe110ade8a9fb65c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDQ1MTU1OnYy", "diffSide": "LEFT", "path": "framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNzo0NDo0MlrOHyGbzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNzo0NDo0MlrOHyGbzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI5NjI3MQ==", "bodyText": "Both this method and isAnnoSubtype either called with annosCanBeEmtpy = false or the code checked that the annotations were nonnull before calling them.  So I just deleted these methods.", "url": "https://github.com/typetools/checker-framework/pull/3882#discussion_r522296271", "createdAt": "2020-11-12T17:44:42Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/framework/type/DefaultTypeHierarchy.java", "diffHunk": "@@ -209,80 +208,18 @@ protected String defaultErrorMessage(\n      *     supertype for the current top.\n      */\n     protected boolean isPrimarySubtype(AnnotatedTypeMirror subtype, AnnotatedTypeMirror supertype) {\n-        return isPrimarySubtype(subtype, supertype, false);\n-    }\n-\n-    /**\n-     * Compare the primary annotations of {@code subtype} and {@code supertype}.\n-     *\n-     * @param annosCanBeEmtpy indicates that annotations may be missing from the typemirror\n-     * @return true if the primary annotation on subtype {@literal <:} primary annotation on\n-     *     supertype for the current top or both annotations are null. False is returned if one\n-     *     annotation is null and the other is not.\n-     */\n-    protected boolean isPrimarySubtype(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d81b041dd55bf4509821811a387403c01de69a44"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 908, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}