{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NjM1Nzcz", "number": 3337, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjo1MToyN1rOECPXcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo0NTozMVrOEFsLdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzg0MzcwOnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/common/aliasing/jdk.astub", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjo1MToyN1rOGek1gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoyNDo0NFrOGhUybA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMzk4NQ==", "bodyText": "Why is this annotation being added in a jdk.astub file rather than in the annotated JDK, https://github.com/typetools/jdk?", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r434713985", "createdAt": "2020-06-03T16:51:27Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/common/aliasing/jdk.astub", "diffHunk": "@@ -0,0 +1,7 @@\n+import org.checkerframework.common.aliasing.qual.*;\n+\n+package java.lang;\n+\n+class Object {\n+    @Unique Object();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "579d38555ffc4880dba9c18d537b255b1bb23306"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI2Mzk0Ng==", "bodyText": "I added an .astub file to limit my changes to the Aliasing Checker directory itself and not disturb the workings of the other checkers. However, I have made changes in the annotated JDK and the resulting code still fixes the issue. It passed through all the checker tests but gives a \"build failed for target 'run-test'\" error in the build_jdk11u test when using Azure pipeline (not sure why).\nPull request : typetools/jdk#52", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r436263946", "createdAt": "2020-06-06T12:12:25Z", "author": {"login": "aditya3434"}, "path": "framework/src/main/java/org/checkerframework/common/aliasing/jdk.astub", "diffHunk": "@@ -0,0 +1,7 @@\n+import org.checkerframework.common.aliasing.qual.*;\n+\n+package java.lang;\n+\n+class Object {\n+    @Unique Object();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMzk4NQ=="}, "originalCommit": {"oid": "579d38555ffc4880dba9c18d537b255b1bb23306"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM4NTIzMg==", "bodyText": "You should link related PRs from the PR descriptions, so that it is immediately clear that PRs need to be merged together.\nYou should remove this jdk.astub file from this PR now, as the changes from the related PR should be picked-up automatically.\nMake the one suggested update in the jdk project and let's see whether the build just needs to re-run.", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r436385232", "createdAt": "2020-06-07T17:36:56Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/common/aliasing/jdk.astub", "diffHunk": "@@ -0,0 +1,7 @@\n+import org.checkerframework.common.aliasing.qual.*;\n+\n+package java.lang;\n+\n+class Object {\n+    @Unique Object();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMzk4NQ=="}, "originalCommit": {"oid": "579d38555ffc4880dba9c18d537b255b1bb23306"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5Njc4MA==", "bodyText": "I have removed the jdk.astub file from this PR and provided the link for the PR in description which needs to be merged together.", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r437596780", "createdAt": "2020-06-09T17:24:44Z", "author": {"login": "aditya3434"}, "path": "framework/src/main/java/org/checkerframework/common/aliasing/jdk.astub", "diffHunk": "@@ -0,0 +1,7 @@\n+import org.checkerframework.common.aliasing.qual.*;\n+\n+package java.lang;\n+\n+class Object {\n+    @Unique Object();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxMzk4NQ=="}, "originalCommit": {"oid": "579d38555ffc4880dba9c18d537b255b1bb23306"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzA3MTE5OnYy", "diffSide": "RIGHT", "path": "framework/tests/aliasing/UniqueConstructorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzowNzo0M1rOGf_nBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxMTo1OToxOVrOGgDYfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMTIyMA==", "bodyText": "How about adding a top-level class around these two classes that has the same name as the file?", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r436201220", "createdAt": "2020-06-05T23:07:43Z", "author": {"login": "wmdietl"}, "path": "framework/tests/aliasing/UniqueConstructorTest.java", "diffHunk": "@@ -0,0 +1,16 @@\n+import org.checkerframework.common.aliasing.qual.Unique;\n+\n+class ParentUniqueClass {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b2cd51eb983c99b6e8ab2521544e95608150497"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI2MzAzOA==", "bodyText": "I have added a top-level class around these two classes (with the same name) in my latest commit.", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r436263038", "createdAt": "2020-06-06T11:59:19Z", "author": {"login": "aditya3434"}, "path": "framework/tests/aliasing/UniqueConstructorTest.java", "diffHunk": "@@ -0,0 +1,16 @@\n+import org.checkerframework.common.aliasing.qual.Unique;\n+\n+class ParentUniqueClass {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMTIyMA=="}, "originalCommit": {"oid": "8b2cd51eb983c99b6e8ab2521544e95608150497"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzA3MjYxOnYy", "diffSide": "RIGHT", "path": "framework/tests/aliasing/UniqueConstructorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzowODo1M1rOGf_n5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxMjowMDoxNlrOGgDYwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMTQ0NQ==", "bodyText": "Can you add another subclass that does raise an error?", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r436201445", "createdAt": "2020-06-05T23:08:53Z", "author": {"login": "wmdietl"}, "path": "framework/tests/aliasing/UniqueConstructorTest.java", "diffHunk": "@@ -0,0 +1,16 @@\n+import org.checkerframework.common.aliasing.qual.Unique;\n+\n+class ParentUniqueClass {\n+\n+    // No need for @SuppressWarnings()\n+    @Unique ParentUniqueClass() {\n+        // Doesn't raise unique.leaked error since it's a parent class (top of heirarchy)\n+    }\n+}\n+\n+class ChildUniqueClass extends ParentUniqueClass {\n+\n+    @Unique ChildUniqueClass() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b2cd51eb983c99b6e8ab2521544e95608150497"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI2MzEwNQ==", "bodyText": "In my latest commit, the ChildUniqueClass will raise an error since the ParentClass is not @unique.", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r436263105", "createdAt": "2020-06-06T12:00:16Z", "author": {"login": "aditya3434"}, "path": "framework/tests/aliasing/UniqueConstructorTest.java", "diffHunk": "@@ -0,0 +1,16 @@\n+import org.checkerframework.common.aliasing.qual.Unique;\n+\n+class ParentUniqueClass {\n+\n+    // No need for @SuppressWarnings()\n+    @Unique ParentUniqueClass() {\n+        // Doesn't raise unique.leaked error since it's a parent class (top of heirarchy)\n+    }\n+}\n+\n+class ChildUniqueClass extends ParentUniqueClass {\n+\n+    @Unique ChildUniqueClass() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMTQ0NQ=="}, "originalCommit": {"oid": "8b2cd51eb983c99b6e8ab2521544e95608150497"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDAxNjk3OnYy", "diffSide": "RIGHT", "path": "framework/tests/aliasing/UniqueConstructorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo0Mzo1NlrOGkCD8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjoxMDo0MVrOGkYW5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNTY5Ng==", "bodyText": "We had discussed earlier having one top-level class. You reverted that and again have multiple top-level classes.", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r440435696", "createdAt": "2020-06-15T20:43:56Z", "author": {"login": "wmdietl"}, "path": "framework/tests/aliasing/UniqueConstructorTest.java", "diffHunk": "@@ -0,0 +1,24 @@\n+import org.checkerframework.common.aliasing.qual.Unique;\n+\n+public class UniqueConstructorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9186500184273bb508da6a5cc8558621a8754aa"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMDk5OA==", "bodyText": "Sorry for misunderstanding. I thought that we were discussing about the inheritance hierarchy (Parent extends UniqueConstructorTest and Child extends Parent, making UniqueConstructorTest the \"top\" level class). I have committed the required changes.", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r440800998", "createdAt": "2020-06-16T12:10:41Z", "author": {"login": "aditya3434"}, "path": "framework/tests/aliasing/UniqueConstructorTest.java", "diffHunk": "@@ -0,0 +1,24 @@\n+import org.checkerframework.common.aliasing.qual.Unique;\n+\n+public class UniqueConstructorTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNTY5Ng=="}, "originalCommit": {"oid": "d9186500184273bb508da6a5cc8558621a8754aa"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDAxODcwOnYy", "diffSide": "RIGHT", "path": "framework/tests/aliasing/UniqueConstructorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo0NDozMlrOGkCFFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjoxMToyMVrOGkYYTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNTk4OQ==", "bodyText": "That comment should be combined with the one in the body, where you give the reason why no warning is required.", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r440435989", "createdAt": "2020-06-15T20:44:32Z", "author": {"login": "wmdietl"}, "path": "framework/tests/aliasing/UniqueConstructorTest.java", "diffHunk": "@@ -0,0 +1,24 @@\n+import org.checkerframework.common.aliasing.qual.Unique;\n+\n+public class UniqueConstructorTest {\n+    // No need for @SuppressWarnings()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9186500184273bb508da6a5cc8558621a8754aa"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMTM1OA==", "bodyText": "I have combined the comment with the one in the body.", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r440801358", "createdAt": "2020-06-16T12:11:21Z", "author": {"login": "aditya3434"}, "path": "framework/tests/aliasing/UniqueConstructorTest.java", "diffHunk": "@@ -0,0 +1,24 @@\n+import org.checkerframework.common.aliasing.qual.Unique;\n+\n+public class UniqueConstructorTest {\n+    // No need for @SuppressWarnings()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNTk4OQ=="}, "originalCommit": {"oid": "d9186500184273bb508da6a5cc8558621a8754aa"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDAxOTU0OnYy", "diffSide": "RIGHT", "path": "framework/tests/aliasing/UniqueConstructorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo0NDo1MVrOGkCFng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjoxNzowMVrOGkYjrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNjEyNg==", "bodyText": "What does top parent class mean?", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r440436126", "createdAt": "2020-06-15T20:44:51Z", "author": {"login": "wmdietl"}, "path": "framework/tests/aliasing/UniqueConstructorTest.java", "diffHunk": "@@ -0,0 +1,24 @@\n+import org.checkerframework.common.aliasing.qual.Unique;\n+\n+public class UniqueConstructorTest {\n+    // No need for @SuppressWarnings()\n+    @Unique UniqueConstructorTest() {\n+        // Doesn't raise unique.leaked error since it's a top parent class (@Unique Object subclass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9186500184273bb508da6a5cc8558621a8754aa"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwNDI3MQ==", "bodyText": "The Parent class extends UniqueConstructorTest and the Child class extends the parent class. Hence, I referred to the UniqueConstructorTest class as the \"top parent class\" (not related to the Parent class in the code) in the inheritance hierarchy. Since, it explicitly doesn't extend any class, it extends java.lang.Object class by default.", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r440804271", "createdAt": "2020-06-16T12:17:01Z", "author": {"login": "aditya3434"}, "path": "framework/tests/aliasing/UniqueConstructorTest.java", "diffHunk": "@@ -0,0 +1,24 @@\n+import org.checkerframework.common.aliasing.qual.Unique;\n+\n+public class UniqueConstructorTest {\n+    // No need for @SuppressWarnings()\n+    @Unique UniqueConstructorTest() {\n+        // Doesn't raise unique.leaked error since it's a top parent class (@Unique Object subclass", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNjEyNg=="}, "originalCommit": {"oid": "d9186500184273bb508da6a5cc8558621a8754aa"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDAyMTY1OnYy", "diffSide": "RIGHT", "path": "framework/tests/aliasing/UniqueConstructorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDo0NTozMVrOGkCG3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjoxMjo1N1rOGkYblQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNjQ0Nw==", "bodyText": "non-unique", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r440436447", "createdAt": "2020-06-15T20:45:31Z", "author": {"login": "wmdietl"}, "path": "framework/tests/aliasing/UniqueConstructorTest.java", "diffHunk": "@@ -0,0 +1,24 @@\n+import org.checkerframework.common.aliasing.qual.Unique;\n+\n+public class UniqueConstructorTest {\n+    // No need for @SuppressWarnings()\n+    @Unique UniqueConstructorTest() {\n+        // Doesn't raise unique.leaked error since it's a top parent class (@Unique Object subclass\n+        // by default)\n+    }\n+}\n+\n+class ParentClass extends UniqueConstructorTest {\n+\n+    ParentClass() {\n+        // Doesn't raise unique.leaked error since it's a non unique class with a unique parent", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9186500184273bb508da6a5cc8558621a8754aa"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMjE5Nw==", "bodyText": "I have made the correction in the comment", "url": "https://github.com/typetools/checker-framework/pull/3337#discussion_r440802197", "createdAt": "2020-06-16T12:12:57Z", "author": {"login": "aditya3434"}, "path": "framework/tests/aliasing/UniqueConstructorTest.java", "diffHunk": "@@ -0,0 +1,24 @@\n+import org.checkerframework.common.aliasing.qual.Unique;\n+\n+public class UniqueConstructorTest {\n+    // No need for @SuppressWarnings()\n+    @Unique UniqueConstructorTest() {\n+        // Doesn't raise unique.leaked error since it's a top parent class (@Unique Object subclass\n+        // by default)\n+    }\n+}\n+\n+class ParentClass extends UniqueConstructorTest {\n+\n+    ParentClass() {\n+        // Doesn't raise unique.leaked error since it's a non unique class with a unique parent", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQzNjQ0Nw=="}, "originalCommit": {"oid": "d9186500184273bb508da6a5cc8558621a8754aa"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1668, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}