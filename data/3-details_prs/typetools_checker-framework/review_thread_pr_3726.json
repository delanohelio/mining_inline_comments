{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NjA4MDI1", "number": 3726, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzowMDozNVrOEp4mjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzoxMTowM1rOEp4yrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzU0NDQ3OnYy", "diffSide": "RIGHT", "path": "checker/bin-devel/test-misc.sh", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzowMDozNVrOHb08Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzowMDozNVrOHb08Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk0MDk3NQ==", "bodyText": "Should this be reverted?", "url": "https://github.com/typetools/checker-framework/pull/3726#discussion_r498940975", "createdAt": "2020-10-02T17:00:35Z", "author": {"login": "smillst"}, "path": "checker/bin-devel/test-misc.sh", "diffHunk": "@@ -21,7 +21,7 @@ source \"$SCRIPTDIR\"/build.sh\n # Javadoc documentation\n # Uncomment this line temporarily for refactorings that touch a lot of code that\n # you don't understand.  Then, recomment it as soon as the pull request is merged.\n-# SKIPJAVADOC=1\n+SKIPJAVADOC=1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c4caceb73270cd7370cbaa0274e452b34076123"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzU2NjYxOnYy", "diffSide": "RIGHT", "path": "checker/src/main/java/org/checkerframework/checker/signedness/SignednessAnnotatedTypeFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzowODowM1rOHb1KNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzowODowM1rOHb1KNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk0NDU2Ng==", "bodyText": "Should widenedTypeKind be renamed to narrowedTypeKind?", "url": "https://github.com/typetools/checker-framework/pull/3726#discussion_r498944566", "createdAt": "2020-10-02T17:08:03Z", "author": {"login": "smillst"}, "path": "checker/src/main/java/org/checkerframework/checker/signedness/SignednessAnnotatedTypeFactory.java", "diffHunk": "@@ -184,28 +188,39 @@ private void addSignednessGlbAnnotation(Tree tree, AnnotatedTypeMirror type) {\n             Set<AnnotationMirror> annos, TypeKind typeKind, TypeKind widenedTypeKind) {\n         assert annos.size() == 1;\n \n-        if (TypeKindUtils.isNarrower(typeKind, widenedTypeKind)) {\n-            Set<AnnotationMirror> result = AnnotationUtils.createAnnotationSet();\n-            if (TypeKindUtils.isFloatingPoint(widenedTypeKind)) {\n-                result.add(SIGNED);\n-                return result;\n-            }\n-            if (getQualifierHierarchy().isSubtype(annos.iterator().next(), UNSIGNED)) {\n-                result.add(SIGNED_POSITIVE_FROM_UNSIGNED);\n-                return result;\n-            } else {\n-                result.add(SIGNEDNESS_GLB);\n-                return result;\n-            }\n+        Set<AnnotationMirror> result = AnnotationUtils.createAnnotationSet();\n+        if (TypeKindUtils.isFloatingPoint(widenedTypeKind)) {\n+            result.add(SIGNED);\n+            return result;\n         }\n         if (widenedTypeKind == TypeKind.CHAR) {\n-            // It's a non-widening cast to char.  Make it @Unsigned.\n-            Set<AnnotationMirror> result = AnnotationUtils.createAnnotationSet();\n             result.add(UNSIGNED);\n             return result;\n         }\n-        if (widenedTypeKind == TypeKind.FLOAT || widenedTypeKind == TypeKind.DOUBLE) {\n-            Set<AnnotationMirror> result = AnnotationUtils.createAnnotationSet();\n+        AnnotationMirror anno = annos.iterator().next();\n+        if (AnnotationUtils.areSame(anno, POLY_SIGNED)) {\n+            return annos;\n+        } else if (getQualifierHierarchy().isSubtype(anno, UNSIGNED)) {\n+            // TODO: A future enhancement will make the widened type indicate the unsigned basetype\n+            // from which it was widened.\n+            result.add(SIGNED_POSITIVE_FROM_UNSIGNED);\n+            return result;\n+        } else {\n+            // TODO: A future enhancement will make the widened type indicate the signed basetype\n+            // from which it was widened.\n+            result.add(SIGNEDNESS_GLB);\n+            return result;\n+        }\n+    }\n+\n+    @Override\n+    public Set<AnnotationMirror> getNarrowedAnnotations(\n+            Set<AnnotationMirror> annos, TypeKind typeKind, TypeKind widenedTypeKind) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c4caceb73270cd7370cbaa0274e452b34076123"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMzU3NTQ5OnYy", "diffSide": "RIGHT", "path": "changelog.txt", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNzoxMTowM1rOHb1P6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxODoxMTo1MFrOHb2_kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk0NjAyNw==", "bodyText": "I wouldn't call this a renaming.  CFAbstractTransfer.getValueWithSameAnnotations() was removed.  Also, we don't necessarily need to remove that method.  If we keep it in, then this change wouldn't be a breaking change.", "url": "https://github.com/typetools/checker-framework/pull/3726#discussion_r498946027", "createdAt": "2020-10-02T17:11:03Z", "author": {"login": "smillst"}, "path": "changelog.txt", "diffHunk": "@@ -1,3 +1,10 @@\n+Version 3.8.0, November 2, 2020\n+\n+Renamed CFAbstractTransfer.getValueWithSameAnnotations() to two methods", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c4caceb73270cd7370cbaa0274e452b34076123"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk1NzkxMQ==", "bodyText": "@smillst I think it's still a breaking change because getValueWithSameAnnotations() is no longer called.  If we leave it in, then clients of the Checker Framework will continue to compile, but their behavior will change.  If you think that's OK, we could make the version number 3.7.1.  What do you think?", "url": "https://github.com/typetools/checker-framework/pull/3726#discussion_r498957911", "createdAt": "2020-10-02T17:35:51Z", "author": {"login": "mernst"}, "path": "changelog.txt", "diffHunk": "@@ -1,3 +1,10 @@\n+Version 3.8.0, November 2, 2020\n+\n+Renamed CFAbstractTransfer.getValueWithSameAnnotations() to two methods", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk0NjAyNw=="}, "originalCommit": {"oid": "7c4caceb73270cd7370cbaa0274e452b34076123"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk3NDYxMQ==", "bodyText": "The documentation of getValueWithSameAnnotations doesn't say that it is called for narrowing and widening conversions, so clients shouldn't rely on that fact. So, I'm ok with this.", "url": "https://github.com/typetools/checker-framework/pull/3726#discussion_r498974611", "createdAt": "2020-10-02T18:11:50Z", "author": {"login": "smillst"}, "path": "changelog.txt", "diffHunk": "@@ -1,3 +1,10 @@\n+Version 3.8.0, November 2, 2020\n+\n+Renamed CFAbstractTransfer.getValueWithSameAnnotations() to two methods", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk0NjAyNw=="}, "originalCommit": {"oid": "7c4caceb73270cd7370cbaa0274e452b34076123"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 967, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}