{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MDUzNzAz", "number": 3580, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzowMTowOVrOEWyCKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzowNDo0MFrOEWyGow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzIzODgzOnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzowMTowOVrOG-NfzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzowMTowOVrOG-NfzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg4NjAyOQ==", "bodyText": "This comment doesn't differentiate it from toString().", "url": "https://github.com/typetools/checker-framework/pull/3580#discussion_r467886029", "createdAt": "2020-08-10T13:01:09Z", "author": {"login": "smillst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "diffHunk": "@@ -370,6 +371,13 @@ public void setBlock(BlockImpl b) {\n         public String toString() {\n             throw new BugInCF(\"DO NOT CALL ExtendedNode.toString(). Write your own.\");\n         }\n+\n+        /**\n+         * Returns a string representation of this.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b504ca042d9f4d8d6b5a2c8488d0cb6f60261abf"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzI0NDI4OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzowMjo0N1rOG-NjIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzowMjo0N1rOG-NjIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg4Njg4MQ==", "bodyText": "This comment doesn't differentiate it from toString().", "url": "https://github.com/typetools/checker-framework/pull/3580#discussion_r467886881", "createdAt": "2020-08-10T13:02:47Z", "author": {"login": "smillst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "diffHunk": "@@ -1501,6 +1543,32 @@ private String resolveLabel(Label label) {\n             }\n             return nodeToString(nodeList.get(index));\n         }\n+\n+        /**\n+         * Returns a string representation of this.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b504ca042d9f4d8d6b5a2c8488d0cb6f60261abf"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzI1MDI3OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzowNDo0MFrOG-Nm3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzowNDo0MFrOG-Nm3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg4NzgzNg==", "bodyText": "I think it would be clearer to call this extendedNodeCollectionToStringDebug.  Then it's clear in PhaseOneResult#toStringDebug why PhaseOneResult#toString isn't called.", "url": "https://github.com/typetools/checker-framework/pull/3580#discussion_r467887836", "createdAt": "2020-08-10T13:04:40Z", "author": {"login": "smillst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/CFGBuilder.java", "diffHunk": "@@ -545,6 +568,25 @@ public Label getLabel() {\n         public String toString() {\n             return \"JumpMarker(\" + getLabel() + \")\";\n         }\n+\n+        @Override\n+        public String toStringDebug() {\n+            return toString();\n+        }\n+    }\n+\n+    /**\n+     * Return a printed representation of a collection of extended nodes.\n+     *\n+     * @param nodes a collection of extended nodes to format\n+     * @return a printed representation of the given collection\n+     */\n+    public static String extendedNodeCollectionToString(Collection<? extends ExtendedNode> nodes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b504ca042d9f4d8d6b5a2c8488d0cb6f60261abf"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 997, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}