{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NjY1ODU3", "number": 3834, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjo1MTowNlrOEx_n1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjo1MTowNlrOEx_n1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwODU4MDY4OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/builder/CFGTranslationPhaseOne.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjo1MTowNlrOHoY95w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNjo1MTowNlrOHoY95w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjExNDE1MQ==", "bodyText": "This could be replaced with org.checkerframework.javacutil.TypesUtils#typeFromClass.", "url": "https://github.com/typetools/checker-framework/pull/3834#discussion_r512114151", "createdAt": "2020-10-26T16:51:06Z", "author": {"login": "smillst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/builder/CFGTranslationPhaseOne.java", "diffHunk": "@@ -3645,12 +3650,12 @@ public Node visitOther(Tree tree, Void p) {\n     }\n \n     /**\n-     * Returns the TypeElement for the given class.\n+     * Returns the TypeMirror for the given class.\n      *\n      * @param clazz a class\n-     * @return the TypeElement for the class\n+     * @return the TypeMirror for the class\n      */\n-    private TypeElement getTypeElement(Class<?> clazz) {\n-        return elements.getTypeElement(clazz.getCanonicalName());\n+    private TypeMirror getTypeMirror(Class<?> clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccf3fc7de49c0b7ab85387f20683350e8a0ca21a"}, "originalPosition": 268}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 876, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}