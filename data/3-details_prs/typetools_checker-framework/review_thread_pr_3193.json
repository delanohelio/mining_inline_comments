{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMjUzMjgw", "number": 3193, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo0OToxN1rODr3_tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo1ODoxMVrODr4GkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzMyNzkwOnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/framework/stub/StubParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo0OToxN1rOF8eebw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo0OToxN1rOF8eebw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk1ODE5MQ==", "bodyText": "The line above this one should now refer to AnnotatedTypeReplacer.", "url": "https://github.com/typetools/checker-framework/pull/3193#discussion_r398958191", "createdAt": "2020-03-26T23:49:17Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/StubParser.java", "diffHunk": "@@ -1965,9 +1965,9 @@ private void putNew(\n                 // annotation exist in both types in the same location for the same hierarchy.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d6e012067947b03ee09d0eab0c1a764b2b9bf22"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzMzMzAxOnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/framework/type/TypeFromExpressionVisitor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo1MTo1N1rOF8ehsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxODowNTo0MVrOF88dcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk1OTAyNg==", "bodyText": "The line above talks about merge. It also says that it does that instead of replacing them. So it is confusing that this now uses a replacer.", "url": "https://github.com/typetools/checker-framework/pull/3193#discussion_r398959026", "createdAt": "2020-03-26T23:51:57Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/TypeFromExpressionVisitor.java", "diffHunk": "@@ -353,10 +353,11 @@ public AnnotatedTypeMirror visitWildcard(WildcardTree node, AnnotatedTypeFactory\n         // This ensures that the structure of the wildcard will match that created by", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d6e012067947b03ee09d0eab0c1a764b2b9bf22"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ0OTQ1Ng==", "bodyText": "I think this comment is just wrong - this PR didn't change the semantics of AnnotatedTypeMerger/AnnotatedTypeReplacer at all: the class always only did replacement.", "url": "https://github.com/typetools/checker-framework/pull/3193#discussion_r399449456", "createdAt": "2020-03-27T18:05:41Z", "author": {"login": "kelloggm"}, "path": "framework/src/main/java/org/checkerframework/framework/type/TypeFromExpressionVisitor.java", "diffHunk": "@@ -353,10 +353,11 @@ public AnnotatedTypeMirror visitWildcard(WildcardTree node, AnnotatedTypeFactory\n         // This ensures that the structure of the wildcard will match that created by", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk1OTAyNg=="}, "originalCommit": {"oid": "8d6e012067947b03ee09d0eab0c1a764b2b9bf22"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzM0MDY3OnYy", "diffSide": "RIGHT", "path": "checker/src/main/java/org/checkerframework/checker/nullness/KeyForPropagator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo1NTo0MVrOF8emYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo1NTo0MVrOF8emYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk2MDIyNw==", "bodyText": "This comment still refers to merger.", "url": "https://github.com/typetools/checker-framework/pull/3193#discussion_r398960227", "createdAt": "2020-03-26T23:55:41Z", "author": {"login": "wmdietl"}, "path": "checker/src/main/java/org/checkerframework/checker/nullness/KeyForPropagator.java", "diffHunk": "@@ -178,23 +178,30 @@ public void propagateNewClassTree(\n      * An annotated type merger that merges @KeyFor annotations and only if the type that is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d6e012067947b03ee09d0eab0c1a764b2b9bf22"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzM0MjU4OnYy", "diffSide": "RIGHT", "path": "checker/src/main/java/org/checkerframework/checker/nullness/KeyForPropagator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo1Njo0N1rOF8enlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo1Njo0N1rOF8enlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk2MDUzNQ==", "bodyText": "The PR would be nicer if these parameter renamings happened separately, to focus on the essential changes.", "url": "https://github.com/typetools/checker-framework/pull/3193#discussion_r398960535", "createdAt": "2020-03-26T23:56:47Z", "author": {"login": "wmdietl"}, "path": "checker/src/main/java/org/checkerframework/checker/nullness/KeyForPropagator.java", "diffHunk": "@@ -178,23 +178,30 @@ public void propagateNewClassTree(\n      * An annotated type merger that merges @KeyFor annotations and only if the type that is\n      * receiving an annotation has an @UnknownKeyFor annotation or NO key for annotations.\n      */\n-    private class KeyForPropagationMerger extends AnnotatedTypeMerger {\n+    private class KeyForPropagationReplacer extends AnnotatedTypeReplacer {\n+\n+        /** The processing environment. */\n         private final ProcessingEnvironment env;\n \n-        private KeyForPropagationMerger(ProcessingEnvironment env) {\n+        /**\n+         * Create a new replacer.\n+         *\n+         * @param env the processing environment\n+         */\n+        private KeyForPropagationReplacer(ProcessingEnvironment env) {\n             this.env = env;\n         }\n \n         @Override\n-        protected void replaceAnnotations(AnnotatedTypeMirror from, AnnotatedTypeMirror to) {\n-            final AnnotationMirror fromKeyFor = from.getAnnotationInHierarchy(UNKNOWN_KEYFOR);\n-            final AnnotationMirror toKeyFor = to.getAnnotationInHierarchy(UNKNOWN_KEYFOR);\n+        protected void replaceAnnotations(AnnotatedTypeMirror src, AnnotatedTypeMirror dst) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d6e012067947b03ee09d0eab0c1a764b2b9bf22"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MzM0NTQ0OnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/framework/type/visitor/AnnotatedTypeReplacer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo1ODoxMVrOF8epVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo1ODoxMVrOF8epVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk2MDk4MQ==", "bodyText": "It would have been more consistent to rename to from and to, like in the earlier methods.", "url": "https://github.com/typetools/checker-framework/pull/3193#discussion_r398960981", "createdAt": "2020-03-26T23:58:11Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/visitor/AnnotatedTypeReplacer.java", "diffHunk": "@@ -69,14 +84,20 @@ protected Void combineRs(Void r1, Void r2) {\n         return r1;\n     }\n \n+    /**\n+     * Replace the annotations in dst with the annotations in src\n+     *\n+     * @param src the source of the annotations\n+     * @param dst the destination of the annotations\n+     */\n     protected void replaceAnnotations(\n-            final AnnotatedTypeMirror one, final AnnotatedTypeMirror two) {\n+            final AnnotatedTypeMirror src, final AnnotatedTypeMirror dst) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d6e012067947b03ee09d0eab0c1a764b2b9bf22"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1761, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}