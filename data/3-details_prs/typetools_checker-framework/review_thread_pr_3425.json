{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MzAzMTYw", "number": 3425, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1NzoxMVrOELv1bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1NzoxMVrOELv1bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzUzNTE3OnYy", "diffSide": "RIGHT", "path": "checker/src/main/java/org/checkerframework/checker/interning/qual/CompareToMethod.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1NzoxMVrOGtdZ7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNTo1NzoxMVrOGtdZ7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDMyMDg3OQ==", "bodyText": "This annotation has \"no effect if the annotated type is used to annotate anything other than a class\".   The Checker Framework has annotation, org.checkerframework.framework.qual.InheritedAnnotation that works for method annotations.", "url": "https://github.com/typetools/checker-framework/pull/3425#discussion_r450320879", "createdAt": "2020-07-06T15:57:11Z", "author": {"login": "smillst"}, "path": "checker/src/main/java/org/checkerframework/checker/interning/qual/CompareToMethod.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package org.checkerframework.checker.interning.qual;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Inherited;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * Method declaration annotation that indicates a method has a specification like {@code\n+ * compareTo()} or {@code compare()}. The Interning Checker permits use of {@code if (this == arg) {\n+ * return 0; }} or {@code if (arg1 == arg2) { return 0; }} within the body.\n+ *\n+ * @checker_framework.manual #interning-checker Interning Checker\n+ */\n+@Documented\n+@Target(ElementType.METHOD)\n+@Retention(RetentionPolicy.RUNTIME)\n+@Inherited", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "591704c0e12bb965f8744c7578445e274b799f41"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1732, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}