{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MTE1Mjcy", "number": 3272, "title": "Add GenericAnnotatedTypeFactory#getExceptionalExitStore", "bodyText": "Add GenericAnnotatedTypeFactory#getExceptionalExitStore. Also, clean up the nearby Javadoc.", "createdAt": "2020-04-26T16:43:27Z", "url": "https://github.com/typetools/checker-framework/pull/3272", "merged": true, "mergeCommit": {"oid": "88ca463492b3ac86bde27d0bac3eb4ee1207266f"}, "closed": true, "closedAt": "2020-05-01T23:22:32Z", "author": {"login": "smillst"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbdcTeAH2gAyNDA5MTE1MjcyOmIwM2UyNzVlOTI2ZDVjNjg1MmZkMGQ3NDFlMTkzZWY4OWVlNTE2MWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdGukfgH2gAyNDA5MTE1MjcyOmQzMGFmOGNiOTY4OGQ0NWVkOWI1NGEyYTQ3YTViZGIwNzEwN2FlMDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b03e275e926d5c6852fd0d741e193ef89ee5161a", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/b03e275e926d5c6852fd0d741e193ef89ee5161a", "committedDate": "2020-04-26T16:40:12Z", "message": "Add GenericAnnotatedTypeFactory#getExceptionalExitStore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bff58750ec45c4febe1707254b378cc370bc1127", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/bff58750ec45c4febe1707254b378cc370bc1127", "committedDate": "2020-04-26T16:44:13Z", "message": "Remove assert."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fc12d105ffae82e08a2d7d40ebafd383094a8a4", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/9fc12d105ffae82e08a2d7d40ebafd383094a8a4", "committedDate": "2020-04-26T16:47:12Z", "message": "Correct javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f2aef667c41bc7319c874a9a46e704a56f5ab29", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/3f2aef667c41bc7319c874a9a46e704a56f5ab29", "committedDate": "2020-04-26T16:48:41Z", "message": "Fix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTgzMTc4", "url": "https://github.com/typetools/checker-framework/pull/3272#pullrequestreview-400583178", "createdAt": "2020-04-27T01:50:31Z", "commit": {"oid": "3f2aef667c41bc7319c874a9a46e704a56f5ab29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMTo1MDozMVrOGMNh0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwMTo1MDozMVrOGMNh0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTQ1Nzc0NQ==", "bodyText": "It looks like that method implementation needs to be improved to me closer to how getRegularExitStore is implemented.", "url": "https://github.com/typetools/checker-framework/pull/3272#discussion_r415457745", "createdAt": "2020-04-27T01:50:31Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/GenericAnnotatedTypeFactory.java", "diffHunk": "@@ -1195,13 +1224,21 @@ protected void analyze(\n             if (regularExitStore != null) {\n                 regularExitStores.put(method, regularExitStore);\n             }\n+            Store exceptionalExitStore = analysis.getExceptionalExitStore();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f2aef667c41bc7319c874a9a46e704a56f5ab29"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d494aae8d98bd28e4a25ebb572a16f70adac09ad", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/d494aae8d98bd28e4a25ebb572a16f70adac09ad", "committedDate": "2020-04-29T19:52:24Z", "message": "Merge branch 'master' into exceptionalExit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84aa27688e5452bc436752dd7de98d350ebab898", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/84aa27688e5452bc436752dd7de98d350ebab898", "committedDate": "2020-04-29T19:53:59Z", "message": "Fix NPE."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8964a623f01619c8d38083959fd71e2f6a9d124c", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/8964a623f01619c8d38083959fd71e2f6a9d124c", "committedDate": "2020-04-30T14:02:25Z", "message": "Add annotation."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzODkzNjQy", "url": "https://github.com/typetools/checker-framework/pull/3272#pullrequestreview-403893642", "createdAt": "2020-04-30T21:33:59Z", "commit": {"oid": "8964a623f01619c8d38083959fd71e2f6a9d124c"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMTozMzo1OVrOGO7Img==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQyMTozNTo1NVrOGO7MGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwMjEwNg==", "bodyText": "We don't check postconditions on exception exit. JML would have syntax for that, if I remember correctly. But here we only check postconditions on regular exits.", "url": "https://github.com/typetools/checker-framework/pull/3272#discussion_r418302106", "createdAt": "2020-04-30T21:33:59Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/GenericAnnotatedTypeFactory.java", "diffHunk": "@@ -828,6 +830,12 @@ public AnnotationMirror getAnnotationMirrorFromJavaExpressionString(\n      */\n     protected IdentityHashMap<Tree, Store> regularExitStores;\n \n+    /**\n+     * A mapping from methods (or other code blocks) to their exceptional exit store (used to check", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8964a623f01619c8d38083959fd71e2f6a9d124c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwMjY4Nw==", "bodyText": "The their the part is odd.", "url": "https://github.com/typetools/checker-framework/pull/3272#discussion_r418302687", "createdAt": "2020-04-30T21:35:09Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/GenericAnnotatedTypeFactory.java", "diffHunk": "@@ -842,14 +850,34 @@ public AnnotationMirror getAnnotationMirrorFromJavaExpressionString(\n      * Returns the regular exit store for a method or another code block (such as static\n      * initializers).\n      *\n+     * @param tree a MethodTree or other code block, such as a static initializer\n      * @return the regular exit store, or {@code null}, if there is no such store (because the\n      *     method cannot exit through the regular exit block).\n      */\n-    public @Nullable Store getRegularExitStore(Tree t) {\n-        return regularExitStores.get(t);\n+    public @Nullable Store getRegularExitStore(Tree tree) {\n+        return regularExitStores.get(tree);\n+    }\n+\n+    /**\n+     * Returns the exceptional exit store for a method or another code block (such as static\n+     * initializers).\n+     *\n+     * @param tree a MethodTree or other code block, such as a static initializer\n+     * @return the exceptional exit store, or {@code null}, if there is no such store.\n+     */\n+    public @Nullable Store getExceptionalExitStore(Tree tree) {\n+        return exceptionalExitStores.get(tree);\n     }\n \n-    /** @return all return node and store pairs for a given method */\n+    /**\n+     * Returns a list of all return statements of {@code method} paired with their the corresponding", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8964a623f01619c8d38083959fd71e2f6a9d124c"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODMwMzAwMg==", "bodyText": "Also a their the.", "url": "https://github.com/typetools/checker-framework/pull/3272#discussion_r418303002", "createdAt": "2020-04-30T21:35:55Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/GenericAnnotatedTypeFactory.java", "diffHunk": "@@ -842,14 +850,34 @@ public AnnotationMirror getAnnotationMirrorFromJavaExpressionString(\n      * Returns the regular exit store for a method or another code block (such as static\n      * initializers).\n      *\n+     * @param tree a MethodTree or other code block, such as a static initializer\n      * @return the regular exit store, or {@code null}, if there is no such store (because the\n      *     method cannot exit through the regular exit block).\n      */\n-    public @Nullable Store getRegularExitStore(Tree t) {\n-        return regularExitStores.get(t);\n+    public @Nullable Store getRegularExitStore(Tree tree) {\n+        return regularExitStores.get(tree);\n+    }\n+\n+    /**\n+     * Returns the exceptional exit store for a method or another code block (such as static\n+     * initializers).\n+     *\n+     * @param tree a MethodTree or other code block, such as a static initializer\n+     * @return the exceptional exit store, or {@code null}, if there is no such store.\n+     */\n+    public @Nullable Store getExceptionalExitStore(Tree tree) {\n+        return exceptionalExitStores.get(tree);\n     }\n \n-    /** @return all return node and store pairs for a given method */\n+    /**\n+     * Returns a list of all return statements of {@code method} paired with their the corresponding\n+     * {@link TransferResult}. If {@code method} has no return statement, then the empty list is\n+     * returned.\n+     *\n+     * @param methodTree method whose return statements should be returned\n+     * @return a list of all return statements of {@code method} paired with their the corresponding", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8964a623f01619c8d38083959fd71e2f6a9d124c"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d30af8cb9688d45ed9b54a2a47a5bdb07107ae03", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/d30af8cb9688d45ed9b54a2a47a5bdb07107ae03", "committedDate": "2020-05-01T19:20:11Z", "message": "Correct Javadoc."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2966, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}