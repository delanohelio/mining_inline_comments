{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyNTM2Nzcx", "number": 3773, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzoxNjoyM1rOEtJPgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzoxNjoyM1rOEtJPgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzcyODAwOnYy", "diffSide": "RIGHT", "path": "checker/src/main/java/org/checkerframework/checker/signature/SignatureAnnotatedTypeFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzoxNjoyM1rOHgxcDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzoxNjoyM1rOHgxcDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyNjQ3Ng==", "bodyText": "You can replace this if and the next with org.checkerframework.javacutil.TreeUtils#isClassLiteral.", "url": "https://github.com/typetools/checker-framework/pull/3773#discussion_r504126476", "createdAt": "2020-10-13T17:16:23Z", "author": {"login": "smillst"}, "path": "checker/src/main/java/org/checkerframework/checker/signature/SignatureAnnotatedTypeFactory.java", "diffHunk": "@@ -247,6 +266,24 @@ public Void visitMethodInvocation(MethodInvocationTree tree, AnnotatedTypeMirror\n                     type.replaceAnnotation(BINARY_NAME);\n                 }\n             }\n+\n+            if (TreeUtils.isMethodInvocation(tree, classGetName, processingEnv)) {\n+                ExpressionTree receiver = TreeUtils.getReceiverTree(tree);\n+                if (receiver.getKind() == Tree.Kind.MEMBER_SELECT) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a3239f45d8dd89ef6181b111bfff7eec893450e"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 978, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}