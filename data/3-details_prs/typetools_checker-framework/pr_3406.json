{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwODgwMTg0", "number": 3406, "title": "Issue#1395 : Dump on error fix", "bodyText": "Fix for issue #1395 (dump-on-error). Compound checkers such as nullness and index checkers were not giving adequate stack trace to pin-point where the error in the code had occurred. This was because in BaseTypeChecker, errors due to checkers with subcheckers were stored in CheckerMessage but those without were printed right away giving a correct stack trace. This storage caused the stack trace to unwind and take a different path. Since, all errors were stored in the same place, they gave the same stack trace when the -doe option is used. To fix this problem, I added a CheckerMessage constructor to store the stack trace when the error occurred. Then, I added a method to print this stored stack trace for all the stored errors. The code gives the correct stack trace when used with the '-AdumpOnErrors' compiler option.\nFixes #1395.", "createdAt": "2020-06-27T08:11:50Z", "url": "https://github.com/typetools/checker-framework/pull/3406", "merged": true, "mergeCommit": {"oid": "e8be2098f2c39a2d7830e6b7fc64af081fe95d2f"}, "closed": true, "closedAt": "2020-07-31T00:28:14Z", "author": {"login": "aditya3434"}, "timelineItems": {"totalCount": 48, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqJekPAH2gAyNDQwODgwMTg0Ojk3ZmYxMmQ0YjZkYmZiZmNiNjJkN2Q1MjgxNWYxYzkwZWE2OTAwYjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6JEAugFqTQ1ODg0NzIxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "97ff12d4b6dbfbfcb62d7d52815f1c90ea6900b9", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/97ff12d4b6dbfbfcb62d7d52815f1c90ea6900b9", "committedDate": "2020-06-11T07:53:26Z", "message": "Fix for feature request #3313 in Aliasing Checker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "629a1a971c44ee9e2b268854f3767b91b28c2da0", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/629a1a971c44ee9e2b268854f3767b91b28c2da0", "committedDate": "2020-06-11T07:53:26Z", "message": "Revert \"Fix for feature request #3313 in Aliasing Checker\"\n\nThis reverts commit fd536c4de755dc1c53adbca9ad2b684e9b39a055."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "deab153dc6304b3dfa19741b1550f75e2c5dac75", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/deab153dc6304b3dfa19741b1550f75e2c5dac75", "committedDate": "2020-06-16T07:44:49Z", "message": "Fix for Issue #1395"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0e6deb6b56ba93c0c5cc73a00519cb8cca6dd83", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/c0e6deb6b56ba93c0c5cc73a00519cb8cca6dd83", "committedDate": "2020-06-16T07:56:58Z", "message": "Fix for Issue #1395"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1ffe78c5a849e89a710175c3c2caf0d71dd444b", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/d1ffe78c5a849e89a710175c3c2caf0d71dd444b", "committedDate": "2020-06-16T09:47:48Z", "message": "Adding documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11e70d3a9af6a651715a1501afd359ffbaff5f6c", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/11e70d3a9af6a651715a1501afd359ffbaff5f6c", "committedDate": "2020-06-16T11:48:31Z", "message": "Adding dcumentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25b602a276a6d40e8510aeab62e952b6a1c2b44e", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/25b602a276a6d40e8510aeab62e952b6a1c2b44e", "committedDate": "2020-06-16T11:49:22Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4719faca22d6ef010de48be3c8041598d669ebe6", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/4719faca22d6ef010de48be3c8041598d669ebe6", "committedDate": "2020-06-16T11:57:19Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e1ce111f342d466b19fa0e146ad89c56c92ecd9", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/1e1ce111f342d466b19fa0e146ad89c56c92ecd9", "committedDate": "2020-06-17T15:18:11Z", "message": "Commiting requested changes and documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb424fd817490cc389323adf5d721d39b0ad8533", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/eb424fd817490cc389323adf5d721d39b0ad8533", "committedDate": "2020-06-17T16:20:58Z", "message": "Fix for feature request #3313 in Aliasing Checker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3240948aa8891c016b04e627e15f0505cfaf18f", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/c3240948aa8891c016b04e627e15f0505cfaf18f", "committedDate": "2020-06-17T16:20:58Z", "message": "Revert \"Fix for feature request #3313 in Aliasing Checker\"\n\nThis reverts commit fd536c4de755dc1c53adbca9ad2b684e9b39a055."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "941cab0d71c66e682d99347b2604d104331d34b8", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/941cab0d71c66e682d99347b2604d104331d34b8", "committedDate": "2020-06-17T16:20:58Z", "message": "Fix for feature request #3313 in Aliasing Checker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d71f60820a8e44e21b9f1cc542cb798958006dc3", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/d71f60820a8e44e21b9f1cc542cb798958006dc3", "committedDate": "2020-06-17T16:20:58Z", "message": "Revert \"Fix for feature request #3313 in Aliasing Checker\"\n\nThis reverts commit fd536c4de755dc1c53adbca9ad2b684e9b39a055."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2237a0069aebeb1015ae46ccfc26b003b8d56f77", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/2237a0069aebeb1015ae46ccfc26b003b8d56f77", "committedDate": "2020-06-17T16:24:48Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53a6c12b02f9cbde8742bf4e1f69f2139eed1b94", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/53a6c12b02f9cbde8742bf4e1f69f2139eed1b94", "committedDate": "2020-06-19T16:01:19Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bfe4454601a203c236f0940f442830f26cf0977", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/4bfe4454601a203c236f0940f442830f26cf0977", "committedDate": "2020-06-26T12:35:52Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46aef3a476329d20626674e58edb9eb8819bfd39", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/46aef3a476329d20626674e58edb9eb8819bfd39", "committedDate": "2020-06-26T12:40:30Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5efd64b551726df922ff6ed2ef38a74ca6adbd6", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/e5efd64b551726df922ff6ed2ef38a74ca6adbd6", "committedDate": "2020-06-26T13:01:07Z", "message": "Adding requested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b431cb47345898536df0a580e60f8342b3f4bc4", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/7b431cb47345898536df0a580e60f8342b3f4bc4", "committedDate": "2020-06-26T15:01:27Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f4123acf1663534eabfd226cad16d9f5c71d2e7", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/8f4123acf1663534eabfd226cad16d9f5c71d2e7", "committedDate": "2020-06-27T06:16:52Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c16f886f1dbd3f020745f89d001817d0ccacb564", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/c16f886f1dbd3f020745f89d001817d0ccacb564", "committedDate": "2020-06-27T06:18:28Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "987c5604a43bf6f431c61318df693799ffabdcff", "author": {"user": {"login": "wmdietl", "name": "Werner Dietl"}}, "url": "https://github.com/typetools/checker-framework/commit/987c5604a43bf6f431c61318df693799ffabdcff", "committedDate": "2020-07-01T14:33:44Z", "message": "Tweaks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwOTI0NjI0", "url": "https://github.com/typetools/checker-framework/pull/3406#pullrequestreview-440924624", "createdAt": "2020-07-01T14:30:43Z", "commit": {"oid": "c16f886f1dbd3f020745f89d001817d0ccacb564"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDozMDo0NFrOGroclQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDozNjoyMlrOGrorxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQwNDYyOQ==", "bodyText": "The boolean shouldn't be required, see the other boolean flags above. Just passing -AdumOnErrors should be equal to -AdumOnErrors=true. The user could turn off the flag using -AdumOnErrors=false.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r448404629", "createdAt": "2020-07-01T14:30:44Z", "author": {"login": "wmdietl"}, "path": "docs/manual/creating-a-checker.tex", "diffHunk": "@@ -1783,6 +1783,10 @@\n already reported the bug, and you want to continue using the checker on a\n large codebase without being inundated in stack traces.\n \n+\\item \\code{-AdumpOnErrors}: Outputs the stack trace of the program when the\n+Checker Framework encounters an error or warning. The option also requires a\n+boolean parameter to enables its functionality (e.g. \\code{-AdumpOnErrors=true}).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c16f886f1dbd3f020745f89d001817d0ccacb564"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQwNzE5Mg==", "bodyText": "We don't want individual messages for each element. Build up one string, including line breaks, and issue one NOTE.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r448407192", "createdAt": "2020-07-01T14:34:29Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeChecker.java", "diffHunk": "@@ -584,6 +586,22 @@ private void printStoredMessages(CompilationUnitTree unit) {\n         if (messageStore != null) {\n             for (CheckerMessage msg : messageStore) {\n                 super.printOrStoreMessage(msg.kind, msg.message, msg.source, unit);\n+                printStackTrace(msg.trace);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Output the given stack trace if the \"dumpOnErrors\" option is enabled.\n+     *\n+     * @param trace stack trace when the checker encountered a warning/error\n+     */\n+    private void printStackTrace(StackTraceElement[] trace) {\n+        boolean dumpOnErrors = getBooleanOption(\"dumpOnErrors\", false);\n+        if (dumpOnErrors) {\n+            for (StackTraceElement elem : trace) {\n+                String msg = \"\\tat \" + elem;\n+                message(Diagnostic.Kind.NOTE, msg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "987c5604a43bf6f431c61318df693799ffabdcff"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQwODUxOQ==", "bodyText": "The printOrStoreMessage in this class should also handle this flag. So you might need to move the printStackTrace into this class and make it protected.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r448408519", "createdAt": "2020-07-01T14:36:22Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -313,6 +313,10 @@\n     // org.checkerframework.framework.util.typeinference.DefaultTypeArgumentInference\n     \"showInferenceSteps\",\n \n+    // Output stack trace when checker encounters errors\n+    // org.checkerframework.common.basetype.BaseTypeChecker.printStackTrace()\n+    \"dumpOnErrors\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "987c5604a43bf6f431c61318df693799ffabdcff"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7cb7634783820e7ecff5aa920828ff0169f94f0", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/f7cb7634783820e7ecff5aa920828ff0169f94f0", "committedDate": "2020-07-03T13:46:35Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8de96f814f3345441adce4db16187e649d0b2076", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/8de96f814f3345441adce4db16187e649d0b2076", "committedDate": "2020-07-03T13:48:19Z", "message": "Removing multiple note messages and boolean argument"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80ac56bee18649d77da31f9730f2f94a1f72fc49", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/80ac56bee18649d77da31f9730f2f94a1f72fc49", "committedDate": "2020-07-03T13:48:44Z", "message": "Merge branch '1395-dump-on-error-fix' of https://github.com/aditya3434/checker-framework into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d11fcf7912b488b03879dd3ee232dbe4b8548c7a", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/d11fcf7912b488b03879dd3ee232dbe4b8548c7a", "committedDate": "2020-07-04T06:29:33Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0d2ff5eccd6340dd48b39072c47f14cb492677a", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/c0d2ff5eccd6340dd48b39072c47f14cb492677a", "committedDate": "2020-07-04T08:50:40Z", "message": "Modifying documentation and requested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "340c22d393f98147a4f95cb533f799e16f1d84e3", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/340c22d393f98147a4f95cb533f799e16f1d84e3", "committedDate": "2020-07-10T10:16:15Z", "message": "Resolving merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c82f4b55a3fb795f6f4ad3e6cc3359567eea0391", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/c82f4b55a3fb795f6f4ad3e6cc3359567eea0391", "committedDate": "2020-07-10T10:18:26Z", "message": "Resolving merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42aeb4f3566249959ed2c7fecfe5d012c57616f5", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/42aeb4f3566249959ed2c7fecfe5d012c57616f5", "committedDate": "2020-07-10T11:05:06Z", "message": "Shifting printStackTrace method to SourceChecker.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1c8ac216f6bbc31c2a8ca1b4caf551053fe159d", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/e1c8ac216f6bbc31c2a8ca1b4caf551053fe159d", "committedDate": "2020-07-10T11:59:41Z", "message": "Annotating parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f712249ff1c3d4eed5d44fe4d8a30e887580e3b7", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/f712249ff1c3d4eed5d44fe4d8a30e887580e3b7", "committedDate": "2020-07-11T09:26:18Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/b61546280613118ff773da926b6f035a2cb6fd2d", "committedDate": "2020-07-17T06:02:04Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxOTE2ODI1", "url": "https://github.com/typetools/checker-framework/pull/3406#pullrequestreview-451916825", "createdAt": "2020-07-20T20:00:06Z", "commit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMDowMDowN1rOG0dOsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMDoxNDowNFrOG0dqCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1ODAzMg==", "bodyText": "I think you can remove the of the program and shorten to output a stack trace when reporting errors or warnings.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r457658032", "createdAt": "2020-07-20T20:00:07Z", "author": {"login": "wmdietl"}, "path": "docs/manual/creating-a-checker.tex", "diffHunk": "@@ -1783,6 +1783,9 @@\n already reported the bug, and you want to continue using the checker on a\n large codebase without being inundated in stack traces.\n \n+\\item \\code{-AdumpOnErrors}: Outputs the stack trace of the program when the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1OTMwMA==", "bodyText": "Use the short message I proposed for the manual.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r457659300", "createdAt": "2020-07-20T20:02:36Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -315,6 +316,10 @@\n     // org.checkerframework.framework.util.typeinference.DefaultTypeArgumentInference\n     \"showInferenceSteps\",\n \n+    // Output stack trace when checker encounters errors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MTAwNA==", "bodyText": "Don't say constructor message. The same Create a new CheckerMessage. as for the other constructor is fine.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r457661004", "createdAt": "2020-07-20T20:05:56Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeChecker.java", "diffHunk": "@@ -619,10 +622,29 @@ private CheckerMessage(\n                 String message,\n                 @FindDistinct Tree source,\n                 @FindDistinct BaseTypeChecker checker) {\n+            this(kind, message, source, checker, null);\n+        }\n+\n+        /**\n+         * Constructor method for checker message if stack trace needs to be stored.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MTcxNw==", "bodyText": "Actually, there are no calls of the constructor without a trace, so why have two constructors?", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r457661717", "createdAt": "2020-07-20T20:07:24Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeChecker.java", "diffHunk": "@@ -619,10 +622,29 @@ private CheckerMessage(\n                 String message,\n                 @FindDistinct Tree source,\n                 @FindDistinct BaseTypeChecker checker) {\n+            this(kind, message, source, checker, null);\n+        }\n+\n+        /**\n+         * Constructor method for checker message if stack trace needs to be stored.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MTAwNA=="}, "originalCommit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MjM3Ng==", "bodyText": "I don't see a call of this method in this class when the dumpOnErrors flag is provided.\nIs the flag handled for a SourceChecker?", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r457662376", "createdAt": "2020-07-20T20:08:47Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -1079,6 +1084,43 @@ protected void printOrStoreMessage(\n         Trees.instance(processingEnv).printMessage(kind, message, source, root);\n     }\n \n+    /**\n+     * printOrStoreMessage method with an added stack trace argument. The stack trace is printed\n+     * when the dumpOnErrors option is enabled.\n+     *\n+     * @param kind the kind of message to print\n+     * @param message the message text\n+     * @param source the souce code position of the diagnostic message\n+     * @param root the compilation unit\n+     * @param trace the stack trace where the checker encountered an error\n+     */\n+    protected void printOrStoreMessage(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MjYxMQ==", "bodyText": "Add an implementation comment why here you don't just call the other printOrStoreMessage overload.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r457662611", "createdAt": "2020-07-20T20:09:18Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -1079,6 +1084,43 @@ protected void printOrStoreMessage(\n         Trees.instance(processingEnv).printMessage(kind, message, source, root);\n     }\n \n+    /**\n+     * printOrStoreMessage method with an added stack trace argument. The stack trace is printed\n+     * when the dumpOnErrors option is enabled.\n+     *\n+     * @param kind the kind of message to print\n+     * @param message the message text\n+     * @param source the souce code position of the diagnostic message\n+     * @param root the compilation unit\n+     * @param trace the stack trace where the checker encountered an error\n+     */\n+    protected void printOrStoreMessage(\n+            javax.tools.Diagnostic.Kind kind,\n+            String message,\n+            Tree source,\n+            CompilationUnitTree root,\n+            StackTraceElement[] trace) {\n+        Trees.instance(processingEnv).printMessage(kind, message, source, root);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MzU5OA==", "bodyText": "Shouldn't this just be getBooleanOption(\"dumpOnErrors\")? That method already checks whether the option is given and false should be the default, shouldn't it?", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r457663598", "createdAt": "2020-07-20T20:11:17Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -1079,6 +1084,43 @@ protected void printOrStoreMessage(\n         Trees.instance(processingEnv).printMessage(kind, message, source, root);\n     }\n \n+    /**\n+     * printOrStoreMessage method with an added stack trace argument. The stack trace is printed\n+     * when the dumpOnErrors option is enabled.\n+     *\n+     * @param kind the kind of message to print\n+     * @param message the message text\n+     * @param source the souce code position of the diagnostic message\n+     * @param root the compilation unit\n+     * @param trace the stack trace where the checker encountered an error\n+     */\n+    protected void printOrStoreMessage(\n+            javax.tools.Diagnostic.Kind kind,\n+            String message,\n+            Tree source,\n+            CompilationUnitTree root,\n+            StackTraceElement[] trace) {\n+        Trees.instance(processingEnv).printMessage(kind, message, source, root);\n+        printStackTrace(trace);\n+    }\n+\n+    /**\n+     * Output the given stack trace if the \"dumpOnErrors\" option is enabled.\n+     *\n+     * @param trace stack trace when the checker encountered a warning/error\n+     */\n+    private void printStackTrace(StackTraceElement[] trace) {\n+        boolean dumpOnErrors =\n+                getOptions().containsKey(\"dumpOnErrors\") && getBooleanOption(\"dumpOnErrors\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2NTAzMg==", "bodyText": "Don't build up with just a String! In particular that initial new String() is very ugly.\nUse a StringBuilder or a StringJoiner.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r457665032", "createdAt": "2020-07-20T20:14:04Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -1079,6 +1084,43 @@ protected void printOrStoreMessage(\n         Trees.instance(processingEnv).printMessage(kind, message, source, root);\n     }\n \n+    /**\n+     * printOrStoreMessage method with an added stack trace argument. The stack trace is printed\n+     * when the dumpOnErrors option is enabled.\n+     *\n+     * @param kind the kind of message to print\n+     * @param message the message text\n+     * @param source the souce code position of the diagnostic message\n+     * @param root the compilation unit\n+     * @param trace the stack trace where the checker encountered an error\n+     */\n+    protected void printOrStoreMessage(\n+            javax.tools.Diagnostic.Kind kind,\n+            String message,\n+            Tree source,\n+            CompilationUnitTree root,\n+            StackTraceElement[] trace) {\n+        Trees.instance(processingEnv).printMessage(kind, message, source, root);\n+        printStackTrace(trace);\n+    }\n+\n+    /**\n+     * Output the given stack trace if the \"dumpOnErrors\" option is enabled.\n+     *\n+     * @param trace stack trace when the checker encountered a warning/error\n+     */\n+    private void printStackTrace(StackTraceElement[] trace) {\n+        boolean dumpOnErrors =\n+                getOptions().containsKey(\"dumpOnErrors\") && getBooleanOption(\"dumpOnErrors\", true);\n+        if (dumpOnErrors) {\n+            String msg = new String();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d44943db5763aff7018411f94e8ca95934998f3", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/7d44943db5763aff7018411f94e8ca95934998f3", "committedDate": "2020-07-21T09:57:52Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f99303d4b4d957ab2b63f97c24f4dd805167e9d", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/3f99303d4b4d957ab2b63f97c24f4dd805167e9d", "committedDate": "2020-07-21T09:58:39Z", "message": "Requested changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODc4Mzc2", "url": "https://github.com/typetools/checker-framework/pull/3406#pullrequestreview-452878376", "createdAt": "2020-07-21T22:38:57Z", "commit": {"oid": "3f99303d4b4d957ab2b63f97c24f4dd805167e9d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjozODo1N1rOG1MUbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjo0OToxMlrOG1Mjpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQyOTU0OA==", "bodyText": "Why is the field @Nullable? Same for the trace parameter that sets the field.\nThread.currentThread().getStackTrace() returns something non-null.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r458429548", "createdAt": "2020-07-21T22:38:57Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeChecker.java", "diffHunk": "@@ -599,6 +600,8 @@ private void printStoredMessages(CompilationUnitTree unit) {\n         final String message;\n         /** The source code that the message is about. */\n         final @InternedDistinct Tree source;\n+        /** Stores the stack trace till the point the checker encounters an error. */\n+        final StackTraceElement @Nullable [] trace;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f99303d4b4d957ab2b63f97c24f4dd805167e9d"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMDcwNA==", "bodyText": "This is a new message in SourceChecker, but I don't see a call to it in SourceChecker.\nThere should be a call in SourceChecker as well, in case somebody directly uses/extends it.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r458430704", "createdAt": "2020-07-21T22:41:49Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -1079,6 +1084,43 @@ protected void printOrStoreMessage(\n         Trees.instance(processingEnv).printMessage(kind, message, source, root);\n     }\n \n+    /**\n+     * printOrStoreMessage method with an added stack trace argument. The stack trace is printed\n+     * when the dumpOnErrors option is enabled.\n+     *\n+     * @param kind the kind of message to print\n+     * @param message the message text\n+     * @param source the souce code position of the diagnostic message\n+     * @param root the compilation unit\n+     * @param trace the stack trace where the checker encountered an error\n+     */\n+    protected void printOrStoreMessage(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MjM3Ng=="}, "originalCommit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMDkzNQ==", "bodyText": "I don't think that would give the same behavior, because BaseTypeChecker overrides that method and you would get two stack traces, wouldn't you?", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r458430935", "createdAt": "2020-07-21T22:42:28Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -1079,6 +1084,43 @@ protected void printOrStoreMessage(\n         Trees.instance(processingEnv).printMessage(kind, message, source, root);\n     }\n \n+    /**\n+     * printOrStoreMessage method with an added stack trace argument. The stack trace is printed\n+     * when the dumpOnErrors option is enabled.\n+     *\n+     * @param kind the kind of message to print\n+     * @param message the message text\n+     * @param source the souce code position of the diagnostic message\n+     * @param root the compilation unit\n+     * @param trace the stack trace where the checker encountered an error\n+     */\n+    protected void printOrStoreMessage(\n+            javax.tools.Diagnostic.Kind kind,\n+            String message,\n+            Tree source,\n+            CompilationUnitTree root,\n+            StackTraceElement[] trace) {\n+        Trees.instance(processingEnv).printMessage(kind, message, source, root);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MjYxMQ=="}, "originalCommit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQzMzQ0Nw==", "bodyText": "That's a bit odd, looking at \n  \n    \n      checker-framework/framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java\n    \n    \n         Line 1589\n      in\n      3498970\n    \n    \n    \n    \n\n        \n          \n           if (value == null) { \n        \n    \n  \n\n I wouldn't expect that behavior.\nCan you investigate why this doesn't work as specified?", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r458433447", "createdAt": "2020-07-21T22:49:12Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -1079,6 +1084,43 @@ protected void printOrStoreMessage(\n         Trees.instance(processingEnv).printMessage(kind, message, source, root);\n     }\n \n+    /**\n+     * printOrStoreMessage method with an added stack trace argument. The stack trace is printed\n+     * when the dumpOnErrors option is enabled.\n+     *\n+     * @param kind the kind of message to print\n+     * @param message the message text\n+     * @param source the souce code position of the diagnostic message\n+     * @param root the compilation unit\n+     * @param trace the stack trace where the checker encountered an error\n+     */\n+    protected void printOrStoreMessage(\n+            javax.tools.Diagnostic.Kind kind,\n+            String message,\n+            Tree source,\n+            CompilationUnitTree root,\n+            StackTraceElement[] trace) {\n+        Trees.instance(processingEnv).printMessage(kind, message, source, root);\n+        printStackTrace(trace);\n+    }\n+\n+    /**\n+     * Output the given stack trace if the \"dumpOnErrors\" option is enabled.\n+     *\n+     * @param trace stack trace when the checker encountered a warning/error\n+     */\n+    private void printStackTrace(StackTraceElement[] trace) {\n+        boolean dumpOnErrors =\n+                getOptions().containsKey(\"dumpOnErrors\") && getBooleanOption(\"dumpOnErrors\", true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MzU5OA=="}, "originalCommit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "062a2841836b68f1424540fb996a76b65fc2b321", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/062a2841836b68f1424540fb996a76b65fc2b321", "committedDate": "2020-07-22T08:53:28Z", "message": "Removing @Nullable and adding implementation comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ccbadb0775a5d2decbc00aa13266b97cae6125e", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/4ccbadb0775a5d2decbc00aa13266b97cae6125e", "committedDate": "2020-07-22T08:55:44Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4460e8c55c6752114233accb3e0404fc35ac70b1", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/4460e8c55c6752114233accb3e0404fc35ac70b1", "committedDate": "2020-07-24T07:54:04Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f7ce236a5b83c459d28039c1437aa25195566eb", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/7f7ce236a5b83c459d28039c1437aa25195566eb", "committedDate": "2020-07-24T07:56:24Z", "message": "Calling method in Source Checker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b434c02838752959e35ba92d2690452acae617a0", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/b434c02838752959e35ba92d2690452acae617a0", "committedDate": "2020-07-27T07:58:11Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NTQwMDkz", "url": "https://github.com/typetools/checker-framework/pull/3406#pullrequestreview-457540093", "createdAt": "2020-07-29T13:49:19Z", "commit": {"oid": "b434c02838752959e35ba92d2690452acae617a0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzo0OToyMFrOG45Vmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzo1ODo1NlrOG45x5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMxMjg1OA==", "bodyText": "This is the stack trace when it encountered an error, so this should be something like The stack trace when the message is created.\nAlso change the parameter documentation to the same.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r462312858", "createdAt": "2020-07-29T13:49:20Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeChecker.java", "diffHunk": "@@ -599,6 +600,8 @@ private void printStoredMessages(CompilationUnitTree unit) {\n         final String message;\n         /** The source code that the message is about. */\n         final @InternedDistinct Tree source;\n+        /** Stores the stack trace till the point the checker encounters an error. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b434c02838752959e35ba92d2690452acae617a0"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMxNzA5Mg==", "bodyText": "Like for other overloaded methods, start out with the normal description of what the method is for and then describe the differences.\nAlso, @see cross-references can be useful.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r462317092", "createdAt": "2020-07-29T13:54:58Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -1081,7 +1086,47 @@ protected void printOrStoreMessage(\n             String message,\n             Tree source,\n             CompilationUnitTree root) {\n+        StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n+        printOrStoreMessage(kind, message, source, root, trace);\n+    }\n+\n+    /**\n+     * printOrStoreMessage method with an added stack trace argument. The stack trace is printed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b434c02838752959e35ba92d2690452acae617a0"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMxNzkwOA==", "bodyText": "That comment is out-of-date - you would now create an infinite loop, so this question no longer arises.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r462317908", "createdAt": "2020-07-29T13:56:05Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -1081,7 +1086,47 @@ protected void printOrStoreMessage(\n             String message,\n             Tree source,\n             CompilationUnitTree root) {\n+        StackTraceElement[] trace = Thread.currentThread().getStackTrace();\n+        printOrStoreMessage(kind, message, source, root, trace);\n+    }\n+\n+    /**\n+     * printOrStoreMessage method with an added stack trace argument. The stack trace is printed\n+     * when the dumpOnErrors option is enabled.\n+     *\n+     * @param kind the kind of message to print\n+     * @param message the message text\n+     * @param source the souce code position of the diagnostic message\n+     * @param root the compilation unit\n+     * @param trace the stack trace where the checker encountered an error\n+     */\n+    protected void printOrStoreMessage(\n+            javax.tools.Diagnostic.Kind kind,\n+            String message,\n+            Tree source,\n+            CompilationUnitTree root,\n+            StackTraceElement[] trace) {\n+        // Not calling printOrStoreMessage(kind, message, source, root) since the error message", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b434c02838752959e35ba92d2690452acae617a0"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMyMDEwMQ==", "bodyText": "Is simply hasOption(\"dumpOnErrors\") enough? Then you don't need to introduce a local variable for this.\nIn a separate PR, can you look into what getBooleanOption is doing wrong? It is hardly used, so we should discuss what the correct behavior is.", "url": "https://github.com/typetools/checker-framework/pull/3406#discussion_r462320101", "createdAt": "2020-07-29T13:58:56Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/source/SourceChecker.java", "diffHunk": "@@ -1079,6 +1084,43 @@ protected void printOrStoreMessage(\n         Trees.instance(processingEnv).printMessage(kind, message, source, root);\n     }\n \n+    /**\n+     * printOrStoreMessage method with an added stack trace argument. The stack trace is printed\n+     * when the dumpOnErrors option is enabled.\n+     *\n+     * @param kind the kind of message to print\n+     * @param message the message text\n+     * @param source the souce code position of the diagnostic message\n+     * @param root the compilation unit\n+     * @param trace the stack trace where the checker encountered an error\n+     */\n+    protected void printOrStoreMessage(\n+            javax.tools.Diagnostic.Kind kind,\n+            String message,\n+            Tree source,\n+            CompilationUnitTree root,\n+            StackTraceElement[] trace) {\n+        Trees.instance(processingEnv).printMessage(kind, message, source, root);\n+        printStackTrace(trace);\n+    }\n+\n+    /**\n+     * Output the given stack trace if the \"dumpOnErrors\" option is enabled.\n+     *\n+     * @param trace stack trace when the checker encountered a warning/error\n+     */\n+    private void printStackTrace(StackTraceElement[] trace) {\n+        boolean dumpOnErrors =\n+                getOptions().containsKey(\"dumpOnErrors\") && getBooleanOption(\"dumpOnErrors\", true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY2MzU5OA=="}, "originalCommit": {"oid": "b61546280613118ff773da926b6f035a2cb6fd2d"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fafccd1537d4b3f821bdd8e884d01dc47eb752c", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/8fafccd1537d4b3f821bdd8e884d01dc47eb752c", "committedDate": "2020-07-29T18:16:37Z", "message": "Making requested changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "004d5e8cf7bc66825082c39e3cd679e94d680ac5", "author": {"user": {"login": "aditya3434", "name": null}}, "url": "https://github.com/typetools/checker-framework/commit/004d5e8cf7bc66825082c39e3cd679e94d680ac5", "committedDate": "2020-07-29T18:18:24Z", "message": "Merge branch 'master' into 1395-dump-on-error-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae972ffeec3907d2615ece7d38269a6731d74fb1", "author": {"user": {"login": "wmdietl", "name": "Werner Dietl"}}, "url": "https://github.com/typetools/checker-framework/commit/ae972ffeec3907d2615ece7d38269a6731d74fb1", "committedDate": "2020-07-30T22:50:26Z", "message": "Simplify code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4ODQ3MjE5", "url": "https://github.com/typetools/checker-framework/pull/3406#pullrequestreview-458847219", "createdAt": "2020-07-31T00:27:13Z", "commit": {"oid": "ae972ffeec3907d2615ece7d38269a6731d74fb1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2873, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}