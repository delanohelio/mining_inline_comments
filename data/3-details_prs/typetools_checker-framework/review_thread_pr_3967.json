{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMTc1NTYz", "number": 3967, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoyOTozMVrOFA5sZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzozMzozOFrOFA5zoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDg5NTc0OnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/common/wholeprograminference/WholeProgramInference.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoyOTozMVrOH_asLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoyOTozMVrOH_asLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1OTYyOQ==", "bodyText": "Should the AnnotatedTypeFactory parameter be removed?", "url": "https://github.com/typetools/checker-framework/pull/3967#discussion_r536259629", "createdAt": "2020-12-04T17:29:31Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/common/wholeprograminference/WholeProgramInference.java", "diffHunk": "@@ -151,6 +135,18 @@ void updateFromLocalAssignment(\n     void updateFromFieldAssignment(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da5f248b16d079bd0c1d768207ea3e8420283df6"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDkwMDUxOnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/common/wholeprograminference/WholeProgramInferenceScenes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzozMDozNlrOH_avFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzozMDozNlrOH_avFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI2MDM3Mg==", "bodyText": "I don't think you need to pass the type factory anymore.", "url": "https://github.com/typetools/checker-framework/pull/3967#discussion_r536260372", "createdAt": "2020-12-04T17:30:36Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/common/wholeprograminference/WholeProgramInferenceScenes.java", "diffHunk": "@@ -256,22 +281,27 @@ public void updateFromLocalAssignment(\n                     // https://github.com/typetools/checker-framework/issues/682\n                     continue;\n                 }\n-                AnnotatedTypeMirror paramATM = atf.getAnnotatedType(vt);\n-                AnnotatedTypeMirror argATM = atf.getAnnotatedType(rhsTree);\n+                AnnotatedTypeMirror paramATM = atypeFactory.getAnnotatedType(vt);\n+                AnnotatedTypeMirror argATM = atypeFactory.getAnnotatedType(rhsTree);\n                 VariableElement ve = TreeUtils.elementFromDeclaration(vt);\n                 AField param =\n                         method.vivifyAndAddTypeMirrorToParameter(\n                                 i, argATM.getUnderlyingType(), ve.getSimpleName());\n                 updateAnnotationSetInScene(\n-                        param.type, TypeUseLocation.PARAMETER, argATM, paramATM, atf, jaifPath);\n+                        param.type,\n+                        TypeUseLocation.PARAMETER,\n+                        argATM,\n+                        paramATM,\n+                        atypeFactory,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da5f248b16d079bd0c1d768207ea3e8420283df6"}, "originalPosition": 193}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDkwMzQ4OnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/common/wholeprograminference/WholeProgramInferenceScenes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzozMToxM1rOH_awsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzozMToxM1rOH_awsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI2MDc4NA==", "bodyText": "Should this type factory be removed?", "url": "https://github.com/typetools/checker-framework/pull/3967#discussion_r536260784", "createdAt": "2020-12-04T17:31:13Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/common/wholeprograminference/WholeProgramInferenceScenes.java", "diffHunk": "@@ -256,22 +281,27 @@ public void updateFromLocalAssignment(\n                     // https://github.com/typetools/checker-framework/issues/682\n                     continue;\n                 }\n-                AnnotatedTypeMirror paramATM = atf.getAnnotatedType(vt);\n-                AnnotatedTypeMirror argATM = atf.getAnnotatedType(rhsTree);\n+                AnnotatedTypeMirror paramATM = atypeFactory.getAnnotatedType(vt);\n+                AnnotatedTypeMirror argATM = atypeFactory.getAnnotatedType(rhsTree);\n                 VariableElement ve = TreeUtils.elementFromDeclaration(vt);\n                 AField param =\n                         method.vivifyAndAddTypeMirrorToParameter(\n                                 i, argATM.getUnderlyingType(), ve.getSimpleName());\n                 updateAnnotationSetInScene(\n-                        param.type, TypeUseLocation.PARAMETER, argATM, paramATM, atf, jaifPath);\n+                        param.type,\n+                        TypeUseLocation.PARAMETER,\n+                        argATM,\n+                        paramATM,\n+                        atypeFactory,\n+                        jaifPath);\n                 break;\n             }\n         }\n     }\n \n     @Override\n     public void updateFromFieldAssignment(\n-            Node lhs, Node rhs, ClassTree classTree, AnnotatedTypeFactory atf) {\n+            Node lhs, Node rhs, ClassTree classTree, AnnotatedTypeFactory atypeFactory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da5f248b16d079bd0c1d768207ea3e8420283df6"}, "originalPosition": 203}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDkxNDI1OnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/framework/type/AnnotatedTypeFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzozMzozOFrOH_a21w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzozMzozOFrOH_a21w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI2MjM1OQ==", "bodyText": "This method creates the WholeProgramInference. getWholeProgramInference returns it.  Also, I think this method should be protected.", "url": "https://github.com/typetools/checker-framework/pull/3967#discussion_r536262359", "createdAt": "2020-12-04T17:33:38Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/framework/type/AnnotatedTypeFactory.java", "diffHunk": "@@ -4520,4 +4518,13 @@ public boolean containsSameByClass(\n         }\n         return null;\n     }\n+\n+    /**\n+     * Returns a WholeProgramInference for use by this type factory.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da5f248b16d079bd0c1d768207ea3e8420283df6"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 838, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}