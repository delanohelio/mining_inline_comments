{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxNjA3NDk0", "number": 3409, "title": "Add `isPolymorphicQualifier` method to QualifierHierarchy class.", "bodyText": "Add isPolymorphicQualifier method to QualifierHierarchy class.\nUse java.lang.annotation.Annotation.class as the default value for the meta-annotation PolymorphicQualifier.  This makes the code less confusing.\nMove static package private methods closer to uses.", "createdAt": "2020-06-29T19:32:49Z", "url": "https://github.com/typetools/checker-framework/pull/3409", "merged": true, "mergeCommit": {"oid": "8f1dfe6601f1690c3b8f92b434928b15f7be4484"}, "closed": true, "closedAt": "2020-07-07T16:09:37Z", "author": {"login": "smillst"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwGNJLAH2gAyNDQxNjA3NDk0OjJkNmRiMDhmM2M1OTljYzlkNzU1NDE4NTFhY2E5MTZlNzlmNWJjOTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyW6U_gH2gAyNDQxNjA3NDk0OmMzNTNiNGI1ODcxY2I4OGRlZmE3ZmM2ZTRkNGMzMjQ5MjlmYmE5YzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2d6db08f3c599cc9d75541851aca916e79f5bc95", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/2d6db08f3c599cc9d75541851aca916e79f5bc95", "committedDate": "2020-06-29T19:28:14Z", "message": "Use Annotation.class as default value for PolymorphicQualifier."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9736be0d9226e26811976d5ed88602b5e623e88d", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/9736be0d9226e26811976d5ed88602b5e623e88d", "committedDate": "2020-06-29T19:35:02Z", "message": "Fix Javadoc."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69c2e8d0158e7a8e77fcb78c3440bb4344ac3f0e", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/69c2e8d0158e7a8e77fcb78c3440bb4344ac3f0e", "committedDate": "2020-06-30T16:35:08Z", "message": "Fix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef85e01a77f8bf297bf07ac6b31858fbc7229859", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/ef85e01a77f8bf297bf07ac6b31858fbc7229859", "committedDate": "2020-06-30T16:35:14Z", "message": "Merge remote-tracking branch 'origin/master' into polyQual"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4057c0e995a13d2facf19df465a8c17ae4fa6d26", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/4057c0e995a13d2facf19df465a8c17ae4fa6d26", "committedDate": "2020-06-30T16:38:20Z", "message": "Fix reformat."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ccdb4e15e924e305df3e10a0a5d43c880bc853f", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/0ccdb4e15e924e305df3e10a0a5d43c880bc853f", "committedDate": "2020-06-30T17:31:14Z", "message": "Merge remote-tracking branch 'origin/master' into polyQual"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a553fdde5297d1482025ba759e15f55c7aba54f", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/9a553fdde5297d1482025ba759e15f55c7aba54f", "committedDate": "2020-06-30T17:33:16Z", "message": "Fix Javadoc."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwOTMzMjY0", "url": "https://github.com/typetools/checker-framework/pull/3409#pullrequestreview-440933264", "createdAt": "2020-07-01T14:39:49Z", "commit": {"oid": "9a553fdde5297d1482025ba759e15f55c7aba54f"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDozOTo1MFrOGro1Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDo1MDo1M1rOGrpTyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxMDk1OA==", "bodyText": "First is should be if.", "url": "https://github.com/typetools/checker-framework/pull/3409#discussion_r448410958", "createdAt": "2020-07-01T14:39:50Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/QualifierHierarchy.java", "diffHunk": "@@ -73,6 +73,16 @@ public int getWidth() {\n      */\n     public abstract AnnotationMirror getPolymorphicAnnotation(AnnotationMirror start);\n \n+    /**\n+     * Returns {@code true} is the qualifier is a polymorphic qualifier; otherwise, returns {@code\n+     * false}.\n+     *\n+     * @param qualifier qualifier\n+     * @return {@code true} is the qualifier is a polymorphic qualifier; otherwise, returns {@code", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a553fdde5297d1482025ba759e15f55c7aba54f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxMzU0Nw==", "bodyText": "The This changed isn't clear. Maybe It will be changed to...? Or something else?", "url": "https://github.com/typetools/checker-framework/pull/3409#discussion_r448413547", "createdAt": "2020-07-01T14:43:34Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/util/MultiGraphQualifierHierarchy.java", "diffHunk": "@@ -91,16 +92,71 @@ public void addQualifier(AnnotationMirror qual) {\n                 return;\n             }\n \n-            Name pqtopclass = QualifierPolymorphism.getPolymorphicQualifierElement(qual);\n+            Name pqtopclass = getPolymorphicQualifierElement(qual);\n             if (pqtopclass != null) {\n-                AnnotationMirror pqtop =\n-                        AnnotationBuilder.fromName(atypeFactory.getElementUtils(), pqtopclass);\n-                // use given top (which might be PolymorphicQualifier) as key\n+                AnnotationMirror pqtop;\n+                if (pqtopclass.contentEquals(Annotation.class.getName())) {\n+                    // @PolymorphicQualifier with no value defaults to Annotation.class.\n+                    // That means there is only one top in the hierarchy. The top qualifier\n+                    // may not be known at this point, so use the qualifier itself.\n+                    // This changed to top in MultiGraphQualifierHierarchy.addPolyRelations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a553fdde5297d1482025ba759e15f55c7aba54f"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxMzgxNA==", "bodyText": "Spacing.", "url": "https://github.com/typetools/checker-framework/pull/3409#discussion_r448413814", "createdAt": "2020-07-01T14:43:57Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/util/MultiGraphQualifierHierarchy.java", "diffHunk": "@@ -91,16 +92,71 @@ public void addQualifier(AnnotationMirror qual) {\n                 return;\n             }\n \n-            Name pqtopclass = QualifierPolymorphism.getPolymorphicQualifierElement(qual);\n+            Name pqtopclass = getPolymorphicQualifierElement(qual);\n             if (pqtopclass != null) {\n-                AnnotationMirror pqtop =\n-                        AnnotationBuilder.fromName(atypeFactory.getElementUtils(), pqtopclass);\n-                // use given top (which might be PolymorphicQualifier) as key\n+                AnnotationMirror pqtop;\n+                if (pqtopclass.contentEquals(Annotation.class.getName())) {\n+                    // @PolymorphicQualifier with no value defaults to Annotation.class.\n+                    // That means there is only one top in the hierarchy. The top qualifier\n+                    // may not be known at this point, so use the qualifier itself.\n+                    // This changed to top in MultiGraphQualifierHierarchy.addPolyRelations\n+                    pqtop = qual;\n+                } else {\n+                    pqtop = AnnotationBuilder.fromName(atypeFactory.getElementUtils(), pqtopclass);\n+                }\n+                // use given top (which might be Annotation) as key\n                 this.polyQualifiers.put(pqtop, qual);\n             } else {\n                 supertypesDirect.put(qual, AnnotationUtils.createAnnotationSet());\n             }\n         }\n+        /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a553fdde5297d1482025ba759e15f55c7aba54f"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxNTYxMw==", "bodyText": "I would probably use entrySet and then use the key for poly and the value for maybeTop.", "url": "https://github.com/typetools/checker-framework/pull/3409#discussion_r448415613", "createdAt": "2020-07-01T14:46:25Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/util/MultiGraphQualifierHierarchy.java", "diffHunk": "@@ -564,77 +608,78 @@ protected void addPolyRelations(\n             return;\n         }\n \n+        // Handle the case where @PolymorphicQualifier uses the default value Annotation.class.\n+        if (polyQualifiers.size() == 1 && tops.size() == 1) {\n+            AnnotationMirror poly = polyQualifiers.keySet().iterator().next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a553fdde5297d1482025ba759e15f55c7aba54f"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQxODc2Mg==", "bodyText": "Can you explain why using Annotation.class makes this clearer? Using PolymorphicQualifier.class makes it a bit clearer to me that this is about polymorphism... using just Annotation.class doesn't give any hint. Checking for either one shouldn't make a difference, does it? If it does, can you improve the comment?", "url": "https://github.com/typetools/checker-framework/pull/3409#discussion_r448418762", "createdAt": "2020-07-01T14:50:53Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/qual/PolymorphicQualifier.java", "diffHunk": "@@ -25,8 +25,10 @@\n      * When multiple type hierarchies are supported by a single type system, then each polymorphic\n      * qualifier needs to indicate which sub-hierarchy it belongs to. Do so by passing a qualifier\n      * from the given hierarchy, by convention the top qualifier.\n+     *\n+     * @return the top qualifier in the hierarchy of this qualifier\n      */\n-    // We use the meaningless PolymorphicQualifier.class as default value and\n+    // We use the meaningless Annotation.class as default value and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a553fdde5297d1482025ba759e15f55c7aba54f"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9033699718c59386350a09aa95c7bb0506ab2b13", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/9033699718c59386350a09aa95c7bb0506ab2b13", "committedDate": "2020-07-02T20:09:04Z", "message": "Merge branch 'master' into polyQual"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c796222efaee9827c1e9b44b87d2fd0f0ccb7fbb", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/c796222efaee9827c1e9b44b87d2fd0f0ccb7fbb", "committedDate": "2020-07-02T20:13:54Z", "message": "Address code review."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "500c23131467a56abe1712a84743b627e7a07b2c", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/500c23131467a56abe1712a84743b627e7a07b2c", "committedDate": "2020-07-06T20:03:34Z", "message": "Clarify contract."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c353b4b5871cb88defa7fc6e4d4c324929fba9c1", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/c353b4b5871cb88defa7fc6e4d4c324929fba9c1", "committedDate": "2020-07-06T20:03:55Z", "message": "Merge remote-tracking branch 'origin/master' into polyQual"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2875, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}