{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MzA5NTM5", "number": 3346, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDowNzowOVrOEB5ymw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxODo0ODoyMlrOEDQY1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDMwODc1OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/Analysis.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDowNzowOVrOGeCJ6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDowNzowOVrOGeCJ6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0NTc2OA==", "bodyText": "the transfer result to use maybe? The type is confusing, b/c we use the value from that transfer result.", "url": "https://github.com/typetools/checker-framework/pull/3346#discussion_r434145768", "createdAt": "2020-06-02T20:07:09Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/Analysis.java", "diffHunk": "@@ -400,13 +400,17 @@ protected void propagateStoresTo(\n     /**\n      * Updates the value of node {@code node} to the value of the {@code transferResult}. Returns\n      * true if the node's value changed, or a store was updated.\n+     *\n+     * @param node a node\n+     * @param transferResult the result type of a transfer function", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72009238b350c077de29fc826bd032c90ae5575"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDMxMDc5OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/Analysis.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDowNzo1MlrOGeCLQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDowNzo1MlrOGeCLQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0NjExMw==", "bodyText": "Similarly, the type here doesn't seem necessary.", "url": "https://github.com/typetools/checker-framework/pull/3346#discussion_r434146113", "createdAt": "2020-06-02T20:07:52Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/Analysis.java", "diffHunk": "@@ -416,8 +420,12 @@ protected boolean updateNodeValues(Node node, TransferResult<A, S> transferResul\n \n     /**\n      * Call the transfer function for node {@code node}, and set that node as current node first.\n+     *\n+     * @param node a node\n+     * @param store the input type of a transfer function", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72009238b350c077de29fc826bd032c90ae5575"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDMxNDM2OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/Analysis.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDowOTowMVrOGeCNbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDowOTowMVrOGeCNbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0NjY2OQ==", "bodyText": "the {@code b} part is unnecessary, here and below.", "url": "https://github.com/typetools/checker-framework/pull/3346#discussion_r434146669", "createdAt": "2020-06-02T20:09:01Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/Analysis.java", "diffHunk": "@@ -678,16 +686,20 @@ public String toString() {\n     /**\n      * Read the {@link TransferInput} for a particular basic block (or {@code null} if none exists\n      * yet).\n+     *\n+     * @param b a block {@code b}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72009238b350c077de29fc826bd032c90ae5575"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDMyNjMzOnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/Analysis.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDoxMjoyM1rOGeCUoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDoxMjoyM1rOGeCUoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE0ODUxMg==", "bodyText": "Links to the types are unnecessary in the description - javadoc already links the types in the signature.", "url": "https://github.com/typetools/checker-framework/pull/3346#discussion_r434148512", "createdAt": "2020-06-02T20:12:23Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/Analysis.java", "diffHunk": "@@ -743,24 +756,33 @@ public boolean isRunning() {\n         return nodeValues.get(n);\n     }\n \n-    /** Return all current node values. */\n-    public IdentityHashMap<Node, A> getNodeValues() {\n+    /**\n+     * Return all current node values.\n+     *\n+     * @return {@link #nodeValues}\n+     */\n+    public IdentityHashMap<Node, V> getNodeValues() {\n         return nodeValues;\n     }\n \n-    /** Set all current node values to the given map. */\n-    /*package-private*/ void setNodeValues(IdentityHashMap<Node, A> in) {\n+    /**\n+     * Set all current node values to the given map.\n+     *\n+     * @param in the current node values\n+     */\n+    /*package-private*/ void setNodeValues(IdentityHashMap<Node, V> in) {\n         assert !isRunning;\n         nodeValues.clear();\n         nodeValues.putAll(in);\n     }\n \n     /**\n+     * @param t a {@link Tree} t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72009238b350c077de29fc826bd032c90ae5575"}, "originalPosition": 225}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDMzODM5OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/AnalysisResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDoxNjozMVrOGeCcmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDoxNjozMVrOGeCcmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1MDU1Mg==", "bodyText": "ConditionalTransferResult below uses\n * @param <S> the {@link Store} used to keep track of intermediate results\nMaybe also make all these descriptions consistent?\nIn this particular case, the two descriptions aren't symmetric, which makes them a bit ugly.", "url": "https://github.com/typetools/checker-framework/pull/3346#discussion_r434150552", "createdAt": "2020-06-02T20:16:31Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/AnalysisResult.java", "diffHunk": "@@ -21,12 +21,13 @@\n  * providing the abstract values given a node or a tree. Note that it does not keep track of custom\n  * results computed by some analysis.\n  *\n- * @param <A> type of the abstract value that is tracked\n+ * @param <V> type of the abstract value that is tracked\n+ * @param <S> the store type used in the analysis", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72009238b350c077de29fc826bd032c90ae5575"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzA2NTkzOnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/TransferResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzowMzoxMVrOGf_jog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzowMzoxMVrOGf_jog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwMDM1NA==", "bodyText": "There already is some javadoc above. Can you merge the two?", "url": "https://github.com/typetools/checker-framework/pull/3346#discussion_r436200354", "createdAt": "2020-06-05T23:03:11Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/TransferResult.java", "diffHunk": "@@ -37,8 +38,18 @@\n      *     produced\n      * @param exceptionalStores the stores to use if the basic block throws an exception\n      */\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdacf167f8df758513366afb4c2694504baafa4b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODQ5NDQ3OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/ConditionalTransferResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxODo0NDoyMVrOGgLLKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxODo0NDoyMVrOGgLLKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM5MDY5OA==", "bodyText": "Should the linked constructor be consistent with the @see constructor below? At the moment this links to itself, which doesn't make much sense.\nThe implementation actually calls a constructor without a map...\nShould it be documented that false is used for the boolean?\nSame comment for the constructor below this one.", "url": "https://github.com/typetools/checker-framework/pull/3346#discussion_r436390698", "createdAt": "2020-06-07T18:44:21Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/ConditionalTransferResult.java", "diffHunk": "@@ -32,31 +33,42 @@\n      *\n      * <p><em>Aliasing</em>: {@code thenStore} and {@code elseStore} are not allowed to be used\n      * anywhere outside of this class (including use through aliases). Complete control over the\n-     * objects is transfered to this class.\n+     * objects is transferred to this class.\n      *\n+     * @param value the abstract value produced by the transfer function\n+     * @param thenStore {@link #thenStore}\n+     * @param elseStore {@link #elseStore}\n+     * @param storeChanged {@link #storeChanged}\n      * @see #ConditionalTransferResult(AbstractValue, Store, Store, Map, boolean)\n      */\n     public ConditionalTransferResult(\n-            @Nullable A value, S thenStore, S elseStore, boolean storeChanged) {\n+            @Nullable V value, S thenStore, S elseStore, boolean storeChanged) {\n         this(value, thenStore, elseStore, null, storeChanged);\n     }\n \n     /**\n-     * See {@link #ConditionalTransferResult(AbstractValue, Store, Store, Map, boolean)}.\n+     * Create a new {@link #ConditionalTransferResult(AbstractValue, Store, Store)}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda4d59e0d5fa978583374ad549d1c097fcfe3db"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODQ5NTUwOnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/RegularTransferResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxODo0NTo1NVrOGgLLtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxODo0NTo1NVrOGgLLtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM5MDgzOA==", "bodyText": "Same comment about self-referential constructor docs in this class.", "url": "https://github.com/typetools/checker-framework/pull/3346#discussion_r436390838", "createdAt": "2020-06-07T18:45:55Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/RegularTransferResult.java", "diffHunk": "@@ -32,28 +33,36 @@\n      * class (including use through aliases). Complete control over the object is transfered to this\n      * class.\n      *\n+     * @param value the abstract value produced by the transfer function\n+     * @param resultStore {@link #store}\n+     * @param storeChanged {@link #storeChanged}\n      * @see #RegularTransferResult(AbstractValue, Store, Map, boolean)\n      */\n-    public RegularTransferResult(@Nullable A value, S resultStore, boolean storeChanged) {\n+    public RegularTransferResult(@Nullable V value, S resultStore, boolean storeChanged) {\n         this(value, resultStore, null, storeChanged);\n     }\n \n     /**\n-     * See {@link #RegularTransferResult(AbstractValue, Store, Map, boolean)}.\n+     * Create a new {@link #RegularTransferResult(AbstractValue, Store)}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda4d59e0d5fa978583374ad549d1c097fcfe3db"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODQ5NjA4OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/RegularTransferResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxODo0NzowNFrOGgLMAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxODo0NzowNFrOGgLMAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM5MDkxMw==", "bodyText": "Can you add a summary for this constructor? At the top it currently has * *.", "url": "https://github.com/typetools/checker-framework/pull/3346#discussion_r436390913", "createdAt": "2020-06-07T18:47:04Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/RegularTransferResult.java", "diffHunk": "@@ -32,28 +33,36 @@\n      * class (including use through aliases). Complete control over the object is transfered to this\n      * class.\n      *\n+     * @param value the abstract value produced by the transfer function", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda4d59e0d5fa978583374ad549d1c097fcfe3db"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODQ5Njg0OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/TransferResult.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxODo0ODoyMlrOGgLMYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxODo0ODoyMlrOGgLMYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM5MTAwOQ==", "bodyText": "Another link to the same constructor.", "url": "https://github.com/typetools/checker-framework/pull/3346#discussion_r436391009", "createdAt": "2020-06-07T18:48:22Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/analysis/TransferResult.java", "diffHunk": "@@ -31,14 +32,17 @@\n     protected final @Nullable Map<TypeMirror, S> exceptionalStores;\n \n     /**\n-     * Create a new TransferResult.\n+     * Create a {@link #TransferResult(AbstractValue, Map)}, given {@link #resultValue} and {@link", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cda4d59e0d5fa978583374ad549d1c097fcfe3db"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1677, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}