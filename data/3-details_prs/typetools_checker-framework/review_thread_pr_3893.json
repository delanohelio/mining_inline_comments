{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwODY0NjQ2", "number": 3893, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzozODowNFrOE5meqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzozODowNFrOE5meqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODM0NzI5OnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzozODowNFrOH0KBFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNzozODowNFrOH0KBFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ1MjExOQ==", "bodyText": "This should be r.first.getKind() == Kind.METHOD_INVOCATION.", "url": "https://github.com/typetools/checker-framework/pull/3893#discussion_r524452119", "createdAt": "2020-11-16T17:38:04Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -893,9 +893,14 @@ private void reportPurityError(String msgKeyPrefix, Pair<Tree, String> r) {\n         String reason = r.second;\n         @SuppressWarnings(\"compilermessages\")\n         @CompilerMessageKey String msgKey = msgKeyPrefix + reason;\n-        if (reason.equals(\"call\") || reason.equals(\"call.method\")) {\n-            MethodInvocationTree mitree = (MethodInvocationTree) r.first;\n-            checker.reportError(r.first, msgKey, mitree.getMethodSelect());\n+        if (reason.equals(\"call\")) {\n+            if (r.first instanceof MethodInvocationTree) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02c1767bb5ff0ad5e901534516df42fe39fb85ab"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 920, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}