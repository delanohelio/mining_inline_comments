{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NDU1MDgx", "number": 3226, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNjoxNzozN1rODutCig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwMDo0NDo0MlrODuzH0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjk5MDE4OnYy", "diffSide": "RIGHT", "path": "checker/jdk/nullness/src/java/lang/reflect/Field.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNjoxNzozN1rOGAy6zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOToxNDoxNFrOGBCnhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ4NzQzOA==", "bodyText": "Please also remove the @UnknownInitialization. We also don't want the top initialization qualifier, for the same reasons as why we don't want @Nullable.", "url": "https://github.com/typetools/checker-framework/pull/3226#discussion_r403487438", "createdAt": "2020-04-04T16:17:37Z", "author": {"login": "wmdietl"}, "path": "checker/jdk/nullness/src/java/lang/reflect/Field.java", "diffHunk": "@@ -21,25 +21,27 @@ protected Field() {}\n   @Pure public int hashCode() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toString() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toGenericString() { throw new RuntimeException(\"skeleton method\"); }\n-  // These Object formal parameters can be null if the field is static.\n-  @SideEffectFree public @Nullable Object get(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public boolean getBoolean(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public byte getByte(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public char getChar(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public short getShort(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public int getInt(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public long getLong(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public float getFloat(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public double getDouble(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void set(@UnknownInitialization @Nullable Object obj, @Nullable Object value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setBoolean(@UnknownInitialization @Nullable Object obj, boolean value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setByte(@UnknownInitialization @Nullable Object obj, byte value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setChar(@UnknownInitialization @Nullable Object obj, char value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setShort(@UnknownInitialization @Nullable Object obj, short value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setInt(@UnknownInitialization @Nullable Object obj, int value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setLong(@UnknownInitialization @Nullable Object obj, long value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setFloat(@UnknownInitialization @Nullable Object obj, float value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setDouble(@UnknownInitialization @Nullable Object obj, double value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  // These Object formal parameters can be null if the field is static, or can be non-null if the\n+  // field is field instance. We don't know which. To prevent a possible NullPointerException,\n+  // the Nullness Checker should conservatively issue a warning whenever null is passed.\n+  @SideEffectFree public @Nullable Object get(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0783e32167a8c26035dfc80fe1e150cd534bd872"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MjA2Nw==", "bodyText": "Could you explain this comment?  We don't want @Nullable because it might lead to NullPointerException.  How does an @UnknownInitialization argument lead to an exception?", "url": "https://github.com/typetools/checker-framework/pull/3226#discussion_r403492067", "createdAt": "2020-04-04T17:02:29Z", "author": {"login": "mernst"}, "path": "checker/jdk/nullness/src/java/lang/reflect/Field.java", "diffHunk": "@@ -21,25 +21,27 @@ protected Field() {}\n   @Pure public int hashCode() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toString() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toGenericString() { throw new RuntimeException(\"skeleton method\"); }\n-  // These Object formal parameters can be null if the field is static.\n-  @SideEffectFree public @Nullable Object get(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public boolean getBoolean(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public byte getByte(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public char getChar(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public short getShort(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public int getInt(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public long getLong(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public float getFloat(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public double getDouble(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void set(@UnknownInitialization @Nullable Object obj, @Nullable Object value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setBoolean(@UnknownInitialization @Nullable Object obj, boolean value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setByte(@UnknownInitialization @Nullable Object obj, byte value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setChar(@UnknownInitialization @Nullable Object obj, char value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setShort(@UnknownInitialization @Nullable Object obj, short value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setInt(@UnknownInitialization @Nullable Object obj, int value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setLong(@UnknownInitialization @Nullable Object obj, long value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setFloat(@UnknownInitialization @Nullable Object obj, float value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setDouble(@UnknownInitialization @Nullable Object obj, double value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  // These Object formal parameters can be null if the field is static, or can be non-null if the\n+  // field is field instance. We don't know which. To prevent a possible NullPointerException,\n+  // the Nullness Checker should conservatively issue a warning whenever null is passed.\n+  @SideEffectFree public @Nullable Object get(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ4NzQzOA=="}, "originalCommit": {"oid": "0783e32167a8c26035dfc80fe1e150cd534bd872"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzYwMjcwOQ==", "bodyText": "It won't lead to an exception, that is true. But it would allow reading information from an object that is still being initialized.\nSo then the return type should also be @UnknownInitialization, shouldn't it?\nIt seems easier to normally only allow fully initialized objects and require a suppression if the receiver is not.", "url": "https://github.com/typetools/checker-framework/pull/3226#discussion_r403602709", "createdAt": "2020-04-05T00:42:56Z", "author": {"login": "wmdietl"}, "path": "checker/jdk/nullness/src/java/lang/reflect/Field.java", "diffHunk": "@@ -21,25 +21,27 @@ protected Field() {}\n   @Pure public int hashCode() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toString() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toGenericString() { throw new RuntimeException(\"skeleton method\"); }\n-  // These Object formal parameters can be null if the field is static.\n-  @SideEffectFree public @Nullable Object get(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public boolean getBoolean(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public byte getByte(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public char getChar(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public short getShort(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public int getInt(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public long getLong(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public float getFloat(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public double getDouble(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void set(@UnknownInitialization @Nullable Object obj, @Nullable Object value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setBoolean(@UnknownInitialization @Nullable Object obj, boolean value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setByte(@UnknownInitialization @Nullable Object obj, byte value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setChar(@UnknownInitialization @Nullable Object obj, char value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setShort(@UnknownInitialization @Nullable Object obj, short value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setInt(@UnknownInitialization @Nullable Object obj, int value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setLong(@UnknownInitialization @Nullable Object obj, long value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setFloat(@UnknownInitialization @Nullable Object obj, float value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setDouble(@UnknownInitialization @Nullable Object obj, double value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  // These Object formal parameters can be null if the field is static, or can be non-null if the\n+  // field is field instance. We don't know which. To prevent a possible NullPointerException,\n+  // the Nullness Checker should conservatively issue a warning whenever null is passed.\n+  @SideEffectFree public @Nullable Object get(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ4NzQzOA=="}, "originalCommit": {"oid": "0783e32167a8c26035dfc80fe1e150cd534bd872"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0MTkxOQ==", "bodyText": "A @PolyInitialized annotation seems appropriate in that case.", "url": "https://github.com/typetools/checker-framework/pull/3226#discussion_r403641919", "createdAt": "2020-04-05T03:07:28Z", "author": {"login": "mernst"}, "path": "checker/jdk/nullness/src/java/lang/reflect/Field.java", "diffHunk": "@@ -21,25 +21,27 @@ protected Field() {}\n   @Pure public int hashCode() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toString() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toGenericString() { throw new RuntimeException(\"skeleton method\"); }\n-  // These Object formal parameters can be null if the field is static.\n-  @SideEffectFree public @Nullable Object get(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public boolean getBoolean(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public byte getByte(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public char getChar(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public short getShort(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public int getInt(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public long getLong(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public float getFloat(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public double getDouble(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void set(@UnknownInitialization @Nullable Object obj, @Nullable Object value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setBoolean(@UnknownInitialization @Nullable Object obj, boolean value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setByte(@UnknownInitialization @Nullable Object obj, byte value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setChar(@UnknownInitialization @Nullable Object obj, char value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setShort(@UnknownInitialization @Nullable Object obj, short value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setInt(@UnknownInitialization @Nullable Object obj, int value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setLong(@UnknownInitialization @Nullable Object obj, long value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setFloat(@UnknownInitialization @Nullable Object obj, float value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setDouble(@UnknownInitialization @Nullable Object obj, double value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  // These Object formal parameters can be null if the field is static, or can be non-null if the\n+  // field is field instance. We don't know which. To prevent a possible NullPointerException,\n+  // the Nullness Checker should conservatively issue a warning whenever null is passed.\n+  @SideEffectFree public @Nullable Object get(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ4NzQzOA=="}, "originalCommit": {"oid": "0783e32167a8c26035dfc80fe1e150cd534bd872"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY0Mjg4NQ==", "bodyText": "... but until we do so, we could remove @UnknownInitialization.", "url": "https://github.com/typetools/checker-framework/pull/3226#discussion_r403642885", "createdAt": "2020-04-05T03:20:51Z", "author": {"login": "mernst"}, "path": "checker/jdk/nullness/src/java/lang/reflect/Field.java", "diffHunk": "@@ -21,25 +21,27 @@ protected Field() {}\n   @Pure public int hashCode() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toString() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toGenericString() { throw new RuntimeException(\"skeleton method\"); }\n-  // These Object formal parameters can be null if the field is static.\n-  @SideEffectFree public @Nullable Object get(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public boolean getBoolean(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public byte getByte(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public char getChar(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public short getShort(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public int getInt(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public long getLong(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public float getFloat(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public double getDouble(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void set(@UnknownInitialization @Nullable Object obj, @Nullable Object value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setBoolean(@UnknownInitialization @Nullable Object obj, boolean value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setByte(@UnknownInitialization @Nullable Object obj, byte value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setChar(@UnknownInitialization @Nullable Object obj, char value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setShort(@UnknownInitialization @Nullable Object obj, short value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setInt(@UnknownInitialization @Nullable Object obj, int value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setLong(@UnknownInitialization @Nullable Object obj, long value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setFloat(@UnknownInitialization @Nullable Object obj, float value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setDouble(@UnknownInitialization @Nullable Object obj, double value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  // These Object formal parameters can be null if the field is static, or can be non-null if the\n+  // field is field instance. We don't know which. To prevent a possible NullPointerException,\n+  // the Nullness Checker should conservatively issue a warning whenever null is passed.\n+  @SideEffectFree public @Nullable Object get(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ4NzQzOA=="}, "originalCommit": {"oid": "0783e32167a8c26035dfc80fe1e150cd534bd872"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc0NDY0Nw==", "bodyText": "Even if we had a @PolyInitialized, I think it would be unsound here.\nAny field read from a fully-initialized object needs to be fully-initialized, but a field read from an under-initialization object may not be under initialization. So using @PolyInitialized would introduce an unsoundness.", "url": "https://github.com/typetools/checker-framework/pull/3226#discussion_r403744647", "createdAt": "2020-04-05T19:14:14Z", "author": {"login": "wmdietl"}, "path": "checker/jdk/nullness/src/java/lang/reflect/Field.java", "diffHunk": "@@ -21,25 +21,27 @@ protected Field() {}\n   @Pure public int hashCode() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toString() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toGenericString() { throw new RuntimeException(\"skeleton method\"); }\n-  // These Object formal parameters can be null if the field is static.\n-  @SideEffectFree public @Nullable Object get(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public boolean getBoolean(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public byte getByte(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public char getChar(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public short getShort(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public int getInt(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public long getLong(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public float getFloat(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public double getDouble(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void set(@UnknownInitialization @Nullable Object obj, @Nullable Object value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setBoolean(@UnknownInitialization @Nullable Object obj, boolean value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setByte(@UnknownInitialization @Nullable Object obj, byte value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setChar(@UnknownInitialization @Nullable Object obj, char value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setShort(@UnknownInitialization @Nullable Object obj, short value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setInt(@UnknownInitialization @Nullable Object obj, int value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setLong(@UnknownInitialization @Nullable Object obj, long value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setFloat(@UnknownInitialization @Nullable Object obj, float value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setDouble(@UnknownInitialization @Nullable Object obj, double value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  // These Object formal parameters can be null if the field is static, or can be non-null if the\n+  // field is field instance. We don't know which. To prevent a possible NullPointerException,\n+  // the Nullness Checker should conservatively issue a warning whenever null is passed.\n+  @SideEffectFree public @Nullable Object get(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ4NzQzOA=="}, "originalCommit": {"oid": "0783e32167a8c26035dfc80fe1e150cd534bd872"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMzk4NjcyOnYy", "diffSide": "RIGHT", "path": "checker/jdk/nullness/src/java/lang/reflect/Field.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwMDo0NDo0MlrOGA6ACw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxOTo0NzoyM1rOGBC1mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzYwMzQ2Nw==", "bodyText": "Related to the previous comment: allowing the value to be @Nullable, but not @UnknownInitialization, seems inconsistent.\nI would change this to fully-initialized and non-null values only.\nOtherwise, reflection can be used to set a field that is declared @NonNull to null, without a single warning that needs to be suppressed.", "url": "https://github.com/typetools/checker-framework/pull/3226#discussion_r403603467", "createdAt": "2020-04-05T00:44:42Z", "author": {"login": "wmdietl"}, "path": "checker/jdk/nullness/src/java/lang/reflect/Field.java", "diffHunk": "@@ -21,25 +21,27 @@ protected Field() {}\n   @Pure public int hashCode() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toString() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toGenericString() { throw new RuntimeException(\"skeleton method\"); }\n-  // These Object formal parameters can be null if the field is static.\n-  @SideEffectFree public @Nullable Object get(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public boolean getBoolean(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public byte getByte(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public char getChar(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public short getShort(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public int getInt(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public long getLong(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public float getFloat(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public double getDouble(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void set(@UnknownInitialization @Nullable Object obj, @Nullable Object value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setBoolean(@UnknownInitialization @Nullable Object obj, boolean value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setByte(@UnknownInitialization @Nullable Object obj, byte value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setChar(@UnknownInitialization @Nullable Object obj, char value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setShort(@UnknownInitialization @Nullable Object obj, short value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setInt(@UnknownInitialization @Nullable Object obj, int value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setLong(@UnknownInitialization @Nullable Object obj, long value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setFloat(@UnknownInitialization @Nullable Object obj, float value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setDouble(@UnknownInitialization @Nullable Object obj, double value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  // These Object formal parameters can be null if the field is static, or can be non-null if the\n+  // field is field instance. We don't know which. To prevent a possible NullPointerException,\n+  // the Nullness Checker should conservatively issue a warning whenever null is passed.\n+  @SideEffectFree public @Nullable Object get(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public boolean getBoolean(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public byte getByte(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public char getChar(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public short getShort(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public int getInt(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public long getLong(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public float getFloat(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public double getDouble(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  public void set(@UnknownInitialization Object obj, @Nullable Object value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed08af3287ce34268a07c3321df638d99f0c5994"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc0NDgyNg==", "bodyText": "@mernst Do you agree with removing the @Nullable here?", "url": "https://github.com/typetools/checker-framework/pull/3226#discussion_r403744826", "createdAt": "2020-04-05T19:15:52Z", "author": {"login": "wmdietl"}, "path": "checker/jdk/nullness/src/java/lang/reflect/Field.java", "diffHunk": "@@ -21,25 +21,27 @@ protected Field() {}\n   @Pure public int hashCode() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toString() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toGenericString() { throw new RuntimeException(\"skeleton method\"); }\n-  // These Object formal parameters can be null if the field is static.\n-  @SideEffectFree public @Nullable Object get(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public boolean getBoolean(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public byte getByte(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public char getChar(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public short getShort(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public int getInt(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public long getLong(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public float getFloat(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public double getDouble(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void set(@UnknownInitialization @Nullable Object obj, @Nullable Object value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setBoolean(@UnknownInitialization @Nullable Object obj, boolean value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setByte(@UnknownInitialization @Nullable Object obj, byte value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setChar(@UnknownInitialization @Nullable Object obj, char value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setShort(@UnknownInitialization @Nullable Object obj, short value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setInt(@UnknownInitialization @Nullable Object obj, int value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setLong(@UnknownInitialization @Nullable Object obj, long value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setFloat(@UnknownInitialization @Nullable Object obj, float value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setDouble(@UnknownInitialization @Nullable Object obj, double value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  // These Object formal parameters can be null if the field is static, or can be non-null if the\n+  // field is field instance. We don't know which. To prevent a possible NullPointerException,\n+  // the Nullness Checker should conservatively issue a warning whenever null is passed.\n+  @SideEffectFree public @Nullable Object get(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public boolean getBoolean(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public byte getByte(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public char getChar(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public short getShort(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public int getInt(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public long getLong(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public float getFloat(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public double getDouble(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  public void set(@UnknownInitialization Object obj, @Nullable Object value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzYwMzQ2Nw=="}, "originalCommit": {"oid": "ed08af3287ce34268a07c3321df638d99f0c5994"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzc0ODI1MQ==", "bodyText": "Yes, that seems reasonable.  Thanks for the comment.", "url": "https://github.com/typetools/checker-framework/pull/3226#discussion_r403748251", "createdAt": "2020-04-05T19:47:23Z", "author": {"login": "mernst"}, "path": "checker/jdk/nullness/src/java/lang/reflect/Field.java", "diffHunk": "@@ -21,25 +21,27 @@ protected Field() {}\n   @Pure public int hashCode() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toString() { throw new RuntimeException(\"skeleton method\"); }\n   @SideEffectFree public String toGenericString() { throw new RuntimeException(\"skeleton method\"); }\n-  // These Object formal parameters can be null if the field is static.\n-  @SideEffectFree public @Nullable Object get(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public boolean getBoolean(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public byte getByte(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public char getChar(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public short getShort(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public int getInt(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public long getLong(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public float getFloat(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  @Pure public double getDouble(@UnknownInitialization @Nullable Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void set(@UnknownInitialization @Nullable Object obj, @Nullable Object value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setBoolean(@UnknownInitialization @Nullable Object obj, boolean value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setByte(@UnknownInitialization @Nullable Object obj, byte value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setChar(@UnknownInitialization @Nullable Object obj, char value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setShort(@UnknownInitialization @Nullable Object obj, short value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setInt(@UnknownInitialization @Nullable Object obj, int value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setLong(@UnknownInitialization @Nullable Object obj, long value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setFloat(@UnknownInitialization @Nullable Object obj, float value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n-  public void setDouble(@UnknownInitialization @Nullable Object obj, double value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  // These Object formal parameters can be null if the field is static, or can be non-null if the\n+  // field is field instance. We don't know which. To prevent a possible NullPointerException,\n+  // the Nullness Checker should conservatively issue a warning whenever null is passed.\n+  @SideEffectFree public @Nullable Object get(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public boolean getBoolean(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public byte getByte(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public char getChar(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public short getShort(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public int getInt(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public long getLong(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public float getFloat(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  @Pure public double getDouble(@UnknownInitialization Object obj) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }\n+  public void set(@UnknownInitialization Object obj, @Nullable Object value) throws IllegalArgumentException, IllegalAccessException { throw new RuntimeException(\"skeleton method\"); }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzYwMzQ2Nw=="}, "originalCommit": {"oid": "ed08af3287ce34268a07c3321df638d99f0c5994"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1786, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}