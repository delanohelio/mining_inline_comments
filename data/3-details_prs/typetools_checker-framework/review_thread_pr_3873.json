{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3MTQ3NDQ5", "number": 3873, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODozNDoxM1rOE25euA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODozNDoxM1rOE25euA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDAwMzEyOnYy", "diffSide": "LEFT", "path": "framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODozNDoxM1rOHv8Gsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODozNDoxM1rOHv8Gsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAyOTg3NA==", "bodyText": "This change should be mentioned in the change log.", "url": "https://github.com/typetools/checker-framework/pull/3873#discussion_r520029874", "createdAt": "2020-11-09T18:34:13Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/framework/util/ContractsUtils.java", "diffHunk": "@@ -39,33 +38,16 @@\n // more helpful error message.\n public class ContractsUtils {\n \n-    /**\n-     * The currently-used ContractsUtils object. This class is NOT a singleton: this value can\n-     * change.\n-     */\n-    protected static @InternedDistinct ContractsUtils instance;\n-\n     /** The factory that this ContractsUtils is associated with. */\n     protected GenericAnnotatedTypeFactory<?, ?, ?, ?> factory;\n \n-    /** Creates a ContractsUtils for the given factory. */\n-    private ContractsUtils(GenericAnnotatedTypeFactory<?, ?, ?, ?> factory) {\n-        this.factory = factory;\n-    }\n-\n     /**\n-     * Returns an instance of the {@link ContractsUtils} class for the given factory. Also sets it\n-     * as the currently-used ContractsUtils object.\n+     * Creates a ContractsUtils for the given factory.\n      *\n-     * @param factory the factory to create a ContractsUtils for\n-     * @return a ContractsUtils for the given factory\n+     * @param factory the type factory associated with the newly-created ContractsUtils\n      */\n-    @SuppressWarnings(\"interning\")\n-    public static ContractsUtils getInstance(GenericAnnotatedTypeFactory<?, ?, ?, ?> factory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c508254e35c4ee4e239800277346310e0b2312c1"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 902, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}