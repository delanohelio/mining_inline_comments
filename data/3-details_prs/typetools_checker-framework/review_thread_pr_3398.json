{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3OTgyNjIw", "number": 3398, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDozNDo0OVrOEHuGwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDozNDo0OVrOEHuGwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTMwODgyOnYy", "diffSide": "RIGHT", "path": "framework/tests/value/MyTree.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDozNDo0OVrOGnQCIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDo1Mjo0OFrOGnQmKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxMDMzOQ==", "bodyText": "How about Note: This is a false positive: the type of newTree(\"hello\").put(\"hello\") should be inferred as MyTree<@StringVal(\"hello\") String> and the assignment should therefore pass.", "url": "https://github.com/typetools/checker-framework/pull/3398#discussion_r443810339", "createdAt": "2020-06-22T20:34:49Z", "author": {"login": "wmdietl"}, "path": "framework/tests/value/MyTree.java", "diffHunk": "@@ -21,9 +21,16 @@ void uses() {\n \n         MyTree<@UnknownVal String> myTree1 = newTree(\"hello\").put(\"bye\");\n         // :: error: (assignment.type.incompatible)\n+        MyTree<@StringVal(\"hello\") String> myTree1b = newTree(\"hello\").put(\"bye\");\n+\n+        // Note: This is a false positive: the type newTree(\"hello\").put(\"hello\") is able to be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcc66f456ccc511ed4ca9c0c9d989fdd91ea8b21"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxOTU2MA==", "bodyText": "Updated. Thanks for the review!", "url": "https://github.com/typetools/checker-framework/pull/3398#discussion_r443819560", "createdAt": "2020-06-22T20:52:48Z", "author": {"login": "lnsun"}, "path": "framework/tests/value/MyTree.java", "diffHunk": "@@ -21,9 +21,16 @@ void uses() {\n \n         MyTree<@UnknownVal String> myTree1 = newTree(\"hello\").put(\"bye\");\n         // :: error: (assignment.type.incompatible)\n+        MyTree<@StringVal(\"hello\") String> myTree1b = newTree(\"hello\").put(\"bye\");\n+\n+        // Note: This is a false positive: the type newTree(\"hello\").put(\"hello\") is able to be", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgxMDMzOQ=="}, "originalCommit": {"oid": "dcc66f456ccc511ed4ca9c0c9d989fdd91ea8b21"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1710, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}