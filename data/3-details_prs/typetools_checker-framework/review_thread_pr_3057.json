{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1OTkxMTIz", "number": 3057, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxODoyMjo0OFrODbUwjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxODoyNToxNlrODbUzpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTc4MjUzOnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/framework/type/AnnotatedTypeFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxODoyMjo0OFrOFivooA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxODoyMjo0OFrOFivooA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk3NjM1Mg==", "bodyText": "The comment here and below is the same, which was a bit surprising. Would the logic be easier to understand as:\nif (typeElt.getEnclosingElement() == null || ElementUtils.enclosingClass(typeElt.getEnclosingElement() == null) {\n    // If the typeElt does not have an enclosing class, then the NewClassTree\n    // does not have an implicit receiver.\n    return null;\n}\nThat doesn't perform the re-assignment of typeElt when it has an enclosing class, which is tricky to notice.\nBut is that re-assignment good, as typeElt is used in getEnclosingType below?\nSo I guess I'm asking for some more documentation what the cases are for.", "url": "https://github.com/typetools/checker-framework/pull/3057#discussion_r371976352", "createdAt": "2020-01-28T18:22:48Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/AnnotatedTypeFactory.java", "diffHunk": "@@ -1662,6 +1663,20 @@ protected AnnotatedDeclaredType getImplicitReceiverType(ExpressionTree tree) {\n                             \"AnnotatedTypeFactory.getImplicitReceiver: enclosingClass()==null for element: \"\n                                     + element);\n                 }\n+                if (tree.getKind() == Kind.NEW_CLASS) {\n+                    if (typeElt.getEnclosingElement() != null) {\n+                        typeElt = ElementUtils.enclosingClass(typeElt.getEnclosingElement());\n+                        if (typeElt == null) {\n+                            // If the typeElt does not have an enclosing class, then the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94d8b07c52e0b8b7d21bf56a9dceaed45174abbb"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTc5MDQ0OnYy", "diffSide": "RIGHT", "path": "framework/tests/all-systems/java8inference/Issue2975.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxODoyNToxNlrOFivtmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxODoyNToxNlrOFivtmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTk3NzYyNA==", "bodyText": "Is the package here necessary? It doesn't seem to match the location of the file.", "url": "https://github.com/typetools/checker-framework/pull/3057#discussion_r371977624", "createdAt": "2020-01-28T18:25:16Z", "author": {"login": "wmdietl"}, "path": "framework/tests/all-systems/java8inference/Issue2975.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package sup;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94d8b07c52e0b8b7d21bf56a9dceaed45174abbb"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1842, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}