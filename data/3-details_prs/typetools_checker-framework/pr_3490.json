{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0ODc2NDU1", "number": 3490, "title": "Fix issue 3482: Add method and class tree to CFGLambda, handle lambda case in DOTCFGVisualizer to avoid crash.", "bodyText": "Add method and class tree to CFGLambda, so that we can get the enclosing method and class name in DOTCFGVisualizer.\nHandle lambda case in dotOutputFileName(UnderlyingAST ast) to avoid crash.\nResolves #3482", "createdAt": "2020-07-22T04:43:43Z", "url": "https://github.com/typetools/checker-framework/pull/3490", "merged": true, "mergeCommit": {"oid": "4676bdbc86912fa211d91b4d090b19cb111cd293"}, "closed": true, "closedAt": "2020-07-29T23:30:27Z", "author": {"login": "xingweitian"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3Szz8AH2gAyNDU0ODc2NDU1OjcxY2M2MzA2ODJhNzczM2IwZDc2YmI1NTRiNWQ5MDA2MmE1OTQ0ZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5sTb2gH2gAyNDU0ODc2NDU1OmQ3ZmFiMDRhODYyNTE0MmMzNWRiOTE4NjgxMTkyZTY1MDJjMmE4N2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "71cc630682a7733b0d76bb554b5d90062a5944ef", "author": {"user": {"login": "xingweitian", "name": "Weitian Xing"}}, "url": "https://github.com/typetools/checker-framework/commit/71cc630682a7733b0d76bb554b5d90062a5944ef", "committedDate": "2020-07-22T04:06:48Z", "message": "Resolves #3482."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15726e2f635ba9f99e6cf9f375fa6e8032b862c8", "author": {"user": {"login": "xingweitian", "name": "Weitian Xing"}}, "url": "https://github.com/typetools/checker-framework/commit/15726e2f635ba9f99e6cf9f375fa6e8032b862c8", "committedDate": "2020-07-22T04:07:05Z", "message": "Merge remote-tracking branch 'typetools/master' into typetools-issue3482"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyOTkyODk1", "url": "https://github.com/typetools/checker-framework/pull/3490#pullrequestreview-452992895", "createdAt": "2020-07-22T04:53:22Z", "commit": {"oid": "15726e2f635ba9f99e6cf9f375fa6e8032b862c8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDo1MzoyMlrOG1SpbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDo1MzoyMlrOG1SpbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUzMzIyOA==", "bodyText": "Nit: I prefer giving the variables the more specific type rather than casting at the use -- that is, move these casts to lines 1175-1178.", "url": "https://github.com/typetools/checker-framework/pull/3490#discussion_r458533228", "createdAt": "2020-07-22T04:53:22Z", "author": {"login": "mernst"}, "path": "framework/src/main/java/org/checkerframework/framework/type/GenericAnnotatedTypeFactory.java", "diffHunk": "@@ -1172,10 +1172,17 @@ protected void performFlowAnalysis(ClassTree classTree) {\n \n                 while (!lambdaQueue.isEmpty()) {\n                     Pair<LambdaExpressionTree, Store> lambdaPair = lambdaQueue.poll();\n+                    Tree enclosingMethod =\n+                            TreeUtils.enclosingOfKind(getPath(lambdaPair.first), Kind.METHOD);\n+                    Tree enclosingClass =\n+                            TreeUtils.enclosingOfKind(getPath(enclosingMethod), Kind.CLASS);\n                     analyze(\n                             queue,\n                             lambdaQueue,\n-                            new CFGLambda(lambdaPair.first),\n+                            new CFGLambda(\n+                                    lambdaPair.first,\n+                                    (ClassTree) enclosingClass,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15726e2f635ba9f99e6cf9f375fa6e8032b862c8"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c71aa6b21b8d40a8323755aa8d8bd1bcb302ea14", "author": {"user": {"login": "xingweitian", "name": "Weitian Xing"}}, "url": "https://github.com/typetools/checker-framework/commit/c71aa6b21b8d40a8323755aa8d8bd1bcb302ea14", "committedDate": "2020-07-22T05:41:19Z", "message": "Resolves comment."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a69bd2d358b3275989bccea01fa773a7baff2f24", "author": {"user": {"login": "xingweitian", "name": "Weitian Xing"}}, "url": "https://github.com/typetools/checker-framework/commit/a69bd2d358b3275989bccea01fa773a7baff2f24", "committedDate": "2020-07-22T05:41:40Z", "message": "Merge remote-tracking branch 'typetools/master' into typetools-issue3482"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NTQ4NzA1", "url": "https://github.com/typetools/checker-framework/pull/3490#pullrequestreview-454548705", "createdAt": "2020-07-23T22:56:15Z", "commit": {"oid": "a69bd2d358b3275989bccea01fa773a7baff2f24"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMjo1NjoxNVrOG2eSVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QyMzowNzowMFrOG2egIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MjUwMA==", "bodyText": "For consistency, I would use the same variable names as in the other two cases, that is clsName and methodName.", "url": "https://github.com/typetools/checker-framework/pull/3490#discussion_r459772500", "createdAt": "2020-07-23T22:56:15Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/DOTCFGVisualizer.java", "diffHunk": "@@ -193,6 +194,28 @@ protected String dotOutputFileName(UnderlyingAST ast) {\n             srcLoc.append(\")::\");\n             srcLoc.append(((JCTree) cfgMethod.getMethod()).pos);\n             srcLoc.append(\">\");\n+        } else if (ast.getKind() == UnderlyingAST.Kind.LAMBDA) {\n+            CFGLambda cfgLambda = (CFGLambda) ast;\n+            String enclosingClassName = cfgLambda.getEnclosingClass().getSimpleName().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a69bd2d358b3275989bccea01fa773a7baff2f24"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3MzUzNw==", "bodyText": "Possibly for a separate PR: what happens for an overloaded method name? The computation of outFile doesn't seem to include parameters in the METHOD case.", "url": "https://github.com/typetools/checker-framework/pull/3490#discussion_r459773537", "createdAt": "2020-07-23T22:59:21Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/DOTCFGVisualizer.java", "diffHunk": "@@ -193,6 +194,28 @@ protected String dotOutputFileName(UnderlyingAST ast) {\n             srcLoc.append(\")::\");\n             srcLoc.append(((JCTree) cfgMethod.getMethod()).pos);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a69bd2d358b3275989bccea01fa773a7baff2f24"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3NDA1OQ==", "bodyText": "Maybe the hashCode isn't necessary here - in ARBITRARY_CODE it's also not included.", "url": "https://github.com/typetools/checker-framework/pull/3490#discussion_r459774059", "createdAt": "2020-07-23T23:00:57Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/DOTCFGVisualizer.java", "diffHunk": "@@ -193,6 +194,28 @@ protected String dotOutputFileName(UnderlyingAST ast) {\n             srcLoc.append(\")::\");\n             srcLoc.append(((JCTree) cfgMethod.getMethod()).pos);\n             srcLoc.append(\">\");\n+        } else if (ast.getKind() == UnderlyingAST.Kind.LAMBDA) {\n+            CFGLambda cfgLambda = (CFGLambda) ast;\n+            String enclosingClassName = cfgLambda.getEnclosingClass().getSimpleName().toString();\n+            String enclosingMethodName = cfgLambda.getEnclosingMethod().getName().toString();\n+            int hashCode = cfgLambda.getCode().hashCode();\n+            outFile.append(enclosingClassName);\n+            outFile.append(\"-\");\n+            outFile.append(enclosingMethodName);\n+            outFile.append(\"-\");\n+            outFile.append(hashCode);\n+\n+            srcLoc.append(\"<\");\n+            srcLoc.append(enclosingClassName);\n+            srcLoc.append(\"::\");\n+            srcLoc.append(enclosingMethodName);\n+            srcLoc.append(\"(\");\n+            srcLoc.append(cfgLambda.getEnclosingMethod().getParameters());\n+            srcLoc.append(\")::\");\n+            srcLoc.append(hashCode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a69bd2d358b3275989bccea01fa773a7baff2f24"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3NDI2OQ==", "bodyText": "I would use the same field and method names as in CFGMethod.", "url": "https://github.com/typetools/checker-framework/pull/3490#discussion_r459774269", "createdAt": "2020-07-23T23:01:39Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/UnderlyingAST.java", "diffHunk": "@@ -75,22 +75,62 @@ public String toString() {\n     /** If the underlying AST is a lambda. */\n     public static class CFGLambda extends UnderlyingAST {\n \n+        /** The lambda expression. */\n         private final LambdaExpressionTree lambda;\n \n-        public CFGLambda(LambdaExpressionTree lambda) {\n+        /** The enclosing class of the lambda. */\n+        private final ClassTree enclosingClass;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a69bd2d358b3275989bccea01fa773a7baff2f24"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3NTQ5OQ==", "bodyText": "I'm wondering whether this could just be classTree.\n(I'm also wondering what the difference between ct and classTree is and whether this code should use ct instead...)", "url": "https://github.com/typetools/checker-framework/pull/3490#discussion_r459775499", "createdAt": "2020-07-23T23:05:33Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/GenericAnnotatedTypeFactory.java", "diffHunk": "@@ -1172,10 +1172,17 @@ protected void performFlowAnalysis(ClassTree classTree) {\n \n                 while (!lambdaQueue.isEmpty()) {\n                     Pair<LambdaExpressionTree, Store> lambdaPair = lambdaQueue.poll();\n+                    MethodTree enclosingMethod =\n+                            (MethodTree)\n+                                    TreeUtils.enclosingOfKind(\n+                                            getPath(lambdaPair.first), Kind.METHOD);\n+                    ClassTree enclosingClass =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a69bd2d358b3275989bccea01fa773a7baff2f24"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTc3NjAzNA==", "bodyText": "Possible alternative to think about: change Queue<Pair<LambdaExpressionTree, Store>> lambdaQueue to also contain the MethodTree within which the lambda occurred.", "url": "https://github.com/typetools/checker-framework/pull/3490#discussion_r459776034", "createdAt": "2020-07-23T23:07:00Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/GenericAnnotatedTypeFactory.java", "diffHunk": "@@ -1172,10 +1172,17 @@ protected void performFlowAnalysis(ClassTree classTree) {\n \n                 while (!lambdaQueue.isEmpty()) {\n                     Pair<LambdaExpressionTree, Store> lambdaPair = lambdaQueue.poll();\n+                    MethodTree enclosingMethod =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a69bd2d358b3275989bccea01fa773a7baff2f24"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a54394b54b4a2c823a22ef20a2fbe14a39d344cb", "author": {"user": {"login": "xingweitian", "name": "Weitian Xing"}}, "url": "https://github.com/typetools/checker-framework/commit/a54394b54b4a2c823a22ef20a2fbe14a39d344cb", "committedDate": "2020-07-24T19:02:52Z", "message": "Merge remote-tracking branch 'typetools/master' into typetools-issue3482"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "419388b2d820bb48761dba1eb12206fd94fba51b", "author": {"user": {"login": "xingweitian", "name": "Weitian Xing"}}, "url": "https://github.com/typetools/checker-framework/commit/419388b2d820bb48761dba1eb12206fd94fba51b", "committedDate": "2020-07-24T19:33:23Z", "message": "Resolves comment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NTI3MTA0", "url": "https://github.com/typetools/checker-framework/pull/3490#pullrequestreview-457527104", "createdAt": "2020-07-29T13:36:02Z", "commit": {"oid": "419388b2d820bb48761dba1eb12206fd94fba51b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzozNjowMlrOG44vQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMzozNjowMlrOG44vQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjMwMzA0Mw==", "bodyText": "Can you use classTree instead of ct? And open an issue that we should look into which one of the two we should be using here. It is definitely a bit odd to use both within the same expression.", "url": "https://github.com/typetools/checker-framework/pull/3490#discussion_r462303043", "createdAt": "2020-07-29T13:36:02Z", "author": {"login": "wmdietl"}, "path": "framework/src/main/java/org/checkerframework/framework/type/GenericAnnotatedTypeFactory.java", "diffHunk": "@@ -1172,10 +1172,14 @@ protected void performFlowAnalysis(ClassTree classTree) {\n \n                 while (!lambdaQueue.isEmpty()) {\n                     Pair<LambdaExpressionTree, Store> lambdaPair = lambdaQueue.poll();\n+                    MethodTree mt =\n+                            (MethodTree)\n+                                    TreeUtils.enclosingOfKind(\n+                                            getPath(lambdaPair.first), Kind.METHOD);\n                     analyze(\n                             queue,\n                             lambdaQueue,\n-                            new CFGLambda(lambdaPair.first),\n+                            new CFGLambda(lambdaPair.first, ct, mt),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "419388b2d820bb48761dba1eb12206fd94fba51b"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4646bcfa2f5ef9806f6d2de3583d75adccda8f4", "author": {"user": {"login": "xingweitian", "name": "Weitian Xing"}}, "url": "https://github.com/typetools/checker-framework/commit/b4646bcfa2f5ef9806f6d2de3583d75adccda8f4", "committedDate": "2020-07-29T14:55:47Z", "message": "Merge remote-tracking branch 'typetools/master' into typetools-issue3482"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7fab04a8625142c35db918681192e6502c2a87b", "author": {"user": {"login": "xingweitian", "name": "Weitian Xing"}}, "url": "https://github.com/typetools/checker-framework/commit/d7fab04a8625142c35db918681192e6502c2a87b", "committedDate": "2020-07-29T14:56:49Z", "message": "Resolve comment."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2695, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}