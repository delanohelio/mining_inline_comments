{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMzA4MzU2", "number": 3755, "title": "Warn about nullness annotations on outer class scoping constructs", "bodyText": "Also adds method BaseTypeVisitor#visitAnnotatedType.", "createdAt": "2020-10-09T02:48:15Z", "url": "https://github.com/typetools/checker-framework/pull/3755", "merged": true, "mergeCommit": {"oid": "7f2d6a44d00ed0036ed8fb314aed558b2460e52d"}, "closed": true, "closedAt": "2020-10-12T20:01:26Z", "author": {"login": "mernst"}, "timelineItems": {"totalCount": 46, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdO_aneAH2gAyNTAwMzA4MzU2OmE2M2ZlZDhkMTc1YzQ2MjNjMDZkMTA0ZjM1MDU4NTBlODM0ZmFiZWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdR4Gs0gH2gAyNTAwMzA4MzU2OmZiODU0MDVjNzAyNTU5MTU3NmZjZWQ5ZGMxYjg2MmQ0NGQ3YzdlMjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a63fed8d175c4623c06d104f3505850e834fabed", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/a63fed8d175c4623c06d104f3505850e834fabed", "committedDate": "2020-10-03T19:05:16Z", "message": "Test case for warnings about scoping constructs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a5b091633352d48f60189ad0007649290c1d681", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/9a5b091633352d48f60189ad0007649290c1d681", "committedDate": "2020-10-08T01:12:58Z", "message": "A tutorial is out of date"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5b96445094f9fce2bda0ff68cb9e65918d56bf1", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/c5b96445094f9fce2bda0ff68cb9e65918d56bf1", "committedDate": "2020-10-08T01:13:06Z", "message": "Merge ../checker-framework-branch-master into scoping-construct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0f31c540ec8de0ec7959ac0d1071bb7f36176ef", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/b0f31c540ec8de0ec7959ac0d1071bb7f36176ef", "committedDate": "2020-10-08T04:06:24Z", "message": "Javadoc fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73578ded669b84537927fe13d8f17c5a324e4c9d", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/73578ded669b84537927fe13d8f17c5a324e4c9d", "committedDate": "2020-10-08T04:15:17Z", "message": "Abstract out override of visitAnnotatedType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3d89116af6a6eb09197a2ffee501e48de7d9165", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/e3d89116af6a6eb09197a2ffee501e48de7d9165", "committedDate": "2020-10-08T04:17:19Z", "message": "Merge ../checker-framework-branch-master into visitAnnotatedType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d049f3c65f9f267b66dc320b8c1e85a2f387b76f", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/d049f3c65f9f267b66dc320b8c1e85a2f387b76f", "committedDate": "2020-10-08T04:17:43Z", "message": "Checkpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b56bcea52c81794a194d1513e646cc1b8a1a33e5", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/b56bcea52c81794a194d1513e646cc1b8a1a33e5", "committedDate": "2020-10-08T04:18:03Z", "message": "Merge ../checker-framework-branch-master into scoping-construct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66e06f7b581b8097f4809abe3e8a1bdb4877a361", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/66e06f7b581b8097f4809abe3e8a1bdb4877a361", "committedDate": "2020-10-08T04:18:50Z", "message": "Merge ../checker-framework-fork-mernst-branch-scoping-construct into visitAnnotatedType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7adabe3649dd18b2f0bd75136a5b911920a029d0", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/7adabe3649dd18b2f0bd75136a5b911920a029d0", "committedDate": "2020-10-08T04:24:22Z", "message": "Checkpoint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e48593616165ae5aabfb9921b765939e2f5a1d78", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/e48593616165ae5aabfb9921b765939e2f5a1d78", "committedDate": "2020-10-08T04:27:02Z", "message": "Remove unrelated code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cb45d96b0b178f1cab94ff2622cfa0124016a38", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/9cb45d96b0b178f1cab94ff2622cfa0124016a38", "committedDate": "2020-10-08T04:27:17Z", "message": "Remove comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "235e1867fb611ec617e2badfbf11e1c410a79bf9", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/235e1867fb611ec617e2badfbf11e1c410a79bf9", "committedDate": "2020-10-08T04:29:08Z", "message": "Remove comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcc4b5d74f558d7c4bef026dcfc02275891e8156", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/fcc4b5d74f558d7c4bef026dcfc02275891e8156", "committedDate": "2020-10-08T04:29:14Z", "message": "Merge ../checker-framework-fork-mernst-branch-visitAnnotatedType into scoping-construct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80609f0dfc5ab4d61f69d08d2d220b6b9c5ffccc", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/80609f0dfc5ab4d61f69d08d2d220b6b9c5ffccc", "committedDate": "2020-10-08T15:31:34Z", "message": "Change interface of visitAnnotatedType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9de6c266b093ed50207bbd207dc6a17628de97c7", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/9de6c266b093ed50207bbd207dc6a17628de97c7", "committedDate": "2020-10-08T15:41:22Z", "message": "Updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2a69605e7dcbfc18e643d2e0611b563a8484e13", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/f2a69605e7dcbfc18e643d2e0611b563a8484e13", "committedDate": "2020-10-08T21:01:42Z", "message": "Fix signature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e67695f24d9ff88ec36a2efe1fe65fbc998d242", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/8e67695f24d9ff88ec36a2efe1fe65fbc998d242", "committedDate": "2020-10-08T21:07:11Z", "message": "Merge ../checker-framework-fork-mernst-branch-visitAnnotatedType into scoping-construct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b848df7ed264e58d7f37055b78c407bd82aba5d0", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/b848df7ed264e58d7f37055b78c407bd82aba5d0", "committedDate": "2020-10-08T21:11:34Z", "message": "Fix body"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14322a256c7957872e9bb13d9476ac82784f15cc", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/14322a256c7957872e9bb13d9476ac82784f15cc", "committedDate": "2020-10-08T21:12:05Z", "message": "Whitespace change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea97bd35e4cd560530d535c7f79a8d535f10dc0c", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/ea97bd35e4cd560530d535c7f79a8d535f10dc0c", "committedDate": "2020-10-08T21:12:57Z", "message": "Merge ../checker-framework-fork-mernst-branch-visitAnnotatedType into scoping-construct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b19e4f161cf60a8f48bfa437e9877fcf6e10f5e", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/2b19e4f161cf60a8f48bfa437e9877fcf6e10f5e", "committedDate": "2020-10-08T21:20:03Z", "message": "Merge ../checker-framework-branch-master into visitAnnotatedType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ade140acac0e7c3b586034f9bf88c387541210db", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/ade140acac0e7c3b586034f9bf88c387541210db", "committedDate": "2020-10-08T21:20:09Z", "message": "Merge ../checker-framework-fork-mernst-branch-visitAnnotatedType into scoping-construct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "faf2600fdc4f935467fdb1de34750b1f6f38cae2", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/faf2600fdc4f935467fdb1de34750b1f6f38cae2", "committedDate": "2020-10-08T21:44:17Z", "message": "Issue warnings about nullness annotations on scoping constructs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e2fd9616ab41599034f1f6473e2f876e54cea67", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/8e2fd9616ab41599034f1f6473e2f876e54cea67", "committedDate": "2020-10-08T21:53:10Z", "message": "More fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8763ca86c23e2ccb2546db75af4fbe2888a6d29", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/c8763ca86c23e2ccb2546db75af4fbe2888a6d29", "committedDate": "2020-10-08T22:09:58Z", "message": "Javadoc fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77897561584f94ea54018488d9a6371cc7d94e60", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/77897561584f94ea54018488d9a6371cc7d94e60", "committedDate": "2020-10-08T22:18:28Z", "message": "Add a case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7df7620e495ddd8ac98175c962d6082b229bf825", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/7df7620e495ddd8ac98175c962d6082b229bf825", "committedDate": "2020-10-09T00:49:38Z", "message": "Merge ../checker-framework-fork-mernst-branch-visitAnnotatedType into scoping-construct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ac42a6ce603b57f7ca86ab76b463a3eb3319b7e", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/1ac42a6ce603b57f7ca86ab76b463a3eb3319b7e", "committedDate": "2020-10-09T00:55:45Z", "message": "Merge ../checker-framework-branch-master into scoping-construct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8690e7bd518d3ef77eb04b59889a14dc402ee042", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/8690e7bd518d3ef77eb04b59889a14dc402ee042", "committedDate": "2020-10-09T01:49:33Z", "message": "Fix call"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e185ea3b0b227952e6adb4065152522ec172a91", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/8e185ea3b0b227952e6adb4065152522ec172a91", "committedDate": "2020-10-09T02:15:54Z", "message": "Improve logic in visitAnnotatedType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ad9ea38fd5ecd6234b11dc3978b133a8e87bd6f", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/3ad9ea38fd5ecd6234b11dc3978b133a8e87bd6f", "committedDate": "2020-10-09T02:26:12Z", "message": "Move methods to TreeUtils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a27cebab67e3cb1cfe22daffc735fc0e4d6e0c35", "author": {"user": {"login": "smillst", "name": "Suzanne Millstein"}}, "url": "https://github.com/typetools/checker-framework/commit/a27cebab67e3cb1cfe22daffc735fc0e4d6e0c35", "committedDate": "2020-10-09T18:19:35Z", "message": "nullness.on.outer isn't issued on arrays."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1ODY5Mzg1", "url": "https://github.com/typetools/checker-framework/pull/3755#pullrequestreview-505869385", "createdAt": "2020-10-09T17:35:02Z", "commit": {"oid": "3ad9ea38fd5ecd6234b11dc3978b133a8e87bd6f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNzozNTowM1rOHfS75A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxODoyMDo1NlrOHfUTLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU3ODE0OA==", "bodyText": "The should be called leftmostTypeTree.", "url": "https://github.com/typetools/checker-framework/pull/3755#discussion_r502578148", "createdAt": "2020-10-09T17:35:03Z", "author": {"login": "smillst"}, "path": "javacutil/src/main/java/org/checkerframework/javacutil/TreeUtils.java", "diffHunk": "@@ -1541,4 +1540,68 @@ public static boolean isWideningBinary(BinaryTree node) {\n                 return false;\n         }\n     }\n+\n+    /**\n+     * Returns the annotations explicitly written on the given type.\n+     *\n+     * @param declAnnos a list of annotations on a variable/method declaration; null if this type is\n+     *     not from such a location\n+     * @param typeTree the type whose annotations to return\n+     * @return the annotations explicitly written on the given type.\n+     */\n+    public static List<? extends AnnotationTree> getExplicitAnnotations(\n+            List<? extends AnnotationTree> declAnnos, Tree typeTree) {\n+        while (true) {\n+            switch (typeTree.getKind()) {\n+                case IDENTIFIER:\n+                case PRIMITIVE_TYPE:\n+                    if (declAnnos == null) {\n+                        return Collections.emptyList();\n+                    }\n+                    return declAnnos;\n+                case ANNOTATED_TYPE:\n+                    return ((AnnotatedTypeTree) typeTree).getAnnotations();\n+                case MEMBER_SELECT:\n+                    if (declAnnos == null) {\n+                        return Collections.emptyList();\n+                    }\n+                    typeTree = ((MemberSelectTree) typeTree).getExpression();\n+                    break;\n+                case PARAMETERIZED_TYPE:\n+                    typeTree = ((ParameterizedTypeTree) typeTree).getType();\n+                    break;\n+                default:\n+                    throw new BugInCF(\n+                            \"what typeTree? %s %s %s\",\n+                            typeTree.getKind(), typeTree.getClass(), typeTree);\n+            }\n+        }\n+    }\n+\n+    /**\n+     * Returns the leftmost type component of the argument. This is the type component that a type\n+     * annotation would apply to, if written on a declaration of a variable of the given type.\n+     *\n+     * @param typeTree a type\n+     * @return the leftmost type component of the argument\n+     */\n+    public static Tree leftmostType(Tree typeTree) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad9ea38fd5ecd6234b11dc3978b133a8e87bd6f"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU3OTE5Nw==", "bodyText": "This should be getExplicitAnnotatonTrees.   Also, typeTree can't be any type tree.  For example, ArrayTrees can't be passed.  The documentation should be explicit about what trees may be passed. (And/or maybe just make it a private method in the class that uses it. Since it doesn't take all TypeTrees, I'm not sure it is of general use.)", "url": "https://github.com/typetools/checker-framework/pull/3755#discussion_r502579197", "createdAt": "2020-10-09T17:37:16Z", "author": {"login": "smillst"}, "path": "javacutil/src/main/java/org/checkerframework/javacutil/TreeUtils.java", "diffHunk": "@@ -1541,4 +1540,68 @@ public static boolean isWideningBinary(BinaryTree node) {\n                 return false;\n         }\n     }\n+\n+    /**\n+     * Returns the annotations explicitly written on the given type.\n+     *\n+     * @param declAnnos a list of annotations on a variable/method declaration; null if this type is\n+     *     not from such a location\n+     * @param typeTree the type whose annotations to return\n+     * @return the annotations explicitly written on the given type.\n+     */\n+    public static List<? extends AnnotationTree> getExplicitAnnotations(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad9ea38fd5ecd6234b11dc3978b133a8e87bd6f"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4MDIxMQ==", "bodyText": "Why not just make this a void method?", "url": "https://github.com/typetools/checker-framework/pull/3755#discussion_r502580211", "createdAt": "2020-10-09T17:39:09Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -2257,6 +2265,29 @@ public Void visitThrow(ThrowTree node, Void p) {\n         return super.visitThrow(node, p);\n     }\n \n+    @Override\n+    public Void visitAnnotatedType(AnnotatedTypeTree node, Void p) {\n+        visitAnnotatedType(null, node, node);\n+        return super.visitAnnotatedType(node, p);\n+    }\n+\n+    /**\n+     * Checks an annotated type. Invoked by {@link #visitAnnotatedType(AnnotatedTypeTree, Void)} and\n+     * also by {@link #visitVariable}. Exists to prevent code duplication between the two. Checking\n+     * in visitVariable is needed because there isn't an AnnotatedTypeTree within a variable\n+     * declaration -- all the annotations are attached to the VariableTree.\n+     *\n+     * @param declAnnos the user-written type annotations on a variable/method declaration, if this\n+     *     type is from one; null otherwise\n+     * @param typeTree the type that the annotations apply to\n+     * @param node where to report errors/warnings\n+     * @return nothing\n+     */\n+    public Void visitAnnotatedType(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad9ea38fd5ecd6234b11dc3978b133a8e87bd6f"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4MTE3Ng==", "bodyText": "These aren't declaration annotations; they are the annotation trees stored as modifiers of a variable.", "url": "https://github.com/typetools/checker-framework/pull/3755#discussion_r502581176", "createdAt": "2020-10-09T17:41:03Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -2257,6 +2265,29 @@ public Void visitThrow(ThrowTree node, Void p) {\n         return super.visitThrow(node, p);\n     }\n \n+    @Override\n+    public Void visitAnnotatedType(AnnotatedTypeTree node, Void p) {\n+        visitAnnotatedType(null, node, node);\n+        return super.visitAnnotatedType(node, p);\n+    }\n+\n+    /**\n+     * Checks an annotated type. Invoked by {@link #visitAnnotatedType(AnnotatedTypeTree, Void)} and\n+     * also by {@link #visitVariable}. Exists to prevent code duplication between the two. Checking\n+     * in visitVariable is needed because there isn't an AnnotatedTypeTree within a variable\n+     * declaration -- all the annotations are attached to the VariableTree.\n+     *\n+     * @param declAnnos the user-written type annotations on a variable/method declaration, if this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad9ea38fd5ecd6234b11dc3978b133a8e87bd6f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4MjAwMA==", "bodyText": "The Javadoc here should mention #visitAnnotatedType(List<? extends AnnotationTree>, Tree, Tree).", "url": "https://github.com/typetools/checker-framework/pull/3755#discussion_r502582000", "createdAt": "2020-10-09T17:42:48Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -2257,6 +2265,29 @@ public Void visitThrow(ThrowTree node, Void p) {\n         return super.visitThrow(node, p);\n     }\n \n+    @Override\n+    public Void visitAnnotatedType(AnnotatedTypeTree node, Void p) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad9ea38fd5ecd6234b11dc3978b133a8e87bd6f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4MjQ2Mg==", "bodyText": "I don't understand why ArrayTypes are treated differently.", "url": "https://github.com/typetools/checker-framework/pull/3755#discussion_r502582462", "createdAt": "2020-10-09T17:43:46Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -1156,6 +1158,12 @@ public Void visitTypeParameter(TypeParameterTree node, Void p) {\n     public Void visitVariable(VariableTree node, Void p) {\n         warnAboutTypeAnnotationsTooEarly(node, node.getModifiers());\n \n+        Tree typeTree = node.getType();\n+        while (typeTree.getKind() == Tree.Kind.ARRAY_TYPE) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad9ea38fd5ecd6234b11dc3978b133a8e87bd6f"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4OTcxMQ==", "bodyText": "This is an unannotatedTypeTree.", "url": "https://github.com/typetools/checker-framework/pull/3755#discussion_r502589711", "createdAt": "2020-10-09T17:58:42Z", "author": {"login": "smillst"}, "path": "checker/src/main/java/org/checkerframework/checker/nullness/NullnessVisitor.java", "diffHunk": "@@ -663,42 +667,48 @@ public Void visitAnnotation(AnnotationTree node, Void p) {\n         return null;\n     }\n \n-    // This is needed in addition to visitAnnotatedType because there isn't an AnnotatedTypeTree\n-    // within a variable declaration -- all the annotations are attached to the VariableTree.\n     @Override\n-    public Void visitVariable(VariableTree node, Void p) {\n-        TypeMirror tm = TreeUtils.typeOf(node.getType());\n-        if (TypesUtils.isPrimitive(tm)) {\n-            if (atypeFactory.containsNullnessAnnotation(node.getModifiers().getAnnotations())) {\n+    public Void visitAnnotatedType(\n+            @Nullable List<? extends AnnotationTree> declAnnos, Tree typeTree, Tree node) {\n+        Tree unannotatedType = unannotatedType(typeTree);\n+\n+        if (unannotatedType.getKind() == Tree.Kind.PRIMITIVE_TYPE) {\n+            if (atypeFactory.containsNullnessAnnotation(declAnnos, typeTree)) {\n                 checker.reportError(node, \"nullness.on.primitive\");\n                 return null;\n             }\n-        } else if (tm.getKind() == TypeKind.ARRAY) {\n-            Tree innermostComponentTypeTree = node.getType();\n-            while (innermostComponentTypeTree.getKind() == Tree.Kind.ARRAY_TYPE) {\n-                innermostComponentTypeTree = ((ArrayTypeTree) innermostComponentTypeTree).getType();\n-            }\n-            if (innermostComponentTypeTree.getKind() == Tree.Kind.PRIMITIVE_TYPE\n-                    && atypeFactory.containsNullnessAnnotation(\n-                            node.getModifiers().getAnnotations())) {\n-                checker.reportError(innermostComponentTypeTree, \"nullness.on.primitive\");\n-                return null;\n+        }\n+\n+        if (declAnnos != null) {\n+            switch (unannotatedType.getKind()) {\n+                case MEMBER_SELECT:\n+                    if (atypeFactory.containsNullnessAnnotation(\n+                            declAnnos, ((MemberSelectTree) unannotatedType).getExpression())) {\n+                        checker.reportError(\n+                                TreeUtils.leftmostType(unannotatedType), \"nullness.on.outer\");\n+                    }\n+                    break;\n+                default:\n+                    break;\n             }\n         }\n \n-        return super.visitVariable(node, p);\n+        return super.visitAnnotatedType(declAnnos, typeTree, node);\n     }\n \n-    @Override\n-    public Void visitAnnotatedType(AnnotatedTypeTree node, Void p) {\n-        TypeMirror tm = TreeUtils.typeOf(node);\n-        if (TypesUtils.isPrimitive(tm)) {\n-            if (atypeFactory.containsNullnessAnnotation(node.getAnnotations())) {\n-                checker.reportError(node, \"nullness.on.primitive\");\n-                return null;\n-            }\n+    /**\n+     * If the argument is a tree of kind ANNOTATED_TYPE, return its unannotated version. Otherwise,\n+     * return the argument.\n+     *\n+     * @param typeTree a tree\n+     * @return the tree without annotations\n+     */\n+    private Tree unannotatedType(Tree typeTree) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad9ea38fd5ecd6234b11dc3978b133a8e87bd6f"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjYwMDQ5NQ==", "bodyText": "There is currently no error on this line.  Should there be?", "url": "https://github.com/typetools/checker-framework/pull/3755#discussion_r502600495", "createdAt": "2020-10-09T18:20:56Z", "author": {"login": "smillst"}, "path": "checker/tests/nullness/ScopingConstruct.java", "diffHunk": "@@ -0,0 +1,28 @@\n+import org.checkerframework.checker.nullness.qual.Nullable;\n+\n+@SuppressWarnings(\"initialization.fields.uninitialized\")\n+class ScopingConstruct {\n+\n+    // TODO: add nested classes within these two?\n+    static class StaticNested {}\n+\n+    class Inner {}\n+\n+    @Nullable StaticNested nsn;\n+\n+    @Nullable Inner ni;\n+\n+    // This is a Java error.\n+    // @Nullable ScopingConstruct.StaticNested nscsn;\n+\n+    ScopingConstruct.@Nullable StaticNested scnsn;\n+\n+    // :: error: (nullness.on.outer)\n+    @Nullable ScopingConstruct.Inner nsci;\n+\n+    ScopingConstruct.@Nullable Inner scni;\n+\n+    // :: error: (nullness.on.outer)\n+    @Nullable ScopingConstruct.Inner @Nullable [] array;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a27cebab67e3cb1cfe22daffc735fc0e4d6e0c35"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b152dc44a769ce9127c7530c2ced1f13b0a33873", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/b152dc44a769ce9127c7530c2ced1f13b0a33873", "committedDate": "2020-10-09T23:29:57Z", "message": "Start to address code review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55e8e6322c1cd0116a1c7d34c709f04b4e7ac8ec", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/55e8e6322c1cd0116a1c7d34c709f04b4e7ac8ec", "committedDate": "2020-10-09T23:30:12Z", "message": "Merge ../checker-framework-branch-master into scoping-construct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea772c54737466434e272b0ede93577fc9d8b2d8", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/ea772c54737466434e272b0ede93577fc9d8b2d8", "committedDate": "2020-10-10T05:13:23Z", "message": "Improve logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc6ca5bb96e151e2627343a2d90cf65c716c3daf", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/cc6ca5bb96e151e2627343a2d90cf65c716c3daf", "committedDate": "2020-10-10T13:41:09Z", "message": "Fix `@link` tag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11daecfa2f5b74bc79ea6ce49e95e064ad324c00", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/11daecfa2f5b74bc79ea6ce49e95e064ad324c00", "committedDate": "2020-10-11T03:06:07Z", "message": "Fix infinite-loop bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c43a51ea8a0000d5fd266f70749970cf1b5f8363", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/c43a51ea8a0000d5fd266f70749970cf1b5f8363", "committedDate": "2020-10-11T17:30:14Z", "message": "Add more tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NzU0NzM5", "url": "https://github.com/typetools/checker-framework/pull/3755#pullrequestreview-506754739", "createdAt": "2020-10-12T16:16:12Z", "commit": {"oid": "3ad9ea38fd5ecd6234b11dc3978b133a8e87bd6f"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjoxNjoxMlrOHgFGdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjozMToyNlrOHgFmAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwMDA1NQ==", "bodyText": "When I see declAnnos, I think thats a collection/set of AnnotationMirrors that are declaration annotations, as in annotation without @Target(ElementType.TYPE_USE).  I would change declAnnos to annoTrees.  Also, the annotations could be declarations annotations or type annotations, so I would change the user-written type annotations to just the user-written annotations.", "url": "https://github.com/typetools/checker-framework/pull/3755#discussion_r503400055", "createdAt": "2020-10-12T16:16:12Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -2257,6 +2265,29 @@ public Void visitThrow(ThrowTree node, Void p) {\n         return super.visitThrow(node, p);\n     }\n \n+    @Override\n+    public Void visitAnnotatedType(AnnotatedTypeTree node, Void p) {\n+        visitAnnotatedType(null, node, node);\n+        return super.visitAnnotatedType(node, p);\n+    }\n+\n+    /**\n+     * Checks an annotated type. Invoked by {@link #visitAnnotatedType(AnnotatedTypeTree, Void)} and\n+     * also by {@link #visitVariable}. Exists to prevent code duplication between the two. Checking\n+     * in visitVariable is needed because there isn't an AnnotatedTypeTree within a variable\n+     * declaration -- all the annotations are attached to the VariableTree.\n+     *\n+     * @param declAnnos the user-written type annotations on a variable/method declaration, if this", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjU4MTE3Ng=="}, "originalCommit": {"oid": "3ad9ea38fd5ecd6234b11dc3978b133a8e87bd6f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwMzcwNQ==", "bodyText": "I would also change declAnnos to annoTree here, too.", "url": "https://github.com/typetools/checker-framework/pull/3755#discussion_r503403705", "createdAt": "2020-10-12T16:22:50Z", "author": {"login": "smillst"}, "path": "javacutil/src/main/java/org/checkerframework/javacutil/TreeUtils.java", "diffHunk": "@@ -1541,4 +1540,47 @@ public static boolean isWideningBinary(BinaryTree node) {\n                 return false;\n         }\n     }\n+\n+    /**\n+     * Returns the annotations explicitly written on the given type.\n+     *\n+     * @param declAnnos annotations written before a variable/method declaration; null if this type\n+     *     is not from such a location\n+     * @param typeTree the type whose annotations to return\n+     * @return the annotations explicitly written on the given type.\n+     */\n+    public static List<? extends AnnotationTree> getExplicitAnnotationTrees(\n+            List<? extends AnnotationTree> declAnnos, Tree typeTree) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43a51ea8a0000d5fd266f70749970cf1b5f8363"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwODEyOA==", "bodyText": "Checks an annotated type.\n\nIs it all annotated types, or could we still be missing some?  It's fine if you aren't confident, I'm just curious.", "url": "https://github.com/typetools/checker-framework/pull/3755#discussion_r503408128", "createdAt": "2020-10-12T16:31:26Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/common/basetype/BaseTypeVisitor.java", "diffHunk": "@@ -2257,6 +2264,33 @@ public Void visitThrow(ThrowTree node, Void p) {\n         return super.visitThrow(node, p);\n     }\n \n+    /**\n+     * Rather than overriding this method, clients should often override {@link\n+     * #visitAnnotatedType(List,Tree)}. That method also handles the case of annotations at the\n+     * beginning of a variable or method declaration. javac parses all those annotations as being on\n+     * the variable or method declaration, even though the ones that are type annotations logically\n+     * belong to the variable type or method return type.\n+     */\n+    @Override\n+    public Void visitAnnotatedType(AnnotatedTypeTree node, Void p) {\n+        visitAnnotatedType(null, node);\n+        return super.visitAnnotatedType(node, p);\n+    }\n+\n+    /**\n+     * Checks an annotated type. Invoked by {@link #visitAnnotatedType(AnnotatedTypeTree, Void)} and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c43a51ea8a0000d5fd266f70749970cf1b5f8363"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36d796065c0f36674671b16a824c635788fbae16", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/36d796065c0f36674671b16a824c635788fbae16", "committedDate": "2020-10-12T17:41:14Z", "message": "Rename `declAnnos` to `annoTree`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa644217446ffbcca282c5abf02e71067377b7be", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/aa644217446ffbcca282c5abf02e71067377b7be", "committedDate": "2020-10-12T17:41:34Z", "message": "Merge ../checker-framework-branch-master into scoping-construct"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39f32455720812cfec32d3e0a5dcfcc1c93d9ab8", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/39f32455720812cfec32d3e0a5dcfcc1c93d9ab8", "committedDate": "2020-10-12T17:48:02Z", "message": "Use `annoTrees` instead of `annoTree`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f971a9aa0d45f6a9936f88b0043e830045e7b4de", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/f971a9aa0d45f6a9936f88b0043e830045e7b4de", "committedDate": "2020-10-12T18:12:46Z", "message": "Test more locations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb85405c7025591576fced9dc1b862d44d7c7e26", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/fb85405c7025591576fced9dc1b862d44d7c7e26", "committedDate": "2020-10-12T18:15:57Z", "message": "Add changelog entry"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2571, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}