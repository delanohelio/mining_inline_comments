{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5Nzk3Mzgy", "number": 3535, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDozNToxOFrOEUL_NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDozNToxOFrOEUL_NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjAzMzgwOnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/ControlFlowGraph.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDozNToxOVrOG6Vg9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDo1MDo0MFrOG6V9Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyMzA5Mg==", "bodyText": "After #3534 this can be simplified.", "url": "https://github.com/typetools/checker-framework/pull/3535#discussion_r463823092", "createdAt": "2020-07-31T20:35:19Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/ControlFlowGraph.java", "diffHunk": "@@ -21,14 +21,22 @@\n import org.checkerframework.dataflow.cfg.block.Block.BlockType;\n import org.checkerframework.dataflow.cfg.block.ConditionalBlock;\n import org.checkerframework.dataflow.cfg.block.ExceptionBlock;\n+import org.checkerframework.dataflow.cfg.block.RegularBlock;\n import org.checkerframework.dataflow.cfg.block.SingleSuccessorBlock;\n import org.checkerframework.dataflow.cfg.block.SpecialBlock;\n import org.checkerframework.dataflow.cfg.block.SpecialBlockImpl;\n import org.checkerframework.dataflow.cfg.node.AssignmentNode;\n import org.checkerframework.dataflow.cfg.node.Node;\n import org.checkerframework.dataflow.cfg.node.ReturnNode;\n \n-/** A control flow graph (CFG for short) of a single method. */\n+/**\n+ * A control flow graph (CFG for short) of a single method.\n+ *\n+ * <p>The graph is represented by the successors (methods {@link SingleSuccessorBlock#getSuccessor},\n+ * {@link ConditionalBlock#getThenSuccessor}, {@link ConditionalBlock#getElseSuccessor}, {@link", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86d7c9568b7b597b1655bcbd982a8e6d49e18316"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgzMDM3NQ==", "bodyText": "Even when getSuccessors exists, this is still accurate and more informative.", "url": "https://github.com/typetools/checker-framework/pull/3535#discussion_r463830375", "createdAt": "2020-07-31T20:50:40Z", "author": {"login": "mernst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/ControlFlowGraph.java", "diffHunk": "@@ -21,14 +21,22 @@\n import org.checkerframework.dataflow.cfg.block.Block.BlockType;\n import org.checkerframework.dataflow.cfg.block.ConditionalBlock;\n import org.checkerframework.dataflow.cfg.block.ExceptionBlock;\n+import org.checkerframework.dataflow.cfg.block.RegularBlock;\n import org.checkerframework.dataflow.cfg.block.SingleSuccessorBlock;\n import org.checkerframework.dataflow.cfg.block.SpecialBlock;\n import org.checkerframework.dataflow.cfg.block.SpecialBlockImpl;\n import org.checkerframework.dataflow.cfg.node.AssignmentNode;\n import org.checkerframework.dataflow.cfg.node.Node;\n import org.checkerframework.dataflow.cfg.node.ReturnNode;\n \n-/** A control flow graph (CFG for short) of a single method. */\n+/**\n+ * A control flow graph (CFG for short) of a single method.\n+ *\n+ * <p>The graph is represented by the successors (methods {@link SingleSuccessorBlock#getSuccessor},\n+ * {@link ConditionalBlock#getThenSuccessor}, {@link ConditionalBlock#getElseSuccessor}, {@link", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyMzA5Mg=="}, "originalCommit": {"oid": "86d7c9568b7b597b1655bcbd982a8e6d49e18316"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1626, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}