{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MDI3Nzc5", "number": 4017, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOToxNjo0MlrOFFKUWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOTozNTo0N1rOFFLHeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwOTU2MjUxOnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOToxNjo0MlrOIFh5fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOToxNjo0MlrOIFh5fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY2OTE4Mg==", "bodyText": "I don't understand why this is disabled.", "url": "https://github.com/typetools/checker-framework/pull/4017#discussion_r542669182", "createdAt": "2020-12-14T19:16:42Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -1315,6 +1330,14 @@ private void recordDeclAnnotation(\n                     // `annoMirror` is applicable to `elt`\n                     annos.add(annoMirror);\n                 }\n+            } else {\n+                // TODO: Warn about what file it was found in.\n+                if (false) {\n+                    stubWarnNotFound(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ed282e454df73d4a5936a556313636c65782af6"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwOTU2OTkzOnYy", "diffSide": "RIGHT", "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOToxNzo1MVrOIFh-HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOToxNzo1MVrOIFh-HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY3MDM2NA==", "bodyText": "The field filename can be used for this.  Maybe all AnnotationFileParser warnings should report the filename?", "url": "https://github.com/typetools/checker-framework/pull/4017#discussion_r542670364", "createdAt": "2020-12-14T19:17:51Z", "author": {"login": "smillst"}, "path": "framework/src/main/java/org/checkerframework/framework/stub/AnnotationFileParser.java", "diffHunk": "@@ -1284,7 +1298,8 @@ private void annotate(AnnotatedTypeMirror type, List<AnnotationExpr> annotations\n             if (annoMirror != null) {\n                 type.replaceAnnotation(annoMirror);\n             } else {\n-                stubWarnNotFound(\"Unknown annotation: \" + annotation);\n+                // TODO: Be more specific: In what file?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ed282e454df73d4a5936a556313636c65782af6"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwOTY5MzM2OnYy", "diffSide": "RIGHT", "path": "checker/jtreg/stubs/issue2059/AnnoNotFound.out", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxOTozNTo0OFrOIFjMxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDowNjozM1rOIFlMfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY5MDUwMQ==", "bodyText": "@smillst Do you know offhand how to write this test so it will pass on all file systems?  (One way would be to add a flag, used only for debugging, that disables this output.)", "url": "https://github.com/typetools/checker-framework/pull/4017#discussion_r542690501", "createdAt": "2020-12-14T19:35:48Z", "author": {"login": "mernst"}, "path": "checker/jtreg/stubs/issue2059/AnnoNotFound.out", "diffHunk": "@@ -1,2 +1,2 @@\n-- compiler.warn.proc.messager: AnnotationFileParser: Unknown annotation: @Nullable\n+- compiler.warn.proc.messager: AnnotationFileParser: Unknown annotation @Nullable in /home/mernst/research/types/checker-framework-fork-mernst-branch-AnnotationFileParser-diagnostics/checker/jtreg/stubs/issue2059/AnnoNotFound.astub", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a7a898466ff37aa4ce08fa109728f3cbda35dc6"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjcyMzE5Ng==", "bodyText": "Maybe if -Anomsgtext is passed, then don't output the filename?", "url": "https://github.com/typetools/checker-framework/pull/4017#discussion_r542723196", "createdAt": "2020-12-14T20:06:33Z", "author": {"login": "smillst"}, "path": "checker/jtreg/stubs/issue2059/AnnoNotFound.out", "diffHunk": "@@ -1,2 +1,2 @@\n-- compiler.warn.proc.messager: AnnotationFileParser: Unknown annotation: @Nullable\n+- compiler.warn.proc.messager: AnnotationFileParser: Unknown annotation @Nullable in /home/mernst/research/types/checker-framework-fork-mernst-branch-AnnotationFileParser-diagnostics/checker/jtreg/stubs/issue2059/AnnoNotFound.astub", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjY5MDUwMQ=="}, "originalCommit": {"oid": "2a7a898466ff37aa4ce08fa109728f3cbda35dc6"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 859, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}