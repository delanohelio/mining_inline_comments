{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NzIwOTg2", "number": 3861, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDozOToxNlrOE11eYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDozOToxNlrOE11eYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODg2MTEyOnYy", "diffSide": "RIGHT", "path": "javacutil/src/main/java/org/checkerframework/javacutil/ElementUtils.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDozOToxNlrOHuVmBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMjo0Mjo1MFrOHuZh-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM1MDM0Mw==", "bodyText": "I agree this name isn't great.  I think getUserFriendlyName would be an improvement.  Here are a few other, mostly bad names that might spark an idea of a better name:\n\ngetUserFriendlySimpleName\ngetUserFriendlyName\ngetPlainSimpleName\ngetUserUnderstandableSimpleName\ngetPrintableSimpleName\n getLegibleSimpleName", "url": "https://github.com/typetools/checker-framework/pull/3861#discussion_r518350343", "createdAt": "2020-11-05T20:39:16Z", "author": {"login": "smillst"}, "path": "javacutil/src/main/java/org/checkerframework/javacutil/ElementUtils.java", "diffHunk": "@@ -205,6 +205,25 @@ public static String getSimpleName(ExecutableElement element) {\n         return sj.toString();\n     }\n \n+    /**\n+     * Returns a user-friendly name for the given method. Does not return {@code \"<init>\"} or {@code\n+     * \"<clinit>\"} as ExecutableElement.getSimpleName() does.\n+     *\n+     * @param element a method declaration\n+     * @return a user-friendly name for the method\n+     */\n+    public static CharSequence getFriendlyName(ExecutableElement element) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beddd2e176653b2f5c7dba79f3f913da9c2e9a16"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM3NDc5OQ==", "bodyText": "I like getUserFriendlyName best among these suggestions (and it's better than the current name).\nAnother idea is:\n\ngetSimpleNameOrDescription", "url": "https://github.com/typetools/checker-framework/pull/3861#discussion_r518374799", "createdAt": "2020-11-05T21:20:16Z", "author": {"login": "mernst"}, "path": "javacutil/src/main/java/org/checkerframework/javacutil/ElementUtils.java", "diffHunk": "@@ -205,6 +205,25 @@ public static String getSimpleName(ExecutableElement element) {\n         return sj.toString();\n     }\n \n+    /**\n+     * Returns a user-friendly name for the given method. Does not return {@code \"<init>\"} or {@code\n+     * \"<clinit>\"} as ExecutableElement.getSimpleName() does.\n+     *\n+     * @param element a method declaration\n+     * @return a user-friendly name for the method\n+     */\n+    public static CharSequence getFriendlyName(ExecutableElement element) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM1MDM0Mw=="}, "originalCommit": {"oid": "beddd2e176653b2f5c7dba79f3f913da9c2e9a16"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQxNDg0Mw==", "bodyText": "I like getSimpleNameOrDescription best.", "url": "https://github.com/typetools/checker-framework/pull/3861#discussion_r518414843", "createdAt": "2020-11-05T22:42:50Z", "author": {"login": "smillst"}, "path": "javacutil/src/main/java/org/checkerframework/javacutil/ElementUtils.java", "diffHunk": "@@ -205,6 +205,25 @@ public static String getSimpleName(ExecutableElement element) {\n         return sj.toString();\n     }\n \n+    /**\n+     * Returns a user-friendly name for the given method. Does not return {@code \"<init>\"} or {@code\n+     * \"<clinit>\"} as ExecutableElement.getSimpleName() does.\n+     *\n+     * @param element a method declaration\n+     * @return a user-friendly name for the method\n+     */\n+    public static CharSequence getFriendlyName(ExecutableElement element) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM1MDM0Mw=="}, "originalCommit": {"oid": "beddd2e176653b2f5c7dba79f3f913da9c2e9a16"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 894, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}