{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMTkwMDA1", "number": 3536, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDozODozM1rOEUMCbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzowMjoyMFrOEVMoXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjA0MjA1OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/Block.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDozODozM1rOG6VmHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDozODozM1rOG6VmHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgyNDQxMw==", "bodyText": "As the order of Nodes is important, returning a List is more appropriate.", "url": "https://github.com/typetools/checker-framework/pull/3536#discussion_r463824413", "createdAt": "2020-07-31T20:38:33Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/Block.java", "diffHunk": "@@ -41,4 +43,18 @@\n      * @return the predecessors of this basic block\n      */\n     Set<Block> getPredecessors();\n+\n+    /**\n+     * Returns all the successors of this basic block.\n+     *\n+     * @return all the successors of this basic block\n+     */\n+    Collection<Block> getSuccessors();\n+\n+    /**\n+     * Returns the nodes contained within this basic block.\n+     *\n+     * @return the nodes contained within this basic block\n+     */\n+    Collection<Node> getNodes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a3be0a5daad73cf621fe281de6944818867da57"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjYyMDg5OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/RegularBlockImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzowMDozMVrOG70V0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMToyODo1MVrOG727kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NjcyMw==", "bodyText": "Instead of now having two methods, getNodes and getContents, in regular blocks, I would pick one name. I've gotten used to getContents, but getNodes is also fine with me.\nSo if you prefer getNodes, I would deprecate getContents for removal to not have this duplication.", "url": "https://github.com/typetools/checker-framework/pull/3536#discussion_r465376723", "createdAt": "2020-08-04T23:00:31Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/RegularBlockImpl.java", "diffHunk": "@@ -39,6 +39,11 @@ public void addNodes(List<? extends Node> ts) {\n         return Collections.unmodifiableList(contents);\n     }\n \n+    @Override\n+    public List<Node> getNodes() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cbbe6cc1015bccd1af7bdc646f15daeec0997f8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxOTE1NA==", "bodyText": "Good suggestion.  I did that, and that led me to notice other cleanups that could be performed (eg, a client that implemented getNodes and can now use the new method).  I also added a getLastNode() method since multiple clients implemented it.\nI chose \"getNodes\" because I think it's more descriptive to clients.  (I see why getContents was chosen -- because a private field is named contents.)\nDo you want to review the latest changes, or should I merge this?  Either way is fine with me.", "url": "https://github.com/typetools/checker-framework/pull/3536#discussion_r465419154", "createdAt": "2020-08-05T01:28:51Z", "author": {"login": "mernst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/RegularBlockImpl.java", "diffHunk": "@@ -39,6 +39,11 @@ public void addNodes(List<? extends Node> ts) {\n         return Collections.unmodifiableList(contents);\n     }\n \n+    @Override\n+    public List<Node> getNodes() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NjcyMw=="}, "originalCommit": {"oid": "4cbbe6cc1015bccd1af7bdc646f15daeec0997f8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjYyNDk0OnYy", "diffSide": "RIGHT", "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/Block.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzowMjoyMFrOG70YMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwMToyODowNlrOG7263A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NzMyOA==", "bodyText": "At the moment there is no documentation which blocks return something non-empty or with just a single element. Maybe documenting that would be useful with the individual implementations of this method.", "url": "https://github.com/typetools/checker-framework/pull/3536#discussion_r465377328", "createdAt": "2020-08-04T23:02:20Z", "author": {"login": "wmdietl"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/Block.java", "diffHunk": "@@ -41,4 +43,18 @@\n      * @return the predecessors of this basic block\n      */\n     Set<Block> getPredecessors();\n+\n+    /**\n+     * Returns the successors of this basic block.\n+     *\n+     * @return the successors of this basic block\n+     */\n+    Set<Block> getSuccessors();\n+\n+    /**\n+     * Returns the nodes contained within this basic block.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cbbe6cc1015bccd1af7bdc646f15daeec0997f8"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQxODk3Mg==", "bodyText": "I added that documentation.", "url": "https://github.com/typetools/checker-framework/pull/3536#discussion_r465418972", "createdAt": "2020-08-05T01:28:06Z", "author": {"login": "mernst"}, "path": "dataflow/src/main/java/org/checkerframework/dataflow/cfg/block/Block.java", "diffHunk": "@@ -41,4 +43,18 @@\n      * @return the predecessors of this basic block\n      */\n     Set<Block> getPredecessors();\n+\n+    /**\n+     * Returns the successors of this basic block.\n+     *\n+     * @return the successors of this basic block\n+     */\n+    Set<Block> getSuccessors();\n+\n+    /**\n+     * Returns the nodes contained within this basic block.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NzMyOA=="}, "originalCommit": {"oid": "4cbbe6cc1015bccd1af7bdc646f15daeec0997f8"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1628, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}