{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NjQwODQ0", "number": 3824, "title": "New scripts for WPI that use dljc and -Ainfer=stubs", "bodyText": "From https://github.com/kelloggm/wpi-many.\n\n Scripts and documentation\n Add tests\n\nI didn't remove infer-and-annotate.sh because someone might still want to use it if these scripts fail for some reason. If reviewers think it's not necessary at all, I'm open to removing it.", "createdAt": "2020-10-23T01:17:48Z", "url": "https://github.com/typetools/checker-framework/pull/3824", "merged": true, "mergeCommit": {"oid": "cc42cc918bd87f938ab7fbd83042d4b1b8e6a759"}, "closed": true, "closedAt": "2020-12-17T15:36:59Z", "author": {"login": "kelloggm"}, "timelineItems": {"totalCount": 149, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdggF6fAH2gAyNTA4NjQwODQ0OjA1YzMxYWQ3ZDEzZjQ2MmE4NzJmMGM3YmJmMWRjYzkyYjkyZWI2YzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnFYovgFqTU1NDcyMjMxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "05c31ad7d13f462a872f0c7bbf1dcc92b92eb6c6", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/05c31ad7d13f462a872f0c7bbf1dcc92b92eb6c6", "committedDate": "2020-11-27T04:46:14Z", "message": "Complete handling of trusted annotations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "824c515ce480cc27f8fca8bc12eb7ea8e5c59dd2", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/824c515ce480cc27f8fca8bc12eb7ea8e5c59dd2", "committedDate": "2020-11-27T05:14:41Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71eb27ae63ddb3b86475b39036f8f0c62fc7b670", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/71eb27ae63ddb3b86475b39036f8f0c62fc7b670", "committedDate": "2020-11-29T11:30:09Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c950021a1fbefc36acf64d194923be1b92055f47", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/c950021a1fbefc36acf64d194923be1b92055f47", "committedDate": "2020-11-30T04:08:21Z", "message": "Set path at right location in file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03d103dfeecede413e3f21f3640b4b07fca95d85", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/03d103dfeecede413e3f21f3640b4b07fca95d85", "committedDate": "2020-11-30T04:10:17Z", "message": "Add diagnostics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b07ee7691f8bb34804f26056b10ccbf2efa6dded", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/b07ee7691f8bb34804f26056b10ccbf2efa6dded", "committedDate": "2020-11-30T19:12:11Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f82203ea3669d013e6cbfda2138c3eebbf9cbb6", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/8f82203ea3669d013e6cbfda2138c3eebbf9cbb6", "committedDate": "2020-12-01T00:54:02Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80c0fc4c213a3cee77684ec785d32601692ab030", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/80c0fc4c213a3cee77684ec785d32601692ab030", "committedDate": "2020-12-01T01:07:43Z", "message": "Remove irrelevant information from bin/README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f68bdb21b7518597cd16ecb53dcb85cac5039e2", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/4f68bdb21b7518597cd16ecb53dcb85cac5039e2", "committedDate": "2020-12-01T01:08:53Z", "message": "Merge ../checker-framework-fork-mernst-branch-bin-readme into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2143677b9f6492deffdca1b729ec8e26edec6dcf", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/2143677b9f6492deffdca1b729ec8e26edec6dcf", "committedDate": "2020-12-01T01:09:43Z", "message": "Further concision"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac9805c31427d5e2d2015b822685c3f4e3164f33", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/ac9805c31427d5e2d2015b822685c3f4e3164f33", "committedDate": "2020-12-01T01:10:08Z", "message": "Merge ../checker-framework-fork-mernst-branch-bin-readme into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c356460110951b390b852bc760d7d934f2f0e924", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/c356460110951b390b852bc760d7d934f2f0e924", "committedDate": "2020-12-01T01:11:33Z", "message": "Describe new files in README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d2972a05d7ce33f3b7ba410e49b887c769b1f89", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/4d2972a05d7ce33f3b7ba410e49b887c769b1f89", "committedDate": "2020-12-01T01:13:08Z", "message": "Move examples to the docs/examples/ directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63bc552b2be57ad29d5f4f7567812a48748f7e28", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/63bc552b2be57ad29d5f4f7567812a48748f7e28", "committedDate": "2020-12-01T01:13:23Z", "message": "Undo paragraph filling, to reduce size of diffs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fd317e8d78ed1438a4927b9e0fd6884a4ae91b0", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/5fd317e8d78ed1438a4927b9e0fd6884a4ae91b0", "committedDate": "2020-12-01T01:48:52Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edb9b3a75575ff2fe9982191331dedefcfc30e9f", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/edb9b3a75575ff2fe9982191331dedefcfc30e9f", "committedDate": "2020-12-01T05:17:40Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48d61bf5a9a3819a79bf6556b6dbf853cdbca057", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/48d61bf5a9a3819a79bf6556b6dbf853cdbca057", "committedDate": "2020-12-01T17:14:14Z", "message": "Exempt securerandom examples from whitespace style check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cefe436f5e5ff3f482011c3090f80a3e6d565d0", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/0cefe436f5e5ff3f482011c3090f80a3e6d565d0", "committedDate": "2020-12-01T17:15:55Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8b78dd4544b142045b9a5d8d8d254787099e17f", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/c8b78dd4544b142045b9a5d8d8d254787099e17f", "committedDate": "2020-12-01T17:34:34Z", "message": "Adjust changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d2e674771f236b25c02de7dd6a18406160c1611", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/2d2e674771f236b25c02de7dd6a18406160c1611", "committedDate": "2020-12-03T19:37:08Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c883a347c5c5a72bb34a23981fb0b20be9dd014", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/1c883a347c5c5a72bb34a23981fb0b20be9dd014", "committedDate": "2020-12-03T23:08:01Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NTQ5NDg0", "url": "https://github.com/typetools/checker-framework/pull/3824#pullrequestreview-544549484", "createdAt": "2020-12-03T23:35:17Z", "commit": {"oid": "1c883a347c5c5a72bb34a23981fb0b20be9dd014"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzozNToxOFrOH-6DZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzozOTowNVrOH-6JRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNDkwMg==", "bodyText": "What is the Makefile make?  Could you add a summary comment?", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r535724902", "createdAt": "2020-12-03T23:35:18Z", "author": {"login": "smillst"}, "path": "checker/bin-devel/Makefile", "diffHunk": "@@ -0,0 +1,18 @@\n+remove-annotations.sh:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c883a347c5c5a72bb34a23981fb0b20be9dd014"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNTQ0Mg==", "bodyText": "How is \"trusted\" defined? Should new annotations be added to this list by hand or was it generated?", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r535725442", "createdAt": "2020-12-03T23:36:34Z", "author": {"login": "smillst"}, "path": "checker/bin-devel/remove-annotations.sh", "diffHunk": "@@ -0,0 +1,311 @@\n+#!/bin/sh\n+# Remove Checker Framework annotations (except trusted ones) from all files under the current directory.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c883a347c5c5a72bb34a23981fb0b20be9dd014"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNjQwNA==", "bodyText": "Does it matter that this is missing a new line?", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r535726404", "createdAt": "2020-12-03T23:39:05Z", "author": {"login": "smillst"}, "path": "docs/examples/wpi-many/securerandom.query", "diffHunk": "@@ -0,0 +1 @@\n+\"import java.security.SecureRandom;\" -filename:*Test.java language:Java -user:kelloggm -user:AndroidSDKSources", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c883a347c5c5a72bb34a23981fb0b20be9dd014"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7c67e2bef78db1166f2ec045b5331fc01fd6c3f", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/e7c67e2bef78db1166f2ec045b5331fc01fd6c3f", "committedDate": "2020-12-09T19:41:49Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4ff3cbef6df4d5bf8fa49e540c7d0a188d5a3fa", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/d4ff3cbef6df4d5bf8fa49e540c7d0a188d5a3fa", "committedDate": "2020-12-09T20:57:21Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "608f006b9dd8c682279d19ec005fffd926d8a45b", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/608f006b9dd8c682279d19ec005fffd926d8a45b", "committedDate": "2020-12-09T22:57:49Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0730d27be83458c0f129db0e8f6f044424d43d1", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/b0730d27be83458c0f129db0e8f6f044424d43d1", "committedDate": "2020-12-10T19:01:16Z", "message": "Explain \"trusted annotations\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bce94dc65443d9a8c6f3f3a3959b888d9d4054cf", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/bce94dc65443d9a8c6f3f3a3959b888d9d4054cf", "committedDate": "2020-12-10T19:04:14Z", "message": "Cross-reference to the manual"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "193cd82b44742640b519b2e3f9529263a2beb78b", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/193cd82b44742640b519b2e3f9529263a2beb78b", "committedDate": "2020-12-10T22:12:48Z", "message": "Merge branch 'master' of github.com:typetools/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd686484d1122e779ff36385505540f73bde2147", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/dd686484d1122e779ff36385505540f73bde2147", "committedDate": "2020-12-12T01:37:13Z", "message": "one automated test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e6e8a79117947d263f517e130625cef1387ca52", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/9e6e8a79117947d263f517e130625cef1387ca52", "committedDate": "2020-12-14T19:36:56Z", "message": "actually run the tests in CI. I think this should fail CI?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56c521775bd8f45178f08e516c596853d3ad28e4", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/56c521775bd8f45178f08e516c596853d3ad28e4", "committedDate": "2020-12-14T22:14:12Z", "message": "permit Java 8 or Java 11"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d899f99511da2392cf0b21fbdab396fd8b832ce", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/5d899f99511da2392cf0b21fbdab396fd8b832ce", "committedDate": "2020-12-14T22:14:20Z", "message": "Merge branch 'master' of github.com:typetools/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af143e9d98de9f6ced0ea6f7992bdf489b2dcdae", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/af143e9d98de9f6ced0ea6f7992bdf489b2dcdae", "committedDate": "2020-12-14T23:26:55Z", "message": "move wpi script testing into the non-junit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "059a993fd9000dce0f73fc4b4e2a8db25abb9076", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/059a993fd9000dce0f73fc4b4e2a8db25abb9076", "committedDate": "2020-12-15T00:46:50Z", "message": "Merge branch 'master' of github.com:typetools/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25fae9cf3f3b4528284d259402e274414dc73b94", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/25fae9cf3f3b4528284d259402e274414dc73b94", "committedDate": "2020-12-15T01:35:15Z", "message": "add bibtex-clean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9400c2c838660c50257a53054dbcc2f3fb445786", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/9400c2c838660c50257a53054dbcc2f3fb445786", "committedDate": "2020-12-15T01:39:48Z", "message": "add html-pretty-print:"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70020de4303e1ae8f501b6bc44191e2db18f3299", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/70020de4303e1ae8f501b6bc44191e2db18f3299", "committedDate": "2020-12-15T19:53:11Z", "message": "hopefully this will help me debug CI failures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4f1b1ea8abacec00b1a9e7255e6d4fb24d918fc", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/d4f1b1ea8abacec00b1a9e7255e6d4fb24d918fc", "committedDate": "2020-12-15T20:35:11Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "121f3c1e5d1487dcbeec1e496e3051221933f842", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/121f3c1e5d1487dcbeec1e496e3051221933f842", "committedDate": "2020-12-15T20:42:02Z", "message": "logging for internal script, for CI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "daee01b9115301cf9f9e9b98736f8b240367c64a", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/daee01b9115301cf9f9e9b98736f8b240367c64a", "committedDate": "2020-12-15T20:42:19Z", "message": "Merge branch 'wpi-many' of github.com:kelloggm/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76b7a5d92a284901bbd3296aaa67f641e1637447", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/76b7a5d92a284901bbd3296aaa67f641e1637447", "committedDate": "2020-12-15T22:05:52Z", "message": "fix a minor bug that might maybe be the cause of these failures?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3489926245f8cfc0a96acb6adbbf6422b6794548", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/3489926245f8cfc0a96acb6adbbf6422b6794548", "committedDate": "2020-12-16T00:16:03Z", "message": "more aggressive logging to try to figure out what's going wrong on the CI machine"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adae96172595526842956bf13fd41bd5a7832902", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/adae96172595526842956bf13fd41bd5a7832902", "committedDate": "2020-12-16T00:58:21Z", "message": "add more debug logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e697c77e91fd8e12350fdbaedf97eb37fe8aef83", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/e697c77e91fd8e12350fdbaedf97eb37fe8aef83", "committedDate": "2020-12-16T01:25:56Z", "message": "try something else to narrow down this problem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "876022cbc6310a755ecef872b48696d1517e4672", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/876022cbc6310a755ecef872b48696d1517e4672", "committedDate": "2020-12-16T03:18:02Z", "message": "clean up output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "916032ea86912e7b748d3b971eb1edc07a348f68", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/916032ea86912e7b748d3b971eb1edc07a348f68", "committedDate": "2020-12-16T05:54:40Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a3e124b25be0aec4f0c72c0fb5603c75e68085a", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/3a3e124b25be0aec4f0c72c0fb5603c75e68085a", "committedDate": "2020-12-16T15:32:51Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cec421b65c3209d64864ac573554b5575be391ee", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/cec421b65c3209d64864ac573554b5575be391ee", "committedDate": "2020-12-16T17:16:37Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NzIyMzE1", "url": "https://github.com/typetools/checker-framework/pull/3824#pullrequestreview-554722315", "createdAt": "2020-12-17T15:36:43Z", "commit": {"oid": "cec421b65c3209d64864ac573554b5575be391ee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a461500211dae3917999dacf246eeda49a4575cf", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/a461500211dae3917999dacf246eeda49a4575cf", "committedDate": "2020-10-23T01:14:44Z", "message": "wpi-many scripts and documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cd9a8122db6ca44103967dd5d054a52734f2cb5", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/6cd9a8122db6ca44103967dd5d054a52734f2cb5", "committedDate": "2020-10-23T01:34:22Z", "message": "tabs to spaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35ddecad9dfa4083f8c717431c150d420f964819", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/35ddecad9dfa4083f8c717431c150d420f964819", "committedDate": "2020-10-24T14:15:38Z", "message": "Exceptions to formatting rules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da50538fb35c996f134dba1fe489e823df531d53", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/da50538fb35c996f134dba1fe489e823df531d53", "committedDate": "2020-10-24T14:16:00Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "569838f6396f7dcb87616d02fbcddafc1858c6d5", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/569838f6396f7dcb87616d02fbcddafc1858c6d5", "committedDate": "2020-10-24T16:23:34Z", "message": "Revamp documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dc868592de4060ed3aa927930d68869cff72feb", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/4dc868592de4060ed3aa927930d68869cff72feb", "committedDate": "2020-10-24T16:28:56Z", "message": "Paste in output of onerous commands"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85fd788700b28972e9792c7d5bfced2e7932c039", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/85fd788700b28972e9792c7d5bfced2e7932c039", "committedDate": "2020-10-24T16:50:04Z", "message": "Cleanups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2Mjg5ODYx", "url": "https://github.com/typetools/checker-framework/pull/3824#pullrequestreview-516289861", "createdAt": "2020-10-24T16:30:08Z", "commit": {"oid": "4dc868592de4060ed3aa927930d68869cff72feb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxNjozMDowOFrOHny2aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxNjo1MToxOFrOHny9rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ4OTY0MQ==", "bodyText": "The dljc usage string does not include --checker as a permitted command-line option.", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r511489641", "createdAt": "2020-10-24T16:30:08Z", "author": {"login": "mernst"}, "path": "docs/manual/inference.tex", "diffHunk": "@@ -140,46 +142,86 @@\n least upper bound of the types of all the expressions that are assigned\n into the field.\n \n-\\begin{sloppypar}\n-To use whole-program inference, make sure that\n-\\<insert-annotations-to-source>, from the Annotation File Utilities project,\n-is on your path (for example, its directory is in the \\<\\$PATH> environment variable).\n-Then, run the script \\<checker-framework/checker/bin/infer-and-annotate.sh>.\n-Its command-line arguments are:\n-\\end{sloppypar}\n+To run whole-program inference on a single project, use the \\<wpi.sh>\n+script (Section~\\ref{wpi-one}).  To run it on many projects (say, when\n+running it on projects from GitHub), use the \\<wpi-many.sh> script\n+(Section~\\ref{wpi-one}).  All WPI-related scripts appear in the\n+\\<checker/bin/> directory.\n \n-\\begin{enumerate}\n-\\item Optional: Command-line arguments to\n-  \\href{https://checkerframework.org/annotation-file-utilities/#insert-annotations-to-source}{\\<insert-annotations-to-source>}.\n-\\item Processor's name.\n-\\item Target program's classpath.  This argument is required; pass \"\" if it\n-  is empty.\n-\\item Optional: Extra processor arguments which will be passed to the checker, if any.\n-  You may supply any number of such arguments, or none.  Each such argument\n-  must start with a hyphen.\n-\\item Optional: Paths to \\<.jaif> files used as input in the inference\n-    process.\n-\\item Paths to \\<.java> files in the program.\n-\\end{enumerate}\n+Here are requirements to run the scripts:\n+\n+\\begin{itemize}\n+\\item The project on which inference is run must contain an Ant, Gradle,\n+  or Maven buildfile that compiles the project.\n+\\item \\verb|JAVA8_HOME| environment variable must point to a Java 8 JDK.\n+\\item \\verb|JAVA11_HOME| environment variable must point to a Java 11 JDK.\n+\\item \\<CHECKERFRAMEWORK> environment variable must point to a built copy of the Checker Framework.\n+\\item Other dependencies:\n+  ant,\n+  awk,\n+  curl,\n+  git,\n+  gradle,\n+  mvn,\n+  python2.7 (for dljc),\n+  wget.\n+\n+  Python2.7 modules:\n+  subprocess32.\n+\\end{itemize}\n+\n+\n+\\subsectionAndLabel{Running whole-program inference on a single project}{wpi-one}\n+\n+A typical invocation of whole-program inference is\n+\n+\\begin{Verbatim}\n+  wpi.sh -d . -- --checker nullness\n+\\end{Verbatim}\n+\n+TODO: What is the result?  A log file?  Placed where?\n+\n+The full syntax for invoking \\<wpi.sh> is\n \n-% TODO: Change the example project that is being annotated, since plume-lib is now deprecated.\n-For example, to add annotations to the \\<plume-lib> project:\n \\begin{Verbatim}\n-git clone https://github.com/mernst/plume-lib.git\n-cd plume-lib\n-make jar\n-$CHECKERFRAMEWORK/checker/bin/infer-and-annotate.sh \\\n-    \"LockChecker,NullnessChecker\" java/plume.jar:java/lib/junit-4.12.jar:$JAVA_HOME/lib/tools.jar \\\n-    `find java/src/plume/ -name \"*.java\"`\n-# View the results\n-git diff\n+  wpi.sh -d PROJECTDIR [-t TIMEOUT] -- [DLJC-ARGS]\n+\\end{Verbatim}\n+\n+Arguments in square brackets are optional.\n+Here is an explanation of the arguments:\n+\n+\\begin{description}\n+\\item[-d PROJECTDIR]\n+  The top-level directory of the project.  It must contain an Ant, Gradle,\n+  or Maven buildfile.\n+\n+\\item[-t TIMEOUT]\n+  The timeout for running the checker, in seconds\n+\n+\\item[DLJC-ARGS]\n+  Arguments that are passed directly to\n+  \\ahref{https://github.com/kelloggm/do-like-javac}{do-like-javac}'s\n+  \\<dljc> program without\n+  modification.  One argument is required: \\<--checker>, which indicates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dc868592de4060ed3aa927930d68869cff72feb"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ4OTY5Nw==", "bodyText": "Is the -d command-line argument to wpi.sh needed?\nHere are two ideas, either of which may simplify invocation of the script:\n\nMake it optional, using the current directory if not supplied.\nRemove it, and take the directory as the first non-command-line argument.  Then there is no need for the -- on the wpi.sh command line, either.", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r511489697", "createdAt": "2020-10-24T16:30:57Z", "author": {"login": "mernst"}, "path": "checker/bin/wpi.sh", "diffHunk": "@@ -0,0 +1,170 @@\n+#!/bin/bash\n+\n+# This script performs whole-program inference on a project directory.\n+\n+# For usage and requirements, see the \"Whole-program inference\"\n+# section of the Checker Framework manual:\n+# https://checkerframework.org/manual/#whole-program-inference\n+\n+\n+while getopts \"d:u:t:\" opt; do\n+  case $opt in\n+    d) DIR=\"$OPTARG\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dc868592de4060ed3aa927930d68869cff72feb"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ5MTUwMQ==", "bodyText": "Running wpi.sh creates a new directory checker/do-like-javac/.\n\nPlease put it under checker/bin/.\nStart the name with a period, as is done for the clone of plume-scripts and run-google-java-format in checker/bin-devel.\nPut it in the .gitignore", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r511491501", "createdAt": "2020-10-24T16:51:18Z", "author": {"login": "mernst"}, "path": "checker/bin/wpi.sh", "diffHunk": "@@ -0,0 +1,170 @@\n+#!/bin/bash\n+\n+# This script performs whole-program inference on a project directory.\n+\n+# For usage and requirements, see the \"Whole-program inference\"\n+# section of the Checker Framework manual:\n+# https://checkerframework.org/manual/#whole-program-inference\n+\n+\n+while getopts \"d:t:\" opt; do\n+  case $opt in\n+    d) DIR=\"$OPTARG\"\n+       ;;\n+    t) TIMEOUT=\"$OPTARG\"\n+       ;;\n+    \\?) # echo \"Invalid option -$OPTARG\" >&2\n+       ;;\n+  esac\n+done\n+\n+# Make $@ be the arguments that should be passed to dljc.\n+shift $(( OPTIND - 1 ))\n+\n+# check required arguments and environment variables:\n+\n+# Testing for JAVA8_HOME, not a misspelling of JAVA_HOME.\n+# shellcheck disable=SC2153\n+if [ \"x${JAVA8_HOME}\" = \"x\" ]; then\n+    echo \"JAVA8_HOME must be set to a Java 8 JDK\"\n+    exit 1\n+fi\n+\n+if [ ! -d \"${JAVA8_HOME}\" ]; then\n+    echo \"JAVA8_HOME is set to a non-existent directory ${JAVA8_HOME}\"\n+    exit 1\n+fi\n+\n+# Testing for JAVA11_HOME, not a misspelling of JAVA_HOME.\n+# shellcheck disable=SC2153\n+if [ \"x${JAVA11_HOME}\" = \"x\" ]; then\n+    echo \"JAVA11_HOME must be set to a Java 11 JDK\"\n+    exit 1\n+fi\n+\n+if [ ! -d \"${JAVA11_HOME}\" ]; then\n+    echo \"JAVA11_HOME is set to a non-existent directory ${JAVA11_HOME}\"\n+    exit 1\n+fi\n+\n+JAVA_HOME=\"${JAVA11_HOME}\"\n+\n+if [ \"x${CHECKERFRAMEWORK}\" = \"x\" ]; then\n+    echo \"CHECKERFRAMEWORK is not set; it must be set to a locally-built Checker Framework. Please clone and build github.com/typetools/checker-framework\"\n+    exit 2\n+fi\n+\n+if [ ! -d \"${CHECKERFRAMEWORK}\" ]; then\n+    echo \"CHECKERFRAMEWORK is set to a non-existent directory ${CHECKERFRAMEWORK}\"\n+    exit 2\n+fi\n+\n+if [ \"x${DIR}\" = \"x\" ]; then\n+    echo \"wpi.sh was called without a -d argument. The -d argument must be the absolute path to the directory containing the project on which to run WPI.\"\n+    exit 4\n+fi\n+\n+if [ ! -d \"${DIR}\" ]; then\n+    echo \"wpi.sh's -d argument was not a directory: ${DIR}\"\n+    exit 4\n+fi\n+\n+function configure_and_exec_dljc {\n+\n+  if [ -f build.gradle ]; then\n+      if [ -f gradlew ]; then\n+    chmod +x gradlew\n+    GRADLE_EXEC=\"./gradlew\"\n+      else\n+    GRADLE_EXEC=\"gradle\"\n+      fi\n+      CLEAN_CMD=\"${GRADLE_EXEC} clean -g .gradle -Dorg.gradle.java.home=${JAVA_HOME}\"\n+      BUILD_CMD=\"${GRADLE_EXEC} clean compileJava -g .gradle -Dorg.gradle.java.home=${JAVA_HOME}\"\n+  elif [ -f pom.xml ]; then\n+      if [ -f mvnw ]; then\n+    chmod +x mvnw\n+    MVN_EXEC=\"./mvnw\"\n+      else\n+    MVN_EXEC=\"mvn\"\n+      fi\n+      # if running on java 8, need /jre at the end of this Maven command\n+      if [ \"${JAVA_HOME}\" = \"${JAVA8_HOME}\" ]; then\n+          CLEAN_CMD=\"${MVN_EXEC} clean -Djava.home=${JAVA_HOME}/jre\"\n+          BUILD_CMD=\"${MVN_EXEC} clean compile -Djava.home=${JAVA_HOME}/jre\"\n+      else\n+          CLEAN_CMD=\"${MVN_EXEC} clean -Djava.home=${JAVA_HOME}\"\n+          BUILD_CMD=\"${MVN_EXEC} clean compile -Djava.home=${JAVA_HOME}\"\n+      fi\n+  else\n+      echo \"no build file found for ${REPO_NAME}; not calling DLJC\"\n+      WPI_RESULTS_AVAILABLE=\"no\"\n+      return\n+  fi\n+\n+  DLJC_CMD=\"${DLJC} -t wpi $* -- ${BUILD_CMD}\"\n+\n+  if [ ! \"x${TIMEOUT}\" = \"x\" ]; then\n+      TMP=\"${DLJC_CMD}\"\n+      DLJC_CMD=\"timeout ${TIMEOUT} ${TMP}\"\n+  fi\n+\n+  # Remove old DLJC output.\n+  rm -rf dljc-out\n+\n+  # ensure the project is clean before invoking DLJC\n+  eval \"${CLEAN_CMD}\" < /dev/null\n+\n+  echo \"${DLJC_CMD}\"\n+\n+  # This command also includes \"clean\"; I'm not sure why it is necessary.\n+  eval \"${DLJC_CMD}\" < /dev/null\n+\n+  if [[ $? -eq 124 ]]; then\n+      echo \"dljc timed out for ${DIR}\"\n+      WPI_RESULTS_AVAILABLE=\"no\"\n+      return\n+  fi\n+\n+  if [ -f dljc-out/wpi.log ]; then\n+      WPI_RESULTS_AVAILABLE=\"yes\"\n+  else\n+      WPI_RESULTS_AVAILABLE=\"no\"\n+  fi\n+}\n+\n+#### Check and setup dependencies\n+\n+SCRIPTDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+# clone or update DLJC\n+if [ ! -d \"${SCRIPTDIR}/../do-like-javac\" ]; then", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85fd788700b28972e9792c7d5bfced2e7932c039"}, "originalPosition": 140}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eed3d96ddb6153fc8dac2d8bdf95b5361d3b287c", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/eed3d96ddb6153fc8dac2d8bdf95b5361d3b287c", "committedDate": "2020-10-24T17:16:51Z", "message": "Remove '$'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c492cdf140143697d16179af5533340b365b0886", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/c492cdf140143697d16179af5533340b365b0886", "committedDate": "2020-10-24T17:19:36Z", "message": "Fix LaTeX errorrs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1df8e89e8a4f3abe4f574d52d08aedbfac5cd9d4", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/1df8e89e8a4f3abe4f574d52d08aedbfac5cd9d4", "committedDate": "2020-10-27T17:09:03Z", "message": "Merge branch 'master' of github.com:typetools/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c359d857b8c3b39007e6385af2e9bc79e0a82c8", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/5c359d857b8c3b39007e6385af2e9bc79e0a82c8", "committedDate": "2020-10-27T17:24:33Z", "message": "Merge branch 'wpi-many' of github.com:kelloggm/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf5e527e1dd42026f34ed1e6f33fa1a7acc180ca", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/bf5e527e1dd42026f34ed1e6f33fa1a7acc180ca", "committedDate": "2020-10-27T18:22:15Z", "message": "fix latex typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0dc8c66837cda8b7b76dd28896c66f4ee076f62", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/a0dc8c66837cda8b7b76dd28896c66f4ee076f62", "committedDate": "2020-10-27T22:26:15Z", "message": "Fix LaTeX error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b739a9aa9c73f9d2f5a423eaf6e624360bb3b98", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/6b739a9aa9c73f9d2f5a423eaf6e624360bb3b98", "committedDate": "2020-10-28T00:31:09Z", "message": "rewrite inference.tex, and other changes from code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7068748f9d5727aa17a58ea21816222ac4fb8ed6", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/7068748f9d5727aa17a58ea21816222ac4fb8ed6", "committedDate": "2020-10-28T00:31:14Z", "message": "Merge branch 'wpi-many' of github.com:kelloggm/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3cc2369ec9e4c359aabc77b43e6e026fdcb60e6", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/f3cc2369ec9e4c359aabc77b43e6e026fdcb60e6", "committedDate": "2020-10-28T00:37:36Z", "message": "Update changelog.txt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "534747c54a3128e0ba19e5a59c7f580c8bae6f2e", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/534747c54a3128e0ba19e5a59c7f580c8bae6f2e", "committedDate": "2020-10-29T21:30:59Z", "message": "Document why nested class is not static"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3abd7a965756e3433a432e6f3791a8b00158b528", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/3abd7a965756e3433a432e6f3791a8b00158b528", "committedDate": "2020-10-29T22:58:55Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "321d8d36080d5f8ce268ee4182949061510bb701", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/321d8d36080d5f8ce268ee4182949061510bb701", "committedDate": "2020-10-30T03:14:14Z", "message": "Merge branch 'master' of github.com:typetools/checker-framework"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12c74c8aee6e53843872c8ee5c4e50bfeb54883b", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/12c74c8aee6e53843872c8ee5c4e50bfeb54883b", "committedDate": "2020-10-30T05:02:01Z", "message": "Move local type inference out of type inference chapter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ba103323b7a97dab70e5bd166d1befc53a2ac4e", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/2ba103323b7a97dab70e5bd166d1befc53a2ac4e", "committedDate": "2020-10-30T15:50:36Z", "message": "Edits to type inference section of manual"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODIyODQ3", "url": "https://github.com/typetools/checker-framework/pull/3824#pullrequestreview-520822847", "createdAt": "2020-10-30T16:13:48Z", "commit": {"oid": "2ba103323b7a97dab70e5bd166d1befc53a2ac4e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoxMzo0OFrOHrWKmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjoxNToxOVrOHrWOYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxMzk3OQ==", "bodyText": "Can you further explain \"each candidate set of annotations\"?  Is that from each iteration of type-checking?  Users only want to see the results of the final iteration.  Say how to see that.", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r515213979", "createdAt": "2020-10-30T16:13:48Z", "author": {"login": "mernst"}, "path": "docs/manual/inference.tex", "diffHunk": "@@ -126,22 +92,209 @@\n Cascade applies it.  Cascade works with any checker built on the Checker\n Framework.\n You can find installation instructions and a video tutorial at \\url{https://github.com/reprogrammer/cascade}.\n+% See last commit at https://github.com/reprogrammer/cascade/commits/master .\n+Cascade was last updated in November 2014, so it might or might not work for you.\n+\n+\\end{description}\n+\n+Except for one of the nullness inference tools, all these\n+type inference tools are static analyses.  They analyze your program's\n+source code, but they do not run your program.\n \n \n \\sectionAndLabel{Whole-program inference}{whole-program-inference}\n \n-Whole-program inference is an interprocedural inference that\n+Whole-program inference\n infers types for fields, method parameters, and method return types that do not\n have a user-written qualifier (for the given type system).\n-The inferred type qualifiers are inserted into\n-your program.\n+The inferred type qualifiers are output into annotation files.\n The inferred type is the most specific type that is compatible with all the\n uses in the program.  For example, the inferred type for a field is the\n least upper bound of the types of all the expressions that are assigned\n into the field.\n \n+There are three scripts that you can use to run whole-program inference.\n+Each has advantages and disadvantages, discussed below:\n+\n+\\begin{itemize}\n+    \\item\n+    To run whole-program inference on a single project without modifying its source code,\n+    use the \\<wpi.sh> script (Section~\\ref{wpi-one}). This script can automatically understand\n+    many Ant, Maven, and Gradle build files, so it requires little manual configuration.\n+\n+    \\item\n+    To run whole-program inference on many projects without modifying their source code\n+    (say, when running it on projects from GitHub), use the \\<wpi-many.sh> script (Section~\\ref{wpi-many}).\n+    This script can understand the same build files as \\<wpi.sh>.\n+\n+    \\item\n+    If you want to insert the inferred annotations directly into a single\n+    project's source code, use the \\<infer-and-annotate.sh> script (Section~\\ref{wpi-insert}).\n+\\end{itemize}\n+\n+These type inference scripts appear in the \\<checker/bin/> directory.\n+The remainder of this chapter describes them\n+(Sections~\\ref{wpi-one}--\\ref{wpi-insert}), then concludes with discussion\n+that applies to all of them.x\n+\n+\n+\\sectionAndLabel{Running whole-program inference on a single project}{wpi-one}\n+\n+A typical invocation of \\<wpi.sh> is\n+\n+\\begin{Verbatim}\n+  wpi.sh -- --checker nullness\n+\\end{Verbatim}\n+\n+The result is a set of log files placed in the \\<dljc-out> folder of the\n+target project. The results of type-checking with each candidate set of", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba103323b7a97dab70e5bd166d1befc53a2ac4e"}, "originalPosition": 237}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxNDk0NA==", "bodyText": "This text belongs in the \"single project\" section, I think.  This text also differs slightly from what is already there.  Please move the text and reconcile the versions.", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r515214944", "createdAt": "2020-10-30T16:15:19Z", "author": {"login": "mernst"}, "path": "docs/manual/inference.tex", "diffHunk": "@@ -126,22 +92,209 @@\n Cascade applies it.  Cascade works with any checker built on the Checker\n Framework.\n You can find installation instructions and a video tutorial at \\url{https://github.com/reprogrammer/cascade}.\n+% See last commit at https://github.com/reprogrammer/cascade/commits/master .\n+Cascade was last updated in November 2014, so it might or might not work for you.\n+\n+\\end{description}\n+\n+Except for one of the nullness inference tools, all these\n+type inference tools are static analyses.  They analyze your program's\n+source code, but they do not run your program.\n \n \n \\sectionAndLabel{Whole-program inference}{whole-program-inference}\n \n-Whole-program inference is an interprocedural inference that\n+Whole-program inference\n infers types for fields, method parameters, and method return types that do not\n have a user-written qualifier (for the given type system).\n-The inferred type qualifiers are inserted into\n-your program.\n+The inferred type qualifiers are output into annotation files.\n The inferred type is the most specific type that is compatible with all the\n uses in the program.  For example, the inferred type for a field is the\n least upper bound of the types of all the expressions that are assigned\n into the field.\n \n+There are three scripts that you can use to run whole-program inference.\n+Each has advantages and disadvantages, discussed below:\n+\n+\\begin{itemize}\n+    \\item\n+    To run whole-program inference on a single project without modifying its source code,\n+    use the \\<wpi.sh> script (Section~\\ref{wpi-one}). This script can automatically understand\n+    many Ant, Maven, and Gradle build files, so it requires little manual configuration.\n+\n+    \\item\n+    To run whole-program inference on many projects without modifying their source code\n+    (say, when running it on projects from GitHub), use the \\<wpi-many.sh> script (Section~\\ref{wpi-many}).\n+    This script can understand the same build files as \\<wpi.sh>.\n+\n+    \\item\n+    If you want to insert the inferred annotations directly into a single\n+    project's source code, use the \\<infer-and-annotate.sh> script (Section~\\ref{wpi-insert}).\n+\\end{itemize}\n+\n+These type inference scripts appear in the \\<checker/bin/> directory.\n+The remainder of this chapter describes them\n+(Sections~\\ref{wpi-one}--\\ref{wpi-insert}), then concludes with discussion\n+that applies to all of them.x\n+\n+\n+\\sectionAndLabel{Running whole-program inference on a single project}{wpi-one}\n+\n+A typical invocation of \\<wpi.sh> is\n+\n+\\begin{Verbatim}\n+  wpi.sh -- --checker nullness\n+\\end{Verbatim}\n+\n+The result is a set of log files placed in the \\<dljc-out> folder of the\n+target project. The results of type-checking with each candidate set of\n+annotations will be concatenated into the file \\<dljc-out/wpi.log>.\n+\n+The full syntax for invoking \\<wpi.sh> is\n+\n+\\begin{Verbatim}\n+  wpi.sh [-d PROJECTDIR] [-t TIMEOUT] -- [DLJC-ARGS]\n+\\end{Verbatim}\n+\n+Arguments in square brackets are optional.\n+Here is an explanation of the arguments:\n+\n+\\begin{description}\n+\\item[-d PROJECTDIR]\n+  The top-level directory of the project.  It must contain an Ant, Gradle,\n+  or Maven buildfile. The default is the current working directory.\n+\n+\\item[-t TIMEOUT]\n+  The timeout for running the checker, in seconds\n+\n+\\item[DLJC-ARGS]\n+  Arguments that are passed directly to\n+  \\ahref{https://github.com/kelloggm/do-like-javac}{do-like-javac}'s\n+  \\<dljc> program without\n+  modification.  One argument is required: \\<-\\relax-checker>, which indicates\n+  what type-checker to run (use the fully-qualified name of the checker).\n+  The \\ahrefforurl{https://github.com/kelloggm/do-like-javac}{documentation of do-like-javac}\n+  describes the other commands that its WPI tool supports.\n+\\end{description}\n+\n+You may need to wait a few minutes for the command to complete.\n+\n+\n+\\sectionAndLabel{Requirements for whole-program inference scripts}{wpi-shared-requirements}\n+\n+The requirements to run \\<wpi.sh> and \\<wpi-many.sh> are the same:\n+\n+\\begin{itemize}\n+\\item The project on which inference is run must contain an Ant, Gradle,\n+  or Maven buildfile that compiles the project.\n+\\item \\verb|JAVA8_HOME| environment variable must point to a Java 8 JDK.\n+\\item \\verb|JAVA11_HOME| environment variable must point to a Java 11 JDK.\n+\\item \\<CHECKERFRAMEWORK> environment variable must point to a built copy of the Checker Framework.\n+\\item Other dependencies:\n+  ant,\n+  awk,\n+  curl,\n+  git,\n+  gradle,\n+  mvn,\n+  python2.7 (for dljc),\n+  wget.\n+\n+  Python2.7 modules:\n+  subprocess32.\n+\\end{itemize}\n+\n+\n+\n+\\sectionAndLabel{Running whole-program inference on many projects}{wpi-many}\n+\n+The requirements to run \\<wpi.sh> and \\<wpi-many.sh> are the same. See Section~\\ref{wpi-shared-requirements}\n+for the list of requirements.\n+\n+To run an experiment on many projects:\n+\\begin{enumerate}\n+\\item Use \\<query-github.sh> to search GitHub for candidate repositories.\n+File \\<securerandom.query> is an example query, and file\n+\\<securerandom.list>\n+was created by running \\<query-github.sh securerandom.query 100>. If you do\n+not want to use GitHub, construct a file yourself that matches the format of\n+the file \\<securerandom.list>.\n+\n+\\item Use \\<wpi-many.sh> to run whole-program inference on every\n+Ant, Gradle, or Maven project in a list of (GitHub repository URL, git hash)\n+pairs.\n+\\begin{itemize}\n+\\item If you are using a checker that is distributed with the Checker\n+Framework, use \\<wpi-many.sh> directly.\n+\\item If you are using a checker that is not distributed with the Checker\n+Framework (also known as a \"custom checker\"), file\n+\\<custom-checker-example.sh> is a no-arguments\n+script that serves as an example of how to use \\<wpi-many.sh>.\n+\\end{itemize}\n+\n+Log files are copied into a results directory.\n+For a failed run, the log file indicates the reason that WPI could not", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ba103323b7a97dab70e5bd166d1befc53a2ac4e"}, "originalPosition": 323}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14fd50be9f6d5be5ed42c47eef6b69a591f68e28", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/14fd50be9f6d5be5ed42c47eef6b69a591f68e28", "committedDate": "2020-10-30T16:17:01Z", "message": "Fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a61f2e9ea11b0dd12ff7aa9aba060f344a62411", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/3a61f2e9ea11b0dd12ff7aa9aba060f344a62411", "committedDate": "2020-10-30T16:33:02Z", "message": "Remove redundancy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09cbc746e18c34604edda96678e84467dd420936", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/09cbc746e18c34604edda96678e84467dd420936", "committedDate": "2020-10-30T17:11:30Z", "message": "Restructure discussion of how inference results depend on the analyzed code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f8f036565a62c85d4125d257377726186640348", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/8f8f036565a62c85d4125d257377726186640348", "committedDate": "2020-10-30T17:11:59Z", "message": "Prefer \"type refinement\" over \"local type inference\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b64891835a4902b3facddadd2cab36d418a340a4", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/b64891835a4902b3facddadd2cab36d418a340a4", "committedDate": "2020-10-30T17:19:52Z", "message": "Remove more redundant discussion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d263bd76fcb420bc89b7360e23c8baceb8208db", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/0d263bd76fcb420bc89b7360e23c8baceb8208db", "committedDate": "2020-10-30T17:26:59Z", "message": "Remove an implementation detail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50dbf2030991cca6741348e841f0e4775ed0e0ae", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/50dbf2030991cca6741348e841f0e4775ed0e0ae", "committedDate": "2020-10-30T17:27:45Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "179c19122c3bb099954c0c053c76ff49877f9d10", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/179c19122c3bb099954c0c053c76ff49877f9d10", "committedDate": "2020-10-30T17:33:42Z", "message": "Tweaks to URLs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDAwNzQw", "url": "https://github.com/typetools/checker-framework/pull/3824#pullrequestreview-521000740", "createdAt": "2020-10-30T20:08:34Z", "commit": {"oid": "179c19122c3bb099954c0c053c76ff49877f9d10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDowODozNFrOHrejqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDowODozNFrOHrejqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1MTQ2NA==", "bodyText": "The -g .gradle command causes gradle to core dump, when the .gradle directory does not exist.  Is it needed?  Or, can it be supplied only if a .gradle/ directory exists?", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r515351464", "createdAt": "2020-10-30T20:08:34Z", "author": {"login": "mernst"}, "path": "checker/bin/wpi.sh", "diffHunk": "@@ -0,0 +1,175 @@\n+#!/bin/bash\n+\n+# This script performs whole-program inference on a project directory.\n+\n+# For usage and requirements, see the \"Whole-program inference\"\n+# section of the Checker Framework manual:\n+# https://checkerframework.org/manual/#whole-program-inference\n+\n+\n+while getopts \"d:t:\" opt; do\n+  case $opt in\n+    d) DIR=\"$OPTARG\"\n+       ;;\n+    t) TIMEOUT=\"$OPTARG\"\n+       ;;\n+    \\?) # echo \"Invalid option -$OPTARG\" >&2\n+       ;;\n+  esac\n+done\n+\n+# Make $@ be the arguments that should be passed to dljc.\n+shift $(( OPTIND - 1 ))\n+\n+# check required arguments and environment variables:\n+\n+# Testing for JAVA8_HOME, not a misspelling of JAVA_HOME.\n+# shellcheck disable=SC2153\n+if [ \"x${JAVA8_HOME}\" = \"x\" ]; then\n+    echo \"JAVA8_HOME must be set to a Java 8 JDK\"\n+    exit 1\n+fi\n+\n+if [ ! -d \"${JAVA8_HOME}\" ]; then\n+    echo \"JAVA8_HOME is set to a non-existent directory ${JAVA8_HOME}\"\n+    exit 1\n+fi\n+\n+# Testing for JAVA11_HOME, not a misspelling of JAVA_HOME.\n+# shellcheck disable=SC2153\n+if [ \"x${JAVA11_HOME}\" = \"x\" ]; then\n+    echo \"JAVA11_HOME must be set to a Java 11 JDK\"\n+    exit 1\n+fi\n+\n+if [ ! -d \"${JAVA11_HOME}\" ]; then\n+    echo \"JAVA11_HOME is set to a non-existent directory ${JAVA11_HOME}\"\n+    exit 1\n+fi\n+\n+JAVA_HOME=\"${JAVA11_HOME}\"\n+\n+if [ \"x${CHECKERFRAMEWORK}\" = \"x\" ]; then\n+    echo \"CHECKERFRAMEWORK is not set; it must be set to a locally-built Checker Framework. Please clone and build github.com/typetools/checker-framework\"\n+    exit 2\n+fi\n+\n+if [ ! -d \"${CHECKERFRAMEWORK}\" ]; then\n+    echo \"CHECKERFRAMEWORK is set to a non-existent directory ${CHECKERFRAMEWORK}\"\n+    exit 2\n+fi\n+\n+if [ \"x${DIR}\" = \"x\" ]; then\n+    echo \"wpi.sh was called without a -d argument. Running on the current directory instead.\"\n+    DIR=$(pwd)\n+fi\n+\n+if [ ! -d \"${DIR}\" ]; then\n+    echo \"wpi.sh's -d argument was not a directory: ${DIR}\"\n+    exit 4\n+fi\n+\n+function configure_and_exec_dljc {\n+\n+  if [ -f build.gradle ]; then\n+      if [ -f gradlew ]; then\n+    chmod +x gradlew\n+    GRADLE_EXEC=\"./gradlew\"\n+      else\n+    GRADLE_EXEC=\"gradle\"\n+      fi\n+      CLEAN_CMD=\"${GRADLE_EXEC} clean -g .gradle -Dorg.gradle.java.home=${JAVA_HOME}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "179c19122c3bb099954c0c053c76ff49877f9d10"}, "originalPosition": 81}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89fd6f47c71bc13754ad6da2b35aeca84a75a050", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/89fd6f47c71bc13754ad6da2b35aeca84a75a050", "committedDate": "2020-10-30T20:09:01Z", "message": "Fix directories"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cae815c2952ac49ff277d15868493f9208647ace", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/cae815c2952ac49ff277d15868493f9208647ace", "committedDate": "2020-10-30T20:11:17Z", "message": "Add `remove-annotations.sh` script that removes all Checker Framework annotations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDA1MzIz", "url": "https://github.com/typetools/checker-framework/pull/3824#pullrequestreview-521005323", "createdAt": "2020-10-30T20:16:44Z", "commit": {"oid": "cae815c2952ac49ff277d15868493f9208647ace"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxNjo0NFrOHrew7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxNjo0NFrOHrew7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NDg2MA==", "bodyText": "https://github.com/kelloggm/do-like-javac says:\n\nThe --checker option is required. Its argument is the fully-qualified name of the checker you want to run.\n\nCan --checker be supplied multiple times?  Or can I supply multiple checkers in comma-separated form, as in javac's -processor argument (https://checkerframework.org/manual/#shorthand-for-checkers)?\n(Please fix that in do-like-javac rather than here, though this text might need to be tweaked slightly.)", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r515354860", "createdAt": "2020-10-30T20:16:44Z", "author": {"login": "mernst"}, "path": "docs/manual/inference.tex", "diffHunk": "@@ -126,22 +84,209 @@\n Cascade applies it.  Cascade works with any checker built on the Checker\n Framework.\n You can find installation instructions and a video tutorial at \\url{https://github.com/reprogrammer/cascade}.\n+% See last commit at https://github.com/reprogrammer/cascade/commits/master .\n+Cascade was last updated in November 2014, so it might or might not work for you.\n+\n+\\end{description}\n+\n+Except for one of the nullness inference tools, all these\n+type inference tools are static analyses.  They analyze your program's\n+source code, but they do not run your program.\n \n \n \\sectionAndLabel{Whole-program inference}{whole-program-inference}\n \n-Whole-program inference is an interprocedural inference that\n+Whole-program inference\n infers types for fields, method parameters, and method return types that do not\n have a user-written qualifier (for the given type system).\n-The inferred type qualifiers are inserted into\n-your program.\n+The inferred type qualifiers are output into annotation files.\n The inferred type is the most specific type that is compatible with all the\n uses in the program.  For example, the inferred type for a field is the\n least upper bound of the types of all the expressions that are assigned\n into the field.\n \n+There are three scripts that you can use to run whole-program inference.\n+Each has advantages and disadvantages, discussed below:\n+\n+\\begin{itemize}\n+    \\item\n+    To run whole-program inference on a single project without modifying its source code,\n+    use the \\<wpi.sh> script (Section~\\ref{wpi-one}). This script can automatically understand\n+    many Ant, Maven, and Gradle build files, so it requires little manual configuration.\n+\n+    \\item\n+    To run whole-program inference on many projects without modifying their source code\n+    (say, when running it on projects from GitHub), use the \\<wpi-many.sh> script (Section~\\ref{wpi-many}).\n+    This script can understand the same build files as \\<wpi.sh>.\n+\n+    \\item\n+    If you want to insert the inferred annotations directly into a single\n+    project's source code, use the \\<infer-and-annotate.sh> script (Section~\\ref{wpi-insert}).\n+\\end{itemize}\n+\n+These type inference scripts appear in the \\<checker/bin/> directory.\n+The remainder of this chapter describes them\n+(Sections~\\ref{wpi-one}--\\ref{wpi-insert}), then concludes with discussion\n+that applies to all of them.x\n+\n+\n+\\sectionAndLabel{Running whole-program inference on a single project}{wpi-one}\n+\n+A typical invocation of \\<wpi.sh> is\n+\n+\\begin{Verbatim}\n+  wpi.sh -- --checker nullness\n+\\end{Verbatim}\n+\n+The result is a set of log files placed in the \\<dljc-out> folder of the\n+target project. The results of type-checking with each candidate set of\n+annotations will be concatenated into the file \\<dljc-out/wpi.log>.\n+\n+The full syntax for invoking \\<wpi.sh> is\n+\n+\\begin{Verbatim}\n+  wpi.sh [-d PROJECTDIR] [-t TIMEOUT] -- [DLJC-ARGS]\n+\\end{Verbatim}\n+\n+Arguments in square brackets are optional.\n+Here is an explanation of the arguments:\n+\n+\\begin{description}\n+\\item[-d PROJECTDIR]\n+  The top-level directory of the project.  It must contain an Ant, Gradle,\n+  or Maven buildfile. The default is the current working directory.\n+\n+\\item[-t TIMEOUT]\n+  The timeout for running the checker, in seconds\n+\n+\\item[DLJC-ARGS]\n+  Arguments that are passed directly to\n+  \\ahref{https://github.com/kelloggm/do-like-javac}{do-like-javac}'s\n+  \\<dljc> program without\n+  modification.  One argument is required: \\<-\\relax-checker>, which indicates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae815c2952ac49ff277d15868493f9208647ace"}, "originalPosition": 252}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDA1NTc0", "url": "https://github.com/typetools/checker-framework/pull/3824#pullrequestreview-521005574", "createdAt": "2020-10-30T20:17:13Z", "commit": {"oid": "cae815c2952ac49ff277d15868493f9208647ace"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxNzoxM1rOHrexqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxNzoxM1rOHrexqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NTA1MA==", "bodyText": "It seems to work to use shorthands as described in https://checkerframework.org/manual/#shorthand-for-checkers .", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r515355050", "createdAt": "2020-10-30T20:17:13Z", "author": {"login": "mernst"}, "path": "docs/manual/inference.tex", "diffHunk": "@@ -126,22 +84,209 @@\n Cascade applies it.  Cascade works with any checker built on the Checker\n Framework.\n You can find installation instructions and a video tutorial at \\url{https://github.com/reprogrammer/cascade}.\n+% See last commit at https://github.com/reprogrammer/cascade/commits/master .\n+Cascade was last updated in November 2014, so it might or might not work for you.\n+\n+\\end{description}\n+\n+Except for one of the nullness inference tools, all these\n+type inference tools are static analyses.  They analyze your program's\n+source code, but they do not run your program.\n \n \n \\sectionAndLabel{Whole-program inference}{whole-program-inference}\n \n-Whole-program inference is an interprocedural inference that\n+Whole-program inference\n infers types for fields, method parameters, and method return types that do not\n have a user-written qualifier (for the given type system).\n-The inferred type qualifiers are inserted into\n-your program.\n+The inferred type qualifiers are output into annotation files.\n The inferred type is the most specific type that is compatible with all the\n uses in the program.  For example, the inferred type for a field is the\n least upper bound of the types of all the expressions that are assigned\n into the field.\n \n+There are three scripts that you can use to run whole-program inference.\n+Each has advantages and disadvantages, discussed below:\n+\n+\\begin{itemize}\n+    \\item\n+    To run whole-program inference on a single project without modifying its source code,\n+    use the \\<wpi.sh> script (Section~\\ref{wpi-one}). This script can automatically understand\n+    many Ant, Maven, and Gradle build files, so it requires little manual configuration.\n+\n+    \\item\n+    To run whole-program inference on many projects without modifying their source code\n+    (say, when running it on projects from GitHub), use the \\<wpi-many.sh> script (Section~\\ref{wpi-many}).\n+    This script can understand the same build files as \\<wpi.sh>.\n+\n+    \\item\n+    If you want to insert the inferred annotations directly into a single\n+    project's source code, use the \\<infer-and-annotate.sh> script (Section~\\ref{wpi-insert}).\n+\\end{itemize}\n+\n+These type inference scripts appear in the \\<checker/bin/> directory.\n+The remainder of this chapter describes them\n+(Sections~\\ref{wpi-one}--\\ref{wpi-insert}), then concludes with discussion\n+that applies to all of them.x\n+\n+\n+\\sectionAndLabel{Running whole-program inference on a single project}{wpi-one}\n+\n+A typical invocation of \\<wpi.sh> is\n+\n+\\begin{Verbatim}\n+  wpi.sh -- --checker nullness\n+\\end{Verbatim}\n+\n+The result is a set of log files placed in the \\<dljc-out> folder of the\n+target project. The results of type-checking with each candidate set of\n+annotations will be concatenated into the file \\<dljc-out/wpi.log>.\n+\n+The full syntax for invoking \\<wpi.sh> is\n+\n+\\begin{Verbatim}\n+  wpi.sh [-d PROJECTDIR] [-t TIMEOUT] -- [DLJC-ARGS]\n+\\end{Verbatim}\n+\n+Arguments in square brackets are optional.\n+Here is an explanation of the arguments:\n+\n+\\begin{description}\n+\\item[-d PROJECTDIR]\n+  The top-level directory of the project.  It must contain an Ant, Gradle,\n+  or Maven buildfile. The default is the current working directory.\n+\n+\\item[-t TIMEOUT]\n+  The timeout for running the checker, in seconds\n+\n+\\item[DLJC-ARGS]\n+  Arguments that are passed directly to\n+  \\ahref{https://github.com/kelloggm/do-like-javac}{do-like-javac}'s\n+  \\<dljc> program without\n+  modification.  One argument is required: \\<-\\relax-checker>, which indicates\n+  what type-checker to run (use the fully-qualified name of the checker).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae815c2952ac49ff277d15868493f9208647ace"}, "originalPosition": 253}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDA2NTYw", "url": "https://github.com/typetools/checker-framework/pull/3824#pullrequestreview-521006560", "createdAt": "2020-10-30T20:19:05Z", "commit": {"oid": "cae815c2952ac49ff277d15868493f9208647ace"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxOTowNVrOHre0eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoxOTowNVrOHre0eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NTc2OA==", "bodyText": "It is distracting and confusing that the pushd and popd commands produce user-visible output.", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r515355768", "createdAt": "2020-10-30T20:19:05Z", "author": {"login": "mernst"}, "path": "checker/bin/wpi.sh", "diffHunk": "@@ -0,0 +1,174 @@\n+#!/bin/bash\n+\n+# This script performs whole-program inference on a project directory.\n+\n+# For usage and requirements, see the \"Whole-program inference\"\n+# section of the Checker Framework manual:\n+# https://checkerframework.org/manual/#whole-program-inference\n+\n+\n+while getopts \"d:t:\" opt; do\n+  case $opt in\n+    d) DIR=\"$OPTARG\"\n+       ;;\n+    t) TIMEOUT=\"$OPTARG\"\n+       ;;\n+    \\?) # echo \"Invalid option -$OPTARG\" >&2\n+       ;;\n+  esac\n+done\n+\n+# Make $@ be the arguments that should be passed to dljc.\n+shift $(( OPTIND - 1 ))\n+\n+# check required arguments and environment variables:\n+\n+# Testing for JAVA8_HOME, not a misspelling of JAVA_HOME.\n+# shellcheck disable=SC2153\n+if [ \"x${JAVA8_HOME}\" = \"x\" ]; then\n+    echo \"JAVA8_HOME must be set to a Java 8 JDK\"\n+    exit 1\n+fi\n+\n+if [ ! -d \"${JAVA8_HOME}\" ]; then\n+    echo \"JAVA8_HOME is set to a non-existent directory ${JAVA8_HOME}\"\n+    exit 1\n+fi\n+\n+# Testing for JAVA11_HOME, not a misspelling of JAVA_HOME.\n+# shellcheck disable=SC2153\n+if [ \"x${JAVA11_HOME}\" = \"x\" ]; then\n+    echo \"JAVA11_HOME must be set to a Java 11 JDK\"\n+    exit 1\n+fi\n+\n+if [ ! -d \"${JAVA11_HOME}\" ]; then\n+    echo \"JAVA11_HOME is set to a non-existent directory ${JAVA11_HOME}\"\n+    exit 1\n+fi\n+\n+JAVA_HOME=\"${JAVA11_HOME}\"\n+\n+if [ \"x${CHECKERFRAMEWORK}\" = \"x\" ]; then\n+    echo \"CHECKERFRAMEWORK is not set; it must be set to a locally-built Checker Framework. Please clone and build github.com/typetools/checker-framework\"\n+    exit 2\n+fi\n+\n+if [ ! -d \"${CHECKERFRAMEWORK}\" ]; then\n+    echo \"CHECKERFRAMEWORK is set to a non-existent directory ${CHECKERFRAMEWORK}\"\n+    exit 2\n+fi\n+\n+if [ \"x${DIR}\" = \"x\" ]; then\n+    echo \"wpi.sh: no -d argument supplied, using the current directory.\"\n+    DIR=$(pwd)\n+fi\n+\n+if [ ! -d \"${DIR}\" ]; then\n+    echo \"wpi.sh's -d argument was not a directory: ${DIR}\"\n+    exit 4\n+fi\n+\n+function configure_and_exec_dljc {\n+\n+  if [ -f build.gradle ]; then\n+      if [ -f gradlew ]; then\n+    chmod +x gradlew\n+    GRADLE_EXEC=\"./gradlew\"\n+      else\n+    GRADLE_EXEC=\"gradle\"\n+      fi\n+      CLEAN_CMD=\"${GRADLE_EXEC} clean -g .gradle -Dorg.gradle.java.home=${JAVA_HOME}\"\n+      BUILD_CMD=\"${GRADLE_EXEC} clean compileJava -g .gradle -Dorg.gradle.java.home=${JAVA_HOME}\"\n+  elif [ -f pom.xml ]; then\n+      if [ -f mvnw ]; then\n+    chmod +x mvnw\n+    MVN_EXEC=\"./mvnw\"\n+      else\n+    MVN_EXEC=\"mvn\"\n+      fi\n+      # if running on java 8, need /jre at the end of this Maven command\n+      if [ \"${JAVA_HOME}\" = \"${JAVA8_HOME}\" ]; then\n+          CLEAN_CMD=\"${MVN_EXEC} clean -Djava.home=${JAVA_HOME}/jre\"\n+          BUILD_CMD=\"${MVN_EXEC} clean compile -Djava.home=${JAVA_HOME}/jre\"\n+      else\n+          CLEAN_CMD=\"${MVN_EXEC} clean -Djava.home=${JAVA_HOME}\"\n+          BUILD_CMD=\"${MVN_EXEC} clean compile -Djava.home=${JAVA_HOME}\"\n+      fi\n+  elif [ -f build.xml ]; then\n+    # TODO: test these more thoroughly\n+    CLEAN_CMD=\"ant clean\"\n+    BUILD_CMD=\"ant clean compile\"\n+  else\n+      echo \"no build file found for ${REPO_NAME}; not calling DLJC\"\n+      WPI_RESULTS_AVAILABLE=\"no\"\n+      return\n+  fi\n+\n+  DLJC_CMD=\"${DLJC} -t wpi $* -- ${BUILD_CMD}\"\n+\n+  if [ ! \"x${TIMEOUT}\" = \"x\" ]; then\n+      TMP=\"${DLJC_CMD}\"\n+      DLJC_CMD=\"timeout ${TIMEOUT} ${TMP}\"\n+  fi\n+\n+  # Remove old DLJC output.\n+  rm -rf dljc-out\n+\n+  # ensure the project is clean before invoking DLJC\n+  eval \"${CLEAN_CMD}\" < /dev/null\n+\n+  echo \"${DLJC_CMD}\"\n+\n+  # This command also includes \"clean\"; I'm not sure why it is necessary.\n+  eval \"${DLJC_CMD}\" < /dev/null\n+\n+  if [[ $? -eq 124 ]]; then\n+      echo \"dljc timed out for ${DIR}\"\n+      WPI_RESULTS_AVAILABLE=\"no\"\n+      return\n+  fi\n+\n+  if [ -f dljc-out/wpi.log ]; then\n+      WPI_RESULTS_AVAILABLE=\"yes\"\n+  else\n+      WPI_RESULTS_AVAILABLE=\"no\"\n+  fi\n+}\n+\n+#### Check and setup dependencies\n+\n+SCRIPTDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+# clone or update DLJC\n+if [ -d \"${SCRIPTDIR}/.do-like-javac\" ]; then\n+    git -C \"${SCRIPTDIR}/.do-like-javac\" pull\n+else\n+    git -C \"${SCRIPTDIR}\" clone https://github.com/kelloggm/do-like-javac --depth 1 .do-like-javac || (echo \"Cannot clone do-like-javac\" && exit 1)\n+fi\n+\n+DLJC=\"${SCRIPTDIR}/.do-like-javac/dljc\"\n+\n+#### Main script\n+\n+pushd \"${DIR}\" || exit 1\n+\n+configure_and_exec_dljc \"$@\"\n+\n+if [ \"${WPI_RESULTS_AVAILABLE}\" = \"no\" ]; then\n+      # if running under Java 11 fails, try to run\n+      # under Java 8 instead\n+    export JAVA_HOME=\"${JAVA8_HOME}\"\n+    echo \"couldn't build using Java 11; trying Java 8\"\n+    configure_and_exec_dljc \"$@\"\n+    export JAVA_HOME=\"${JAVA11_HOME}\"\n+fi\n+\n+# support wpi-many.sh's ability to delete projects without usable results\n+# automatically\n+if [ \"${WPI_RESULTS_AVAILABLE}\" = \"no\" ]; then\n+    echo \"dljc could not run the build successfully\"\n+    touch .cannot-run-wpi\n+fi\n+\n+popd || exit 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae815c2952ac49ff277d15868493f9208647ace"}, "originalPosition": 174}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMDA3NDYy", "url": "https://github.com/typetools/checker-framework/pull/3824#pullrequestreview-521007462", "createdAt": "2020-10-30T20:20:44Z", "commit": {"oid": "cae815c2952ac49ff277d15868493f9208647ace"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoyMDo0NFrOHre3Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQyMDoyMDo0NFrOHre3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTM1NjQ2Ng==", "bodyText": "Please add output telling the user where to look for diagnostic output.\nI think the answer is \"in the dljc-out directory\".", "url": "https://github.com/typetools/checker-framework/pull/3824#discussion_r515356466", "createdAt": "2020-10-30T20:20:44Z", "author": {"login": "mernst"}, "path": "checker/bin/wpi.sh", "diffHunk": "@@ -0,0 +1,174 @@\n+#!/bin/bash\n+\n+# This script performs whole-program inference on a project directory.\n+\n+# For usage and requirements, see the \"Whole-program inference\"\n+# section of the Checker Framework manual:\n+# https://checkerframework.org/manual/#whole-program-inference\n+\n+\n+while getopts \"d:t:\" opt; do\n+  case $opt in\n+    d) DIR=\"$OPTARG\"\n+       ;;\n+    t) TIMEOUT=\"$OPTARG\"\n+       ;;\n+    \\?) # echo \"Invalid option -$OPTARG\" >&2\n+       ;;\n+  esac\n+done\n+\n+# Make $@ be the arguments that should be passed to dljc.\n+shift $(( OPTIND - 1 ))\n+\n+# check required arguments and environment variables:\n+\n+# Testing for JAVA8_HOME, not a misspelling of JAVA_HOME.\n+# shellcheck disable=SC2153\n+if [ \"x${JAVA8_HOME}\" = \"x\" ]; then\n+    echo \"JAVA8_HOME must be set to a Java 8 JDK\"\n+    exit 1\n+fi\n+\n+if [ ! -d \"${JAVA8_HOME}\" ]; then\n+    echo \"JAVA8_HOME is set to a non-existent directory ${JAVA8_HOME}\"\n+    exit 1\n+fi\n+\n+# Testing for JAVA11_HOME, not a misspelling of JAVA_HOME.\n+# shellcheck disable=SC2153\n+if [ \"x${JAVA11_HOME}\" = \"x\" ]; then\n+    echo \"JAVA11_HOME must be set to a Java 11 JDK\"\n+    exit 1\n+fi\n+\n+if [ ! -d \"${JAVA11_HOME}\" ]; then\n+    echo \"JAVA11_HOME is set to a non-existent directory ${JAVA11_HOME}\"\n+    exit 1\n+fi\n+\n+JAVA_HOME=\"${JAVA11_HOME}\"\n+\n+if [ \"x${CHECKERFRAMEWORK}\" = \"x\" ]; then\n+    echo \"CHECKERFRAMEWORK is not set; it must be set to a locally-built Checker Framework. Please clone and build github.com/typetools/checker-framework\"\n+    exit 2\n+fi\n+\n+if [ ! -d \"${CHECKERFRAMEWORK}\" ]; then\n+    echo \"CHECKERFRAMEWORK is set to a non-existent directory ${CHECKERFRAMEWORK}\"\n+    exit 2\n+fi\n+\n+if [ \"x${DIR}\" = \"x\" ]; then\n+    echo \"wpi.sh: no -d argument supplied, using the current directory.\"\n+    DIR=$(pwd)\n+fi\n+\n+if [ ! -d \"${DIR}\" ]; then\n+    echo \"wpi.sh's -d argument was not a directory: ${DIR}\"\n+    exit 4\n+fi\n+\n+function configure_and_exec_dljc {\n+\n+  if [ -f build.gradle ]; then\n+      if [ -f gradlew ]; then\n+    chmod +x gradlew\n+    GRADLE_EXEC=\"./gradlew\"\n+      else\n+    GRADLE_EXEC=\"gradle\"\n+      fi\n+      CLEAN_CMD=\"${GRADLE_EXEC} clean -g .gradle -Dorg.gradle.java.home=${JAVA_HOME}\"\n+      BUILD_CMD=\"${GRADLE_EXEC} clean compileJava -g .gradle -Dorg.gradle.java.home=${JAVA_HOME}\"\n+  elif [ -f pom.xml ]; then\n+      if [ -f mvnw ]; then\n+    chmod +x mvnw\n+    MVN_EXEC=\"./mvnw\"\n+      else\n+    MVN_EXEC=\"mvn\"\n+      fi\n+      # if running on java 8, need /jre at the end of this Maven command\n+      if [ \"${JAVA_HOME}\" = \"${JAVA8_HOME}\" ]; then\n+          CLEAN_CMD=\"${MVN_EXEC} clean -Djava.home=${JAVA_HOME}/jre\"\n+          BUILD_CMD=\"${MVN_EXEC} clean compile -Djava.home=${JAVA_HOME}/jre\"\n+      else\n+          CLEAN_CMD=\"${MVN_EXEC} clean -Djava.home=${JAVA_HOME}\"\n+          BUILD_CMD=\"${MVN_EXEC} clean compile -Djava.home=${JAVA_HOME}\"\n+      fi\n+  elif [ -f build.xml ]; then\n+    # TODO: test these more thoroughly\n+    CLEAN_CMD=\"ant clean\"\n+    BUILD_CMD=\"ant clean compile\"\n+  else\n+      echo \"no build file found for ${REPO_NAME}; not calling DLJC\"\n+      WPI_RESULTS_AVAILABLE=\"no\"\n+      return\n+  fi\n+\n+  DLJC_CMD=\"${DLJC} -t wpi $* -- ${BUILD_CMD}\"\n+\n+  if [ ! \"x${TIMEOUT}\" = \"x\" ]; then\n+      TMP=\"${DLJC_CMD}\"\n+      DLJC_CMD=\"timeout ${TIMEOUT} ${TMP}\"\n+  fi\n+\n+  # Remove old DLJC output.\n+  rm -rf dljc-out\n+\n+  # ensure the project is clean before invoking DLJC\n+  eval \"${CLEAN_CMD}\" < /dev/null\n+\n+  echo \"${DLJC_CMD}\"\n+\n+  # This command also includes \"clean\"; I'm not sure why it is necessary.\n+  eval \"${DLJC_CMD}\" < /dev/null\n+\n+  if [[ $? -eq 124 ]]; then\n+      echo \"dljc timed out for ${DIR}\"\n+      WPI_RESULTS_AVAILABLE=\"no\"\n+      return\n+  fi\n+\n+  if [ -f dljc-out/wpi.log ]; then\n+      WPI_RESULTS_AVAILABLE=\"yes\"\n+  else\n+      WPI_RESULTS_AVAILABLE=\"no\"\n+  fi\n+}\n+\n+#### Check and setup dependencies\n+\n+SCRIPTDIR=\"$( cd \"$( dirname \"${BASH_SOURCE[0]}\" )\" >/dev/null 2>&1 && pwd )\"\n+\n+# clone or update DLJC\n+if [ -d \"${SCRIPTDIR}/.do-like-javac\" ]; then\n+    git -C \"${SCRIPTDIR}/.do-like-javac\" pull\n+else\n+    git -C \"${SCRIPTDIR}\" clone https://github.com/kelloggm/do-like-javac --depth 1 .do-like-javac || (echo \"Cannot clone do-like-javac\" && exit 1)\n+fi\n+\n+DLJC=\"${SCRIPTDIR}/.do-like-javac/dljc\"\n+\n+#### Main script\n+\n+pushd \"${DIR}\" || exit 1\n+\n+configure_and_exec_dljc \"$@\"\n+\n+if [ \"${WPI_RESULTS_AVAILABLE}\" = \"no\" ]; then\n+      # if running under Java 11 fails, try to run\n+      # under Java 8 instead\n+    export JAVA_HOME=\"${JAVA8_HOME}\"\n+    echo \"couldn't build using Java 11; trying Java 8\"\n+    configure_and_exec_dljc \"$@\"\n+    export JAVA_HOME=\"${JAVA11_HOME}\"\n+fi\n+\n+# support wpi-many.sh's ability to delete projects without usable results\n+# automatically\n+if [ \"${WPI_RESULTS_AVAILABLE}\" = \"no\" ]; then\n+    echo \"dljc could not run the build successfully\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cae815c2952ac49ff277d15868493f9208647ace"}, "originalPosition": 170}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8dfd0d3af4bec6230630d3548c778ff4125ae99c", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/8dfd0d3af4bec6230630d3548c778ff4125ae99c", "committedDate": "2020-10-30T21:33:13Z", "message": "address PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3fd1b19230b8680779cdc21af898b98787314b7", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/a3fd1b19230b8680779cdc21af898b98787314b7", "committedDate": "2020-10-30T21:33:26Z", "message": "Merge branch 'wpi-many' of github.com:kelloggm/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48ac6e218a9bf2f74d15bbc1918b6061459113a5", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/48ac6e218a9bf2f74d15bbc1918b6061459113a5", "committedDate": "2020-10-30T21:39:19Z", "message": "Remove unneeded receiver formal parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32c4ccfd831b1ab3984e0a7f5b66c0a7a189c272", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/32c4ccfd831b1ab3984e0a7f5b66c0a7a189c272", "committedDate": "2020-11-02T23:22:43Z", "message": "try to avoid crash mike encountered related to gradle home dir"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b60d62d5a7b796ab51ce4f2bfb352b650e4c78d", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/0b60d62d5a7b796ab51ce4f2bfb352b650e4c78d", "committedDate": "2020-11-02T23:23:35Z", "message": "I'm an idiot"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5606e4b726083a925ce8b79e686ae99be06b176a", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/5606e4b726083a925ce8b79e686ae99be06b176a", "committedDate": "2020-11-02T23:55:07Z", "message": "remove blank line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "894fb2778721a473be7defd9ba08f6f862e6464b", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/894fb2778721a473be7defd9ba08f6f862e6464b", "committedDate": "2020-11-03T18:31:36Z", "message": "add hook for extra arguments to the build script"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f59c01554a1bf4624e97d5679a203213c89d6a3", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/6f59c01554a1bf4624e97d5679a203213c89d6a3", "committedDate": "2020-11-03T19:27:36Z", "message": "Parse the -b command-line argument"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ced992a799fac2b8128cab2255034222ff2434c", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/4ced992a799fac2b8128cab2255034222ff2434c", "committedDate": "2020-11-03T19:34:24Z", "message": "fix latex error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "930936189754095bc93e90ce84db440614dfa3de", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/930936189754095bc93e90ce84db440614dfa3de", "committedDate": "2020-11-03T19:35:38Z", "message": "Merge branch 'wpi-many' of github.com:kelloggm/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41bf65ef6fdd578e5be3d28324909e2cc659b119", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/41bf65ef6fdd578e5be3d28324909e2cc659b119", "committedDate": "2020-11-03T22:03:54Z", "message": "Fix regex"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f16827c1b93563349c45bc54404ac9f013568dde", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/f16827c1b93563349c45bc54404ac9f013568dde", "committedDate": "2020-11-03T22:05:17Z", "message": "Move remove-annotations.sh script from bin/ to bin-devel/"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0b9e5e5e003237ef232e19550a7ad0f200da570", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/d0b9e5e5e003237ef232e19550a7ad0f200da570", "committedDate": "2020-11-03T22:12:50Z", "message": "remove .cannot-run-wpi file before starting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb9ece3c07c3324915db27b33114bf4b6df29432", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/cb9ece3c07c3324915db27b33114bf4b6df29432", "committedDate": "2020-11-03T22:13:33Z", "message": "Where to find the stub files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3a57ead92318a4194813fd1daa308e90244ce33", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/a3a57ead92318a4194813fd1daa308e90244ce33", "committedDate": "2020-11-03T22:13:54Z", "message": "Merge branch 'wpi-many' of github.com:kelloggm/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e30ba6dafd5b6bbb84c8fbe9be2a21b035d46aec", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/e30ba6dafd5b6bbb84c8fbe9be2a21b035d46aec", "committedDate": "2020-11-03T23:49:18Z", "message": "give option for users to specify alternate gradle cache directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "593044ff006bad8555316ee21ad91e74c2e5b1c9", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/593044ff006bad8555316ee21ad91e74c2e5b1c9", "committedDate": "2020-11-03T23:51:30Z", "message": "wpi-many.sh also needs the -g option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f365296bf7f5da7ef040a836a85a81ceaeeb79e", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/7f365296bf7f5da7ef040a836a85a81ceaeeb79e", "committedDate": "2020-11-04T03:41:26Z", "message": "Fix Nullness GLB"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94960ebce50bde8271722d4953c310cd02305ef8", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/94960ebce50bde8271722d4953c310cd02305ef8", "committedDate": "2020-11-04T03:41:52Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e159c2879f210047a98aca2fe2677e4d4f02ef6c", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/e159c2879f210047a98aca2fe2677e4d4f02ef6c", "committedDate": "2020-11-04T04:05:08Z", "message": "Fix cut-and-paste typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3aa591e8b12a84cbf779feda01cd9294f48ca983", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/3aa591e8b12a84cbf779feda01cd9294f48ca983", "committedDate": "2020-11-04T04:40:34Z", "message": "Fix section cross-reference"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f442c788145414a1cc808bcb37990d7f45af2559", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/f442c788145414a1cc808bcb37990d7f45af2559", "committedDate": "2020-11-04T16:01:32Z", "message": "Clarify a comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "786fe6659aa7beb4031d30d4536473d970005e8b", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/786fe6659aa7beb4031d30d4536473d970005e8b", "committedDate": "2020-11-04T16:01:43Z", "message": "Add Stub Parser debugging output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f2edb9af810c0f2ec77e090b564f1b86b643ce7", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/6f2edb9af810c0f2ec77e090b564f1b86b643ce7", "committedDate": "2020-11-04T21:57:31Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a14731de6364d806dc646e33adfead6ffc2b90aa", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/a14731de6364d806dc646e33adfead6ffc2b90aa", "committedDate": "2020-11-05T00:54:38Z", "message": "Merge branch 'wpi-many' of github.com:kelloggm/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be165067b29788cbd277b2e6f8a5b393d917246e", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/be165067b29788cbd277b2e6f8a5b393d917246e", "committedDate": "2020-11-05T02:51:18Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99f2f89c8a10bbad7033afd6ff1df60258e04493", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/99f2f89c8a10bbad7033afd6ff1df60258e04493", "committedDate": "2020-11-05T15:29:19Z", "message": "Move changelog text to correct release"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c6a6634f0427aeb6dceb7703b5a9524b66cf513", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/6c6a6634f0427aeb6dceb7703b5a9524b66cf513", "committedDate": "2020-11-05T18:55:38Z", "message": "add a note at the beginning and end of each script with information about where to find the output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa83bbacbdd1b42f673b428dcac32e5e915f56f6", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/aa83bbacbdd1b42f673b428dcac32e5e915f56f6", "committedDate": "2020-11-05T18:55:47Z", "message": "Merge branch 'wpi-many' of github.com:kelloggm/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "466b0c48a10c3ab0476a9e4023e217ccaf1248dd", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/466b0c48a10c3ab0476a9e4023e217ccaf1248dd", "committedDate": "2020-11-05T19:08:24Z", "message": "Remove unneeded text"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7969df80ceb29aa967c4858869352444c3af524", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/b7969df80ceb29aa967c4858869352444c3af524", "committedDate": "2020-11-05T19:16:03Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d0cb847f313f6e204807698d2db7491096a27ed", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/5d0cb847f313f6e204807698d2db7491096a27ed", "committedDate": "2020-11-06T17:51:17Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3272ea773d8187a59fe3ecde7e2e2159bedc74b9", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/3272ea773d8187a59fe3ecde7e2e2159bedc74b9", "committedDate": "2020-11-06T17:52:50Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "797e15de1f757276929aae3c899e20795bfb20c2", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/797e15de1f757276929aae3c899e20795bfb20c2", "committedDate": "2020-11-06T17:58:14Z", "message": "Tweak remove-annotations.sh script"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d736879d6bf4fe993a9082519759a2f3d69e90f", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/8d736879d6bf4fe993a9082519759a2f3d69e90f", "committedDate": "2020-11-09T19:16:26Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d15ae24105938a62faa01549672b85536cf77c2b", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/d15ae24105938a62faa01549672b85536cf77c2b", "committedDate": "2020-11-09T19:19:04Z", "message": "Punctuation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c3b1e4c9669f85c42268478a0a5789415adb374", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/8c3b1e4c9669f85c42268478a0a5789415adb374", "committedDate": "2020-11-13T16:33:28Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c664a896e6fd73bb3ec9d93b6b8c33ed1a460e06", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/c664a896e6fd73bb3ec9d93b6b8c33ed1a460e06", "committedDate": "2020-11-13T22:51:36Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0aefa13fb250823c0383408237e9e8e1d7f77f38", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/0aefa13fb250823c0383408237e9e8e1d7f77f38", "committedDate": "2020-11-16T17:29:01Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac524025e51f175616d7a6b14ce23d3904ef27ed", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/ac524025e51f175616d7a6b14ce23d3904ef27ed", "committedDate": "2020-11-16T18:02:41Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6f9ddbec331f688bc7756399854d01a5cab5b3c", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/d6f9ddbec331f688bc7756399854d01a5cab5b3c", "committedDate": "2020-11-16T18:34:24Z", "message": "Tweak documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fd3212beede96bffaba196fe262ef919dc0dd9e", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/5fd3212beede96bffaba196fe262ef919dc0dd9e", "committedDate": "2020-11-16T22:37:38Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "defec0778fc52f94711601cb24d43ba77968fcbe", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/defec0778fc52f94711601cb24d43ba77968fcbe", "committedDate": "2020-11-17T06:06:23Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "369567c7ab99b7f4a15a3f99b81f66106b2d09d4", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/369567c7ab99b7f4a15a3f99b81f66106b2d09d4", "committedDate": "2020-11-18T14:43:30Z", "message": "Use fully-qualified pathname to preplace script"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "073406350b6f492751a91924c12a6c5ed878919c", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/073406350b6f492751a91924c12a6c5ed878919c", "committedDate": "2020-11-18T23:03:42Z", "message": "make the informational output messages more sensicle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0044d4173d457bd09d96af5ed599f3f38d920be3", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/0044d4173d457bd09d96af5ed599f3f38d920be3", "committedDate": "2020-11-18T23:18:35Z", "message": "preserve the value of JAVA_HOME"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9adcd9f3a00abb1e93a1d6d838ae983ce9aa248f", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/9adcd9f3a00abb1e93a1d6d838ae983ce9aa248f", "committedDate": "2020-11-19T01:07:53Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f40cc17b40c345a15eee1437b95f33b9d08ae52", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/2f40cc17b40c345a15eee1437b95f33b9d08ae52", "committedDate": "2020-11-19T13:57:50Z", "message": "Put stdout of dljc in a file rather than misleadingly outputting it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "541b1fb09f6c876d01643e11740f642994160d43", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/541b1fb09f6c876d01643e11740f642994160d43", "committedDate": "2020-11-19T14:06:34Z", "message": "Don't use pushd and popd in scripts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f731b339065b2250cb383525e4100924aa9fcd13", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/f731b339065b2250cb383525e4100924aa9fcd13", "committedDate": "2020-11-19T14:07:58Z", "message": "Remove more confusing output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "941a119208c1ae3e5bb640f4d25707b77ddb9b43", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/941a119208c1ae3e5bb640f4d25707b77ddb9b43", "committedDate": "2020-11-19T15:19:10Z", "message": "Put stdout with other files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "459f7ff4fbffa3b72b28b1cfdb0c841e18f8cc1b", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/459f7ff4fbffa3b72b28b1cfdb0c841e18f8cc1b", "committedDate": "2020-11-19T15:22:39Z", "message": "Fix directory name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cad918656cd7e84d886d48189214aaf5637395ee", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/cad918656cd7e84d886d48189214aaf5637395ee", "committedDate": "2020-11-19T15:26:26Z", "message": "Create directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07161569b8263af181f3ce323bc99d2345cbc113", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/07161569b8263af181f3ce323bc99d2345cbc113", "committedDate": "2020-11-19T15:32:21Z", "message": "Rename file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64a22d39111092d84a1beba3536c880204fac86a", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/64a22d39111092d84a1beba3536c880204fac86a", "committedDate": "2020-11-19T15:43:41Z", "message": "Further reduce output"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5542d16ce47711c7b024fd23a753ca1996d3ec75", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/5542d16ce47711c7b024fd23a753ca1996d3ec75", "committedDate": "2020-11-19T20:15:41Z", "message": "okay, really preserve the value of JAVA_HOME"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64e4fa30c9238af3e3082be0b0519acad324fb51", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/64e4fa30c9238af3e3082be0b0519acad324fb51", "committedDate": "2020-11-19T20:37:35Z", "message": "modify and restore path before invoking dljc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d39dda50afa69b0f4c48172c2f95dccfdf151647", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/d39dda50afa69b0f4c48172c2f95dccfdf151647", "committedDate": "2020-11-19T20:41:49Z", "message": "attempt to fix merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39df54795fa74dfcd99acdcb6776c236fd8130c9", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/39df54795fa74dfcd99acdcb6776c236fd8130c9", "committedDate": "2020-11-19T21:30:52Z", "message": "fix problems introd by merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f38dc4000fa9dba9a718d965d9a45a6003715549", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/f38dc4000fa9dba9a718d965d9a45a6003715549", "committedDate": "2020-11-23T18:57:45Z", "message": "Merge ../checker-framework-branch-master into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3419a4766c0b930522a97865996a3a1f365e059a", "author": {"user": {"login": "kelloggm", "name": "Martin Kellogg"}}, "url": "https://github.com/typetools/checker-framework/commit/3419a4766c0b930522a97865996a3a1f365e059a", "committedDate": "2020-11-25T20:19:02Z", "message": "Merge branch 'master' of github.com:typetools/checker-framework into wpi-many"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22ec7acbf96b8a4d7ef7d5d0299b9d6566195ce9", "author": {"user": {"login": "mernst", "name": "Michael Ernst"}}, "url": "https://github.com/typetools/checker-framework/commit/22ec7acbf96b8a4d7ef7d5d0299b9d6566195ce9", "committedDate": "2020-11-27T04:45:12Z", "message": "Fix mktemp call"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2462, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}