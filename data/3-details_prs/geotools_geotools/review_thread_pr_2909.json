{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNjc1NjYw", "number": 2909, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDozNjo0M1rOD4QO4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoxNTo1OFrOD5R9iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzEyODAzOnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/main/java/org/geotools/filter/MultiCompareFilterImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDozNjo0M1rOGO-7Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDozNjo0M1rOGO-7Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2NDIzMA==", "bodyText": "I call these methods \"toCollection( obj )\" as they are format shifting rather than accessing content.", "url": "https://github.com/geotools/geotools/pull/2909#discussion_r418364230", "createdAt": "2020-05-01T00:36:43Z", "author": {"login": "jodygarnett"}, "path": "modules/library/main/src/main/java/org/geotools/filter/MultiCompareFilterImpl.java", "diffHunk": "@@ -54,21 +55,34 @@ public MatchAction getMatchAction() {\n         return matchAction;\n     }\n \n+    private Collection<Object> getCollection(Object obj) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f18f0997a117f0946e51782b5a86b1adcb907d24"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzEzMzY0OnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/main/java/org/geotools/filter/MultiCompareFilterImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDozOTo0MlrOGO--XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDozOTo0MlrOGO--XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2NTAyMQ==", "bodyText": "I try and stay away from this kind of logic (assuming the value is useful as provided and making methods to cast). Would the following work?\nfinal Collection<Object> collection1 = expression1.evaulate( feature, Collection.class )\nfinal Collection<Object> collection2 = expression2.evaulate( feature, Collection.class )", "url": "https://github.com/geotools/geotools/pull/2909#discussion_r418365021", "createdAt": "2020-05-01T00:39:42Z", "author": {"login": "jodygarnett"}, "path": "modules/library/main/src/main/java/org/geotools/filter/MultiCompareFilterImpl.java", "diffHunk": "@@ -54,21 +55,34 @@ public MatchAction getMatchAction() {\n         return matchAction;\n     }\n \n+    private Collection<Object> getCollection(Object obj) {\n+        if (obj instanceof Collection) {\n+            return (Collection<Object>) obj;\n+        }\n+        if (obj != null && obj.getClass().isArray()) {\n+            return Arrays.asList((Object[]) obj);\n+        }\n+        return null;\n+    }\n+\n     public final boolean evaluate(Object feature) {\n         final Object object1 = eval(expression1, feature);\n         final Object object2 = eval(expression2, feature);\n \n-        if (!(object1 instanceof Collection) && !(object2 instanceof Collection)) {\n+        Collection<Object> collection1 = getCollection(object1);\n+        Collection<Object> collection2 = getCollection(object2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f18f0997a117f0946e51782b5a86b1adcb907d24"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzE0MDA2OnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/main/java/org/geotools/filter/MultiCompareFilterImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDo0Mzo0NlrOGO_CUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDo0Mzo0NlrOGO_CUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2NjAzMg==", "bodyText": "I am not sure how well this would work with a primitive array like int[]", "url": "https://github.com/geotools/geotools/pull/2909#discussion_r418366032", "createdAt": "2020-05-01T00:43:46Z", "author": {"login": "jodygarnett"}, "path": "modules/library/main/src/main/java/org/geotools/filter/MultiCompareFilterImpl.java", "diffHunk": "@@ -54,21 +55,34 @@ public MatchAction getMatchAction() {\n         return matchAction;\n     }\n \n+    private Collection<Object> getCollection(Object obj) {\n+        if (obj instanceof Collection) {\n+            return (Collection<Object>) obj;\n+        }\n+        if (obj != null && obj.getClass().isArray()) {\n+            return Arrays.asList((Object[]) obj);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f18f0997a117f0946e51782b5a86b1adcb907d24"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzE0NTA3OnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/main/java/org/geotools/filter/MultiCompareFilterImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDo0Njo0NVrOGO_FDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDo0Njo0NVrOGO_FDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2NjczMg==", "bodyText": "Where is expression3 evacuated? That could be a dynamic expression rather than a constant ...\nMatchAction matchAction = expression3.evaluate( feature, MatchAction.class)", "url": "https://github.com/geotools/geotools/pull/2909#discussion_r418366732", "createdAt": "2020-05-01T00:46:45Z", "author": {"login": "jodygarnett"}, "path": "modules/library/main/src/main/java/org/geotools/filter/MultiCompareFilterImpl.java", "diffHunk": "@@ -54,21 +55,34 @@ public MatchAction getMatchAction() {\n         return matchAction;\n     }\n \n+    private Collection<Object> getCollection(Object obj) {\n+        if (obj instanceof Collection) {\n+            return (Collection<Object>) obj;\n+        }\n+        if (obj != null && obj.getClass().isArray()) {\n+            return Arrays.asList((Object[]) obj);\n+        }\n+        return null;\n+    }\n+\n     public final boolean evaluate(Object feature) {\n         final Object object1 = eval(expression1, feature);\n         final Object object2 = eval(expression2, feature);\n \n-        if (!(object1 instanceof Collection) && !(object2 instanceof Collection)) {\n+        Collection<Object> collection1 = getCollection(object1);\n+        Collection<Object> collection2 = getCollection(object2);\n+\n+        if (collection1 == null && collection2 == null) {\n             return evaluateInternal(object1, object2);\n         }\n \n         Collection<Object> leftValues =\n-                object1 instanceof Collection\n-                        ? (Collection<Object>) object1\n+                collection1 instanceof Collection\n+                        ? collection1\n                         : Collections.<Object>singletonList(object1);\n         Collection<Object> rightValues =\n-                object2 instanceof Collection\n-                        ? (Collection<Object>) object2\n+                collection2 instanceof Collection\n+                        ? collection2\n                         : Collections.<Object>singletonList(object2);\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f18f0997a117f0946e51782b5a86b1adcb907d24"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzE0NzQ5OnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/main/java/org/geotools/filter/function/FilterFunction_equalTo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDo0ODo0M1rOGO_Gng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDo0ODo0M1rOGO_Gng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2NzEzNA==", "bodyText": "getExpression(2).evaualte( feature, MatchAction.class ) should work (there should be a converter that can convert from a string to an enum as required).", "url": "https://github.com/geotools/geotools/pull/2909#discussion_r418367134", "createdAt": "2020-05-01T00:48:43Z", "author": {"login": "jodygarnett"}, "path": "modules/library/main/src/main/java/org/geotools/filter/function/FilterFunction_equalTo.java", "diffHunk": "@@ -68,7 +71,16 @@ public Object evaluate(Object feature) {\n             throw new IllegalArgumentException(\n                     \"Filter Function problem for function equalTo argument #1 - expected type Object\");\n         }\n+        if (getParameters().size() > 2) {\n+            try { // attempt to get value and perform conversion\n+                matchAction = MatchAction.valueOf((String) getExpression(2).evaluate(feature));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f18f0997a117f0946e51782b5a86b1adcb907d24"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMzE1MDY1OnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/main/java/org/geotools/filter/function/FilterFunction_equalTo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDo1MDo0N1rOGO_Ifg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwMDo1MDo0N1rOGO_Ifg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODM2NzYxNA==", "bodyText": "Yeah this function is far weaker than the filter, compare:\n\nStaticGeometry.equalTo\nIsEqualsTo\n\nYou could consider just calling the filter so we have consistent handling:\nFilter equalsTo = ff.equalsTo( expression1, expression2);\nreturn equalsTo.evaualte( feature );\n\nIt would be easier to maintain and a stronger implementation, and if you play your cards right it could handle the matchAction for you.", "url": "https://github.com/geotools/geotools/pull/2909#discussion_r418367614", "createdAt": "2020-05-01T00:50:47Z", "author": {"login": "jodygarnett"}, "path": "modules/library/main/src/main/java/org/geotools/filter/function/FilterFunction_equalTo.java", "diffHunk": "@@ -68,7 +71,16 @@ public Object evaluate(Object feature) {\n             throw new IllegalArgumentException(\n                     \"Filter Function problem for function equalTo argument #1 - expected type Object\");\n         }\n+        if (getParameters().size() > 2) {\n+            try { // attempt to get value and perform conversion\n+                matchAction = MatchAction.valueOf((String) getExpression(2).evaluate(feature));\n+            } catch (Exception e) // probably a type error\n+            {\n+                throw new IllegalArgumentException(\n+                        \"Filter Function problem for function equalTo argument #2 - expected one of ANY, ONE or ALL\");\n+            }\n+        }\n \n-        return Boolean.valueOf(StaticGeometry.equalTo(arg0, arg1));\n+        return Boolean.valueOf(StaticGeometry.equalTo(arg0, arg1, matchAction));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f18f0997a117f0946e51782b5a86b1adcb907d24"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzg5NzA3OnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/main/java/org/geotools/filter/function/FilterFunction_equalTo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoxNTo1OFrOGQdHUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzoxNTo1OFrOGQdHUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwNzQwOA==", "bodyText": "This is so much cleaner!\nIf you would like to be slightly more lazy there is no need to evaulate arg0 and arg1, only to wrap them up as a literal again, if you replace this line with:\nreturn equalTo.evaualte(feature)", "url": "https://github.com/geotools/geotools/pull/2909#discussion_r419907408", "createdAt": "2020-05-05T07:15:58Z", "author": {"login": "jodygarnett"}, "path": "modules/library/main/src/main/java/org/geotools/filter/function/FilterFunction_equalTo.java", "diffHunk": "@@ -68,7 +82,21 @@ public Object evaluate(Object feature) {\n             throw new IllegalArgumentException(\n                     \"Filter Function problem for function equalTo argument #1 - expected type Object\");\n         }\n+        if (getParameters().size() > 2) {\n+            try { // attempt to get value and perform conversion\n+                matchAction = (MatchAction) getExpression(2).evaluate(feature, MatchAction.class);\n+            } catch (Exception e) // probably a type error\n+            {\n+                throw new IllegalArgumentException(\n+                        \"Filter Function problem for function equalTo argument #2 - expected one of ANY, ONE or ALL\");\n+            }\n+        }\n+        Filter equalTo =\n+                matchAction == null\n+                        ? getFilterFactory2().equal(ff.literal(arg0), ff.literal(arg1), false)\n+                        : getFilterFactory2()\n+                                .equal(ff.literal(arg0), ff.literal(arg1), false, matchAction);\n \n-        return Boolean.valueOf(StaticGeometry.equalTo(arg0, arg1));\n+        return equalTo.evaluate(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c9db291735214f95a5c78e8b9e94bbad8f44c6d"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3602, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}