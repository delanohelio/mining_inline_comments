{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NDQ4MDk5", "number": 3205, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxODowNjo1MFrOE30TGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxODowODo0N1rOE30Vxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTYzOTk0OnYy", "diffSide": "RIGHT", "path": "modules/plugin/geotiff/src/test/java/org/geotools/gce/geotiff/GeoTiffReaderCogOnlineTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxODowNjo1MFrOHxYkrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMjowNjoyN1rOHx32CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU0NDg3Nw==", "bodyText": "Interesting bit... made me wonder about a few things that are related to COG, but not the ovr usage per se.\n\n\nThe coverage generated by image mosaic normally contains a list of files used to generated it. Is that still the case for COG?\nBut I guess it's the main file, not the ovr, that is listed there... still useful I believe.\n\n\nAlso wondering how CSW direct download would play with COGs.", "url": "https://github.com/geotools/geotools/pull/3205#discussion_r521544877", "createdAt": "2020-11-11T18:06:50Z", "author": {"login": "aaime"}, "path": "modules/plugin/geotiff/src/test/java/org/geotools/gce/geotiff/GeoTiffReaderCogOnlineTest.java", "diffHunk": "@@ -61,4 +75,49 @@ public void testCogRead() throws URISyntaxException, IOException {\n         assertEquals(512, raster.getHeight());\n         assertEquals(1, raster.getNumBands());\n     }\n+\n+    @Test\n+    public void testCogOverview() throws URISyntaxException, IOException {\n+        GeoTiffReader reader = new GeoTiffReader(getInputProvider());\n+        assertEquals(\n+                \"LC08_L1TP_153075_20190515_20190515_01_RT_B2\", reader.getGridCoverageNames()[0]);\n+\n+        GeneralParameterValue[] params = new GeneralParameterValue[1];\n+        // Define a GridGeometry in order to reduce the output\n+        final ParameterValue<GridGeometry2D> gg =\n+                AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();\n+        final GeneralEnvelope envelope = reader.getOriginalEnvelope();\n+        final Dimension dim = new Dimension();\n+        dim.setSize(\n+                reader.getOriginalGridRange().getSpan(0) / 24,\n+                reader.getOriginalGridRange().getSpan(1) / 24);\n+        final Rectangle rasterArea = ((GridEnvelope2D) reader.getOriginalGridRange());\n+        rasterArea.setSize(dim);\n+        final GridEnvelope2D range = new GridEnvelope2D(rasterArea);\n+        gg.setValue(new GridGeometry2D(range, envelope));\n+        params[0] = gg;\n+\n+        GridCoverage2D coverage = reader.read(params);\n+        assertNotNull(coverage);\n+        RenderedImage image = coverage.getRenderedImage();\n+        int numTileX = image.getNumXTiles();\n+        int numTileY = image.getNumYTiles();\n+\n+        CogImageReader imageReader = (CogImageReader) image.getProperty(\"JAI.ImageReader\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43c7e8af4e2a68e9920ca4561a470618ea3ecdca"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA1NzIyNQ==", "bodyText": "Updated to deal with that, reporting the COG Url. Note that ImageMosaic reports .ovr instead, so it will be the same for COG\n\n\nAll GT APIs used by DirectDownload are File-related (FileGroups, FileGroupProvider, FileInfo and so on). We need to revisit the GT API to have it working for cog too", "url": "https://github.com/geotools/geotools/pull/3205#discussion_r522057225", "createdAt": "2020-11-12T12:06:27Z", "author": {"login": "dromagnoli"}, "path": "modules/plugin/geotiff/src/test/java/org/geotools/gce/geotiff/GeoTiffReaderCogOnlineTest.java", "diffHunk": "@@ -61,4 +75,49 @@ public void testCogRead() throws URISyntaxException, IOException {\n         assertEquals(512, raster.getHeight());\n         assertEquals(1, raster.getNumBands());\n     }\n+\n+    @Test\n+    public void testCogOverview() throws URISyntaxException, IOException {\n+        GeoTiffReader reader = new GeoTiffReader(getInputProvider());\n+        assertEquals(\n+                \"LC08_L1TP_153075_20190515_20190515_01_RT_B2\", reader.getGridCoverageNames()[0]);\n+\n+        GeneralParameterValue[] params = new GeneralParameterValue[1];\n+        // Define a GridGeometry in order to reduce the output\n+        final ParameterValue<GridGeometry2D> gg =\n+                AbstractGridFormat.READ_GRIDGEOMETRY2D.createValue();\n+        final GeneralEnvelope envelope = reader.getOriginalEnvelope();\n+        final Dimension dim = new Dimension();\n+        dim.setSize(\n+                reader.getOriginalGridRange().getSpan(0) / 24,\n+                reader.getOriginalGridRange().getSpan(1) / 24);\n+        final Rectangle rasterArea = ((GridEnvelope2D) reader.getOriginalGridRange());\n+        rasterArea.setSize(dim);\n+        final GridEnvelope2D range = new GridEnvelope2D(rasterArea);\n+        gg.setValue(new GridGeometry2D(range, envelope));\n+        params[0] = gg;\n+\n+        GridCoverage2D coverage = reader.read(params);\n+        assertNotNull(coverage);\n+        RenderedImage image = coverage.getRenderedImage();\n+        int numTileX = image.getNumXTiles();\n+        int numTileY = image.getNumYTiles();\n+\n+        CogImageReader imageReader = (CogImageReader) image.getProperty(\"JAI.ImageReader\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU0NDg3Nw=="}, "originalCommit": {"oid": "43c7e8af4e2a68e9920ca4561a470618ea3ecdca"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTY0Njc5OnYy", "diffSide": "RIGHT", "path": "modules/plugin/imagemosaic/src/main/java/org/geotools/gce/imagemosaic/GranuleDescriptor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxODowODo0N1rOHxYpDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMjowNDoxOFrOHx3xjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU0NTk5Nw==", "bodyText": "I'm not familiar with this bit of code, but the change gives me the impression that before the code allowed to have two different types of format for image and ovr (which is a thing, I believe that GDAL handles jpeg as main image but tiff as ovr for example). While the updated code assumes they are the same?", "url": "https://github.com/geotools/geotools/pull/3205#discussion_r521545997", "createdAt": "2020-11-11T18:08:47Z", "author": {"login": "aaime"}, "path": "modules/plugin/imagemosaic/src/main/java/org/geotools/gce/imagemosaic/GranuleDescriptor.java", "diffHunk": "@@ -1060,15 +1061,13 @@ public GranuleLoadingResult loadRaster(\n                 granuleURLUpdated = ovrProvider.getOvrURL();\n                 assert ovrProvider.getExternalOverviewInputStreamSpi() != null\n                         : \"no cachedStreamSPI available for external overview!\";\n-                inStream =\n+                SourceSPIProvider sourceSpiProvider =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43c7e8af4e2a68e9920ca4561a470618ea3ecdca"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA1NjA3Ng==", "bodyText": "Fixed.", "url": "https://github.com/geotools/geotools/pull/3205#discussion_r522056076", "createdAt": "2020-11-12T12:04:18Z", "author": {"login": "dromagnoli"}, "path": "modules/plugin/imagemosaic/src/main/java/org/geotools/gce/imagemosaic/GranuleDescriptor.java", "diffHunk": "@@ -1060,15 +1061,13 @@ public GranuleLoadingResult loadRaster(\n                 granuleURLUpdated = ovrProvider.getOvrURL();\n                 assert ovrProvider.getExternalOverviewInputStreamSpi() != null\n                         : \"no cachedStreamSPI available for external overview!\";\n-                inStream =\n+                SourceSPIProvider sourceSpiProvider =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU0NTk5Nw=="}, "originalCommit": {"oid": "43c7e8af4e2a68e9920ca4561a470618ea3ecdca"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3756, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}