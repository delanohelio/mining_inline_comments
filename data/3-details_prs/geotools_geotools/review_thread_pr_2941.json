{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNDM5MTE2", "number": 2941, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDozNjo0N1rOD_tAeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDo0NzoyNlrOD_tTjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTI0MjgwOnYy", "diffSide": "RIGHT", "path": "modules/plugin/mongodb/src/main/java/org/geotools/data/mongodb/FilterToMongo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDozNjo0N1rOGahVKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDozNjo0N1rOGahVKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ2MjI1MA==", "bodyText": "For reference:\nhttps://docs.mongodb.com/manual/reference/operator/query/not/#not", "url": "https://github.com/geotools/geotools/pull/2941#discussion_r430462250", "createdAt": "2020-05-26T14:36:47Z", "author": {"login": "nmco"}, "path": "modules/plugin/mongodb/src/main/java/org/geotools/data/mongodb/FilterToMongo.java", "diffHunk": "@@ -211,8 +212,41 @@ public Object visit(Or filter, Object extraData) {\n     @Override\n     public Object visit(Not filter, Object extraData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5310d2e56a93e2dfb554920fdc818da1701f6e0a"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTI1OTI4OnYy", "diffSide": "RIGHT", "path": "modules/plugin/mongodb/src/main/java/org/geotools/data/mongodb/FilterToMongo.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDo0MDoyN1rOGahfsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzozOTozM1rOGbKltg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ2NDk0Nw==", "bodyText": "If I understand this correctly:\n\nThe existing FilterAttributeExtractor can be used directly because it stores the found properties on a Set and you need to obtain the first found property?\nThis is why here you only take the first found property?", "url": "https://github.com/geotools/geotools/pull/2941#discussion_r430464947", "createdAt": "2020-05-26T14:40:27Z", "author": {"login": "nmco"}, "path": "modules/plugin/mongodb/src/main/java/org/geotools/data/mongodb/FilterToMongo.java", "diffHunk": "@@ -211,8 +212,41 @@ public Object visit(Or filter, Object extraData) {\n     @Override\n     public Object visit(Not filter, Object extraData) {\n         BasicDBObject output = asDBObject(extraData);\n+        // in case of a not operator we cannot simply wrap the child filter\n+        // with a $not since mongo syntax is {property:{$not:{operator-expression}}}\n+        // thus using a Visitor to find the PropertyName\n+        class PropertyNameFinder extends FilterAttributeExtractor {\n+            List<PropertyName> pNames = new ArrayList<>();\n+\n+            @Override\n+            public Object visit(PropertyName expression, Object data) {\n+                pNames.add(expression);\n+                return super.visit(expression, data);\n+            }\n+\n+            PropertyName getPropertyName() {\n+                if (pNames.size() > 0) return pNames.get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5310d2e56a93e2dfb554920fdc818da1701f6e0a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzODIzMA==", "bodyText": "thanks for your point @nmco , I should have clarified this with a comment before: FilterAttributeExtractor would extract also Literal adding them to the Set as PropertyName, so I preferred to extend it with the above method class", "url": "https://github.com/geotools/geotools/pull/2941#discussion_r431138230", "createdAt": "2020-05-27T13:39:33Z", "author": {"login": "taba90"}, "path": "modules/plugin/mongodb/src/main/java/org/geotools/data/mongodb/FilterToMongo.java", "diffHunk": "@@ -211,8 +212,41 @@ public Object visit(Or filter, Object extraData) {\n     @Override\n     public Object visit(Not filter, Object extraData) {\n         BasicDBObject output = asDBObject(extraData);\n+        // in case of a not operator we cannot simply wrap the child filter\n+        // with a $not since mongo syntax is {property:{$not:{operator-expression}}}\n+        // thus using a Visitor to find the PropertyName\n+        class PropertyNameFinder extends FilterAttributeExtractor {\n+            List<PropertyName> pNames = new ArrayList<>();\n+\n+            @Override\n+            public Object visit(PropertyName expression, Object data) {\n+                pNames.add(expression);\n+                return super.visit(expression, data);\n+            }\n+\n+            PropertyName getPropertyName() {\n+                if (pNames.size() > 0) return pNames.get(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ2NDk0Nw=="}, "originalCommit": {"oid": "5310d2e56a93e2dfb554920fdc818da1701f6e0a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTI5MTY1OnYy", "diffSide": "RIGHT", "path": "modules/plugin/mongodb/src/test/java/org/geotools/data/mongodb/MongoDataStoreTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDo0NzoyNlrOGah0Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzozOTo0M1rOGbKmJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3MDIwNg==", "bodyText": "I would add a few extra tests:\n\na not equal to between two properties\na not filter with and nested and filter with two branches\nan or with two branches containing a not filter with", "url": "https://github.com/geotools/geotools/pull/2941#discussion_r430470206", "createdAt": "2020-05-26T14:47:26Z", "author": {"login": "nmco"}, "path": "modules/plugin/mongodb/src/test/java/org/geotools/data/mongodb/MongoDataStoreTest.java", "diffHunk": "@@ -229,4 +229,47 @@ public void testSortBy() throws Exception {\n         assertTrue(first.before(second));\n         assertTrue(second.before(third));\n     }\n+\n+    public void testIsNullFilter() throws Exception {\n+        FilterFactory2 ff = CommonFactoryFinder.getFilterFactory2();\n+        PropertyName pn = ff.property(\"properties.nullableAttribute\");\n+        PropertyIsNull isNull = ff.isNull(pn);\n+        Query q = new Query(\"ft1\", isNull);\n+        SimpleFeatureSource source = dataStore.getFeatureSource(\"ft1\");\n+        SimpleFeatureCollection features = source.getFeatures(q);\n+        assertEquals(features.size(), 2);\n+        SimpleFeatureIterator it = features.features();\n+        while (it.hasNext()) {\n+            SimpleFeature f = it.next();\n+            assertNull(pn.evaluate(f));\n+        }\n+    }\n+\n+    public void testNotFilter() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5310d2e56a93e2dfb554920fdc818da1701f6e0a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTEzODM0MQ==", "bodyText": "fixed", "url": "https://github.com/geotools/geotools/pull/2941#discussion_r431138341", "createdAt": "2020-05-27T13:39:43Z", "author": {"login": "taba90"}, "path": "modules/plugin/mongodb/src/test/java/org/geotools/data/mongodb/MongoDataStoreTest.java", "diffHunk": "@@ -229,4 +229,47 @@ public void testSortBy() throws Exception {\n         assertTrue(first.before(second));\n         assertTrue(second.before(third));\n     }\n+\n+    public void testIsNullFilter() throws Exception {\n+        FilterFactory2 ff = CommonFactoryFinder.getFilterFactory2();\n+        PropertyName pn = ff.property(\"properties.nullableAttribute\");\n+        PropertyIsNull isNull = ff.isNull(pn);\n+        Query q = new Query(\"ft1\", isNull);\n+        SimpleFeatureSource source = dataStore.getFeatureSource(\"ft1\");\n+        SimpleFeatureCollection features = source.getFeatures(q);\n+        assertEquals(features.size(), 2);\n+        SimpleFeatureIterator it = features.features();\n+        while (it.hasNext()) {\n+            SimpleFeature f = it.next();\n+            assertNull(pn.evaluate(f));\n+        }\n+    }\n+\n+    public void testNotFilter() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3MDIwNg=="}, "originalCommit": {"oid": "5310d2e56a93e2dfb554920fdc818da1701f6e0a"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3621, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}