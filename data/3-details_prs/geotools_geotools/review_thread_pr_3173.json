{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMDAzNDgx", "number": 3173, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzowMjo1MFrOEsn4XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoyMTowMVrOEspyCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjI2MjA0OnYy", "diffSide": "RIGHT", "path": "modules/plugin/imagemosaic/src/main/java/org/geotools/gce/imagemosaic/catalog/CatalogConfigurationBean.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzowMjo1MFrOHf91IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoyODo1NFrOHgBHtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI4MDkyOQ==", "bodyText": "Potentially redundant at this level... if there is a cogConfiguration, then it's a COG, otherwise not?", "url": "https://github.com/geotools/geotools/pull/3173#discussion_r503280929", "createdAt": "2020-10-12T13:02:50Z", "author": {"login": "aaime"}, "path": "modules/plugin/imagemosaic/src/main/java/org/geotools/gce/imagemosaic/catalog/CatalogConfigurationBean.java", "diffHunk": "@@ -46,6 +46,11 @@\n \n     private boolean heterogeneousCRS;\n \n+    /** <code>true</code> if the mosaic is made of remote COG granules. */\n+    private boolean cog;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392ae0d8bcfc7f300064a67ae2ccadaeb3ee627e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMzNDgzNw==", "bodyText": "I had that idea indeed at some point but I left the boolean for \"lazyness\" check (isCog vs getCogBean()!=null)  on the various places around on property parsing/loading.\nAnyway, I can remove it.", "url": "https://github.com/geotools/geotools/pull/3173#discussion_r503334837", "createdAt": "2020-10-12T14:28:54Z", "author": {"login": "dromagnoli"}, "path": "modules/plugin/imagemosaic/src/main/java/org/geotools/gce/imagemosaic/catalog/CatalogConfigurationBean.java", "diffHunk": "@@ -46,6 +46,11 @@\n \n     private boolean heterogeneousCRS;\n \n+    /** <code>true</code> if the mosaic is made of remote COG granules. */\n+    private boolean cog;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI4MDkyOQ=="}, "originalCommit": {"oid": "392ae0d8bcfc7f300064a67ae2ccadaeb3ee627e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjU3MzUzOnYy", "diffSide": "RIGHT", "path": "modules/plugin/imagemosaic/src/main/java/org/geotools/gce/imagemosaic/ImageMosaicDatastoreWalker.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoyMTowMVrOHgAylg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoyOTo0M1rOHgBJ2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMyOTQzMA==", "bodyText": "So in the end the handling of COG refs and normal files was too different to homogeneize eh?", "url": "https://github.com/geotools/geotools/pull/3173#discussion_r503329430", "createdAt": "2020-10-12T14:21:01Z", "author": {"login": "aaime"}, "path": "modules/plugin/imagemosaic/src/main/java/org/geotools/gce/imagemosaic/ImageMosaicDatastoreWalker.java", "diffHunk": "@@ -233,4 +257,151 @@ public void run() {\n             }\n         }\n     }\n+\n+    protected void handleCogGranule(final String granuleBeingProcessed) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392ae0d8bcfc7f300064a67ae2ccadaeb3ee627e"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMzNTM4Nw==", "bodyText": "yep. there was several file-centric checks and assumptions here and there.", "url": "https://github.com/geotools/geotools/pull/3173#discussion_r503335387", "createdAt": "2020-10-12T14:29:43Z", "author": {"login": "dromagnoli"}, "path": "modules/plugin/imagemosaic/src/main/java/org/geotools/gce/imagemosaic/ImageMosaicDatastoreWalker.java", "diffHunk": "@@ -233,4 +257,151 @@ public void run() {\n             }\n         }\n     }\n+\n+    protected void handleCogGranule(final String granuleBeingProcessed) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMyOTQzMA=="}, "originalCommit": {"oid": "392ae0d8bcfc7f300064a67ae2ccadaeb3ee627e"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3738, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}