{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2ODMwOTgx", "number": 3063, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyMzoxOFrOENE5Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyMzoxOFrOENE5Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTQ3MDk4OnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/main/java/org/geotools/data/util/CommonsConverterFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyMzoxOFrOGvjzDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjoyOToxOFrOGvj66w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyMjc2Nw==", "bodyText": "I think this needs a bit more of context, after chatting with @fernando over this issue I understood that the original problem that we are fixing here is a performance issue with WMS, in some environments we had maps where the rendering times performance went from ~600 ms to ~5 second, sometimes restarting the server fixed the issue.\nLong story short, when the support for the :data protocol this line was added, it basically uses a constructor that skips the URL validation, this allows URL using data: protocol to pass thought, but unfortunately it will also allow any invalid URL to pass.\nThe RenderableSVGCache is using the converter, where the line above was added, to validate that it got a valid URL and should try to fetch an SVG, since the converter will not validate anything, all URL's are consider valid, and the SVG factory will try to fetch all of them, causing the performance issue. Depending on which factory is loaded first on a certain environment, this issue may or not happen, for example if we are using something like this <WellKnownName>wkt://COMPOUNDCURVE((0 0, 0.25 0), CIRCULARSTRING(0.25 0, 0.5 0.5, 0.75 0), (0.75 0, 1 0))</WellKnownName> and the factory capable of handling WKT marks is loaded first then no performance problem.\nOne way of fixing this would be to register the data: protocol using the Java official way, but unfortunately the URL URLStreamHandlerFactory can be registered only once, and seems like we can have another registration for it overlapping its usage. This makes the entire first line converters registering fails and making the URL converter not being found. Reading a bit seems like since Java 9 we have an extension point for the URL handlers, but we are not there yet.\nHence the proposed solution on the PR, which basically explicit only allow the :data protocol to be validated blindly.", "url": "https://github.com/geotools/geotools/pull/3063#discussion_r452522767", "createdAt": "2020-07-09T22:23:18Z", "author": {"login": "nmco"}, "path": "modules/library/main/src/main/java/org/geotools/data/util/CommonsConverterFactory.java", "diffHunk": "@@ -257,12 +257,22 @@\n                 URL parsed = new URL(string);\n                 return target.cast(parsed);\n             } catch (Exception e) {\n+                // try to fetch a data protocol URL, or return null\n+                return tryGetDataURL(string, target);\n+            }\n+        }\n+\n+        private <T> T tryGetDataURL(String string, Class<T> target) {\n+            // check if it's a data protocol URL\n+            if (string.startsWith(DataUrlConnection.DATA_PREFIX)) {\n                 try {\n                     URL parsed = new URL(null, string, new DataUrlHandler());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f315c5cdaa9fc911430e190b7852caaad8e978f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyNDc3OQ==", "bodyText": "This is right.  This performance bug happens when the SVG extension points are loaded in first place before, for example, the WKT one for Graphic Mark factories, making SVG tries to load data from the wrong URL.  So this doesn't happen always but the root issue could lead to other problems in the codebase.  I agree Java 9 URL handlers new extension point will be a better solution instead handling this manually on converters.", "url": "https://github.com/geotools/geotools/pull/3063#discussion_r452524779", "createdAt": "2020-07-09T22:29:18Z", "author": {"login": "fernandor777"}, "path": "modules/library/main/src/main/java/org/geotools/data/util/CommonsConverterFactory.java", "diffHunk": "@@ -257,12 +257,22 @@\n                 URL parsed = new URL(string);\n                 return target.cast(parsed);\n             } catch (Exception e) {\n+                // try to fetch a data protocol URL, or return null\n+                return tryGetDataURL(string, target);\n+            }\n+        }\n+\n+        private <T> T tryGetDataURL(String string, Class<T> target) {\n+            // check if it's a data protocol URL\n+            if (string.startsWith(DataUrlConnection.DATA_PREFIX)) {\n                 try {\n                     URL parsed = new URL(null, string, new DataUrlHandler());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyMjc2Nw=="}, "originalCommit": {"oid": "8f315c5cdaa9fc911430e190b7852caaad8e978f"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3779, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}