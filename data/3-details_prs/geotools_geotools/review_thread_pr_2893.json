{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NTE4OTQz", "number": 2893, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNDoyNzo1MVrOD3pzow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoxNjowMFrOD5ycBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjgzMjM1OnYy", "diffSide": "RIGHT", "path": "modules/library/metadata/src/main/java/org/geotools/util/factory/Hints.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNDoyNzo1MVrOGOBkGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjoyNzo1NVrOGOm_Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1ODg3NQ==", "bodyText": "The name is unclear, there is no just a single \"pixel\", and in the future, things can be more complicated, like having a buffer in meters.\nThe implementation is also asymmetric, StreamingRenderer uses the clip from the feature metadata for tile rendering already, but here a new hint has been added to delegate to the store instead. Can we wrap the collection and clip just before passing the data to the rendering transformation instead? No need for new hints in this case.\nIf the rework is considered too big, at least let's call this \"REMOVE_TILE_BUFFER\" instead.", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r417358875", "createdAt": "2020-04-29T14:27:51Z", "author": {"login": "aaime"}, "path": "modules/library/metadata/src/main/java/org/geotools/util/factory/Hints.java", "diffHunk": "@@ -688,6 +688,11 @@\n      */\n     public static final ClassKey GEOMETRY_CLIP = new ClassKey(\"org.locationtech.jts.geom.Geometry\");\n \n+    /**\n+     * Used when a rendering transformation is applied to a vector tile geometries, to lead the\n+     * store using the clip mask to remove geometries outside tiles.\n+     */\n+    public static final Key REMOVE_BUFFER_PIXEL = new Key(Boolean.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fcc7b16f553df77154299b19ccc7fc9c295923b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3MjAxMQ==", "bodyText": "fixed", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r417972011", "createdAt": "2020-04-30T12:27:55Z", "author": {"login": "taba90"}, "path": "modules/library/metadata/src/main/java/org/geotools/util/factory/Hints.java", "diffHunk": "@@ -688,6 +688,11 @@\n      */\n     public static final ClassKey GEOMETRY_CLIP = new ClassKey(\"org.locationtech.jts.geom.Geometry\");\n \n+    /**\n+     * Used when a rendering transformation is applied to a vector tile geometries, to lead the\n+     * store using the clip mask to remove geometries outside tiles.\n+     */\n+    public static final Key REMOVE_BUFFER_PIXEL = new Key(Boolean.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1ODg3NQ=="}, "originalCommit": {"oid": "1fcc7b16f553df77154299b19ccc7fc9c295923b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjgzODEyOnYy", "diffSide": "RIGHT", "path": "modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/ClippingFeatureReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNDoyODo1OFrOGOBnwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjoyNzo0N1rOGOm-6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1OTgwOQ==", "bodyText": "This could be easily turned into a DecoratingFeatureIterator instead, which a ClippingFeatureCollection would use.", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r417359809", "createdAt": "2020-04-29T14:28:58Z", "author": {"login": "aaime"}, "path": "modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/ClippingFeatureReader.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+package org.geotools.mbtiles;\n+\n+import java.io.IOException;\n+import java.util.NoSuchElementException;\n+import org.geotools.data.simple.SimpleFeatureReader;\n+import org.geotools.util.factory.Hints;\n+import org.locationtech.jts.geom.Geometry;\n+import org.locationtech.jts.geom.Polygon;\n+import org.opengis.feature.simple.SimpleFeature;\n+import org.opengis.feature.simple.SimpleFeatureType;\n+import org.opengis.feature.type.GeometryDescriptor;\n+\n+/**\n+ * The class takes care to return features that intersects the geometry passed with a\n+ * Hints.GEOMETRY_CLIP, in order to avoid that features' buffer in mbtiles data gets deployed when a\n+ * rendering transformation is issued.\n+ */\n+class ClippingFeatureReader implements SimpleFeatureReader {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fcc7b16f553df77154299b19ccc7fc9c295923b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3MTk0Ng==", "bodyText": "fixed", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r417971946", "createdAt": "2020-04-30T12:27:47Z", "author": {"login": "taba90"}, "path": "modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/ClippingFeatureReader.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+package org.geotools.mbtiles;\n+\n+import java.io.IOException;\n+import java.util.NoSuchElementException;\n+import org.geotools.data.simple.SimpleFeatureReader;\n+import org.geotools.util.factory.Hints;\n+import org.locationtech.jts.geom.Geometry;\n+import org.locationtech.jts.geom.Polygon;\n+import org.opengis.feature.simple.SimpleFeature;\n+import org.opengis.feature.simple.SimpleFeatureType;\n+import org.opengis.feature.type.GeometryDescriptor;\n+\n+/**\n+ * The class takes care to return features that intersects the geometry passed with a\n+ * Hints.GEOMETRY_CLIP, in order to avoid that features' buffer in mbtiles data gets deployed when a\n+ * rendering transformation is issued.\n+ */\n+class ClippingFeatureReader implements SimpleFeatureReader {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM1OTgwOQ=="}, "originalCommit": {"oid": "1fcc7b16f553df77154299b19ccc7fc9c295923b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5Njg0MTk5OnYy", "diffSide": "RIGHT", "path": "modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/MBTilesFeatureSource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNDoyOTo0NVrOGOBqUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMjoyNzo0MFrOGOm-rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM2MDQ2NQ==", "bodyText": "Here one could advertise the existing Hints.GEOMETRY_CLIP, so that the StreamingRenderer instantiates the clipping collection only when needed.", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r417360465", "createdAt": "2020-04-29T14:29:45Z", "author": {"login": "aaime"}, "path": "modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/MBTilesFeatureSource.java", "diffHunk": "@@ -68,7 +61,10 @@ public MBTilesFeatureSource(\n \n     @Override\n     protected void addHints(Set<Hints.Key> hints) {\n+\n         hints.add(Hints.GEOMETRY_SIMPLIFICATION);\n+        hints.add(Hints.GEOMETRY_GENERALIZATION);\n+        hints.add(Hints.REMOVE_BUFFER_PIXEL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fcc7b16f553df77154299b19ccc7fc9c295923b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk3MTg4NA==", "bodyText": "fixed", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r417971884", "createdAt": "2020-04-30T12:27:40Z", "author": {"login": "taba90"}, "path": "modules/unsupported/mbtiles/src/main/java/org/geotools/mbtiles/MBTilesFeatureSource.java", "diffHunk": "@@ -68,7 +61,10 @@ public MBTilesFeatureSource(\n \n     @Override\n     protected void addHints(Set<Hints.Key> hints) {\n+\n         hints.add(Hints.GEOMETRY_SIMPLIFICATION);\n+        hints.add(Hints.GEOMETRY_GENERALIZATION);\n+        hints.add(Hints.REMOVE_BUFFER_PIXEL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzM2MDQ2NQ=="}, "originalCommit": {"oid": "1fcc7b16f553df77154299b19ccc7fc9c295923b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTIxNTE0OnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureCollection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoxNTowOVrOGRQICg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoxNTowOVrOGRQICg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0MzE3OA==", "bodyText": "Thanks for making this a general functionality.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class DecoratingClippingFeatureCollection extends DecoratingSimpleFeatureCollection {\n          \n          \n            \n            public class ClippingFeatureCollection extends DecoratingSimpleFeatureCollection {\n          \n      \n    \n    \n  \n\nNone of the existing decorators reminds you that it's a decorator in the name:", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r420743178", "createdAt": "2020-05-06T12:15:09Z", "author": {"login": "aaime"}, "path": "modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureCollection.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+package org.geotools.feature.collection;\n+\n+import org.geotools.data.simple.SimpleFeatureCollection;\n+import org.geotools.data.simple.SimpleFeatureIterator;\n+\n+/**\n+ * The class decorates a SimpleFeatureCollection with one that returns features that intersect the\n+ * geometry passed with a Hints.GEOMETRY_CLIP\n+ */\n+public class DecoratingClippingFeatureCollection extends DecoratingSimpleFeatureCollection {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67418d5f80de3539ae8ba7f40801afd274a6cac4"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTIxNjExOnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureIterator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoxNToyNVrOGRQIqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoxNToyNVrOGRQIqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0MzMzNw==", "bodyText": "Same as above.", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r420743337", "createdAt": "2020-05-06T12:15:25Z", "author": {"login": "aaime"}, "path": "modules/library/main/src/main/java/org/geotools/feature/collection/DecoratingClippingFeatureIterator.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+package org.geotools.feature.collection;\n+\n+import java.util.NoSuchElementException;\n+import org.geotools.data.simple.SimpleFeatureIterator;\n+import org.geotools.feature.FeatureIterator;\n+import org.geotools.util.factory.Hints;\n+import org.locationtech.jts.geom.Geometry;\n+import org.opengis.feature.simple.SimpleFeature;\n+import org.opengis.feature.type.GeometryDescriptor;\n+\n+/**\n+ * Decorates a SimpleFeatureIterator with one that return features if intersect the Geometry passed\n+ * with the Hint.GEOMETRY_CLIP\n+ */\n+public class DecoratingClippingFeatureIterator extends DecoratingSimpleFeatureIterator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67418d5f80de3539ae8ba7f40801afd274a6cac4"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTIxNzAyOnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/test/java/org/geotools/feature/collection/DecoratingClippingFeatureCollectionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoxNTo0NlrOGRQJXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoxNTo0NlrOGRQJXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0MzUxNg==", "bodyText": "Align test name while renaming main class.", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r420743516", "createdAt": "2020-05-06T12:15:46Z", "author": {"login": "aaime"}, "path": "modules/library/main/src/test/java/org/geotools/feature/collection/DecoratingClippingFeatureCollectionTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+package org.geotools.feature.collection;\n+\n+import junit.framework.TestCase;\n+import org.geotools.data.simple.SimpleFeatureIterator;\n+import org.geotools.feature.DefaultFeatureCollection;\n+import org.geotools.feature.simple.SimpleFeatureBuilder;\n+import org.geotools.feature.simple.SimpleFeatureTypeBuilder;\n+import org.geotools.util.factory.Hints;\n+import org.junit.Test;\n+import org.locationtech.jts.geom.Coordinate;\n+import org.locationtech.jts.geom.GeometryFactory;\n+import org.locationtech.jts.geom.Point;\n+import org.opengis.feature.simple.SimpleFeature;\n+import org.opengis.feature.simple.SimpleFeatureType;\n+\n+public class DecoratingClippingFeatureCollectionTest extends TestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67418d5f80de3539ae8ba7f40801afd274a6cac4"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxOTIxNzk3OnYy", "diffSide": "RIGHT", "path": "modules/library/render/src/main/java/org/geotools/renderer/lite/RenderingTransformationHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoxNjowMFrOGRQJ7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMjoxNjowMFrOGRQJ7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc0MzY2Mg==", "bodyText": "Nice", "url": "https://github.com/geotools/geotools/pull/2893#discussion_r420743662", "createdAt": "2020-05-06T12:16:00Z", "author": {"login": "aaime"}, "path": "modules/library/render/src/main/java/org/geotools/renderer/lite/RenderingTransformationHelper.java", "diffHunk": "@@ -276,6 +279,12 @@ public Object applyRenderingTransformation(\n             // grab the original features\n             Query mixedQuery = DataUtilities.mixQueries(layerQuery, optimizedQuery, null);\n             originalFeatures = featureSource.getFeatures(mixedQuery);\n+            if (featureSource.getSupportedHints().contains(Hints.GEOMETRY_CLIP)\n+                    && originalFeatures instanceof SimpleFeatureCollection) {\n+                originalFeatures =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67418d5f80de3539ae8ba7f40801afd274a6cac4"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3596, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}