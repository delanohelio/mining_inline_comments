{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMjgxNjA5", "number": 3078, "title": "[GEOT-6665] Add percentages computation for StandardDeviationClassificationFunction", "bodyText": "This pull request adds percentages computation to the StandardDeviationFunction as for the others ClassificationFunctions.\nJista ticket https://osgeo-org.atlassian.net/browse/GEOT-6665\nChecklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n The changes are not breaking the build in downstream projects using SNAPSHOT dependencies, GeoWebCache and GeoServer.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for unsupported modules):\n\n There is an issue in Jira describing the bug/task/new feature (a notable exemptions is, changes not visible to end users). The ticket is for the GeoTools project, if the issue was found elsewhere it's a good practice to link to the origin ticket/issue.\n The pull request contains changes related to a single objective. If multiple focuses cannot be avoided, each one is in its own commit and has a separate ticket describing it.\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOT-XYZW] Title of the Jira ticket\"\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Documentation has been updated accordingly.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.", "createdAt": "2020-07-20T10:05:01Z", "url": "https://github.com/geotools/geotools/pull/3078", "merged": true, "mergeCommit": {"oid": "26670a3eb5800ca21b18623cef010934b85daf1f"}, "closed": true, "closedAt": "2020-08-03T10:38:27Z", "author": {"login": "taba90"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2yHGWAFqTQ1MTYzMzg2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7OjK5ABqjM2MTUwNjkxMDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNjMzODYy", "url": "https://github.com/geotools/geotools/pull/3078#pullrequestreview-451633862", "createdAt": "2020-07-20T14:00:55Z", "commit": {"oid": "4d81413f76b0857a3089b347c907c900ffb9a30d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDowMDo1NlrOG0OOgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNDowMDo1NlrOG0OOgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzQxMjIyNQ==", "bodyText": "Should not be public. Besides that, this large block of code (this method and the ones below) seem like it could be shared with EqualIntervalFunction, or not? Guess you can do the same as with AbstractQuantityClassificationFunction and roll a common superclass.", "url": "https://github.com/geotools/geotools/pull/3078#discussion_r457412225", "createdAt": "2020-07-20T14:00:56Z", "author": {"login": "aaime"}, "path": "modules/library/main/src/main/java/org/geotools/filter/function/StandardDeviationFunction.java", "diffHunk": "@@ -96,4 +110,65 @@ private Double getMax(int index, int numClasses, double average, double standard\n         if (index < 0 || index >= numClasses - 1) return null;\n         return Double.valueOf(average - (((numClasses / 2.0) - 1 - index) * standardDeviation));\n     }\n+\n+    public double[] getPercentages(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d81413f76b0857a3089b347c907c900ffb9a30d"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d81413f76b0857a3089b347c907c900ffb9a30d", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/4d81413f76b0857a3089b347c907c900ffb9a30d", "committedDate": "2020-07-20T10:03:59Z", "message": "[GEOT-6665] Add percentages computation for StandardDeviationClassificationFunction"}, "afterCommit": {"oid": "290db2b22a18be8ff5a713fd834a3d4e7ad15996", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/290db2b22a18be8ff5a713fd834a3d4e7ad15996", "committedDate": "2020-07-20T14:12:20Z", "message": "[GEOT-6665] Add percentages computation for StandardDeviationClassificationFunction"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9d2dc809c5b424687c8a06142de35a632b01296", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/b9d2dc809c5b424687c8a06142de35a632b01296", "committedDate": "2020-07-21T09:26:11Z", "message": "reviewer's feedback applied"}, "afterCommit": {"oid": "f48abee65e07eaaece3c5bf8fa3dd58ff9a83843", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/f48abee65e07eaaece3c5bf8fa3dd58ff9a83843", "committedDate": "2020-07-21T10:58:17Z", "message": "reviewer's feedback applied"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MTAyMDc1", "url": "https://github.com/geotools/geotools/pull/3078#pullrequestreview-454102075", "createdAt": "2020-07-23T12:58:07Z", "commit": {"oid": "f48abee65e07eaaece3c5bf8fa3dd58ff9a83843"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjo1ODowN1rOG2JRvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjo1ODowN1rOG2JRvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQyODI4NQ==", "bodyText": "Isn't the last interval also open to infinity? However, once you have the first, and the middle ones, you can compute the last percentage by difference. I see there is logic elsewhere to handle it, but it does not seem correct.... I was expecting something of the sort:\n\nCompute the count of the first class, and the total count (you have this)\nCompute the groupby on the middle classes, e.g., besides the first and the last, that are both open (here it seems you're assuming the last class is closed instead? the computePercentage method receives always a count from the resultset of groupby, that cannot be)\nCompute the percentage of the last class by difference\n\nThe tests only validate the sum is 100, but do not check the actual value. Can you use an online tool or a spreadsheet to compute the actual values, and then compare the results with the ones of the function, one by one?", "url": "https://github.com/geotools/geotools/pull/3078#discussion_r459428285", "createdAt": "2020-07-23T12:58:07Z", "author": {"login": "aaime"}, "path": "modules/library/main/src/main/java/org/geotools/filter/function/StandardDeviationFunction.java", "diffHunk": "@@ -96,4 +111,41 @@ private Double getMax(int index, int numClasses, double average, double standard\n         if (index < 0 || index >= numClasses - 1) return null;\n         return Double.valueOf(average - (((numClasses / 2.0) - 1 - index) * standardDeviation));\n     }\n+\n+    private double[] getPercentages(\n+            FeatureCollection features,\n+            RangedClassifier classifier,\n+            Expression attr,\n+            double standardDeviation)\n+            throws IOException {\n+        int classSize = classifier.getSize();\n+        Object firstMax = classifier.getMax(0);\n+        Filter less = FF.less(attr, FF.literal(firstMax));\n+        int sizeFirstClass = features.subCollection(less).size();\n+        int totalSize = features.size();\n+        double[] percentages = new double[classSize];\n+        // we don't know the min value in the collection because the\n+        // the first interval is open to infinity to the left.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f48abee65e07eaaece3c5bf8fa3dd58ff9a83843"}, "originalPosition": 65}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32d8851e0ec278cc9d3e0178d4a7ef15603900af", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/32d8851e0ec278cc9d3e0178d4a7ef15603900af", "committedDate": "2020-07-23T15:47:17Z", "message": "reviewer's suggestion applied #2"}, "afterCommit": {"oid": "9678b0934a080c3a4e343c6a456ff193a4efef87", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/9678b0934a080c3a4e343c6a456ff193a4efef87", "committedDate": "2020-07-23T16:31:35Z", "message": "reviewer's suggestion applied #2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9678b0934a080c3a4e343c6a456ff193a4efef87", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/9678b0934a080c3a4e343c6a456ff193a4efef87", "committedDate": "2020-07-23T16:31:35Z", "message": "reviewer's suggestion applied #2"}, "afterCommit": {"oid": "6f147a4769ec8355553cfe91340018e303a92eda", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/6f147a4769ec8355553cfe91340018e303a92eda", "committedDate": "2020-07-24T14:06:07Z", "message": "reviewer's suggestion applied #2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f147a4769ec8355553cfe91340018e303a92eda", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/6f147a4769ec8355553cfe91340018e303a92eda", "committedDate": "2020-07-24T14:06:07Z", "message": "reviewer's suggestion applied #2"}, "afterCommit": {"oid": "d8d5bbb0cde847285f71efe4cf4edbff90407f21", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/d8d5bbb0cde847285f71efe4cf4edbff90407f21", "committedDate": "2020-07-24T15:33:49Z", "message": "reviewer's suggestion applied #2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8d5bbb0cde847285f71efe4cf4edbff90407f21", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/d8d5bbb0cde847285f71efe4cf4edbff90407f21", "committedDate": "2020-07-24T15:33:49Z", "message": "reviewer's suggestion applied #2"}, "afterCommit": {"oid": "756739a4bceebbcc2122dabf37c55d286e884486", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/756739a4bceebbcc2122dabf37c55d286e884486", "committedDate": "2020-07-24T16:13:10Z", "message": "reviewer's suggestion applied #2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "666560263ba9d0b7772fc502f48544c2b8a0c412", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/666560263ba9d0b7772fc502f48544c2b8a0c412", "committedDate": "2020-08-03T09:20:57Z", "message": "[GEOT-6665] Add percentages computation for StandardDeviationClassificationFunction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c9998e8d175e7bc186b20fd873d615ee7a9383b", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/8c9998e8d175e7bc186b20fd873d615ee7a9383b", "committedDate": "2020-08-03T09:20:57Z", "message": "reviewer's feedback applied"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fdbef5d9c33042a76367a608e564569be3e6a87", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/6fdbef5d9c33042a76367a608e564569be3e6a87", "committedDate": "2020-08-03T09:20:58Z", "message": "reviewer's suggestion applied #2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "756739a4bceebbcc2122dabf37c55d286e884486", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/756739a4bceebbcc2122dabf37c55d286e884486", "committedDate": "2020-07-24T16:13:10Z", "message": "reviewer's suggestion applied #2"}, "afterCommit": {"oid": "6fdbef5d9c33042a76367a608e564569be3e6a87", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/6fdbef5d9c33042a76367a608e564569be3e6a87", "committedDate": "2020-08-03T09:20:58Z", "message": "reviewer's suggestion applied #2"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3108, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}