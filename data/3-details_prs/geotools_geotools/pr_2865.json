{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTUyOTM0", "number": 2865, "title": "[GEOT-6476] MongoDb store wrongly return false when supports sorting \u2026", "bodyText": "\u2026method is issued\n\nChecklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n The changes are not breaking the build in downstream projects using SNAPSHOT dependencies, GeoWebCache and GeoServer.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for unsupported modules):\n\n There is an issue in Jira describing the bug/task/new feature (a notable exemptions is, changes not visible to end users). The ticket is for the GeoTools project, if the issue was found elsewhere it's a good practice to link to the origin ticket/issue.\n The pull request contains changes related to a single objective. If multiple focuses cannot be avoided, each one is in its own commit and has a separate ticket describing it.\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOT-XYZW] Title of the Jira ticket\"\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Documentation has been updated accordingly.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.", "createdAt": "2020-04-08T16:27:40Z", "url": "https://github.com/geotools/geotools/pull/2865", "merged": true, "mergeCommit": {"oid": "d8d3fa7bc5a33d0f93a84ab6c51bec852cfe47cf"}, "closed": true, "closedAt": "2020-04-14T08:10:34Z", "author": {"login": "taba90"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVqOrMAH2gAyNDAwOTUyOTM0OmMxY2NhODk5ZWViZGE3YmNhOWU4MDA0NDg1MWQ3Mzc5NzM5Nzg5YmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWMlmogBqjMyMjExNDUwNzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c1cca899eebda7bca9e80044851d7379739789be", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/c1cca899eebda7bca9e80044851d7379739789be", "committedDate": "2020-04-08T16:10:32Z", "message": "[GEOT-6467] MongoDb store wrongly return false when supports sorting method is issued"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMDUyOTI2", "url": "https://github.com/geotools/geotools/pull/2865#pullrequestreview-391052926", "createdAt": "2020-04-09T18:58:56Z", "commit": {"oid": "c1cca899eebda7bca9e80044851d7379739789be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxODo1ODo1NlrOGDletQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxODo1ODo1NlrOGDletQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQxMjk4MQ==", "bodyText": "Not sure about this one @taba90, even if the default implementation supports it we still want to override the default check no?", "url": "https://github.com/geotools/geotools/pull/2865#discussion_r406412981", "createdAt": "2020-04-09T18:58:56Z", "author": {"login": "nmco"}, "path": "modules/plugin/mongodb/src/main/java/org/geotools/data/mongodb/MongoQueryCapabilities.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.data.mongodb;\n+\n+import org.geotools.data.QueryCapabilities;\n+import org.locationtech.jts.geom.Geometry;\n+import org.opengis.feature.type.AttributeDescriptor;\n+import org.opengis.filter.expression.PropertyName;\n+import org.opengis.filter.sort.SortBy;\n+\n+/** A QueryCapabilities implementation for a MongoSource. */\n+class MongoQueryCapabilities extends QueryCapabilities {\n+\n+    private MongoFeatureSource source;\n+\n+    MongoQueryCapabilities(MongoFeatureSource source) {\n+        this.source = source;\n+    }\n+\n+    @Override\n+    public boolean supportsSorting(SortBy[] sortAttributes) {\n+        if (super.supportsSorting(sortAttributes)) return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1cca899eebda7bca9e80044851d7379739789be"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMDUzODU5", "url": "https://github.com/geotools/geotools/pull/2865#pullrequestreview-391053859", "createdAt": "2020-04-09T19:00:20Z", "commit": {"oid": "c1cca899eebda7bca9e80044851d7379739789be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTowMDoyMFrOGDlhkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTowMDoyMFrOGDlhkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQxMzcxNQ==", "bodyText": "This would deserve a comment explaining why the descriptor may be NULL.", "url": "https://github.com/geotools/geotools/pull/2865#discussion_r406413715", "createdAt": "2020-04-09T19:00:20Z", "author": {"login": "nmco"}, "path": "modules/plugin/mongodb/src/main/java/org/geotools/data/mongodb/MongoQueryCapabilities.java", "diffHunk": "@@ -0,0 +1,60 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.data.mongodb;\n+\n+import org.geotools.data.QueryCapabilities;\n+import org.locationtech.jts.geom.Geometry;\n+import org.opengis.feature.type.AttributeDescriptor;\n+import org.opengis.filter.expression.PropertyName;\n+import org.opengis.filter.sort.SortBy;\n+\n+/** A QueryCapabilities implementation for a MongoSource. */\n+class MongoQueryCapabilities extends QueryCapabilities {\n+\n+    private MongoFeatureSource source;\n+\n+    MongoQueryCapabilities(MongoFeatureSource source) {\n+        this.source = source;\n+    }\n+\n+    @Override\n+    public boolean supportsSorting(SortBy[] sortAttributes) {\n+        if (super.supportsSorting(sortAttributes)) return true;\n+        for (SortBy sort : sortAttributes) {\n+            if (!supportsPropertySorting(sort.getPropertyName())) return false;\n+        }\n+        return true;\n+    }\n+\n+    /**\n+     * Check if the property name corresponds to one of the FeatureType attributes.\n+     *\n+     * @param propertyName\n+     * @return true if a correspondence is found, false if not or the attribute is a Geometry.\n+     */\n+    private boolean supportsPropertySorting(PropertyName propertyName) {\n+        AttributeDescriptor descriptor =\n+                (AttributeDescriptor) propertyName.evaluate(source.getSchema());\n+        if (descriptor == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1cca899eebda7bca9e80044851d7379739789be"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMDU0OTQ0", "url": "https://github.com/geotools/geotools/pull/2865#pullrequestreview-391054944", "createdAt": "2020-04-09T19:01:56Z", "commit": {"oid": "c1cca899eebda7bca9e80044851d7379739789be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTowMTo1NlrOGDllEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTowMTo1NlrOGDllEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQxNDYxMQ==", "bodyText": "This is an online test right? I would also add a test for DESCENDING.", "url": "https://github.com/geotools/geotools/pull/2865#discussion_r406414611", "createdAt": "2020-04-09T19:01:56Z", "author": {"login": "nmco"}, "path": "modules/plugin/mongodb/src/test/java/org/geotools/data/mongodb/MongoDataStoreTest.java", "diffHunk": "@@ -198,4 +206,27 @@ private void clearSchemaStore(MongoDataStore mongoStore) {\n         }\n         mongoStore.cleanEntries();\n     }\n+\n+    public void testSortBy() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1cca899eebda7bca9e80044851d7379739789be"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMDU3MzI3", "url": "https://github.com/geotools/geotools/pull/2865#pullrequestreview-391057327", "createdAt": "2020-04-09T19:05:41Z", "commit": {"oid": "c1cca899eebda7bca9e80044851d7379739789be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTowNTo0MVrOGDlsUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTowNTo0MVrOGDlsUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQxNjQ2NA==", "bodyText": "I would add a test or one more attribute, where one doesn't override it ignores the NULL, sort by the next attribute and then by the next one, makes sense?", "url": "https://github.com/geotools/geotools/pull/2865#discussion_r406416464", "createdAt": "2020-04-09T19:05:41Z", "author": {"login": "nmco"}, "path": "modules/plugin/mongodb/src/test/java/org/geotools/data/mongodb/MongoFeatureSourceTest.java", "diffHunk": "@@ -315,6 +320,62 @@ public void testAndPostFilter() throws Exception {\n         checkBinaryLogicOperatorFilterSplitting(and);\n     }\n \n+    public void testSingleSortBy() throws Exception {\n+        FilterFactory2 ff = CommonFactoryFinder.getFilterFactory2();\n+        SortBy[] sorts =\n+                new SortBy[] {\n+                    ff.sort(\"properties.doubleProperty\", SortOrder.DESCENDING),\n+                };\n+\n+        SimpleFeatureSource source = dataStore.getFeatureSource(\"ft1\");\n+        assertTrue(source.getQueryCapabilities().supportsSorting(sorts));\n+        Query q = new Query(\"ft1\", Filter.INCLUDE);\n+        q.setSortBy(sorts);\n+\n+        SimpleFeatureCollection features = source.getFeatures(q);\n+        SimpleFeatureIterator it = features.features();\n+        List<Double> doubleValues = new ArrayList<>(3);\n+        while (it.hasNext()) {\n+            SimpleFeature feature = it.next();\n+            doubleValues.add((Double) feature.getAttribute(\"properties.doubleProperty\"));\n+        }\n+        assertEquals(doubleValues.size(), 3);\n+        Double first = doubleValues.get(0);\n+        Double second = doubleValues.get(1);\n+        Double third = doubleValues.get(2);\n+        assertTrue(first > second);\n+        assertTrue(second > third);\n+    }\n+\n+    public void testTwoSortBy() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1cca899eebda7bca9e80044851d7379739789be"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b5371e909f11f0b5e71736d74e8cbd74c0f5985", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/6b5371e909f11f0b5e71736d74e8cbd74c0f5985", "committedDate": "2020-04-10T08:09:40Z", "message": "reviewer's feedbacks applied"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "333563516302b96216ae274379e043847e73ea0b", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/333563516302b96216ae274379e043847e73ea0b", "committedDate": "2020-04-10T08:07:12Z", "message": "reviewer's feedbacks applied"}, "afterCommit": {"oid": "6b5371e909f11f0b5e71736d74e8cbd74c0f5985", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/6b5371e909f11f0b5e71736d74e8cbd74c0f5985", "committedDate": "2020-04-10T08:09:40Z", "message": "reviewer's feedbacks applied"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2821, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}