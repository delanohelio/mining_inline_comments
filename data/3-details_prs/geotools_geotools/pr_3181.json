{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1NDk0OTU5", "number": 3181, "title": "[GEOT-6722] Fix lost precision bug when saving a Double to GeoPackage", "bodyText": "The intention of this PR is to fix the problem with a lost precision while preserving backward-compatibility where possible. Mapping between Java classes and SQL types has been modified from:\n// Saving:\nFloat.class -> REAL\nDouble.class -> REAL\n// Reading:\nFLOAT -> Double.class (implicit by JDBC read value)\nDOUBLE -> Double.class\nREAL -> Double.class (implicit by JDBC read value)\n\ninto:\nSaving:\nFloat.class -> FLOAT\nDouble.class -> DOUBLE\nReading:\nFLOAT -> Double.class (explicit)\nDOUBLE -> Double.class\nREAL -> Double.class (explicit)\n\nAccording to the GeoPackage specification http://www.geopackage.org/spec/ there is no difference between DOUBLE and REAL types - both can be used interchangeably (Table 1. GeoPackage Data Types).  Moreover, SQLite types are only hints and even FLOAT column can contain double-precision floating point numbers (https://sqlite.org/floatingpoint.html). Taking this into consideration and the fact that currently geoPackage.reader().next().getAttribute() will return a Double value, I believe it makes sense to preserve this behavior and read the attribute as a Double even for FLOAT type in GeoPackage.\nChecklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n The changes are not breaking the build in downstream projects using SNAPSHOT dependencies, GeoWebCache and GeoServer (there is an automatic PR check verifying this, check this when it turns green).\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for unsupported modules):\n\n There is an issue in Jira describing the bug/task/new feature (a notable exemptions is, changes not visible to end users). The ticket is for the GeoTools project, if the issue was found elsewhere it's a good practice to link to the origin ticket/issue.\n The pull request contains changes related to a single objective. If multiple focuses cannot be avoided, each one is in its own commit and has a separate ticket describing it.\n PR for bug fixes and small new features are presented as a single commit\n Commit message(s) must be in the form \"[GEOT-XYZW] Title of the Jira ticket\"\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Documentation has been updated accordingly.", "createdAt": "2020-10-18T15:54:16Z", "url": "https://github.com/geotools/geotools/pull/3181", "merged": true, "mergeCommit": {"oid": "3d9a0be75ab28bb952439574ab206239be8e0e95"}, "closed": true, "closedAt": "2020-10-19T08:54:02Z", "author": {"login": "piomar123"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTyKCmgH2gAyNTA1NDk0OTU5OjY4YzRjYjdmNWI5Y2FiMGYxNjNkZjZkMjAyZWYzM2NkMDAxMzEzZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUAQcggFqTUxMTU0NTUwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "68c4cb7f5b9cab0f163df6d202ef33cd001313ef", "author": {"user": {"login": "piomar123", "name": "Piotr Marci\u0144czyk"}}, "url": "https://github.com/geotools/geotools/commit/68c4cb7f5b9cab0f163df6d202ef33cd001313ef", "committedDate": "2020-10-18T16:28:01Z", "message": "[GEOT-6722] Fix lost precision bug when saving a Double to GeoPackage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c1a798a5911f58ea47822d316e0b26f391bbe76", "author": {"user": {"login": "piomar123", "name": "Piotr Marci\u0144czyk"}}, "url": "https://github.com/geotools/geotools/commit/5c1a798a5911f58ea47822d316e0b26f391bbe76", "committedDate": "2020-10-18T15:49:35Z", "message": "[GEOT-6722] Fix lost precision bug when saving a Double to GeoPackage"}, "afterCommit": {"oid": "68c4cb7f5b9cab0f163df6d202ef33cd001313ef", "author": {"user": {"login": "piomar123", "name": "Piotr Marci\u0144czyk"}}, "url": "https://github.com/geotools/geotools/commit/68c4cb7f5b9cab0f163df6d202ef33cd001313ef", "committedDate": "2020-10-18T16:28:01Z", "message": "[GEOT-6722] Fix lost precision bug when saving a Double to GeoPackage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNDgzNjUx", "url": "https://github.com/geotools/geotools/pull/3181#pullrequestreview-511483651", "createdAt": "2020-10-19T07:36:43Z", "commit": {"oid": "68c4cb7f5b9cab0f163df6d202ef33cd001313ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNzozNjo0M1rOHkBViA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNzozNjo0M1rOHkBViA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzUzMjY4MA==", "bodyText": "Should this be Float.class ?\nOh I see you are making this change on purpose:\n\nTaking this into consideration and the fact that currently geoPackage.reader().next().getAttribute() will return a Double value, I believe it makes sense to preserve this behavior and read the attribute as a Double even for FLOAT type in GeoPackage.", "url": "https://github.com/geotools/geotools/pull/3181#discussion_r507532680", "createdAt": "2020-10-19T07:36:43Z", "author": {"login": "jodygarnett"}, "path": "modules/plugin/geopkg/src/main/java/org/geotools/geopkg/GeoPkgDialect.java", "diffHunk": "@@ -234,7 +234,10 @@ public String getGeometryTypeName(Integer type) {\n     @Override\n     public void registerSqlTypeNameToClassMappings(Map<String, Class<?>> mappings) {\n         super.registerSqlTypeNameToClassMappings(mappings);\n+        // preserve SQLite full precision when dealing with a GeoPackage:\n+        mappings.put(\"FLOAT\", Double.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68c4cb7f5b9cab0f163df6d202ef33cd001313ef"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNTQ1NTAx", "url": "https://github.com/geotools/geotools/pull/3181#pullrequestreview-511545501", "createdAt": "2020-10-19T08:53:41Z", "commit": {"oid": "68c4cb7f5b9cab0f163df6d202ef33cd001313ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3043, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}