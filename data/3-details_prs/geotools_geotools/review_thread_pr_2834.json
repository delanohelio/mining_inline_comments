{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODEwMDIx", "number": 2834, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTowNjoxNVrODmdoXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMToxMDozOVrODmdtnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjU3OTUwOnYy", "diffSide": "RIGHT", "path": "modules/plugin/geopkg/src/main/java/org/geotools/geopkg/GeoPkgDialect.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTowNjoxNVrOFz5XdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTowNzozN1rOFz5Z_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2MTU4OQ==", "bodyText": "That is part of the actual geopackage spec right?", "url": "https://github.com/geotools/geotools/pull/2834#discussion_r389961589", "createdAt": "2020-03-09T21:06:15Z", "author": {"login": "jodygarnett"}, "path": "modules/plugin/geopkg/src/main/java/org/geotools/geopkg/GeoPkgDialect.java", "diffHunk": "@@ -496,7 +496,9 @@ public void setValue(\n                 ps.setString(column, ((Time) value).toString());\n                 break;\n             case Types.TIMESTAMP:\n-                ps.setString(column, ((Timestamp) value).toString());\n+                //2020-02-19 23:00:00.0  --> 2020-02-19 23:00:00.0Z\n+                //We need the \"Z\" or sql lite will interpret the value as local time\n+                ps.setString(column, ((Timestamp) value).toString()+\"Z\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38390516c511f5b114f2e04cb6b4459a21632ba4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2MjIzNw==", "bodyText": "no - this is how the \"datetime()\" function in sql lite works.\nIts a bit of black magic...", "url": "https://github.com/geotools/geotools/pull/2834#discussion_r389962237", "createdAt": "2020-03-09T21:07:37Z", "author": {"login": "davidblasby"}, "path": "modules/plugin/geopkg/src/main/java/org/geotools/geopkg/GeoPkgDialect.java", "diffHunk": "@@ -496,7 +496,9 @@ public void setValue(\n                 ps.setString(column, ((Time) value).toString());\n                 break;\n             case Types.TIMESTAMP:\n-                ps.setString(column, ((Timestamp) value).toString());\n+                //2020-02-19 23:00:00.0  --> 2020-02-19 23:00:00.0Z\n+                //We need the \"Z\" or sql lite will interpret the value as local time\n+                ps.setString(column, ((Timestamp) value).toString()+\"Z\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2MTU4OQ=="}, "originalCommit": {"oid": "38390516c511f5b114f2e04cb6b4459a21632ba4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjU5MjkzOnYy", "diffSide": "RIGHT", "path": "modules/plugin/geopkg/src/main/java/org/geotools/geopkg/GeoPkgDialect.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMToxMDozOVrOFz5fng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMToxMDozOVrOFz5fng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2MzY3OA==", "bodyText": "This check looked kind of odd when I first saw it; I guess this dialect knows it is only doing conversions for Date.", "url": "https://github.com/geotools/geotools/pull/2834#discussion_r389963678", "createdAt": "2020-03-09T21:10:39Z", "author": {"login": "jodygarnett"}, "path": "modules/plugin/geopkg/src/main/java/org/geotools/geopkg/GeoPkgDialect.java", "diffHunk": "@@ -642,7 +644,7 @@ protected void addSupportedHints(Set<Hints.Key> hints) {\n             List<Class> resultTypes = maybeResultTypes.get();\n             if (resultTypes.size() == 1) {\n                 Class targetType = resultTypes.get(0);\n-                if (Date.class.isAssignableFrom(targetType)) {\n+                if (java.util.Date.class.isAssignableFrom(targetType)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38390516c511f5b114f2e04cb6b4459a21632ba4"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3678, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}