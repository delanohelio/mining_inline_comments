{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTE5NDAw", "number": 3050, "title": "[GEOT-6653] Add InFunction optimization to MemoryFilterOptimizer", "bodyText": "This PR introduces a performance improvement on MemoryFilterOptimizer for in-memory features filter evaluation.\nJIRA issue:\nhttps://osgeo-org.atlassian.net/browse/GEOT-6653\nChecklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n The changes are not breaking the build in downstream projects using SNAPSHOT dependencies, GeoWebCache and GeoServer.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for unsupported modules):\n\n There is an issue in Jira describing the bug/task/new feature (a notable exemptions is, changes not visible to end users). The ticket is for the GeoTools project, if the issue was found elsewhere it's a good practice to link to the origin ticket/issue.\n The pull request contains changes related to a single objective. If multiple focuses cannot be avoided, each one is in its own commit and has a separate ticket describing it.\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOT-XYZW] Title of the Jira ticket\"\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Documentation has been updated accordingly.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.", "createdAt": "2020-07-06T17:51:09Z", "url": "https://github.com/geotools/geotools/pull/3050", "merged": true, "mergeCommit": {"oid": "9b5ec7bb070e563a9a895d38ea9afbfbe8103e3d"}, "closed": true, "closedAt": "2020-07-08T12:32:15Z", "author": {"login": "fernandor777"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyh-A_AFqTQ0MzY5MTEyNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcy5pKtgFqTQ0NDcxNjQ1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNjkxMTI3", "url": "https://github.com/geotools/geotools/pull/3050#pullrequestreview-443691127", "createdAt": "2020-07-07T08:51:46Z", "commit": {"oid": "f82232810e5fcbaa8a5db88b53717e298a85111a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODo1MTo0NlrOGt1IHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QwODo1NjoyNFrOGt1TFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcwOTUzNQ==", "bodyText": "This code does repeated passes over data structures as long as the or children, while a traditional loop could have done everything in a single pass, just keeping track of the first property name found, and the list of literals found in the process.\nJust saying, streams are not always an improvement, had this been in a performance critical section of code, the penalty would have been severe. But it's in a one-off, so it does not matter much, you can leave it as is.", "url": "https://github.com/geotools/geotools/pull/3050#discussion_r450709535", "createdAt": "2020-07-07T08:51:46Z", "author": {"login": "aaime"}, "path": "modules/library/render/src/main/java/org/geotools/renderer/lite/MemoryFilterOptimizer.java", "diffHunk": "@@ -111,7 +117,58 @@ public Object visit(Not filter, Object extraData) {\n \n     @Override\n     public Object visit(Or filter, Object extraData) {\n-        return memoize(filter, extraData, super::visit);\n+        return memoize(filter, extraData, this::inFilterOptimizer);\n+    }\n+\n+    /** Checks if an Or filter can be replaced by a single IN condition. */\n+    private Object inFilterOptimizer(Or filter, Object extraData) {\n+        InFunction inFilter = replaceWithInFilter(filter);\n+        if (inFilter == null) return super.visit(filter, extraData);\n+        return ff.equals(inFilter, ff.literal(true));\n+    }\n+\n+    private InFunction replaceWithInFilter(Or filter) {\n+        List<Filter> children = filter.getChildren();\n+        if (children.size() == 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f82232810e5fcbaa8a5db88b53717e298a85111a"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcxMDE5MA==", "bodyText": "This test covers only the happy case, could you write tests for the exception paths, like or with different properties, and with comparisons other than equality?", "url": "https://github.com/geotools/geotools/pull/3050#discussion_r450710190", "createdAt": "2020-07-07T08:52:52Z", "author": {"login": "aaime"}, "path": "modules/library/render/src/test/java/org/geotools/renderer/lite/MemoryFilterOptimizerTest.java", "diffHunk": "@@ -144,4 +148,35 @@ public void testEqualFeatureTypes() throws Exception {\n         Mockito.verify(spy, Mockito.times(0)).getAttribute(name);\n         Mockito.verify(spy, Mockito.times(1)).getAttribute(0);\n     }\n+\n+    public void testInFunctionOptimizer() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f82232810e5fcbaa8a5db88b53717e298a85111a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDcxMjM0MQ==", "bodyText": "Nitpicking here, an \"in\" optimization can be performed over pairs of \"Expression, Literal\", e.g., strLow(myAtt) = 'abc' or strLow(myAtt) = 'def' or (a + b) = 10 or (a + 10) = 12 can be both optimized with the in function. The only requirement is that all non literal bits in the comparison are equal. Again, probably not the most common case, up to you if you want to generalize or not.", "url": "https://github.com/geotools/geotools/pull/3050#discussion_r450712341", "createdAt": "2020-07-07T08:56:24Z", "author": {"login": "aaime"}, "path": "modules/library/render/src/main/java/org/geotools/renderer/lite/MemoryFilterOptimizer.java", "diffHunk": "@@ -111,7 +117,58 @@ public Object visit(Not filter, Object extraData) {\n \n     @Override\n     public Object visit(Or filter, Object extraData) {\n-        return memoize(filter, extraData, super::visit);\n+        return memoize(filter, extraData, this::inFilterOptimizer);\n+    }\n+\n+    /** Checks if an Or filter can be replaced by a single IN condition. */\n+    private Object inFilterOptimizer(Or filter, Object extraData) {\n+        InFunction inFilter = replaceWithInFilter(filter);\n+        if (inFilter == null) return super.visit(filter, extraData);\n+        return ff.equals(inFilter, ff.literal(true));\n+    }\n+\n+    private InFunction replaceWithInFilter(Or filter) {\n+        List<Filter> children = filter.getChildren();\n+        if (children.size() == 0\n+                || !children.stream().allMatch(f -> f instanceof PropertyIsEqualTo)) return null;\n+        @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n+        List<PropertyIsEqualTo> equalsList = (List) children;\n+        // get the parameters pairs, including nulls when the requirements are not accomplished\n+        List<Pair<PropertyName, Literal>> parameters =\n+                equalsList.stream().map(eq -> getEqualsParameters(eq)).collect(Collectors.toList());\n+        // check if any pair is null\n+        if (parameters.stream().anyMatch(Objects::isNull)) return null;\n+        // check all the property names are the same\n+        String propertyName = parameters.get(0).getKey().getPropertyName();\n+        if (!parameters\n+                .stream()\n+                .allMatch(pair -> Objects.equals(propertyName, pair.getKey().getPropertyName())))\n+            return null;\n+        // build the In function\n+        List<Expression> inParameters = new ArrayList<>(parameters.size() + 1);\n+        inParameters.add(parameters.get(0).getKey());\n+        inParameters.addAll(\n+                parameters.stream().map(p -> p.getValue()).collect(Collectors.toList()));\n+        InFunction inFunction = new InFunction();\n+        inFunction.setParameters(inParameters);\n+        return inFunction;\n+    }\n+\n+    private Pair<PropertyName, Literal> getEqualsParameters(PropertyIsEqualTo equals) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f82232810e5fcbaa8a5db88b53717e298a85111a"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fbb2ecdfef58966ad914746f874a3c66de2f884", "author": {"user": {"login": "fernandor777", "name": "Fernando Mi\u00f1o"}}, "url": "https://github.com/geotools/geotools/commit/5fbb2ecdfef58966ad914746f874a3c66de2f884", "committedDate": "2020-07-08T05:21:17Z", "message": "[GEOT-6653] Add InFunction optimization to MemoryFilterOptimizer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f82232810e5fcbaa8a5db88b53717e298a85111a", "author": {"user": {"login": "fernandor777", "name": "Fernando Mi\u00f1o"}}, "url": "https://github.com/geotools/geotools/commit/f82232810e5fcbaa8a5db88b53717e298a85111a", "committedDate": "2020-07-06T17:48:56Z", "message": "[GEOT-6653] Add InFunction optimization to MemoryFilterOptimizer"}, "afterCommit": {"oid": "5fbb2ecdfef58966ad914746f874a3c66de2f884", "author": {"user": {"login": "fernandor777", "name": "Fernando Mi\u00f1o"}}, "url": "https://github.com/geotools/geotools/commit/5fbb2ecdfef58966ad914746f874a3c66de2f884", "committedDate": "2020-07-08T05:21:17Z", "message": "[GEOT-6653] Add InFunction optimization to MemoryFilterOptimizer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NzE2NDUx", "url": "https://github.com/geotools/geotools/pull/3050#pullrequestreview-444716451", "createdAt": "2020-07-08T12:31:51Z", "commit": {"oid": "5fbb2ecdfef58966ad914746f874a3c66de2f884"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2808, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}