{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNjYyNTcw", "number": 3161, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDoyODo1MlrOEnNSjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNTo1NDowMFrOErBYrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTQ3NjYxOnYy", "diffSide": "RIGHT", "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/CQLJson.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDoyODo1MlrOHXreIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTowOTowNlrOHZyFeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MTUyMA==", "bodyText": "2020 ?", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494591520", "createdAt": "2020-09-24T20:28:52Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/CQLJson.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5NzA0OQ==", "bodyText": "Fixed.", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r496797049", "createdAt": "2020-09-29T15:09:06Z", "author": {"login": "turingtestfail"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/CQLJson.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MTUyMA=="}, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTQ3ODYxOnYy", "diffSide": "RIGHT", "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/CQLJson.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDoyOToyMVrOHXrfNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDoyOToyMVrOHXrfNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MTc5Nw==", "bodyText": "We try for public javadocs, this is an unsupported module so you can wait until this is ready to be consider for the library.", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494591797", "createdAt": "2020-09-24T20:29:21Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/CQLJson.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.geotools.filter.text.commons.CompilerUtil;\n+import org.geotools.filter.text.cql2.CQLException;\n+import org.geotools.filter.text.cqljson.model.Predicates;\n+import org.opengis.filter.Filter;\n+import org.opengis.filter.FilterFactory;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTQ4NjA5OnYy", "diffSide": "RIGHT", "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/CQLJsonFilterBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDozMTo0MlrOHXrj9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTowODo0NVrOHZyEgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MzAxNA==", "bodyText": "This is a bit odd to have as a builder, are you sure you are not looking for a FilterVisitor? Traverse the data structure and covert ...", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494593014", "createdAt": "2020-09-24T20:31:42Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/CQLJsonFilterBuilder.java", "diffHunk": "@@ -0,0 +1,610 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import org.geotools.filter.text.cqljson.model.After;\n+import org.geotools.filter.text.cqljson.model.Anyinteracts;\n+import org.geotools.filter.text.cqljson.model.Before;\n+import org.geotools.filter.text.cqljson.model.Begins;\n+import org.geotools.filter.text.cqljson.model.Begunby;\n+import org.geotools.filter.text.cqljson.model.Between;\n+import org.geotools.filter.text.cqljson.model.Contains;\n+import org.geotools.filter.text.cqljson.model.Crosses;\n+import org.geotools.filter.text.cqljson.model.Disjoint;\n+import org.geotools.filter.text.cqljson.model.During;\n+import org.geotools.filter.text.cqljson.model.Endedby;\n+import org.geotools.filter.text.cqljson.model.Ends;\n+import org.geotools.filter.text.cqljson.model.Eq;\n+import org.geotools.filter.text.cqljson.model.Equals;\n+import org.geotools.filter.text.cqljson.model.FunctionObjectArgument;\n+import org.geotools.filter.text.cqljson.model.Gt;\n+import org.geotools.filter.text.cqljson.model.Gte;\n+import org.geotools.filter.text.cqljson.model.In;\n+import org.geotools.filter.text.cqljson.model.Intersects;\n+import org.geotools.filter.text.cqljson.model.Like;\n+import org.geotools.filter.text.cqljson.model.Lt;\n+import org.geotools.filter.text.cqljson.model.Lte;\n+import org.geotools.filter.text.cqljson.model.Meets;\n+import org.geotools.filter.text.cqljson.model.Metby;\n+import org.geotools.filter.text.cqljson.model.Overlappedby;\n+import org.geotools.filter.text.cqljson.model.Overlaps;\n+import org.geotools.filter.text.cqljson.model.TContains;\n+import org.geotools.filter.text.cqljson.model.Tequals;\n+import org.geotools.filter.text.cqljson.model.Tintersects;\n+import org.geotools.filter.text.cqljson.model.Touches;\n+import org.geotools.filter.text.cqljson.model.Toverlaps;\n+import org.geotools.filter.text.cqljson.model.Within;\n+import org.geotools.filter.text.generated.parsers.ParseException;\n+import org.opengis.filter.Filter;\n+import org.opengis.filter.FilterFactory;\n+import org.opengis.filter.expression.Expression;\n+import org.opengis.filter.expression.Function;\n+import org.opengis.filter.expression.Literal;\n+import org.opengis.filter.expression.PropertyName;\n+import org.opengis.geometry.Geometry;\n+\n+final class CQLJsonFilterBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5NjgwMg==", "bodyText": "This is the pattern that the original CQL to filter developers followed.  My understanding is that the FilterVisitor is for going from Filter to something else (like SQL) vs. what I am doing here, which is going from JSON to Filter.", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r496796802", "createdAt": "2020-09-29T15:08:45Z", "author": {"login": "turingtestfail"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/CQLJsonFilterBuilder.java", "diffHunk": "@@ -0,0 +1,610 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import org.geotools.filter.text.cqljson.model.After;\n+import org.geotools.filter.text.cqljson.model.Anyinteracts;\n+import org.geotools.filter.text.cqljson.model.Before;\n+import org.geotools.filter.text.cqljson.model.Begins;\n+import org.geotools.filter.text.cqljson.model.Begunby;\n+import org.geotools.filter.text.cqljson.model.Between;\n+import org.geotools.filter.text.cqljson.model.Contains;\n+import org.geotools.filter.text.cqljson.model.Crosses;\n+import org.geotools.filter.text.cqljson.model.Disjoint;\n+import org.geotools.filter.text.cqljson.model.During;\n+import org.geotools.filter.text.cqljson.model.Endedby;\n+import org.geotools.filter.text.cqljson.model.Ends;\n+import org.geotools.filter.text.cqljson.model.Eq;\n+import org.geotools.filter.text.cqljson.model.Equals;\n+import org.geotools.filter.text.cqljson.model.FunctionObjectArgument;\n+import org.geotools.filter.text.cqljson.model.Gt;\n+import org.geotools.filter.text.cqljson.model.Gte;\n+import org.geotools.filter.text.cqljson.model.In;\n+import org.geotools.filter.text.cqljson.model.Intersects;\n+import org.geotools.filter.text.cqljson.model.Like;\n+import org.geotools.filter.text.cqljson.model.Lt;\n+import org.geotools.filter.text.cqljson.model.Lte;\n+import org.geotools.filter.text.cqljson.model.Meets;\n+import org.geotools.filter.text.cqljson.model.Metby;\n+import org.geotools.filter.text.cqljson.model.Overlappedby;\n+import org.geotools.filter.text.cqljson.model.Overlaps;\n+import org.geotools.filter.text.cqljson.model.TContains;\n+import org.geotools.filter.text.cqljson.model.Tequals;\n+import org.geotools.filter.text.cqljson.model.Tintersects;\n+import org.geotools.filter.text.cqljson.model.Touches;\n+import org.geotools.filter.text.cqljson.model.Toverlaps;\n+import org.geotools.filter.text.cqljson.model.Within;\n+import org.geotools.filter.text.generated.parsers.ParseException;\n+import org.opengis.filter.Filter;\n+import org.opengis.filter.FilterFactory;\n+import org.opengis.filter.expression.Expression;\n+import org.opengis.filter.expression.Function;\n+import org.opengis.filter.expression.Literal;\n+import org.opengis.filter.expression.PropertyName;\n+import org.opengis.geometry.Geometry;\n+\n+final class CQLJsonFilterBuilder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MzAxNA=="}, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTQ5MTEwOnYy", "diffSide": "RIGHT", "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/GeomUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDozMzowMFrOHXrm7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTowNjoxNVrOHZx84A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5Mzc3Mg==", "bodyText": "I expect this class will be used a lot, may wish to go for a more explicit class name :)", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494593772", "createdAt": "2020-09-24T20:33:00Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/GeomUtil.java", "diffHunk": "@@ -0,0 +1,206 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.geotools.filter.text.generated.parsers.ParseException;\n+import org.geotools.geometry.GeneralDirectPosition;\n+import org.geotools.geometry.GeometryBuilder;\n+import org.geotools.referencing.crs.DefaultGeographicCRS;\n+import org.opengis.geometry.aggregate.MultiCurve;\n+import org.opengis.geometry.aggregate.MultiPoint;\n+import org.opengis.geometry.aggregate.MultiSurface;\n+import org.opengis.geometry.coordinate.PointArray;\n+import org.opengis.geometry.primitive.Curve;\n+import org.opengis.geometry.primitive.Point;\n+import org.opengis.geometry.primitive.Surface;\n+import org.opengis.geometry.primitive.SurfaceBoundary;\n+\n+public class GeomUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5NDg0OA==", "bodyText": "Yeah, that makes a lot of sense.  Changed to \"MapToOpenGISGeomUtil\"", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r496794848", "createdAt": "2020-09-29T15:06:15Z", "author": {"login": "turingtestfail"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/GeomUtil.java", "diffHunk": "@@ -0,0 +1,206 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.geotools.filter.text.generated.parsers.ParseException;\n+import org.geotools.geometry.GeneralDirectPosition;\n+import org.geotools.geometry.GeometryBuilder;\n+import org.geotools.referencing.crs.DefaultGeographicCRS;\n+import org.opengis.geometry.aggregate.MultiCurve;\n+import org.opengis.geometry.aggregate.MultiPoint;\n+import org.opengis.geometry.aggregate.MultiSurface;\n+import org.opengis.geometry.coordinate.PointArray;\n+import org.opengis.geometry.primitive.Curve;\n+import org.opengis.geometry.primitive.Point;\n+import org.opengis.geometry.primitive.Surface;\n+import org.opengis.geometry.primitive.SurfaceBoundary;\n+\n+public class GeomUtil {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5Mzc3Mg=="}, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTQ5ODQxOnYy", "diffSide": "RIGHT", "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/model/Contains.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDozNDo1NVrOHXrrLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTowNTozMlrOHZx6uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5NDg2MA==", "bodyText": "This used to be how enumerations were represented in Java (so they could be strongly typed).\nIs making SpatialExpressions an enum worthwhile?", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494594860", "createdAt": "2020-09-24T20:34:55Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/model/Contains.java", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson.model;\n+\n+public class Contains extends SpatialExpressions {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5NDI5Ng==", "bodyText": "I did this as a bit of future proofing and to match the CQLJson standard.  If you think this clutter things I can remove it.", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r496794296", "createdAt": "2020-09-29T15:05:32Z", "author": {"login": "turingtestfail"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/model/Contains.java", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson.model;\n+\n+public class Contains extends SpatialExpressions {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5NDg2MA=="}, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTU2NjU5OnYy", "diffSide": "RIGHT", "path": "modules/unsupported/cql-json/src/test/java/org/geotools/filter/text/cqljson/CQLJsonParsingTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDo1NTo1OVrOHXsUew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTowNDo0MFrOHZx3_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYwNTQzNQ==", "bodyText": "I strongly recommend using  ECQL.toCQL(filter) rather than filter.toString() to have a stable string representation to compare against. As a bonus it should also show the difference between 5 and '\"5\"`.", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494605435", "createdAt": "2020-09-24T20:55:59Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/test/java/org/geotools/filter/text/cqljson/CQLJsonParsingTest.java", "diffHunk": "@@ -0,0 +1,598 @@\n+package org.geotools.filter.text.cqljson;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import org.geotools.filter.FilterFactoryImpl;\n+import org.geotools.filter.text.cql2.CQLException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.opengis.filter.Filter;\n+\n+public class CQLJsonParsingTest {\n+    @Test\n+    public void convertJsonToPredicates() throws JsonProcessingException, CQLException {\n+        String swimmingpool =\n+                \"{\"\n+                        + \"             \\\"and\\\": [\"\n+                        + \"                {\"\n+                        + \"                   \\\"eq\\\": {\"\n+                        + \"                      \\\"property\\\": \\\"swimming_pool\\\",\"\n+                        + \"                      \\\"value\\\": true\"\n+                        + \"                   }\"\n+                        + \"                },\"\n+                        + \"                {\"\n+                        + \"                   \\\"or\\\": [\"\n+                        + \"                      {\"\n+                        + \"                         \\\"gt\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"floor\\\",\"\n+                        + \"                            \\\"value\\\": 5\"\n+                        + \"                         }\"\n+                        + \"                      },\"\n+                        + \"                      {\"\n+                        + \"                         \\\"like\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"material\\\",\"\n+                        + \"                            \\\"value\\\": \\\"brick%\\\"\"\n+                        + \"                         }\"\n+                        + \"                      },\"\n+                        + \"                      {\"\n+                        + \"                         \\\"like\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"material\\\",\"\n+                        + \"                            \\\"value\\\": \\\"%brick\\\"\"\n+                        + \"                         }\"\n+                        + \"                      } \"\n+                        + \"                   ]\"\n+                        + \"                }\"\n+                        + \"             ]\"\n+                        + \"          }\";\n+\n+        CQLJsonCompiler cqlJsonCompiler =\n+                new CQLJsonCompiler(swimmingpool, new FilterFactoryImpl());\n+        cqlJsonCompiler.compileFilter();\n+        Filter filter = cqlJsonCompiler.getFilter();\n+        Assert.assertEquals(\n+                \"[[ swimming_pool = true ] AND [[ floor > 5 ] OR [ material is like brick% ] OR [ material is like %brick ]]]\",\n+                filter.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5MzU5OQ==", "bodyText": "Good point.  I changed the test to use ECQL.toCQL rather than toString for stability.", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r496793599", "createdAt": "2020-09-29T15:04:40Z", "author": {"login": "turingtestfail"}, "path": "modules/unsupported/cql-json/src/test/java/org/geotools/filter/text/cqljson/CQLJsonParsingTest.java", "diffHunk": "@@ -0,0 +1,598 @@\n+package org.geotools.filter.text.cqljson;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import org.geotools.filter.FilterFactoryImpl;\n+import org.geotools.filter.text.cql2.CQLException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.opengis.filter.Filter;\n+\n+public class CQLJsonParsingTest {\n+    @Test\n+    public void convertJsonToPredicates() throws JsonProcessingException, CQLException {\n+        String swimmingpool =\n+                \"{\"\n+                        + \"             \\\"and\\\": [\"\n+                        + \"                {\"\n+                        + \"                   \\\"eq\\\": {\"\n+                        + \"                      \\\"property\\\": \\\"swimming_pool\\\",\"\n+                        + \"                      \\\"value\\\": true\"\n+                        + \"                   }\"\n+                        + \"                },\"\n+                        + \"                {\"\n+                        + \"                   \\\"or\\\": [\"\n+                        + \"                      {\"\n+                        + \"                         \\\"gt\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"floor\\\",\"\n+                        + \"                            \\\"value\\\": 5\"\n+                        + \"                         }\"\n+                        + \"                      },\"\n+                        + \"                      {\"\n+                        + \"                         \\\"like\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"material\\\",\"\n+                        + \"                            \\\"value\\\": \\\"brick%\\\"\"\n+                        + \"                         }\"\n+                        + \"                      },\"\n+                        + \"                      {\"\n+                        + \"                         \\\"like\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"material\\\",\"\n+                        + \"                            \\\"value\\\": \\\"%brick\\\"\"\n+                        + \"                         }\"\n+                        + \"                      } \"\n+                        + \"                   ]\"\n+                        + \"                }\"\n+                        + \"             ]\"\n+                        + \"          }\";\n+\n+        CQLJsonCompiler cqlJsonCompiler =\n+                new CQLJsonCompiler(swimmingpool, new FilterFactoryImpl());\n+        cqlJsonCompiler.compileFilter();\n+        Filter filter = cqlJsonCompiler.getFilter();\n+        Assert.assertEquals(\n+                \"[[ swimming_pool = true ] AND [[ floor > 5 ] OR [ material is like brick% ] OR [ material is like %brick ]]]\",\n+                filter.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYwNTQzNQ=="}, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NTYyMDI5OnYy", "diffSide": "RIGHT", "path": "modules/unsupported/cql-json/src/test/java/org/geotools/filter/text/cqljson/CQLJsonParsingTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMToxMzoxNVrOHXs1Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTowNDowNFrOHZx2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYxMzgxOQ==", "bodyText": "These methods can be hard to maintain with having to quote content.\n\nPlease see MapBoxTestUtils test for one idea to make this easier, a utility method that changes \\`` to \"` and then parses.\n\n    public static JSONObject object(String json) throws ParseException {\n        JSONParser parser = new JSONParser();\n        String text = json.replace('\\'', '\\\"');\n        Object object = parser.parse(text);\n        return (JSONObject) object;\n    }\n\nUsed like:\n        String jsonStr = \"{'name1': 'fred', 'name2' : 1, 'name3' : null, 'name4': { 'age': 1 }}\";\n        JSONObject object = MapboxTestUtils.object(jsonStr);\n\n\nAnother good approach is to have a property file of reference ECQL expressions to round trip (convert ECQL -parse-> Filter -encode-> CQL-JSON -parse-> Filter and then double check the Filters are the same. Which is what a lot of the duplication in this class is about.\n\nconvertAndIntersects=(beamMode = \"ScanSAR Narrow\" ] AND [ swathDirection = \"ascending\") ...\n\nThis feedback assume the module will be long lived and plan for adding more and more tests over time as problems are reported. See example here.", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494613819", "createdAt": "2020-09-24T21:13:15Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/test/java/org/geotools/filter/text/cqljson/CQLJsonParsingTest.java", "diffHunk": "@@ -0,0 +1,598 @@\n+package org.geotools.filter.text.cqljson;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import org.geotools.filter.FilterFactoryImpl;\n+import org.geotools.filter.text.cql2.CQLException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.opengis.filter.Filter;\n+\n+public class CQLJsonParsingTest {\n+    @Test\n+    public void convertJsonToPredicates() throws JsonProcessingException, CQLException {\n+        String swimmingpool =\n+                \"{\"\n+                        + \"             \\\"and\\\": [\"\n+                        + \"                {\"\n+                        + \"                   \\\"eq\\\": {\"\n+                        + \"                      \\\"property\\\": \\\"swimming_pool\\\",\"\n+                        + \"                      \\\"value\\\": true\"\n+                        + \"                   }\"\n+                        + \"                },\"\n+                        + \"                {\"\n+                        + \"                   \\\"or\\\": [\"\n+                        + \"                      {\"\n+                        + \"                         \\\"gt\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"floor\\\",\"\n+                        + \"                            \\\"value\\\": 5\"\n+                        + \"                         }\"\n+                        + \"                      },\"\n+                        + \"                      {\"\n+                        + \"                         \\\"like\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"material\\\",\"\n+                        + \"                            \\\"value\\\": \\\"brick%\\\"\"\n+                        + \"                         }\"\n+                        + \"                      },\"\n+                        + \"                      {\"\n+                        + \"                         \\\"like\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"material\\\",\"\n+                        + \"                            \\\"value\\\": \\\"%brick\\\"\"\n+                        + \"                         }\"\n+                        + \"                      } \"\n+                        + \"                   ]\"\n+                        + \"                }\"\n+                        + \"             ]\"\n+                        + \"          }\";\n+\n+        CQLJsonCompiler cqlJsonCompiler =\n+                new CQLJsonCompiler(swimmingpool, new FilterFactoryImpl());\n+        cqlJsonCompiler.compileFilter();\n+        Filter filter = cqlJsonCompiler.getFilter();\n+        Assert.assertEquals(\n+                \"[[ swimming_pool = true ] AND [[ floor > 5 ] OR [ material is like brick% ] OR [ material is like %brick ]]]\",\n+                filter.toString());\n+    }\n+\n+    @Test\n+    public void convertAndIntersects() throws JsonProcessingException, CQLException {\n+        String beam =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5MzE0NQ==", "bodyText": "As suggested I moved the JSON into its own file.", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r496793145", "createdAt": "2020-09-29T15:04:04Z", "author": {"login": "turingtestfail"}, "path": "modules/unsupported/cql-json/src/test/java/org/geotools/filter/text/cqljson/CQLJsonParsingTest.java", "diffHunk": "@@ -0,0 +1,598 @@\n+package org.geotools.filter.text.cqljson;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import org.geotools.filter.FilterFactoryImpl;\n+import org.geotools.filter.text.cql2.CQLException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.opengis.filter.Filter;\n+\n+public class CQLJsonParsingTest {\n+    @Test\n+    public void convertJsonToPredicates() throws JsonProcessingException, CQLException {\n+        String swimmingpool =\n+                \"{\"\n+                        + \"             \\\"and\\\": [\"\n+                        + \"                {\"\n+                        + \"                   \\\"eq\\\": {\"\n+                        + \"                      \\\"property\\\": \\\"swimming_pool\\\",\"\n+                        + \"                      \\\"value\\\": true\"\n+                        + \"                   }\"\n+                        + \"                },\"\n+                        + \"                {\"\n+                        + \"                   \\\"or\\\": [\"\n+                        + \"                      {\"\n+                        + \"                         \\\"gt\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"floor\\\",\"\n+                        + \"                            \\\"value\\\": 5\"\n+                        + \"                         }\"\n+                        + \"                      },\"\n+                        + \"                      {\"\n+                        + \"                         \\\"like\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"material\\\",\"\n+                        + \"                            \\\"value\\\": \\\"brick%\\\"\"\n+                        + \"                         }\"\n+                        + \"                      },\"\n+                        + \"                      {\"\n+                        + \"                         \\\"like\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"material\\\",\"\n+                        + \"                            \\\"value\\\": \\\"%brick\\\"\"\n+                        + \"                         }\"\n+                        + \"                      } \"\n+                        + \"                   ]\"\n+                        + \"                }\"\n+                        + \"             ]\"\n+                        + \"          }\";\n+\n+        CQLJsonCompiler cqlJsonCompiler =\n+                new CQLJsonCompiler(swimmingpool, new FilterFactoryImpl());\n+        cqlJsonCompiler.compileFilter();\n+        Filter filter = cqlJsonCompiler.getFilter();\n+        Assert.assertEquals(\n+                \"[[ swimming_pool = true ] AND [[ floor > 5 ] OR [ material is like brick% ] OR [ material is like %brick ]]]\",\n+                filter.toString());\n+    }\n+\n+    @Test\n+    public void convertAndIntersects() throws JsonProcessingException, CQLException {\n+        String beam =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYxMzgxOQ=="}, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTQ2MjAyOnYy", "diffSide": "RIGHT", "path": "modules/unsupported/cql-json/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNTo1MDo1M1rOHdjf1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo0NzoxNVrOHdxk-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc1MjM0Mw==", "bodyText": "There should be no version here (and it's wrong anyway), also as  compile scope is the default the scope should be omitted as well. Same for a few lines above", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r500752343", "createdAt": "2020-10-07T05:50:53Z", "author": {"login": "mprins"}, "path": "modules/unsupported/cql-json/pom.xml", "diffHunk": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>unsupported</artifactId>\n+        <groupId>org.geotools</groupId>\n+        <version>25-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>gt-cql-json</artifactId>\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.fasterxml.jackson.core</groupId>\n+            <artifactId>jackson-core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.geotools</groupId>\n+            <artifactId>gt-cql</artifactId>\n+            <version>24-SNAPSHOT</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.geotools</groupId>\n+            <artifactId>gt-jts-wrapper</artifactId>\n+            <version>24-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf52b2065b3e1e9fb972ab20ae854033369329a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4MzAzMw==", "bodyText": "Fixed", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r500983033", "createdAt": "2020-10-07T12:47:15Z", "author": {"login": "turingtestfail"}, "path": "modules/unsupported/cql-json/pom.xml", "diffHunk": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>unsupported</artifactId>\n+        <groupId>org.geotools</groupId>\n+        <version>25-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>gt-cql-json</artifactId>\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.fasterxml.jackson.core</groupId>\n+            <artifactId>jackson-core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.geotools</groupId>\n+            <artifactId>gt-cql</artifactId>\n+            <version>24-SNAPSHOT</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.geotools</groupId>\n+            <artifactId>gt-jts-wrapper</artifactId>\n+            <version>24-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc1MjM0Mw=="}, "originalCommit": {"oid": "fbf52b2065b3e1e9fb972ab20ae854033369329a"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNTQ2OTI2OnYy", "diffSide": "RIGHT", "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/MapToOpenGISGeomUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNTo1NDowMFrOHdjkFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo0Njo1NFrOHdxkJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc1MzQyOQ==", "bodyText": "This statement can be omitted", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r500753429", "createdAt": "2020-10-07T05:54:00Z", "author": {"login": "mprins"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/MapToOpenGISGeomUtil.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.geotools.filter.text.generated.parsers.ParseException;\n+import org.geotools.geometry.GeneralDirectPosition;\n+import org.geotools.geometry.GeometryBuilder;\n+import org.geotools.referencing.crs.DefaultGeographicCRS;\n+import org.opengis.geometry.aggregate.MultiCurve;\n+import org.opengis.geometry.aggregate.MultiPoint;\n+import org.opengis.geometry.aggregate.MultiSurface;\n+import org.opengis.geometry.coordinate.PointArray;\n+import org.opengis.geometry.primitive.Curve;\n+import org.opengis.geometry.primitive.Point;\n+import org.opengis.geometry.primitive.Surface;\n+import org.opengis.geometry.primitive.SurfaceBoundary;\n+\n+public class MapToOpenGISGeomUtil {\n+    public static GeometryBuilder FACTORY = null;\n+\n+    static {\n+        FACTORY = new GeometryBuilder(DefaultGeographicCRS.WGS84);\n+    }\n+\n+    /**\n+     * Jackson returns embedded geojson as a map so we use this method to create opengis.Geometry\n+     * for filter creation\n+     *\n+     * @param geoJsonAsMap GeoJSON Map\n+     * @return Geometry for filter creation\n+     * @throws ParseException\n+     */\n+    public static org.opengis.geometry.Geometry parseMapToGeometry(Map<String, Object> geoJsonAsMap)\n+            throws ParseException {\n+        String type = \"Bbox\";\n+        ArrayList coordinates = null;\n+        if (geoJsonAsMap.get(\"bbox\") != null) {\n+            type = \"Bbox\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf52b2065b3e1e9fb972ab20ae854033369329a"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4MjgyMw==", "bodyText": "Fixed", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r500982823", "createdAt": "2020-10-07T12:46:54Z", "author": {"login": "turingtestfail"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/MapToOpenGISGeomUtil.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.geotools.filter.text.generated.parsers.ParseException;\n+import org.geotools.geometry.GeneralDirectPosition;\n+import org.geotools.geometry.GeometryBuilder;\n+import org.geotools.referencing.crs.DefaultGeographicCRS;\n+import org.opengis.geometry.aggregate.MultiCurve;\n+import org.opengis.geometry.aggregate.MultiPoint;\n+import org.opengis.geometry.aggregate.MultiSurface;\n+import org.opengis.geometry.coordinate.PointArray;\n+import org.opengis.geometry.primitive.Curve;\n+import org.opengis.geometry.primitive.Point;\n+import org.opengis.geometry.primitive.Surface;\n+import org.opengis.geometry.primitive.SurfaceBoundary;\n+\n+public class MapToOpenGISGeomUtil {\n+    public static GeometryBuilder FACTORY = null;\n+\n+    static {\n+        FACTORY = new GeometryBuilder(DefaultGeographicCRS.WGS84);\n+    }\n+\n+    /**\n+     * Jackson returns embedded geojson as a map so we use this method to create opengis.Geometry\n+     * for filter creation\n+     *\n+     * @param geoJsonAsMap GeoJSON Map\n+     * @return Geometry for filter creation\n+     * @throws ParseException\n+     */\n+    public static org.opengis.geometry.Geometry parseMapToGeometry(Map<String, Object> geoJsonAsMap)\n+            throws ParseException {\n+        String type = \"Bbox\";\n+        ArrayList coordinates = null;\n+        if (geoJsonAsMap.get(\"bbox\") != null) {\n+            type = \"Bbox\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc1MzQyOQ=="}, "originalCommit": {"oid": "fbf52b2065b3e1e9fb972ab20ae854033369329a"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3730, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}