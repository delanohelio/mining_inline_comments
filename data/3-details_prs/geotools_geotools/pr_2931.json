{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MjU4NTIx", "number": 2931, "title": "[23.x backport] [GEOT-3377] Charset not used for DBF header", "bodyText": "Backport of #2912.\nNOTE about what can go wrong with this PR\nIf this PR will be applied, in some rare cases of when DbaseFileHeader is used directly there can be wrong results. Consider such a piece of code:\nDbaseFileHeader header = new DbaseFileHeader(); // default charset\nheader.readHeader(inChannel, ANOTHER_NON_ENG_CHARSET);\nheader.addColumn(\"NON_ENG_COL_NAME\", 'C', 100, 0);\nwriter = new DbaseFileWriter(header, outChannel, ANOTHER_NON_ENG_CHARSET);\nwriter.write(new Object[] { ... some data ... });\nwriter.close();\n\nHere the header will use default charset on write stage, not ANOTHER_NON_ENG_CHARSET as could expect an inattentive end-user.\nIf header is used indirectly, e.g. via DbaseFileReader or ShapefileDataStore - everything must be fine.\nPlease let me know how this can be enhanced or perhaps documented additionally. If this is bearable i'll cherry-pick it for 22.x branch too.", "createdAt": "2020-05-13T10:08:57Z", "url": "https://github.com/geotools/geotools/pull/2931", "merged": true, "mergeCommit": {"oid": "4d2ec98e2b8dd7dbf393c3d5490af8227519d528"}, "closed": true, "closedAt": "2020-05-18T22:23:46Z", "author": {"login": "dvfed"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg0u5ogH2gAyNDE3MjU4NTIxOmU5N2ZmMGE0ZDdiYWM5YzU1YjIwMWViZjExYWYwNjc5YTQ5NTE4NjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg8mTaAFqTQxMTE1ODM2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e97ff0a4d7bac9c55b201ebf11af0679a4951863", "author": {"user": {"login": "dvfed", "name": "Dmitriy Fedorov"}}, "url": "https://github.com/geotools/geotools/commit/e97ff0a4d7bac9c55b201ebf11af0679a4951863", "committedDate": "2020-05-13T08:37:57Z", "message": "[23.x backport] [GEOT-3377] Charset not used for DBF header"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMTU4MzYw", "url": "https://github.com/geotools/geotools/pull/2931#pullrequestreview-411158360", "createdAt": "2020-05-13T17:45:48Z", "commit": {"oid": "e97ff0a4d7bac9c55b201ebf11af0679a4951863"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo0NTo0OVrOGU8u5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo0NzoyNFrOGU8yeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYxOTc1MQ==", "bodyText": "We tend not to backport API changes, I understand that this a protected constructor so the change is \"internal\".", "url": "https://github.com/geotools/geotools/pull/2931#discussion_r424619751", "createdAt": "2020-05-13T17:45:49Z", "author": {"login": "jodygarnett"}, "path": "modules/plugin/shapefile/src/main/java/org/geotools/data/shapefile/ShapefileDataStore.java", "diffHunk": "@@ -320,10 +320,10 @@ String toSingleLineWKT(CoordinateReferenceSystem crs) {\n      * Attempt to create a DbaseFileHeader for the FeatureType. Note, we cannot set the number of\n      * records until the write has completed.\n      */\n-    protected static DbaseFileHeader createDbaseHeader(SimpleFeatureType featureType)\n-            throws IOException, DbaseFileException {\n+    protected static DbaseFileHeader createDbaseHeader(\n+            SimpleFeatureType featureType, Charset charset) throws IOException, DbaseFileException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e97ff0a4d7bac9c55b201ebf11af0679a4951863"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyMDY2Ng==", "bodyText": "Thanks for preserving backwards compatibility", "url": "https://github.com/geotools/geotools/pull/2931#discussion_r424620666", "createdAt": "2020-05-13T17:47:24Z", "author": {"login": "jodygarnett"}, "path": "modules/plugin/shapefile/src/main/java/org/geotools/data/shapefile/dbf/DbaseFileHeader.java", "diffHunk": "@@ -504,17 +524,26 @@ public int getHeaderLength() {\n      * @throws IOException If errors occur while reading.\n      */\n     public void readHeader(ReadableByteChannel channel) throws IOException {\n-        readHeader(channel, Charset.defaultCharset());\n+        readHeaderInternal(channel, this.charset);\n     }\n \n     /**\n      * Read the header data from the DBF file.\n      *\n      * @param channel A readable byte channel. If you have an InputStream you need to use, you can\n      *     call java.nio.Channels.getChannel(InputStream in).\n+     * @param charset A charset that will be used to read header field's names.\n      * @throws IOException If errors occur while reading.\n+     * @deprecated Use constructor {@link #constructor(Charset)} and {@link\n+     *     #readHeader(ReadableByteChannel)} method instead.\n      */\n+    @Deprecated\n     public void readHeader(ReadableByteChannel channel, Charset charset) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e97ff0a4d7bac9c55b201ebf11af0679a4951863"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2861, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}