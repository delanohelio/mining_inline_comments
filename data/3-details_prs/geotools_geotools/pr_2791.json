{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMjQ4OTEw", "number": 2791, "title": "[GEOT-6805] WMSCoverage Reader does not default to remote format when requested with an unknown format", "bodyText": "JIRA : https://osgeo-org.atlassian.net/browse/GEOT-6508\n-fixed WMSCoverageReader format handling\n-added new unit test and sample capability doc\nChecklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n The changes are not breaking the build in downstream projects using SNAPSHOT dependencies, GeoWebCache and GeoServer.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for unsupported modules):\n\n There is a ticket in Jira describing the issue/improvement/feature (a notable exemptions is, changes not visible to end users)\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOT-XYZW] Title of the Jira ticket\"\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Documentation has been updated accordingly.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.", "createdAt": "2020-02-05T08:45:11Z", "url": "https://github.com/geotools/geotools/pull/2791", "merged": true, "mergeCommit": {"oid": "556b15faee803b5fc11dd02864b34ca2591284d1"}, "closed": true, "closedAt": "2020-02-05T09:31:59Z", "author": {"login": "imranrajjad"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBSE7kgH2gAyMzcxMjQ4OTEwOmJmYzhiNDU2ODI4ZDNhZGNjZjUzYmJmMmVjZDVkMWZlMDA0MGFkNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBSvmCgFqTM1MzU3MTUxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bfc8b456828d3adccf53bbf2ecd5d1fe0040ad79", "author": {"user": {"login": "imranrajjad", "name": "Imran"}}, "url": "https://github.com/geotools/geotools/commit/bfc8b456828d3adccf53bbf2ecd5d1fe0040ad79", "committedDate": "2020-02-05T08:43:41Z", "message": "[GEOT-6805] WMSCoverage Reader does not default to remote format when\nrequested with an unknown format\n\n-fixed WMSCoverageReader format handling\n-added new unit test and sample capability doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzNTcxNTEz", "url": "https://github.com/geotools/geotools/pull/2791#pullrequestreview-353571513", "createdAt": "2020-02-05T09:30:16Z", "commit": {"oid": "bfc8b456828d3adccf53bbf2ecd5d1fe0040ad79"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTozMDoxNlrOFlw9oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTozMDoxNlrOFlw9oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE0Mzg0MQ==", "bodyText": "Missing end of line punctuation, no need to change.", "url": "https://github.com/geotools/geotools/pull/2791#discussion_r375143841", "createdAt": "2020-02-05T09:30:16Z", "author": {"login": "nmco"}, "path": "modules/extension/wms/src/test/java/org/geotools/ows/wms/map/WMSLayerTest.java", "diffHunk": "@@ -122,4 +122,44 @@ public void testPreferedFormatWMSLayer() {\n         // verify backward compatability\n         assertTrue(l2.getReader().format.equalsIgnoreCase(\"image/png\"));\n     }\n+\n+    /**\n+     * Test method for {@link WMSLayer#WMSLayer(WebMapServer, Layer)}. Test the sceanrio where\n+     * remote WMS server only supports one format which is not any of the PNG variants", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bfc8b456828d3adccf53bbf2ecd5d1fe0040ad79"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2898, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}