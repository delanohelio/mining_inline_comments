{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MjU2MzU4", "number": 2811, "title": "[GEOT-6523] geopkg datetime", "bodyText": "GeoPackage supports the definition of a datetime (using a string marked as date or timestamp).\nSee https://osgeo-org.atlassian.net/browse/GEOT-6523\nChecklist\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (covered by geocat CLA)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n The changes are not breaking the build in downstream projects using SNAPSHOT dependencies, GeoWebCache and GeoServer.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for unsupported modules):\n\n There is a ticket in Jira describing the issue/improvement/feature (a notable exemptions is, changes not visible to end users)\n The pull request contains changes related to a single objective. If multiple focuses cannot be avoided, each one is in its own commit and has a separate ticket describing it.\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOT-XYZW] Title of the Jira ticket\"\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Documentation has been updated accordingly.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.", "createdAt": "2020-02-19T16:22:00Z", "url": "https://github.com/geotools/geotools/pull/2811", "merged": true, "mergeCommit": {"oid": "ae0c195a0bc18f4e04c76ef3cd105763bb62f765"}, "closed": true, "closedAt": "2020-02-28T01:24:14Z", "author": {"login": "davidblasby"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF45VsgH2gAyMzc3MjU2MzU4OjVkMjgxYWJlZGFlYzk1YTFjMDA0MzE3OWY1NmU3YmM0M2ZjYWQ3NGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIlkn7AFqTM2NjEwOTc0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5d281abedaec95a1c0043179f56e7bc43fcad74e", "author": {"user": null}, "url": "https://github.com/geotools/geotools/commit/5d281abedaec95a1c0043179f56e7bc43fcad74e", "committedDate": "2020-02-19T16:13:01Z", "message": "add support for DateTime to GeoPKG"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b7943ea37d19fbd78727112eff566b306f6ada1", "author": {"user": null}, "url": "https://github.com/geotools/geotools/commit/0b7943ea37d19fbd78727112eff566b306f6ada1", "committedDate": "2020-02-19T16:20:46Z", "message": "add date and datetime test geopkg"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMjU5Njg2", "url": "https://github.com/geotools/geotools/pull/2811#pullrequestreview-361259686", "createdAt": "2020-02-19T16:51:11Z", "commit": {"oid": "0b7943ea37d19fbd78727112eff566b306f6ada1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjo1MToxMVrOFrvHmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNjo1MToxMVrOFrvHmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQwNTA4MA==", "bodyText": "Ouch, this fixes the issue but severely limits usability of geopackages with time/elevation/custom dimensions, when having fast min/max/unique is a must. Production systems will work only on very small geopackages in this case.\nThinking out loud, if it's really just a matter of conversion of result datatype, one might consider also doing type conversions around here?\n\n  \n    \n      geotools/modules/library/jdbc/src/main/java/org/geotools/jdbc/JDBCDataStore.java\n    \n    \n         Line 1499\n      in\n      bae4ea1\n    \n    \n    \n    \n\n        \n          \n           while (rs.next()) { \n        \n    \n  \n\n\nOr is it sqlite that does the aggregate in an unexpected way? min/max should work even with strings, aren't dates are saved as ISO dates in sqlite, so they should sort lexicographically anyways?\nJust a thought.", "url": "https://github.com/geotools/geotools/pull/2811#discussion_r381405080", "createdAt": "2020-02-19T16:51:11Z", "author": {"login": "aaime"}, "path": "modules/plugin/geopkg/src/main/java/org/geotools/geopkg/GeoPkgDialect.java", "diffHunk": "@@ -82,6 +85,18 @@ public GeoPkgDialect(JDBCDataStore dataStore) {\n         geomWriterConfig = new GeoPkgGeomWriter.Configuration();\n     }\n \n+    // The JDBC aggregate functions doesn't support the geopkg DateTime types.\n+    //  This is because they are stored as strings in the database instead of real Date types\n+    //   and the JDBC aggregate driver does NOT provide the needed conversions.\n+    //\n+    // since this doesn't work, we don't support it.\n+    @Override\n+    public void registerAggregateFunctions(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b7943ea37d19fbd78727112eff566b306f6ada1"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24b2597e6c488b12684105203982bcc103a77fbd", "author": {"user": null}, "url": "https://github.com/geotools/geotools/commit/24b2597e6c488b12684105203982bcc103a77fbd", "committedDate": "2020-02-20T08:06:51Z", "message": "add test cases for new geopkg datetime support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32aac27c98f7f4848ba5637d6448bd50c028ee7b", "author": {"user": null}, "url": "https://github.com/geotools/geotools/commit/32aac27c98f7f4848ba5637d6448bd50c028ee7b", "committedDate": "2020-02-20T11:07:42Z", "message": "update code formating"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDc4NjE1", "url": "https://github.com/geotools/geotools/pull/2811#pullrequestreview-366078615", "createdAt": "2020-02-27T23:47:31Z", "commit": {"oid": "32aac27c98f7f4848ba5637d6448bd50c028ee7b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzo0NzozMVrOFvlHvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzo0OTowMVrOFvlJig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzNTU4Mw==", "bodyText": "We tend to use javadoc comments, C style comments are okay inside the code block.", "url": "https://github.com/geotools/geotools/pull/2811#discussion_r385435583", "createdAt": "2020-02-27T23:47:31Z", "author": {"login": "jodygarnett"}, "path": "modules/plugin/geopkg/src/main/java/org/geotools/geopkg/GeoPkgDialect.java", "diffHunk": "@@ -82,6 +84,18 @@ public GeoPkgDialect(JDBCDataStore dataStore) {\n         geomWriterConfig = new GeoPkgGeomWriter.Configuration();\n     }\n \n+    // The JDBC aggregate functions doesn't support the geopkg DateTime types.\n+    //  This is because they are stored as strings in the database instead of real Date types\n+    //   and the JDBC aggregate driver does NOT provide the needed conversions.\n+    //\n+    // since this doesn't work, we don't support it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32aac27c98f7f4848ba5637d6448bd50c028ee7b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzNTczMw==", "bodyText": "Thanks I will review", "url": "https://github.com/geotools/geotools/pull/2811#discussion_r385435733", "createdAt": "2020-02-27T23:48:00Z", "author": {"login": "jodygarnett"}, "path": "modules/plugin/geopkg/src/main/java/org/geotools/geopkg/GeoPkgDialect.java", "diffHunk": "@@ -82,6 +85,18 @@ public GeoPkgDialect(JDBCDataStore dataStore) {\n         geomWriterConfig = new GeoPkgGeomWriter.Configuration();\n     }\n \n+    // The JDBC aggregate functions doesn't support the geopkg DateTime types.\n+    //  This is because they are stored as strings in the database instead of real Date types\n+    //   and the JDBC aggregate driver does NOT provide the needed conversions.\n+    //\n+    // since this doesn't work, we don't support it.\n+    @Override\n+    public void registerAggregateFunctions(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQwNTA4MA=="}, "originalCommit": {"oid": "0b7943ea37d19fbd78727112eff566b306f6ada1"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzNTg3NA==", "bodyText": "Please use javadoc comment", "url": "https://github.com/geotools/geotools/pull/2811#discussion_r385435874", "createdAt": "2020-02-27T23:48:28Z", "author": {"login": "jodygarnett"}, "path": "modules/plugin/geopkg/src/main/java/org/geotools/geopkg/GeoPkgFilterToSQL.java", "diffHunk": "@@ -44,6 +44,39 @@ public GeoPkgFilterToSQL(GeoPkgDialect dialect) {\n         this.dialect = dialect;\n     }\n \n+    // cf.  visit(Literal expression,...)\n+    // When doing temporal queries (like \"time BETWEEN t1 AND t2\")\n+    //\n+    // The encoding of the column name (\"time\") and the literals must be the same!\n+    //\n+    //  datetime(\"Time\",'localtime') BETWEEN datetime(?,'localtime') AND datetime(?,'localtime')\n+    //\n+    // For non-time columns, this just relegates to the superclass\n+    // For GeoPKG, the time column is actually stored as a STRING.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32aac27c98f7f4848ba5637d6448bd50c028ee7b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzNTkzNQ==", "bodyText": "new file new date, 2020", "url": "https://github.com/geotools/geotools/pull/2811#discussion_r385435935", "createdAt": "2020-02-27T23:48:41Z", "author": {"login": "jodygarnett"}, "path": "modules/plugin/geopkg/src/test/java/org/geotools/geopkg/GeoPkgDatetimeTest.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2017, Open Source Geospatial Foundation (OSGeo)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32aac27c98f7f4848ba5637d6448bd50c028ee7b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzNjA0Mg==", "bodyText": "thanks, good practice to note the bug report :)", "url": "https://github.com/geotools/geotools/pull/2811#discussion_r385436042", "createdAt": "2020-02-27T23:49:01Z", "author": {"login": "jodygarnett"}, "path": "modules/plugin/geopkg/src/test/java/org/geotools/geopkg/GeoPkgDatetimeTest.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2017, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+package org.geotools.geopkg;\n+\n+import static org.junit.Assert.*;\n+\n+import java.io.IOException;\n+import java.net.URL;\n+import java.sql.Date;\n+import java.sql.Timestamp;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Set;\n+import org.geotools.data.DataStore;\n+import org.geotools.data.DataStoreFinder;\n+import org.geotools.data.simple.SimpleFeatureCollection;\n+import org.geotools.data.simple.SimpleFeatureIterator;\n+import org.geotools.data.simple.SimpleFeatureSource;\n+import org.geotools.data.util.NullProgressListener;\n+import org.geotools.feature.visitor.UniqueVisitor;\n+import org.geotools.filter.text.cql2.CQLException;\n+import org.geotools.filter.text.ecql.ECQL;\n+import org.geotools.test.TestData;\n+import org.geotools.util.URLs;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.opengis.feature.simple.SimpleFeature;\n+import org.opengis.feature.simple.SimpleFeatureType;\n+import org.opengis.filter.Filter;\n+\n+public class GeoPkgDatetimeTest {\n+    private DataStore gpkg;\n+\n+    /** @throws java.lang.Exception */\n+    @Before\n+    public void setUp() throws Exception {\n+        URL url = TestData.url(this.getClass(), \"datetime_date.gpkg\");\n+        // open the geopkg\n+        HashMap<String, Object> params = new HashMap<>();\n+        params.put(GeoPkgDataStoreFactory.DBTYPE.key, GeoPkgDataStoreFactory.DBTYPE.sample);\n+        params.put(GeoPkgDataStoreFactory.DATABASE.key, URLs.urlToFile(url));\n+\n+        gpkg = DataStoreFinder.getDataStore(params);\n+        assertNotNull(gpkg);\n+    }\n+\n+    /**\n+     * Test for GEOS-9392 - recognition of DATETIME and DATE.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32aac27c98f7f4848ba5637d6448bd50c028ee7b"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fd7432b36feeac7063511485a94a325157557cb", "author": {"user": null}, "url": "https://github.com/geotools/geotools/commit/7fd7432b36feeac7063511485a94a325157557cb", "committedDate": "2020-02-27T23:55:10Z", "message": "change comments to javadoc comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b0251d9875acb7cfdcbcaeb4d3921e69abc6cea", "author": {"user": null}, "url": "https://github.com/geotools/geotools/commit/2b0251d9875acb7cfdcbcaeb4d3921e69abc6cea", "committedDate": "2020-02-28T00:44:43Z", "message": "change format of javadocs (via maven build)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTA5NzQy", "url": "https://github.com/geotools/geotools/pull/2811#pullrequestreview-366109742", "createdAt": "2020-02-28T01:23:58Z", "commit": {"oid": "2b0251d9875acb7cfdcbcaeb4d3921e69abc6cea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2922, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}