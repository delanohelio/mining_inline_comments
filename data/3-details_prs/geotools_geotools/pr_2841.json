{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwOTY1OTEy", "number": 2841, "title": "[GEOT-6535] ImageWorker getHistogram return always the first histogra\u2026", "bodyText": "\u2026m computed\n\nChecklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n The changes are not breaking the build in downstream projects using SNAPSHOT dependencies, GeoWebCache and GeoServer.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for unsupported modules):\n\n There is an issue in Jira describing the bug/task/new feature (a notable exemptions is, changes not visible to end users). The ticket is for the GeoTools project, if the issue was found elsewhere it's a good practice to link to the origin ticket/issue.\n The pull request contains changes related to a single objective. If multiple focuses cannot be avoided, each one is in its own commit and has a separate ticket describing it.\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOT-XYZW] Title of the Jira ticket\"\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Documentation has been updated accordingly.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.", "createdAt": "2020-03-19T12:08:37Z", "url": "https://github.com/geotools/geotools/pull/2841", "merged": true, "mergeCommit": {"oid": "3a1d3d2557c9e934737b19d1ebb57451831ac8d6"}, "closed": true, "closedAt": "2020-03-23T11:49:01Z", "author": {"login": "taba90"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPLW01AH2gAyMzkwOTY1OTEyOmY3MzA3YWMzOWExNmVjYjlmNDFjZWU1MDIyYmM4MjQ3MjhlYzcxMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQbq4sgH2gAyMzkwOTY1OTEyOmNmNTZjNjVmNWQ4NTNjYjI2MjE1NGEwNTI4YjFkMThmYmZkMGQ2MjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f7307ac39a16ecb9f41cee5022bc824728ec7133", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/f7307ac39a16ecb9f41cee5022bc824728ec7133", "committedDate": "2020-03-19T12:48:50Z", "message": "[GEOT-6535] ImageWorker getHistogram return always the first histogram computed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3eefc58985cf1c33754c5e66a8cb873d0919b86c", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/3eefc58985cf1c33754c5e66a8cb873d0919b86c", "committedDate": "2020-03-19T12:07:08Z", "message": "[GEOT-6535] ImageWorker getHistogram return always the first histogram computed"}, "afterCommit": {"oid": "f7307ac39a16ecb9f41cee5022bc824728ec7133", "author": {"user": {"login": "taba90", "name": null}}, "url": "https://github.com/geotools/geotools/commit/f7307ac39a16ecb9f41cee5022bc824728ec7133", "committedDate": "2020-03-19T12:48:50Z", "message": "[GEOT-6535] ImageWorker getHistogram return always the first histogram computed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MjkxNjA4", "url": "https://github.com/geotools/geotools/pull/2841#pullrequestreview-379291608", "createdAt": "2020-03-23T10:16:47Z", "commit": {"oid": "f7307ac39a16ecb9f41cee5022bc824728ec7133"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDoxNjo0N1rOF5-yAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDoxNjo0N1rOF5-yAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM0MTc2Mw==", "bodyText": "What happened here, lots of reformats?", "url": "https://github.com/geotools/geotools/pull/2841#discussion_r396341763", "createdAt": "2020-03-23T10:16:47Z", "author": {"login": "aaime"}, "path": "modules/library/coverage/src/main/java/org/geotools/image/ImageWorker.java", "diffHunk": "@@ -1137,75 +1137,83 @@ private Object getComputedProperty(final String name) {\n     /** Returns the histogram of the image. */\n     public Histogram getHistogram(int[] numBins, double[] lowValues, double[] highValues) {\n         Object histogram = getComputedProperty(HISTOGRAM);\n-        if (!(histogram instanceof Histogram)) {\n-            // Create the parameterBlock\n-            ParameterBlock pb = new ParameterBlock();\n-            pb.setSource(image, 0);\n-            if (JAIExt.isJAIExtOperation(\"Stats\")) {\n-                StatsType[] stats = new StatsType[] {StatsType.HISTOGRAM};\n-                // Band definition\n-                int numBands = getNumBands();\n-                int[] bands = new int[numBands];\n-                for (int i = 0; i < numBands; i++) {\n-                    bands[i] = i;\n-                }\n+        if (histogram instanceof HistogramWrapper) {\n+            HistogramWrapper wrapper = (HistogramWrapper) histogram;\n+            double[] prevHighs = wrapper.getHighValue();\n+            double[] prevLows = wrapper.getLowValue();\n+            int[] prevNumBins = wrapper.getNumBins();\n+            if (Arrays.equals(prevHighs, highValues)\n+                    && Arrays.equals(prevLows, lowValues)\n+                    && Arrays.equals(prevNumBins, numBins)) {\n+                return wrapper;\n+            }\n+        }\n+        // Create the parameterBlock\n+        ParameterBlock pb = new ParameterBlock();\n+        pb.setSource(image, 0);\n+        if (JAIExt.isJAIExtOperation(\"Stats\")) {\n+            StatsType[] stats = new StatsType[] {StatsType.HISTOGRAM};\n+            // Band definition\n+            int numBands = getNumBands();\n+            int[] bands = new int[numBands];\n+            for (int i = 0; i < numBands; i++) {\n+                bands[i] = i;\n+            }\n \n-                // Image parameters\n-                pb.set(xPeriod, 0); // xPeriod\n-                pb.set(yPeriod, 1); // yPeriod\n-                pb.set(roi, 2); // ROI\n-                pb.set(nodata, 3); // NoData\n-                pb.set(bands, 5); // band indexes\n-                pb.set(stats, 6); // statistic operation\n-                pb.set(numBins, 9); // Bin number.\n-                pb.set(lowValues, 7); // Lower values per band.\n-                pb.set(highValues, 8); // Higher values per band.\n-                image = JAI.create(\"Stats\", pb, getRenderingHints());\n-                // Retrieving the statistics\n-                Statistics[][] results =\n-                        (Statistics[][]) getComputedProperty(Statistics.STATS_PROPERTY);\n-                int[][] bins = new int[numBands][];\n-\n-                // Cycle on the bands\n-                for (int i = 0; i < results.length; i++) {\n-                    Statistics stat = results[i][0];\n-                    double[] binsDouble = (double[]) stat.getResult();\n-                    bins[i] = new int[binsDouble.length];\n-                    for (int j = 0; j < binsDouble.length; j++) {\n-                        bins[i][j] = (int) binsDouble[j];\n-                    }\n-                }\n-                ParameterBlock parameterBlock = getRenderedOperation().getParameterBlock();\n-                if (numBins == null) {\n-                    numBins = (int[]) parameterBlock.getObjectParameter(9);\n-                }\n-                if (lowValues == null) {\n-                    lowValues = (double[]) parameterBlock.getObjectParameter(7);\n-                }\n-                if (highValues == null) {\n-                    highValues = (double[]) parameterBlock.getObjectParameter(8);\n-                }\n-                HistogramWrapper wrapper =\n-                        new HistogramWrapper(numBins, lowValues, highValues, bins);\n-                // Setting the property\n-                if (image instanceof PlanarImage) {\n-                    ((PlanarImage) image).setProperty(HISTOGRAM, wrapper);\n-                } else {\n-                    PlanarImage p = getPlanarImage();\n-                    p.setProperty(HISTOGRAM, wrapper);\n-                    image = p;\n+            // Image parameters", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7307ac39a16ecb9f41cee5022bc824728ec7133"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MjkzNDM0", "url": "https://github.com/geotools/geotools/pull/2841#pullrequestreview-379293434", "createdAt": "2020-03-23T10:19:12Z", "commit": {"oid": "f7307ac39a16ecb9f41cee5022bc824728ec7133"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDoxOToxMlrOF5-3sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDoxOToxMlrOF5-3sA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM0MzIxNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (histogram instanceof HistogramWrapper) {\n          \n          \n            \n                    // can reuse cached histogram only if the bucket definitions are the same\n          \n          \n            \n                    if (histogram instanceof HistogramWrapper) {", "url": "https://github.com/geotools/geotools/pull/2841#discussion_r396343216", "createdAt": "2020-03-23T10:19:12Z", "author": {"login": "aaime"}, "path": "modules/library/coverage/src/main/java/org/geotools/image/ImageWorker.java", "diffHunk": "@@ -1137,75 +1137,83 @@ private Object getComputedProperty(final String name) {\n     /** Returns the histogram of the image. */\n     public Histogram getHistogram(int[] numBins, double[] lowValues, double[] highValues) {\n         Object histogram = getComputedProperty(HISTOGRAM);\n-        if (!(histogram instanceof Histogram)) {\n-            // Create the parameterBlock\n-            ParameterBlock pb = new ParameterBlock();\n-            pb.setSource(image, 0);\n-            if (JAIExt.isJAIExtOperation(\"Stats\")) {\n-                StatsType[] stats = new StatsType[] {StatsType.HISTOGRAM};\n-                // Band definition\n-                int numBands = getNumBands();\n-                int[] bands = new int[numBands];\n-                for (int i = 0; i < numBands; i++) {\n-                    bands[i] = i;\n-                }\n+        if (histogram instanceof HistogramWrapper) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7307ac39a16ecb9f41cee5022bc824728ec7133"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf56c65f5d853cb262154a0528b1d18fbfd0d626", "author": {"user": {"login": "aaime", "name": "Andrea Aime"}}, "url": "https://github.com/geotools/geotools/commit/cf56c65f5d853cb262154a0528b1d18fbfd0d626", "committedDate": "2020-03-23T10:23:09Z", "message": "Add clarifying comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2959, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}