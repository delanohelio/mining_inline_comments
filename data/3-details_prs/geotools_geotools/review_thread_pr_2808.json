{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1ODM0NzI0", "number": 2808, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwODoxNTo0MFrODgTISQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMjoxODozNVrODiB30A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTk0NDQxOnYy", "diffSide": "RIGHT", "path": "modules/extension/wmts/src/test/java/org/geotools/ows/wmts/WebMapTileServerTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwODoxNTo0MFrOFqbbkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOToyNzozN1rOFqddTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAzMzkzNw==", "bodyText": "What's the rational for removing these additional checks?", "url": "https://github.com/geotools/geotools/pull/2808#discussion_r380033937", "createdAt": "2020-02-17T08:15:40Z", "author": {"login": "ianturton"}, "path": "modules/extension/wmts/src/test/java/org/geotools/ows/wmts/WebMapTileServerTest.java", "diffHunk": "@@ -72,9 +72,7 @@ public void chGetEnvelopeTest() throws Exception {\n         // <ows:UpperCorner>11.47757 48.230651</ows:UpperCorner>\n         // </ows:WGS84BoundingBox>\n \n-        assertNotNull(wmts.getEnvelope(layer, CRS.decode(\"urn:ogc:def:crs:OGC:1.3:CRS84\")));\n-        assertNotNull(wmts.getEnvelope(layer, CRS.decode(\"CRS:84\")));\n-        assertNotNull(wmts.getEnvelope(layer, CRS.decode(\"EPSG:2056\")));\n+        assertNotNull(wmts.getEnvelope(layer, CRS.decode(\"urn:ogc:def:crs:EPSG:2056\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "207d28a337949f3e94910d625b2f38063a0c29ea"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA2NzE0OQ==", "bodyText": "Sorry, accidental, will put them back in", "url": "https://github.com/geotools/geotools/pull/2808#discussion_r380067149", "createdAt": "2020-02-17T09:27:37Z", "author": {"login": "singhdan"}, "path": "modules/extension/wmts/src/test/java/org/geotools/ows/wmts/WebMapTileServerTest.java", "diffHunk": "@@ -72,9 +72,7 @@ public void chGetEnvelopeTest() throws Exception {\n         // <ows:UpperCorner>11.47757 48.230651</ows:UpperCorner>\n         // </ows:WGS84BoundingBox>\n \n-        assertNotNull(wmts.getEnvelope(layer, CRS.decode(\"urn:ogc:def:crs:OGC:1.3:CRS84\")));\n-        assertNotNull(wmts.getEnvelope(layer, CRS.decode(\"CRS:84\")));\n-        assertNotNull(wmts.getEnvelope(layer, CRS.decode(\"EPSG:2056\")));\n+        assertNotNull(wmts.getEnvelope(layer, CRS.decode(\"urn:ogc:def:crs:EPSG:2056\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAzMzkzNw=="}, "originalCommit": {"oid": "207d28a337949f3e94910d625b2f38063a0c29ea"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTk1MzU1OnYy", "diffSide": "RIGHT", "path": "modules/library/metadata/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwODoxOToxMVrOFqbg1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOTo0NjowNVrOFqeEPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAzNTI4Ng==", "bodyText": "This should be the parameter ${project.version}", "url": "https://github.com/geotools/geotools/pull/2808#discussion_r380035286", "createdAt": "2020-02-17T08:19:11Z", "author": {"login": "ianturton"}, "path": "modules/library/metadata/pom.xml", "diffHunk": "@@ -135,6 +135,12 @@\n       <groupId>org.apache.commons</groupId>\n       <artifactId>commons-lang3</artifactId>\n     </dependency>\n+      <dependency>\n+          <groupId>org.geotools.ogc</groupId>\n+          <artifactId>net.opengis.ows</artifactId>\n+          <version>23-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "207d28a337949f3e94910d625b2f38063a0c29ea"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA3NzExNg==", "bodyText": "Will do", "url": "https://github.com/geotools/geotools/pull/2808#discussion_r380077116", "createdAt": "2020-02-17T09:46:05Z", "author": {"login": "singhdan"}, "path": "modules/library/metadata/pom.xml", "diffHunk": "@@ -135,6 +135,12 @@\n       <groupId>org.apache.commons</groupId>\n       <artifactId>commons-lang3</artifactId>\n     </dependency>\n+      <dependency>\n+          <groupId>org.geotools.ogc</groupId>\n+          <artifactId>net.opengis.ows</artifactId>\n+          <version>23-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAzNTI4Ng=="}, "originalCommit": {"oid": "207d28a337949f3e94910d625b2f38063a0c29ea"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTk1NzY1OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwODoyMDo1MFrOFqbjNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOTo0NDoyOVrOFqeAnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAzNTg5NA==", "bodyText": "is this a necessary change? how does it relate to the rest of the PR?", "url": "https://github.com/geotools/geotools/pull/2808#discussion_r380035894", "createdAt": "2020-02-17T08:20:50Z", "author": {"login": "ianturton"}, "path": "pom.xml", "diffHunk": "@@ -1830,7 +1830,7 @@\n             <exclude>${stress.skip.pattern}</exclude>\n             <exclude>${test.exclude.pattern}</exclude>\n           </excludes>\n-\t  <argLine>-Xmx${test.maxHeapSize} ${jvm.opts} -Dorg.geotools.test.extensive=${extensive.tests} -Dorg.geotools.test.interactive=${interactive.tests} -Dorg.geotools.image.test.skip=${skip.image.tests} -Dorg.geotools.image.test.interactive=${interactive.image} -Djava.awt.headless=${java.awt.headless} -Dsun.java2d.d3d=${sun.java2d.d3d} -Djava.io.tmpdir=\"${java.io.tmpdir}\" -Djava.library.path=\"${java.library.path}\" ${test.args}  -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:+IgnoreUnrecognizedVMOptions -Djava.util.logging.config.file=\"${geotoolsBaseDir}\"/${logging-profile}.properties --illegal-access=debug</argLine>\n+\t  <argLine>-Xmx${test.maxHeapSize} ${jvm.opts} -Dfile.encoding=UTF-8 -Dorg.geotools.test.extensive=${extensive.tests} -Dorg.geotools.test.interactive=${interactive.tests} -Dorg.geotools.image.test.skip=${skip.image.tests} -Dorg.geotools.image.test.interactive=${interactive.image} -Djava.awt.headless=${java.awt.headless} -Dsun.java2d.d3d=${sun.java2d.d3d} -Djava.io.tmpdir=\"${java.io.tmpdir}\" -Djava.library.path=\"${java.library.path}\" ${test.args}  -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:+IgnoreUnrecognizedVMOptions -Djava.util.logging.config.file=\"${geotoolsBaseDir}\"/${logging-profile}.properties --illegal-access=debug</argLine>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "207d28a337949f3e94910d625b2f38063a0c29ea"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA3NjE4OQ==", "bodyText": "This is because surefire doesn't appear to pass through the encoding when it forks tests. So without this, on my Windows machine, if I run the tests I get the following fail:\nexpected:<Bundesamt f\u00fcr Landestopografie swisstopo> but was:<Bundesamt f\u00c3\u00bcr Landestopografie swisstopo>\nI tried using <encoding>UTF-8</encoding> but that didn't get passed through to the command line when forking so ended up having to put it straight into <argLine>", "url": "https://github.com/geotools/geotools/pull/2808#discussion_r380076189", "createdAt": "2020-02-17T09:44:29Z", "author": {"login": "singhdan"}, "path": "pom.xml", "diffHunk": "@@ -1830,7 +1830,7 @@\n             <exclude>${stress.skip.pattern}</exclude>\n             <exclude>${test.exclude.pattern}</exclude>\n           </excludes>\n-\t  <argLine>-Xmx${test.maxHeapSize} ${jvm.opts} -Dorg.geotools.test.extensive=${extensive.tests} -Dorg.geotools.test.interactive=${interactive.tests} -Dorg.geotools.image.test.skip=${skip.image.tests} -Dorg.geotools.image.test.interactive=${interactive.image} -Djava.awt.headless=${java.awt.headless} -Dsun.java2d.d3d=${sun.java2d.d3d} -Djava.io.tmpdir=\"${java.io.tmpdir}\" -Djava.library.path=\"${java.library.path}\" ${test.args}  -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:+IgnoreUnrecognizedVMOptions -Djava.util.logging.config.file=\"${geotoolsBaseDir}\"/${logging-profile}.properties --illegal-access=debug</argLine>\n+\t  <argLine>-Xmx${test.maxHeapSize} ${jvm.opts} -Dfile.encoding=UTF-8 -Dorg.geotools.test.extensive=${extensive.tests} -Dorg.geotools.test.interactive=${interactive.tests} -Dorg.geotools.image.test.skip=${skip.image.tests} -Dorg.geotools.image.test.interactive=${interactive.image} -Djava.awt.headless=${java.awt.headless} -Dsun.java2d.d3d=${sun.java2d.d3d} -Djava.io.tmpdir=\"${java.io.tmpdir}\" -Djava.library.path=\"${java.library.path}\" ${test.args}  -XX:+TieredCompilation -XX:TieredStopAtLevel=1 -XX:+IgnoreUnrecognizedVMOptions -Djava.util.logging.config.file=\"${geotoolsBaseDir}\"/${logging-profile}.properties --illegal-access=debug</argLine>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDAzNTg5NA=="}, "originalCommit": {"oid": "207d28a337949f3e94910d625b2f38063a0c29ea"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDA4ODQ4OnYy", "diffSide": "RIGHT", "path": "modules/extension/wmts/src/main/java/org/geotools/ows/wmts/model/WMTSService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMjoxODozNVrOFtGR3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMjoxODozNVrOFtGR3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjgzMzExOQ==", "bodyText": "This needs a check against an empty serviceProvider. In the WMTS spec, the serviceProvder section is optional. Real life example is https://geodata.nationaalgeoregister.nl/tiles/service/wmts?request=GetCapabilities&service=WMTS", "url": "https://github.com/geotools/geotools/pull/2808#discussion_r382833119", "createdAt": "2020-02-21T22:18:35Z", "author": {"login": "singhdan"}, "path": "modules/extension/wmts/src/main/java/org/geotools/ows/wmts/model/WMTSService.java", "diffHunk": "@@ -14,20 +14,49 @@\n  */\n package org.geotools.ows.wmts.model;\n \n+import java.net.MalformedURLException;\n+import java.net.URL;\n import java.util.ArrayList;\n import java.util.List;\n import net.opengis.ows11.LanguageStringType;\n import net.opengis.ows11.ServiceIdentificationType;\n+import net.opengis.ows11.ServiceProviderType;\n import net.opengis.ows11.impl.KeywordsTypeImpl;\n import net.opengis.ows11.impl.LanguageStringTypeImpl;\n import org.geotools.data.ows.Service;\n+import org.geotools.metadata.iso.citation.ResponsiblePartyImpl;\n+import org.geotools.util.SimpleInternationalString;\n \n /**\n  * @author ian\n  * @author Matthias Schulze (LDBV at ldbv dot bayern dot de)\n  */\n public class WMTSService extends Service {\n \n+    public WMTSService(ServiceIdentificationType serviceType, ServiceProviderType serviceProvider) {\n+\n+        this(serviceType);\n+\n+        ResponsiblePartyImpl contactInfo =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ff657597df32fd5d56aa9bb14f9456cfc06d98"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3654, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}