{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NjcxNjA4", "number": 2733, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMjozMzo0NVrODYAoKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMjozNzo1MlrODYAr_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTAyNjk3OnYy", "diffSide": "RIGHT", "path": "modules/library/render/src/main/java/org/geotools/renderer/style/FontCache.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMjozMzo0NVrOFdoAVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMTowODoxNlrOFeV0qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYwODQ3MA==", "bodyText": "Should this put the result into alternatives before returning? As far as I can tell, nothing ever gets written to alternatives currently.", "url": "https://github.com/geotools/geotools/pull/2733#discussion_r366608470", "createdAt": "2020-01-14T22:33:45Z", "author": {"login": "tbarsballe"}, "path": "modules/library/render/src/main/java/org/geotools/renderer/style/FontCache.java", "diffHunk": "@@ -252,4 +259,31 @@ public synchronized void resetCache() {\n \n         return availableFonts;\n     }\n+\n+    /**\n+     * Given a font name, returns alternatives for other scripts, based on the assumption they start\n+     * with the same base name.\n+     *\n+     * @param name\n+     * @return A list of font names with the same base name\n+     */\n+    public List<String> getAlternatives(String name) {\n+        List<String> result = alternatives.get(name);\n+        if (result == null) {\n+            result =\n+                    FontCache.getDefaultInstance()\n+                            .getAvailableFonts()\n+                            .stream()\n+                            .filter(f -> f.startsWith(name))\n+                            .filter(\n+                                    f -> { // leave out alterations, use base fonts\n+                                        String lc = f.toLowerCase();\n+                                        return !lc.contains(\" bold\") && !lc.contains(\" italic\");\n+                                    })\n+                            .sorted() // leave further altered fonts down the line, base ones first\n+                            .collect(Collectors.toList());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f57abf72f77a6856730685a19735596aad3cfbc"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM1OTE0NA==", "bodyText": "Good catch, thanks!", "url": "https://github.com/geotools/geotools/pull/2733#discussion_r367359144", "createdAt": "2020-01-16T11:08:16Z", "author": {"login": "aaime"}, "path": "modules/library/render/src/main/java/org/geotools/renderer/style/FontCache.java", "diffHunk": "@@ -252,4 +259,31 @@ public synchronized void resetCache() {\n \n         return availableFonts;\n     }\n+\n+    /**\n+     * Given a font name, returns alternatives for other scripts, based on the assumption they start\n+     * with the same base name.\n+     *\n+     * @param name\n+     * @return A list of font names with the same base name\n+     */\n+    public List<String> getAlternatives(String name) {\n+        List<String> result = alternatives.get(name);\n+        if (result == null) {\n+            result =\n+                    FontCache.getDefaultInstance()\n+                            .getAvailableFonts()\n+                            .stream()\n+                            .filter(f -> f.startsWith(name))\n+                            .filter(\n+                                    f -> { // leave out alterations, use base fonts\n+                                        String lc = f.toLowerCase();\n+                                        return !lc.contains(\" bold\") && !lc.contains(\" italic\");\n+                                    })\n+                            .sorted() // leave further altered fonts down the line, base ones first\n+                            .collect(Collectors.toList());\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYwODQ3MA=="}, "originalCommit": {"oid": "2f57abf72f77a6856730685a19735596aad3cfbc"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTAzNjc5OnYy", "diffSide": "RIGHT", "path": "modules/library/render/src/test/java/org/geotools/renderer/lite/LetterConflictTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMjozNzo1MlrOFdoGTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMTowODo1OFrOFeV1rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYwOTk5OQ==", "bodyText": "This should be restored to its prior state before merging", "url": "https://github.com/geotools/geotools/pull/2733#discussion_r366609999", "createdAt": "2020-01-14T22:37:52Z", "author": {"login": "tbarsballe"}, "path": "modules/library/render/src/test/java/org/geotools/renderer/lite/LetterConflictTest.java", "diffHunk": "@@ -55,8 +55,8 @@\n      *\n      * <p>Build with mvn -P image.interactive\n      */\n-    static final boolean IMAGE_INTERACTIVE =\n-            Boolean.getBoolean(\"org.geotools.image.test.interactive\");\n+    static final boolean IMAGE_INTERACTIVE = true;\n+    // Boolean.getBoolean(\"org.geotools.image.test.interactive\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f57abf72f77a6856730685a19735596aad3cfbc"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM1OTQwNQ==", "bodyText": "Yep", "url": "https://github.com/geotools/geotools/pull/2733#discussion_r367359405", "createdAt": "2020-01-16T11:08:58Z", "author": {"login": "aaime"}, "path": "modules/library/render/src/test/java/org/geotools/renderer/lite/LetterConflictTest.java", "diffHunk": "@@ -55,8 +55,8 @@\n      *\n      * <p>Build with mvn -P image.interactive\n      */\n-    static final boolean IMAGE_INTERACTIVE =\n-            Boolean.getBoolean(\"org.geotools.image.test.interactive\");\n+    static final boolean IMAGE_INTERACTIVE = true;\n+    // Boolean.getBoolean(\"org.geotools.image.test.interactive\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYwOTk5OQ=="}, "originalCommit": {"oid": "2f57abf72f77a6856730685a19735596aad3cfbc"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3690, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}