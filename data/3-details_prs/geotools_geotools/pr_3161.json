{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNjYyNTcw", "number": 3161, "title": "cql-json-module-start", "bodyText": "Checklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n The changes are not breaking the build in downstream projects using SNAPSHOT dependencies, GeoWebCache and GeoServer (there is an automatic PR check verifying this, check this when it turns green).\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for unsupported modules):\n\n There is an issue in Jira describing the bug/task/new feature (a notable exemptions is, changes not visible to end users). The ticket is for the GeoTools project, if the issue was found elsewhere it's a good practice to link to the origin ticket/issue.\n The pull request contains changes related to a single objective. If multiple focuses cannot be avoided, each one is in its own commit and has a separate ticket describing it.\n PR for bug fixes and small new features are presented as a single commit\n Commit message(s) must be in the form \"[GEOT-XYZW] Title of the Jira ticket\"\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Documentation has been updated accordingly.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.", "createdAt": "2020-09-24T19:45:47Z", "url": "https://github.com/geotools/geotools/pull/3161", "merged": true, "mergeCommit": {"oid": "6bdbcbe563532e75ae5ca6f5c6a5eb0a81654994"}, "closed": true, "closedAt": "2020-10-16T16:12:44Z", "author": {"login": "turingtestfail"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMHU2RAFqTQ5NTkyNzAyNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQMY4uAH2gAyNDkyNjYyNTcwOjJlZWM0OWVjOWY0NDdiZGJjZTI1NGI2YmEyODFkZmE3M2NmZDA3Njk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1OTI3MDI2", "url": "https://github.com/geotools/geotools/pull/3161#pullrequestreview-495927026", "createdAt": "2020-09-24T20:28:51Z", "commit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDoyODo1MlrOHXreIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDozNDo1NVrOHXrrLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MTUyMA==", "bodyText": "2020 ?", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494591520", "createdAt": "2020-09-24T20:28:52Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/CQLJson.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MTc5Nw==", "bodyText": "We try for public javadocs, this is an unsupported module so you can wait until this is ready to be consider for the library.", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494591797", "createdAt": "2020-09-24T20:29:21Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/CQLJson.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import org.geotools.filter.text.commons.CompilerUtil;\n+import org.geotools.filter.text.cql2.CQLException;\n+import org.geotools.filter.text.cqljson.model.Predicates;\n+import org.opengis.filter.Filter;\n+import org.opengis.filter.FilterFactory;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5MzAxNA==", "bodyText": "This is a bit odd to have as a builder, are you sure you are not looking for a FilterVisitor? Traverse the data structure and covert ...", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494593014", "createdAt": "2020-09-24T20:31:42Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/CQLJsonFilterBuilder.java", "diffHunk": "@@ -0,0 +1,610 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import org.geotools.filter.text.cqljson.model.After;\n+import org.geotools.filter.text.cqljson.model.Anyinteracts;\n+import org.geotools.filter.text.cqljson.model.Before;\n+import org.geotools.filter.text.cqljson.model.Begins;\n+import org.geotools.filter.text.cqljson.model.Begunby;\n+import org.geotools.filter.text.cqljson.model.Between;\n+import org.geotools.filter.text.cqljson.model.Contains;\n+import org.geotools.filter.text.cqljson.model.Crosses;\n+import org.geotools.filter.text.cqljson.model.Disjoint;\n+import org.geotools.filter.text.cqljson.model.During;\n+import org.geotools.filter.text.cqljson.model.Endedby;\n+import org.geotools.filter.text.cqljson.model.Ends;\n+import org.geotools.filter.text.cqljson.model.Eq;\n+import org.geotools.filter.text.cqljson.model.Equals;\n+import org.geotools.filter.text.cqljson.model.FunctionObjectArgument;\n+import org.geotools.filter.text.cqljson.model.Gt;\n+import org.geotools.filter.text.cqljson.model.Gte;\n+import org.geotools.filter.text.cqljson.model.In;\n+import org.geotools.filter.text.cqljson.model.Intersects;\n+import org.geotools.filter.text.cqljson.model.Like;\n+import org.geotools.filter.text.cqljson.model.Lt;\n+import org.geotools.filter.text.cqljson.model.Lte;\n+import org.geotools.filter.text.cqljson.model.Meets;\n+import org.geotools.filter.text.cqljson.model.Metby;\n+import org.geotools.filter.text.cqljson.model.Overlappedby;\n+import org.geotools.filter.text.cqljson.model.Overlaps;\n+import org.geotools.filter.text.cqljson.model.TContains;\n+import org.geotools.filter.text.cqljson.model.Tequals;\n+import org.geotools.filter.text.cqljson.model.Tintersects;\n+import org.geotools.filter.text.cqljson.model.Touches;\n+import org.geotools.filter.text.cqljson.model.Toverlaps;\n+import org.geotools.filter.text.cqljson.model.Within;\n+import org.geotools.filter.text.generated.parsers.ParseException;\n+import org.opengis.filter.Filter;\n+import org.opengis.filter.FilterFactory;\n+import org.opengis.filter.expression.Expression;\n+import org.opengis.filter.expression.Function;\n+import org.opengis.filter.expression.Literal;\n+import org.opengis.filter.expression.PropertyName;\n+import org.opengis.geometry.Geometry;\n+\n+final class CQLJsonFilterBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5Mzc3Mg==", "bodyText": "I expect this class will be used a lot, may wish to go for a more explicit class name :)", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494593772", "createdAt": "2020-09-24T20:33:00Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/GeomUtil.java", "diffHunk": "@@ -0,0 +1,206 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.geotools.filter.text.generated.parsers.ParseException;\n+import org.geotools.geometry.GeneralDirectPosition;\n+import org.geotools.geometry.GeometryBuilder;\n+import org.geotools.referencing.crs.DefaultGeographicCRS;\n+import org.opengis.geometry.aggregate.MultiCurve;\n+import org.opengis.geometry.aggregate.MultiPoint;\n+import org.opengis.geometry.aggregate.MultiSurface;\n+import org.opengis.geometry.coordinate.PointArray;\n+import org.opengis.geometry.primitive.Curve;\n+import org.opengis.geometry.primitive.Point;\n+import org.opengis.geometry.primitive.Surface;\n+import org.opengis.geometry.primitive.SurfaceBoundary;\n+\n+public class GeomUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDU5NDg2MA==", "bodyText": "This used to be how enumerations were represented in Java (so they could be strongly typed).\nIs making SpatialExpressions an enum worthwhile?", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494594860", "createdAt": "2020-09-24T20:34:55Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/model/Contains.java", "diffHunk": "@@ -0,0 +1,20 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2016, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson.model;\n+\n+public class Contains extends SpatialExpressions {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1OTQ0NDY3", "url": "https://github.com/geotools/geotools/pull/3161#pullrequestreview-495944467", "createdAt": "2020-09-24T20:55:59Z", "commit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDo1NTo1OVrOHXsUew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMDo1NTo1OVrOHXsUew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYwNTQzNQ==", "bodyText": "I strongly recommend using  ECQL.toCQL(filter) rather than filter.toString() to have a stable string representation to compare against. As a bonus it should also show the difference between 5 and '\"5\"`.", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494605435", "createdAt": "2020-09-24T20:55:59Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/test/java/org/geotools/filter/text/cqljson/CQLJsonParsingTest.java", "diffHunk": "@@ -0,0 +1,598 @@\n+package org.geotools.filter.text.cqljson;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import org.geotools.filter.FilterFactoryImpl;\n+import org.geotools.filter.text.cql2.CQLException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.opengis.filter.Filter;\n+\n+public class CQLJsonParsingTest {\n+    @Test\n+    public void convertJsonToPredicates() throws JsonProcessingException, CQLException {\n+        String swimmingpool =\n+                \"{\"\n+                        + \"             \\\"and\\\": [\"\n+                        + \"                {\"\n+                        + \"                   \\\"eq\\\": {\"\n+                        + \"                      \\\"property\\\": \\\"swimming_pool\\\",\"\n+                        + \"                      \\\"value\\\": true\"\n+                        + \"                   }\"\n+                        + \"                },\"\n+                        + \"                {\"\n+                        + \"                   \\\"or\\\": [\"\n+                        + \"                      {\"\n+                        + \"                         \\\"gt\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"floor\\\",\"\n+                        + \"                            \\\"value\\\": 5\"\n+                        + \"                         }\"\n+                        + \"                      },\"\n+                        + \"                      {\"\n+                        + \"                         \\\"like\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"material\\\",\"\n+                        + \"                            \\\"value\\\": \\\"brick%\\\"\"\n+                        + \"                         }\"\n+                        + \"                      },\"\n+                        + \"                      {\"\n+                        + \"                         \\\"like\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"material\\\",\"\n+                        + \"                            \\\"value\\\": \\\"%brick\\\"\"\n+                        + \"                         }\"\n+                        + \"                      } \"\n+                        + \"                   ]\"\n+                        + \"                }\"\n+                        + \"             ]\"\n+                        + \"          }\";\n+\n+        CQLJsonCompiler cqlJsonCompiler =\n+                new CQLJsonCompiler(swimmingpool, new FilterFactoryImpl());\n+        cqlJsonCompiler.compileFilter();\n+        Filter filter = cqlJsonCompiler.getFilter();\n+        Assert.assertEquals(\n+                \"[[ swimming_pool = true ] AND [[ floor > 5 ] OR [ material is like brick% ] OR [ material is like %brick ]]]\",\n+                filter.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1OTU1MjQ3", "url": "https://github.com/geotools/geotools/pull/3161#pullrequestreview-495955247", "createdAt": "2020-09-24T21:13:15Z", "commit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMToxMzoxNVrOHXs1Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQyMToxMzoxNVrOHXs1Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDYxMzgxOQ==", "bodyText": "These methods can be hard to maintain with having to quote content.\n\nPlease see MapBoxTestUtils test for one idea to make this easier, a utility method that changes \\`` to \"` and then parses.\n\n    public static JSONObject object(String json) throws ParseException {\n        JSONParser parser = new JSONParser();\n        String text = json.replace('\\'', '\\\"');\n        Object object = parser.parse(text);\n        return (JSONObject) object;\n    }\n\nUsed like:\n        String jsonStr = \"{'name1': 'fred', 'name2' : 1, 'name3' : null, 'name4': { 'age': 1 }}\";\n        JSONObject object = MapboxTestUtils.object(jsonStr);\n\n\nAnother good approach is to have a property file of reference ECQL expressions to round trip (convert ECQL -parse-> Filter -encode-> CQL-JSON -parse-> Filter and then double check the Filters are the same. Which is what a lot of the duplication in this class is about.\n\nconvertAndIntersects=(beamMode = \"ScanSAR Narrow\" ] AND [ swathDirection = \"ascending\") ...\n\nThis feedback assume the module will be long lived and plan for adding more and more tests over time as problems are reported. See example here.", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r494613819", "createdAt": "2020-09-24T21:13:15Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/cql-json/src/test/java/org/geotools/filter/text/cqljson/CQLJsonParsingTest.java", "diffHunk": "@@ -0,0 +1,598 @@\n+package org.geotools.filter.text.cqljson;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import org.geotools.filter.FilterFactoryImpl;\n+import org.geotools.filter.text.cql2.CQLException;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.opengis.filter.Filter;\n+\n+public class CQLJsonParsingTest {\n+    @Test\n+    public void convertJsonToPredicates() throws JsonProcessingException, CQLException {\n+        String swimmingpool =\n+                \"{\"\n+                        + \"             \\\"and\\\": [\"\n+                        + \"                {\"\n+                        + \"                   \\\"eq\\\": {\"\n+                        + \"                      \\\"property\\\": \\\"swimming_pool\\\",\"\n+                        + \"                      \\\"value\\\": true\"\n+                        + \"                   }\"\n+                        + \"                },\"\n+                        + \"                {\"\n+                        + \"                   \\\"or\\\": [\"\n+                        + \"                      {\"\n+                        + \"                         \\\"gt\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"floor\\\",\"\n+                        + \"                            \\\"value\\\": 5\"\n+                        + \"                         }\"\n+                        + \"                      },\"\n+                        + \"                      {\"\n+                        + \"                         \\\"like\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"material\\\",\"\n+                        + \"                            \\\"value\\\": \\\"brick%\\\"\"\n+                        + \"                         }\"\n+                        + \"                      },\"\n+                        + \"                      {\"\n+                        + \"                         \\\"like\\\": {\"\n+                        + \"                            \\\"property\\\": \\\"material\\\",\"\n+                        + \"                            \\\"value\\\": \\\"%brick\\\"\"\n+                        + \"                         }\"\n+                        + \"                      } \"\n+                        + \"                   ]\"\n+                        + \"                }\"\n+                        + \"             ]\"\n+                        + \"          }\";\n+\n+        CQLJsonCompiler cqlJsonCompiler =\n+                new CQLJsonCompiler(swimmingpool, new FilterFactoryImpl());\n+        cqlJsonCompiler.compileFilter();\n+        Filter filter = cqlJsonCompiler.getFilter();\n+        Assert.assertEquals(\n+                \"[[ swimming_pool = true ] AND [[ floor > 5 ] OR [ material is like brick% ] OR [ material is like %brick ]]]\",\n+                filter.toString());\n+    }\n+\n+    @Test\n+    public void convertAndIntersects() throws JsonProcessingException, CQLException {\n+        String beam =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86639d8152e536d947bf934b6fa359b254f24ebb"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3670181c4bac64e47cb927cf104b5551ce38868", "author": {"user": {"login": "jmiller-self", "name": "Joseph Miller"}}, "url": "https://github.com/geotools/geotools/commit/e3670181c4bac64e47cb927cf104b5551ce38868", "committedDate": "2020-10-05T19:35:00Z", "message": "cql-json-module-start"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc3b4b4e34b6bc25df163be2072fc2523442b506", "author": {"user": {"login": "jmiller-self", "name": "Joseph Miller"}}, "url": "https://github.com/geotools/geotools/commit/cc3b4b4e34b6bc25df163be2072fc2523442b506", "committedDate": "2020-10-05T19:35:00Z", "message": "updated parent pom to 25"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37c1704e798cc86d2f2d514409f037fb3b35121e", "author": {"user": {"login": "jmiller-self", "name": "Joseph Miller"}}, "url": "https://github.com/geotools/geotools/commit/37c1704e798cc86d2f2d514409f037fb3b35121e", "committedDate": "2020-10-05T19:35:00Z", "message": "Fixed license year and changed tests to use ECQL.toCQL instead of toString"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75b9fdee4a84474afa6dbec03d503f57fae19c13", "author": {"user": {"login": "jmiller-self", "name": "Joseph Miller"}}, "url": "https://github.com/geotools/geotools/commit/75b9fdee4a84474afa6dbec03d503f57fae19c13", "committedDate": "2020-10-05T19:35:00Z", "message": "started on moving json test objects into test file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f66e41123cc1b5e43d02b70b30e301316c84112d", "author": {"user": {"login": "jmiller-self", "name": "Joseph Miller"}}, "url": "https://github.com/geotools/geotools/commit/f66e41123cc1b5e43d02b70b30e301316c84112d", "committedDate": "2020-10-05T19:35:00Z", "message": "half the tests are in the file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbb53dfc74d2c1711df0aaa93d67d3086df35c29", "author": {"user": {"login": "jmiller-self", "name": "Joseph Miller"}}, "url": "https://github.com/geotools/geotools/commit/cbb53dfc74d2c1711df0aaa93d67d3086df35c29", "committedDate": "2020-10-05T19:35:00Z", "message": "got all tests working with test json file and fixed issue with casting to double"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f93f308ec84663327adf9136a9f7fed669ba813c", "author": {"user": {"login": "jmiller-self", "name": "Joseph Miller"}}, "url": "https://github.com/geotools/geotools/commit/f93f308ec84663327adf9136a9f7fed669ba813c", "committedDate": "2020-09-29T14:56:59Z", "message": "got all tests working with test json file and fixed issue with casting to double"}, "afterCommit": {"oid": "cbb53dfc74d2c1711df0aaa93d67d3086df35c29", "author": {"user": {"login": "jmiller-self", "name": "Joseph Miller"}}, "url": "https://github.com/geotools/geotools/commit/cbb53dfc74d2c1711df0aaa93d67d3086df35c29", "committedDate": "2020-10-05T19:35:00Z", "message": "got all tests working with test json file and fixed issue with casting to double"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbf52b2065b3e1e9fb972ab20ae854033369329a", "author": {"user": {"login": "jmiller-self", "name": "Joseph Miller"}}, "url": "https://github.com/geotools/geotools/commit/fbf52b2065b3e1e9fb972ab20ae854033369329a", "committedDate": "2020-10-05T19:38:56Z", "message": "qa cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNTQyNzM5", "url": "https://github.com/geotools/geotools/pull/3161#pullrequestreview-503542739", "createdAt": "2020-10-07T05:50:53Z", "commit": {"oid": "fbf52b2065b3e1e9fb972ab20ae854033369329a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNTo1MDo1M1rOHdjf1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNTo1MDo1M1rOHdjf1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc1MjM0Mw==", "bodyText": "There should be no version here (and it's wrong anyway), also as  compile scope is the default the scope should be omitted as well. Same for a few lines above", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r500752343", "createdAt": "2020-10-07T05:50:53Z", "author": {"login": "mprins"}, "path": "modules/unsupported/cql-json/pom.xml", "diffHunk": "@@ -0,0 +1,37 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>unsupported</artifactId>\n+        <groupId>org.geotools</groupId>\n+        <version>25-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>gt-cql-json</artifactId>\n+    <dependencies>\n+        <dependency>\n+            <groupId>com.fasterxml.jackson.core</groupId>\n+            <artifactId>jackson-core</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.geotools</groupId>\n+            <artifactId>gt-cql</artifactId>\n+            <version>24-SNAPSHOT</version>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.geotools</groupId>\n+            <artifactId>gt-jts-wrapper</artifactId>\n+            <version>24-SNAPSHOT</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf52b2065b3e1e9fb972ab20ae854033369329a"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNTQ0MDA1", "url": "https://github.com/geotools/geotools/pull/3161#pullrequestreview-503544005", "createdAt": "2020-10-07T05:54:00Z", "commit": {"oid": "fbf52b2065b3e1e9fb972ab20ae854033369329a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNTo1NDowMFrOHdjkFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNTo1NDowMFrOHdjkFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc1MzQyOQ==", "bodyText": "This statement can be omitted", "url": "https://github.com/geotools/geotools/pull/3161#discussion_r500753429", "createdAt": "2020-10-07T05:54:00Z", "author": {"login": "mprins"}, "path": "modules/unsupported/cql-json/src/main/java/org/geotools/filter/text/cqljson/MapToOpenGISGeomUtil.java", "diffHunk": "@@ -0,0 +1,217 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+\n+package org.geotools.filter.text.cqljson;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import org.geotools.filter.text.generated.parsers.ParseException;\n+import org.geotools.geometry.GeneralDirectPosition;\n+import org.geotools.geometry.GeometryBuilder;\n+import org.geotools.referencing.crs.DefaultGeographicCRS;\n+import org.opengis.geometry.aggregate.MultiCurve;\n+import org.opengis.geometry.aggregate.MultiPoint;\n+import org.opengis.geometry.aggregate.MultiSurface;\n+import org.opengis.geometry.coordinate.PointArray;\n+import org.opengis.geometry.primitive.Curve;\n+import org.opengis.geometry.primitive.Point;\n+import org.opengis.geometry.primitive.Surface;\n+import org.opengis.geometry.primitive.SurfaceBoundary;\n+\n+public class MapToOpenGISGeomUtil {\n+    public static GeometryBuilder FACTORY = null;\n+\n+    static {\n+        FACTORY = new GeometryBuilder(DefaultGeographicCRS.WGS84);\n+    }\n+\n+    /**\n+     * Jackson returns embedded geojson as a map so we use this method to create opengis.Geometry\n+     * for filter creation\n+     *\n+     * @param geoJsonAsMap GeoJSON Map\n+     * @return Geometry for filter creation\n+     * @throws ParseException\n+     */\n+    public static org.opengis.geometry.Geometry parseMapToGeometry(Map<String, Object> geoJsonAsMap)\n+            throws ParseException {\n+        String type = \"Bbox\";\n+        ArrayList coordinates = null;\n+        if (geoJsonAsMap.get(\"bbox\") != null) {\n+            type = \"Bbox\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf52b2065b3e1e9fb972ab20ae854033369329a"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2eec49ec9f447bdbce254b6ba281dfa73cfd0769", "author": {"user": {"login": "jmiller-self", "name": "Joseph Miller"}}, "url": "https://github.com/geotools/geotools/commit/2eec49ec9f447bdbce254b6ba281dfa73cfd0769", "committedDate": "2020-10-07T12:46:04Z", "message": "fixed hardcoded versions and redundant bbox assignment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3021, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}