{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1ODUyOTcw", "number": 2956, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwOTo1MzozOFrOEBTtNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwOTo1NDo0N1rOEBTuXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODA2OTAxOnYy", "diffSide": "RIGHT", "path": "modules/extension/wmts/src/main/java/org/geotools/ows/wmts/map/WMTSCoverageReader.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwOTo1MzozOFrOGdE9pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMjozODoyMVrOGgbpzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0MzIwNQ==", "bodyText": "I'd expect to see floor and ceil rather than round here - otherwise it can clip needed pixels", "url": "https://github.com/geotools/geotools/pull/2956#discussion_r433143205", "createdAt": "2020-06-01T09:53:38Z", "author": {"login": "ianturton"}, "path": "modules/extension/wmts/src/main/java/org/geotools/ows/wmts/map/WMTSCoverageReader.java", "diffHunk": "@@ -366,10 +383,10 @@ protected void renderTile(Tile tile, Graphics2D g2d, double[] points) {\n         }\n         g2d.drawImage(\n                 img,\n-                (int) points[0],\n-                (int) points[1],\n-                (int) Math.ceil(points[2] - points[0]),\n-                (int) Math.ceil(points[3] - points[1]),\n+                (int) Math.round(points[0]),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1fc773c9fb0e2b2ee46b898bab083d9e68feaa2"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3NjY3Nw==", "bodyText": "Maybe I'm not getting the point but using Math.round looks the better way to me since it provides the closest value to the double one. Also by doing some live test with both the solutions, this is the way I got the clearest output.", "url": "https://github.com/geotools/geotools/pull/2956#discussion_r434376677", "createdAt": "2020-06-03T07:53:41Z", "author": {"login": "taba90"}, "path": "modules/extension/wmts/src/main/java/org/geotools/ows/wmts/map/WMTSCoverageReader.java", "diffHunk": "@@ -366,10 +383,10 @@ protected void renderTile(Tile tile, Graphics2D g2d, double[] points) {\n         }\n         g2d.drawImage(\n                 img,\n-                (int) points[0],\n-                (int) points[1],\n-                (int) Math.ceil(points[2] - points[0]),\n-                (int) Math.ceil(points[3] - points[1]),\n+                (int) Math.round(points[0]),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0MzIwNQ=="}, "originalCommit": {"oid": "f1fc773c9fb0e2b2ee46b898bab083d9e68feaa2"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjU0MTA4OA==", "bodyText": "Been trough it too, there are a number of positions very close to the unit, using floor and ceil causes 1-2 pixels to be added and quality suffers quite visibly due to a rescale being necessary after that. @taba90 I'd still make sure that the box hits at least one pixel in both directions though.", "url": "https://github.com/geotools/geotools/pull/2956#discussion_r436541088", "createdAt": "2020-06-08T08:43:01Z", "author": {"login": "aaime"}, "path": "modules/extension/wmts/src/main/java/org/geotools/ows/wmts/map/WMTSCoverageReader.java", "diffHunk": "@@ -366,10 +383,10 @@ protected void renderTile(Tile tile, Graphics2D g2d, double[] points) {\n         }\n         g2d.drawImage(\n                 img,\n-                (int) points[0],\n-                (int) points[1],\n-                (int) Math.ceil(points[2] - points[0]),\n-                (int) Math.ceil(points[3] - points[1]),\n+                (int) Math.round(points[0]),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0MzIwNQ=="}, "originalCommit": {"oid": "f1fc773c9fb0e2b2ee46b898bab083d9e68feaa2"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY2MDY4NQ==", "bodyText": "@aaime fixed", "url": "https://github.com/geotools/geotools/pull/2956#discussion_r436660685", "createdAt": "2020-06-08T12:38:21Z", "author": {"login": "taba90"}, "path": "modules/extension/wmts/src/main/java/org/geotools/ows/wmts/map/WMTSCoverageReader.java", "diffHunk": "@@ -366,10 +383,10 @@ protected void renderTile(Tile tile, Graphics2D g2d, double[] points) {\n         }\n         g2d.drawImage(\n                 img,\n-                (int) points[0],\n-                (int) points[1],\n-                (int) Math.ceil(points[2] - points[0]),\n-                (int) Math.ceil(points[3] - points[1]),\n+                (int) Math.round(points[0]),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0MzIwNQ=="}, "originalCommit": {"oid": "f1fc773c9fb0e2b2ee46b898bab083d9e68feaa2"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODA3MTk5OnYy", "diffSide": "RIGHT", "path": "modules/extension/wmts/src/main/java/org/geotools/ows/wmts/request/AbstractGetTileRequest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwOTo1NDo0N1rOGdE_mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzo0OToyNFrOGeQGwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0MzcwNw==", "bodyText": "Why not leave scale as an int - rather than casting it when it's used?", "url": "https://github.com/geotools/geotools/pull/2956#discussion_r433143707", "createdAt": "2020-06-01T09:54:47Z", "author": {"login": "ianturton"}, "path": "modules/extension/wmts/src/main/java/org/geotools/ows/wmts/request/AbstractGetTileRequest.java", "diffHunk": "@@ -265,22 +261,12 @@ public void setCRS(CoordinateReferenceSystem coordinateReferenceSystem) {\n                                         WMTSTileService.EXTRA_HEADERS, extra -> new HashMap<>())))\n                 .putAll(this.headers);\n \n-        // zoomLevel = factory.getZoomLevel(zoom, wmtsService);\n-        int scale = 0;\n-\n-        try {\n-            scale =\n-                    (int)\n-                            Math.round(\n-                                    RendererUtilities.calculateScale(\n-                                            requestedBBox, requestedWidth, requestedHeight, DPI));\n-        } catch (FactoryException | TransformException ex) {\n-            LOGGER.log(Level.WARNING, \"Failed to calculate scale\", ex);\n-            throw new ServiceException(\"Failed to calculate scale: \" + ex.getMessage());\n-        }\n+        double scale =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1fc773c9fb0e2b2ee46b898bab083d9e68feaa2"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1NjI2Ng==", "bodyText": "A scale has never been an int thought? Seems a step in the right direction to me.", "url": "https://github.com/geotools/geotools/pull/2956#discussion_r433156266", "createdAt": "2020-06-01T10:25:34Z", "author": {"login": "aaime"}, "path": "modules/extension/wmts/src/main/java/org/geotools/ows/wmts/request/AbstractGetTileRequest.java", "diffHunk": "@@ -265,22 +261,12 @@ public void setCRS(CoordinateReferenceSystem coordinateReferenceSystem) {\n                                         WMTSTileService.EXTRA_HEADERS, extra -> new HashMap<>())))\n                 .putAll(this.headers);\n \n-        // zoomLevel = factory.getZoomLevel(zoom, wmtsService);\n-        int scale = 0;\n-\n-        try {\n-            scale =\n-                    (int)\n-                            Math.round(\n-                                    RendererUtilities.calculateScale(\n-                                            requestedBBox, requestedWidth, requestedHeight, DPI));\n-        } catch (FactoryException | TransformException ex) {\n-            LOGGER.log(Level.WARNING, \"Failed to calculate scale\", ex);\n-            throw new ServiceException(\"Failed to calculate scale: \" + ex.getMessage());\n-        }\n+        double scale =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0MzcwNw=="}, "originalCommit": {"oid": "f1fc773c9fb0e2b2ee46b898bab083d9e68feaa2"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2NTc2NA==", "bodyText": "but it is used as an int - using Math.round() and leaving it as a double and then casting to an int is misleading, If we want to use a double for scale then let's use a double all the way through.", "url": "https://github.com/geotools/geotools/pull/2956#discussion_r433165764", "createdAt": "2020-06-01T10:49:00Z", "author": {"login": "ianturton"}, "path": "modules/extension/wmts/src/main/java/org/geotools/ows/wmts/request/AbstractGetTileRequest.java", "diffHunk": "@@ -265,22 +261,12 @@ public void setCRS(CoordinateReferenceSystem coordinateReferenceSystem) {\n                                         WMTSTileService.EXTRA_HEADERS, extra -> new HashMap<>())))\n                 .putAll(this.headers);\n \n-        // zoomLevel = factory.getZoomLevel(zoom, wmtsService);\n-        int scale = 0;\n-\n-        try {\n-            scale =\n-                    (int)\n-                            Math.round(\n-                                    RendererUtilities.calculateScale(\n-                                            requestedBBox, requestedWidth, requestedHeight, DPI));\n-        } catch (FactoryException | TransformException ex) {\n-            LOGGER.log(Level.WARNING, \"Failed to calculate scale\", ex);\n-            throw new ServiceException(\"Failed to calculate scale: \" + ex.getMessage());\n-        }\n+        double scale =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0MzcwNw=="}, "originalCommit": {"oid": "f1fc773c9fb0e2b2ee46b898bab083d9e68feaa2"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3NDMzNg==", "bodyText": "fixed", "url": "https://github.com/geotools/geotools/pull/2956#discussion_r434374336", "createdAt": "2020-06-03T07:49:24Z", "author": {"login": "taba90"}, "path": "modules/extension/wmts/src/main/java/org/geotools/ows/wmts/request/AbstractGetTileRequest.java", "diffHunk": "@@ -265,22 +261,12 @@ public void setCRS(CoordinateReferenceSystem coordinateReferenceSystem) {\n                                         WMTSTileService.EXTRA_HEADERS, extra -> new HashMap<>())))\n                 .putAll(this.headers);\n \n-        // zoomLevel = factory.getZoomLevel(zoom, wmtsService);\n-        int scale = 0;\n-\n-        try {\n-            scale =\n-                    (int)\n-                            Math.round(\n-                                    RendererUtilities.calculateScale(\n-                                            requestedBBox, requestedWidth, requestedHeight, DPI));\n-        } catch (FactoryException | TransformException ex) {\n-            LOGGER.log(Level.WARNING, \"Failed to calculate scale\", ex);\n-            throw new ServiceException(\"Failed to calculate scale: \" + ex.getMessage());\n-        }\n+        double scale =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0MzcwNw=="}, "originalCommit": {"oid": "f1fc773c9fb0e2b2ee46b898bab083d9e68feaa2"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3532, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}