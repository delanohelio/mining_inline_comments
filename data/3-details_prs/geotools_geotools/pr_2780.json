{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5Njg2NjQ3", "number": 2780, "title": "[GEOT-6505] MBStyle exponential math is not a match for Mapbox GL one", "bodyText": "While the current approach looks legit, it does not provide the same results as Mapbox GL, and this results in visibly different map renderings, overly big or small roads and the like, depending on the zoom level (quite visible in the OpenMapTiles Dark Matter and Positron styles).\n@jodygarnett  or @tbarsballe are you in a position to review?\nChecklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n The changes are not breaking the build in downstream projects using SNAPSHOT dependencies, GeoWebCache and GeoServer.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for unsupported modules):\n\n There is a ticket in Jira describing the issue/improvement/feature (a notable exemptions is, changes not visible to end users)\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOT-XYZW] Title of the Jira ticket\"\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Documentation has been updated accordingly.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.", "createdAt": "2020-01-31T17:26:06Z", "url": "https://github.com/geotools/geotools/pull/2780", "merged": true, "mergeCommit": {"oid": "591c26ef80f83b505fc59d384ca791d03f432fc9"}, "closed": true, "closedAt": "2020-01-31T21:35:54Z", "author": {"login": "aaime"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_yhmtgH2gAyMzY5Njg2NjQ3OjBhOGFhZWE5ZjhmYTI3MzhmYmIxYTFjNDk5OTI2NGM3YjQ0NzYyOWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_2H4_gFqTM1MTc5MTQ2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0a8aaea9f8fa2738fbb1a1c4999264c7b447629c", "author": {"user": {"login": "aaime", "name": "Andrea Aime"}}, "url": "https://github.com/geotools/geotools/commit/0a8aaea9f8fa2738fbb1a1c4999264c7b447629c", "committedDate": "2020-01-31T17:24:07Z", "message": "[GEOT-6505] MBStyle exponential math is not a match for Mapbox GL one"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNzkxNDYw", "url": "https://github.com/geotools/geotools/pull/2780#pullrequestreview-351791460", "createdAt": "2020-01-31T21:34:45Z", "commit": {"oid": "0a8aaea9f8fa2738fbb1a1c4999264c7b447629c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTozNDo0NVrOFkYlog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTozNDo0NVrOFkYlog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5NTkwNg==", "bodyText": "Good research!\nsidebar: Is @Private annotation useful?", "url": "https://github.com/geotools/geotools/pull/2780#discussion_r373695906", "createdAt": "2020-01-31T21:34:45Z", "author": {"login": "jodygarnett"}, "path": "modules/unsupported/mbstyle/src/main/java/org/geotools/mbstyle/function/ExponentialFunction.java", "diffHunk": "@@ -171,21 +171,57 @@ public Object evaluate(Object object) {\n \n     private double numericExponential(\n             Object object, double inputValue, double base, Stop lower, Stop upper) {\n-\n         double stop1 = lower.stop.evaluate(object, Double.class);\n         double value1 = lower.value.evaluate(object, Double.class);\n         double stop2 = upper.stop.evaluate(object, Double.class);\n         double value2 = upper.value.evaluate(object, Double.class);\n+        double t = exponentialInterpolationRatio(object, inputValue, base, stop1, stop2);\n \n-        // Basic exponential function:\n-        //\n-        // value_i = scale*(stop_i)^base - offset\n-        //\n-        // Determine scale and offset based on the upper and lower stops:\n-        double scale = (value2 - value1) / (Math.pow(stop2, base) - Math.pow(stop1, base));\n-        double offset = value1 - scale * Math.pow(stop1, base);\n+        return (value1 * (1 - t)) + (value2 * t);\n+    }\n \n-        return offset + scale * Math.pow(inputValue, base);\n+    /**\n+     * Description from\n+     * https://github.com/mapbox/mapbox-gl-js/blob/master/src/style-spec/expression/definitions/interpolate.js#L220\n+     *\n+     * <p>Returns a **ratio** that can be used to interpolate between exponential function stops.\n+     * How it works: Two consecutive stop values define a (scaled and shifted) exponential function\n+     * `f(x) = a * base^x + b`, where `base` is the user-specified base, and `a` and `b` are\n+     * constants affording sufficient degrees of freedom to fit the function to the given stops.\n+     *\n+     * <p>Here's a bit of algebra that lets us compute `f(x)` directly from the stop values without\n+     * explicitly solving for `a` and `b`:\n+     *\n+     * <p>First stop value: `f(x0) = y0 = a * base^x0 + b` Second stop value: `f(x1) = y1 = a *\n+     * base^x1 + b` => `y1 - y0 = a(base^x1 - base^x0)` => `a = (y1 - y0)/(base^x1 - base^x0)`\n+     *\n+     * <p>Desired value: `f(x) = y = a * base^x + b` => `f(x) = y0 + a * (base^x - base^x0)`\n+     *\n+     * <p>From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a little\n+     * algebra: ``` a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0) =\n+     * (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0) ```\n+     *\n+     * <p>If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have `f(x) = y0 + (y1 - y0) *\n+     * ratio`. In other words, `ratio` may be treated as an interpolation factor between the two\n+     * stops' output values.\n+     *\n+     * <p>(Note: a slightly different form for `ratio`, `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `,\n+     * is equivalent, but requires fewer expensive `Math.pow()` operations.)\n+     *\n+     * @private\n+     */\n+    private double exponentialInterpolationRatio(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a8aaea9f8fa2738fbb1a1c4999264c7b447629c"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2890, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}