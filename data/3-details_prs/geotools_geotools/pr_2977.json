{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxOTQ4Mzc2", "number": 2977, "title": "[GEOT-6616]: mapGet FilterFunction to get a value from a map given th\u2026", "bodyText": "\u2026e mapName.key identifier\n\nChecklist\n\nReviewing is a process done by project maintainers, mostly on a volunteer basis. We try to keep the overhead as small as possible and appreciate if you help us to do so by completing the following items. Feel free to ask in a comment if you have troubles with any of them.\n\nFor all pull requests:\n\n Confirm you have read the contribution guidelines\n You have sent a Contribution Licence Agreement (CLA) as necessary (not required for small changes, e.g., fixing typos in documentation)\n Make sure the first PR targets the master branch, eventual backports will be managed later. This can be ignored if the PR is fixing an issue that only happens in a specific branch, but not in newer ones.\n The changes are not breaking the build in downstream projects using SNAPSHOT dependencies, GeoWebCache and GeoServer.\n\nThe following are required only for core and extension modules (they are welcomed, but not required, for unsupported modules):\n\n There is an issue in Jira describing the bug/task/new feature (a notable exemptions is, changes not visible to end users). The ticket is for the GeoTools project, if the issue was found elsewhere it's a good practice to link to the origin ticket/issue.\n The pull request contains changes related to a single objective. If multiple focuses cannot be avoided, each one is in its own commit and has a separate ticket describing it.\n PR for bug fixes and small new features are presented as a single commit\n Commit message must be in the form \"[GEOT-XYZW] Title of the Jira ticket\"\n New unit tests have been added covering the changes\n This PR passes all existing unit tests (test results will be reported by travis-ci after opening this PR)\n This PR passes the QA checks (QA checks results will be reported by travis-ci after opening this PR)\n Documentation has been updated accordingly.\n\nSubmitting the PR does not require you to check all items, but by the time it gets merged, they should be either satisfied or inapplicable.\nReplacing #2971", "createdAt": "2020-06-09T17:06:21Z", "url": "https://github.com/geotools/geotools/pull/2977", "merged": true, "mergeCommit": {"oid": "17d52268ba44bc86baa8dbe870fc6714b0bb77f8"}, "closed": true, "closedAt": "2020-06-10T09:07:39Z", "author": {"login": "dromagnoli"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpoPkTgBqjM0MjU5NzYxNzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp01qJgBqjM0MjgzMTQ4MjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a9f369960183927abf65d5dc36f59e0f7899038", "author": {"user": {"login": "dromagnoli", "name": "Daniele Romagnoli"}}, "url": "https://github.com/geotools/geotools/commit/0a9f369960183927abf65d5dc36f59e0f7899038", "committedDate": "2020-06-09T17:04:39Z", "message": "[GEOT-6616]: mapGet FilterFunction to get a value from a map given the mapName.key identifier"}, "afterCommit": {"oid": "2710015d1e9a9a9b7091d1af199489a23995aef5", "author": {"user": {"login": "dromagnoli", "name": "Daniele Romagnoli"}}, "url": "https://github.com/geotools/geotools/commit/2710015d1e9a9a9b7091d1af199489a23995aef5", "committedDate": "2020-06-09T17:09:56Z", "message": "[GEOT-6616]: mapGet FilterFunction to get a value from a map given the mapName.key identifier"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzgwNjgx", "url": "https://github.com/geotools/geotools/pull/2977#pullrequestreview-427380681", "createdAt": "2020-06-09T17:21:09Z", "commit": {"oid": "2710015d1e9a9a9b7091d1af199489a23995aef5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoyMToxMFrOGhUqcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoyMToxMFrOGhUqcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5NDczOQ==", "bodyText": "NPE prone, check if map is not null. Also, no need to check if the map contains, one can simply call get:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (map.containsKey(key)) {\n          \n          \n            \n                    if (map != null) {\n          \n          \n            \n                      return map.get(key);\n          \n          \n            \n                    }", "url": "https://github.com/geotools/geotools/pull/2977#discussion_r437594739", "createdAt": "2020-06-09T17:21:10Z", "author": {"login": "aaime"}, "path": "modules/library/main/src/main/java/org/geotools/filter/function/MapGetFunction.java", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+package org.geotools.filter.function;\n+\n+import static org.geotools.filter.capability.FunctionNameImpl.parameter;\n+\n+import java.util.Map;\n+import org.geotools.factory.CommonFactoryFinder;\n+import org.geotools.filter.FunctionExpressionImpl;\n+import org.geotools.filter.capability.FunctionNameImpl;\n+import org.geotools.util.Converters;\n+import org.opengis.filter.FilterFactory2;\n+import org.opengis.filter.capability.FunctionName;\n+import org.opengis.filter.expression.VolatileFunction;\n+\n+/** Extracts a value from a map given the map name and the needed key as parameters */\n+public class MapGetFunction extends FunctionExpressionImpl implements VolatileFunction {\n+\n+    FilterFactory2 FF = CommonFactoryFinder.getFilterFactory2();\n+\n+    public static FunctionName NAME =\n+            new FunctionNameImpl(\n+                    \"mapGet\",\n+                    parameter(\"value\", Object.class),\n+                    parameter(\"map\", Map.class),\n+                    parameter(\"key\", String.class));\n+\n+    public MapGetFunction() {\n+        super(NAME);\n+    }\n+\n+    @Override\n+    public Object evaluate(Object object, Class context) {\n+        Object result = evaluate(object);\n+        if (result == null) {\n+            return null;\n+        } else {\n+            return Converters.convert(result, context);\n+        }\n+    }\n+\n+    public Object evaluate(Object feature) {\n+        Map map = getExpression(0).evaluate(feature, Map.class);\n+        String key = getExpression(1).evaluate(feature, String.class);\n+        if (map.containsKey(key)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2710015d1e9a9a9b7091d1af199489a23995aef5"}, "originalPosition": 59}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2710015d1e9a9a9b7091d1af199489a23995aef5", "author": {"user": {"login": "dromagnoli", "name": "Daniele Romagnoli"}}, "url": "https://github.com/geotools/geotools/commit/2710015d1e9a9a9b7091d1af199489a23995aef5", "committedDate": "2020-06-09T17:09:56Z", "message": "[GEOT-6616]: mapGet FilterFunction to get a value from a map given the mapName.key identifier"}, "afterCommit": {"oid": "7cf4e52eab24eaba240a1fd014bd3ac7701876ee", "author": {"user": {"login": "dromagnoli", "name": "Daniele Romagnoli"}}, "url": "https://github.com/geotools/geotools/commit/7cf4e52eab24eaba240a1fd014bd3ac7701876ee", "committedDate": "2020-06-10T07:46:28Z", "message": "[GEOT-6616]: mapGet FilterFunction to get a value from a map given the mapName.key identifier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26ab29d18e97048087e4dc796370c25a356b3bc9", "author": {"user": {"login": "dromagnoli", "name": "Daniele Romagnoli"}}, "url": "https://github.com/geotools/geotools/commit/26ab29d18e97048087e4dc796370c25a356b3bc9", "committedDate": "2020-06-10T07:50:25Z", "message": "[GEOT-6616]: mapGet FilterFunction to get a value from a map given the mapName.key identifier"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7cf4e52eab24eaba240a1fd014bd3ac7701876ee", "author": {"user": {"login": "dromagnoli", "name": "Daniele Romagnoli"}}, "url": "https://github.com/geotools/geotools/commit/7cf4e52eab24eaba240a1fd014bd3ac7701876ee", "committedDate": "2020-06-10T07:46:28Z", "message": "[GEOT-6616]: mapGet FilterFunction to get a value from a map given the mapName.key identifier"}, "afterCommit": {"oid": "26ab29d18e97048087e4dc796370c25a356b3bc9", "author": {"user": {"login": "dromagnoli", "name": "Daniele Romagnoli"}}, "url": "https://github.com/geotools/geotools/commit/26ab29d18e97048087e4dc796370c25a356b3bc9", "committedDate": "2020-06-10T07:50:25Z", "message": "[GEOT-6616]: mapGet FilterFunction to get a value from a map given the mapName.key identifier"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2780, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}