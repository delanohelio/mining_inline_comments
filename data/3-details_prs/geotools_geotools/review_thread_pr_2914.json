{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDI4NzIy", "number": 2914, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzowNDowNVrOD5RxjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzowNTo0OVrOD5Rzbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzg2NjM3OnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/main/java/org/geotools/filter/function/ArrayFunction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzowNDowNVrOGQc05Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzowNDowNVrOGQc05Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwMjY5Mw==", "bodyText": "public class javadoc", "url": "https://github.com/geotools/geotools/pull/2914#discussion_r419902693", "createdAt": "2020-05-05T07:04:05Z", "author": {"login": "jodygarnett"}, "path": "modules/library/main/src/main/java/org/geotools/filter/function/ArrayFunction.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/*\n+ *    GeoTools - The Open Source Java GIS Toolkit\n+ *    http://geotools.org\n+ *\n+ *    (C) 2020, Open Source Geospatial Foundation (OSGeo)\n+ *\n+ *    This library is free software; you can redistribute it and/or\n+ *    modify it under the terms of the GNU Lesser General Public\n+ *    License as published by the Free Software Foundation;\n+ *    version 2.1 of the License.\n+ *\n+ *    This library is distributed in the hope that it will be useful,\n+ *    but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+ *    Lesser General Public License for more details.\n+ */\n+package org.geotools.filter.function;\n+\n+import static org.geotools.filter.capability.FunctionNameImpl.parameter;\n+\n+import org.geotools.filter.FunctionExpressionImpl;\n+import org.geotools.filter.capability.FunctionNameImpl;\n+import org.opengis.filter.capability.FunctionName;\n+\n+public class ArrayFunction extends FunctionExpressionImpl {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e490e2ac5f49181e4f8143157eb3dae6324009d"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMzg3MTE5OnYy", "diffSide": "RIGHT", "path": "modules/library/main/src/main/java/org/geotools/data/util/ArrayConverterFactory.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzowNTo0OVrOGQc3ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODowMToxM1rOGQ1QaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwMzQyNw==", "bodyText": "This looks great, is it worth checking for null here (returned when converters cannot make the conversion) or do you want to just let it ride?", "url": "https://github.com/geotools/geotools/pull/2914#discussion_r419903427", "createdAt": "2020-05-05T07:05:49Z", "author": {"login": "jodygarnett"}, "path": "modules/library/main/src/main/java/org/geotools/data/util/ArrayConverterFactory.java", "diffHunk": "@@ -55,4 +58,18 @@ public Converter createConverter(Class<?> source, Class<?> target, Hints hints)\n             return (T) result;\n         }\n     }\n+\n+    private static class ArrayToArrayConverter implements Converter {\n+        @Override\n+        public <T> T convert(Object source, Class<T> target) throws Exception {\n+            int arrLength = Array.getLength(source);\n+            Class<?> elementType = target.getComponentType();\n+            Object result = Array.newInstance(elementType, arrLength);\n+\n+            for (int count = 0; count < arrLength; count++) {\n+                Array.set(result, count, Converters.convert(Array.get(source, count), elementType));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e490e2ac5f49181e4f8143157eb3dae6324009d"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkzMTYxNg==", "bodyText": "@jodygarnett good catch. I think we could check the source element, if it's null then set the target array element to null, if the source is not null and the converted is (error in conversion) we can return null for the whole target array (to notify a conversion error). What do you think?", "url": "https://github.com/geotools/geotools/pull/2914#discussion_r419931616", "createdAt": "2020-05-05T08:05:15Z", "author": {"login": "mbarto"}, "path": "modules/library/main/src/main/java/org/geotools/data/util/ArrayConverterFactory.java", "diffHunk": "@@ -55,4 +58,18 @@ public Converter createConverter(Class<?> source, Class<?> target, Hints hints)\n             return (T) result;\n         }\n     }\n+\n+    private static class ArrayToArrayConverter implements Converter {\n+        @Override\n+        public <T> T convert(Object source, Class<T> target) throws Exception {\n+            int arrLength = Array.getLength(source);\n+            Class<?> elementType = target.getComponentType();\n+            Object result = Array.newInstance(elementType, arrLength);\n+\n+            for (int count = 0; count < arrLength; count++) {\n+                Array.set(result, count, Converters.convert(Array.get(source, count), elementType));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwMzQyNw=="}, "originalCommit": {"oid": "7e490e2ac5f49181e4f8143157eb3dae6324009d"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMwMjk1Mw==", "bodyText": "Yes that is the correct approach.\nNote: We did experiment with returning exceptions for this kind of failure, but the resulting exceptions would end up user visible (resulting in confused unhappy complaints). We ended up with this return null approach which IMHO ends up being too silent on details ... a tradeoff.", "url": "https://github.com/geotools/geotools/pull/2914#discussion_r420302953", "createdAt": "2020-05-05T18:01:13Z", "author": {"login": "jodygarnett"}, "path": "modules/library/main/src/main/java/org/geotools/data/util/ArrayConverterFactory.java", "diffHunk": "@@ -55,4 +58,18 @@ public Converter createConverter(Class<?> source, Class<?> target, Hints hints)\n             return (T) result;\n         }\n     }\n+\n+    private static class ArrayToArrayConverter implements Converter {\n+        @Override\n+        public <T> T convert(Object source, Class<T> target) throws Exception {\n+            int arrLength = Array.getLength(source);\n+            Class<?> elementType = target.getComponentType();\n+            Object result = Array.newInstance(elementType, arrLength);\n+\n+            for (int count = 0; count < arrLength; count++) {\n+                Array.set(result, count, Converters.convert(Array.get(source, count), elementType));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkwMzQyNw=="}, "originalCommit": {"oid": "7e490e2ac5f49181e4f8143157eb3dae6324009d"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3609, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}