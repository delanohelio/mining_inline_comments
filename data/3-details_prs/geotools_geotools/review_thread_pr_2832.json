{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NTk0NjE0", "number": 2832, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOTo1NjoyOVrODmnJhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDoxMToyNVrODo3t9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODEzODkzOnYy", "diffSide": "RIGHT", "path": "docs/user/build/install/ojdbc.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOTo1NjoyOVrOF0IDbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOTo1OToxNlrOF0IJkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwMjIyMQ==", "bodyText": "You got long Februaries where you live :-D", "url": "https://github.com/geotools/geotools/pull/2832#discussion_r390202221", "createdAt": "2020-03-10T09:56:29Z", "author": {"login": "aaime"}, "path": "docs/user/build/install/ojdbc.rst", "diffHunk": "@@ -1,34 +1,5 @@\n Oracle (Optional)\n -----------------\n \n-In order to use the Oracle module you need the proprietary JDBC driver from Oracle.\n+As of Feb 287 2020 Oracle has started hosting their JDBC drivers and required dependencies on Maven Central, special actions are no longer required.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9e479abbb5ee0d5089cabdd95a739c3456058ea"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwMzc5Mw==", "bodyText": "\ud83e\udd23", "url": "https://github.com/geotools/geotools/pull/2832#discussion_r390203793", "createdAt": "2020-03-10T09:59:16Z", "author": {"login": "mprins"}, "path": "docs/user/build/install/ojdbc.rst", "diffHunk": "@@ -1,34 +1,5 @@\n Oracle (Optional)\n -----------------\n \n-In order to use the Oracle module you need the proprietary JDBC driver from Oracle.\n+As of Feb 287 2020 Oracle has started hosting their JDBC drivers and required dependencies on Maven Central, special actions are no longer required.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIwMjIyMQ=="}, "originalCommit": {"oid": "f9e479abbb5ee0d5089cabdd95a739c3456058ea"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTgwMzcwOnYy", "diffSide": "RIGHT", "path": "docs/user/build/install/ojdbc.rst", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDowNDozMFrOF3sCTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzowMDoyOFrOGFsSbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzNzQ4NQ==", "bodyText": "I think you could remove this whole section, rather than leave a note that will gradually expire over time.", "url": "https://github.com/geotools/geotools/pull/2832#discussion_r393937485", "createdAt": "2020-03-17T20:04:30Z", "author": {"login": "jodygarnett"}, "path": "docs/user/build/install/ojdbc.rst", "diffHunk": "@@ -1,34 +1,4 @@\n Oracle (Optional)\n -----------------\n \n-In order to use the Oracle module you need the proprietary JDBC driver from Oracle.\n-\n-This page provides instructions for the ``plugins/jdbc/jdbc-oracle`` plugin:\n-\n-* The old unsupported Oracle datastore can be built with similar instructions. You will  have to use ``-Doracle.jdbc`` in place of ``-Doracle`` when creating the Eclipse projects\n-* As of Oracle 10.2 oracle has decided to \"seal\" its jar files (a security option that can be turned on in the manifest file). This option limits access to package-protected members to classes defined in the package and in the same JAR file. This means that the only way to create a connection is via a DataSource (and we are not there yet since we still use JDBC Drivers).\n-   \n-  Please download a driver from the 10.1.x series in order to avoid the above problem.\n-\n-Download the Driver and place into the Repository\n-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-Unlike most external libraries used in GeoTools, we cannot redistribute this jar. However, you can obtain them from the Oracle website, free of charge, after registering:\n-\n-1. Download the Oracle JDBC Driver: http://otn.oracle.com/software/tech/java/sqlj_jdbc/content.html\n-2. Once you download the jar, you should place them in the Oracle Maven repository directory::\n-      \n-      mvn install:install-file -Dfile=ojdbc7.jar -DgroupId=com.oracle -DartifactId=ojdbc7 -Dversion=12.1.0.2 -Dpackaging=jar -DgeneratePom=true\n-\n-Switching between Oracle Profiles with oracle.jdbc property\n-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-The oracle modules are all set up to work with a pretend \"mock\" jdbc driver in order to compile. To actually use the real thing you are going to need to set the ``oracle.jdbc`` property.\n-\n-You will need to do this each time on the command line (as of Maven 2.0.4 there is no way to set a property in your ``settings.xml`` file that can be used to configure other profiles):\n-\n-Here is an example that builds eclipse .classpath and .project files using the real driver::\n-   \n-   mvn eclipse:eclipse -Doracle\n-\n-If the property is not set the \u201cdummy\u201d jdbc driver will be used.\n+As of Feb 27 2020 Oracle has started hosting their JDBC drivers and required dependencies on Maven Central, special actions are no longer required.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc675f159978e2635eb3f2a6958a5de2f4c17f2f"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI0MTI4MA==", "bodyText": "that would leave the file empty, so the file can then be deleted?", "url": "https://github.com/geotools/geotools/pull/2832#discussion_r394241280", "createdAt": "2020-03-18T10:22:47Z", "author": {"login": "mprins"}, "path": "docs/user/build/install/ojdbc.rst", "diffHunk": "@@ -1,34 +1,4 @@\n Oracle (Optional)\n -----------------\n \n-In order to use the Oracle module you need the proprietary JDBC driver from Oracle.\n-\n-This page provides instructions for the ``plugins/jdbc/jdbc-oracle`` plugin:\n-\n-* The old unsupported Oracle datastore can be built with similar instructions. You will  have to use ``-Doracle.jdbc`` in place of ``-Doracle`` when creating the Eclipse projects\n-* As of Oracle 10.2 oracle has decided to \"seal\" its jar files (a security option that can be turned on in the manifest file). This option limits access to package-protected members to classes defined in the package and in the same JAR file. This means that the only way to create a connection is via a DataSource (and we are not there yet since we still use JDBC Drivers).\n-   \n-  Please download a driver from the 10.1.x series in order to avoid the above problem.\n-\n-Download the Driver and place into the Repository\n-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-Unlike most external libraries used in GeoTools, we cannot redistribute this jar. However, you can obtain them from the Oracle website, free of charge, after registering:\n-\n-1. Download the Oracle JDBC Driver: http://otn.oracle.com/software/tech/java/sqlj_jdbc/content.html\n-2. Once you download the jar, you should place them in the Oracle Maven repository directory::\n-      \n-      mvn install:install-file -Dfile=ojdbc7.jar -DgroupId=com.oracle -DartifactId=ojdbc7 -Dversion=12.1.0.2 -Dpackaging=jar -DgeneratePom=true\n-\n-Switching between Oracle Profiles with oracle.jdbc property\n-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-The oracle modules are all set up to work with a pretend \"mock\" jdbc driver in order to compile. To actually use the real thing you are going to need to set the ``oracle.jdbc`` property.\n-\n-You will need to do this each time on the command line (as of Maven 2.0.4 there is no way to set a property in your ``settings.xml`` file that can be used to configure other profiles):\n-\n-Here is an example that builds eclipse .classpath and .project files using the real driver::\n-   \n-   mvn eclipse:eclipse -Doracle\n-\n-If the property is not set the \u201cdummy\u201d jdbc driver will be used.\n+As of Feb 27 2020 Oracle has started hosting their JDBC drivers and required dependencies on Maven Central, special actions are no longer required.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzNzQ4NQ=="}, "originalCommit": {"oid": "cc675f159978e2635eb3f2a6958a5de2f4c17f2f"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzNzQyNQ==", "bodyText": "Yes the file can be removed then.", "url": "https://github.com/geotools/geotools/pull/2832#discussion_r408337425", "createdAt": "2020-04-14T18:11:31Z", "author": {"login": "jodygarnett"}, "path": "docs/user/build/install/ojdbc.rst", "diffHunk": "@@ -1,34 +1,4 @@\n Oracle (Optional)\n -----------------\n \n-In order to use the Oracle module you need the proprietary JDBC driver from Oracle.\n-\n-This page provides instructions for the ``plugins/jdbc/jdbc-oracle`` plugin:\n-\n-* The old unsupported Oracle datastore can be built with similar instructions. You will  have to use ``-Doracle.jdbc`` in place of ``-Doracle`` when creating the Eclipse projects\n-* As of Oracle 10.2 oracle has decided to \"seal\" its jar files (a security option that can be turned on in the manifest file). This option limits access to package-protected members to classes defined in the package and in the same JAR file. This means that the only way to create a connection is via a DataSource (and we are not there yet since we still use JDBC Drivers).\n-   \n-  Please download a driver from the 10.1.x series in order to avoid the above problem.\n-\n-Download the Driver and place into the Repository\n-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-Unlike most external libraries used in GeoTools, we cannot redistribute this jar. However, you can obtain them from the Oracle website, free of charge, after registering:\n-\n-1. Download the Oracle JDBC Driver: http://otn.oracle.com/software/tech/java/sqlj_jdbc/content.html\n-2. Once you download the jar, you should place them in the Oracle Maven repository directory::\n-      \n-      mvn install:install-file -Dfile=ojdbc7.jar -DgroupId=com.oracle -DartifactId=ojdbc7 -Dversion=12.1.0.2 -Dpackaging=jar -DgeneratePom=true\n-\n-Switching between Oracle Profiles with oracle.jdbc property\n-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-The oracle modules are all set up to work with a pretend \"mock\" jdbc driver in order to compile. To actually use the real thing you are going to need to set the ``oracle.jdbc`` property.\n-\n-You will need to do this each time on the command line (as of Maven 2.0.4 there is no way to set a property in your ``settings.xml`` file that can be used to configure other profiles):\n-\n-Here is an example that builds eclipse .classpath and .project files using the real driver::\n-   \n-   mvn eclipse:eclipse -Doracle\n-\n-If the property is not set the \u201cdummy\u201d jdbc driver will be used.\n+As of Feb 27 2020 Oracle has started hosting their JDBC drivers and required dependencies on Maven Central, special actions are no longer required.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzNzQ4NQ=="}, "originalCommit": {"oid": "cc675f159978e2635eb3f2a6958a5de2f4c17f2f"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyMTY3Nw==", "bodyText": "done", "url": "https://github.com/geotools/geotools/pull/2832#discussion_r408621677", "createdAt": "2020-04-15T07:00:28Z", "author": {"login": "mprins"}, "path": "docs/user/build/install/ojdbc.rst", "diffHunk": "@@ -1,34 +1,4 @@\n Oracle (Optional)\n -----------------\n \n-In order to use the Oracle module you need the proprietary JDBC driver from Oracle.\n-\n-This page provides instructions for the ``plugins/jdbc/jdbc-oracle`` plugin:\n-\n-* The old unsupported Oracle datastore can be built with similar instructions. You will  have to use ``-Doracle.jdbc`` in place of ``-Doracle`` when creating the Eclipse projects\n-* As of Oracle 10.2 oracle has decided to \"seal\" its jar files (a security option that can be turned on in the manifest file). This option limits access to package-protected members to classes defined in the package and in the same JAR file. This means that the only way to create a connection is via a DataSource (and we are not there yet since we still use JDBC Drivers).\n-   \n-  Please download a driver from the 10.1.x series in order to avoid the above problem.\n-\n-Download the Driver and place into the Repository\n-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-Unlike most external libraries used in GeoTools, we cannot redistribute this jar. However, you can obtain them from the Oracle website, free of charge, after registering:\n-\n-1. Download the Oracle JDBC Driver: http://otn.oracle.com/software/tech/java/sqlj_jdbc/content.html\n-2. Once you download the jar, you should place them in the Oracle Maven repository directory::\n-      \n-      mvn install:install-file -Dfile=ojdbc7.jar -DgroupId=com.oracle -DartifactId=ojdbc7 -Dversion=12.1.0.2 -Dpackaging=jar -DgeneratePom=true\n-\n-Switching between Oracle Profiles with oracle.jdbc property\n-^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-The oracle modules are all set up to work with a pretend \"mock\" jdbc driver in order to compile. To actually use the real thing you are going to need to set the ``oracle.jdbc`` property.\n-\n-You will need to do this each time on the command line (as of Maven 2.0.4 there is no way to set a property in your ``settings.xml`` file that can be used to configure other profiles):\n-\n-Here is an example that builds eclipse .classpath and .project files using the real driver::\n-   \n-   mvn eclipse:eclipse -Doracle\n-\n-If the property is not set the \u201cdummy\u201d jdbc driver will be used.\n+As of Feb 27 2020 Oracle has started hosting their JDBC drivers and required dependencies on Maven Central, special actions are no longer required.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzNzQ4NQ=="}, "originalCommit": {"oid": "cc675f159978e2635eb3f2a6958a5de2f4c17f2f"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTgwNzE3OnYy", "diffSide": "RIGHT", "path": "docs/user/library/referencing/oracle.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDowNTozN1rOF3sEcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDoxODowN1rOF3-apQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzODAzMg==", "bodyText": "TODO: We should make a note of this in our updating.rst file", "url": "https://github.com/geotools/geotools/pull/2832#discussion_r393938032", "createdAt": "2020-03-17T20:05:37Z", "author": {"login": "jodygarnett"}, "path": "docs/user/library/referencing/oracle.rst", "diffHunk": "@@ -91,7 +91,7 @@ The following connection management facilities are provided:\n Example using the popular ``commons-dbcp`` implementation of DataSource::\n     \n     BasicDataSource source = new BasicDataSource();\n-    source.setDriverClassName(\"oracle.jdbc.driver.OracleDriver\");\n+    source.setDriverClassName(\"oracle.jdbc.OracleDriver\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc675f159978e2635eb3f2a6958a5de2f4c17f2f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDIzODYyOQ==", "bodyText": "The old class is still there in ojdbc8/19.3.x, but was deprecated some years ago.\nWhen upgrading  to ojdbc10 (java 10+) or a higher version eg. 20.??.x it may disappear.", "url": "https://github.com/geotools/geotools/pull/2832#discussion_r394238629", "createdAt": "2020-03-18T10:18:07Z", "author": {"login": "mprins"}, "path": "docs/user/library/referencing/oracle.rst", "diffHunk": "@@ -91,7 +91,7 @@ The following connection management facilities are provided:\n Example using the popular ``commons-dbcp`` implementation of DataSource::\n     \n     BasicDataSource source = new BasicDataSource();\n-    source.setDriverClassName(\"oracle.jdbc.driver.OracleDriver\");\n+    source.setDriverClassName(\"oracle.jdbc.OracleDriver\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzODAzMg=="}, "originalCommit": {"oid": "cc675f159978e2635eb3f2a6958a5de2f4c17f2f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTgyMjM0OnYy", "diffSide": "RIGHT", "path": "modules/plugin/jdbc/jdbc-oracle/src/test/java/org/geotools/data/oracle/Oracle3DOnlineTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDoxMDozNlrOF3sOKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMDozODo1N1rOF3_JMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0MDUyMg==", "bodyText": "Can we correct the test? JTS does now support the Z and M parameters so it should finally be possible to make this work.", "url": "https://github.com/geotools/geotools/pull/2832#discussion_r393940522", "createdAt": "2020-03-17T20:10:36Z", "author": {"login": "jodygarnett"}, "path": "modules/plugin/jdbc/jdbc-oracle/src/test/java/org/geotools/data/oracle/Oracle3DOnlineTest.java", "diffHunk": "@@ -32,5 +33,28 @@ protected JDBC3DTestSetup createTestSetup() {\n      * GEOT-4133\n      */\n     @Override\n-    public void testCreateSchemaAndInsertPolyRectangle() throws Exception {}\n+    public void testCreateSchemaAndInsertPolyRectangle() {}\n+\n+    /**\n+     * This test does not work in Oracle, not even in SQL.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc675f159978e2635eb3f2a6958a5de2f4c17f2f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDI1MDU0NQ==", "bodyText": "I'll take another look at this, I think SDOSqlDumper only ever outputs 2D SDO geometries; but I'm not sure that is used or that GeometryConverter is used which should output 3D geometries (apart from Rectangle which seems a requirement for SDO filters - this may of course have changed), see:\n\n  \n    \n      geotools/modules/plugin/jdbc/jdbc-oracle/src/main/java/org/geotools/data/oracle/sdo/GeometryConverter.java\n    \n    \n        Lines 161 to 182\n      in\n      ff084ef\n    \n    \n    \n    \n\n        \n          \n           if (env.getWidth() > 0 \n        \n\n        \n          \n                   && env.getHeight() > 0 \n        \n\n        \n          \n                   && !(geom instanceof GeometryCollection) \n        \n\n        \n          \n                   && geom.isRectangle()) { \n        \n\n        \n          \n               // rectangle optimization. Actually, more than an optimization. A few operators \n        \n\n        \n          \n               // do not work properly if they don't get rectangular geoms encoded as rectangles \n        \n\n        \n          \n               // SDO_FILTER is an example of this silly situation \n        \n\n        \n          \n               SDO_POINT = null; \n        \n\n        \n          \n               int elemInfo[] = new int[] {1, 1003, 3}; \n        \n\n        \n          \n               double ordinates[]; \n        \n\n        \n          \n               if (SDO.D(geom) == 2) \n        \n\n        \n          \n                   ordinates = \n        \n\n        \n          \n                           new double[] { \n        \n\n        \n          \n                               env.getMinX(), env.getMinY(), env.getMaxX(), env.getMaxY() \n        \n\n        \n          \n                           }; \n        \n\n        \n          \n               else \n        \n\n        \n          \n                   ordinates = \n        \n\n        \n          \n                           new double[] { \n        \n\n        \n          \n                               env.getMinX(), env.getMinY(), 0, env.getMaxX(), env.getMaxY(), 0 \n        \n\n        \n          \n                           }; \n        \n\n        \n          \n            \n        \n\n        \n          \n               SDO_POINT = null;", "url": "https://github.com/geotools/geotools/pull/2832#discussion_r394250545", "createdAt": "2020-03-18T10:38:57Z", "author": {"login": "mprins"}, "path": "modules/plugin/jdbc/jdbc-oracle/src/test/java/org/geotools/data/oracle/Oracle3DOnlineTest.java", "diffHunk": "@@ -32,5 +33,28 @@ protected JDBC3DTestSetup createTestSetup() {\n      * GEOT-4133\n      */\n     @Override\n-    public void testCreateSchemaAndInsertPolyRectangle() throws Exception {}\n+    public void testCreateSchemaAndInsertPolyRectangle() {}\n+\n+    /**\n+     * This test does not work in Oracle, not even in SQL.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0MDUyMg=="}, "originalCommit": {"oid": "cc675f159978e2635eb3f2a6958a5de2f4c17f2f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTgyNTE2OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDoxMToyNVrOF3sP-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDoxMToyNVrOF3sP-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk0MDk4NQ==", "bodyText": "Happy to see this.", "url": "https://github.com/geotools/geotools/pull/2832#discussion_r393940985", "createdAt": "2020-03-17T20:11:25Z", "author": {"login": "jodygarnett"}, "path": "pom.xml", "diffHunk": "@@ -1284,11 +1278,10 @@\n       </dependency>\n \n       <!-- ORACLE -->\n-      <!-- Download and install into your own repo -->\n       <dependency>\n-        <artifactId>ojdbc7</artifactId>\n-        <groupId>com.oracle</groupId>\n-        <version>12.1.0.2</version>\n+        <artifactId>ojdbc8</artifactId>\n+        <groupId>com.oracle.database.jdbc</groupId>\n+        <version>19.3.0.0</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc675f159978e2635eb3f2a6958a5de2f4c17f2f"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3676, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}