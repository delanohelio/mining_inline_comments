{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NDg4MTQz", "number": 1199, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNTozNzo1NVrOEpiDsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNTozNzo1NVrOEpiDsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExOTg1MDc0OnYy", "diffSide": "RIGHT", "path": "gherkin/c/CMakeLists.txt", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNTozNzo1NVrOHbQRvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNzo0NDoxN1rOHbj_WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0MDI4NQ==", "bodyText": "Where does the log10 function come from when lib m is not present?", "url": "https://github.com/cucumber/common/pull/1199#discussion_r498340285", "createdAt": "2020-10-01T15:37:55Z", "author": {"login": "mpkorstanje"}, "path": "gherkin/c/CMakeLists.txt", "diffHunk": "@@ -67,7 +67,11 @@ LIST(APPEND GHERKIN_CLI\n \n \n add_library(gherkin ${GHERKIN_SRS})\n-target_link_libraries(gherkin PRIVATE m)\n+include(CheckLibraryExists)\n+CHECK_LIBRARY_EXISTS(m log10 \"\" HAVE_LIB_M)   \n+if (HAVE_LIB_M)  \n+    target_link_libraries(gherkin PRIVATE m)\n+endif (HAVE_LIB_M)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a07ab09de5752a229cfa58675f27863000189f5"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM2NzQwNA==", "bodyText": "it is checking for the symbol log10 in the library, log10 is the function that is being used in math.h.\nhttps://github.com/cucumber/cucumber/blob/4c14c9ac7d0bd8aaedbc7a0e8ee5d3b31756f8e2/gherkin/c/src/error_list.c#L216\nI don't know what the significance of it is, just that it is being used.", "url": "https://github.com/cucumber/common/pull/1199#discussion_r498367404", "createdAt": "2020-10-01T16:19:33Z", "author": {"login": "DewJunkie"}, "path": "gherkin/c/CMakeLists.txt", "diffHunk": "@@ -67,7 +67,11 @@ LIST(APPEND GHERKIN_CLI\n \n \n add_library(gherkin ${GHERKIN_SRS})\n-target_link_libraries(gherkin PRIVATE m)\n+include(CheckLibraryExists)\n+CHECK_LIBRARY_EXISTS(m log10 \"\" HAVE_LIB_M)   \n+if (HAVE_LIB_M)  \n+    target_link_libraries(gherkin PRIVATE m)\n+endif (HAVE_LIB_M)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0MDI4NQ=="}, "originalCommit": {"oid": "1a07ab09de5752a229cfa58675f27863000189f5"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM2ODMwNg==", "bodyText": "So just searching for lib m that has log10", "url": "https://github.com/cucumber/common/pull/1199#discussion_r498368306", "createdAt": "2020-10-01T16:21:00Z", "author": {"login": "DewJunkie"}, "path": "gherkin/c/CMakeLists.txt", "diffHunk": "@@ -67,7 +67,11 @@ LIST(APPEND GHERKIN_CLI\n \n \n add_library(gherkin ${GHERKIN_SRS})\n-target_link_libraries(gherkin PRIVATE m)\n+include(CheckLibraryExists)\n+CHECK_LIBRARY_EXISTS(m log10 \"\" HAVE_LIB_M)   \n+if (HAVE_LIB_M)  \n+    target_link_libraries(gherkin PRIVATE m)\n+endif (HAVE_LIB_M)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0MDI4NQ=="}, "originalCommit": {"oid": "1a07ab09de5752a229cfa58675f27863000189f5"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2OTc2Mg==", "bodyText": "You are implying that math.h is generally available. And checking for log10 in lib m is exceptional. Correct?", "url": "https://github.com/cucumber/common/pull/1199#discussion_r498469762", "createdAt": "2020-10-01T19:32:12Z", "author": {"login": "mpkorstanje"}, "path": "gherkin/c/CMakeLists.txt", "diffHunk": "@@ -67,7 +67,11 @@ LIST(APPEND GHERKIN_CLI\n \n \n add_library(gherkin ${GHERKIN_SRS})\n-target_link_libraries(gherkin PRIVATE m)\n+include(CheckLibraryExists)\n+CHECK_LIBRARY_EXISTS(m log10 \"\" HAVE_LIB_M)   \n+if (HAVE_LIB_M)  \n+    target_link_libraries(gherkin PRIVATE m)\n+endif (HAVE_LIB_M)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0MDI4NQ=="}, "originalCommit": {"oid": "1a07ab09de5752a229cfa58675f27863000189f5"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODU5MDg4NA==", "bodyText": "Nothing exceptional, just msvc does it different than clang and gcc.\nmath.h contains the declarations for the library.  In gcc & clang the definitions for the functions in math.h are contained in m lib.  In windows the definitions are included in the normal msvcrt runtime, and there is no m library.  So if you always try to link it in you get an error, because there is no m lib.\nSo this additions says, if there is a m library, and it contains a definition for log10, then link it in.  If the condition fails, then assume that it is part of the normal runtime, and does not need to be specifically linked in.\nWhen I ran into this error, searching led me to this solution.   It seems like maybe it is a common enough issue in compiling something written in gcc/clang and later compiled with MSVC that it was the majority of the 1st page.\nIn looking at it, it seems that math.h is part of the C standard, and I guess probably it is left up to the compiler implementation to decide where the library implementations go.  Or these decisions were made before it was standardized.\nThere may be some other vendor that defines math.h (I believe they must to conform with ISO), but they decide to call it math.lib instead of m or being just built in.  The build would fail on this compiler, and the error would be a link error for unresolved external.  Meaning we tried to call log10 declared math.h, but there is no implementation of the function.  And we'd have to add another check to add support for that compiler, and link in whatever library they decided to put the math.h function definitions in.\nSo it would be nice if the compiler could automatically figure out that if you include math.h, do the right thing, but unfortunately C/C++ doesn't work like that.  The reason for this is that there are 3 basic steps in C/C++ compilation.\n\npreprocessor - replace all preprocessor defintions.  #include <blah.h> gets replaced with the contents of blah.h.  and all of the macros get replaced with whatever they were #define.\ncompiler - each .c, .cpp (or other file you feed to the compiler) gets compiled into a separate object file.  Object files can have definitions, and a record of declarations that they need a definition to (externals).  But they can't really do anything, because they don't yet know about any of the other object files.\nLinker - linker takes in all of the object files, and any library files you tell it, builds a graph of the definitions provided in each object file, and the definitions needed in each object file, and makes everything work, by pointing the external calls to the right definition.\n\nStep 3 is where it is currently broken on msvc, because we told it there is an m.lib, but it doesn't exist, and so even though it does have everything it needs to complete the link, it lets us know that we told it to link in something and it can't find it.", "url": "https://github.com/cucumber/common/pull/1199#discussion_r498590884", "createdAt": "2020-10-02T02:05:56Z", "author": {"login": "DewJunkie"}, "path": "gherkin/c/CMakeLists.txt", "diffHunk": "@@ -67,7 +67,11 @@ LIST(APPEND GHERKIN_CLI\n \n \n add_library(gherkin ${GHERKIN_SRS})\n-target_link_libraries(gherkin PRIVATE m)\n+include(CheckLibraryExists)\n+CHECK_LIBRARY_EXISTS(m log10 \"\" HAVE_LIB_M)   \n+if (HAVE_LIB_M)  \n+    target_link_libraries(gherkin PRIVATE m)\n+endif (HAVE_LIB_M)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0MDI4NQ=="}, "originalCommit": {"oid": "1a07ab09de5752a229cfa58675f27863000189f5"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY2MzI1Ng==", "bodyText": "Cheers!", "url": "https://github.com/cucumber/common/pull/1199#discussion_r498663256", "createdAt": "2020-10-02T07:44:17Z", "author": {"login": "mpkorstanje"}, "path": "gherkin/c/CMakeLists.txt", "diffHunk": "@@ -67,7 +67,11 @@ LIST(APPEND GHERKIN_CLI\n \n \n add_library(gherkin ${GHERKIN_SRS})\n-target_link_libraries(gherkin PRIVATE m)\n+include(CheckLibraryExists)\n+CHECK_LIBRARY_EXISTS(m log10 \"\" HAVE_LIB_M)   \n+if (HAVE_LIB_M)  \n+    target_link_libraries(gherkin PRIVATE m)\n+endif (HAVE_LIB_M)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM0MDI4NQ=="}, "originalCommit": {"oid": "1a07ab09de5752a229cfa58675f27863000189f5"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 735, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}