{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNTEzNTUy", "number": 1280, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMjo0NzozNVrOFHK4tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMjo0OTozN1rOFHK7xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDYyNzExOnYy", "diffSide": "RIGHT", "path": "html-formatter/javascript/check.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMjo0NzozNVrOIIhj6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMjo1NDowNVrOIIhwhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgwOTM4Nw==", "bodyText": "What purpose does the PDF generation serve?", "url": "https://github.com/cucumber/common/pull/1280#discussion_r545809387", "createdAt": "2020-12-18T12:47:35Z", "author": {"login": "davidjgoss"}, "path": "html-formatter/javascript/check.js", "diffHunk": "@@ -0,0 +1,22 @@\n+const fs = require('fs')\n+const path = process.argv[2]\n+const html = fs.readFileSync(path, 'utf-8')\n+const puppeteer = require('puppeteer');\n+\n+(async () => {\n+  const browser = await puppeteer.launch();\n+  const page = await browser.newPage();\n+  await page.setContent(html)\n+  await page.pdf({path: 'hn.pdf', format: 'A4'});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "790c061866ffe2b2ae3b1eec3230db59e45bf60d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgxMjYxMw==", "bodyText": "re: pdf. Copy paste error - removed", "url": "https://github.com/cucumber/common/pull/1280#discussion_r545812613", "createdAt": "2020-12-18T12:54:05Z", "author": {"login": "aslakhellesoy"}, "path": "html-formatter/javascript/check.js", "diffHunk": "@@ -0,0 +1,22 @@\n+const fs = require('fs')\n+const path = process.argv[2]\n+const html = fs.readFileSync(path, 'utf-8')\n+const puppeteer = require('puppeteer');\n+\n+(async () => {\n+  const browser = await puppeteer.launch();\n+  const page = await browser.newPage();\n+  await page.setContent(html)\n+  await page.pdf({path: 'hn.pdf', format: 'A4'});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgwOTM4Nw=="}, "originalCommit": {"oid": "790c061866ffe2b2ae3b1eec3230db59e45bf60d"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMDYzNDkzOnYy", "diffSide": "RIGHT", "path": "html-formatter/javascript/check.js", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMjo0OTozN1rOIIhoKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxMzoxNTo1M1rOIIicdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgxMDQ3Mw==", "bodyText": "Not sure if there could be errors in lower components (e.g. markdown) but the root one still render enough for this to pass?\nTo solve a similar problem before I've queried the console for errors - I could always do a follow up if you think it's a good idea.", "url": "https://github.com/cucumber/common/pull/1280#discussion_r545810473", "createdAt": "2020-12-18T12:49:37Z", "author": {"login": "davidjgoss"}, "path": "html-formatter/javascript/check.js", "diffHunk": "@@ -0,0 +1,22 @@\n+const fs = require('fs')\n+const path = process.argv[2]\n+const html = fs.readFileSync(path, 'utf-8')\n+const puppeteer = require('puppeteer');\n+\n+(async () => {\n+  const browser = await puppeteer.launch();\n+  const page = await browser.newPage();\n+  await page.setContent(html)\n+  await page.pdf({path: 'hn.pdf', format: 'A4'});\n+  const dynamicHTML = await page.evaluate(() => {\n+    const content = document.querySelector('.cucumber-react')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "790c061866ffe2b2ae3b1eec3230db59e45bf60d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgxMzQzMA==", "bodyText": "Yes, inspecting console errors could be useful too. This check does not guarantee absence of errors, but it does detect presence of errors. I think that's a good start.\nBut we have a problem with CircleCI launching puppeteer.....", "url": "https://github.com/cucumber/common/pull/1280#discussion_r545813430", "createdAt": "2020-12-18T12:55:45Z", "author": {"login": "aslakhellesoy"}, "path": "html-formatter/javascript/check.js", "diffHunk": "@@ -0,0 +1,22 @@\n+const fs = require('fs')\n+const path = process.argv[2]\n+const html = fs.readFileSync(path, 'utf-8')\n+const puppeteer = require('puppeteer');\n+\n+(async () => {\n+  const browser = await puppeteer.launch();\n+  const page = await browser.newPage();\n+  await page.setContent(html)\n+  await page.pdf({path: 'hn.pdf', format: 'A4'});\n+  const dynamicHTML = await page.evaluate(() => {\n+    const content = document.querySelector('.cucumber-react')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgxMDQ3Mw=="}, "originalCommit": {"oid": "790c061866ffe2b2ae3b1eec3230db59e45bf60d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgyMzg2Mg==", "bodyText": "I've seen this before. They started requiring some libraries on the host system from 3.0.0 inc. libgbm.", "url": "https://github.com/cucumber/common/pull/1280#discussion_r545823862", "createdAt": "2020-12-18T13:15:53Z", "author": {"login": "davidjgoss"}, "path": "html-formatter/javascript/check.js", "diffHunk": "@@ -0,0 +1,22 @@\n+const fs = require('fs')\n+const path = process.argv[2]\n+const html = fs.readFileSync(path, 'utf-8')\n+const puppeteer = require('puppeteer');\n+\n+(async () => {\n+  const browser = await puppeteer.launch();\n+  const page = await browser.newPage();\n+  await page.setContent(html)\n+  await page.pdf({path: 'hn.pdf', format: 'A4'});\n+  const dynamicHTML = await page.evaluate(() => {\n+    const content = document.querySelector('.cucumber-react')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTgxMDQ3Mw=="}, "originalCommit": {"oid": "790c061866ffe2b2ae3b1eec3230db59e45bf60d"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 720, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}