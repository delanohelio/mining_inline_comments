{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMDc5MTQ2", "number": 845, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwOTo0NDoxNVrODWfJgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMToyNjoxOFrODWg1Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTA1NjAyOnYy", "diffSide": "RIGHT", "path": "gherkin/ruby/lib/gherkin/gherkin_query.rb", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwOTo0NDoxNVrOFbRdfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzowMjo0MlrOFbWLEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0MTk0OQ==", "bodyText": "are these methods \"synched up\" across all implementations. If they are that's cool. If not traditionally we would drop get_ and set_ prefixes in methods.", "url": "https://github.com/cucumber/common/pull/845#discussion_r364141949", "createdAt": "2020-01-08T09:44:15Z", "author": {"login": "luke-hill"}, "path": "gherkin/ruby/lib/gherkin/gherkin_query.rb", "diffHunk": "@@ -0,0 +1,54 @@\n+module Gherkin\n+  class Query\n+    def initialize\n+      @ast_node_locations = {}\n+    end\n+\n+    def update(message)\n+      update_feature(message.gherkin_document.feature) if message.gherkin_document\n+    end\n+\n+    def get_location(ast_node_id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eeb702457dc5d33e4b087c5247710b63d893ef3"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE2Nzg0Mg==", "bodyText": "We aim to have a consistent API between implementations, but I still think we should be idiomatic. Please change to location.", "url": "https://github.com/cucumber/common/pull/845#discussion_r364167842", "createdAt": "2020-01-08T10:42:13Z", "author": {"login": "aslakhellesoy"}, "path": "gherkin/ruby/lib/gherkin/gherkin_query.rb", "diffHunk": "@@ -0,0 +1,54 @@\n+module Gherkin\n+  class Query\n+    def initialize\n+      @ast_node_locations = {}\n+    end\n+\n+    def update(message)\n+      update_feature(message.gherkin_document.feature) if message.gherkin_document\n+    end\n+\n+    def get_location(ast_node_id)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0MTk0OQ=="}, "originalCommit": {"oid": "5eeb702457dc5d33e4b087c5247710b63d893ef3"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxOTE1Mw==", "bodyText": "done", "url": "https://github.com/cucumber/common/pull/845#discussion_r364219153", "createdAt": "2020-01-08T13:02:42Z", "author": {"login": "vincent-psarga"}, "path": "gherkin/ruby/lib/gherkin/gherkin_query.rb", "diffHunk": "@@ -0,0 +1,54 @@\n+module Gherkin\n+  class Query\n+    def initialize\n+      @ast_node_locations = {}\n+    end\n+\n+    def update(message)\n+      update_feature(message.gherkin_document.feature) if message.gherkin_document\n+    end\n+\n+    def get_location(ast_node_id)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0MTk0OQ=="}, "originalCommit": {"oid": "5eeb702457dc5d33e4b087c5247710b63d893ef3"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTA1NjE4OnYy", "diffSide": "RIGHT", "path": "gherkin/ruby/lib/gherkin/errors.rb", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwOTo0NDoxOVrOFbRdmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNTo0NjozNlrOFbbEuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0MTk3Ng==", "bodyText": "traditionally errors in ruby all end in error (I'm aware that there are existing ones here that don't), so it's not a biggie if you don't fix", "url": "https://github.com/cucumber/common/pull/845#discussion_r364141976", "createdAt": "2020-01-08T09:44:19Z", "author": {"login": "luke-hill"}, "path": "gherkin/ruby/lib/gherkin/errors.rb", "diffHunk": "@@ -1,5 +1,7 @@\n module Gherkin\n   class ParserError < StandardError; end\n+  class AstNodeNotLocatedException < Exception; end", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eeb702457dc5d33e4b087c5247710b63d893ef3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE2NzQxNA==", "bodyText": "Custom exceptions should extend from StandardError. Never extend Exception.", "url": "https://github.com/cucumber/common/pull/845#discussion_r364167414", "createdAt": "2020-01-08T10:41:10Z", "author": {"login": "aslakhellesoy"}, "path": "gherkin/ruby/lib/gherkin/errors.rb", "diffHunk": "@@ -1,5 +1,7 @@\n module Gherkin\n   class ParserError < StandardError; end\n+  class AstNodeNotLocatedException < Exception; end", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0MTk3Ng=="}, "originalCommit": {"oid": "5eeb702457dc5d33e4b087c5247710b63d893ef3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIxOTgzNw==", "bodyText": "inheritance is done.\nFor the Error vs Exception, all (except ParserError) are called XXXException, so I went with the rest", "url": "https://github.com/cucumber/common/pull/845#discussion_r364219837", "createdAt": "2020-01-08T13:04:27Z", "author": {"login": "vincent-psarga"}, "path": "gherkin/ruby/lib/gherkin/errors.rb", "diffHunk": "@@ -1,5 +1,7 @@\n module Gherkin\n   class ParserError < StandardError; end\n+  class AstNodeNotLocatedException < Exception; end", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0MTk3Ng=="}, "originalCommit": {"oid": "5eeb702457dc5d33e4b087c5247710b63d893ef3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDI5OTQ0OA==", "bodyText": "Makes sense for now yeh, top work though, this stuff should get gherkin 9 ready soon :)", "url": "https://github.com/cucumber/common/pull/845#discussion_r364299448", "createdAt": "2020-01-08T15:46:36Z", "author": {"login": "luke-hill"}, "path": "gherkin/ruby/lib/gherkin/errors.rb", "diffHunk": "@@ -1,5 +1,7 @@\n module Gherkin\n   class ParserError < StandardError; end\n+  class AstNodeNotLocatedException < Exception; end", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0MTk3Ng=="}, "originalCommit": {"oid": "5eeb702457dc5d33e4b087c5247710b63d893ef3"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTMzMTk1OnYy", "diffSide": "RIGHT", "path": "gherkin/ruby/lib/gherkin/gherkin_query.rb", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMToyNjoxOFrOFbUElQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzowNToxNFrOFbWOww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4NDcyNQ==", "bodyText": "Rename the file to query.rb", "url": "https://github.com/cucumber/common/pull/845#discussion_r364184725", "createdAt": "2020-01-08T11:26:18Z", "author": {"login": "aslakhellesoy"}, "path": "gherkin/ruby/lib/gherkin/gherkin_query.rb", "diffHunk": "@@ -0,0 +1,54 @@\n+module Gherkin\n+  class Query", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5eeb702457dc5d33e4b087c5247710b63d893ef3"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIyMDA5OQ==", "bodyText": "done", "url": "https://github.com/cucumber/common/pull/845#discussion_r364220099", "createdAt": "2020-01-08T13:05:14Z", "author": {"login": "vincent-psarga"}, "path": "gherkin/ruby/lib/gherkin/gherkin_query.rb", "diffHunk": "@@ -0,0 +1,54 @@\n+module Gherkin\n+  class Query", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE4NDcyNQ=="}, "originalCommit": {"oid": "5eeb702457dc5d33e4b087c5247710b63d893ef3"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 759, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}