{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzODAwNzcy", "number": 971, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMTowNzo1NVrODyPoVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMToxMDowNFrODyPrFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDExNDc2OnYy", "diffSide": "RIGHT", "path": "json-to-messages/javascript/src/JSONTraverse.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMTowNzo1NVrOGGLmLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMjoxMDowN1rOGG49Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEzNDYzOA==", "bodyText": "Platform typically means Windows/Unix/OSx. Would implementation be a better word?", "url": "https://github.com/cucumber/common/pull/971#discussion_r409134638", "createdAt": "2020-04-15T21:07:55Z", "author": {"login": "mpkorstanje"}, "path": "json-to-messages/javascript/src/JSONTraverse.ts", "diffHunk": "@@ -8,15 +8,16 @@ import { traverseFeature as traverseBehaveFeature } from './behave/JSONTraverse'\n import IPredictableSupportCode from './IPredictableSupportCode'\n import IAstMaker from './IAstMaker'\n import { IdGenerator, messages } from '@cucumber/messages'\n+import { Platform } from './types'\n \n export default function traverseFeature(\n-  sourceLang: string,\n+  platform: Platform,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5be39669392b0492856bad571b2b44c539b1213"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEzNTg2MA==", "bodyText": "Or dialect?", "url": "https://github.com/cucumber/common/pull/971#discussion_r409135860", "createdAt": "2020-04-15T21:10:26Z", "author": {"login": "mpkorstanje"}, "path": "json-to-messages/javascript/src/JSONTraverse.ts", "diffHunk": "@@ -8,15 +8,16 @@ import { traverseFeature as traverseBehaveFeature } from './behave/JSONTraverse'\n import IPredictableSupportCode from './IPredictableSupportCode'\n import IAstMaker from './IAstMaker'\n import { IdGenerator, messages } from '@cucumber/messages'\n+import { Platform } from './types'\n \n export default function traverseFeature(\n-  sourceLang: string,\n+  platform: Platform,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEzNDYzOA=="}, "originalCommit": {"oid": "c5be39669392b0492856bad571b2b44c539b1213"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg3Nzc5MA==", "bodyText": "Yes, I think implementation is better. Let's change that too before merging this (adding a TODO above)", "url": "https://github.com/cucumber/common/pull/971#discussion_r409877790", "createdAt": "2020-04-16T22:10:07Z", "author": {"login": "aslakhellesoy"}, "path": "json-to-messages/javascript/src/JSONTraverse.ts", "diffHunk": "@@ -8,15 +8,16 @@ import { traverseFeature as traverseBehaveFeature } from './behave/JSONTraverse'\n import IPredictableSupportCode from './IPredictableSupportCode'\n import IAstMaker from './IAstMaker'\n import { IdGenerator, messages } from '@cucumber/messages'\n+import { Platform } from './types'\n \n export default function traverseFeature(\n-  sourceLang: string,\n+  platform: Platform,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEzNDYzOA=="}, "originalCommit": {"oid": "c5be39669392b0492856bad571b2b44c539b1213"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDEyMTgyOnYy", "diffSide": "RIGHT", "path": "json-to-messages/javascript/src/JSONTraverse.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMToxMDowNFrOGGLqSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODoxOTowOVrOGGZ6mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEzNTY4OQ==", "bodyText": "I could use the java impl to generate messages that would be classed as JavaScript.\nPerhaps gherkin and behave would be better.", "url": "https://github.com/cucumber/common/pull/971#discussion_r409135689", "createdAt": "2020-04-15T21:10:04Z", "author": {"login": "mpkorstanje"}, "path": "json-to-messages/javascript/src/JSONTraverse.ts", "diffHunk": "@@ -8,15 +8,16 @@ import { traverseFeature as traverseBehaveFeature } from './behave/JSONTraverse'\n import IPredictableSupportCode from './IPredictableSupportCode'\n import IAstMaker from './IAstMaker'\n import { IdGenerator, messages } from '@cucumber/messages'\n+import { Platform } from './types'\n \n export default function traverseFeature(\n-  sourceLang: string,\n+  platform: Platform,\n   feature: IFeature | IBehaveFeature,\n   astMaker: IAstMaker,\n   newId: IdGenerator.NewId,\n   predictableSupportCode: IPredictableSupportCode\n ): messages.IGherkinDocument {\n-  if (sourceLang === 'javascript') {\n+  if (platform === 'javascript') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5be39669392b0492856bad571b2b44c539b1213"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM2OTI0Mg==", "bodyText": "Well, it' not as simple a Gherkin vs Behave (Behave uses Gherkin, not the library but at leat the language).\nHere we mainly detect based on specificities of the existing reports. If fact, we don't even have a cucumber-java platform/language/dialect as the JSON reports are close enough to cucumber-ruby, so we use the same object to traverse.", "url": "https://github.com/cucumber/common/pull/971#discussion_r409369242", "createdAt": "2020-04-16T08:19:09Z", "author": {"login": "vincent-psarga"}, "path": "json-to-messages/javascript/src/JSONTraverse.ts", "diffHunk": "@@ -8,15 +8,16 @@ import { traverseFeature as traverseBehaveFeature } from './behave/JSONTraverse'\n import IPredictableSupportCode from './IPredictableSupportCode'\n import IAstMaker from './IAstMaker'\n import { IdGenerator, messages } from '@cucumber/messages'\n+import { Platform } from './types'\n \n export default function traverseFeature(\n-  sourceLang: string,\n+  platform: Platform,\n   feature: IFeature | IBehaveFeature,\n   astMaker: IAstMaker,\n   newId: IdGenerator.NewId,\n   predictableSupportCode: IPredictableSupportCode\n ): messages.IGherkinDocument {\n-  if (sourceLang === 'javascript') {\n+  if (platform === 'javascript') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEzNTY4OQ=="}, "originalCommit": {"oid": "c5be39669392b0492856bad571b2b44c539b1213"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 741, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}