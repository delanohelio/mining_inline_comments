{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwODE1OTUz", "number": 251, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToyNzo0NFrOE5sNyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMTozMDo0NFrOE5sVkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4OTI4NzE0OnYy", "diffSide": "RIGHT", "path": "temporal-sdk/src/main/java/io/temporal/failure/FailureConverter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMToyNzo0NFrOH0TQ0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMTozNDozMlrOH0TwIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwMzYwMw==", "bodyText": "I would move it to the top of the method to avoid unnecessary e.getMessage call.", "url": "https://github.com/temporalio/sdk-java/pull/251#discussion_r524603603", "createdAt": "2020-11-16T21:27:44Z", "author": {"login": "mfateev"}, "path": "temporal-sdk/src/main/java/io/temporal/failure/FailureConverter.java", "diffHunk": "@@ -195,11 +190,14 @@ public static Failure exceptionToFailureNoUnwrapping(Throwable e) {\n     } else {\n       message = e.getMessage() == null ? \"\" : e.getMessage();\n     }\n+    if (e instanceof CheckedExceptionWrapper) {\n+      return exceptionToFailure(e.getCause());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b620208419f8f7dfad0048f2bf0132618faae2b2"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYxMTYxOA==", "bodyText": "Done", "url": "https://github.com/temporalio/sdk-java/pull/251#discussion_r524611618", "createdAt": "2020-11-16T21:34:32Z", "author": {"login": "vitarb"}, "path": "temporal-sdk/src/main/java/io/temporal/failure/FailureConverter.java", "diffHunk": "@@ -195,11 +190,14 @@ public static Failure exceptionToFailureNoUnwrapping(Throwable e) {\n     } else {\n       message = e.getMessage() == null ? \"\" : e.getMessage();\n     }\n+    if (e instanceof CheckedExceptionWrapper) {\n+      return exceptionToFailure(e.getCause());\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwMzYwMw=="}, "originalCommit": {"oid": "b620208419f8f7dfad0048f2bf0132618faae2b2"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4OTMwNzA2OnYy", "diffSide": "RIGHT", "path": "temporal-sdk/src/main/java/io/temporal/internal/common/CheckedExceptionWrapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMTozMDo0NFrOH0TeyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMTozNDozOVrOH0TwsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNzE3Nw==", "bodyText": "Remove causeField and the related initialization code above.\nRemove setThrowableCause method below.", "url": "https://github.com/temporalio/sdk-java/pull/251#discussion_r524607177", "createdAt": "2020-11-16T21:30:44Z", "author": {"login": "mfateev"}, "path": "temporal-sdk/src/main/java/io/temporal/internal/common/CheckedExceptionWrapper.java", "diffHunk": "@@ -69,25 +69,11 @@ public static RuntimeException wrap(Throwable e) {\n   }\n \n   /**\n-   * Removes CheckedException wrapper from the whole chain of Exceptions. Assumes that wrapper\n+   * Removes CheckedExceptionWrapper from the top of the chain of Exceptions. Assumes that wrapper", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b620208419f8f7dfad0048f2bf0132618faae2b2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYxMTc2MA==", "bodyText": "Done", "url": "https://github.com/temporalio/sdk-java/pull/251#discussion_r524611760", "createdAt": "2020-11-16T21:34:39Z", "author": {"login": "vitarb"}, "path": "temporal-sdk/src/main/java/io/temporal/internal/common/CheckedExceptionWrapper.java", "diffHunk": "@@ -69,25 +69,11 @@ public static RuntimeException wrap(Throwable e) {\n   }\n \n   /**\n-   * Removes CheckedException wrapper from the whole chain of Exceptions. Assumes that wrapper\n+   * Removes CheckedExceptionWrapper from the top of the chain of Exceptions. Assumes that wrapper", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYwNzE3Nw=="}, "originalCommit": {"oid": "b620208419f8f7dfad0048f2bf0132618faae2b2"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1677, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}