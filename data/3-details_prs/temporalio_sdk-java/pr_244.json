{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NzY5MjM1", "number": 244, "title": "Use daemon threads for connection backoff resetter", "bodyText": "Recently we've added a connection backoff resetter as a way to mitigate long gRPC backoff intervals (look here for details).\nThe way resetter works is that we have a thread pool that periodically resets connection backoff allowing threads to detect backends faster.\nInitially those threads in the thread pool used default thread factory resulting in creation of user threads (as opposed to daemon threads) and were blocking JVM shutdown in case of failure in main program.\nThis caused unwanted behavior and displayed on our java canary as a \"stuck jvm\" with crashed main in case if the process was unable to startup properly (e.g. register the namespace).\nWith this change threads are made daemon threads and will no longer block jvm exit.\nExample canary startup log when backend is unavailable after the change (expected behavior, JVM exits if it's unable to create a namespace):\nException in thread \"main\" io.grpc.StatusRuntimeException: UNAVAILABLE: io exception\n\tat io.grpc.stub.ClientCalls.toStatusRuntimeException(ClientCalls.java:262)\n\tat io.grpc.stub.ClientCalls.getUnchecked(ClientCalls.java:243)\n\tat io.grpc.stub.ClientCalls.blockingUnaryCall(ClientCalls.java:156)\n\tat io.temporal.api.workflowservice.v1.WorkflowServiceGrpc$WorkflowServiceBlockingStub.registerNamespace(WorkflowServiceGrpc.java:2574)\n\tat io.temporal.canary.Initializer.registerNamespace(Initializer.java:150)\n\tat io.temporal.canary.Initializer.<init>(Initializer.java:74)\n\tat io.temporal.canary.Canary.start(Canary.java:22)\n\tat io.temporal.canary.Main.main(Main.java:42)\nCaused by: io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: finishConnect(..) failed: Connection refused: /127.0.0.1:7233\nCaused by: io.grpc.netty.shaded.io.netty.channel.AbstractChannel$AnnotatedConnectException: finishConnect(..) failed: Connection refused: /127.0.0.1:7233\n\nCaused by: java.net.ConnectException: finishConnect(..) failed: Connection refused\nCaused by: java.net.ConnectException: finishConnect(..) failed: Connection refused\n\n\tat io.grpc.netty.shaded.io.netty.channel.unix.Errors.throwConnectException(Errors.java:124)\n\tat io.grpc.netty.shaded.io.netty.channel.unix.Socket.finishConnect(Socket.java:243)\n\tat io.grpc.netty.shaded.io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.doFinishConnect(AbstractEpollChannel.java:672)\n\tat io.grpc.netty.shaded.io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.finishConnect(AbstractEpollChannel.java:649)\n\tat io.grpc.netty.shaded.io.netty.channel.epoll.AbstractEpollChannel$AbstractEpollUnsafe.epollOutReady(AbstractEpollChannel.java:529)\n\tat io.grpc.netty.shaded.io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:465)\n\tat io.grpc.netty.shaded.io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:378)\n\tat io.grpc.netty.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\n\tat io.grpc.netty.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\n\tat io.grpc.netty.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\n\tat java.base/java.lang.Thread.run(Thread.java:832)\n\nExecution failed for task ':Main.main()'.\n> Process 'command '/home/fury/.jdks/openjdk-14.0.1/bin/java'' finished with non-zero exit value 1", "createdAt": "2020-11-05T03:31:18Z", "url": "https://github.com/temporalio/sdk-java/pull/244", "merged": true, "mergeCommit": {"oid": "370bb6edf6b9b81ffdc22441d0b112fa9cbeb389"}, "closed": true, "closedAt": "2020-11-05T03:53:41Z", "author": {"login": "vitarb"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZZ6pzAFqTUyMzkwMzIyMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZaCphABqjM5NjA0MDk5MTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzOTAzMjIw", "url": "https://github.com/temporalio/sdk-java/pull/244#pullrequestreview-523903220", "createdAt": "2020-11-05T03:36:53Z", "commit": {"oid": "84d82ec7547c6d5d8d94a048bb1d710097bd9492"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMzozNjo1M1rOHtyaDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMzozNjo1M1rOHtyaDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzc3MzgzNg==", "bodyText": "I would also set the nameFormat property to distinguish these threads in the dumps.", "url": "https://github.com/temporalio/sdk-java/pull/244#discussion_r517773836", "createdAt": "2020-11-05T03:36:53Z", "author": {"login": "mfateev"}, "path": "temporal-serviceclient/src/main/java/io/temporal/serviceclient/WorkflowServiceStubsImpl.java", "diffHunk": "@@ -168,7 +169,9 @@ public WorkflowServiceStubsImpl(\n   }\n \n   private ScheduledExecutorService startConnectionBackoffResetter(Duration backoffResetFrequency) {\n-    ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();\n+    ScheduledExecutorService executor =\n+        Executors.newSingleThreadScheduledExecutor(\n+            new ThreadFactoryBuilder().setDaemon(true).build());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84d82ec7547c6d5d8d94a048bb1d710097bd9492"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzOTAzNDI1", "url": "https://github.com/temporalio/sdk-java/pull/244#pullrequestreview-523903425", "createdAt": "2020-11-05T03:37:34Z", "commit": {"oid": "84d82ec7547c6d5d8d94a048bb1d710097bd9492"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e35b7292579d46c8f1fbf68ee55a938a44723668", "author": {"user": {"login": "vitarb", "name": "Vitaly"}}, "url": "https://github.com/temporalio/sdk-java/commit/e35b7292579d46c8f1fbf68ee55a938a44723668", "committedDate": "2020-11-05T03:45:36Z", "message": "Use deamon threads for connection backoff resetor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d830f136ab1fa0ddeaa5016cbd27090c8c7067e", "author": {"user": {"login": "vitarb", "name": "Vitaly"}}, "url": "https://github.com/temporalio/sdk-java/commit/2d830f136ab1fa0ddeaa5016cbd27090c8c7067e", "committedDate": "2020-11-05T03:45:36Z", "message": "Add a thread name"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5bb4c7d21d24c29b62b23732a6be7dc5ba1f60ac", "author": {"user": {"login": "vitarb", "name": "Vitaly"}}, "url": "https://github.com/temporalio/sdk-java/commit/5bb4c7d21d24c29b62b23732a6be7dc5ba1f60ac", "committedDate": "2020-11-05T03:45:12Z", "message": "Add a thread name"}, "afterCommit": {"oid": "2d830f136ab1fa0ddeaa5016cbd27090c8c7067e", "author": {"user": {"login": "vitarb", "name": "Vitaly"}}, "url": "https://github.com/temporalio/sdk-java/commit/2d830f136ab1fa0ddeaa5016cbd27090c8c7067e", "committedDate": "2020-11-05T03:45:36Z", "message": "Add a thread name"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3478, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}