{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MTUzMTQ4", "number": 161, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMzo1MjozNVrOETFXjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOToyNToxOFrOETZPCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDQ2MzUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/temporal/activity/ActivityOptions.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMzo1MjozNVrOG4nmVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMzo1MjozNVrOG4nmVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAyMjIyOA==", "bodyText": "I think we should not add any defaults to the retry options and rely on the service for these.", "url": "https://github.com/temporalio/sdk-java/pull/161#discussion_r462022228", "createdAt": "2020-07-29T03:52:35Z", "author": {"login": "mfateev"}, "path": "src/main/java/io/temporal/activity/ActivityOptions.java", "diffHunk": "@@ -173,13 +177,19 @@ public ActivityOptions build() {\n     }\n \n     public ActivityOptions validateAndBuildWithDefaults() {\n+      if (retryOptions != null) {\n+        // retryOptions being null means we will explicitly fallback to the default\n+        // activity retry behavior as specified on the server\n+        retryOptions = RetryOptions.newBuilder(retryOptions).validateBuildWithDefaults();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64f66b1a75c8ad610a163b91aafd5eb488245067"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDQ2NDM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/temporal/internal/testservice/StateMachines.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMzo1MzoxMFrOG4nm3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwMzo1MzoxMFrOG4nm3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAyMjM2NQ==", "bodyText": "We should compy defaults from the service and do not rely on validateBuildWithDefaults which was intended for the SDK only validation.", "url": "https://github.com/temporalio/sdk-java/pull/161#discussion_r462022365", "createdAt": "2020-07-29T03:53:10Z", "author": {"login": "mfateev"}, "path": "src/main/java/io/temporal/internal/testservice/StateMachines.java", "diffHunk": "@@ -980,15 +975,19 @@ private static void scheduleActivityTask(\n       ScheduleActivityTaskCommandAttributes d,\n       long workflowTaskCompletedEventId) {\n     TestServiceRetryState retryState;\n-    if (d.hasRetryPolicy()) {\n-      RetryPolicy retryPolicy = d.getRetryPolicy();\n-      long expirationInterval = TimeUnit.SECONDS.toMillis(d.getScheduleToCloseTimeoutSeconds());\n-      long expirationTime = data.store.currentTimeMillis() + expirationInterval;\n-      retryState = new TestServiceRetryState(retryPolicy, expirationTime);\n+    RetryPolicy retryPolicy;\n+    if (!d.hasRetryPolicy()) {\n+      // If no activity retry policy is supplied, assume a default to mimic a standard Temporal\n+      // server\n+      retryPolicy = toRetryPolicy(RetryOptions.newBuilder().validateBuildWithDefaults()).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64f66b1a75c8ad610a163b91aafd5eb488245067"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDcyMDUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/temporal/internal/sync/SyncWorkflowContext.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjoxMzowOFrOG4p-cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOToyNzowM1rOG5G5ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA2MTE2OQ==", "bodyText": "[Nit] i can technically make this a private static variable that represents an empty array", "url": "https://github.com/temporalio/sdk-java/pull/161#discussion_r462061169", "createdAt": "2020-07-29T06:13:08Z", "author": {"login": "mastermanu"}, "path": "src/main/java/io/temporal/internal/sync/SyncWorkflowContext.java", "diffHunk": "@@ -351,12 +351,15 @@ private ExecuteActivityParameters constructExecuteActivityParameters(\n   }\n \n   static RetryPolicy.Builder toRetryPolicy(RetryOptions retryOptions) {\n+    String[] doNotRetry = retryOptions.getDoNotRetry();\n+\n     return RetryPolicy.newBuilder()\n         .setInitialIntervalInSeconds(roundUpToSeconds(retryOptions.getInitialInterval()))\n         .setMaximumIntervalInSeconds(roundUpToSeconds(retryOptions.getMaximumInterval()))\n         .setBackoffCoefficient(retryOptions.getBackoffCoefficient())\n         .setMaximumAttempts(retryOptions.getMaximumAttempts())\n-        .addAllNonRetryableErrorTypes(Arrays.asList(retryOptions.getDoNotRetry()));\n+        .addAllNonRetryableErrorTypes(\n+            Arrays.asList(doNotRetry != null ? doNotRetry : new String[0]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22ea5e03e52e324f219fac1f2f05f2556b36048d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM4Nzc4NA==", "bodyText": "I usually just not set fields on protobufs in this case.", "url": "https://github.com/temporalio/sdk-java/pull/161#discussion_r462387784", "createdAt": "2020-07-29T15:27:30Z", "author": {"login": "mfateev"}, "path": "src/main/java/io/temporal/internal/sync/SyncWorkflowContext.java", "diffHunk": "@@ -351,12 +351,15 @@ private ExecuteActivityParameters constructExecuteActivityParameters(\n   }\n \n   static RetryPolicy.Builder toRetryPolicy(RetryOptions retryOptions) {\n+    String[] doNotRetry = retryOptions.getDoNotRetry();\n+\n     return RetryPolicy.newBuilder()\n         .setInitialIntervalInSeconds(roundUpToSeconds(retryOptions.getInitialInterval()))\n         .setMaximumIntervalInSeconds(roundUpToSeconds(retryOptions.getMaximumInterval()))\n         .setBackoffCoefficient(retryOptions.getBackoffCoefficient())\n         .setMaximumAttempts(retryOptions.getMaximumAttempts())\n-        .addAllNonRetryableErrorTypes(Arrays.asList(retryOptions.getDoNotRetry()));\n+        .addAllNonRetryableErrorTypes(\n+            Arrays.asList(doNotRetry != null ? doNotRetry : new String[0]));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA2MTE2OQ=="}, "originalCommit": {"oid": "22ea5e03e52e324f219fac1f2f05f2556b36048d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNTA1MA==", "bodyText": "good point, i will omit that", "url": "https://github.com/temporalio/sdk-java/pull/161#discussion_r462535050", "createdAt": "2020-07-29T19:27:03Z", "author": {"login": "mastermanu"}, "path": "src/main/java/io/temporal/internal/sync/SyncWorkflowContext.java", "diffHunk": "@@ -351,12 +351,15 @@ private ExecuteActivityParameters constructExecuteActivityParameters(\n   }\n \n   static RetryPolicy.Builder toRetryPolicy(RetryOptions retryOptions) {\n+    String[] doNotRetry = retryOptions.getDoNotRetry();\n+\n     return RetryPolicy.newBuilder()\n         .setInitialIntervalInSeconds(roundUpToSeconds(retryOptions.getInitialInterval()))\n         .setMaximumIntervalInSeconds(roundUpToSeconds(retryOptions.getMaximumInterval()))\n         .setBackoffCoefficient(retryOptions.getBackoffCoefficient())\n         .setMaximumAttempts(retryOptions.getMaximumAttempts())\n-        .addAllNonRetryableErrorTypes(Arrays.asList(retryOptions.getDoNotRetry()));\n+        .addAllNonRetryableErrorTypes(\n+            Arrays.asList(doNotRetry != null ? doNotRetry : new String[0]));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA2MTE2OQ=="}, "originalCommit": {"oid": "22ea5e03e52e324f219fac1f2f05f2556b36048d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NjgxMjIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/temporal/internal/testservice/StateMachines.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNToyODo0MVrOG499iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0NTozNVrOG5HhIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM4ODYxOQ==", "bodyText": "It looks like you didn't run the build from the command line. I believe we don't have * imports anywhere in the code. In IntelliJ, there is an option to not use *. I'm not sure about other IDEs.", "url": "https://github.com/temporalio/sdk-java/pull/161#discussion_r462388619", "createdAt": "2020-07-29T15:28:41Z", "author": {"login": "mfateev"}, "path": "src/main/java/io/temporal/internal/testservice/StateMachines.java", "diffHunk": "@@ -110,14 +110,7 @@\n import io.temporal.internal.testservice.TestWorkflowStore.ActivityTask;\n import io.temporal.internal.testservice.TestWorkflowStore.TaskQueueId;\n import io.temporal.internal.testservice.TestWorkflowStore.WorkflowTask;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n-import java.util.OptionalLong;\n-import java.util.UUID;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22ea5e03e52e324f219fac1f2f05f2556b36048d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0NTE4Nw==", "bodyText": "i did run gradlew, but i guess it doesn't undo the collapse if intellij does it. i changed my IDE settings and reverted", "url": "https://github.com/temporalio/sdk-java/pull/161#discussion_r462545187", "createdAt": "2020-07-29T19:45:35Z", "author": {"login": "mastermanu"}, "path": "src/main/java/io/temporal/internal/testservice/StateMachines.java", "diffHunk": "@@ -110,14 +110,7 @@\n import io.temporal.internal.testservice.TestWorkflowStore.ActivityTask;\n import io.temporal.internal.testservice.TestWorkflowStore.TaskQueueId;\n import io.temporal.internal.testservice.TestWorkflowStore.WorkflowTask;\n-import java.util.ArrayList;\n-import java.util.HashMap;\n-import java.util.Iterator;\n-import java.util.List;\n-import java.util.Map;\n-import java.util.Optional;\n-import java.util.OptionalLong;\n-import java.util.UUID;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM4ODYxOQ=="}, "originalCommit": {"oid": "22ea5e03e52e324f219fac1f2f05f2556b36048d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzcxODUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/temporal/internal/testservice/StateMachines.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOToyNToxOFrOG5G2Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxOTo0NTo1OVrOG5Hhzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNDE2Mw==", "bodyText": "We already have constants for some defaults in this file. I would convert these to constants as well.", "url": "https://github.com/temporalio/sdk-java/pull/161#discussion_r462534163", "createdAt": "2020-07-29T19:25:18Z", "author": {"login": "mfateev"}, "path": "src/main/java/io/temporal/internal/testservice/StateMachines.java", "diffHunk": "@@ -1858,4 +1845,23 @@ private static void failExternalCancellation(\n             .build();\n     ctx.addEvent(event);\n   }\n+\n+  // Mimics the default activity retry policy of a standard Temporal server.\n+  static RetryPolicy ensureDefaultFieldsForActivityRetryPolicy(RetryPolicy originalPolicy) {\n+    return RetryPolicy.newBuilder()\n+        .setInitialIntervalInSeconds(\n+            originalPolicy.getInitialIntervalInSeconds() == 0\n+                ? 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db4947fbaeaf127f95c1ddf3d8f3dc35318f8959"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU0NTM1OA==", "bodyText": "good point. added statics at the top of the file", "url": "https://github.com/temporalio/sdk-java/pull/161#discussion_r462545358", "createdAt": "2020-07-29T19:45:59Z", "author": {"login": "mastermanu"}, "path": "src/main/java/io/temporal/internal/testservice/StateMachines.java", "diffHunk": "@@ -1858,4 +1845,23 @@ private static void failExternalCancellation(\n             .build();\n     ctx.addEvent(event);\n   }\n+\n+  // Mimics the default activity retry policy of a standard Temporal server.\n+  static RetryPolicy ensureDefaultFieldsForActivityRetryPolicy(RetryPolicy originalPolicy) {\n+    return RetryPolicy.newBuilder()\n+        .setInitialIntervalInSeconds(\n+            originalPolicy.getInitialIntervalInSeconds() == 0\n+                ? 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUzNDE2Mw=="}, "originalCommit": {"oid": "db4947fbaeaf127f95c1ddf3d8f3dc35318f8959"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1710, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}