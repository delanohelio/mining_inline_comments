{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NzM5NjE4", "number": 69, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDozMjoyMVrOD0bHsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDozMjoyMVrOD0bHsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2Mjk2ODgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/temporal/internal/replay/QueryWorkflowParameters.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDozMjoyMVrOGJXPgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDozMjoyMVrOGJXPgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ3MTE2OA==", "bodyText": "Could we just use a json serializer for .ToString?", "url": "https://github.com/temporalio/sdk-java/pull/69#discussion_r412471168", "createdAt": "2020-04-21T20:32:21Z", "author": {"login": "shawnhathaway"}, "path": "src/main/java/io/temporal/internal/replay/QueryWorkflowParameters.java", "diffHunk": "@@ -105,26 +122,35 @@ public QueryWorkflowParameters withQueryRejectCondition(\n     return this;\n   }\n \n-  @Override\n-  public String toString() {\n-    StringBuilder sb = new StringBuilder();\n-    sb.append(\"{\");\n-    sb.append(\"QueryName: \" + queryType + \", \");\n-    sb.append(\"Input: \" + new String(input, 0, 512, StandardCharsets.UTF_8) + \", \");\n-    sb.append(\"WorkflowId: \" + workflowId + \", \");\n-    sb.append(\"RunId: \" + runId + \", \");\n-    sb.append(\"QueryRejectCondition: \" + queryRejectCondition + \", \");\n-    sb.append(\"}\");\n-    return sb.toString();\n-  }\n-\n   public QueryWorkflowParameters copy() {\n     QueryWorkflowParameters result = new QueryWorkflowParameters();\n     result.setInput(input);\n     result.setRunId(runId);\n     result.setQueryType(queryType);\n     result.setWorkflowId(workflowId);\n     result.setQueryRejectCondition(queryRejectCondition);\n+    result.setQueryConsistencyLevel(queryConsistencyLevel);\n     return result;\n   }\n+\n+  @Override\n+  public String toString() {\n+    return \"QueryWorkflowParameters{\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e009b091392c9f5711996e70bdd033bd75b0ac57"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1757, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}