{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExOTkzODYy", "number": 77, "title": "Added gRPC service call metrics", "bodyText": "", "createdAt": "2020-05-01T05:46:21Z", "url": "https://github.com/temporalio/sdk-java/pull/77", "merged": true, "mergeCommit": {"oid": "9fef90b8264fe17ac5061e3b21d7f4e9ad4521ee"}, "closed": true, "closedAt": "2020-05-02T04:21:58Z", "author": {"login": "mfateev"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcc560oAH2gAyNDExOTkzODYyOjQ5MDAwNzVhNWZlYzZlZmE2NmFhMmE2ZmNmZDY1Nzk0NjJhODY1MjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdOXFJAH2gAyNDExOTkzODYyOmJjOGQ1OTBhZWVmZWM0YzZmYjJkYzI3N2MyM2ZlOGMxMWE3YzE5MmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4900075a5fec6efa66aa2a6fcfd6579462a86522", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/4900075a5fec6efa66aa2a6fcfd6579462a86522", "committedDate": "2020-05-01T04:24:48Z", "message": "Aded GrpcMetricsInterceptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77214813f51395db53f72db466ca47b4799bdff7", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/77214813f51395db53f72db466ca47b4799bdff7", "committedDate": "2020-05-01T04:24:52Z", "message": "Merge branch 'master' of github.com:temporalio/temporal-java-sdk into service-metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14e05e9086fe2d215215dce552a39ef5aa20ce56", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/14e05e9086fe2d215215dce552a39ef5aa20ce56", "committedDate": "2020-05-01T04:29:00Z", "message": "Aded GrpcMetricsInterceptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bc9f649ab9e354bec58af134f4507da75a2365d", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/8bc9f649ab9e354bec58af134f4507da75a2365d", "committedDate": "2020-05-01T05:42:39Z", "message": "Added tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0Mjg0NzYx", "url": "https://github.com/temporalio/sdk-java/pull/77#pullrequestreview-404284761", "createdAt": "2020-05-01T17:20:36Z", "commit": {"oid": "8bc9f649ab9e354bec58af134f4507da75a2365d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNzoyMDozNlrOGPP6Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNzoyMjoyOVrOGPP9uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY0MjUxNQ==", "bodyText": "Are these defined somewhere as consts or is there a common way to generate them?", "url": "https://github.com/temporalio/sdk-java/pull/77#discussion_r418642515", "createdAt": "2020-05-01T17:20:36Z", "author": {"login": "shawnhathaway"}, "path": "src/test/java/io/temporal/workflow/MetricsTest.java", "diffHunk": "@@ -335,4 +354,63 @@ public WorkflowInvoker interceptExecuteWorkflow(\n       return new BaseWorkflowInvoker(i, next);\n     }\n   }\n+\n+  @Test\n+  public void testTemporalFailureMetric() throws InterruptedException {\n+    setUp(\n+        com.uber.m3.util.Duration.ofMillis(300),\n+        WorkerFactoryOptions.newBuilder()\n+            .setWorkflowInterceptor(new CorruptedSignalWorkflowInterceptor())\n+            .build());\n+\n+    try {\n+      WorkflowServiceStubs serviceStubs =\n+          testEnvironment.getWorkflowClient().getWorkflowServiceStubs();\n+\n+      serviceStubs.blockingStub().describeNamespace(DescribeNamespaceRequest.newBuilder().build());\n+      fail(\"failure expected\");\n+    } catch (StatusRuntimeException e) {\n+      assertEquals(Status.Code.UNIMPLEMENTED, e.getStatus().getCode());\n+    }\n+\n+    // Wait for reporter\n+    Thread.sleep(600);\n+\n+    verify(reporter, times(1))\n+        .reportCounter(\"temporal-DescribeNamespace.temporal-request\", new HashMap<>(), 1);\n+    verify(reporter, times(1))\n+        .reportCounter(\"temporal-DescribeNamespace.temporal-error\", new HashMap<>(), 1);\n+    testEnvironment.close();\n+  }\n+\n+  @Test\n+  public void testTemporalInvalidRequestMetric() throws InterruptedException {\n+    setUp(\n+        com.uber.m3.util.Duration.ofMillis(300),\n+        WorkerFactoryOptions.newBuilder()\n+            .setWorkflowInterceptor(new CorruptedSignalWorkflowInterceptor())\n+            .build());\n+\n+    try {\n+      WorkflowServiceStubs serviceStubs =\n+          testEnvironment.getWorkflowClient().getWorkflowServiceStubs();\n+\n+      serviceStubs\n+          .blockingStub()\n+          .startWorkflowExecution(StartWorkflowExecutionRequest.newBuilder().build());\n+      fail(\"failure expected\");\n+    } catch (StatusRuntimeException e) {\n+      assertEquals(Status.Code.INVALID_ARGUMENT, e.getStatus().getCode());\n+    }\n+\n+    // Wait for reporter\n+    Thread.sleep(600);\n+\n+    verify(reporter, times(1))\n+        .reportCounter(\"temporal-StartWorkflowExecution.temporal-request\", new HashMap<>(), 1);\n+    verify(reporter, times(1))\n+        .reportCounter(\n+            \"temporal-StartWorkflowExecution.temporal-invalid-request\", new HashMap<>(), 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bc9f649ab9e354bec58af134f4507da75a2365d"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY0MzM4NA==", "bodyText": "Where does 600 come from? Is this long enough for most/all developers who will run these?", "url": "https://github.com/temporalio/sdk-java/pull/77#discussion_r418643384", "createdAt": "2020-05-01T17:22:29Z", "author": {"login": "shawnhathaway"}, "path": "src/test/java/io/temporal/workflow/MetricsTest.java", "diffHunk": "@@ -335,4 +354,63 @@ public WorkflowInvoker interceptExecuteWorkflow(\n       return new BaseWorkflowInvoker(i, next);\n     }\n   }\n+\n+  @Test\n+  public void testTemporalFailureMetric() throws InterruptedException {\n+    setUp(\n+        com.uber.m3.util.Duration.ofMillis(300),\n+        WorkerFactoryOptions.newBuilder()\n+            .setWorkflowInterceptor(new CorruptedSignalWorkflowInterceptor())\n+            .build());\n+\n+    try {\n+      WorkflowServiceStubs serviceStubs =\n+          testEnvironment.getWorkflowClient().getWorkflowServiceStubs();\n+\n+      serviceStubs.blockingStub().describeNamespace(DescribeNamespaceRequest.newBuilder().build());\n+      fail(\"failure expected\");\n+    } catch (StatusRuntimeException e) {\n+      assertEquals(Status.Code.UNIMPLEMENTED, e.getStatus().getCode());\n+    }\n+\n+    // Wait for reporter\n+    Thread.sleep(600);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bc9f649ab9e354bec58af134f4507da75a2365d"}, "originalPosition": 95}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1455e026ce5551cb06eaae243497c4cfc6409d41", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/1455e026ce5551cb06eaae243497c4cfc6409d41", "committedDate": "2020-05-02T00:08:47Z", "message": "PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc8d590aeefec4c6fb2dc277c23fe8c11a7c192d", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/bc8d590aeefec4c6fb2dc277c23fe8c11a7c192d", "committedDate": "2020-05-02T04:13:46Z", "message": "Fixed unit tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3528, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}