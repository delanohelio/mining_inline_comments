{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NjQzNzI5", "number": 289, "title": "Dynamic workflow and activity implementation support", "bodyText": "Added ability to implement workflows and activities dynamically. A single implementation of DynamicWorkflow can implement any number of workflow types. A single implementation of DynamicActivity can implement any number of activity types.\nAlso added DynamicSignalHandler and DynamicQueryHandler that allow processing any signals and queries using a single handler instance.\nSolves #245", "createdAt": "2020-12-26T00:40:22Z", "url": "https://github.com/temporalio/sdk-java/pull/289", "merged": true, "mergeCommit": {"oid": "24a55be08d8cfaf0b8bb2bb49aab38e8344ce08c"}, "closed": true, "closedAt": "2020-12-29T04:01:18Z", "author": {"login": "mfateev"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdpKKErgH2gAyNTQ1NjQzNzI5OjA2MDViMGRmYmE0Y2MyOWEwZTE2ZjBlNTU4MDM0MjRlMzhiOGQ1NDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdqybbaAH2gAyNTQ1NjQzNzI5OmIxZDQ2ZTQ4MjMwZjEwOWJjODdkZmY0NTlkNTA2ZGZiZjk1Yjk1MjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0605b0dfba4cc29a0e16f0e55803424e38b8d545", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/0605b0dfba4cc29a0e16f0e55803424e38b8d545", "committedDate": "2020-12-24T02:18:11Z", "message": "Added UntypedWorkflow. Renamed add to register"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abbb6991c6982199cda84221ea0a2f6e45eed3e1", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/abbb6991c6982199cda84221ea0a2f6e45eed3e1", "committedDate": "2020-12-24T04:40:21Z", "message": "Fixed UntypedWorkflowTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa71694cf4fd9078f0c7f862dc9c4349b93e3185", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/fa71694cf4fd9078f0c7f862dc9c4349b93e3185", "committedDate": "2020-12-24T05:42:50Z", "message": "Added UntypedSignalHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48efb6d0522d62e90a241d90d55f0eaa03d4557f", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/48efb6d0522d62e90a241d90d55f0eaa03d4557f", "committedDate": "2020-12-24T17:50:11Z", "message": "Changed UpdatedWorkflow to EncodedValues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7775d6eeeb8c074f5fdbe2ba2a6046db05f9f67e", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/7775d6eeeb8c074f5fdbe2ba2a6046db05f9f67e", "committedDate": "2020-12-24T20:59:51Z", "message": "Switched untyped handlers to EncodedValues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "953c16cb518d652b789d04fdebc450e7b6b6eb60", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/953c16cb518d652b789d04fdebc450e7b6b6eb60", "committedDate": "2020-12-25T21:08:17Z", "message": "Added support for UntypedWorkflow factory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "798167e3495ee93d0c0e8887bd0589ea88a45c5c", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/798167e3495ee93d0c0e8887bd0589ea88a45c5c", "committedDate": "2020-12-25T22:47:44Z", "message": "Added UntypedActivityHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7000c6f9efe9374f4dfc38d022e759184b5a662", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/f7000c6f9efe9374f4dfc38d022e759184b5a662", "committedDate": "2020-12-25T23:04:47Z", "message": "Renamed untyped to dynamic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7abd413904e99d3ade453b3465d7395b43bab022", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/7abd413904e99d3ade453b3465d7395b43bab022", "committedDate": "2020-12-25T23:52:04Z", "message": "Documentation added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28dfbe30c6b804b1f8c7dc7186f2a75dbcd8ac64", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/28dfbe30c6b804b1f8c7dc7186f2a75dbcd8ac64", "committedDate": "2020-12-26T00:37:46Z", "message": "Self review fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cbe996e4f51482a2e5c3080b993b5b460fd47da", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/7cbe996e4f51482a2e5c3080b993b5b460fd47da", "committedDate": "2020-12-26T19:22:31Z", "message": "Added dynamic local activity invocation test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjQ2MzAy", "url": "https://github.com/temporalio/sdk-java/pull/289#pullrequestreview-559246302", "createdAt": "2020-12-28T18:06:45Z", "commit": {"oid": "7cbe996e4f51482a2e5c3080b993b5b460fd47da"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxODowNjo0NVrOIL-6bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxODoyMzozNlrOIL_V6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzNjAxNA==", "bodyText": "One sentence example might be useful", "url": "https://github.com/temporalio/sdk-java/pull/289#discussion_r549436014", "createdAt": "2020-12-28T18:06:45Z", "author": {"login": "Sushisource"}, "path": "temporal-sdk/src/main/java/io/temporal/activity/DynamicActivity.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ *  Copyright (C) 2020 Temporal Technologies, Inc. All Rights Reserved.\n+ *\n+ *  Copyright 2012-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *  Modifications copyright (C) 2017 Uber Technologies, Inc.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\"). You may not\n+ *  use this file except in compliance with the License. A copy of the License is\n+ *  located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed on\n+ *  an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package io.temporal.activity;\n+\n+import io.temporal.common.converter.EncodedValues;\n+\n+/**\n+ * Use DynamicActivity to implement any number of activity types dynamically. When an activity\n+ * implementation that extends DynamicActivity is registered it is called for any activity type\n+ * invocation that doesn't have an explicitly registered handler. Only one instance that implements\n+ * DynamicActivity per {@link io.temporal.worker.Worker} is allowed.\n+ *\n+ * <p>The DynamicActivity can be useful for integrations with existing libraries.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cbe996e4f51482a2e5c3080b993b5b460fd47da"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzNzU1OQ==", "bodyText": "Would be good to indicate workers can only have one DynamicActivity implementation in a docstring somewhere", "url": "https://github.com/temporalio/sdk-java/pull/289#discussion_r549437559", "createdAt": "2020-12-28T18:12:38Z", "author": {"login": "Sushisource"}, "path": "temporal-sdk/src/main/java/io/temporal/internal/sync/POJOActivityTaskHandler.java", "diffHunk": "@@ -83,11 +86,19 @@\n     this.interceptors = Objects.requireNonNull(interceptors);\n   }\n \n-  private void addActivityImplementation(\n+  private void registerActivityImplementation(\n       Object activity, BiFunction<Method, Object, ActivityTaskExecutor> newTaskExecutor) {\n     if (activity instanceof Class) {\n       throw new IllegalArgumentException(\"Activity object instance expected, not the class\");\n     }\n+    if (activity instanceof DynamicActivity) {\n+      if (dynamicActivity != null) {\n+        throw new IllegalStateException(\n+            \"An implementation of DynamicActivity is already registered with the worker\");\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cbe996e4f51482a2e5c3080b993b5b460fd47da"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzODQyNA==", "bodyText": "Quite a lot of the code in here is quite similar to the above POJOActivityImplementation -- would be nice to dedupe as reasonable.", "url": "https://github.com/temporalio/sdk-java/pull/289#discussion_r549438424", "createdAt": "2020-12-28T18:15:46Z", "author": {"login": "Sushisource"}, "path": "temporal-sdk/src/main/java/io/temporal/internal/sync/POJOActivityTaskHandler.java", "diffHunk": "@@ -287,6 +301,96 @@ public Object execute(Object[] arguments) {\n     }\n   }\n \n+  private class DynamicActivityImplementation implements ActivityTaskExecutor {\n+\n+    private final DynamicActivity activity;\n+\n+    public DynamicActivityImplementation(DynamicActivity activity) {\n+      this.activity = activity;\n+    }\n+\n+    @Override\n+    public ActivityTaskHandler.Result execute(ActivityInfoImpl info, Scope metricsScope) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cbe996e4f51482a2e5c3080b993b5b460fd47da"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQzODc5Mg==", "bodyText": "Same as other comment - would be nice to expose this restriction to user in docstring.", "url": "https://github.com/temporalio/sdk-java/pull/289#discussion_r549438792", "createdAt": "2020-12-28T18:17:00Z", "author": {"login": "Sushisource"}, "path": "temporal-sdk/src/main/java/io/temporal/internal/sync/POJOWorkflowImplementationFactory.java", "diffHunk": "@@ -94,23 +97,33 @@\n     this.contextPropagators = contextPropagators;\n   }\n \n-  void addWorkflowImplementationTypes(\n+  void registerWorkflowImplementationTypes(\n       WorkflowImplementationOptions options, Class<?>[] workflowImplementationTypes) {\n     for (Class<?> type : workflowImplementationTypes) {\n-      addWorkflowImplementationType(options, type);\n+      registerWorkflowImplementationType(options, type);\n     }\n   }\n \n   <R> void addWorkflowImplementationFactory(Class<R> clazz, Functions.Func<R> factory) {\n+    @SuppressWarnings(\"unchecked\")\n     WorkflowImplementationOptions unitTestingOptions =\n         WorkflowImplementationOptions.newBuilder()\n             .setFailWorkflowExceptionTypes(Throwable.class)\n             .build();\n     addWorkflowImplementationFactory(unitTestingOptions, clazz, factory);\n   }\n \n+  @SuppressWarnings(\"unchecked\")\n   <R> void addWorkflowImplementationFactory(\n       WorkflowImplementationOptions options, Class<R> clazz, Functions.Func<R> factory) {\n+    if (DynamicWorkflow.class.isAssignableFrom(clazz)) {\n+      if (dynamicWorkflowImplementationFactory != null) {\n+        throw new IllegalStateException(\n+            \"An implementation of DynamicWorkflow or its factory is already registered with the worker\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cbe996e4f51482a2e5c3080b993b5b460fd47da"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ0MzA0OA==", "bodyText": "Presumably it's necessary for the dynamic workflow to always be deterministic in the same way that normal workflows are, right? IE: Deterministic w.r.t. EncodedValues. Might be worth making reference to that here just so users don't think magically that requirement has gone away.", "url": "https://github.com/temporalio/sdk-java/pull/289#discussion_r549443048", "createdAt": "2020-12-28T18:23:36Z", "author": {"login": "Sushisource"}, "path": "temporal-sdk/src/main/java/io/temporal/workflow/DynamicWorkflow.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ *  Copyright (C) 2020 Temporal Technologies, Inc. All Rights Reserved.\n+ *\n+ *  Copyright 2012-2016 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *  Modifications copyright (C) 2017 Uber Technologies, Inc.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\"). You may not\n+ *  use this file except in compliance with the License. A copy of the License is\n+ *  located at\n+ *\n+ *  http://aws.amazon.com/apache2.0\n+ *\n+ *  or in the \"license\" file accompanying this file. This file is distributed on\n+ *  an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *  express or implied. See the License for the specific language governing\n+ *  permissions and limitations under the License.\n+ */\n+\n+package io.temporal.workflow;\n+\n+import io.temporal.common.converter.EncodedValues;\n+\n+/**\n+ * Use DynamicWorkflow to implement any number of workflow types dynamically. When a workflow\n+ * implementation type that extends DynamicWorkflow is registered, it is used to implement any\n+ * workflow type that is not implicitly registered with the {@link io.temporal.worker.Worker}. Only\n+ * one type that implements DynamicWorkflow per worker is allowed.\n+ *\n+ * <p>The main use case for DynamicWorkflow is an implementation of custom Domain Specific Languages\n+ * (DSLs). A single implementation can implement a workflow type which definition is dynamically\n+ * loaded from some external source.\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cbe996e4f51482a2e5c3080b993b5b460fd47da"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64e8476c08c47db334c56076e235d8af6975fd88", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/64e8476c08c47db334c56076e235d8af6975fd88", "committedDate": "2020-12-29T03:38:28Z", "message": "updated comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1d46e48230f109bc87dff459d506dfbf95b9524", "author": {"user": {"login": "mfateev", "name": "Maxim Fateev"}}, "url": "https://github.com/temporalio/sdk-java/commit/b1d46e48230f109bc87dff459d506dfbf95b9524", "committedDate": "2020-12-29T03:47:16Z", "message": "Eliminated some duplicated code"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3490, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}