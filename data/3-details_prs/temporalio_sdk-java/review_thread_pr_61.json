{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNTAyNDk1", "number": 61, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMToxNjowM1rODvzCsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMToxNjowM1rODvzCsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDQ1OTM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/temporal/internal/replay/StartChildWorkflowExecutionParameters.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMToxNjowM1rOGCbpCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMToyMzoyNFrOGCbw7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwMzIwOQ==", "bodyText": "Not sure if move to reference equality was intended?", "url": "https://github.com/temporalio/sdk-java/pull/61#discussion_r405203209", "createdAt": "2020-04-08T01:16:03Z", "author": {"login": "shawnhathaway"}, "path": "src/main/java/io/temporal/internal/replay/StartChildWorkflowExecutionParameters.java", "diffHunk": "@@ -232,42 +245,46 @@ public ParentClosePolicy getParentClosePolicy() {\n     return parentClosePolicy;\n   }\n \n+  public ChildWorkflowCancellationType getCancellationType() {\n+    return cancellationType;\n+  }\n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n     if (o == null || getClass() != o.getClass()) return false;\n     StartChildWorkflowExecutionParameters that = (StartChildWorkflowExecutionParameters) o;\n     return executionStartToCloseTimeoutSeconds == that.executionStartToCloseTimeoutSeconds\n         && taskStartToCloseTimeoutSeconds == that.taskStartToCloseTimeoutSeconds\n-        && Objects.equals(namespace, that.namespace)\n+        && cancellationType == that.cancellationType\n+        && Objects.equal(namespace, that.namespace)\n         && Arrays.equals(input, that.input)\n-        && Objects.equals(taskList, that.taskList)\n-        && Objects.equals(workflowId, that.workflowId)\n-        && Objects.equals(workflowType, that.workflowType)\n+        && Objects.equal(taskList, that.taskList)\n+        && Objects.equal(workflowId, that.workflowId)\n+        && Objects.equal(workflowType, that.workflowType)\n         && workflowIdReusePolicy == that.workflowIdReusePolicy\n-        && Objects.equals(retryParameters, that.retryParameters)\n-        && Objects.equals(cronSchedule, that.cronSchedule)\n-        && Objects.equals(context, that.context)\n-        && Objects.equals(parentClosePolicy, that.parentClosePolicy);\n+        && Objects.equal(retryParameters, that.retryParameters)\n+        && Objects.equal(cronSchedule, that.cronSchedule)\n+        && Objects.equal(context, that.context)\n+        && parentClosePolicy == that.parentClosePolicy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "babd4a5efad20586ab26ac372c7f1b4699590e43"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwNTIyOA==", "bodyText": "For enums == is a way to go: https://intellipaat.com/community/1254/comparing-java-enum-members-or-equals\nBTW this method is autogenerated by my IDE.", "url": "https://github.com/temporalio/sdk-java/pull/61#discussion_r405205228", "createdAt": "2020-04-08T01:23:24Z", "author": {"login": "mfateev"}, "path": "src/main/java/io/temporal/internal/replay/StartChildWorkflowExecutionParameters.java", "diffHunk": "@@ -232,42 +245,46 @@ public ParentClosePolicy getParentClosePolicy() {\n     return parentClosePolicy;\n   }\n \n+  public ChildWorkflowCancellationType getCancellationType() {\n+    return cancellationType;\n+  }\n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n     if (o == null || getClass() != o.getClass()) return false;\n     StartChildWorkflowExecutionParameters that = (StartChildWorkflowExecutionParameters) o;\n     return executionStartToCloseTimeoutSeconds == that.executionStartToCloseTimeoutSeconds\n         && taskStartToCloseTimeoutSeconds == that.taskStartToCloseTimeoutSeconds\n-        && Objects.equals(namespace, that.namespace)\n+        && cancellationType == that.cancellationType\n+        && Objects.equal(namespace, that.namespace)\n         && Arrays.equals(input, that.input)\n-        && Objects.equals(taskList, that.taskList)\n-        && Objects.equals(workflowId, that.workflowId)\n-        && Objects.equals(workflowType, that.workflowType)\n+        && Objects.equal(taskList, that.taskList)\n+        && Objects.equal(workflowId, that.workflowId)\n+        && Objects.equal(workflowType, that.workflowType)\n         && workflowIdReusePolicy == that.workflowIdReusePolicy\n-        && Objects.equals(retryParameters, that.retryParameters)\n-        && Objects.equals(cronSchedule, that.cronSchedule)\n-        && Objects.equals(context, that.context)\n-        && Objects.equals(parentClosePolicy, that.parentClosePolicy);\n+        && Objects.equal(retryParameters, that.retryParameters)\n+        && Objects.equal(cronSchedule, that.cronSchedule)\n+        && Objects.equal(context, that.context)\n+        && parentClosePolicy == that.parentClosePolicy;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwMzIwOQ=="}, "originalCommit": {"oid": "babd4a5efad20586ab26ac372c7f1b4699590e43"}, "originalPosition": 107}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1755, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}