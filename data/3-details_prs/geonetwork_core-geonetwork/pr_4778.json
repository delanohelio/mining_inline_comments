{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODY3NzY1", "number": 4778, "title": "pdf - normalize URL before openStream()", "bodyText": "We encountered the issue on geOrchestra, following an update of spring-security in our proxy placed in front of geonetwork.\nSince spring-security 4.2.4, a stricter filter than the default one is defined by default, see the following class:\nhttps://docs.spring.io/spring-security/site/docs/4.2.15.RELEASE/apidocs/org/springframework/security/web/firewall/StrictHttpFirewall.html\n\nRejects URLs that are not normalized to avoid bypassing security constraints. There is no way to disable this as it is considered extremely risky to disable this constraint. A few options to allow this behavior is to normalize the request prior to the firewall or using DefaultHttpFirewall instead. Please keep in mind that normalizing the request is fragile and why requests are rejected rather than normalized.\n\nWhen asking for a PDF export of a MD, some of the URLs pointing to e.g. images resources are passed to the PDF formatter which then tries to fetch them using URL.openStream(). These urls are not necessarily \"normalized\" (e.g. path is not recalculated to remove the \"../\" & \"./\").\nThis PR suggests to normalize the URLs before trying to fetch the remote resource.\nPlease note that this is probably not necessary for now, given the spring-security version in use in GeoNetwork (3.2.0 in the parent pom), but could become an issue in the future in case of upgrade.\nAlso changing the log level on the logger call to debug (this does not seem to be an error, since the message is more for information purposes).", "createdAt": "2020-06-17T13:53:13Z", "url": "https://github.com/geonetwork/core-geonetwork/pull/4778", "merged": true, "mergeCommit": {"oid": "8ad11149093700caefcf6944dab74b52844c39e1"}, "closed": true, "closedAt": "2020-10-01T05:59:41Z", "author": {"login": "pmauduit"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsPpnhgFqTQzMjczOTA3NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNoSN0gBqjM4MTk2MjM2NDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNzM5MDc1", "url": "https://github.com/geonetwork/core-geonetwork/pull/4778#pullrequestreview-432739075", "createdAt": "2020-06-17T20:12:46Z", "commit": {"oid": "4728269b1d1272e97b3fb1e795e5f7768766aaae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDoxMjo0N1rOGlVsaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDoxMjo0N1rOGlVsaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNTkzMQ==", "bodyText": "Was normalizedUrl just added for the logs?\nShould we be using normalizedUrl.openStream() here?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4778#discussion_r441805931", "createdAt": "2020-06-17T20:12:47Z", "author": {"login": "ianwallen"}, "path": "services/src/main/java/org/fao/geonet/api/records/formatters/ImageReplacedElementFactory.java", "diffHunk": "@@ -237,7 +240,9 @@ public UrlImageLoader(String url) {\n \n         @Override\n         public Image loadImage() throws Exception {\n-            Log.error(Geonet.GEONETWORK, \"URL -> \" + url);\n+            URI normalizedUrl = new URI(url).normalize();\n+            Log.debug(Geonet.GEONETWORK, String.format(\"URL -> %s, normalized URL -> %s\",\n+                url, normalizedUrl.toString()));\n \n             try (InputStream input = new URL(url).openStream()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4728269b1d1272e97b3fb1e795e5f7768766aaae"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4728269b1d1272e97b3fb1e795e5f7768766aaae", "author": {"user": {"login": "pmauduit", "name": "Pierre Mauduit"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/4728269b1d1272e97b3fb1e795e5f7768766aaae", "committedDate": "2020-06-17T13:46:56Z", "message": "pdf - normalize URL before openStream()\n\nWe encountered the issue on geOrchestra, following an update of\nspring-security in our proxy placed in front of geonetwork.\n\nSince spring-security 4.2.4, a stricter filter than the default one\nis defined by default, see the following class:\n\nhttps://docs.spring.io/spring-security/site/docs/4.2.15.RELEASE/apidocs/org/springframework/security/web/firewall/StrictHttpFirewall.html\n\n```\nRejects URLs that are not normalized to avoid bypassing security\nconstraints. There is no way to disable this as it is considered\nextremely risky to disable this constraint. A few options to allow this\nbehavior is to normalize the request prior to the firewall or using\nDefaultHttpFirewall instead. Please keep in mind that normalizing the\nrequest is fragile and why requests are rejected rather than normalized.\n```\n\nWhen asking for a PDF export of a MD, some of the URLs pointing to\ne.g. images resources are passed to the PDF formatter which then tries\nto fetch them using URL.openStream(). These urls are not necessarily\n\"normalized\" (e.g. path is not recalculated to remove the \"../\" & \"./\").\n\nThis PR suggests to normalize the URLs before trying to fetch the remote\nresource.\n\nPlease note that this is currently not necessary, given the\nspring-security version in use (3.2.0 in the parent pom), but could\nbecome an issue in the future in case of upgrade.\n\nAlso changing the log level on the logger call to debug (this does not\nseem to be an error, since the message is more for information purposes)."}, "afterCommit": {"oid": "f99b2579cfb7e267c74dc9d9f61a8b40eb0a3c64", "author": {"user": {"login": "pmauduit", "name": "Pierre Mauduit"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/f99b2579cfb7e267c74dc9d9f61a8b40eb0a3c64", "committedDate": "2020-09-29T12:52:09Z", "message": "pdf - normalize URL before openStream()\n\nWe encountered the issue on geOrchestra, following an update of\nspring-security in our proxy placed in front of geonetwork.\n\nSince spring-security 4.2.4, a stricter filter than the default one\nis defined by default, see the following class:\n\nhttps://docs.spring.io/spring-security/site/docs/4.2.15.RELEASE/apidocs/org/springframework/security/web/firewall/StrictHttpFirewall.html\n\n```\nRejects URLs that are not normalized to avoid bypassing security\nconstraints. There is no way to disable this as it is considered\nextremely risky to disable this constraint. A few options to allow this\nbehavior is to normalize the request prior to the firewall or using\nDefaultHttpFirewall instead. Please keep in mind that normalizing the\nrequest is fragile and why requests are rejected rather than normalized.\n```\n\nWhen asking for a PDF export of a MD, some of the URLs pointing to\ne.g. images resources are passed to the PDF formatter which then tries\nto fetch them using URL.openStream(). These urls are not necessarily\n\"normalized\" (e.g. path is not recalculated to remove the \"../\" & \"./\").\n\nThis PR suggests to normalize the URLs before trying to fetch the remote\nresource.\n\nPlease note that this is currently not necessary, given the\nspring-security version in use (3.2.0 in the parent pom), but could\nbecome an issue in the future in case of upgrade.\n\nAlso changing the log level on the logger call to debug (this does not\nseem to be an error, since the message is more for information purposes)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a09257dcc552002a6d87534d5c9fa12896ef1f34", "author": {"user": {"login": "pmauduit", "name": "Pierre Mauduit"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/a09257dcc552002a6d87534d5c9fa12896ef1f34", "committedDate": "2020-09-29T13:33:30Z", "message": "pdf - normalize URL before openStream()\n\nWe encountered the issue on geOrchestra, following an update of\nspring-security in our proxy placed in front of geonetwork.\n\nSince spring-security 4.2.4, a stricter filter than the default one\nis defined by default, see the following class:\n\nhttps://docs.spring.io/spring-security/site/docs/4.2.15.RELEASE/apidocs/org/springframework/security/web/firewall/StrictHttpFirewall.html\n\n```\nRejects URLs that are not normalized to avoid bypassing security\nconstraints. There is no way to disable this as it is considered\nextremely risky to disable this constraint. A few options to allow this\nbehavior is to normalize the request prior to the firewall or using\nDefaultHttpFirewall instead. Please keep in mind that normalizing the\nrequest is fragile and why requests are rejected rather than normalized.\n```\n\nWhen asking for a PDF export of a MD, some of the URLs pointing to\ne.g. images resources are passed to the PDF formatter which then tries\nto fetch them using URL.openStream(). These urls are not necessarily\n\"normalized\" (e.g. path is not recalculated to remove the \"../\" & \"./\").\n\nThis PR suggests to normalize the URLs before trying to fetch the remote\nresource.\n\nPlease note that this is currently not necessary, given the\nspring-security version in use (3.2.0 in the parent pom), but could\nbecome an issue in the future in case of upgrade.\n\nAlso changing the log level on the logger call to debug (this does not\nseem to be an error, since the message is more for information purposes)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f99b2579cfb7e267c74dc9d9f61a8b40eb0a3c64", "author": {"user": {"login": "pmauduit", "name": "Pierre Mauduit"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/f99b2579cfb7e267c74dc9d9f61a8b40eb0a3c64", "committedDate": "2020-09-29T12:52:09Z", "message": "pdf - normalize URL before openStream()\n\nWe encountered the issue on geOrchestra, following an update of\nspring-security in our proxy placed in front of geonetwork.\n\nSince spring-security 4.2.4, a stricter filter than the default one\nis defined by default, see the following class:\n\nhttps://docs.spring.io/spring-security/site/docs/4.2.15.RELEASE/apidocs/org/springframework/security/web/firewall/StrictHttpFirewall.html\n\n```\nRejects URLs that are not normalized to avoid bypassing security\nconstraints. There is no way to disable this as it is considered\nextremely risky to disable this constraint. A few options to allow this\nbehavior is to normalize the request prior to the firewall or using\nDefaultHttpFirewall instead. Please keep in mind that normalizing the\nrequest is fragile and why requests are rejected rather than normalized.\n```\n\nWhen asking for a PDF export of a MD, some of the URLs pointing to\ne.g. images resources are passed to the PDF formatter which then tries\nto fetch them using URL.openStream(). These urls are not necessarily\n\"normalized\" (e.g. path is not recalculated to remove the \"../\" & \"./\").\n\nThis PR suggests to normalize the URLs before trying to fetch the remote\nresource.\n\nPlease note that this is currently not necessary, given the\nspring-security version in use (3.2.0 in the parent pom), but could\nbecome an issue in the future in case of upgrade.\n\nAlso changing the log level on the logger call to debug (this does not\nseem to be an error, since the message is more for information purposes)."}, "afterCommit": {"oid": "a09257dcc552002a6d87534d5c9fa12896ef1f34", "author": {"user": {"login": "pmauduit", "name": "Pierre Mauduit"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/a09257dcc552002a6d87534d5c9fa12896ef1f34", "committedDate": "2020-09-29T13:33:30Z", "message": "pdf - normalize URL before openStream()\n\nWe encountered the issue on geOrchestra, following an update of\nspring-security in our proxy placed in front of geonetwork.\n\nSince spring-security 4.2.4, a stricter filter than the default one\nis defined by default, see the following class:\n\nhttps://docs.spring.io/spring-security/site/docs/4.2.15.RELEASE/apidocs/org/springframework/security/web/firewall/StrictHttpFirewall.html\n\n```\nRejects URLs that are not normalized to avoid bypassing security\nconstraints. There is no way to disable this as it is considered\nextremely risky to disable this constraint. A few options to allow this\nbehavior is to normalize the request prior to the firewall or using\nDefaultHttpFirewall instead. Please keep in mind that normalizing the\nrequest is fragile and why requests are rejected rather than normalized.\n```\n\nWhen asking for a PDF export of a MD, some of the URLs pointing to\ne.g. images resources are passed to the PDF formatter which then tries\nto fetch them using URL.openStream(). These urls are not necessarily\n\"normalized\" (e.g. path is not recalculated to remove the \"../\" & \"./\").\n\nThis PR suggests to normalize the URLs before trying to fetch the remote\nresource.\n\nPlease note that this is currently not necessary, given the\nspring-security version in use (3.2.0 in the parent pom), but could\nbecome an issue in the future in case of upgrade.\n\nAlso changing the log level on the logger call to debug (this does not\nseem to be an error, since the message is more for information purposes)."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1587, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}