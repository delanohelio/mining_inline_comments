{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMDgyMTUz", "number": 4701, "title": "Use unpack to support use of schema plugins as artifacts", "bodyText": "Transition from use of maven-resources-plugin:copy-resources (directory based) to maven-dependency-plugin:unpack (artifact based). This is an orthogonal but complemetary change to changing maven repositories to manage artifacts. See proposal Host Geonetwork artifacts on repo.osgeo.org for details.\nTo try this out:\n\nhttps://github.com/jodygarnett/core-geonetwork/tree/artifact_unpack\n\nSee proposal Use unpack to support use of schema plugins as artifacts and Bolsena 2020 slides for further discussion and decisions.\nAddresses issue: #4724\nReviewers are encouraged to start by reading schemas/README.md and web/pom.xml for context.\nWeb pom.xml use of copy-resources for copy-schemas execution\nThe web/pom.xml use of copy-resources can be converted to unpack:\n\n iso19139\n iso19110\n dublin-core\n csw-record\n iso19115-3.2018 (included from metadata101/iso19115-3.2018#74)\n docs/manuals\n\nThis is of the form:\n<resource>\n  <directory>${project.basedir}/../schemas/iso19139/src/main/plugin</directory>\n  <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n  </targetPath>\n</resource>\n\nYou can see this stepping outside the current build directory using a relative path reference.\nFeedback\n\n @josegar74 updated add_schema.sh to generate additional metadata101 profiles as documented in README.md\n use of maven-antrun-plugin to replace adding schema plugins one by one to copy_schemas using add_schema.sh\n Provided a link on using settings.xml to manage activeProfiles (just a link not a recommendation)\n Double check profile id can be the same for same between schemas/pom.xml and web/pom.xml so -Pschema-iso19115-3.2018\n Use - when naming profiles rather than '.' or '_'\n Rename to schemas-copy and schemas-unpack so options appear next to each other in IntelliJ\n Change -Dcopy to -DschemaCopy for consistency with profile names\n Test add-schema.sh with a metadata101 example\n\nDecisions from Bolsena Sprint\nThis activity was covered by the Bolsena 2020 code sprint, see Bolsena 2020 Online slides for discussion and decisions.\n\n\n Decision on version numbering:\n\ngeonetwork: major/minor/revision format\n\u201c3.10.4-SNAPSHOT\u201d\n\n\n\n Decision on schema-plugin version:\n\nChange: Use geonetwork version above\nResolves transitive instability\n\n\n\n Decision on schema-plugin packaging:\n\npublish both jar and zip to osgeo repository\n\n\n\n Decision on metadata101/iso19115-3.2018\n\nFold into core-geonetwork\n\n\n\nDiscussion\nQ: @josegar74 asks if this approach can be used while geonetwork is running in jetty?\nThis approach occurs during the maven process-resources phase and has functionally the same result (updating the same web folder used by jetty).\nQ: @josegar74 asks if the HNAP or the dutch schema plugins are still built as submodules?\nThere is no reason to do so:\n\nThe artifacts are fetched from the local maven repository (if you have a checkout of the HNAP plugin you can build it independently).\nIf needed the artifacts are fetched from repo.osgeo.org (as deployed by another developer or jenkins build server).\n\nQ: @fxprunayre notes that at some point we may drop the old way?\nThe use of -Dcopy saves one step (mvn install) and is worthwhile if we can manage it.\nThe maintenance of web/pom.xml with add_schema.sh is a lot of overhead; and forces each team to fork or branch core-geonetwork.\nTo resolve this it may be possible to use maven-antrun-plugin to copy any content in schemas/<plugin>/src/main/plugin to the appropriate location resulting a more maintainable solution that does not require team branch.\nQ: @ianwallen notes generally artifacts point to released coded, not work in progress code.\nThat is a mistake, switching to use of SNAPSHOTs to facilitate development.\nQ: @josegar74 and @ianwallen both note the requirement to update add-schema.sh\nSorry for mis-judging the importance of this:\n\nJose assures me this is required to assist with working on non metadata101 plugins.\nIan indicates that forking geonetwork is often recommended or required\n\nEase of transition using profiles\nI had a bit of inspiration from the GeoTools codebase:\n\n isolating both approaches into individual profiles\n Enable unpack profile by default\n Use a -Dcopy flag to activate copy-resources (while disabling the default unpack)", "createdAt": "2020-05-21T00:15:54Z", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701", "merged": true, "mergeCommit": {"oid": "4acb4aae80281f394c21adbcc03338493c7347dd"}, "closed": true, "closedAt": "2020-08-07T14:26:50Z", "author": {"login": "jodygarnett"}, "timelineItems": {"totalCount": 25, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjvoJKgFqTQxNjgwMjEzMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc92I9FgFqTQ2NTAyMzk2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2ODAyMTMz", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#pullrequestreview-416802133", "createdAt": "2020-05-22T10:16:09Z", "commit": {"oid": "7f6d2dd11d4705b85ce35e8ae268a5e4115e019e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDoxNjowOVrOGZSDkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDoyMjozOVrOGZSOhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2MzQwOQ==", "bodyText": "Small typo in resoruces", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r429163409", "createdAt": "2020-05-22T10:16:09Z", "author": {"login": "josegar74"}, "path": "schemas/README.md", "diffHunk": "@@ -1,17 +1,146 @@\n # Maven module containing schema plugins\n \n-## Plugin structure\n+## Schema Plugin Definition\n \n-A schema plugin is composed off:\n+* `src/main/plugin/<folder>` plugin contents:\n+   \n+  * `schema-ident.xml` configuration file\n+  * schema definition `xsd` files\n+  * transformations `xsl` files\n+  * See [GeoNetwork Manual](https://geonetwork-opensource.org/manuals/trunk/en/customizing-application/implementing-a-schema-plugin.html)\n \n-* A configuration folder containing XML file for configuration,\n-the schema as XSDs and a set of transformation (See http://geonetwork-opensource.org/manuals/trunk/eng/developer/schemaPlugins/index.html).\n+* `src/main/java` providing:\n+  \n+  * Optional: SchemaPlugin bean\n+  * Optional: ApplicationListener<ServerStartup> to auto install plugin\n \n-* (optional) A SchemaPlugin bean\n+## Recommended: Artifact unpack\n \n+1. Be sure your plugin includes `src/main/plugin`.\n \n-## Add a plugin to the build\n+2. Use `mvn install` to install your schema plugin in your local repository.\n \n-To include a new schema plugin in a build, copy the schema folder\n-here and add it to the copy-schemas execution in web/pom.xml.\n+3. Add a profile to `web/pom.xml` unpacking your schema plugin.\n+   \n+   ```xml\n+    <profile>\n+      <id>hnap</id>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <dependencies>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19139.ca.HNAP</artifactId>\n+                <version>${gn.schemas.version>}</version>\n+              </dependency>\n+            </dependencies>\n+            <executions>\n+              <execution>\n+                <id>iso19139.ca.HNAP-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>org.geonetwork-opensource</groupId>\n+                      <artifactId>schema-iso19139.ca.HNAP</artifactId>\n+                      <version>${gn.schemas.version>}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>src/main/plugin</includes>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+   ```\n \n+4. Use your profile, for example `mvn process-resources -Phnap`, to extract plugin from artifact during build.\n+\n+## Option: Fork and add a plugin to the build\n+\n+To include a new schema plugin in a build:\n+\n+1. Add schema plugin:\n+   \n+   * As a git submodule if you are making a fork\n+   * As a folder, using `.gitignore` to avoid accidentally commiting.\n+`\n+2. Use a profile (activated by your folder being present) to include your schema plugin to the list of modules in `pom.xml`.\n+   \n+   ```xml\n+   <profiles>\n+     <profile>\n+       <id>hnap</id>\n+       <activation>\n+       <file>\n+         <exists>iso19139.ca.HNAP</exists>\n+       </file>\n+       </activation>\n+       <modules>\n+         <module>iso19139.ca.HNAP</module>\n+       </modules>\n+     </profile>\n+   </profiles>\n+   ```\n+\n+3. Add your schema to the `copy-schemas` execution in `web/pom.xml`.\n+   \n+   ```xml\n+   <resource>\n+     <directory>${project.basedir}/../schemas/iso19139.ca.HNAP/src/main/plugin</directory>\n+     <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n+     </targetPath>\n+   </resource>\n+   ```\n+\n+4. Use `mvn process-resoruces -Dcopy` to activate `copy-schemas` execution.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f6d2dd11d4705b85ce35e8ae268a5e4115e019e"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE2NjIxNA==", "bodyText": "I would add this commented as an example or in the developer documentation.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r429166214", "createdAt": "2020-05-22T10:22:39Z", "author": {"login": "josegar74"}, "path": "web/pom.xml", "diffHunk": "@@ -875,10 +800,259 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+    <!--\n+    Schema management profiles.\n+    -->\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>unpack_schemas</id>\n+      <activation> <!-- default, disabled by -Dcopy -->\n+        <property><name>!copy</name></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <!-- Add dependencies to schema plugin having a custom Bean to be loaded. -->\n+            <dependencies>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19139</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-csw-record</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19110</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-dublin-core</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19115-3.2018</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+            </dependencies>\n+            <executions>\n+              <execution>\n+                <id>unpack-schemas</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19139</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin</includes>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-csw-record</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin</includes>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19110</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin</includes>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-dublin-core</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin</includes>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin</includes>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Copy schema resources using relative paths -->\n+    <profile>\n+      <id>copy-schemas</id>\n+      <activation> <!-- use -Dcopy to activate       -->\n+        <property><name>copy</name></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-resources-plugin</artifactId>\n+            <!-- Add dependencies to schema plugin having a custom Bean to be loaded. -->\n+            <dependencies>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19139</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-csw-record</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19110</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-dublin-core</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19115-3.2018</artifactId>\n+                <version>${gn.schemas.version}</version>\n+              </dependency>\n+            </dependencies>\n+            <!-- copy schema resources using relative paths -->\n+            <executions>\n+              <execution>\n+                <id>copy-schemas</id>\n+                <phase>process-resources</phase>\n+                <goals>\n+                  <goal>copy-resources</goal>\n+                </goals>\n+                <configuration>\n+                  <includeEmptyDirs>true</includeEmptyDirs>\n+                  <overwrite>true</overwrite>\n+                  <outputDirectory>${build.webapp.resources}</outputDirectory>\n+                  <resources>\n+                    <!-- Copy the schema folder to the webapp folder source directory\n+                    in order to be loaded by the application when running mvn jetty:run.\n+                    -->\n+                    <resource>\n+                      <directory>${project.basedir}/../schemas/iso19139/src/main/plugin</directory>\n+                      <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n+                      </targetPath>\n+                    </resource>\n+                    <resource>\n+                      <directory>${project.basedir}/../schemas/iso19110/src/main/plugin</directory>\n+                      <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n+                      </targetPath>\n+                    </resource>\n+                    <resource>\n+                      <directory>${project.basedir}/../schemas/dublin-core/src/main/plugin</directory>\n+                      <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n+                      </targetPath>\n+                    </resource>\n+                    <resource>\n+                      <directory>${project.basedir}/../schemas/csw-record/src/main/plugin</directory>\n+                      <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n+                      </targetPath>\n+                    </resource>\n+                    <resource>\n+                      <directory>${project.basedir}/../schemas/iso19115-3.2018/src/main/plugin</directory>\n+                      <targetPath>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\n+                      </targetPath>\n+                    </resource>\n+                    <!-- Copy the documentation in the webapp. -->\n+                    <resource>\n+                      <directory>${project.basedir}/../docs/manuals/target/doc</directory>\n+                      <targetPath>${basedir}/src/main/webapp/doc</targetPath>\n+                    </resource>\n+                  </resources>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Example: Unpack hnap schema plugin -->\n+    <profile>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f6d2dd11d4705b85ce35e8ae268a5e4115e019e"}, "originalPosition": 296}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NjM2NDg1", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#pullrequestreview-417636485", "createdAt": "2020-05-25T11:06:01Z", "commit": {"oid": "e9c9bf97bd0b4752d7e2ad61d2d894c0a34bbd49"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMTowNjowMVrOGZ9ijw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMToxMzoxNVrOGZ9stw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NTg1NQ==", "bodyText": "Are you adding the hnap schema plugin profile to the geonetwork core?  Any reason this would be added but not the other schema plugins from metadata 101? Was this used for testing and accidentally added to this pull request?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r429875855", "createdAt": "2020-05-25T11:06:01Z", "author": {"login": "ianwallen"}, "path": "schemas/pom.xml", "diffHunk": "@@ -51,8 +51,29 @@\n     <module>dublin-core</module>\n     <module>iso19110</module>\n     <module>iso19139</module>\n-    <module>iso19115-3.2018</module>\n   </modules>\n+\n+  <profiles>\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <file><exists>iso19115-3.2018</exists></file>\n+      </activation>\n+      <modules>\n+        <module>iso19115-3.2018</module>\n+      </modules>\n+    </profile>\n+    <profile>\n+      <id>hnap</id>\n+      <activation>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c9bf97bd0b4752d7e2ad61d2d894c0a34bbd49"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3ODQ1NQ==", "bodyText": "Is this option the same as using the \"add-schema.sh\"?\nIf so then the syntax for add-schema.sh should probably be added to this section.  It seems that the instructions to use this option should be consistent between this document and the schema plugin documentation.  The hnap module indicates to use add-schema.sh but this documentation indicates to update the file manually.\nWe could also add a similar script for the first option that would work similarly.(future enhancement). Unless add-schema.sh is being depreciated?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r429878455", "createdAt": "2020-05-25T11:13:15Z", "author": {"login": "ianwallen"}, "path": "schemas/README.md", "diffHunk": "@@ -1,17 +1,146 @@\n # Maven module containing schema plugins\n \n-## Plugin structure\n+## Schema Plugin Definition\n \n-A schema plugin is composed off:\n+* `src/main/plugin/<folder>` plugin contents:\n+   \n+  * `schema-ident.xml` configuration file\n+  * schema definition `xsd` files\n+  * transformations `xsl` files\n+  * See [GeoNetwork Manual](https://geonetwork-opensource.org/manuals/trunk/en/customizing-application/implementing-a-schema-plugin.html)\n \n-* A configuration folder containing XML file for configuration,\n-the schema as XSDs and a set of transformation (See http://geonetwork-opensource.org/manuals/trunk/eng/developer/schemaPlugins/index.html).\n+* `src/main/java` providing:\n+  \n+  * Optional: SchemaPlugin bean\n+  * Optional: ApplicationListener<ServerStartup> to auto install plugin\n \n-* (optional) A SchemaPlugin bean\n+## Recommended: Artifact unpack\n \n+1. Be sure your plugin includes `src/main/plugin`.\n \n-## Add a plugin to the build\n+2. Use `mvn install` to install your schema plugin in your local repository.\n \n-To include a new schema plugin in a build, copy the schema folder\n-here and add it to the copy-schemas execution in web/pom.xml.\n+3. Add a profile to `web/pom.xml` unpacking your schema plugin.\n+   \n+   ```xml\n+    <profile>\n+      <id>hnap</id>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <dependencies>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19139.ca.HNAP</artifactId>\n+                <version>${gn.schemas.version>}</version>\n+              </dependency>\n+            </dependencies>\n+            <executions>\n+              <execution>\n+                <id>iso19139.ca.HNAP-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>org.geonetwork-opensource</groupId>\n+                      <artifactId>schema-iso19139.ca.HNAP</artifactId>\n+                      <version>${gn.schemas.version>}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>src/main/plugin</includes>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+   ```\n \n+4. Use your profile, for example `mvn process-resources -Phnap`, to extract plugin from artifact during build.\n+\n+## Option: Fork and add a plugin to the build", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c9bf97bd0b4752d7e2ad61d2d894c0a34bbd49"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5NjQxODUy", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#pullrequestreview-419641852", "createdAt": "2020-05-27T22:04:03Z", "commit": {"oid": "6b4ec123bdb2dea9119f0b379ac877e6be244d0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjowNDowM1rOGbex1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMjowNDowM1rOGbex1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ2OTAxNA==", "bodyText": "Missing ending element for  <fileMappers>", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431469014", "createdAt": "2020-05-27T22:04:03Z", "author": {"login": "ianwallen"}, "path": "web/README.md", "diffHunk": "@@ -1,2 +1,152 @@\n+# GeoNetwork Web application\n+\n The web module contains the static resources and configuration file for building the final web application WAR.\n-# Web Application Configuration\n+\n+1. Run embedded Jetty server:\n+   \n+   ```\n+   mvn jetty:run -Penv-dev\n+   ```\n+   \n+   The `env-dev` profile above ensures geonetwork runs without a javascript cache allowing testing of changes to `web-ui`.\n+\n+2. After a moment, GeoNetwork should be accessible at:\n+   \n+   * http://localhost:8080/geonetwork\n+   \n+3. For changes related to the user interface in the `web-ui` module or the metadata schemas, can be deployed in jetty:\n+\n+   ```\n+   mvn process-resources\n+   ```\n+   Jetty is configured to use `src/main/webapp` and classpath and will reload any changes. Use of `process-resources` or `install` will be picked up by the running application.\n+\n+# Management of Schema Plugins\n+\n+The web application `src/main/webapp` contains `WEB-INF/data/config/schema_plugins` used\n+by the application.\n+\n+1. To include additional schema plugins use the appropriate profile:\n+   \n+   ```\n+   mvn process-resources -Piso19139.xyz\n+   mvn jetty:run -Piso19139.xyz\n+   ```\n+\n+2. The profile makes use of the artifact `schema-iso19139.xyz`.\n+   \n+   When testing you can build this artifact from a local checkout:\n+   \n+   ```\n+   cd iso19139.xyz\n+   mvn install\n+   ```\n+   \n+   And test using `process-resources` as shown above.\n+\n+3. Tip: If you commonly work with a set series of plugins you can manage via [settings.xml](https://maven.apache.org/settings.html):\n+   \n+   ```xml\n+   <settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"\n+     xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+     xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0\n+                         https://maven.apache.org/xsd/settings-1.0.0.xsd\">\n+     ...\n+     <activeProfiles>\n+       <activeProfile>iso19139.xyz</activeProfile>\n+     </activeProfiles>\n+   </settings>\n+   ```\n+\n+## Include a schema plugin\n+\n+To include your schema plugin in `web/pom.xml`:\n+\n+1.  Add a profile to `web/pom.xml` unpacking your schema plugin.\n+   \n+   ```xml\n+    <profile>\n+      <id>iso19139.xyz</id>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <dependencies>\n+              <dependency>\n+                <groupId>${project.groupId}</groupId>\n+                <artifactId>schema-iso19139.xyz</artifactId>\n+                <version>${gn.schemas.version>}</version>\n+              </dependency>\n+            </dependencies>\n+            <executions>\n+              <execution>\n+                <id>iso19139.xyz-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>iso19139.xyz</artifactId>\n+                      <version>${gn.schemas.version>}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b4ec123bdb2dea9119f0b379ac877e6be244d0f"}, "originalPosition": 99}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMDQ2NDI1", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#pullrequestreview-420046425", "createdAt": "2020-05-28T12:14:34Z", "commit": {"oid": "ececacaa0113f2c13b0fdfbd7d0273832e7a6e06"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoxNDozNFrOGbyVwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozNzoyMVrOGbzGrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc4OTUwNQ==", "bodyText": "I like the idea that you are using the same id for both web and schema pom but unfortunately it does not work - only one is activated.  So it may need to be renamed - maybe schema-iso19115-3.2018 and module-iso19115-3.2018?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431789505", "createdAt": "2020-05-28T12:14:34Z", "author": {"login": "ianwallen"}, "path": "schemas/pom.xml", "diffHunk": "@@ -51,8 +51,29 @@\n     <module>dublin-core</module>\n     <module>iso19110</module>\n     <module>iso19139</module>\n-    <module>iso19115-3.2018</module>\n   </modules>\n+\n+  <profiles>\n+    <profile>\n+      <id>iso19115-3.2018</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ececacaa0113f2c13b0fdfbd7d0273832e7a6e06"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NTIzOQ==", "bodyText": "Regarding adding the profile to web/pom.xml, isn't that the purpose of the add_schema.sh? It is a way to add the standard expected code to the pom file for cases where you may want it.  I agree that if it is already there, then it is easy to turn it off and on but I don't think it is reasonable to expect that we will have the full list of schemas in the pom files. This is why I was suggesting that we (I can do this) create  a add_schema_profile.sh that would allow the user to add the standard profile settings.  You did mention an option using ant in an email - I did not fully understand this option so I'm waiting to see a sample of this as this may be a better option.\n.m2 modification is no an option for us as this would not be easily portable to build env as well as getting developers to add this settings locally will cause issues.  Also I have several build folder on my pc and regularly create others for testing - in some cases, I build hnap and other cases I don't and I don't want to hit debug issues related to this being activated and I had forgotten.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431795239", "createdAt": "2020-05-28T12:25:03Z", "author": {"login": "ianwallen"}, "path": "schemas/pom.xml", "diffHunk": "@@ -51,8 +51,29 @@\n     <module>dublin-core</module>\n     <module>iso19110</module>\n     <module>iso19139</module>\n-    <module>iso19115-3.2018</module>\n   </modules>\n+\n+  <profiles>\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <file><exists>iso19115-3.2018</exists></file>\n+      </activation>\n+      <modules>\n+        <module>iso19115-3.2018</module>\n+      </modules>\n+    </profile>\n+    <profile>\n+      <id>hnap</id>\n+      <activation>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NTg1NQ=="}, "originalCommit": {"oid": "e9c9bf97bd0b4752d7e2ad61d2d894c0a34bbd49"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NjY4OA==", "bodyText": "copy is fairly generic.  i.e. -Dcopy is not that meaningful.  I would recommend that we use -Dcopy_schema or -DcopySchema of something along those lines.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431796688", "createdAt": "2020-05-28T12:27:40Z", "author": {"login": "ianwallen"}, "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,211 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <property><name>!copy</name></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>unpack_schemas</id>\n+      <activation> <!-- default, disabled by -Dcopy -->\n+        <property><name>!copy</name></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>unpack-schemas</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19139</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-csw-record</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19110</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-dublin-core</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Copy schema resources using relative paths -->\n+    <profile>\n+      <id>copy-schemas</id>\n+      <activation> <!-- use -Dcopy to activate       -->\n+        <property><name>copy</name></property>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ececacaa0113f2c13b0fdfbd7d0273832e7a6e06"}, "originalPosition": 257}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5OTE5MA==", "bodyText": "The 2 profiles - unpack-schemas and copy-schemas - they are not grouped correctly when showing the maven toolbox in Intellij.  I see the env settings for prod/dev/inspire grouped together because they all start with env- and this makes it easier to see the options.  So I'm recommending that these be renamed to schemas-unpack and schemas-copy so that they are grouped next to each other in the maven toolbar.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431799190", "createdAt": "2020-05-28T12:32:05Z", "author": {"login": "ianwallen"}, "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,211 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <property><name>!copy</name></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>unpack_schemas</id>\n+      <activation> <!-- default, disabled by -Dcopy -->\n+        <property><name>!copy</name></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>unpack-schemas</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ececacaa0113f2c13b0fdfbd7d0273832e7a6e06"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMTYyMQ==", "bodyText": "I noticed that if I run mvn -Pcopy-schemas then it will run both the copy-schemas (because I mentioned it in the profile) and the unpack_schemas (because -Dcopy does not exists).  The same issues probably happens when using the -P to set env variables.   I quickly looked online and did see others with similar issues but I did not see a easy fix - so this may not be easy to fix.  Just wanted to bring it to your attention as you may know of a way to fix this.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431801621", "createdAt": "2020-05-28T12:36:40Z", "author": {"login": "ianwallen"}, "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,211 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <property><name>!copy</name></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>unpack_schemas</id>\n+      <activation> <!-- default, disabled by -Dcopy -->\n+        <property><name>!copy</name></property>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ececacaa0113f2c13b0fdfbd7d0273832e7a6e06"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMjAyOQ==", "bodyText": "Other profile use \"-\" for separator so we may want to be consistent.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r431802029", "createdAt": "2020-05-28T12:37:21Z", "author": {"login": "ianwallen"}, "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,211 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <property><name>!copy</name></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>unpack_schemas</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ececacaa0113f2c13b0fdfbd7d0273832e7a6e06"}, "originalPosition": 171}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODYwNjE2", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#pullrequestreview-420860616", "createdAt": "2020-05-29T11:13:29Z", "commit": {"oid": "739bc2b8939404c5ddd1dd3e45b5d62c1a55cd38"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMToxMzoyOVrOGcYluQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMToxODo1MlrOGcYu3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxNjE4NQ==", "bodyText": "The only reason this would work for us is because hnap module is pre-added.  I don't believe we are trying to set it up just so I don't have to fork?  For this to work with the full geonetwork community, we would need to have all possible profiles in the pom.xml which I don't believe is feasible.   If I wanted to avoid a fork, then I would simply add the hnap post deployment.\nGeonetwork seems to require lots of config changes that can only be done with a fork. We currently need to do a fork just to change the spring security in our deployment.   It may take time before all these config options can be configured based on one war file without doing post deployment changes. Hopefully we can make it there someday...\nLots of documentation states to say away from <activeByDefault> - in our case we generally setup the deployment so that it works by default without having to modify profiles.  So in this case we would be adding the hnap schema to the pom file either manually as a small configuration change or we will use the one that it pre-installed in the pom if it is already there.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432416185", "createdAt": "2020-05-29T11:13:29Z", "author": {"login": "ianwallen"}, "path": "schemas/pom.xml", "diffHunk": "@@ -51,8 +51,29 @@\n     <module>dublin-core</module>\n     <module>iso19110</module>\n     <module>iso19139</module>\n-    <module>iso19115-3.2018</module>\n   </modules>\n+\n+  <profiles>\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <file><exists>iso19115-3.2018</exists></file>\n+      </activation>\n+      <modules>\n+        <module>iso19115-3.2018</module>\n+      </modules>\n+    </profile>\n+    <profile>\n+      <id>hnap</id>\n+      <activation>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3NTg1NQ=="}, "originalCommit": {"oid": "e9c9bf97bd0b4752d7e2ad61d2d894c0a34bbd49"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxNjU1Ng==", "bodyText": "I though this was going to be removed?  If not then it should be renamed to schema-iso19139.ca.HNAP to be consistent.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432416556", "createdAt": "2020-05-29T11:14:21Z", "author": {"login": "ianwallen"}, "path": "schemas/pom.xml", "diffHunk": "@@ -51,8 +51,29 @@\n     <module>dublin-core</module>\n     <module>iso19110</module>\n     <module>iso19139</module>\n-    <module>iso19115-3.2018</module>\n   </modules>\n+\n+  <profiles>\n+    <profile>\n+      <id>schema-iso19115-3-2018</id>\n+      <activation>\n+        <file><exists>iso19115-3.2018</exists></file>\n+      </activation>\n+      <modules>\n+        <module>iso19115-3.2018</module>\n+      </modules>\n+    </profile>\n+    <profile>\n+      <id>hnap</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "739bc2b8939404c5ddd1dd3e45b5d62c1a55cd38"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQxODUyNw==", "bodyText": "Looks better - thank you.\nIt would have been nice to also rename all the related variables/properties as well to be in line with the profile name but it is fine is these cannot be changed..", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r432418527", "createdAt": "2020-05-29T11:18:52Z", "author": {"login": "ianwallen"}, "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,211 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>iso19115-3.2018</id>\n+      <activation>\n+        <property><name>!copy</name></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>unpack_schemas</id>\n+      <activation> <!-- default, disabled by -Dcopy -->\n+        <property><name>!copy</name></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>unpack-schemas</id>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5OTE5MA=="}, "originalCommit": {"oid": "ececacaa0113f2c13b0fdfbd7d0273832e7a6e06"}, "originalPosition": 182}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNzUwMzI1", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#pullrequestreview-421750325", "createdAt": "2020-06-01T10:43:53Z", "commit": {"oid": "4d589d2400d81e0c78066b974ece1d6e9c6702ee"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMDo0Mzo1M1rOGdGOAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMTozMDoyNVrOGdHWUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2Mzc3Ng==", "bodyText": "Should be -DschemasCopy=true", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433163776", "createdAt": "2020-06-01T10:43:53Z", "author": {"login": "ianwallen"}, "path": "web/README.md", "diffHunk": "@@ -1,2 +1,180 @@\n+# GeoNetwork Web application\n+\n The web module contains the static resources and configuration file for building the final web application WAR.\n-# Web Application Configuration\n+\n+1. Run embedded Jetty server:\n+   \n+   ```\n+   mvn jetty:run -Penv-dev\n+   ```\n+   \n+   The `env-dev` profile above ensures geonetwork runs without a javascript cache allowing testing of changes to `web-ui`.\n+\n+2. After a moment, GeoNetwork should be accessible at:\n+   \n+   * http://localhost:8080/geonetwork\n+\n+4. Jetty is configured to use `src/main/webapp` and maven classpath and will reload changes:\n+   \n+   * For changes related to the user interface in the `web-ui` module:\n+     \n+     ```\n+     mvn process-resources\n+     ```\n+   \n+   * For changes to schema plugins:\n+   \n+     ```\n+     cd ../schemas\n+     mvn install\n+     cd ../web\n+     mvn process-resources\n+     ```\n+   \n+   * You may also try the following (which just copies between folders):\n+     \n+     ```\n+     mvn process-resources -DschemasCopy=true\n+     ```\n+\n+# Managing Schema Plugins\n+\n+The web application `src/main/webapp` contains `WEB-INF/data/config/schema_plugins` used\n+by the application.\n+\n+If your plugin is in the `schemas` folder:\n+\n+1. The `web/pom.xml` is setup to run jetty and automatically include any additional\n+   schema plugins in the `schemas` folder.\n+   \n+\n+If your plugin is not in the `schemas` folder:\n+\n+2. If you are building a metadata101 plugin separately, or working with your own plugin:\n+\n+   ```\n+   cd iso19139.xyz\n+   mvn install\n+   ```\n+\n+3. Use `jetty:run` with an additional profile to test your plugin:\n+   \n+   ```\n+   mvn install -Pschema-iso19139.xyz\n+   mvn jetty:run -Pschema-iso19139.xyz\n+   ```\n+\n+2. In the example above the profile `-Pschema-iso19139.xyz`:\n+   \n+   * Includes `schema-iso19139.xyz` artifact as a dependency, making the schema plugin bean is available on the CLASSPATH.\n+   * Unpacks the `schema-iso19139.xyz` artifact `plugin` folder into `WEB-INF/data/config/schema_plugins`\n+\n+4. The profile can also be used with `process-resources` while jetty is running:\n+   \n+   ```\n+   cd web\n+   mvn process-resources -Pschema-iso19139.xyz\n+   ```\n+\n+5. Tip: If you commonly work with a set series of plugins you can manage via [settings.xml](https://maven.apache.org/settings.html).\n+\n+## Including additional schema plugins\n+\n+To include your schema plugin in `web/pom.xml`:\n+\n+1.  Add a profile to `web/pom.xml` unpacking your schema plugin.\n+\n+    Use the `iso19115-3.2018` as an example, at the time of writing:\n+   \n+   ```xml\n+    <profile>\n+      <id>schema-iso19115-3-2018</id>\n+      <activation>\n+        <property><name>schemasCopy</name><value>!true</value></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+   ```\n+\n+2. This profile example has several interesting features:\n+   \n+   * Activates automatically if the `schemas/iso19115-3.2018` folder is present\n+   * Disabled if `-DcopySchemas=true` property is set", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d589d2400d81e0c78066b974ece1d6e9c6702ee"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2NDM3OQ==", "bodyText": "Should be schema-iso19139.xyz to be consistent with documentation.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433164379", "createdAt": "2020-06-01T10:45:22Z", "author": {"login": "ianwallen"}, "path": "schemas/README.md", "diffHunk": "@@ -1,17 +1,60 @@\n # Maven module containing schema plugins\n \n-## Plugin structure\n-\n-A schema plugin is composed off:\n-\n-* A configuration folder containing XML file for configuration,\n-the schema as XSDs and a set of transformation (See http://geonetwork-opensource.org/manuals/trunk/eng/developer/schemaPlugins/index.html).\n-\n-* (optional) A SchemaPlugin bean\n-\n+## Schema Plugin Definition\n+\n+#. `src/main/plugin/<folder>` plugin contents:\n+   \n+  * `schema-ident.xml` configuration file\n+  * schema definition `xsd` files\n+  * transformations `xsl` files\n+  * See [GeoNetwork Manual](https://geonetwork-opensource.org/manuals/trunk/en/customizing-application/implementing-a-schema-plugin.html)\n+\n+#. `src/main/java` providing:\n+  \n+  * Optional: SchemaPlugin bean\n+  * Optional: ApplicationListener<ServerStartup> to auto install plugin\n+\n+#. Be sure your plugin includes `src/main/plugin`:\n+   \n+   ```xml\n+    <resources>\n+      <resource>\n+        <directory>src/main/resources</directory>\n+      </resource>\n+      <resource>\n+        <directory>src/main/plugin</directory>\n+        <targetPath>plugin</targetPath>\n+      </resource>\n+    </resources>\n+   ```\n+\n+#. Use `mvn install` to install your schema plugin in your local repository.\n \n ## Add a plugin to the build\n \n-To include a new schema plugin in a build, copy the schema folder\n-here and add it to the copy-schemas execution in web/pom.xml.\n+While schema plugins can be built idependently, they can be conditionally included in the build:\n+\n+1. Add schema plugin:\n+\n+   * As a folder, using `.gitignore` to avoid accidentally commiting.\n+   \n+   * As a git submodule if you are making a fork\n+`\n+2. Use a profile (activated by your folder being present) to include your schema plugin to the list of modules in `pom.xml`.\n+   \n+   ```xml\n+   <profiles>\n+     <profile>\n+       <id>iso19139.xyz</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d589d2400d81e0c78066b974ece1d6e9c6702ee"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE2NjQ3OQ==", "bodyText": "Should be \"schemas-copy\"  (remove trailing s)\nShould be \"web/pom.xml\" to make it clear that this is the web/pom.xml", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433166479", "createdAt": "2020-06-01T10:50:38Z", "author": {"login": "ianwallen"}, "path": "web/README.md", "diffHunk": "@@ -1,2 +1,180 @@\n+# GeoNetwork Web application\n+\n The web module contains the static resources and configuration file for building the final web application WAR.\n-# Web Application Configuration\n+\n+1. Run embedded Jetty server:\n+   \n+   ```\n+   mvn jetty:run -Penv-dev\n+   ```\n+   \n+   The `env-dev` profile above ensures geonetwork runs without a javascript cache allowing testing of changes to `web-ui`.\n+\n+2. After a moment, GeoNetwork should be accessible at:\n+   \n+   * http://localhost:8080/geonetwork\n+\n+4. Jetty is configured to use `src/main/webapp` and maven classpath and will reload changes:\n+   \n+   * For changes related to the user interface in the `web-ui` module:\n+     \n+     ```\n+     mvn process-resources\n+     ```\n+   \n+   * For changes to schema plugins:\n+   \n+     ```\n+     cd ../schemas\n+     mvn install\n+     cd ../web\n+     mvn process-resources\n+     ```\n+   \n+   * You may also try the following (which just copies between folders):\n+     \n+     ```\n+     mvn process-resources -DschemasCopy=true\n+     ```\n+\n+# Managing Schema Plugins\n+\n+The web application `src/main/webapp` contains `WEB-INF/data/config/schema_plugins` used\n+by the application.\n+\n+If your plugin is in the `schemas` folder:\n+\n+1. The `web/pom.xml` is setup to run jetty and automatically include any additional\n+   schema plugins in the `schemas` folder.\n+   \n+\n+If your plugin is not in the `schemas` folder:\n+\n+2. If you are building a metadata101 plugin separately, or working with your own plugin:\n+\n+   ```\n+   cd iso19139.xyz\n+   mvn install\n+   ```\n+\n+3. Use `jetty:run` with an additional profile to test your plugin:\n+   \n+   ```\n+   mvn install -Pschema-iso19139.xyz\n+   mvn jetty:run -Pschema-iso19139.xyz\n+   ```\n+\n+2. In the example above the profile `-Pschema-iso19139.xyz`:\n+   \n+   * Includes `schema-iso19139.xyz` artifact as a dependency, making the schema plugin bean is available on the CLASSPATH.\n+   * Unpacks the `schema-iso19139.xyz` artifact `plugin` folder into `WEB-INF/data/config/schema_plugins`\n+\n+4. The profile can also be used with `process-resources` while jetty is running:\n+   \n+   ```\n+   cd web\n+   mvn process-resources -Pschema-iso19139.xyz\n+   ```\n+\n+5. Tip: If you commonly work with a set series of plugins you can manage via [settings.xml](https://maven.apache.org/settings.html).\n+\n+## Including additional schema plugins\n+\n+To include your schema plugin in `web/pom.xml`:\n+\n+1.  Add a profile to `web/pom.xml` unpacking your schema plugin.\n+\n+    Use the `iso19115-3.2018` as an example, at the time of writing:\n+   \n+   ```xml\n+    <profile>\n+      <id>schema-iso19115-3-2018</id>\n+      <activation>\n+        <property><name>schemasCopy</name><value>!true</value></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+   ```\n+\n+2. This profile example has several interesting features:\n+   \n+   * Activates automatically if the `schemas/iso19115-3.2018` folder is present\n+   * Disabled if `-DcopySchemas=true` property is set\n+   * Adds a dependency using a version range so that the schema plugin jar is included\n+   * Unpacks a `plugin` folder into the webapp `schema_plugins` folder\n+\n+3. Over time we expect active metadata101 schema plugins be listed.\n+\n+## Alternative: Add schema plugin to `copy-schemas` profile\n+\n+An alternative approach of copying folders is available using the `-DschemasCopy` flag:\n+\n+* `-DschemasCopy=true`: copies folders from `../schemas` location\n+* `-DschemasCopy=false`: default approach, using artifact and maven repository\n+\n+To add your schema plugin to the `schemas-copy` profile:\n+\n+1. Locate the `schemas-copys` profile in `pom.xml`:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d589d2400d81e0c78066b974ece1d6e9c6702ee"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE4MTUzMg==", "bodyText": "Intellij give me an error on this line.  It indicates that encoding is not allowed here?  Based on the following\nhttps://maven.apache.org/plugins/maven-resources-plugin/examples/encoding.html the encoding is on a configuration element under plugin not execution.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433181532", "createdAt": "2020-06-01T11:28:26Z", "author": {"login": "ianwallen"}, "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,221 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>schema-iso19115-3-2018</id>\n+      <activation>\n+        <property><name>schemasCopy</name><value>!true</value></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d589d2400d81e0c78066b974ece1d6e9c6702ee"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE4MjI4OQ==", "bodyText": "Shouldn't the copy resource for schema-iso19115-3.2018 be here?  And iso19139.xyz can be removed in this case as iso19139.xyz is not supplied as a sample in all the other locations.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r433182289", "createdAt": "2020-06-01T11:30:25Z", "author": {"login": "ianwallen"}, "path": "web/pom.xml", "diffHunk": "@@ -875,10 +841,221 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Schema management profiles. -->\n+    <profile>\n+      <id>schema-iso19115-3-2018</id>\n+      <activation>\n+        <property><name>schemasCopy</name><value>!true</value></property>\n+        <file><exists>../schemas/iso19115-3.2018</exists></file>\n+      </activation>\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version.range}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>iso19115-3.2018-resources</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19115-3.2018</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>schemas-unpack</id>\n+      <activation>\n+        <property><name>schemasCopy</name><value>!true</value></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>unpack-schemas</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19139</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-csw-record</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-iso19110</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                    <artifactItem>\n+                      <groupId>${project.groupId}</groupId>\n+                      <artifactId>schema-dublin-core</artifactId>\n+                      <version>${gn.schemas.version}</version>\n+                      <type>jar</type>\n+                      <overWrite>false</overWrite>\n+                      <outputDirectory>${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins</outputDirectory>\n+                      <includes>plugin/**</includes>\n+                      <fileMappers>\n+                        <fileMapper implementation=\"org.codehaus.plexus.components.io.filemappers.RegExpFileMapper\">\n+                          <pattern>^plugin/</pattern><replacement>./</replacement>\n+                        </fileMapper>\n+                      </fileMappers>\n+                    </artifactItem>\n+                  </artifactItems>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+        </plugins>\n+      </build>\n+    </profile>\n+\n+    <!-- Copy schema resources using relative paths -->\n+    <profile>\n+      <id>schemas-copy</id>\n+      <activation> <!-- use -DcopySchemas=true to activate       -->\n+        <property><name>schemasCopy</name><value>true</value></property>\n+      </activation>\n+      <!-- Add dependencies to schema plugin having a custom Bean to be loaded. -->\n+      <dependencies>\n+        <dependency>\n+          <groupId>${project.groupId}</groupId>\n+          <artifactId>schema-iso19115-3.2018</artifactId>\n+          <version>${gn.schemas.version}</version>\n+        </dependency>\n+      </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-antrun-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>copy-schemas-ant</id>\n+                <phase>process-resources</phase>\n+                <goals>\n+                  <goal>run</goal>\n+                </goals>\n+                <configuration>\n+                    <!-- Copy all the src/main/plugin folders in schemas to the webapp folder\n+                    in order to be loaded by the application when running mvn jetty:run.\n+                    -->\n+                  <target description=\"copy from schemas to schema_plugins folder\">\n+                    <copy todir=\"${basedir}/src/main/webapp/WEB-INF/data/config/schema_plugins\">\n+                      <fileset dir=\"${basedir}/../schemas/\">\n+                        <include name=\"**/src/main/plugin/**\"/>\n+                      </fileset>\n+                      <regexpmapper handledirsep=\"yes\"\n+                        from=\"^[-_a-zA-Z0-9]+/src/main/plugin/(.*)\"\n+                          to=\"\\1\" />\n+                    </copy>\n+                  </target>\n+                </configuration>\n+              </execution>\n+            </executions>\n+          </plugin>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-resources-plugin</artifactId>\n+            <!-- copy schema resources using relative paths -->\n+            <executions>\n+              <execution>\n+                <id>copy-schemas</id>\n+                <phase>process-resources</phase>\n+                <goals>\n+                  <goal>copy-resources</goal>\n+                </goals>\n+                <configuration>\n+                  <includeEmptyDirs>true</includeEmptyDirs>\n+                  <overwrite>true</overwrite>\n+                  <outputDirectory>${build.webapp.resources}</outputDirectory>\n+                  <resources>\n+                    <!-- Copy src/main/plugin folder to webapp folder source directory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d589d2400d81e0c78066b974ece1d6e9c6702ee"}, "originalPosition": 313}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "436259d24d6ac587fd446e035498b0f3adbf415c", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/436259d24d6ac587fd446e035498b0f3adbf415c", "committedDate": "2020-06-01T22:11:16Z", "message": "Update based on feedback from Ian and Jose\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}, "afterCommit": {"oid": "7cf015b7d6ae9a8e3876db28ac044d0406ab8b72", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/7cf015b7d6ae9a8e3876db28ac044d0406ab8b72", "committedDate": "2020-06-01T22:28:41Z", "message": "Add choice to unpack or copy schema plugins\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNzI0MDEx", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#pullrequestreview-422724011", "createdAt": "2020-06-02T14:15:45Z", "commit": {"oid": "2743d23c640d0e88c796899faa8a55f61dca53b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e3c65f4c4f3eac3a7784e72f78d04eff52fa186", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/6e3c65f4c4f3eac3a7784e72f78d04eff52fa186", "committedDate": "2020-06-29T21:40:26Z", "message": "Add choice to unpack or copy schema plugins\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93aff0047bdeaeefd0728900f2e0f67cfd92649f", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/93aff0047bdeaeefd0728900f2e0f67cfd92649f", "committedDate": "2020-06-29T21:40:26Z", "message": "Do not commit .bak files\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2743d23c640d0e88c796899faa8a55f61dca53b1", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/2743d23c640d0e88c796899faa8a55f61dca53b1", "committedDate": "2020-06-01T23:37:09Z", "message": "Do not commit .bak files\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}, "afterCommit": {"oid": "93aff0047bdeaeefd0728900f2e0f67cfd92649f", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/93aff0047bdeaeefd0728900f2e0f67cfd92649f", "committedDate": "2020-06-29T21:40:26Z", "message": "Do not commit .bak files\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72bbfea807ee7f4f68740a24c805eb03bec24119", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/72bbfea807ee7f4f68740a24c805eb03bec24119", "committedDate": "2020-06-30T05:55:18Z", "message": "Consistently use 3.11.0-SNAPSHOT\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "780454d7de354b5c6644b9b94467abfc75f44f6b", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/780454d7de354b5c6644b9b94467abfc75f44f6b", "committedDate": "2020-06-30T21:58:08Z", "message": "Test use of zip using dublin core\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d2b5953cbe417e13bc4a53507fdec4915c5ae23", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/3d2b5953cbe417e13bc4a53507fdec4915c5ae23", "committedDate": "2020-06-30T22:45:38Z", "message": "Assemble schema plugins as zip archives and unpack into web\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b515b06aad9648090f3a9c6c439336951252e0e", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/5b515b06aad9648090f3a9c6c439336951252e0e", "committedDate": "2020-06-30T23:08:15Z", "message": "Update readme instructions and add-schema.sh\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc18709fc405604dd3f3694c12160f51bc64e591", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/bc18709fc405604dd3f3694c12160f51bc64e591", "committedDate": "2020-07-02T06:21:11Z", "message": "Add notes on how web-app is built\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84314393a88e06709a5ad0a6437b3c3a5b65096f", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/84314393a88e06709a5ad0a6437b3c3a5b65096f", "committedDate": "2020-07-02T06:21:55Z", "message": "include comments in all the filters for ease of comparison\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e293e5a61180a3f313e0de44a17e731d3a5eb97", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/2e293e5a61180a3f313e0de44a17e731d3a5eb97", "committedDate": "2020-07-08T00:17:42Z", "message": "Remove build process research from README.md into a core-geonetwork proposal"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a121a6ee84d0477fbee4fa2a25e1f88b7487c332", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/a121a6ee84d0477fbee4fa2a25e1f88b7487c332", "committedDate": "2020-07-08T17:00:40Z", "message": "Remove submodule and Include iso19115-3 directly\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bdcb0706e9fae57309486e09bff2712af9cc021", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/0bdcb0706e9fae57309486e09bff2712af9cc021", "committedDate": "2020-07-08T20:31:38Z", "message": "resolve regex for iso19115-3.2018\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbb2615054a5f3789db313f7a98958c2d8acf7f8", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/bbb2615054a5f3789db313f7a98958c2d8acf7f8", "committedDate": "2020-07-08T20:55:04Z", "message": "Update example snippet in add-schema.sh\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc3646dcc3c8c6ad02c9bfacf641bb63018b83aa", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/bc3646dcc3c8c6ad02c9bfacf641bb63018b83aa", "committedDate": "2020-07-08T21:23:57Z", "message": "Add escapes so schema-plugins.dir is used in generated web/pom.xml unpack\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11382c909b61dd84f3c511467ac36464ae3babd9", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/11382c909b61dd84f3c511467ac36464ae3babd9", "committedDate": "2020-07-23T06:44:13Z", "message": "Merge branch 'master' into artifact_unpack"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0OTg1MTI4", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#pullrequestreview-464985128", "createdAt": "2020-08-11T11:42:55Z", "commit": {"oid": "11382c909b61dd84f3c511467ac36464ae3babd9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMTo0Mjo1NVrOG-0Ckw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMTo0Mjo1NVrOG-0Ckw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxNzUyMw==", "bodyText": "This looks quite similar to the one above no? Can we get rid of it?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r468517523", "createdAt": "2020-08-11T11:42:55Z", "author": {"login": "fxprunayre"}, "path": "schemas/dublin-core/pom.xml", "diffHunk": "@@ -42,6 +45,44 @@\n           </execution>\n         </executions>\n       </plugin>\n+\n+      <!-- package up plugin folder as a zip -->\n+      <plugin>\n+        <artifactId>maven-assembly-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <id>plugin-assembly</id>\n+            <phase>package</phase>\n+            <goals><goal>single</goal></goals>\n+            <inherited>false</inherited>\n+            <configuration>\n+             <appendAssemblyId>false</appendAssemblyId>\n+             <descriptors>\n+              <descriptor>src/assembly/schema-plugin.xml</descriptor>\n+             </descriptors>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+\n+      <plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11382c909b61dd84f3c511467ac36464ae3babd9"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MDIzOTY4", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#pullrequestreview-465023968", "createdAt": "2020-08-11T12:40:06Z", "commit": {"oid": "11382c909b61dd84f3c511467ac36464ae3babd9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjo0MDowN1rOG-16ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjo0MDowN1rOG-16ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODIzNA==", "bodyText": "@jodygarnett, questions you may have hints on.\n\nwhen a file is removed from a plugin, it is not removed from the data dir. I tried overWrite true without success. BTW overwrite helps when a file is removed from the datadir (which should not happen often) but when switching from one branch to another, you may end up with the wrong version? Maybe there is a clean first option ?\nWe used to be able to do mvn process-resources to update the plugin in the datadir - how do you do know? We have to build the plugin first and then process-resource for unpack or do you have a one step command?\n\nThanks", "url": "https://github.com/geonetwork/core-geonetwork/pull/4701#discussion_r468548234", "createdAt": "2020-08-11T12:40:07Z", "author": {"login": "fxprunayre"}, "path": "web/pom.xml", "diffHunk": "@@ -922,10 +891,146 @@\n     </plugins>\n   </build>\n \n-  <!-- Define profiles for running configuration using -Denv=profile.id parameter\n-    Profiles configuration is defined in src/main/filters.\n-    -->\n   <profiles>\n+\n+    <!-- Unpack schema resources from maven artifacts -->\n+    <profile>\n+      <id>schemas-unpack</id>\n+      <activation>\n+        <property><name>schemasCopy</name><value>!true</value></property>\n+      </activation>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-dependency-plugin</artifactId>\n+            <executions>\n+              <execution>\n+                <id>unpack-schemas</id>\n+                <phase>process-resources</phase>\n+                <goals><goal>unpack</goal></goals>\n+                <configuration>\n+                  <encoding>UTF-8</encoding>\n+                  <artifactItems>\n+                    <!-- unpack built-in schema plugins into schema-plugins directory -->\n+                    <artifactItem>\n+                      <groupId>org.geonetwork-opensource.schemas</groupId>\n+                      <artifactId>schema-iso19139</artifactId>\n+                      <type>zip</type>\n+                      <overWrite>false</overWrite>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11382c909b61dd84f3c511467ac36464ae3babd9"}, "originalPosition": 158}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1646, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}