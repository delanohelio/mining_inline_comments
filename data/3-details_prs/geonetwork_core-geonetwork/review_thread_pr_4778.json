{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODY3NzY1", "number": 4778, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDoxMjo0N1rOEGgEbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDoxMjo0N1rOEGgEbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjUyMzM1OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/fao/geonet/api/records/formatters/ImageReplacedElementFactory.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMDoxMjo0N1rOGlVsaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzozNToxNFrOHZtdpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNTkzMQ==", "bodyText": "Was normalizedUrl just added for the logs?\nShould we be using normalizedUrl.openStream() here?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4778#discussion_r441805931", "createdAt": "2020-06-17T20:12:47Z", "author": {"login": "ianwallen"}, "path": "services/src/main/java/org/fao/geonet/api/records/formatters/ImageReplacedElementFactory.java", "diffHunk": "@@ -237,7 +240,9 @@ public UrlImageLoader(String url) {\n \n         @Override\n         public Image loadImage() throws Exception {\n-            Log.error(Geonet.GEONETWORK, \"URL -> \" + url);\n+            URI normalizedUrl = new URI(url).normalize();\n+            Log.debug(Geonet.GEONETWORK, String.format(\"URL -> %s, normalized URL -> %s\",\n+                url, normalizedUrl.toString()));\n \n             try (InputStream input = new URL(url).openStream()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4728269b1d1272e97b3fb1e795e5f7768766aaae"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk0OTkxOQ==", "bodyText": "@pmauduit can you check this and see if @ianwallen proposal is correct for your fix? Thanks\nI suppose you get this in geOrchestra - did you report here the complete fix?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4778#discussion_r495949919", "createdAt": "2020-09-28T13:44:17Z", "author": {"login": "fxprunayre"}, "path": "services/src/main/java/org/fao/geonet/api/records/formatters/ImageReplacedElementFactory.java", "diffHunk": "@@ -237,7 +240,9 @@ public UrlImageLoader(String url) {\n \n         @Override\n         public Image loadImage() throws Exception {\n-            Log.error(Geonet.GEONETWORK, \"URL -> \" + url);\n+            URI normalizedUrl = new URI(url).normalize();\n+            Log.debug(Geonet.GEONETWORK, String.format(\"URL -> %s, normalized URL -> %s\",\n+                url, normalizedUrl.toString()));\n \n             try (InputStream input = new URL(url).openStream()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNTkzMQ=="}, "originalCommit": {"oid": "4728269b1d1272e97b3fb1e795e5f7768766aaae"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk2MjYyMw==", "bodyText": "Checking what i did in the georchestra fork, you are correct, I don't know what I missed here, because I generally create a branch & cherry-pick my commits when I want to backport it, but I might have had a conflict solved in a wrong way ... see georchestra/geonetwork@0352d0f sorry for this", "url": "https://github.com/geonetwork/core-geonetwork/pull/4778#discussion_r495962623", "createdAt": "2020-09-28T14:01:22Z", "author": {"login": "pmauduit"}, "path": "services/src/main/java/org/fao/geonet/api/records/formatters/ImageReplacedElementFactory.java", "diffHunk": "@@ -237,7 +240,9 @@ public UrlImageLoader(String url) {\n \n         @Override\n         public Image loadImage() throws Exception {\n-            Log.error(Geonet.GEONETWORK, \"URL -> \" + url);\n+            URI normalizedUrl = new URI(url).normalize();\n+            Log.debug(Geonet.GEONETWORK, String.format(\"URL -> %s, normalized URL -> %s\",\n+                url, normalizedUrl.toString()));\n \n             try (InputStream input = new URL(url).openStream()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNTkzMQ=="}, "originalCommit": {"oid": "4728269b1d1272e97b3fb1e795e5f7768766aaae"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQzODUxNw==", "bodyText": "@pmauduit I tested the change using the code from georchestra/geonetwork@0352d0f, but apart of the url normalisation, what looks good, I don't see any difference between the PDF created without or with the url normalised.\nCould be this caused by any http proxy or firewall configuration?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4778#discussion_r496438517", "createdAt": "2020-09-29T06:08:12Z", "author": {"login": "josegar74"}, "path": "services/src/main/java/org/fao/geonet/api/records/formatters/ImageReplacedElementFactory.java", "diffHunk": "@@ -237,7 +240,9 @@ public UrlImageLoader(String url) {\n \n         @Override\n         public Image loadImage() throws Exception {\n-            Log.error(Geonet.GEONETWORK, \"URL -> \" + url);\n+            URI normalizedUrl = new URI(url).normalize();\n+            Log.debug(Geonet.GEONETWORK, String.format(\"URL -> %s, normalized URL -> %s\",\n+                url, normalizedUrl.toString()));\n \n             try (InputStream input = new URL(url).openStream()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNTkzMQ=="}, "originalCommit": {"oid": "4728269b1d1272e97b3fb1e795e5f7768766aaae"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU0ODc5MQ==", "bodyText": "No, this is probably because the spring / spring security version in GeoNetwork is older than the one that we use in geOrchestra: If we ask for a non-normalized URL, it won't get through the geOrchestra proxy (based on spring / spring security, but in a newer version than the one used in geonetwork currently), because non-normalized urls will be rejected.\nIt probably still works in a vanilla GeoNetwork, but will fail after the next spring / spring security upgrade (because of new filters in the spring chain that disallow non-normalized urls). That is what I intended to explain in the PR message.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4778#discussion_r496548791", "createdAt": "2020-09-29T08:51:28Z", "author": {"login": "pmauduit"}, "path": "services/src/main/java/org/fao/geonet/api/records/formatters/ImageReplacedElementFactory.java", "diffHunk": "@@ -237,7 +240,9 @@ public UrlImageLoader(String url) {\n \n         @Override\n         public Image loadImage() throws Exception {\n-            Log.error(Geonet.GEONETWORK, \"URL -> \" + url);\n+            URI normalizedUrl = new URI(url).normalize();\n+            Log.debug(Geonet.GEONETWORK, String.format(\"URL -> %s, normalized URL -> %s\",\n+                url, normalizedUrl.toString()));\n \n             try (InputStream input = new URL(url).openStream()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNTkzMQ=="}, "originalCommit": {"oid": "4728269b1d1272e97b3fb1e795e5f7768766aaae"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY3Mzc5Ng==", "bodyText": "Thanks @pmauduit  for the clarification. If you can update the PR with the correct code, I'll merge it.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4778#discussion_r496673796", "createdAt": "2020-09-29T12:25:49Z", "author": {"login": "josegar74"}, "path": "services/src/main/java/org/fao/geonet/api/records/formatters/ImageReplacedElementFactory.java", "diffHunk": "@@ -237,7 +240,9 @@ public UrlImageLoader(String url) {\n \n         @Override\n         public Image loadImage() throws Exception {\n-            Log.error(Geonet.GEONETWORK, \"URL -> \" + url);\n+            URI normalizedUrl = new URI(url).normalize();\n+            Log.debug(Geonet.GEONETWORK, String.format(\"URL -> %s, normalized URL -> %s\",\n+                url, normalizedUrl.toString()));\n \n             try (InputStream input = new URL(url).openStream()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNTkzMQ=="}, "originalCommit": {"oid": "4728269b1d1272e97b3fb1e795e5f7768766aaae"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY5NTQzNg==", "bodyText": "sure, sorry for the mistake in the first place, thanks @ianwallen for having caught it", "url": "https://github.com/geonetwork/core-geonetwork/pull/4778#discussion_r496695436", "createdAt": "2020-09-29T12:59:05Z", "author": {"login": "pmauduit"}, "path": "services/src/main/java/org/fao/geonet/api/records/formatters/ImageReplacedElementFactory.java", "diffHunk": "@@ -237,7 +240,9 @@ public UrlImageLoader(String url) {\n \n         @Override\n         public Image loadImage() throws Exception {\n-            Log.error(Geonet.GEONETWORK, \"URL -> \" + url);\n+            URI normalizedUrl = new URI(url).normalize();\n+            Log.debug(Geonet.GEONETWORK, String.format(\"URL -> %s, normalized URL -> %s\",\n+                url, normalizedUrl.toString()));\n \n             try (InputStream input = new URL(url).openStream()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNTkzMQ=="}, "originalCommit": {"oid": "4728269b1d1272e97b3fb1e795e5f7768766aaae"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcyMTMxOA==", "bodyText": "Ok, updated & rebased onto master", "url": "https://github.com/geonetwork/core-geonetwork/pull/4778#discussion_r496721318", "createdAt": "2020-09-29T13:35:14Z", "author": {"login": "pmauduit"}, "path": "services/src/main/java/org/fao/geonet/api/records/formatters/ImageReplacedElementFactory.java", "diffHunk": "@@ -237,7 +240,9 @@ public UrlImageLoader(String url) {\n \n         @Override\n         public Image loadImage() throws Exception {\n-            Log.error(Geonet.GEONETWORK, \"URL -> \" + url);\n+            URI normalizedUrl = new URI(url).normalize();\n+            Log.debug(Geonet.GEONETWORK, String.format(\"URL -> %s, normalized URL -> %s\",\n+                url, normalizedUrl.toString()));\n \n             try (InputStream input = new URL(url).openStream()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTgwNTkzMQ=="}, "originalCommit": {"oid": "4728269b1d1272e97b3fb1e795e5f7768766aaae"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4119, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}