{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2ODI3OTg2", "number": 4838, "title": "Improve error message when uploading a mef zip file ", "bodyText": "When loading MEF file containing lots of records. The system could generate an error similar to the following.\nFailed to import MEF file 'export-full-1593552282553.zip'. Check error for details.\niso19139 is not permitted in the database as a non-harvested metadata. Apply a import stylesheet to convert file to allowed schemas\n\nThis is difficult to identify the file containing the error within the mef zip file.\nThis change will modify the error so that we get an error similar to the following.\nFailed to import MEF file 'export-full-1593552282553.zip'. Check error for details.\nFailed to import metadata with uuid '6522e8b8-efbc-4030-add5-4838238bb34d'. iso19139 is not permitted in the database as a non-harvested metadata. Apply a import stylesheet to convert file to allowed schemas\n\nNote: It identifies the UUID from the MEF parsing and not the UUID that it attempted to insert into the database.  So if the option to generate new UUID is used during the import we are not presented with random UUID's.", "createdAt": "2020-07-09T12:27:36Z", "url": "https://github.com/geonetwork/core-geonetwork/pull/4838", "merged": true, "mergeCommit": {"oid": "c6be00b5947d39a986b1118c2d83655c30e0152a"}, "closed": true, "closedAt": "2020-08-07T12:36:06Z", "author": {"login": "ianwallen"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczOE3GAH2gAyNDQ2ODI3OTg2Ojk0ODdmNTdiZjkwMGMxYTNkYzI3NGMwZmY4YTllZjBjODVkMzMyNDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1hVORgFqTQ0OTk4NjM3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9487f57bf900c1a3dc274c0ff8a9ef0c85d33248", "author": {"user": {"login": "ianwallen", "name": "Ian"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/9487f57bf900c1a3dc274c0ff8a9ef0c85d33248", "committedDate": "2020-07-09T12:20:12Z", "message": "Improve error message when uploading a mef zip file containing lots of records. Identify the uuid of the record that failed to load."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5OTg2Mzc1", "url": "https://github.com/geonetwork/core-geonetwork/pull/4838#pullrequestreview-449986375", "createdAt": "2020-07-16T15:54:01Z", "commit": {"oid": "9487f57bf900c1a3dc274c0ff8a9ef0c85d33248"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo1NDowMVrOGyxeKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo1NDowMVrOGyxeKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5MjUyMA==", "bodyText": "This is a pretty generic \"Exception\"? is there something specific you can catch?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4838#discussion_r455892520", "createdAt": "2020-07-16T15:54:01Z", "author": {"login": "jodygarnett"}, "path": "core/src/main/java/org/fao/geonet/kernel/mef/Importer.java", "diffHunk": "@@ -397,10 +397,14 @@ public void handleInfo(Element info, int index) throws Exception {\n                 }\n \n \n-                importRecord(uuid, uuidAction, md, schema, index,\n-                    source, sourceName, sourceTranslations,\n-                    context, metadataIdMap, createDate,\n-                    changeDate, groupId, isTemplate);\n+                try {\n+                    importRecord(uuid, uuidAction, md, schema, index,\n+                       source, sourceName, sourceTranslations,\n+                       context, metadataIdMap, createDate,\n+                       changeDate, groupId, isTemplate);\n+                } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9487f57bf900c1a3dc274c0ff8a9ef0c85d33248"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1601, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}