{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMzIxMDM2", "number": 4488, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxNjozNFrODrO7Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMzo0MTo1NVrODytqqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjU5ODU5OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxNjozNFrOF7dJ9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoyNToxNVrOGGvqZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4Nzk4OQ==", "bodyText": "Note 23-RC is out now.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4488#discussion_r397887989", "createdAt": "2020-03-25T14:16:34Z", "author": {"login": "jodygarnett"}, "path": "pom.xml", "diffHunk": "@@ -1432,8 +1443,8 @@\n \n     <!-- NOTE: When updating GeoTools, check which version\n     of Postgres is used and update pg.version if needed. -->\n-    <geotools.version>16.0</geotools.version>\n-    <pg.version>9.4.1211</pg.version>\n+    <geotools.version>22.3</geotools.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb4ab8c300110815d5952ced12aa1274835534f"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NzEwOQ==", "bodyText": "23.0 will be out this week.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4488#discussion_r409057109", "createdAt": "2020-04-15T18:44:43Z", "author": {"login": "jodygarnett"}, "path": "pom.xml", "diffHunk": "@@ -1432,8 +1443,8 @@\n \n     <!-- NOTE: When updating GeoTools, check which version\n     of Postgres is used and update pg.version if needed. -->\n-    <geotools.version>16.0</geotools.version>\n-    <pg.version>9.4.1211</pg.version>\n+    <geotools.version>22.3</geotools.version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4Nzk4OQ=="}, "originalCommit": {"oid": "aeb4ab8c300110815d5952ced12aa1274835534f"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyNTU0Mw==", "bodyText": "Updated to 23.0 on new GeoSolution repository", "url": "https://github.com/geonetwork/core-geonetwork/pull/4488#discussion_r409725543", "createdAt": "2020-04-16T17:25:15Z", "author": {"login": "jusabatier"}, "path": "pom.xml", "diffHunk": "@@ -1432,8 +1443,8 @@\n \n     <!-- NOTE: When updating GeoTools, check which version\n     of Postgres is used and update pg.version if needed. -->\n-    <geotools.version>16.0</geotools.version>\n-    <pg.version>9.4.1211</pg.version>\n+    <geotools.version>22.3</geotools.version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4Nzk4OQ=="}, "originalCommit": {"oid": "aeb4ab8c300110815d5952ced12aa1274835534f"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjYxMjg2OnYy", "diffSide": "RIGHT", "path": "workers/wfsfeature-harvester/src/main/java/org/fao/geonet/harvester/wfsfeatures/worker/EsWFSFeatureIndexer.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxOTozMlrOF7dS0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoyNTozM1rOGGvrCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5MDI1Nw==", "bodyText": "I like this approach, very safe to retroject to something you know (CRS:84) just based on the returned features.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4488#discussion_r397890257", "createdAt": "2020-03-25T14:19:32Z", "author": {"login": "jodygarnett"}, "path": "workers/wfsfeature-harvester/src/main/java/org/fao/geonet/harvester/wfsfeatures/worker/EsWFSFeatureIndexer.java", "diffHunk": "@@ -260,7 +256,10 @@ public void indexFeatures(Exchange exchange) throws Exception {\n             BulkResutHandler brh = new AsyncBulkResutHandler(phaser, typeName, url, nbOfFeatures, report);\n \n             long begin = System.currentTimeMillis();\n-            FeatureIterator<SimpleFeature> features = wfs.getFeatureSource(typeName).getFeatures(query).features();\n+\n+            ReprojectingFeatureCollection rfc = new ReprojectingFeatureCollection(wfs.getFeatureSource(typeName).getFeatures(query), CRS.decode(\"urn:ogc:def:crs:OGC:1.3:CRS84\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb4ab8c300110815d5952ced12aa1274835534f"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2MDM1Ng==", "bodyText": "I do not think query is adding value above, it just has query.setCoordinateSystem( ... ) which is then going to be managed locally by ReprojectingFeatureCollection.\nConsider simplification to:\nSimpleFeatureCollection features = was.getFeatureSource(typeName().getFeatures();\nReprojectingFeatureCollection rfc = new ReprojectingFeatureCollection( features, CRS.decode(\"urn:ogc:def:crs:OGC:1.3:CRS84\"));", "url": "https://github.com/geonetwork/core-geonetwork/pull/4488#discussion_r409060356", "createdAt": "2020-04-15T18:50:17Z", "author": {"login": "jodygarnett"}, "path": "workers/wfsfeature-harvester/src/main/java/org/fao/geonet/harvester/wfsfeatures/worker/EsWFSFeatureIndexer.java", "diffHunk": "@@ -260,7 +256,10 @@ public void indexFeatures(Exchange exchange) throws Exception {\n             BulkResutHandler brh = new AsyncBulkResutHandler(phaser, typeName, url, nbOfFeatures, report);\n \n             long begin = System.currentTimeMillis();\n-            FeatureIterator<SimpleFeature> features = wfs.getFeatureSource(typeName).getFeatures(query).features();\n+\n+            ReprojectingFeatureCollection rfc = new ReprojectingFeatureCollection(wfs.getFeatureSource(typeName).getFeatures(query), CRS.decode(\"urn:ogc:def:crs:OGC:1.3:CRS84\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5MDI1Nw=="}, "originalCommit": {"oid": "aeb4ab8c300110815d5952ced12aa1274835534f"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA3OTMzMA==", "bodyText": "So if we not more use the query object, should I also remove its declaration  ?\nLine 248 -> 250", "url": "https://github.com/geonetwork/core-geonetwork/pull/4488#discussion_r409079330", "createdAt": "2020-04-15T19:23:03Z", "author": {"login": "jusabatier"}, "path": "workers/wfsfeature-harvester/src/main/java/org/fao/geonet/harvester/wfsfeatures/worker/EsWFSFeatureIndexer.java", "diffHunk": "@@ -260,7 +256,10 @@ public void indexFeatures(Exchange exchange) throws Exception {\n             BulkResutHandler brh = new AsyncBulkResutHandler(phaser, typeName, url, nbOfFeatures, report);\n \n             long begin = System.currentTimeMillis();\n-            FeatureIterator<SimpleFeature> features = wfs.getFeatureSource(typeName).getFeatures(query).features();\n+\n+            ReprojectingFeatureCollection rfc = new ReprojectingFeatureCollection(wfs.getFeatureSource(typeName).getFeatures(query), CRS.decode(\"urn:ogc:def:crs:OGC:1.3:CRS84\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5MDI1Nw=="}, "originalCommit": {"oid": "aeb4ab8c300110815d5952ced12aa1274835534f"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYzMjIwOQ==", "bodyText": "Yes good catch!", "url": "https://github.com/geonetwork/core-geonetwork/pull/4488#discussion_r409632209", "createdAt": "2020-04-16T15:06:56Z", "author": {"login": "jodygarnett"}, "path": "workers/wfsfeature-harvester/src/main/java/org/fao/geonet/harvester/wfsfeatures/worker/EsWFSFeatureIndexer.java", "diffHunk": "@@ -260,7 +256,10 @@ public void indexFeatures(Exchange exchange) throws Exception {\n             BulkResutHandler brh = new AsyncBulkResutHandler(phaser, typeName, url, nbOfFeatures, report);\n \n             long begin = System.currentTimeMillis();\n-            FeatureIterator<SimpleFeature> features = wfs.getFeatureSource(typeName).getFeatures(query).features();\n+\n+            ReprojectingFeatureCollection rfc = new ReprojectingFeatureCollection(wfs.getFeatureSource(typeName).getFeatures(query), CRS.decode(\"urn:ogc:def:crs:OGC:1.3:CRS84\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5MDI1Nw=="}, "originalCommit": {"oid": "aeb4ab8c300110815d5952ced12aa1274835534f"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyNTcwNw==", "bodyText": "Done", "url": "https://github.com/geonetwork/core-geonetwork/pull/4488#discussion_r409725707", "createdAt": "2020-04-16T17:25:33Z", "author": {"login": "jusabatier"}, "path": "workers/wfsfeature-harvester/src/main/java/org/fao/geonet/harvester/wfsfeatures/worker/EsWFSFeatureIndexer.java", "diffHunk": "@@ -260,7 +256,10 @@ public void indexFeatures(Exchange exchange) throws Exception {\n             BulkResutHandler brh = new AsyncBulkResutHandler(phaser, typeName, url, nbOfFeatures, report);\n \n             long begin = System.currentTimeMillis();\n-            FeatureIterator<SimpleFeature> features = wfs.getFeatureSource(typeName).getFeatures(query).features();\n+\n+            ReprojectingFeatureCollection rfc = new ReprojectingFeatureCollection(wfs.getFeatureSource(typeName).getFeatures(query), CRS.decode(\"urn:ogc:def:crs:OGC:1.3:CRS84\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg5MDI1Nw=="}, "originalCommit": {"oid": "aeb4ab8c300110815d5952ced12aa1274835534f"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTY1NDYzOnYy", "diffSide": "RIGHT", "path": "workers/wfsfeature-harvester/src/main/java/org/fao/geonet/harvester/wfsfeatures/worker/EsWFSFeatureIndexer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo1MDo0OVrOGGHFJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzoyNTo1MlrOGGvr3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2MDY0NA==", "bodyText": "Use try/finally block to ensure FeatureIterator is closed.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4488#discussion_r409060644", "createdAt": "2020-04-15T18:50:49Z", "author": {"login": "jodygarnett"}, "path": "workers/wfsfeature-harvester/src/main/java/org/fao/geonet/harvester/wfsfeatures/worker/EsWFSFeatureIndexer.java", "diffHunk": "@@ -260,7 +256,10 @@ public void indexFeatures(Exchange exchange) throws Exception {\n             BulkResutHandler brh = new AsyncBulkResutHandler(phaser, typeName, url, nbOfFeatures, report);\n \n             long begin = System.currentTimeMillis();\n-            FeatureIterator<SimpleFeature> features = wfs.getFeatureSource(typeName).getFeatures(query).features();\n+\n+            ReprojectingFeatureCollection rfc = new ReprojectingFeatureCollection(wfs.getFeatureSource(typeName).getFeatures(query), CRS.decode(\"urn:ogc:def:crs:OGC:1.3:CRS84\"));\n+\n+            FeatureIterator<SimpleFeature> features = rfc.features();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeb4ab8c300110815d5952ced12aa1274835534f"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcyNTkxOQ==", "bodyText": "Done", "url": "https://github.com/geonetwork/core-geonetwork/pull/4488#discussion_r409725919", "createdAt": "2020-04-16T17:25:52Z", "author": {"login": "jusabatier"}, "path": "workers/wfsfeature-harvester/src/main/java/org/fao/geonet/harvester/wfsfeatures/worker/EsWFSFeatureIndexer.java", "diffHunk": "@@ -260,7 +256,10 @@ public void indexFeatures(Exchange exchange) throws Exception {\n             BulkResutHandler brh = new AsyncBulkResutHandler(phaser, typeName, url, nbOfFeatures, report);\n \n             long begin = System.currentTimeMillis();\n-            FeatureIterator<SimpleFeature> features = wfs.getFeatureSource(typeName).getFeatures(query).features();\n+\n+            ReprojectingFeatureCollection rfc = new ReprojectingFeatureCollection(wfs.getFeatureSource(typeName).getFeatures(query), CRS.decode(\"urn:ogc:def:crs:OGC:1.3:CRS84\"));\n+\n+            FeatureIterator<SimpleFeature> features = rfc.features();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2MDY0NA=="}, "originalCommit": {"oid": "aeb4ab8c300110815d5952ced12aa1274835534f"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NTAzNTkyOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMzo0MTo1NVrOGG69Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMzo0MTo1NVrOGG69Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTkxMDUzMA==", "bodyText": "We should build once more when GeoTools is officially anounced, we are currently having a build issue due to the new osgeo repo ... performing faster and allowing multi-threaded builds to trip on themselves. The Maven local repository is not thread safe apparently ...", "url": "https://github.com/geonetwork/core-geonetwork/pull/4488#discussion_r409910530", "createdAt": "2020-04-16T23:41:55Z", "author": {"login": "jodygarnett"}, "path": "pom.xml", "diffHunk": "@@ -1443,7 +1446,7 @@\n \n     <!-- NOTE: When updating GeoTools, check which version\n     of Postgres is used and update pg.version if needed. -->\n-    <geotools.version>22.3</geotools.version>\n+    <geotools.version>23.0</geotools.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1aa9213f772c1ee4e1d0155001a2b240e26b88"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4200, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}