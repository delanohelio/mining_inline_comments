{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNzA3MjY4", "number": 4432, "title": "Address glitch with duplicate or missing logfiles", "bodyText": "See ticket: #3832", "createdAt": "2020-02-08T11:44:22Z", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432", "merged": true, "mergeCommit": {"oid": "50307396f572e73bc128dca50253c0530beb85f4"}, "closed": true, "closedAt": "2020-02-11T12:31:11Z", "author": {"login": "jodygarnett"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcB9tSggH2gAyMzcyNzA3MjY4OjdhMmZmNDhkMjlhN2NiN2FmYjJlY2U1ODBiODVkYzAzYjFkYjQ1MDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDQ1jlAH2gAyMzcyNzA3MjY4OmJjNjI4NTFlNDAxZGVmYWVkNjY4NWQ5YTdhNWY2N2YzMThhZGI3NWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7a2ff48d29a7cb7afb2ece580b85dc03b1db4505", "author": {"user": {"login": "pvgenuchten", "name": "paul van genuchten"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/7a2ff48d29a7cb7afb2ece580b85dc03b1db4505", "committedDate": "2020-02-07T11:33:41Z", "message": "in some scenario service returns array of log files, take first"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe81c44777d1166eb8f944c9a832fc0f1230250e", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/fe81c44777d1166eb8f944c9a832fc0f1230250e", "committedDate": "2020-02-08T11:42:32Z", "message": "check before creating conflicting logfile history\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/ae8d4de56b57c0e93987897f9e689927962a9e03", "committedDate": "2020-02-08T11:42:32Z", "message": "verify logfile is available before reporting to user interface\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTk5MDE5", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#pullrequestreview-355599019", "createdAt": "2020-02-09T11:03:48Z", "commit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxMTowMzo0OVrOFnUeGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxMTowMzo0OVrOFnUeGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc3NDE2OQ==", "bodyText": "This change may no longer be needed, server now checks to ensure only one logfile is returned (and ensures the file exists and is readable also).", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376774169", "createdAt": "2020-02-09T11:03:49Z", "author": {"login": "jodygarnett"}, "path": "web-ui/src/main/resources/catalog/templates/admin/harvest/harvest-settings.html", "diffHunk": "@@ -238,9 +238,9 @@ <h4 data-ng-show=\"h.deleted == 'false'\" class=\"timeline-title\">\n                     {{k}}: {{v}}\n                   </li>\n                 </ul>\n-\n+                <!-- in some scenario logfile returns an array of files, take first -->\n                 <a data-ng-show=\"h.info[0].logfile\"\n-                   href=\"admin.harvester.log?file={{h.info[0].logfile}}\" target=\"_blank\"\n+                   href=\"admin.harvester.log?file={{ encodeURI((h.info[0].logfile | asArray)[0]) }}\" target=\"_blank\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1ODM4NTU4", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#pullrequestreview-355838558", "createdAt": "2020-02-10T10:44:04Z", "commit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDo0NDowNFrOFnha9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDo0NjozNFrOFnhf0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NjM1Nw==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376986357", "createdAt": "2020-02-10T10:44:04Z", "author": {"login": "juanluisrp"}, "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NjQ1OA==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376986458", "createdAt": "2020-02-10T10:44:19Z", "author": {"login": "juanluisrp"}, "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NjU0Mw==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376986543", "createdAt": "2020-02-10T10:44:30Z", "author": {"login": "juanluisrp"}, "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NjY4MQ==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376986681", "createdAt": "2020-02-10T10:44:48Z", "author": {"login": "juanluisrp"}, "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4Njk2Ng==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376986966", "createdAt": "2020-02-10T10:45:24Z", "author": {"login": "juanluisrp"}, "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){\n+                Element logfile = (Element) iter.next();\n+                String path = logfile.getText();\n+                File file = new File( path );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzA2OQ==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987069", "createdAt": "2020-02-10T10:45:35Z", "author": {"login": "juanluisrp"}, "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){\n+                Element logfile = (Element) iter.next();\n+                String path = logfile.getText();\n+                File file = new File( path );\n+                if (file.exists() && file.canRead() ){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzEzMg==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987132", "createdAt": "2020-02-10T10:45:42Z", "author": {"login": "juanluisrp"}, "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){\n+                Element logfile = (Element) iter.next();\n+                String path = logfile.getText();\n+                File file = new File( path );\n+                if (file.exists() && file.canRead() ){\n+                    if(isLogFileFound){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzIwNw==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987207", "createdAt": "2020-02-10T10:45:51Z", "author": {"login": "juanluisrp"}, "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){\n+                Element logfile = (Element) iter.next();\n+                String path = logfile.getText();\n+                File file = new File( path );\n+                if (file.exists() && file.canRead() ){\n+                    if(isLogFileFound){\n+                        // we already have one logfile\n+                        Log.warning(Constants.DOMAIN_LOG_MODULE, \"Ignoring add unexpected logfile: `\" + path +\"`\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzI5MA==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987290", "createdAt": "2020-02-10T10:45:59Z", "author": {"login": "juanluisrp"}, "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){\n+                Element logfile = (Element) iter.next();\n+                String path = logfile.getText();\n+                File file = new File( path );\n+                if (file.exists() && file.canRead() ){\n+                    if(isLogFileFound){\n+                        // we already have one logfile\n+                        Log.warning(Constants.DOMAIN_LOG_MODULE, \"Ignoring add unexpected logfile: `\" + path +\"`\");\n+                        iter.remove();\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzM4MA==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987380", "createdAt": "2020-02-10T10:46:09Z", "author": {"login": "juanluisrp"}, "path": "domain/src/main/java/org/fao/geonet/domain/HarvestHistory.java", "diffHunk": "@@ -271,7 +274,53 @@ public Element getInfoAsXml() throws IOException, JDOMException {\n         if (info == null) {\n             return null;\n         }\n-        return Xml.loadString(info, false);\n+        Element infoAsXml = Xml.loadString(info, false);\n+        infoAsXml = checkInfoXml( infoAsXml );\n+        return infoAsXml;\n+    }\n+\n+    /**\n+     * Check infoAsXml definition content.\n+     * <p>\n+     * Content checks:\n+     * <ul>\n+     *     <li>Check if multiple logfile definitions are present</li>\n+     *     <li>Check if logfile path file exists /li>\n+     * </ul>\n+     *\n+     * </p>\n+     * @param infoAsXml Harvest info xml definition\n+     * @return Harvest info xml definition, with any content checks applied\n+     */\n+    private Element checkInfoXml(Element infoAsXml) {\n+        List<Element> logfileElements = infoAsXml.getChildren(\"logfile\");\n+        // check logfiles present to ensure path exists\n+        if( logfileElements.size() > 0 ) {\n+            if( logfileElements.size() != 1 ){\n+                 Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history unexpectedly lists multiple logfiles: \" + logfileElements.size() );\n+            }\n+            boolean isLogFileFound = false;\n+            for(Iterator iter = logfileElements.iterator(); iter.hasNext(); ){\n+                Element logfile = (Element) iter.next();\n+                String path = logfile.getText();\n+                File file = new File( path );\n+                if (file.exists() && file.canRead() ){\n+                    if(isLogFileFound){\n+                        // we already have one logfile\n+                        Log.warning(Constants.DOMAIN_LOG_MODULE, \"Ignoring add unexpected logfile: `\" + path +\"`\");\n+                        iter.remove();\n+                    }\n+                    else {\n+                        isLogFileFound = true;\n+                    }\n+                }\n+                else {\n+                    Log.warning(Constants.DOMAIN_LOG_MODULE, \"Harvest history logfile `\"+path+\"` ignored, no longer available\" );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzQ0Nw==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987447", "createdAt": "2020-02-10T10:46:17Z", "author": {"login": "juanluisrp"}, "path": "harvesters/src/main/java/org/fao/geonet/kernel/harvest/harvester/AbstractHarvester.java", "diffHunk": "@@ -712,8 +712,15 @@ private void logHarvest(String logfile, Logger logger, String nodeName, String l\n             if (error != null) {\n                 result = JeevesException.toElement(error);\n             }\n+            Element priorLogfile_ = result.getChild(\"logfile\");\n+            if( priorLogfile_ != null ){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzUwMg==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987502", "createdAt": "2020-02-10T10:46:24Z", "author": {"login": "juanluisrp"}, "path": "harvesters/src/main/java/org/fao/geonet/kernel/harvest/harvester/AbstractHarvester.java", "diffHunk": "@@ -712,8 +712,15 @@ private void logHarvest(String logfile, Logger logger, String nodeName, String l\n             if (error != null) {\n                 result = JeevesException.toElement(error);\n             }\n+            Element priorLogfile_ = result.getChild(\"logfile\");\n+            if( priorLogfile_ != null ){\n+                // removing prior logfile\n+                logger.warning(\"Detected duplicate logfile: \"+priorLogfile_.getText());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk4NzYwMQ==", "bodyText": "Follow project coding conventions", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#discussion_r376987601", "createdAt": "2020-02-10T10:46:34Z", "author": {"login": "juanluisrp"}, "path": "harvesters/src/main/java/org/fao/geonet/kernel/harvest/harvester/AbstractHarvester.java", "diffHunk": "@@ -712,8 +712,15 @@ private void logHarvest(String logfile, Logger logger, String nodeName, String l\n             if (error != null) {\n                 result = JeevesException.toElement(error);\n             }\n+            Element priorLogfile_ = result.getChild(\"logfile\");\n+            if( priorLogfile_ != null ){\n+                // removing prior logfile\n+                logger.warning(\"Detected duplicate logfile: \"+priorLogfile_.getText());\n+                result.getChildren().remove( priorLogfile_ );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae8d4de56b57c0e93987897f9e689927962a9e03"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a62acae2b500f6049f386f41be24dfc0d880868d", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/a62acae2b500f6049f386f41be24dfc0d880868d", "committedDate": "2020-02-10T14:34:02Z", "message": "revise based on feedback, update formatting\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cbd2b4edab45a407f646b051389fcef740ea965", "author": {"user": {"login": "juanluisrp", "name": "Juan Luis Rodr\u00edguez Ponce"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/9cbd2b4edab45a407f646b051389fcef740ea965", "committedDate": "2020-02-10T15:01:59Z", "message": "Format code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MDA4OTE2", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#pullrequestreview-356008916", "createdAt": "2020-02-10T15:05:50Z", "commit": {"oid": "9cbd2b4edab45a407f646b051389fcef740ea965"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MDA5MTIz", "url": "https://github.com/geonetwork/core-geonetwork/pull/4432#pullrequestreview-356009123", "createdAt": "2020-02-10T15:06:05Z", "commit": {"oid": "9cbd2b4edab45a407f646b051389fcef740ea965"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e9c558356abcfae0e7133b151e0eb1ccff16561", "author": {"user": {"login": "jodygarnett", "name": "Jody Garnett"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/4e9c558356abcfae0e7133b151e0eb1ccff16561", "committedDate": "2020-02-10T15:33:10Z", "message": "ignore eclipse .project file\n\nSigned-off-by: Jody Garnett <jody.garnett@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc62851e401defaed6685d9a7a5f67f318adb75c", "author": {"user": {"login": "juanluisrp", "name": "Juan Luis Rodr\u00edguez Ponce"}}, "url": "https://github.com/geonetwork/core-geonetwork/commit/bc62851e401defaed6685d9a7a5f67f318adb75c", "committedDate": "2020-02-11T12:24:50Z", "message": "Make window.encodeURIComponent available as filter\n\nFix an empty string in log file name parameter caused by not finding\n`encodeURI` function in the scope. Created a filter that can be used\nto call `encodeURIComponent` that seems a more suitable function to be\ncalled here."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1696, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}