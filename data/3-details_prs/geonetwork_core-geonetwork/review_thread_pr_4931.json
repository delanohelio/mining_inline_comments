{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MDUzNDU5", "number": 4931, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODoyODowMlrOE5UHsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOToxNTo0MFrOE5Vpaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NTMzOTM2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/fao/geonet/kernel/security/keycloak/KeycloakUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODoyODowMlrOHzsZYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODoyODowMlrOHzsZYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk2NjgxNw==", "bodyText": "Add file header", "url": "https://github.com/geonetwork/core-geonetwork/pull/4931#discussion_r523966817", "createdAt": "2020-11-16T08:28:02Z", "author": {"login": "josegar74"}, "path": "core/src/main/java/org/fao/geonet/kernel/security/keycloak/KeycloakUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.fao.geonet.kernel.security.keycloak;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37eeb661f562dab6a0855d4c8e8ed838bfcf7fd6"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NTM0MjgzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/fao/geonet/kernel/security/keycloak/KeycloakUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODoyODo1OVrOHzsbWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMjo1NTo1NlrOHz9idA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk2NzMyMw==", "bodyText": "Should be used StringUtils.isEmpty or just need to check for null?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4931#discussion_r523967323", "createdAt": "2020-11-16T08:28:59Z", "author": {"login": "josegar74"}, "path": "core/src/main/java/org/fao/geonet/kernel/security/keycloak/KeycloakUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.fao.geonet.kernel.security.keycloak;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.fao.geonet.utils.Log;\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint;\n+\n+import javax.annotation.PostConstruct;\n+\n+public class KeycloakUtil {\n+    public static String signinPath = null;\n+    private static LoginUrlAuthenticationEntryPoint loginUrlAuthenticationEntryPoint;\n+\n+    @Autowired\n+    private LoginUrlAuthenticationEntryPoint loginUrlAuthenticationEntryPoint0;\n+\n+    @PostConstruct\n+    private void init () {\n+        loginUrlAuthenticationEntryPoint = this.loginUrlAuthenticationEntryPoint0;\n+    }\n+\n+    public static String getSigninPath() {\n+        if (signinPath == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37eeb661f562dab6a0855d4c8e8ed838bfcf7fd6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI0NzY2OA==", "bodyText": "It is used for caching.\npublic static String signinPath = null; \nIt checks to see if signinPath still contains the initial value and if so then sets the values based on configuration values from config-security.properties.\nloginForm=/signin?node=@@nodeId@@\nSubsequent calls should just return the value.\nThe intent was to use existing configuration values instead of hardcoding the value to \"/signin\"  But I did noticed that there are some hard coded values of \"/signin\" elsewhere in the code(mostly in Angular) so I'm not sure how easy it would be to change this property anyway", "url": "https://github.com/geonetwork/core-geonetwork/pull/4931#discussion_r524247668", "createdAt": "2020-11-16T12:55:56Z", "author": {"login": "ianwallen"}, "path": "core/src/main/java/org/fao/geonet/kernel/security/keycloak/KeycloakUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.fao.geonet.kernel.security.keycloak;\n+\n+import org.apache.commons.lang.StringUtils;\n+import org.fao.geonet.utils.Log;\n+import org.springframework.beans.BeansException;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint;\n+\n+import javax.annotation.PostConstruct;\n+\n+public class KeycloakUtil {\n+    public static String signinPath = null;\n+    private static LoginUrlAuthenticationEntryPoint loginUrlAuthenticationEntryPoint;\n+\n+    @Autowired\n+    private LoginUrlAuthenticationEntryPoint loginUrlAuthenticationEntryPoint0;\n+\n+    @PostConstruct\n+    private void init () {\n+        loginUrlAuthenticationEntryPoint = this.loginUrlAuthenticationEntryPoint0;\n+    }\n+\n+    public static String getSigninPath() {\n+        if (signinPath == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk2NzMyMw=="}, "originalCommit": {"oid": "37eeb661f562dab6a0855d4c8e8ed838bfcf7fd6"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NTM0NDkzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/fao/geonet/kernel/security/keycloak/keycloakPreAuthActionsLoginFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODoyOTozMVrOHzscjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMjoyNTo1MFrOHz7mjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk2NzYyOQ==", "bodyText": "Add file header", "url": "https://github.com/geonetwork/core-geonetwork/pull/4931#discussion_r523967629", "createdAt": "2020-11-16T08:29:31Z", "author": {"login": "josegar74"}, "path": "core/src/main/java/org/fao/geonet/kernel/security/keycloak/keycloakPreAuthActionsLoginFilter.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.fao.geonet.kernel.security.keycloak;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37eeb661f562dab6a0855d4c8e8ed838bfcf7fd6"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIxNTk0OQ==", "bodyText": "header added", "url": "https://github.com/geonetwork/core-geonetwork/pull/4931#discussion_r524215949", "createdAt": "2020-11-16T12:25:50Z", "author": {"login": "ianwallen"}, "path": "core/src/main/java/org/fao/geonet/kernel/security/keycloak/keycloakPreAuthActionsLoginFilter.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package org.fao.geonet.kernel.security.keycloak;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk2NzYyOQ=="}, "originalCommit": {"oid": "37eeb661f562dab6a0855d4c8e8ed838bfcf7fd6"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NTM3NTE0OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/fao/geonet/kernel/security/keycloak/KeycloakHttpSessionManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODozNzoyM1rOHzst1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMjozMTozNFrOHz7-JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3MjA1Mg==", "bodyText": "Just to confirm this file is really required?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4931#discussion_r523972052", "createdAt": "2020-11-16T08:37:23Z", "author": {"login": "josegar74"}, "path": "core/src/main/java/org/fao/geonet/kernel/security/keycloak/KeycloakHttpSessionManager.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// Changes were taken from org.keycloak/keycloak-adapter-core/11.0.1 as there were bugs in current version\n+// that we prevending the Admin URL client backchannel logout from working.\n+// If upgrading maven dependency then it may be possible that the most recent KeycloakHttpSessionManager can be used", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37eeb661f562dab6a0855d4c8e8ed838bfcf7fd6"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIyMTk4OQ==", "bodyText": "I updated the comments to make it more clear as to why this was required.\nIt is mostly because the WebApplicationContextUtils.getWebApplicationContext(servletContext) returns null and it was causing NPE.  It seems like the the application is not registered as a WebApplicationContext so I had to modify the code to use ApplicationContextHolder.get() and this fixed the issue.\nMaybe in the future if the application is registered correctly as a WebApplicationContext then this file can be removed.\nIs this correction OK - or should there be a fix to register the application correctly as a WebApplicationContext?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4931#discussion_r524221989", "createdAt": "2020-11-16T12:31:34Z", "author": {"login": "ianwallen"}, "path": "core/src/main/java/org/fao/geonet/kernel/security/keycloak/KeycloakHttpSessionManager.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+// Changes were taken from org.keycloak/keycloak-adapter-core/11.0.1 as there were bugs in current version\n+// that we prevending the Admin URL client backchannel logout from working.\n+// If upgrading maven dependency then it may be possible that the most recent KeycloakHttpSessionManager can be used", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3MjA1Mg=="}, "originalCommit": {"oid": "37eeb661f562dab6a0855d4c8e8ed838bfcf7fd6"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NTM4NTg2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/fao/geonet/kernel/security/listener/HttpSessionEventPublisher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwODo0MDoxNlrOHzs0HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMjozNzoyNlrOHz8WbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3MzY2MA==", "bodyText": "Just to check this file is required?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4931#discussion_r523973660", "createdAt": "2020-11-16T08:40:16Z", "author": {"login": "josegar74"}, "path": "core/src/main/java/org/fao/geonet/kernel/security/listener/HttpSessionEventPublisher.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package org.fao.geonet.kernel.security.listener;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.fao.geonet.ApplicationContextHolder;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.security.web.session.HttpSessionCreatedEvent;\n+import org.springframework.security.web.session.HttpSessionDestroyedEvent;\n+import org.springframework.web.context.support.WebApplicationContextUtils;\n+\n+import javax.servlet.ServletContext;\n+import javax.servlet.http.HttpSessionEvent;\n+import javax.servlet.http.HttpSessionListener;\n+\n+/* This is just a copy of the org.springframework.security.web.session.HttpSessionEventPublisher", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37eeb661f562dab6a0855d4c8e8ed838bfcf7fd6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIyODIwNQ==", "bodyText": "I updated the documentation to provide more details as to why this was required. It also references the bug that describes the issue.\nThis is required because our code was based on 4.8.3 which is the version that RedHat SSO 7.3 uses. This is our target software at the moment.  It was noticed that RedHat SSO has released a newer version that now uses the newer drivers.\nOur intention is to upgrade to the newer version of the software in the new year.  At that time I will create a PR to upgrade to newer version of the keycloak adapter and I can will be able to remove this file.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4931#discussion_r524228205", "createdAt": "2020-11-16T12:37:26Z", "author": {"login": "ianwallen"}, "path": "core/src/main/java/org/fao/geonet/kernel/security/listener/HttpSessionEventPublisher.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package org.fao.geonet.kernel.security.listener;\n+\n+import org.apache.commons.logging.Log;\n+import org.apache.commons.logging.LogFactory;\n+import org.fao.geonet.ApplicationContextHolder;\n+import org.springframework.context.ApplicationContext;\n+import org.springframework.security.web.session.HttpSessionCreatedEvent;\n+import org.springframework.security.web.session.HttpSessionDestroyedEvent;\n+import org.springframework.web.context.support.WebApplicationContextUtils;\n+\n+import javax.servlet.ServletContext;\n+import javax.servlet.http.HttpSessionEvent;\n+import javax.servlet.http.HttpSessionListener;\n+\n+/* This is just a copy of the org.springframework.security.web.session.HttpSessionEventPublisher", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzk3MzY2MA=="}, "originalCommit": {"oid": "37eeb661f562dab6a0855d4c8e8ed838bfcf7fd6"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NTU4OTU1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/fao/geonet/kernel/security/SecurityProviderConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQwOToxNTo0MFrOHzu1PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMjo0Mjo0OVrOHz8shw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwNjcxNg==", "bodyText": "Does this configuration affects LDAP or CAS providers?", "url": "https://github.com/geonetwork/core-geonetwork/pull/4931#discussion_r524006716", "createdAt": "2020-11-16T09:15:40Z", "author": {"login": "josegar74"}, "path": "core/src/main/java/org/fao/geonet/kernel/security/SecurityProviderConfiguration.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ *  Copyright (C) 2014 GeoSolutions S.A.S.\n+ *  http://www.geo-solutions.it\n+ *\n+ *  GPLv3 + Classpath exception\n+ *\n+ *  This program is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  This program is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.fao.geonet.kernel.security;\n+\n+import org.fao.geonet.ApplicationContextHolder;\n+import org.fao.geonet.exceptions.BadInputEx;\n+import org.fao.geonet.exceptions.BadParameterEx;\n+\n+import java.util.Map;\n+\n+/**\n+ * Some basic configuration info to be used by all security\n+ *\n+ */\n+public interface SecurityProviderConfiguration {\n+\n+\tpublic enum LoginType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37eeb661f562dab6a0855d4c8e8ed838bfcf7fd6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDIzMzg2Mw==", "bodyText": "It was mostly used for Shibboleth for the SSO parameters.  For all cases it would check for the existence of the bean and if the bean was not found then then it continued processing as it did before.  So unless LDAP or CAS was using Shibboleth configuration options, they should not be affected by these changes.\nOnce this PR is approved then it would probably be a good idea if LDAP or CAS also used this class if there is a need to support common configurations for SSO.", "url": "https://github.com/geonetwork/core-geonetwork/pull/4931#discussion_r524233863", "createdAt": "2020-11-16T12:42:49Z", "author": {"login": "ianwallen"}, "path": "core/src/main/java/org/fao/geonet/kernel/security/SecurityProviderConfiguration.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ *  Copyright (C) 2014 GeoSolutions S.A.S.\n+ *  http://www.geo-solutions.it\n+ *\n+ *  GPLv3 + Classpath exception\n+ *\n+ *  This program is free software: you can redistribute it and/or modify\n+ *  it under the terms of the GNU General Public License as published by\n+ *  the Free Software Foundation, either version 3 of the License, or\n+ *  (at your option) any later version.\n+ *\n+ *  This program is distributed in the hope that it will be useful,\n+ *  but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ *  GNU General Public License for more details.\n+ *\n+ *  You should have received a copy of the GNU General Public License\n+ *  along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+ */\n+\n+package org.fao.geonet.kernel.security;\n+\n+import org.fao.geonet.ApplicationContextHolder;\n+import org.fao.geonet.exceptions.BadInputEx;\n+import org.fao.geonet.exceptions.BadParameterEx;\n+\n+import java.util.Map;\n+\n+/**\n+ * Some basic configuration info to be used by all security\n+ *\n+ */\n+public interface SecurityProviderConfiguration {\n+\n+\tpublic enum LoginType {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDAwNjcxNg=="}, "originalCommit": {"oid": "37eeb661f562dab6a0855d4c8e8ed838bfcf7fd6"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4282, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}