{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNDc1Njcx", "number": 5037, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0OToyMFrOEmg6DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzozMjo0OVrOEmmh1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODIwNDkzOnYy", "diffSide": "RIGHT", "path": "domain/src/main/java/org/fao/geonet/domain/ISODate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0OToyMFrOHWlVgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNTowNjowM1rOHWzMXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MjQzMw==", "bodyText": "Any reason to check the same thing twice?", "url": "https://github.com/geonetwork/core-geonetwork/pull/5037#discussion_r493442433", "createdAt": "2020-09-23T10:49:20Z", "author": {"login": "ianwallen"}, "path": "domain/src/main/java/org/fao/geonet/domain/ISODate.java", "diffHunk": "@@ -430,7 +447,8 @@ public void setDateAndTime(String isoDate) {\n             // JODAISODate. This class converts to UTC format to avoid timezones\n             // issues.\n             String afterT = timeAndDate.substring(indexOfT + 1);\n-            boolean timeZoneInfo = afterT.contains(\"+\") || afterT.contains(\"-\");\n+            boolean timeZoneInfo = afterT.contains(\"+\") || afterT.contains(\"-\")\n+                || afterT.endsWith(\"Z\") || afterT.endsWith(\"Z\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d1cc265c65d2ea8a48e53e29cb31cbb7b9b74d6"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzY2OTQ3MQ==", "bodyText": "Sorry one of those was intended to be lowercase.", "url": "https://github.com/geonetwork/core-geonetwork/pull/5037#discussion_r493669471", "createdAt": "2020-09-23T15:06:03Z", "author": {"login": "jodygarnett"}, "path": "domain/src/main/java/org/fao/geonet/domain/ISODate.java", "diffHunk": "@@ -430,7 +447,8 @@ public void setDateAndTime(String isoDate) {\n             // JODAISODate. This class converts to UTC format to avoid timezones\n             // issues.\n             String afterT = timeAndDate.substring(indexOfT + 1);\n-            boolean timeZoneInfo = afterT.contains(\"+\") || afterT.contains(\"-\");\n+            boolean timeZoneInfo = afterT.contains(\"+\") || afterT.contains(\"-\")\n+                || afterT.endsWith(\"Z\") || afterT.endsWith(\"Z\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MjQzMw=="}, "originalCommit": {"oid": "0d1cc265c65d2ea8a48e53e29cb31cbb7b9b74d6"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTA5MDM0OnYy", "diffSide": "RIGHT", "path": "domain/src/test/java/org/fao/geonet/domain/ISODateTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzoyNzoxNFrOHWuIog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoyNDoyM1rOHW47fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU4NjU5NA==", "bodyText": "It is incorrect to use PST since it is PDT roughly half of the year.\nGenerally prefer to use the zone name i.e. in \"Pacific Time Zone\" or \"Pacific\"\nSame for EST below.", "url": "https://github.com/geonetwork/core-geonetwork/pull/5037#discussion_r493586594", "createdAt": "2020-09-23T13:27:14Z", "author": {"login": "ianwallen"}, "path": "domain/src/test/java/org/fao/geonet/domain/ISODateTest.java", "diffHunk": "@@ -448,4 +453,34 @@ public void testSub() throws Exception {\n         org.junit.Assert.assertEquals(-60, isoDate2.timeDifferenceInSeconds(isoDate1));\n     }\n \n+\n+    @Test\n+    public void testZ() throws Exception {\n+        ISODate isoDate = new ISODate(\"2019-06-01T00:00Z\");\n+        Instant instant = isoDate.toDate().toInstant().truncatedTo(ChronoUnit.SECONDS);\n+\n+        ZonedDateTime expectedDateTime =\n+            ZonedDateTime.of(\n+                2019, 6, 1, 0, 0, 0, 0, ZoneId.of(\"Z\").normalized());\n+        Instant expected = expectedDateTime.toInstant().truncatedTo(ChronoUnit.SECONDS);\n+        assertEquals( \"Z\", expected, instant );\n+\n+        ISODate pstDate = new ISODate(\"2019-06-01T00:00-07:00\");\n+        instant = pstDate.toDate().toInstant().truncatedTo(ChronoUnit.SECONDS);\n+\n+        ZonedDateTime pstDateTime =\n+            ZonedDateTime.of(\n+                2019, 6, 1, 0, 0, 0, 0, ZoneId.of(\"America/Vancouver\").normalized());\n+        expected = pstDateTime.toInstant().truncatedTo(ChronoUnit.SECONDS);\n+        assertEquals( \"PST\", expected, instant );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d1cc265c65d2ea8a48e53e29cb31cbb7b9b74d6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2MzQ1Mw==", "bodyText": "Thanks, reading the ZoneId docs I am going to use UTC-04:00 as I am more interested in testing differences in timezone than anything else.", "url": "https://github.com/geonetwork/core-geonetwork/pull/5037#discussion_r493763453", "createdAt": "2020-09-23T17:24:23Z", "author": {"login": "jodygarnett"}, "path": "domain/src/test/java/org/fao/geonet/domain/ISODateTest.java", "diffHunk": "@@ -448,4 +453,34 @@ public void testSub() throws Exception {\n         org.junit.Assert.assertEquals(-60, isoDate2.timeDifferenceInSeconds(isoDate1));\n     }\n \n+\n+    @Test\n+    public void testZ() throws Exception {\n+        ISODate isoDate = new ISODate(\"2019-06-01T00:00Z\");\n+        Instant instant = isoDate.toDate().toInstant().truncatedTo(ChronoUnit.SECONDS);\n+\n+        ZonedDateTime expectedDateTime =\n+            ZonedDateTime.of(\n+                2019, 6, 1, 0, 0, 0, 0, ZoneId.of(\"Z\").normalized());\n+        Instant expected = expectedDateTime.toInstant().truncatedTo(ChronoUnit.SECONDS);\n+        assertEquals( \"Z\", expected, instant );\n+\n+        ISODate pstDate = new ISODate(\"2019-06-01T00:00-07:00\");\n+        instant = pstDate.toDate().toInstant().truncatedTo(ChronoUnit.SECONDS);\n+\n+        ZonedDateTime pstDateTime =\n+            ZonedDateTime.of(\n+                2019, 6, 1, 0, 0, 0, 0, ZoneId.of(\"America/Vancouver\").normalized());\n+        expected = pstDateTime.toInstant().truncatedTo(ChronoUnit.SECONDS);\n+        assertEquals( \"PST\", expected, instant );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU4NjU5NA=="}, "originalCommit": {"oid": "0d1cc265c65d2ea8a48e53e29cb31cbb7b9b74d6"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTEwNTQyOnYy", "diffSide": "RIGHT", "path": "domain/src/test/java/org/fao/geonet/domain/ISODateTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzoyOTozNVrOHWuSxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzoyOTozNVrOHWuSxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU4OTE4OA==", "bodyText": "I see that you are using \"-04:00\" in the test and comparing it to \"America/Toronto\"\nI believe this test will fail roughly half the year when it switches to EDT", "url": "https://github.com/geonetwork/core-geonetwork/pull/5037#discussion_r493589188", "createdAt": "2020-09-23T13:29:35Z", "author": {"login": "ianwallen"}, "path": "domain/src/test/java/org/fao/geonet/domain/ISODateTest.java", "diffHunk": "@@ -448,4 +453,34 @@ public void testSub() throws Exception {\n         org.junit.Assert.assertEquals(-60, isoDate2.timeDifferenceInSeconds(isoDate1));\n     }\n \n+\n+    @Test\n+    public void testZ() throws Exception {\n+        ISODate isoDate = new ISODate(\"2019-06-01T00:00Z\");\n+        Instant instant = isoDate.toDate().toInstant().truncatedTo(ChronoUnit.SECONDS);\n+\n+        ZonedDateTime expectedDateTime =\n+            ZonedDateTime.of(\n+                2019, 6, 1, 0, 0, 0, 0, ZoneId.of(\"Z\").normalized());\n+        Instant expected = expectedDateTime.toInstant().truncatedTo(ChronoUnit.SECONDS);\n+        assertEquals( \"Z\", expected, instant );\n+\n+        ISODate pstDate = new ISODate(\"2019-06-01T00:00-07:00\");\n+        instant = pstDate.toDate().toInstant().truncatedTo(ChronoUnit.SECONDS);\n+\n+        ZonedDateTime pstDateTime =\n+            ZonedDateTime.of(\n+                2019, 6, 1, 0, 0, 0, 0, ZoneId.of(\"America/Vancouver\").normalized());\n+        expected = pstDateTime.toInstant().truncatedTo(ChronoUnit.SECONDS);\n+        assertEquals( \"PST\", expected, instant );\n+\n+        ISODate estDate = new ISODate(\"2019-06-01T00:00-04:00\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d1cc265c65d2ea8a48e53e29cb31cbb7b9b74d6"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTEyNTk5OnYy", "diffSide": "RIGHT", "path": "domain/src/test/java/org/fao/geonet/domain/ISODateTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzozMjo0OVrOHWugIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzozMjo0OVrOHWugIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU5MjYwOA==", "bodyText": "I see that you are using \"-07:00\" in the test and comparing it to \"America/Vancouver\"\nI believe this test will fail roughly half the year when it switches to PDT\nI believe you may need to get the current timezone offset for the same zone to do the comparison.", "url": "https://github.com/geonetwork/core-geonetwork/pull/5037#discussion_r493592608", "createdAt": "2020-09-23T13:32:49Z", "author": {"login": "ianwallen"}, "path": "domain/src/test/java/org/fao/geonet/domain/ISODateTest.java", "diffHunk": "@@ -448,4 +453,34 @@ public void testSub() throws Exception {\n         org.junit.Assert.assertEquals(-60, isoDate2.timeDifferenceInSeconds(isoDate1));\n     }\n \n+\n+    @Test\n+    public void testZ() throws Exception {\n+        ISODate isoDate = new ISODate(\"2019-06-01T00:00Z\");\n+        Instant instant = isoDate.toDate().toInstant().truncatedTo(ChronoUnit.SECONDS);\n+\n+        ZonedDateTime expectedDateTime =\n+            ZonedDateTime.of(\n+                2019, 6, 1, 0, 0, 0, 0, ZoneId.of(\"Z\").normalized());\n+        Instant expected = expectedDateTime.toInstant().truncatedTo(ChronoUnit.SECONDS);\n+        assertEquals( \"Z\", expected, instant );\n+\n+        ISODate pstDate = new ISODate(\"2019-06-01T00:00-07:00\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d1cc265c65d2ea8a48e53e29cb31cbb7b9b74d6"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4295, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}