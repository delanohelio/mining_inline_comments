{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxNzUxMDg4", "number": 723, "title": "Complete checks api", "bodyText": "Description\nAdding more properties to GHCheckRun (in progress) and implementing GHCheckSuite (in progress).\nBefore submitting a PR:\nWe love getting PRs, but we hate asking people for the same basic changes every time.\n\n Push your changes to a branch other than master. Create your PR from that branch.\n Add JavaDocs and other comments\n Write tests that run and pass in CI. See CONTRIBUTING.md for details on how to capture snapshot data.\n Run mvn -D enable-ci clean install site locally. This may reformat your code, commit those changes. If this command doesn't succeed, your change will not pass CI.", "createdAt": "2020-02-29T05:12:12Z", "url": "https://github.com/hub4j/github-api/pull/723", "merged": true, "mergeCommit": {"oid": "c22a718d1416d4a971159f8dabffcfef1179ba6b"}, "closed": true, "closedAt": "2020-03-04T07:03:11Z", "author": {"login": "XiongKezhi"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIq9q7gH2gAyMzgxNzUxMDg4OjEwY2M3OWY3MzdiYjdmMDQ5NWEyYmRiNTFlYmJkYjQxMjc5OGFkMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKRa0KAFqTM2ODU0MjU5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "10cc79f737bb7f0495a2bdb51ebbdb412798ad22", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/10cc79f737bb7f0495a2bdb51ebbdb412798ad22", "committedDate": "2020-02-28T07:40:51Z", "message": "add more properties to GHCheckRun"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05e81484f143312dbdc37fbc360573c4fe09c865", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/05e81484f143312dbdc37fbc360573c4fe09c865", "committedDate": "2020-02-28T08:57:19Z", "message": "format code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73179c118b9a3555ec344eac085a8a1a1beeea6a", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/73179c118b9a3555ec344eac085a8a1a1beeea6a", "committedDate": "2020-02-29T05:19:14Z", "message": "Fixed typo in JavaDoc of getApp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2242174515548a2ac50c0bb3f7cb56f09dde2dd6", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/2242174515548a2ac50c0bb3f7cb56f09dde2dd6", "committedDate": "2020-02-29T05:26:59Z", "message": "add Output in GHCheckRun"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e96067e3c85360916c11e2fa9ac1184d2621084a", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/e96067e3c85360916c11e2fa9ac1184d2621084a", "committedDate": "2020-02-29T05:27:02Z", "message": "Merge remote-tracking branch 'origin/complete-checks-api' into complete-checks-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a8f8c345bc4892331172fcacd4ccb87082e9bb7", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/5a8f8c345bc4892331172fcacd4ccb87082e9bb7", "committedDate": "2020-02-29T10:09:25Z", "message": "parse completedAt and startedAt into Date in getters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NzkzMzQw", "url": "https://github.com/hub4j/github-api/pull/723#pullrequestreview-366793340", "createdAt": "2020-02-29T11:31:54Z", "commit": {"oid": "5a8f8c345bc4892331172fcacd4ccb87082e9bb7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMTozMTo1NFrOFwI6iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQxMTozMTo1NFrOFwI6iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjAyMjAyNQ==", "bodyText": "I assume that empty line is not needed.", "url": "https://github.com/hub4j/github-api/pull/723#discussion_r386022025", "createdAt": "2020-02-29T11:31:54Z", "author": {"login": "recena"}, "path": "src/main/java/org/kohsuke/github/GHCheckRun.java", "diffHunk": "@@ -62,6 +88,12 @@ public String getHeadSha() {\n         return headSha;\n     }\n \n+    /**\n+     * Gets the pull requests participated in this check run.\n+     *\n+     * @return Pull requests of this check run\n+     */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a8f8c345bc4892331172fcacd4ccb87082e9bb7"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57f947576e9b114cf60213ee7de1877509383bde", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/57f947576e9b114cf60213ee7de1877509383bde", "committedDate": "2020-02-29T12:15:32Z", "message": "Delete empty line in JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9006af04c8817a3ad6270e381537f1ea06e67ec", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/f9006af04c8817a3ad6270e381537f1ea06e67ec", "committedDate": "2020-02-29T23:39:38Z", "message": "Merge branch 'master' into complete-checks-api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODI2MjI1", "url": "https://github.com/hub4j/github-api/pull/723#pullrequestreview-366826225", "createdAt": "2020-02-29T23:49:59Z", "commit": {"oid": "57f947576e9b114cf60213ee7de1877509383bde"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOVQyMzo0OTo1OVrOFwLfRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQwMDowMzozOVrOFwLhrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2NDE5Ng==", "bodyText": "These can be Date instances I think and Jackson will handle the conversion.", "url": "https://github.com/hub4j/github-api/pull/723#discussion_r386064196", "createdAt": "2020-02-29T23:49:59Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHCheckRun.java", "diffHunk": "@@ -21,8 +21,18 @@\n     private String conclusion;\n     private String name;\n     private String headSha;\n+    private String nodeId;\n+    private String externalId;\n+    private String startedAt;\n+    private String completedAt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57f947576e9b114cf60213ee7de1877509383bde"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2NDQxMA==", "bodyText": "I think the htmlUrl and getHtmlUrl() can be inherited from GHObject.   Please confirm.", "url": "https://github.com/hub4j/github-api/pull/723#discussion_r386064410", "createdAt": "2020-02-29T23:55:39Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHCheckRun.java", "diffHunk": "@@ -21,8 +21,18 @@\n     private String conclusion;\n     private String name;\n     private String headSha;\n+    private String nodeId;\n+    private String externalId;\n+    private String startedAt;\n+    private String completedAt;\n+    private URL htmlUrl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9006af04c8817a3ad6270e381537f1ea06e67ec"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2NDUxMg==", "bodyText": "Need the javadoc for this.", "url": "https://github.com/hub4j/github-api/pull/723#discussion_r386064512", "createdAt": "2020-02-29T23:57:27Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHCheckRun.java", "diffHunk": "@@ -72,11 +103,106 @@ public String getHeadSha() {\n     }\n \n     /**\n-     * @deprecated This object has no HTML URL.\n+     * Gets the HTML URL: https://github.com/[owner]/[repo-name]/runs/[check-run-id], usually an GitHub Action page of\n+     * the check run.\n+     *\n+     * @return HTML URL\n      */\n     @Override\n     public URL getHtmlUrl() {\n-        return null;\n+        return htmlUrl;\n+    }\n+\n+    /**\n+     * Gets the global node id to access most objects in GitHub.\n+     *\n+     * @see <a href=\"https://developer.github.com/v4/guides/using-global-node-ids/\">documentation</a>\n+     * @return Global node id\n+     */\n+    public String getNodeId() {\n+        return nodeId;\n+    }\n+\n+    /**\n+     * Gets a reference for the check run on the integrator's system.\n+     *\n+     * @return Reference id\n+     */\n+    public String getExternalId() {\n+        return externalId;\n+    }\n+\n+    /**\n+     * Gets the details URL from which to find full details of the check run on the integrator's site.\n+     *\n+     * @return Details URL\n+     */\n+    public URL getDetailsUrl() {\n+        return detailsUrl;\n+    }\n+\n+    /**\n+     * Gets the start time of the check run in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\n+     *\n+     * @return Timestamp of the start time\n+     */\n+    public Date getStartedAt() {\n+        return GitHubClient.parseDate(startedAt);\n+    }\n+\n+    /**\n+     * Gets the completed time of the check run in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\n+     *\n+     * @return Timestamp of the completed time\n+     */\n+    public Date getCompletedAt() {\n+        return GitHubClient.parseDate(completedAt);\n+    }\n+\n+    /**\n+     * Gets the GitHub app this check run belongs to, included in response.\n+     *\n+     * @return GitHub App\n+     */\n+    public GHApp getApp() {\n+        return app;\n+    }\n+\n+    public Output getOutput() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9006af04c8817a3ad6270e381537f1ea06e67ec"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2NDgxNQ==", "bodyText": "Do we have a CheckRunAnnotations yet? If not we'll need that added eventually as well.", "url": "https://github.com/hub4j/github-api/pull/723#discussion_r386064815", "createdAt": "2020-03-01T00:03:39Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHCheckRun.java", "diffHunk": "@@ -72,11 +103,106 @@ public String getHeadSha() {\n     }\n \n     /**\n-     * @deprecated This object has no HTML URL.\n+     * Gets the HTML URL: https://github.com/[owner]/[repo-name]/runs/[check-run-id], usually an GitHub Action page of\n+     * the check run.\n+     *\n+     * @return HTML URL\n      */\n     @Override\n     public URL getHtmlUrl() {\n-        return null;\n+        return htmlUrl;\n+    }\n+\n+    /**\n+     * Gets the global node id to access most objects in GitHub.\n+     *\n+     * @see <a href=\"https://developer.github.com/v4/guides/using-global-node-ids/\">documentation</a>\n+     * @return Global node id\n+     */\n+    public String getNodeId() {\n+        return nodeId;\n+    }\n+\n+    /**\n+     * Gets a reference for the check run on the integrator's system.\n+     *\n+     * @return Reference id\n+     */\n+    public String getExternalId() {\n+        return externalId;\n+    }\n+\n+    /**\n+     * Gets the details URL from which to find full details of the check run on the integrator's site.\n+     *\n+     * @return Details URL\n+     */\n+    public URL getDetailsUrl() {\n+        return detailsUrl;\n+    }\n+\n+    /**\n+     * Gets the start time of the check run in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\n+     *\n+     * @return Timestamp of the start time\n+     */\n+    public Date getStartedAt() {\n+        return GitHubClient.parseDate(startedAt);\n+    }\n+\n+    /**\n+     * Gets the completed time of the check run in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\n+     *\n+     * @return Timestamp of the completed time\n+     */\n+    public Date getCompletedAt() {\n+        return GitHubClient.parseDate(completedAt);\n+    }\n+\n+    /**\n+     * Gets the GitHub app this check run belongs to, included in response.\n+     *\n+     * @return GitHub App\n+     */\n+    public GHApp getApp() {\n+        return app;\n+    }\n+\n+    public Output getOutput() {\n+        return output;\n+    }\n+\n+    /**\n+     * Represents an output in a check run to include summary and other results.\n+     *\n+     * @see <a href=\"https://developer.github.com/v3/checks/runs/#output-object\">documentation</a>\n+     */\n+    public static class Output {\n+        private String title;\n+        private String summary;\n+        private String text;\n+        private int annotationsCount;\n+        private URL annotationsUrl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9006af04c8817a3ad6270e381537f1ea06e67ec"}, "originalPosition": 162}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10b01ca6b334b8fbbea2173d211f53bdea432fb3", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/10b01ca6b334b8fbbea2173d211f53bdea432fb3", "committedDate": "2020-03-01T06:01:59Z", "message": "using Date for timestamps and add more JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "375417527be2134e72ce18bec0a6ff433090ac51", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/375417527be2134e72ce18bec0a6ff433090ac51", "committedDate": "2020-03-01T07:17:24Z", "message": "Change timestamps property back to String"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODQ5NTQy", "url": "https://github.com/hub4j/github-api/pull/723#pullrequestreview-366849542", "createdAt": "2020-03-01T10:31:25Z", "commit": {"oid": "375417527be2134e72ce18bec0a6ff433090ac51"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxMDozMToyNlrOFwNcBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxMDozMjozN1rOFwNcUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5NjEzNA==", "bodyText": "Most probably it should support. Would be beneficial for users in the longer term", "url": "https://github.com/hub4j/github-api/pull/723#discussion_r386096134", "createdAt": "2020-03-01T10:31:26Z", "author": {"login": "sladyn98"}, "path": "src/main/java/org/kohsuke/github/GHCheckRun.java", "diffHunk": "@@ -72,11 +103,106 @@ public String getHeadSha() {\n     }\n \n     /**\n-     * @deprecated This object has no HTML URL.\n+     * Gets the HTML URL: https://github.com/[owner]/[repo-name]/runs/[check-run-id], usually an GitHub Action page of\n+     * the check run.\n+     *\n+     * @return HTML URL\n      */\n     @Override\n     public URL getHtmlUrl() {\n-        return null;\n+        return htmlUrl;\n+    }\n+\n+    /**\n+     * Gets the global node id to access most objects in GitHub.\n+     *\n+     * @see <a href=\"https://developer.github.com/v4/guides/using-global-node-ids/\">documentation</a>\n+     * @return Global node id\n+     */\n+    public String getNodeId() {\n+        return nodeId;\n+    }\n+\n+    /**\n+     * Gets a reference for the check run on the integrator's system.\n+     *\n+     * @return Reference id\n+     */\n+    public String getExternalId() {\n+        return externalId;\n+    }\n+\n+    /**\n+     * Gets the details URL from which to find full details of the check run on the integrator's site.\n+     *\n+     * @return Details URL\n+     */\n+    public URL getDetailsUrl() {\n+        return detailsUrl;\n+    }\n+\n+    /**\n+     * Gets the start time of the check run in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\n+     *\n+     * @return Timestamp of the start time\n+     */\n+    public Date getStartedAt() {\n+        return GitHubClient.parseDate(startedAt);\n+    }\n+\n+    /**\n+     * Gets the completed time of the check run in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ.\n+     *\n+     * @return Timestamp of the completed time\n+     */\n+    public Date getCompletedAt() {\n+        return GitHubClient.parseDate(completedAt);\n+    }\n+\n+    /**\n+     * Gets the GitHub app this check run belongs to, included in response.\n+     *\n+     * @return GitHub App\n+     */\n+    public GHApp getApp() {\n+        return app;\n+    }\n+\n+    public Output getOutput() {\n+        return output;\n+    }\n+\n+    /**\n+     * Represents an output in a check run to include summary and other results.\n+     *\n+     * @see <a href=\"https://developer.github.com/v3/checks/runs/#output-object\">documentation</a>\n+     */\n+    public static class Output {\n+        private String title;\n+        private String summary;\n+        private String text;\n+        private int annotationsCount;\n+        private URL annotationsUrl;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA2NDgxNQ=="}, "originalCommit": {"oid": "f9006af04c8817a3ad6270e381537f1ea06e67ec"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjA5NjIwOQ==", "bodyText": "@XiongKezhi I guess there are multiple states of the check run that need to be tested for, Is this the only one?", "url": "https://github.com/hub4j/github-api/pull/723#discussion_r386096209", "createdAt": "2020-03-01T10:32:37Z", "author": {"login": "sladyn98"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -320,8 +323,32 @@ public void checkRunEvent() throws Exception {\n                 .parseEventPayload(payload.asReader(), GHEventPayload.CheckRun.class);\n         assertThat(event.getRepository().getName(), is(\"Hello-World\"));\n         assertThat(event.getAction(), is(\"created\"));\n-        assertThat(event.getCheckRun().getName(), is(\"Octocoders-linter\"));\n-        assertThat(event.getCheckRun().getHeadSha(), is(\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\"));\n+\n+        // Checks the deserialization of check_run\n+        GHCheckRun checkRun = event.getCheckRun();\n+        assertThat(checkRun.getName(), is(\"Octocoders-linter\"));\n+        assertThat(checkRun.getHeadSha(), is(\"ec26c3e57ca3a959ca5aad62de7213c562f8c821\"));\n+        assertThat(checkRun.getStatus(), is(\"completed\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "375417527be2134e72ce18bec0a6ff433090ac51"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16faaae19987261bcfdde2ee5eae4ee148512366", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/16faaae19987261bcfdde2ee5eae4ee148512366", "committedDate": "2020-03-01T13:59:16Z", "message": "Add GHCheckSuite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8a8ee9b9d00f565881eda051d63b12dd22c197a", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/f8a8ee9b9d00f565881eda051d63b12dd22c197a", "committedDate": "2020-03-01T14:14:53Z", "message": "Format code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f54bfd3fb55192683892390d37f3cdaa8b672525", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/f54bfd3fb55192683892390d37f3cdaa8b672525", "committedDate": "2020-03-01T14:18:36Z", "message": "Fixed JavaDoc warning reported by maven site"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NDkyNDI2", "url": "https://github.com/hub4j/github-api/pull/723#pullrequestreview-367492426", "createdAt": "2020-03-02T20:09:42Z", "commit": {"oid": "f54bfd3fb55192683892390d37f3cdaa8b672525"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDowOTo0MlrOFwtlDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDowOTo0MlrOFwtlDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyMjczMg==", "bodyText": "This is why you want some \"recursive\" testing.  You couldn't know this was needed, but it will be for anyone wanting to take further actions from this repository instance.  (see https://github.com/github-api/github-api/pull/723/files#diff-0848153dca0376dad295a4c0fd4a9437R232)\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return repository;\n          \n          \n            \n                        repository.root = root;\n          \n          \n            \n                        return repository;", "url": "https://github.com/hub4j/github-api/pull/723#discussion_r386622732", "createdAt": "2020-03-02T20:09:42Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -150,6 +150,47 @@ void wrapUp(GitHub root) {\n         }\n     }\n \n+    /**\n+     * A check suite event has been requested, rerequested or completed.\n+     *\n+     * @see <a href=\"https://developer.github.com/v3/activity/events/types/#checkrunevent\">authoritative source</a>\n+     */\n+    @SuppressFBWarnings(\n+            value = { \"UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD\", \"UWF_UNWRITTEN_FIELD\", \"NP_UNWRITTEN_FIELD\" },\n+            justification = \"JSON API\")\n+    public static class CheckSuite extends GHEventPayload {\n+        private String action;\n+        private GHCheckSuite checkSuite;\n+        private GHRepository repository;\n+\n+        /**\n+         * Gets action.\n+         *\n+         * @return the action\n+         */\n+        public String getAction() {\n+            return action;\n+        }\n+\n+        /**\n+         * Gets the Check Suite object\n+         *\n+         * @return the Check Suite object\n+         */\n+        public GHCheckSuite getCheckSuite() {\n+            return checkSuite;\n+        }\n+\n+        /**\n+         * Gets repository.\n+         *\n+         * @return the repository\n+         */\n+        public GHRepository getRepository() {\n+            return repository;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54bfd3fb55192683892390d37f3cdaa8b672525"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NTAwMjQ3", "url": "https://github.com/hub4j/github-api/pull/723#pullrequestreview-367500247", "createdAt": "2020-03-02T20:22:34Z", "commit": {"oid": "f54bfd3fb55192683892390d37f3cdaa8b672525"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDoyMjozNVrOFwt9Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQyMDoyMjozNVrOFwt9Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjYyODg3NQ==", "bodyText": "I don't see it on this page: https://developer.github.com/v3/repos/commits/#get-a-single-commit\nI see this:\nhttps://developer.github.com/v3/activity/events/types/#webhook-payload-example-1\nIt possible the \"issue\" in GHCheckSuite is not a GHCommit?  But instead something else?", "url": "https://github.com/hub4j/github-api/pull/723#discussion_r386628875", "createdAt": "2020-03-02T20:22:35Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHCommit.java", "diffHunk": "@@ -38,12 +34,43 @@\n \n         private int comment_count;\n \n+        private String id;\n+        private String timestamp;\n+        private String treeId;\n+\n         static class Tree {\n             String sha;\n         }\n \n         private Tree tree;\n \n+        /**\n+         * Gets id of the commit, used by {@link GHCheckSuite} when a {@link GHEvent#CHECK_SUITE} comes\n+         *\n+         * @return id of the commit\n+         */\n+        public String getId() {\n+            return id;\n+        }\n+\n+        /**\n+         * Gets timestamp of the commit, used by {@link GHCheckSuite} when a {@link GHEvent#CHECK_SUITE} comes\n+         *\n+         * @return timestamp of the commit\n+         */\n+        public Date getTimestamp() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54bfd3fb55192683892390d37f3cdaa8b672525"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce7cfc06483a5a194008bb21a3d84e23e41268ce", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/ce7cfc06483a5a194008bb21a3d84e23e41268ce", "committedDate": "2020-03-03T04:57:42Z", "message": "Merge branch 'master' into complete-checks-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "768f60709ffd0054b1f34c6ae94f3fb0d85e68cb", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/hub4j/github-api/commit/768f60709ffd0054b1f34c6ae94f3fb0d85e68cb", "committedDate": "2020-03-03T15:45:01Z", "message": "Add Output and more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0b23c79e21c9bbc8d702202861f9da9944f6a84", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/d0b23c79e21c9bbc8d702202861f9da9944f6a84", "committedDate": "2020-03-04T03:59:21Z", "message": "Merge branch 'master' into complete-checks-api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NTQyNTk4", "url": "https://github.com/hub4j/github-api/pull/723#pullrequestreview-368542598", "createdAt": "2020-03-04T07:03:00Z", "commit": {"oid": "d0b23c79e21c9bbc8d702202861f9da9944f6a84"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1691, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}