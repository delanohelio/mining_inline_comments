{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MDAyMTUx", "number": 976, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOTo1NDoyN1rOE27dEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0Njo1NVrOE4k3ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDMyNjU3OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOTo1NDoyN1rOHv_OWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOTo1NDoyN1rOHv_OWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4MDk4Nw==", "bodyText": "to avoid this message on test execution:\nSLF4J: Failed to load class \"org.slf4j.impl.StaticLoggerBinder\".\nSLF4J: Defaulting to no-operation (NOP) logger implementation\nSLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.\n\nIt is out of scope, but not sure if this deserves separate PR.", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520080987", "createdAt": "2020-11-09T19:54:27Z", "author": {"login": "seregamorph"}, "path": "pom.xml", "diffHunk": "@@ -540,6 +540,12 @@\n       <version>2.8.6</version>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>org.slf4j</groupId>\n+      <artifactId>slf4j-simple</artifactId>\n+      <version>1.7.2</version>\n+      <scope>test</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDM0MTY5OnYy", "diffSide": "LEFT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOTo1ODoxNVrOHv_Xig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOTo1ODoxNVrOHv_Xig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4MzMzOA==", "bodyText": "Pay attention: class made non-abstract. Reasoning: it allow to instantiate common event object:\nGitHub.offline()\n                .parseEventPayload(new StringReader(payload), GHEventPayload.class)\nWhy this may be needed: if you want to validate the X-Hub-Signature before handling the payload, you may need common information like repository to resolve the secret.\nPossible workaround in case if the class is still abstract: make an empty subclass (in your local project, but in org.kohsuke.github package) and instantiate it.\nPossible incompatibility: not expected.", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520083338", "createdAt": "2020-11-09T19:58:15Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -16,14 +16,30 @@\n  *      and payloads</a>\n  */\n @SuppressWarnings(\"UnusedDeclaration\")\n-public abstract class GHEventPayload {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDM0NDM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOTo1ODo1N1rOHv_ZJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOTo1ODo1N1rOHv_ZJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4Mzc1MQ==", "bodyText": "as declared in #947 moved from subclasses. Field may be null depending on the event type", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520083751", "createdAt": "2020-11-09T19:58:57Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -16,14 +16,30 @@\n  *      and payloads</a>\n  */\n @SuppressWarnings(\"UnusedDeclaration\")\n-public abstract class GHEventPayload {\n+@SuppressFBWarnings(\"UWF_UNWRITTEN_FIELD\")\n+public class GHEventPayload {\n     protected GitHub root;\n \n+    // https://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#webhook-payload-object-common-properties\n+    // Webhook payload object common properties: action, sender, repository, organization, installation\n+    private String action;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDM0NzE3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOTo1OTozM1rOHv_aww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxOTo1OTozM1rOHv_aww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NDE2Mw==", "bodyText": "aggregated from overriden wrapUp methods and a getter with side effect (see below) because of fields lift", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520084163", "createdAt": "2020-11-09T19:59:33Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -43,11 +59,64 @@ public void setSender(GHUser sender) {\n         this.sender = sender;\n     }\n \n+    /**\n+     * Gets repository.\n+     *\n+     * @return the repository\n+     */\n+    public GHRepository getRepository() {\n+        return repository;\n+    }\n+\n+    /**\n+     * Sets repository.\n+     *\n+     * @param repository\n+     *            the repository\n+     */\n+    public void setRepository(GHRepository repository) {\n+        this.repository = repository;\n+    }\n+\n+    /**\n+     * Gets organization.\n+     *\n+     * @return the organization\n+     */\n+    public GHOrganization getOrganization() {\n+        return organization;\n+    }\n+\n+    /**\n+     * Sets organization.\n+     *\n+     * @param organization\n+     *            the organization\n+     */\n+    public void setOrganization(GHOrganization organization) {\n+        this.organization = organization;\n+    }\n+\n+    /**\n+     * Gets installation\n+     *\n+     * @return the installation\n+     */\n+    public GHAppInstallation getInstallation() {\n+        return installation;\n+    }\n+\n     void wrapUp(GitHub root) {\n         this.root = root;\n         if (sender != null) {\n             sender.wrapUp(root);\n         }\n+        if (repository != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDM0OTg4OnYy", "diffSide": "LEFT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowMDoxNlrOHv_cXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowMDoxNlrOHv_cXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NDU3Mg==", "bodyText": "replaced with wrapUp on the super-class", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520084572", "createdAt": "2020-11-09T20:00:16Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -131,16 +186,6 @@ public GHRequestedAction getRequestedAction() {\n             return requestedAction;\n         }\n \n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            repository.root = root;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDM1MzcyOnYy", "diffSide": "LEFT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowMToxOVrOHv_e0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowMToxOVrOHv_e0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NTIwMg==", "bodyText": "Note: all methods that were moved to a superclass were covered with tests GHEventPayloadTest. Where were not covered - tests enhanced.", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520085202", "createdAt": "2020-11-09T20:01:19Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -65,24 +134,10 @@ void wrapUp(GitHub root) {\n      *      check_run event</a>\n      * @see <a href=\"https://docs.github.com/en/rest/reference/checks#check-runs\">Check Runs</a>\n      */\n-    @SuppressFBWarnings(\n-            value = { \"UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD\", \"UWF_UNWRITTEN_FIELD\", \"NP_UNWRITTEN_FIELD\" },\n-            justification = \"JSON API\")\n     public static class CheckRun extends GHEventPayload {\n-        private String action;\n         private int number;\n         private GHCheckRun checkRun;\n         private GHRequestedAction requestedAction;\n-        private GHRepository repository;\n-\n-        /**\n-         * Gets action.\n-         *\n-         * @return the action\n-         */\n-        public String getAction() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDM1NjA5OnYy", "diffSide": "LEFT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowMTo1M1rOHv_gGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowMTo1M1rOHv_gGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NTUzMA==", "bodyText": "most of suppressed spotbugs findings were redundant, also generalized on the class", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520085530", "createdAt": "2020-11-09T20:01:53Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -163,22 +208,8 @@ void wrapUp(GitHub root) {\n      *      check_suite event</a>\n      * @see <a href=\"https://docs.github.com/en/rest/reference/checks#check-suites\">Check Suites</a>\n      */\n-    @SuppressFBWarnings(\n-            value = { \"UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD\", \"UWF_UNWRITTEN_FIELD\", \"NP_UNWRITTEN_FIELD\" },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDM1OTcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowMjo1M1rOHv_iVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0MDoxMVrOHylM2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NjEwMw==", "bodyText": "some fields are package visible, because subclasses work with them directly. Considerable: make private, replace with accessors", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520086103", "createdAt": "2020-11-09T20:02:53Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -16,14 +16,30 @@\n  *      and payloads</a>\n  */\n @SuppressWarnings(\"UnusedDeclaration\")\n-public abstract class GHEventPayload {\n+@SuppressFBWarnings(\"UWF_UNWRITTEN_FIELD\")\n+public class GHEventPayload {\n     protected GitHub root;\n \n+    // https://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#webhook-payload-object-common-properties\n+    // Webhook payload object common properties: action, sender, repository, organization, installation\n+    private String action;\n     private GHUser sender;\n+    GHRepository repository;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxMTU1NQ==", "bodyText": "@seregamorph\nYes, please make these private.", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522311555", "createdAt": "2020-11-12T18:08:39Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -16,14 +16,30 @@\n  *      and payloads</a>\n  */\n @SuppressWarnings(\"UnusedDeclaration\")\n-public abstract class GHEventPayload {\n+@SuppressFBWarnings(\"UWF_UNWRITTEN_FIELD\")\n+public class GHEventPayload {\n     protected GitHub root;\n \n+    // https://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#webhook-payload-object-common-properties\n+    // Webhook payload object common properties: action, sender, repository, organization, installation\n+    private String action;\n     private GHUser sender;\n+    GHRepository repository;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NjEwMw=="}, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMDM0NQ==", "bodyText": "done", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522800345", "createdAt": "2020-11-13T08:40:11Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -16,14 +16,30 @@\n  *      and payloads</a>\n  */\n @SuppressWarnings(\"UnusedDeclaration\")\n-public abstract class GHEventPayload {\n+@SuppressFBWarnings(\"UWF_UNWRITTEN_FIELD\")\n+public class GHEventPayload {\n     protected GitHub root;\n \n+    // https://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#webhook-payload-object-common-properties\n+    // Webhook payload object common properties: action, sender, repository, organization, installation\n+    private String action;\n     private GHUser sender;\n+    GHRepository repository;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NjEwMw=="}, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDM2MzE0OnYy", "diffSide": "LEFT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowMzo1N1rOHv_kVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowMzo1N1rOHv_kVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NjYxNQ==", "bodyText": "note: snake_case replaced with camelCase, mapper is set up to force snake_case, so it was redundant", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520086615", "createdAt": "2020-11-09T20:03:57Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -454,19 +411,8 @@ void wrapUp(GitHub root) {\n      * @see <a href=\"https://docs.github.com/en/rest/reference/pulls#reviews\">Pull Request Reviews</a>\n      */\n     public static class PullRequestReview extends GHEventPayload {\n-        private String action;\n         private GHPullRequestReview review;\n-        private GHPullRequest pull_request;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 324}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDM2NTkyOnYy", "diffSide": "LEFT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowNDo0MlrOHv_l3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowNDo0MlrOHv_l3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NzAwNQ==", "bodyText": "moved to superclass", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520087005", "createdAt": "2020-11-09T20:04:42Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -1183,55 +891,11 @@ void wrapUp(GitHub root) {\n      * event</a>\n      */\n     public static class Ping extends GHEventPayload {\n-        private GHRepository repository;\n-        private GHOrganization organization;\n-\n-        /**\n-         * Sets repository.\n-         *\n-         * @param repository\n-         *            the repository\n-         */\n-        public void setRepository(GHRepository repository) {\n-            this.repository = repository;\n-        }\n-\n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            return repository;\n-        }\n-\n-        /**\n-         * Gets organization.\n-         *\n-         * @return the organization\n-         */\n-        public GHOrganization getOrganization() {\n-            return organization;\n-        }\n-\n-        /**\n-         * Sets organization.\n-         *\n-         * @param organization\n-         *            the organization\n-         */\n-        public void setOrganization(GHOrganization organization) {\n-            this.organization = organization;\n-        }\n-\n         @Override\n         void wrapUp(GitHub root) {\n             super.wrapUp(root);\n             if (repository != null)\n                 repository.wrap(root);\n-            if (organization != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 823}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDM2ODgzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowNTozNFrOHv_noA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowNTozNFrOHv_noA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4NzQ1Ng==", "bodyText": "test for already addressed #943", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520087456", "createdAt": "2020-11-09T20:05:34Z", "author": {"login": "seregamorph"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -232,6 +242,7 @@ public void pull_request_labeled() throws Exception {\n         assertThat(event.getPullRequest().getAdditions(), is(137));\n         assertThat(event.getPullRequest().getDeletions(), is(81));\n         assertThat(event.getPullRequest().getChangedFiles(), is(22));\n+        assertThat(event.getPullRequest().getLabels().iterator().next().getName(), is(\"Ready for Review\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MDM3MTUzOnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/kohsuke/github/GHEventPayloadTest/ping.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowNjoyM1rOHv_pQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQyMDowNjoyM1rOHv_pQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDA4Nzg3NA==", "bodyText": "the payload got from real requests (only some usernames were changed)", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r520087874", "createdAt": "2020-11-09T20:06:23Z", "author": {"login": "seregamorph"}, "path": "src/test/resources/org/kohsuke/github/GHEventPayloadTest/ping.json", "diffHunk": "@@ -0,0 +1,149 @@\n+{\n+  \"zen\": \"Design for failure.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDU2NzU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoxMzozMFrOHyHkFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0MDozOVrOHylNsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxNDc3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Most webhook payloads contain an action property that contains the specific activity that triggered the event.\n          \n          \n            \n                 *  Gets the action for the trigged event.\n          \n          \n            \n                 *\n          \n          \n            \n                 * Most but not all webhook payloads contain an action property that contains the specific activity that triggered the event.", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522314772", "createdAt": "2020-11-12T18:13:30Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -16,14 +16,30 @@\n  *      and payloads</a>\n  */\n @SuppressWarnings(\"UnusedDeclaration\")\n-public abstract class GHEventPayload {\n+@SuppressFBWarnings(\"UWF_UNWRITTEN_FIELD\")\n+public class GHEventPayload {\n     protected GitHub root;\n \n+    // https://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#webhook-payload-object-common-properties\n+    // Webhook payload object common properties: action, sender, repository, organization, installation\n+    private String action;\n     private GHUser sender;\n+    GHRepository repository;\n+    private GHOrganization organization;\n+    GHAppInstallation installation;\n \n     GHEventPayload() {\n     }\n \n+    /**\n+     * Most webhook payloads contain an action property that contains the specific activity that triggered the event.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMDU2Mg==", "bodyText": "done (typo in suggestion fixed)", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522800562", "createdAt": "2020-11-13T08:40:39Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -16,14 +16,30 @@\n  *      and payloads</a>\n  */\n @SuppressWarnings(\"UnusedDeclaration\")\n-public abstract class GHEventPayload {\n+@SuppressFBWarnings(\"UWF_UNWRITTEN_FIELD\")\n+public class GHEventPayload {\n     protected GitHub root;\n \n+    // https://docs.github.com/en/free-pro-team@latest/developers/webhooks-and-events/webhook-events-and-payloads#webhook-payload-object-common-properties\n+    // Webhook payload object common properties: action, sender, repository, organization, installation\n+    private String action;\n     private GHUser sender;\n+    GHRepository repository;\n+    private GHOrganization organization;\n+    GHAppInstallation installation;\n \n     GHEventPayload() {\n     }\n \n+    /**\n+     * Most webhook payloads contain an action property that contains the specific activity that triggered the event.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMxNDc3Mg=="}, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NTcwNTA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQyMzoxNDozM1rOHySjyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0MDo1OVrOHylOVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ5NDkyMg==", "bodyText": "The super handles the repository.wrap(), right?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    void wrapUp(GitHub root) {\n          \n          \n            \n                        super.wrapUp(root);\n          \n          \n            \n                        repository.wrap(root);\n          \n          \n            \n                    void wrapUp(GitHub root) {\n          \n          \n            \n                        super.wrapUp(root);", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522494922", "createdAt": "2020-11-12T23:14:33Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -1635,68 +1235,11 @@ void wrapUp(GitHub root) {\n      *      repository event</a>\n      * @see <a href=\"https://docs.github.com/en/rest/reference/repos\">Repositories</a>\n      */\n-    @SuppressFBWarnings(\n-            value = { \"UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR\", \"NP_UNWRITTEN_FIELD\", \"UWF_UNWRITTEN_FIELD\" },\n-            justification = \"Constructed by JSON deserialization\")\n     public static class Repository extends GHEventPayload {\n-        private String action;\n-        private GHRepository repository;\n-        private GHOrganization organization;\n-\n-        /**\n-         * Gets action.\n-         *\n-         * @return the action\n-         */\n-        public String getAction() {\n-            return action;\n-        }\n-\n-        /**\n-         * Sets repository.\n-         *\n-         * @param repository\n-         *            the repository\n-         */\n-        public void setRepository(GHRepository repository) {\n-            this.repository = repository;\n-        }\n-\n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            return repository;\n-        }\n-\n-        /**\n-         * Gets organization.\n-         *\n-         * @return the organization\n-         */\n-        public GHOrganization getOrganization() {\n-            return organization;\n-        }\n-\n-        /**\n-         * Sets organization.\n-         *\n-         * @param organization\n-         *            the organization\n-         */\n-        public void setOrganization(GHOrganization organization) {\n-            this.organization = organization;\n-        }\n-\n         @Override\n         void wrapUp(GitHub root) {\n             super.wrapUp(root);\n             repository.wrap(root);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 997}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMDcyNQ==", "bodyText": "done. the inherited method removed (contains only a call to super)", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522800725", "createdAt": "2020-11-13T08:40:59Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -1635,68 +1235,11 @@ void wrapUp(GitHub root) {\n      *      repository event</a>\n      * @see <a href=\"https://docs.github.com/en/rest/reference/repos\">Repositories</a>\n      */\n-    @SuppressFBWarnings(\n-            value = { \"UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR\", \"NP_UNWRITTEN_FIELD\", \"UWF_UNWRITTEN_FIELD\" },\n-            justification = \"Constructed by JSON deserialization\")\n     public static class Repository extends GHEventPayload {\n-        private String action;\n-        private GHRepository repository;\n-        private GHOrganization organization;\n-\n-        /**\n-         * Gets action.\n-         *\n-         * @return the action\n-         */\n-        public String getAction() {\n-            return action;\n-        }\n-\n-        /**\n-         * Sets repository.\n-         *\n-         * @param repository\n-         *            the repository\n-         */\n-        public void setRepository(GHRepository repository) {\n-            this.repository = repository;\n-        }\n-\n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            return repository;\n-        }\n-\n-        /**\n-         * Gets organization.\n-         *\n-         * @return the organization\n-         */\n-        public GHOrganization getOrganization() {\n-            return organization;\n-        }\n-\n-        /**\n-         * Sets organization.\n-         *\n-         * @param organization\n-         *            the organization\n-         */\n-        public void setOrganization(GHOrganization organization) {\n-            this.organization = organization;\n-        }\n-\n         @Override\n         void wrapUp(GitHub root) {\n             super.wrapUp(root);\n             repository.wrap(root);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjQ5NDkyMg=="}, "originalCommit": {"oid": "929d9fb7bda6141dac9cbad58f9fb13db69abaf1"}, "originalPosition": 997}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NzU3MTM4OnYy", "diffSide": "LEFT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0MTozNFrOHylPbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0MTozNFrOHylPbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMTAwNw==", "bodyText": "inherited", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522801007", "createdAt": "2020-11-13T08:41:34Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -131,24 +190,14 @@ public GHRequestedAction getRequestedAction() {\n             return requestedAction;\n         }\n \n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            repository.root = root;\n-            return repository;\n-        }\n-\n         @Override\n         void wrapUp(GitHub root) {\n             super.wrapUp(root);\n             if (checkRun == null)\n                 throw new IllegalStateException(\n                         \"Expected check_run payload, but got something else. Maybe we've got another type of event?\");\n+            GHRepository repository = getRepository();\n             if (repository != null) {\n-                repository.wrap(root);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b51d655f7757c87114a5a93a4acb8229a825c6ef"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NzU3MjIyOnYy", "diffSide": "LEFT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0MTo1MFrOHylP5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0MTo1MFrOHylP5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMTEyNQ==", "bodyText": "inherited", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522801125", "createdAt": "2020-11-13T08:41:50Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -258,11 +262,10 @@ public GHAppInstallation getInstallation() {\n         @Override\n         void wrapUp(GitHub root) {\n             super.wrapUp(root);\n-            if (installation == null)\n+            if (getInstallation() == null) {\n                 throw new IllegalStateException(\n                         \"Expected check_suite payload, but got something else. Maybe we've got another type of event?\");\n-            else\n-                installation.wrapUp(root);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b51d655f7757c87114a5a93a4acb8229a825c6ef"}, "originalPosition": 241}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NzU3NDkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0Mjo0M1rOHylRoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0Mjo0M1rOHylRoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMTU2OA==", "bodyText": "BTW this logic kept, but this line looks redundant (see wrapUp)", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522801568", "createdAt": "2020-11-13T08:42:43Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -408,17 +376,8 @@ public int getNumber() {\n          * @return the pull request\n          */\n         public GHPullRequest getPullRequest() {\n-            pull_request.root = root;\n-            return pull_request;\n-        }\n-\n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            return repository;\n+            pullRequest.root = root;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b51d655f7757c87114a5a93a4acb8229a825c6ef"}, "originalPosition": 340}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NzU4ODg4OnYy", "diffSide": "LEFT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0NToxNVrOHylaeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0NToxNVrOHylaeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwMzgzMw==", "bodyText": "fully inherited - hence removed", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522803833", "createdAt": "2020-11-13T08:45:15Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -880,33 +697,6 @@ public String getMasterBranch() {\n         public String getDescription() {\n             return description;\n         }\n-\n-        /**\n-         * Gets repository.\n-         *\n-         * @return the repository\n-         */\n-        public GHRepository getRepository() {\n-            return repository;\n-        }\n-\n-        /**\n-         * Sets repository.\n-         *\n-         * @param repository\n-         *            the repository\n-         */\n-        public void setRepository(GHRepository repository) {\n-            this.repository = repository;\n-        }\n-\n-        @Override\n-        void wrapUp(GitHub root) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b51d655f7757c87114a5a93a4acb8229a825c6ef"}, "originalPosition": 684}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NzU5ODAyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0Njo1NVrOHylgWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwODo0Njo1NVrOHylgWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgwNTMzOA==", "bodyText": "note: repository.root = root; replaced with repository.wrap(root);, a more complex. This way we can inherit this action in subclasses and remove repository.wrap(root); line from them.", "url": "https://github.com/hub4j/github-api/pull/976#discussion_r522805338", "createdAt": "2020-11-13T08:46:55Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHEventPayload.java", "diffHunk": "@@ -112,11 +113,14 @@ void wrapUp(GitHub root) {\n             sender.wrapUp(root);\n         }\n         if (repository != null) {\n-            repository.root = root;\n+            repository.wrap(root);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b51d655f7757c87114a5a93a4acb8229a825c6ef"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1769, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}