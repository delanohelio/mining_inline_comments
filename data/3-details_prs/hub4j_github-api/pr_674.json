{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NDY1Nzg3", "number": 674, "title": "Retry when SocketException with some sleep", "bodyText": "Description\nFixes #539\nUse the sleep approach as stated in #373\nEdit from @bitwiseman:\n\nBefore this change I'm not sure that the retry mechanism was very effective.  If an exception is thrown from \"getResultCode\", we can reuse the same HttpURLConnection and just try again.  But if the exception is throw later, the connection will keep the same status and retry will not accomplish what was intended.\nInstead of trying to get fancy about figuring that out, this change creates a new connection for each retry. It also moves all fetches to include the same code path including this retry mechanism, so no matter how we get the data it has the retry feature.\n\nQuestions\n\nHow do I test it?\nI've been trying different approaches to test this particular scenario, the main issue is regarding the retryInvalidCached404Response method, that's called from the _fetch method in the Requester class since it does validate the response and therefore I'm not sure how I can mock/reproduce the timeout.\n\n        // I did mock a connection reset only for testing purpose. and changed the condition to be\n        // either instanceof SocketException or instanceof SocketTimeoutException \n        this.apiServer().stubFor(get(urlMatching(\".*test/timeout\"))\n                .willReturn(aResponse().withFault(Fault.CONNECTION_RESET_BY_PEER)));\n\n\n\nIs connection reset by peer a valid use case to retry?\n\nBefore submitting a PR:\nWe love getting PRs, but we hate asking people for the same basic changes every time.\n\n Push your changes to a branch other than master. Create your PR from that branch.\n Add JavaDocs and other comments\n Write tests that run and pass in CI. See CONTRIBUTING.md for details on how to capture snapshot data.\n Run mvn -P ci install site locally. This may reformat your code, commit those changes. If this command doesn't succeed, your change will not pass CI.", "createdAt": "2020-01-23T16:57:18Z", "url": "https://github.com/hub4j/github-api/pull/674", "merged": true, "mergeCommit": {"oid": "aeb5e5f68136234756f56e86034bc2af51ac9aad"}, "closed": true, "closedAt": "2020-01-24T22:43:30Z", "author": {"login": "v1v"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9KbUcAH2gAyMzY2NDY1Nzg3OmZjYTE3OWFiYWI2ZWI0ZjljODMwNWQzZjJmMGFkNjM1YTA0NTQyYmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9lBKaAH2gAyMzY2NDY1Nzg3OmViNDAwMGYyNmI2MDgyNGJlMTc2ZDVmZDZkZjY4N2Y2YjgxN2IzODg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fca179abab6eb4f9c8305d3f2f0ad635a04542ba", "author": {"user": {"login": "v1v", "name": "Victor Martinez"}}, "url": "https://github.com/hub4j/github-api/commit/fca179abab6eb4f9c8305d3f2f0ad635a04542ba", "committedDate": "2020-01-23T13:33:12Z", "message": "Retry if SocketException\n\nSee https://github.com/github-api/github-api/pull/373"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f38ab36403166f2f4909c1d7d8970fd8519a412", "author": {"user": {"login": "v1v", "name": "Victor Martinez"}}, "url": "https://github.com/hub4j/github-api/commit/4f38ab36403166f2f4909c1d7d8970fd8519a412", "committedDate": "2020-01-23T14:01:29Z", "message": "Cosmetic change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NDcxNDM1", "url": "https://github.com/hub4j/github-api/pull/674#pullrequestreview-347471435", "createdAt": "2020-01-23T17:17:57Z", "commit": {"oid": "4f38ab36403166f2f4909c1d7d8970fd8519a412"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxNzo1N1rOFhGQGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoyNDoxMFrOFhGcHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0OTc1NQ==", "bodyText": "Make a configurable static for this and probably make it 500 millis to start?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Thread.sleep(5000);\n          \n          \n            \n                                Thread.sleep(Requester.retryTimeoutMillis);", "url": "https://github.com/hub4j/github-api/pull/674#discussion_r370249755", "createdAt": "2020-01-23T17:17:57Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/Requester.java", "diffHunk": "@@ -902,8 +904,17 @@ private void setRequestMethod(HttpURLConnection connection) throws IOException {\n             // don't wrap exception in HttpException to preserve backward compatibility\n             throw e;\n         } catch (IOException e) {\n-            if (e instanceof SocketTimeoutException && timeouts > 0) {\n-                LOGGER.log(INFO, \"timed out accessing \" + uc.getURL() + \"; will try \" + timeouts + \" more time(s)\", e);\n+            if (((e instanceof SocketException && e.getCause() instanceof SocketTimeoutException)\n+                    || e instanceof SocketTimeoutException) && timeouts > 0) {\n+                LOGGER.log(INFO,\n+                        \"timed out accessing  \" + uc.getURL() + \". Sleeping 5 seconds before retrying... ; will try\"\n+                                + timeouts + \" more time(s)\",\n+                        e);\n+                try {\n+                    Thread.sleep(5000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f38ab36403166f2f4909c1d7d8970fd8519a412"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1MjgzMQ==", "bodyText": "This is also needed or the error just keeps happening.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return parse(type, instance, timeouts - 1);\n          \n          \n            \n                            uc = setupConnection(uc.getURL());\n          \n          \n            \n                            return parse(type, instance, timeouts - 1);", "url": "https://github.com/hub4j/github-api/pull/674#discussion_r370252831", "createdAt": "2020-01-23T17:24:10Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/Requester.java", "diffHunk": "@@ -902,8 +904,17 @@ private void setRequestMethod(HttpURLConnection connection) throws IOException {\n             // don't wrap exception in HttpException to preserve backward compatibility\n             throw e;\n         } catch (IOException e) {\n-            if (e instanceof SocketTimeoutException && timeouts > 0) {\n-                LOGGER.log(INFO, \"timed out accessing \" + uc.getURL() + \"; will try \" + timeouts + \" more time(s)\", e);\n+            if (((e instanceof SocketException && e.getCause() instanceof SocketTimeoutException)\n+                    || e instanceof SocketTimeoutException) && timeouts > 0) {\n+                LOGGER.log(INFO,\n+                        \"timed out accessing  \" + uc.getURL() + \". Sleeping 5 seconds before retrying... ; will try\"\n+                                + timeouts + \" more time(s)\",\n+                        e);\n+                try {\n+                    Thread.sleep(5000);\n+                } catch (InterruptedException _) {\n+                    throw (IOException) new InterruptedIOException().initCause(e);\n+                }\n                 return parse(type, instance, timeouts - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f38ab36403166f2f4909c1d7d8970fd8519a412"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbe1022f20d3e9d1b02c3540f5f3cb0feca316c2", "author": {"user": {"login": "v1v", "name": "Victor Martinez"}}, "url": "https://github.com/hub4j/github-api/commit/cbe1022f20d3e9d1b02c3540f5f3cb0feca316c2", "committedDate": "2020-01-23T20:28:57Z", "message": "Support more generic Socket Exceptions\n\nFor instance: connection reset by peer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5f04d44a4215e7e8811b6d08a3184794ac6f233", "author": {"user": {"login": "v1v", "name": "Victor Martinez"}}, "url": "https://github.com/hub4j/github-api/commit/a5f04d44a4215e7e8811b6d08a3184794ac6f233", "committedDate": "2020-01-23T20:29:55Z", "message": "Fix javadoc warning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20f04febf29c427d16f9202090352eae6ebcca2a", "author": {"user": {"login": "v1v", "name": "Victor Martinez"}}, "url": "https://github.com/hub4j/github-api/commit/20f04febf29c427d16f9202090352eae6ebcca2a", "committedDate": "2020-01-23T20:36:00Z", "message": "As suggested in the code review, make a configurable sleep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "418ea9a19e936680ee371ac27586b2f05a833e73", "author": {"user": {"login": "v1v", "name": "Victor Martinez"}}, "url": "https://github.com/hub4j/github-api/commit/418ea9a19e936680ee371ac27586b2f05a833e73", "committedDate": "2020-01-23T20:39:58Z", "message": "As suggested in the code review, handle exceptions and setup the connection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45", "author": {"user": {"login": "v1v", "name": "Victor Martinez"}}, "url": "https://github.com/hub4j/github-api/commit/d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45", "committedDate": "2020-01-23T21:09:14Z", "message": "UTs for the Timeout and Retry"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "603a8d85570289a0a2750e1d431fe6527540835a", "author": {"user": {"login": "v1v", "name": "Victor Martinez"}}, "url": "https://github.com/hub4j/github-api/commit/603a8d85570289a0a2750e1d431fe6527540835a", "committedDate": "2020-01-23T21:04:28Z", "message": "UTs for the Timeout and Retry"}, "afterCommit": {"oid": "d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45", "author": {"user": {"login": "v1v", "name": "Victor Martinez"}}, "url": "https://github.com/hub4j/github-api/commit/d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45", "committedDate": "2020-01-23T21:09:14Z", "message": "UTs for the Timeout and Retry"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NzE1MzQ1", "url": "https://github.com/hub4j/github-api/pull/674#pullrequestreview-347715345", "createdAt": "2020-01-24T01:44:33Z", "commit": {"oid": "d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMTo0NDozM1rOFhSAMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMTo0NDozM1rOFhSAMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ0MjI4OQ==", "bodyText": "I'd rather you do this in the test class. Override before and add this code there.", "url": "https://github.com/hub4j/github-api/pull/674#discussion_r370442289", "createdAt": "2020-01-24T01:44:33Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/junit/GitHubWireMockRule.java", "diffHunk": "@@ -87,6 +87,9 @@ protected void initializeServers() {\n     @Override\n     protected void before() {\n         super.before();\n+        this.apiServer()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NzE2MDUx", "url": "https://github.com/hub4j/github-api/pull/674#pullrequestreview-347716051", "createdAt": "2020-01-24T01:47:25Z", "commit": {"oid": "d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMTo0NzoyNVrOFhSCpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMTo0NzoyNVrOFhSCpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ0MjkxNg==", "bodyText": "Cool thanks.  Take a look at #678. When you get a chance. You don't have to change this, just meant as an FYI.", "url": "https://github.com/hub4j/github-api/pull/674#discussion_r370442916", "createdAt": "2020-01-24T01:47:25Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/Requester.java", "diffHunk": "@@ -923,7 +939,11 @@ private void retryInvalidCached404Response() throws IOException {\n         // scenarios. If GitHub ever fixes their issue and/or begins providing accurate ETags to\n         // their 404 responses, this will result in at worst two requests being made for each 404\n         // responses. However, only the second request will count against rate limit.\n-        int responseCode = uc.getResponseCode();\n+        int responseCode = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45"}, "originalPosition": 53}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "764599a7d9015a1b441f35c45195dbbe868e7d01", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/764599a7d9015a1b441f35c45195dbbe868e7d01", "committedDate": "2020-01-24T04:54:13Z", "message": "Move socket handling and add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74dd887c7922128cac78d82eb301f4eb5972c179", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/74dd887c7922128cac78d82eb301f4eb5972c179", "committedDate": "2020-01-24T06:22:42Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NzY3NTIy", "url": "https://github.com/hub4j/github-api/pull/674#pullrequestreview-347767522", "createdAt": "2020-01-24T06:23:08Z", "commit": {"oid": "74dd887c7922128cac78d82eb301f4eb5972c179"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb4000f26b60824be176d5fd6df687f6b817b388", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/eb4000f26b60824be176d5fd6df687f6b817b388", "committedDate": "2020-01-24T20:32:04Z", "message": "Streamline retry code path"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1653, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}