{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MDUzNTU0", "number": 967, "title": "Add support for downloading zip and tar archives of repositories.", "bodyText": "\ud83d\udc4b, found myself needing to download zip/tar archives of repository content which wasn't supported so mucked about with getting that in place.\nNow, there's a few things to note here which I'm not sure if/how to tackle:\n\nThe wiremock setup for the unit tests seems to use a HTTP client that doesn't follow redirects whereas the one used by default seems to....bug? \ud83d\udc1b\nThe archive endpoints return a 302 redirect to the actual archive which is hosted at https://codeload.github.com/<owner>/<repo>/legacy.<tar.gz|zip>/<ref> but the redirect doesn't seem to be captured properly by wiremock and the download itself isn't captured at all even when adding manual logic to follow the redirect\nThen, more of an FYI, I decided to \"drop down\" to Requester.client in order to be able to stream the content directly into a StreamConsumer since Requester.fetchStream() reads everything into memory which didn't seem ideal for dealing with entire repository archives", "createdAt": "2020-10-20T19:46:14Z", "url": "https://github.com/hub4j/github-api/pull/967", "merged": true, "mergeCommit": {"oid": "d4cc3af1e90d405bc3e72a6c686109ac804bb35f"}, "closed": true, "closedAt": "2021-02-26T20:48:43Z", "author": {"login": "chids"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUeLg9gH2gAyNTA3MDUzNTU0OmJiNDhkNTViZDRmMjQ3Y2UxMzdmNTE0MDI3YTgzZDc4ZjJlNDRkNzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd9_04sABqjQzODM1NjI3NjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bb48d55bd4f247ce137f514027a83d78f2e44d71", "author": {"user": {"login": "chids", "name": "M\u00e5rten Gustafson"}}, "url": "https://github.com/hub4j/github-api/commit/bb48d55bd4f247ce137f514027a83d78f2e44d71", "committedDate": "2020-10-20T19:45:27Z", "message": "Add support for downloading zip and tar archives of repositories."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7931777bc4888686e6c84cf04b1337ac9cde99e", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/d7931777bc4888686e6c84cf04b1337ac9cde99e", "committedDate": "2020-11-05T16:38:31Z", "message": "Merge branch 'master' into download-repository-archives"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNzAzNDM4", "url": "https://github.com/hub4j/github-api/pull/967#pullrequestreview-522703438", "createdAt": "2020-11-03T17:02:25Z", "commit": {"oid": "bb48d55bd4f247ce137f514027a83d78f2e44d71"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzowMjoyNlrOHs4QKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzoyMToxNlrOHs4_Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyMTAzMw==", "bodyText": "You can use spotbugs annotation for this.", "url": "https://github.com/hub4j/github-api/pull/967#discussion_r516821033", "createdAt": "2020-11-03T17:02:26Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -2865,6 +2866,56 @@ public GHTagObject createTag(String tag, String message, String object, String t\n                 .wrap(this);\n     }\n \n+    /**\n+     * Streams a zip archive of the repository, optionally at a given <code>ref</code>.\n+     *\n+     * @param sink\n+     *            The {@link StreamConsumer} that will consume the stream\n+     * @param ref\n+     *            if <code>null</code> the repository's default branch, usually <code>master</code>,\n+     * @throws IOException\n+     *             The IO exception.\n+     */\n+    public void zipball(StreamConsumer sink, String ref) throws IOException {\n+        downloadArchive(\"zip\", Optional.ofNullable(ref), sink);\n+    }\n+\n+    /**\n+     * Streams a tar archive of the repository, optionally at a given <code>ref</code>.\n+     *\n+     * @param sink\n+     *            The {@link StreamConsumer} that will consume the stream\n+     * @param ref\n+     *            if <code>null</code> the repository's default branch, usually <code>master</code>,\n+     * @throws IOException\n+     *             The IO exception.\n+     */\n+    public void tarball(StreamConsumer sink, String ref) throws IOException {\n+        downloadArchive(\"tar\", Optional.ofNullable(ref), sink);\n+    }\n+\n+    /**\n+     * A functional interface, equivalent to {@link java.util.function.Consumer} but that allows throwing\n+     * {@link IOException}\n+     */\n+    @FunctionalInterface\n+    public interface StreamConsumer {\n+        void accept(InputStream stream) throws IOException;\n+    }\n+\n+    private void downloadArchive(String type, Optional<String> ref, StreamConsumer sink) throws IOException {\n+        requireNonNull(sink, \"Sink must not be null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb48d55bd4f247ce137f514027a83d78f2e44d71"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzMzEyNg==", "bodyText": "Ah, I see why you did this. This is the endpoint you're hitting, but maybe we should use a more Java-like name for the methods?  I'm interested to know your opinion.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void zipball(StreamConsumer sink, String ref) throws IOException {\n          \n          \n            \n                public void downloadZip(StreamConsumer sink, String ref) throws IOException {", "url": "https://github.com/hub4j/github-api/pull/967#discussion_r516833126", "createdAt": "2020-11-03T17:21:16Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -2865,6 +2866,56 @@ public GHTagObject createTag(String tag, String message, String object, String t\n                 .wrap(this);\n     }\n \n+    /**\n+     * Streams a zip archive of the repository, optionally at a given <code>ref</code>.\n+     *\n+     * @param sink\n+     *            The {@link StreamConsumer} that will consume the stream\n+     * @param ref\n+     *            if <code>null</code> the repository's default branch, usually <code>master</code>,\n+     * @throws IOException\n+     *             The IO exception.\n+     */\n+    public void zipball(StreamConsumer sink, String ref) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb48d55bd4f247ce137f514027a83d78f2e44d71"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aae5c56a318a61359b53e8cc01d82993768b8afe", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/aae5c56a318a61359b53e8cc01d82993768b8afe", "committedDate": "2020-12-31T17:55:28Z", "message": "Merge remote-tracking branch 'upstream/master' into download-repository-archives"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "472034c95009d0f4a46e572bcedc8141327b9f46", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/472034c95009d0f4a46e572bcedc8141327b9f46", "committedDate": "2021-01-04T09:27:47Z", "message": "Add codeload and fix redirects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a79a18d8f18d5c5b676a8a0a1010408675699ad", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/7a79a18d8f18d5c5b676a8a0a1010408675699ad", "committedDate": "2021-01-04T09:30:59Z", "message": "Add functional interfaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1720b7bbc03332222376c714fe5c8080e8f5b33", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/f1720b7bbc03332222376c714fe5c8080e8f5b33", "committedDate": "2021-01-04T09:32:36Z", "message": "Move archive readers to use new functional interfaces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwODk0MTcy", "url": "https://github.com/hub4j/github-api/pull/967#pullrequestreview-560894172", "createdAt": "2021-01-04T09:44:39Z", "commit": {"oid": "f1720b7bbc03332222376c714fe5c8080e8f5b33"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwOTAwMzQ5", "url": "https://github.com/hub4j/github-api/pull/967#pullrequestreview-560900349", "createdAt": "2021-01-04T09:54:07Z", "commit": {"oid": "f1720b7bbc03332222376c714fe5c8080e8f5b33"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwOTo1NDowN1rOINrcxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwOTo1NDowN1rOINrcxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTIxNDI3Nw==", "bodyText": "the annotation doesn't actually enforce it at run time though as far as I know?\nthey provide hints for IDE and static analysis tools", "url": "https://github.com/hub4j/github-api/pull/967#discussion_r551214277", "createdAt": "2021-01-04T09:54:07Z", "author": {"login": "timja"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -2865,6 +2866,56 @@ public GHTagObject createTag(String tag, String message, String object, String t\n                 .wrap(this);\n     }\n \n+    /**\n+     * Streams a zip archive of the repository, optionally at a given <code>ref</code>.\n+     *\n+     * @param sink\n+     *            The {@link StreamConsumer} that will consume the stream\n+     * @param ref\n+     *            if <code>null</code> the repository's default branch, usually <code>master</code>,\n+     * @throws IOException\n+     *             The IO exception.\n+     */\n+    public void zipball(StreamConsumer sink, String ref) throws IOException {\n+        downloadArchive(\"zip\", Optional.ofNullable(ref), sink);\n+    }\n+\n+    /**\n+     * Streams a tar archive of the repository, optionally at a given <code>ref</code>.\n+     *\n+     * @param sink\n+     *            The {@link StreamConsumer} that will consume the stream\n+     * @param ref\n+     *            if <code>null</code> the repository's default branch, usually <code>master</code>,\n+     * @throws IOException\n+     *             The IO exception.\n+     */\n+    public void tarball(StreamConsumer sink, String ref) throws IOException {\n+        downloadArchive(\"tar\", Optional.ofNullable(ref), sink);\n+    }\n+\n+    /**\n+     * A functional interface, equivalent to {@link java.util.function.Consumer} but that allows throwing\n+     * {@link IOException}\n+     */\n+    @FunctionalInterface\n+    public interface StreamConsumer {\n+        void accept(InputStream stream) throws IOException;\n+    }\n+\n+    private void downloadArchive(String type, Optional<String> ref, StreamConsumer sink) throws IOException {\n+        requireNonNull(sink, \"Sink must not be null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyMTAzMw=="}, "originalCommit": {"oid": "bb48d55bd4f247ce137f514027a83d78f2e44d71"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d9aed90d6a24ba2d2b29af6cc98c6ca373331da", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/4d9aed90d6a24ba2d2b29af6cc98c6ca373331da", "committedDate": "2021-01-04T17:24:25Z", "message": "Merge branch 'master' into download-repository-archives"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b1f17654475e02288dcfda26f875676ba77c6a4", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/3b1f17654475e02288dcfda26f875676ba77c6a4", "committedDate": "2021-02-12T01:12:11Z", "message": "Merge remote-tracking branch 'upstream/master' into download-repository-archives"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "772a6c112bcb284bd7c16241d89b66b29f530dd3", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/772a6c112bcb284bd7c16241d89b66b29f530dd3", "committedDate": "2021-02-26T19:12:51Z", "message": "Remove consumers, use FunctionThrows"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk5ODk5Njg0", "url": "https://github.com/hub4j/github-api/pull/967#pullrequestreview-599899684", "createdAt": "2021-02-26T20:00:08Z", "commit": {"oid": "3b1f17654475e02288dcfda26f875676ba77c6a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "936ab499cedf0bbadf7b7efa6473d23fcee3df4c", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/936ab499cedf0bbadf7b7efa6473d23fcee3df4c", "committedDate": "2021-02-26T20:08:14Z", "message": "Formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2367e425408215745de1a24497b41d04d0b57fb3", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/2367e425408215745de1a24497b41d04d0b57fb3", "committedDate": "2021-02-26T20:00:40Z", "message": "Formatting"}, "afterCommit": {"oid": "936ab499cedf0bbadf7b7efa6473d23fcee3df4c", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/936ab499cedf0bbadf7b7efa6473d23fcee3df4c", "committedDate": "2021-02-26T20:08:14Z", "message": "Formatting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1580, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}