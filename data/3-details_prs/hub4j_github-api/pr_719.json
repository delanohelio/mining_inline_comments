{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMDAyMDU5", "number": 719, "title": "Remove a few long deprecated methods and fully annotate others", "bodyText": "Description\nThere were a few very old deprecated classes that were annoying me.  Like 3+ years deprecated.\nRemoved in this PR:\n\nDeleteToken\nGHIssue.Label\n\nBefore submitting a PR:\nWe love getting PRs, but we hate asking people for the same basic changes every time.\n\n Push your changes to a branch other than master. Create your PR from that branch.\n Add JavaDocs and other comments\n Write tests that run and pass in CI. See CONTRIBUTING.md for details on how to capture snapshot data.\n Run mvn -D enable-ci clean install site locally. This may reformat your code, commit those changes. If this command doesn't succeed, your change will not pass CI.", "createdAt": "2020-02-26T04:32:33Z", "url": "https://github.com/hub4j/github-api/pull/719", "merged": true, "mergeCommit": {"oid": "8b6cf554737fe6610935f6e9e76284f1d142a4c0"}, "closed": true, "closedAt": "2020-03-02T22:06:51Z", "author": {"login": "bitwiseman"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIe6YoAH2gAyMzgwMDAyMDU5OjFiNjNhNThlNjMxZTY5YTRmNDY5MWJlM2UyZTkzMDVjNjc4MTdjMTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJxpmLgFqTM2NzQwODQ5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1b63a58e631e69a4f4691be3e2e9305c67817c12", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/1b63a58e631e69a4f4691be3e2e9305c67817c12", "committedDate": "2020-02-27T17:38:24Z", "message": "Increase coverage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe4f45c2b05d503afda64fb717514f02950b9ac6", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/fe4f45c2b05d503afda64fb717514f02950b9ac6", "committedDate": "2020-02-27T17:38:50Z", "message": "Remove DeleteToken class the was never in github v3 api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0155d5aa39103f6e290aa4f44271be878c44dc61", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/0155d5aa39103f6e290aa4f44271be878c44dc61", "committedDate": "2020-02-27T17:39:03Z", "message": "Make HttpConnector a functional interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "944d92bbb408dc7be91fcbe539a21762c6e0491a", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/944d92bbb408dc7be91fcbe539a21762c6e0491a", "committedDate": "2020-02-27T17:40:03Z", "message": "Make more methods as deprecated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e5708d8d4db9c08e1e02b6c4310437b07bc7bff", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/5e5708d8d4db9c08e1e02b6c4310437b07bc7bff", "committedDate": "2020-02-27T18:16:48Z", "message": "Clean up GHPerson deprecated a bit more"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98fc6cf6473426b6e1317cd09eab83be5c2cab77", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/98fc6cf6473426b6e1317cd09eab83be5c2cab77", "committedDate": "2020-02-26T04:36:46Z", "message": "Fix formatting"}, "afterCommit": {"oid": "5e5708d8d4db9c08e1e02b6c4310437b07bc7bff", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/5e5708d8d4db9c08e1e02b6c4310437b07bc7bff", "committedDate": "2020-02-27T18:16:48Z", "message": "Clean up GHPerson deprecated a bit more"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1OTE2NDg4", "url": "https://github.com/hub4j/github-api/pull/719#pullrequestreview-365916488", "createdAt": "2020-02-27T18:57:43Z", "commit": {"oid": "5e5708d8d4db9c08e1e02b6c4310437b07bc7bff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDQwOTQ2", "url": "https://github.com/hub4j/github-api/pull/719#pullrequestreview-366040946", "createdAt": "2020-02-27T22:19:56Z", "commit": {"oid": "5e5708d8d4db9c08e1e02b6c4310437b07bc7bff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxOTo1N1rOFvjP2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoxOTo1N1rOFvjP2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNDg4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                // for backward compatibility with < 1.63, this collection needs to hold instances of Label, not GHLabel", "url": "https://github.com/hub4j/github-api/pull/719#discussion_r385404889", "createdAt": "2020-02-27T22:19:57Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHIssue.java", "diffHunk": "@@ -64,22 +64,14 @@\n     @SkipFromToString\n     protected String body;\n     // for backward compatibility with < 1.63, this collection needs to hold instances of Label, not GHLabel", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e5708d8d4db9c08e1e02b6c4310437b07bc7bff"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/56a51f18e7d73a7149aabac840008182c5d475a0", "committedDate": "2020-02-27T22:20:03Z", "message": "Update src/main/java/org/kohsuke/github/GHIssue.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDQxNTI1", "url": "https://github.com/hub4j/github-api/pull/719#pullrequestreview-366041525", "createdAt": "2020-02-27T22:21:04Z", "commit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyMTowNFrOFvjRzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyMTowNFrOFvjRzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNTM5MQ==", "bodyText": "v1.63 is 5 years ago.", "url": "https://github.com/hub4j/github-api/pull/719#discussion_r385405391", "createdAt": "2020-02-27T22:21:04Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHIssue.java", "diffHunk": "@@ -63,23 +63,14 @@\n     protected int comments;\n     @SkipFromToString\n     protected String body;\n-    // for backward compatibility with < 1.63, this collection needs to hold instances of Label, not GHLabel", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDQxOTg4", "url": "https://github.com/hub4j/github-api/pull/719#pullrequestreview-366041988", "createdAt": "2020-02-27T22:21:57Z", "commit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyMTo1N1rOFvjTLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyMTo1N1rOFvjTLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNTc0MQ==", "bodyText": "This is publicly visible, but not returned from any properties.  It exists in one spot (above).", "url": "https://github.com/hub4j/github-api/pull/719#discussion_r385405741", "createdAt": "2020-02-27T22:21:57Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHIssue.java", "diffHunk": "@@ -63,23 +63,14 @@\n     protected int comments;\n     @SkipFromToString\n     protected String body;\n-    // for backward compatibility with < 1.63, this collection needs to hold instances of Label, not GHLabel\n-    protected List<Label> labels;\n+    protected List<GHLabel> labels;\n     protected GHUser user;\n     protected String title, html_url;\n     protected GHIssue.PullRequest pull_request;\n     protected GHMilestone milestone;\n     protected GHUser closed_by;\n     protected boolean locked;\n \n-    /**\n-     * The type Label.\n-     *\n-     * @deprecated use {@link GHLabel}\n-     */\n-    public static class Label extends GHLabel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDQyMjc1", "url": "https://github.com/hub4j/github-api/pull/719#pullrequestreview-366042275", "createdAt": "2020-02-27T22:22:31Z", "commit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyMjozMVrOFvjUFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyMjozMVrOFvjUFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNTk3NA==", "bodyText": "Clean up to use even more of the existing code base.  Still behaves the same.", "url": "https://github.com/hub4j/github-api/pull/719#discussion_r385405974", "createdAt": "2020-02-27T22:22:31Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHPerson.java", "diffHunk": "@@ -115,31 +114,27 @@ protected synchronized void populate() throws IOException {\n      */\n     @Deprecated\n     public synchronized Iterable<List<GHRepository>> iterateRepositories(final int pageSize) {\n-        return new Iterable<List<GHRepository>>() {\n-            public Iterator<List<GHRepository>> iterator() {\n-                final Iterator<GHRepository[]> pager;\n-                try {\n-                    pager = GitHubPageIterator.create(root.getClient(),\n-                            GHRepository[].class,\n-                            root.createRequest().withUrlPath(\"users\", login, \"repos\").build(),\n-                            pageSize);\n-                } catch (MalformedURLException e) {\n-                    throw new GHException(\"Unable to build GitHub API URL\", e);\n+        return () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDQyNTEw", "url": "https://github.com/hub4j/github-api/pull/719#pullrequestreview-366042510", "createdAt": "2020-02-27T22:22:58Z", "commit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyMjo1OFrOFvjUzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyMjo1OFrOFvjUzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNjE1OQ==", "bodyText": "This always returns \"\" anyway.  So, let's be explicit about it.", "url": "https://github.com/hub4j/github-api/pull/719#discussion_r385406159", "createdAt": "2020-02-27T22:22:58Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHPerson.java", "diffHunk": "@@ -178,22 +173,18 @@ public GHRepository getRepository(String name) throws IOException {\n      * @return the gravatar id\n      * @deprecated No longer available in the v3 API.\n      */\n+    @Deprecated\n     public String getGravatarId() {\n-        return gravatar_id;\n+        return \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDQzMDA2", "url": "https://github.com/hub4j/github-api/pull/719#pullrequestreview-366043006", "createdAt": "2020-02-27T22:23:57Z", "commit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyMzo1OFrOFvjWcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyMzo1OFrOFvjWcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNjU3Nw==", "bodyText": "If this is null, it is still more meaningful that the \"\" returned from gravatar.", "url": "https://github.com/hub4j/github-api/pull/719#discussion_r385406577", "createdAt": "2020-02-27T22:23:58Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHPerson.java", "diffHunk": "@@ -178,22 +173,18 @@ public GHRepository getRepository(String name) throws IOException {\n      * @return the gravatar id\n      * @deprecated No longer available in the v3 API.\n      */\n+    @Deprecated\n     public String getGravatarId() {\n-        return gravatar_id;\n+        return \"\";\n     }\n \n     /**\n-     * Returns a string like 'https://secure.gravatar.com/avatar/0cb9832a01c22c083390f3c5dcb64105' that indicates the\n-     * avatar image URL.\n+     * Returns a string of the avatar image URL.\n      *\n      * @return the avatar url\n      */\n     public String getAvatarUrl() {\n-        if (avatar_url != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MDQzNDY0", "url": "https://github.com/hub4j/github-api/pull/719#pullrequestreview-366043464", "createdAt": "2020-02-27T22:24:52Z", "commit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyNDo1MlrOFvjX5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMjoyNDo1MlrOFvjX5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQwNjk0OQ==", "bodyText": "Found a way to do this without dynamic classes.", "url": "https://github.com/hub4j/github-api/pull/719#discussion_r385406949", "createdAt": "2020-02-27T22:24:52Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GitHubBuilder.java", "diffHunk": "@@ -396,11 +398,7 @@ public GitHubBuilder withRateLimitChecker(@Nonnull RateLimitChecker coreRateLimi\n      * @return the git hub builder\n      */\n     public GitHubBuilder withProxy(final Proxy p) {\n-        return withConnector(new ImpatientHttpConnector(new HttpConnector() {\n-            public HttpURLConnection connect(URL url) throws IOException {\n-                return (HttpURLConnection) url.openConnection(p);\n-            }\n-        }));\n+        return withConnector(new ImpatientHttpConnector(url -> (HttpURLConnection) url.openConnection(p)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba8d2a251fa78c1b28988c281e00c708c00652ed", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/ba8d2a251fa78c1b28988c281e00c708c00652ed", "committedDate": "2020-02-28T16:37:51Z", "message": "Merge branch 'master' into task/deprecated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b575134fccd19c6ead3225b18489b67b383afdb", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/5b575134fccd19c6ead3225b18489b67b383afdb", "committedDate": "2020-02-28T22:38:30Z", "message": "Merge branch 'master' into task/deprecated"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3Mjk4ODY2", "url": "https://github.com/hub4j/github-api/pull/719#pullrequestreview-367298866", "createdAt": "2020-03-02T15:41:10Z", "commit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTo0MToxMVrOFwkPZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTo1NjozNlrOFwk6dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ2OTczNA==", "bodyText": "Are these commented out intentionally?", "url": "https://github.com/hub4j/github-api/pull/719#discussion_r386469734", "createdAt": "2020-03-02T15:41:11Z", "author": {"login": "kshultzCB"}, "path": "src/test/java/org/kohsuke/github/AppTest.java", "diffHunk": "@@ -861,10 +862,27 @@ public void notifications() throws Exception {\n         for (GHThread t : gitHub.listNotifications().nonBlocking(true).read(true)) {\n             if (!found) {\n                 found = true;\n+                // both thread an unread are included\n+                assertThat(t.getTitle(), is(\"Create a Jenkinsfile for Librecores CI in mor1kx\"));\n+                assertThat(t.getLastReadAt(), notNullValue());\n+                assertThat(t.isRead(), equalTo(true));\n+\n                 t.markAsRead(); // test this by calling it once on old notfication\n             }\n-            assertNotNull(t.getTitle());\n-            assertNotNull(t.getReason());\n+            assertThat(t.getReason(), oneOf(\"subscribed\", \"mention\", \"review_requested\", \"comment\"));\n+            assertThat(t.getTitle(), notNullValue());\n+            assertThat(t.getLastCommentUrl(), notNullValue());\n+            assertThat(t.getRepository(), notNullValue());\n+            assertThat(t.getUpdatedAt(), notNullValue());\n+            assertThat(t.getType(), oneOf(\"Issue\", \"PullRequest\"));\n+\n+            // both thread an unread are included\n+            // assertThat(t.getLastReadAt(), notNullValue());\n+            // assertThat(t.isRead(), equalTo(true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3Nzg2OA==", "bodyText": "It took me a few eye blinks to see this \ud83d\udcaf", "url": "https://github.com/hub4j/github-api/pull/719#discussion_r386477868", "createdAt": "2020-03-02T15:52:48Z", "author": {"login": "kshultzCB"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -217,16 +219,6 @@ public String getHttpTransportUrl() {\n         return clone_url;\n     }\n \n-    /**\n-     * Git http transport url string.\n-     *\n-     * @return the string\n-     * @deprecated Typo of {@link #getHttpTransportUrl()}\n-     */\n-    public String gitHttpTransportUrl() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4MDc1Ng==", "bodyText": "I think this is a typo. It shows up again on 879. Probably meant to be this?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // both thread an unread are included\n          \n          \n            \n                            // both read and unread are included", "url": "https://github.com/hub4j/github-api/pull/719#discussion_r386480756", "createdAt": "2020-03-02T15:56:36Z", "author": {"login": "kshultzCB"}, "path": "src/test/java/org/kohsuke/github/AppTest.java", "diffHunk": "@@ -861,10 +862,27 @@ public void notifications() throws Exception {\n         for (GHThread t : gitHub.listNotifications().nonBlocking(true).read(true)) {\n             if (!found) {\n                 found = true;\n+                // both thread an unread are included", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56a51f18e7d73a7149aabac840008182c5d475a0"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75d95d844c6e787fe834393e07c2ca636ce3cea5", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/75d95d844c6e787fe834393e07c2ca636ce3cea5", "committedDate": "2020-03-02T16:41:21Z", "message": "Update src/test/java/org/kohsuke/github/AppTest.java\n\nCo-Authored-By: Karl Shultz <kshultz@cloudbees.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NDA4NDk5", "url": "https://github.com/hub4j/github-api/pull/719#pullrequestreview-367408499", "createdAt": "2020-03-02T18:02:11Z", "commit": {"oid": "75d95d844c6e787fe834393e07c2ca636ce3cea5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1685, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}