{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NDY1Nzg3", "number": 674, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxNzo1N1rODaP9-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMTo0NzoyNVrODaXbVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODUxMTkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/Requester.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxNzo1N1rOFhGQGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoxNzo1N1rOFhGQGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI0OTc1NQ==", "bodyText": "Make a configurable static for this and probably make it 500 millis to start?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                Thread.sleep(5000);\n          \n          \n            \n                                Thread.sleep(Requester.retryTimeoutMillis);", "url": "https://github.com/hub4j/github-api/pull/674#discussion_r370249755", "createdAt": "2020-01-23T17:17:57Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/Requester.java", "diffHunk": "@@ -902,8 +904,17 @@ private void setRequestMethod(HttpURLConnection connection) throws IOException {\n             // don't wrap exception in HttpException to preserve backward compatibility\n             throw e;\n         } catch (IOException e) {\n-            if (e instanceof SocketTimeoutException && timeouts > 0) {\n-                LOGGER.log(INFO, \"timed out accessing \" + uc.getURL() + \"; will try \" + timeouts + \" more time(s)\", e);\n+            if (((e instanceof SocketException && e.getCause() instanceof SocketTimeoutException)\n+                    || e instanceof SocketTimeoutException) && timeouts > 0) {\n+                LOGGER.log(INFO,\n+                        \"timed out accessing  \" + uc.getURL() + \". Sleeping 5 seconds before retrying... ; will try\"\n+                                + timeouts + \" more time(s)\",\n+                        e);\n+                try {\n+                    Thread.sleep(5000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f38ab36403166f2f4909c1d7d8970fd8519a412"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODUzMDkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/Requester.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoyNDoxMFrOFhGcHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzoyNDoxMFrOFhGcHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1MjgzMQ==", "bodyText": "This is also needed or the error just keeps happening.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return parse(type, instance, timeouts - 1);\n          \n          \n            \n                            uc = setupConnection(uc.getURL());\n          \n          \n            \n                            return parse(type, instance, timeouts - 1);", "url": "https://github.com/hub4j/github-api/pull/674#discussion_r370252831", "createdAt": "2020-01-23T17:24:10Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/Requester.java", "diffHunk": "@@ -902,8 +904,17 @@ private void setRequestMethod(HttpURLConnection connection) throws IOException {\n             // don't wrap exception in HttpException to preserve backward compatibility\n             throw e;\n         } catch (IOException e) {\n-            if (e instanceof SocketTimeoutException && timeouts > 0) {\n-                LOGGER.log(INFO, \"timed out accessing \" + uc.getURL() + \"; will try \" + timeouts + \" more time(s)\", e);\n+            if (((e instanceof SocketException && e.getCause() instanceof SocketTimeoutException)\n+                    || e instanceof SocketTimeoutException) && timeouts > 0) {\n+                LOGGER.log(INFO,\n+                        \"timed out accessing  \" + uc.getURL() + \". Sleeping 5 seconds before retrying... ; will try\"\n+                                + timeouts + \" more time(s)\",\n+                        e);\n+                try {\n+                    Thread.sleep(5000);\n+                } catch (InterruptedException _) {\n+                    throw (IOException) new InterruptedIOException().initCause(e);\n+                }\n                 return parse(type, instance, timeouts - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f38ab36403166f2f4909c1d7d8970fd8519a412"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTcyOTg2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/kohsuke/github/junit/GitHubWireMockRule.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMTo0NDozM1rOFhSAMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMTo0NDozM1rOFhSAMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ0MjI4OQ==", "bodyText": "I'd rather you do this in the test class. Override before and add this code there.", "url": "https://github.com/hub4j/github-api/pull/674#discussion_r370442289", "createdAt": "2020-01-24T01:44:33Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/junit/GitHubWireMockRule.java", "diffHunk": "@@ -87,6 +87,9 @@ protected void initializeServers() {\n     @Override\n     protected void before() {\n         super.before();\n+        this.apiServer()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTczMzk5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/Requester.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMTo0NzoyNVrOFhSCpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwMTo0NzoyNVrOFhSCpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ0MjkxNg==", "bodyText": "Cool thanks.  Take a look at #678. When you get a chance. You don't have to change this, just meant as an FYI.", "url": "https://github.com/hub4j/github-api/pull/674#discussion_r370442916", "createdAt": "2020-01-24T01:47:25Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/Requester.java", "diffHunk": "@@ -923,7 +939,11 @@ private void retryInvalidCached404Response() throws IOException {\n         // scenarios. If GitHub ever fixes their issue and/or begins providing accurate ETags to\n         // their 404 responses, this will result in at worst two requests being made for each 404\n         // responses. However, only the second request will count against rate limit.\n-        int responseCode = uc.getResponseCode();\n+        int responseCode = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9ebc9455ca2769f4c07fa697fcd0ee2bb8c7c45"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1841, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}