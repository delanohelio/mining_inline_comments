{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzI4NDg1", "number": 817, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMzoxNjozOVrOD9nzTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMToyNDo0N1rOD9-lfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTQxODM3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GitHubClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMzoxNjozOVrOGXOYkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMzoxNjozOVrOGXOYkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAwNjA5Ng==", "bodyText": "I don\u2019t think this statement is right anymore at least on recent versions from reading the docs,\nMy understanding is that it is available but there\u2019s a global flag for turning it off or on.\nHaving it off means that it will return a 404", "url": "https://github.com/hub4j/github-api/pull/817#discussion_r427006096", "createdAt": "2020-05-19T03:16:39Z", "author": {"login": "timja"}, "path": "src/main/java/org/kohsuke/github/GitHubClient.java", "diffHunk": "@@ -210,21 +210,31 @@ public boolean isAnonymous() {\n     /**\n      * Gets the current rate limit from the server.\n      *\n+     * For some versions of GitHub Enterprise, the {@code /rate_limit} endpoint returns a {@code 404 Not Found}. In\n+     * that, if {@link #lastRateLimit()} is not {@code null} and is not expired, it will be returned. Otherwise, a\n+     * placeholder {@link GHRateLimit} instance with {@link GHRateLimit.UnknownLimitRecord}s will be returned.\n+     *\n      * @return the rate limit\n      * @throws IOException\n      *             the io exception\n      */\n+    @Nonnull\n     public GHRateLimit getRateLimit() throws IOException {\n-        GHRateLimit rateLimit;\n+        GHRateLimit result;\n         try {\n-            rateLimit = fetch(JsonRateLimit.class, \"/rate_limit\").resources;\n+            result = fetch(JsonRateLimit.class, \"/rate_limit\").resources;\n         } catch (FileNotFoundException e) {\n-            // GitHub Enterprise doesn't have the rate limit\n-            // return a default rate limit that\n-            rateLimit = GHRateLimit.Unknown();\n+            // GitHub Enterprise doesn't have the rate_limit endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38aa99a0630fac9f6cadebf69cecb23932340d7a"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MzE1MTMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GitHubClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMToyNDo0N1rOGXzLwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMToyNDo0N1rOGXzLwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYwOTAyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // GitHub Enterprise doesn't have the rate_limit endpoint\n          \n          \n            \n                        // For some versions of GitHub Enterprise, the rate_limit endpoint returns a 404.", "url": "https://github.com/hub4j/github-api/pull/817#discussion_r427609026", "createdAt": "2020-05-19T21:24:47Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GitHubClient.java", "diffHunk": "@@ -210,21 +210,31 @@ public boolean isAnonymous() {\n     /**\n      * Gets the current rate limit from the server.\n      *\n+     * For some versions of GitHub Enterprise, the {@code /rate_limit} endpoint returns a {@code 404 Not Found}. In\n+     * that, if {@link #lastRateLimit()} is not {@code null} and is not expired, it will be returned. Otherwise, a\n+     * placeholder {@link GHRateLimit} instance with {@link GHRateLimit.UnknownLimitRecord}s will be returned.\n+     *\n      * @return the rate limit\n      * @throws IOException\n      *             the io exception\n      */\n+    @Nonnull\n     public GHRateLimit getRateLimit() throws IOException {\n-        GHRateLimit rateLimit;\n+        GHRateLimit result;\n         try {\n-            rateLimit = fetch(JsonRateLimit.class, \"/rate_limit\").resources;\n+            result = fetch(JsonRateLimit.class, \"/rate_limit\").resources;\n         } catch (FileNotFoundException e) {\n-            // GitHub Enterprise doesn't have the rate limit\n-            // return a default rate limit that\n-            rateLimit = GHRateLimit.Unknown();\n+            // GitHub Enterprise doesn't have the rate_limit endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38aa99a0630fac9f6cadebf69cecb23932340d7a"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1792, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}