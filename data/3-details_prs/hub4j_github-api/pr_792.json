{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NTI1MTU2", "number": 792, "title": "Fix Gist getId() and deleteFile(), add getGistId()", "bodyText": "Fixes #682\nAlso add deleteFile() to GHGist\n@martinvanzijl @Aulig\nBefore submitting a PR:\nWe love getting PRs, but we hate asking people for the same basic changes every time.\n\n Push your changes to a branch other than master. Create your PR from that branch.\n Add JavaDocs and other comments\n Write tests that run and pass in CI. See CONTRIBUTING.md for details on how to capture snapshot data.\n Run mvn clean compile locally. This may reformat your code, commit those changes.\n Run mvn -D enable-ci clean install site locally. If this command doesn't succeed, your change will not pass CI.", "createdAt": "2020-04-22T20:20:01Z", "url": "https://github.com/hub4j/github-api/pull/792", "merged": true, "mergeCommit": {"oid": "115527a21a66f07c52e7bef629366cfa9f157c64"}, "closed": true, "closedAt": "2020-04-27T20:37:35Z", "author": {"login": "bitwiseman"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaOcnBABqjMyNjIzNTQzMzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcb1MbjgH2gAyNDA3NTI1MTU2OmVmZjRmNGY2MDFkOTc5YTNmMzdhMjhkMmIyNDJiMjVlNjNkNzAwYWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f91f44424e8630563fbfafc56d0cf73c62964870", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/f91f44424e8630563fbfafc56d0cf73c62964870", "committedDate": "2020-04-22T20:16:45Z", "message": "Fix Gist getId() and add getGistId()\n\nFixes #682"}, "afterCommit": {"oid": "09977ba71977f7bd4468ff0062f5c00bd8263445", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/09977ba71977f7bd4468ff0062f5c00bd8263445", "committedDate": "2020-04-22T20:37:52Z", "message": "Fix Gist getId() and add getGistId()\n\nFixes #682"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NTI0OTky", "url": "https://github.com/hub4j/github-api/pull/792#pullrequestreview-399524992", "createdAt": "2020-04-23T22:37:02Z", "commit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMjozNzowMlrOGK-6QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMzo1ODo1OFrOGLA3tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE2OTY2NA==", "bodyText": "\"Gitthat\" typo?", "url": "https://github.com/hub4j/github-api/pull/792#discussion_r414169664", "createdAt": "2020-04-23T22:37:02Z", "author": {"login": "martinvanzijl"}, "path": "src/main/java/org/kohsuke/github/GHGist.java", "diffHunk": "@@ -50,6 +50,27 @@ private GHGist(@JacksonInject GitHub root,\n         this.owner = root.getUser(owner);\n     }\n \n+    /**\n+     * Gets the numeric id, if possible. If id is not numeric this will throw a runtime {@link NumberFormatException}.\n+     *\n+     * @return id of the Gitthat owns this Gist.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3MTAwOQ==", "bodyText": "Should this have a justification = \"...\" setting?", "url": "https://github.com/hub4j/github-api/pull/792#discussion_r414171009", "createdAt": "2020-04-23T22:40:18Z", "author": {"login": "martinvanzijl"}, "path": "src/main/java/org/kohsuke/github/GHGistUpdater.java", "diffHunk": "@@ -12,13 +17,31 @@\n public class GHGistUpdater {\n     private final GHGist base;\n     private final Requester builder;\n-    LinkedHashMap<String, Object> files;\n+    private final GistUpdate updateRecord;\n+\n+    @SuppressFBWarnings(\"URF_UNREAD_FIELD\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3MzAwNg==", "bodyText": "Needs justification?", "url": "https://github.com/hub4j/github-api/pull/792#discussion_r414173006", "createdAt": "2020-04-23T22:44:58Z", "author": {"login": "martinvanzijl"}, "path": "src/main/java/org/kohsuke/github/GitHubHttpUrlConnectionClient.java", "diffHunk": "@@ -126,6 +127,7 @@ static HttpURLConnection setupConnection(@Nonnull GitHubClient client, @Nonnull\n         /**\n          * Set up the request parameters or POST payload.\n          */\n+        @SuppressFBWarnings(\"RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE3MzkwNA==", "bodyText": "Do the unit tests include both null and not null scenarios?", "url": "https://github.com/hub4j/github-api/pull/792#discussion_r414173904", "createdAt": "2020-04-23T22:47:05Z", "author": {"login": "martinvanzijl"}, "path": "src/main/java/org/kohsuke/github/GitHubHttpUrlConnectionClient.java", "diffHunk": "@@ -137,24 +139,28 @@ private static void buildRequest(GitHubRequest request, HttpURLConnection connec\n             if (request.inBody()) {\n                 connection.setDoOutput(true);\n \n-                try (InputStream body = request.body()) {\n-                    if (body != null) {\n+                Object body = request.body();\n+                if (body instanceof InputStream) {\n+                    try (InputStream stream = (InputStream) body) {\n                         connection.setRequestProperty(\"Content-type\",\n                                 defaultString(request.contentType(), \"application/x-www-form-urlencoded\"));\n                         byte[] bytes = new byte[32768];\n                         int read;\n-                        while ((read = body.read(bytes)) != -1) {\n+                        while ((read = stream.read(bytes)) != -1) {\n                             connection.getOutputStream().write(bytes, 0, read);\n                         }\n-                    } else {\n-                        connection.setRequestProperty(\"Content-type\",\n-                                defaultString(request.contentType(), \"application/json\"));\n+                    }\n+                } else {\n+                    connection.setRequestProperty(\"Content-type\",\n+                            defaultString(request.contentType(), \"application/json\"));\n+                    if (body == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE5MTcyOA==", "bodyText": "I would mention in the comments that the ID for a Gist can be non-numeric, e.g. \"aa5a315d61ae9438b18d\" - that is why we have special behaviour for getId() in this class.", "url": "https://github.com/hub4j/github-api/pull/792#discussion_r414191728", "createdAt": "2020-04-23T23:32:24Z", "author": {"login": "martinvanzijl"}, "path": "src/main/java/org/kohsuke/github/GHGist.java", "diffHunk": "@@ -50,6 +50,27 @@ private GHGist(@JacksonInject GitHub root,\n         this.owner = root.getUser(owner);\n     }\n \n+    /**\n+     * Gets the numeric id, if possible. If id is not numeric this will throw a runtime {@link NumberFormatException}.\n+     *\n+     * @return id of the Gitthat owns this Gist.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE2OTY2NA=="}, "originalCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE5NTUyNw==", "bodyText": "Maybe mention the purpose of this class in a comment, e.g. a helper class to update the Gist, since it is more convenient than using a LinkedHashMap, etc.", "url": "https://github.com/hub4j/github-api/pull/792#discussion_r414195527", "createdAt": "2020-04-23T23:41:57Z", "author": {"login": "martinvanzijl"}, "path": "src/main/java/org/kohsuke/github/GHGistUpdater.java", "diffHunk": "@@ -12,13 +17,31 @@\n public class GHGistUpdater {\n     private final GHGist base;\n     private final Requester builder;\n-    LinkedHashMap<String, Object> files;\n+    private final GistUpdate updateRecord;\n+\n+    @SuppressFBWarnings(\"URF_UNREAD_FIELD\")\n+    private static class GistUpdate {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE5NjU3MQ==", "bodyText": "Maybe mention the purpose of this class in a comment.", "url": "https://github.com/hub4j/github-api/pull/792#discussion_r414196571", "createdAt": "2020-04-23T23:44:50Z", "author": {"login": "martinvanzijl"}, "path": "src/main/java/org/kohsuke/github/GHGistUpdater.java", "diffHunk": "@@ -12,13 +17,31 @@\n public class GHGistUpdater {\n     private final GHGist base;\n     private final Requester builder;\n-    LinkedHashMap<String, Object> files;\n+    private final GistUpdate updateRecord;\n+\n+    @SuppressFBWarnings(\"URF_UNREAD_FIELD\")\n+    private static class GistUpdate {\n+\n+        @JsonInclude(JsonInclude.Include.NON_NULL)\n+        String description = null;\n+\n+        @JsonInclude\n+        Map<String, GistFileUpdate> files = new HashMap<>();\n+    }\n+\n+    @SuppressFBWarnings(\"URF_UNREAD_FIELD\")\n+    private static class GistFileUpdate {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE5ODM1Ng==", "bodyText": "Maybe mention what is the expected final type/content of \"body\"?", "url": "https://github.com/hub4j/github-api/pull/792#discussion_r414198356", "createdAt": "2020-04-23T23:49:28Z", "author": {"login": "martinvanzijl"}, "path": "src/main/java/org/kohsuke/github/GitHubRequest.java", "diffHunk": "@@ -496,7 +496,19 @@ public B with(String key, Map<?, ?> value) {\n          *            the body\n          * @return the request builder\n          */\n-        public B with(@WillClose /* later */ InputStream body) {\n+        public B withBodyStream(@WillClose /* later */ InputStream body) {\n+            this.body = body;\n+            return (B) this;\n+        }\n+\n+        /**\n+         * With requester.\n+         *\n+         * @param body\n+         *            the body", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE5OTA0Ng==", "bodyText": "Would this cast ever fail? I.e. do we need the try? If so, is a catch required?", "url": "https://github.com/hub4j/github-api/pull/792#discussion_r414199046", "createdAt": "2020-04-23T23:51:28Z", "author": {"login": "martinvanzijl"}, "path": "src/main/java/org/kohsuke/github/GitHubHttpUrlConnectionClient.java", "diffHunk": "@@ -137,24 +139,28 @@ private static void buildRequest(GitHubRequest request, HttpURLConnection connec\n             if (request.inBody()) {\n                 connection.setDoOutput(true);\n \n-                try (InputStream body = request.body()) {\n-                    if (body != null) {\n+                Object body = request.body();\n+                if (body instanceof InputStream) {\n+                    try (InputStream stream = (InputStream) body) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDE5OTYyMA==", "bodyText": "Loses some clarity if it is just \"Object\" instead of \"InputStream\".", "url": "https://github.com/hub4j/github-api/pull/792#discussion_r414199620", "createdAt": "2020-04-23T23:53:08Z", "author": {"login": "martinvanzijl"}, "path": "src/main/java/org/kohsuke/github/GitHubRequest.java", "diffHunk": "@@ -45,7 +45,7 @@\n     private final String apiUrl;\n     private final String urlPath;\n     private final String method;\n-    private final InputStream body;\n+    private final Object body;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIwMDM5NQ==", "bodyText": "Could it break existing client code to introduce a possible exception?\nMind you, if clients are currently using this method they are probably getting an incorrect result, anyhow.", "url": "https://github.com/hub4j/github-api/pull/792#discussion_r414200395", "createdAt": "2020-04-23T23:55:15Z", "author": {"login": "martinvanzijl"}, "path": "src/main/java/org/kohsuke/github/GHGist.java", "diffHunk": "@@ -50,6 +50,27 @@ private GHGist(@JacksonInject GitHub root,\n         this.owner = root.getUser(owner);\n     }\n \n+    /**\n+     * Gets the numeric id, if possible. If id is not numeric this will throw a runtime {@link NumberFormatException}.\n+     *\n+     * @return id of the Gitthat owns this Gist.\n+     * @deprecated Use {@link #getGistId()} instead.\n+     */\n+    @Deprecated\n+    @Override\n+    public long getId() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIwMTc4MA==", "bodyText": "Javadoc for method?", "url": "https://github.com/hub4j/github-api/pull/792#discussion_r414201780", "createdAt": "2020-04-23T23:58:58Z", "author": {"login": "martinvanzijl"}, "path": "src/main/java/org/kohsuke/github/GHGistUpdater.java", "diffHunk": "@@ -70,11 +93,43 @@ public GHGistUpdater renameFile(String fileName, String newFileName) throws IOEx\n      * @throws IOException\n      *             the io exception\n      */\n-    public GHGistUpdater updateFile(String fileName, String content) throws IOException {\n-        files.put(fileName, Collections.singletonMap(\"content\", content));\n+    public GHGistUpdater updateFile(@Nonnull String fileName, @Nonnull String content) throws IOException {\n+        GistFileUpdate file = getGistFileUpdate(fileName);\n+        file.content = content;\n         return this;\n     }\n \n+    /**\n+     * Update file name and content\n+     *\n+     * @param fileName\n+     *            the file name\n+     * @param newFileName\n+     *            the new file name\n+     * @param content\n+     *            the content\n+     * @return the gh gist updater\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public GHGistUpdater updateFile(@Nonnull String fileName, @Nonnull String newFileName, @Nonnull String content)\n+            throws IOException {\n+        GistFileUpdate file = getGistFileUpdate(fileName);\n+        file.filename = newFileName;\n+        file.content = content;\n+        return this;\n+    }\n+\n+    @Nonnull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba"}, "originalPosition": 125}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44dcbe773d0e4c14b864d84866e1ba632e1cd977", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/44dcbe773d0e4c14b864d84866e1ba632e1cd977", "committedDate": "2020-04-26T03:16:58Z", "message": "Fix Gist getId() and add getGistId()\n\nFixes #682"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/eb05ec8ae9e26ad73c7eb50bb02b82cdeec8d4ba", "committedDate": "2020-04-22T22:52:54Z", "message": "Add deleteFile() to GHGist\n\nRelated to #484 and #466"}, "afterCommit": {"oid": "4b71a74a3fe638803c7c05140a81985eb154bf5b", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/4b71a74a3fe638803c7c05140a81985eb154bf5b", "committedDate": "2020-04-26T03:40:14Z", "message": "Add deleteFile() to GHGist\n\nRelated to #466 and #484"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60c3522a6e0842f1b20e504a35198f2e113b0c93", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/60c3522a6e0842f1b20e504a35198f2e113b0c93", "committedDate": "2020-04-27T16:54:37Z", "message": "Merge branch 'master' into issue/682"}, "afterCommit": {"oid": "eab3b393a8b68019adffc55c48da83de0694798c", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/eab3b393a8b68019adffc55c48da83de0694798c", "committedDate": "2020-04-27T17:24:30Z", "message": "Add deleteFile() to GHGist\n\nRelated to #466 and #484"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16e0099a0d8bfc4a4ecfe10556ad0a22abc587c2", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/16e0099a0d8bfc4a4ecfe10556ad0a22abc587c2", "committedDate": "2020-04-27T17:44:25Z", "message": "Add deleteFile() to GHGist\n\nRelated to #466 and #484"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eab3b393a8b68019adffc55c48da83de0694798c", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/eab3b393a8b68019adffc55c48da83de0694798c", "committedDate": "2020-04-27T17:24:30Z", "message": "Add deleteFile() to GHGist\n\nRelated to #466 and #484"}, "afterCommit": {"oid": "16e0099a0d8bfc4a4ecfe10556ad0a22abc587c2", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/16e0099a0d8bfc4a4ecfe10556ad0a22abc587c2", "committedDate": "2020-04-27T17:44:25Z", "message": "Add deleteFile() to GHGist\n\nRelated to #466 and #484"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eff4f4f601d979a3f37a28d2b242b25e63d700ae", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/eff4f4f601d979a3f37a28d2b242b25e63d700ae", "committedDate": "2020-04-27T20:20:35Z", "message": "Merge branch 'master' into issue/682"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1739, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}