{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5Mzc2Mjkz", "number": 977, "title": "Include assets directly in GHRelease", "bodyText": "Description\nResolves #528\nInstead of doing a separate request to fetch the assets associated with\na release this keeps a local list of the assets that are part of the\nlist releases endpoint.\nSee https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#list-releases\nThe first commit c74fbbe expectedly fails at\n[ERROR] Failures:\n[ERROR]   LifecycleTest.testCreateRepository:39->uploadAsset:60->Assert.assertEquals:633->Assert.assertEquals:647->Assert.failNotEquals:835->Assert.fail:89 expected:<1> but was:<0>\n\nas the call to release.getAssets() not returns the cached content instead of doing another request.\n\n  \n    \n      github-api/src/test/java/org/kohsuke/github/LifecycleTest.java\n    \n    \n        Lines 56 to 64\n      in\n      3a11b7c\n    \n    \n    \n    \n\n        \n          \n           private GHAsset uploadAsset(GHRelease release) throws IOException { \n        \n\n        \n          \n               GHAsset asset = release.uploadAsset(new File(\"LICENSE.txt\"), \"application/text\"); \n        \n\n        \n          \n               assertNotNull(asset); \n        \n\n        \n          \n               List<GHAsset> assets = release.getAssets(); \n        \n\n        \n          \n               assertEquals(1, assets.size()); \n        \n\n        \n          \n               assertEquals(\"LICENSE.txt\", assets.get(0).getName()); \n        \n\n        \n          \n            \n        \n\n        \n          \n               return asset; \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nTherefore, the second commit d881bf6 brings back the previous functionality as fetchAssets(). I don't know a better name for this, and I also don't know whether this should be an option or not.\nThe life cycle tests use the feature that retrieving the assets from a release actually does a roundtrip to Github and sends another request. This indicates that re-purposing getAssets() to be the cached access might cause problems on consumers that potentially rely on this assumption, too.", "createdAt": "2020-11-11T18:29:07Z", "url": "https://github.com/hub4j/github-api/pull/977", "merged": true, "mergeCommit": {"oid": "78f533bbfc08957587141d701fd07fd1640219d1"}, "closed": true, "closedAt": "2020-11-18T20:46:12Z", "author": {"login": "skaldarnar"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbiGC9AH2gAyNTE5Mzc2MjkzOmM3NGZiYmUxZmQ0MjkxMjYwZmEzOTA5MjUzN2Y2ZjE5MDVkZDU1NGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdd0bYygFqTUzMzg2MTMwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c74fbbe1fd4291260fa39092537f6f1905dd554e", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/hub4j/github-api/commit/c74fbbe1fd4291260fa39092537f6f1905dd554e", "committedDate": "2020-11-11T18:16:34Z", "message": "Include assets directly in GHRelease\n\nResolves #528\n\nInstead of doing a separate request to fetch the assets associated with\na release this keeps a local list of the assets that are part of the\nlist releases endpoint.\n\nSee https://docs.github.com/en/free-pro-team@latest/rest/reference/repos#list-releases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d881bf6504fede31441345bd40a2614f4a56e8bc", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/hub4j/github-api/commit/d881bf6504fede31441345bd40a2614f4a56e8bc", "committedDate": "2020-11-11T18:49:58Z", "message": "Bring back previous semantic of `getAssets()` as `fetchAssets()`\n\nI don't know a better name for this, and I also don't know whether this\nshould be an option or not.\nThe life cycle tests use the feature that retrieving the assets from a\nrelease actually does a roundtrip to Github and sends another request.\nThis indicates that re-purposing `getAssets()` to be the cached access\nmight cause problems on consumers that potentially rely on this\nassumption, too."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxOTgxOTg3", "url": "https://github.com/hub4j/github-api/pull/977#pullrequestreview-531981987", "createdAt": "2020-11-17T02:44:37Z", "commit": {"oid": "d881bf6504fede31441345bd40a2614f4a56e8bc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98b067937a62b91e58631d303ba56266a8baf74b", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/hub4j/github-api/commit/98b067937a62b91e58631d303ba56266a8baf74b", "committedDate": "2020-11-17T16:16:44Z", "message": "Make changes backwards compatible\n\nAdd '@Deprecation' and '@Preview' annotations to make the changes\nbackwards compatible and prepare for a transition to the cached behavior\nas default.\nThis explicitly leaves the variant for re-fetching assets under a\ndifferent name."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNTQ1NTgy", "url": "https://github.com/hub4j/github-api/pull/977#pullrequestreview-532545582", "createdAt": "2020-11-17T16:20:59Z", "commit": {"oid": "98b067937a62b91e58631d303ba56266a8baf74b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjoyMDo1OVrOH09bSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjoyMDo1OVrOH09bSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5NDQxMA==", "bodyText": "I left this in as I think this is a quite handy featuer to have (easily run queries to be up to date, if required). If you would rather see this removed please let me know. In that case, the test cases should also be revisitied to cover the same use case with just the new, cached behavior.", "url": "https://github.com/hub4j/github-api/pull/977#discussion_r525294410", "createdAt": "2020-11-17T16:20:59Z", "author": {"login": "skaldarnar"}, "path": "src/main/java/org/kohsuke/github/GHRelease.java", "diffHunk": "@@ -249,15 +251,44 @@ public GHAsset uploadAsset(String filename, InputStream stream, String contentTy\n     }\n \n     /**\n-     * Gets assets.\n+     * Get the cached assets.\n+     *\n+     * @return the assets\n+     *\n+     * @deprecated This should be the default behavior of {@link #getAssets()} in a future release. This method is\n+     *             introduced in addition to enable a transition to using cached asset information while keeping the\n+     *             existing logic in place for backwards compatibility.\n+     */\n+    @Deprecated\n+    @Preview\n+    public List<GHAsset> getCachedAssets() {\n+        return assets;\n+    }\n+\n+    /**\n+     * Re-fetch the assets of this release.\n      *\n      * @return the assets\n      * @throws IOException\n      *             the io exception\n+     * @deprecated The behavior of this method will change in a future release. It will then provide cached assets as\n+     *             provided by {@link #getCachedAssets()}. Use {@link #fetchAssets()} instead to fetch up-to-date\n+     *             information of assets.\n      */\n+    @Deprecated\n     public List<GHAsset> getAssets() throws IOException {\n-        Requester builder = owner.root.createRequest();\n+        return fetchAssets();\n+    }\n \n+    /**\n+     * Re-fetch the assets of this release.\n+     *\n+     * @return the assets\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public List<GHAsset> fetchAssets() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98b067937a62b91e58631d303ba56266a8baf74b"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNjc0NTc3", "url": "https://github.com/hub4j/github-api/pull/977#pullrequestreview-532674577", "createdAt": "2020-11-17T18:35:23Z", "commit": {"oid": "98b067937a62b91e58631d303ba56266a8baf74b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODozNToyNFrOH1Dk8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTowMDozNVrOH1EjvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM5NTE4NQ==", "bodyText": "This seems strange.  If the asset was cached in the release before deletion, it should be there after was well - that cache shouldn't change.   Perhaps add an assert that the asset if present in getCachedAssets() before deletion?", "url": "https://github.com/hub4j/github-api/pull/977#discussion_r525395185", "createdAt": "2020-11-17T18:35:24Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/LifecycleTest.java", "diffHunk": "@@ -45,18 +45,20 @@ public void testCreateRepository() throws IOException {\n \n     private void updateAsset(GHRelease release, GHAsset asset) throws IOException {\n         asset.setLabel(\"test label\");\n-        assertEquals(\"test label\", release.getAssets().get(0).getLabel());\n+        assertEquals(\"test label\", release.fetchAssets().get(0).getLabel());\n     }\n \n     private void deleteAsset(GHRelease release, GHAsset asset) throws IOException {\n         asset.delete();\n-        assertEquals(0, release.getAssets().size());\n+        assertEquals(0, release.getCachedAssets().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98b067937a62b91e58631d303ba56266a8baf74b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwNDAyMw==", "bodyText": "This seems reasonable. But since we're fetching, let's return a PagedIterable for more flexibility. This also means it makes sense to use the list* verb like we do on all other methods that return PagedIterable.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public List<GHAsset> fetchAssets() throws IOException {\n          \n          \n            \n                    public PagedIterable<GHAsset> listAssets() throws IOException {", "url": "https://github.com/hub4j/github-api/pull/977#discussion_r525404023", "createdAt": "2020-11-17T18:49:13Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRelease.java", "diffHunk": "@@ -249,15 +251,44 @@ public GHAsset uploadAsset(String filename, InputStream stream, String contentTy\n     }\n \n     /**\n-     * Gets assets.\n+     * Get the cached assets.\n+     *\n+     * @return the assets\n+     *\n+     * @deprecated This should be the default behavior of {@link #getAssets()} in a future release. This method is\n+     *             introduced in addition to enable a transition to using cached asset information while keeping the\n+     *             existing logic in place for backwards compatibility.\n+     */\n+    @Deprecated\n+    @Preview\n+    public List<GHAsset> getCachedAssets() {\n+        return assets;\n+    }\n+\n+    /**\n+     * Re-fetch the assets of this release.\n      *\n      * @return the assets\n      * @throws IOException\n      *             the io exception\n+     * @deprecated The behavior of this method will change in a future release. It will then provide cached assets as\n+     *             provided by {@link #getCachedAssets()}. Use {@link #fetchAssets()} instead to fetch up-to-date\n+     *             information of assets.\n      */\n+    @Deprecated\n     public List<GHAsset> getAssets() throws IOException {\n-        Requester builder = owner.root.createRequest();\n+        return fetchAssets();\n+    }\n \n+    /**\n+     * Re-fetch the assets of this release.\n+     *\n+     * @return the assets\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public List<GHAsset> fetchAssets() throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5NDQxMA=="}, "originalCommit": {"oid": "98b067937a62b91e58631d303ba56266a8baf74b"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQwOTMwMA==", "bodyText": "API design question for you: Thinking about it a bit more, what do you think about using a bare property names for field access?  I don't think this needs changing for this change, but I'm thinking about what this should look like in v2.\n    public List<GHAsset> assets() {", "url": "https://github.com/hub4j/github-api/pull/977#discussion_r525409300", "createdAt": "2020-11-17T18:57:25Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRelease.java", "diffHunk": "@@ -249,15 +251,44 @@ public GHAsset uploadAsset(String filename, InputStream stream, String contentTy\n     }\n \n     /**\n-     * Gets assets.\n+     * Get the cached assets.\n+     *\n+     * @return the assets\n+     *\n+     * @deprecated This should be the default behavior of {@link #getAssets()} in a future release. This method is\n+     *             introduced in addition to enable a transition to using cached asset information while keeping the\n+     *             existing logic in place for backwards compatibility.\n+     */\n+    @Deprecated\n+    @Preview\n+    public List<GHAsset> getCachedAssets() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98b067937a62b91e58631d303ba56266a8baf74b"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQxMDA2OA==", "bodyText": "Given we change the name and return type of fetchAssets():\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return fetchAssets();\n          \n          \n            \n                    return listAssets().toList();", "url": "https://github.com/hub4j/github-api/pull/977#discussion_r525410068", "createdAt": "2020-11-17T18:58:40Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRelease.java", "diffHunk": "@@ -249,15 +251,44 @@ public GHAsset uploadAsset(String filename, InputStream stream, String contentTy\n     }\n \n     /**\n-     * Gets assets.\n+     * Get the cached assets.\n+     *\n+     * @return the assets\n+     *\n+     * @deprecated This should be the default behavior of {@link #getAssets()} in a future release. This method is\n+     *             introduced in addition to enable a transition to using cached asset information while keeping the\n+     *             existing logic in place for backwards compatibility.\n+     */\n+    @Deprecated\n+    @Preview\n+    public List<GHAsset> getCachedAssets() {\n+        return assets;\n+    }\n+\n+    /**\n+     * Re-fetch the assets of this release.\n      *\n      * @return the assets\n      * @throws IOException\n      *             the io exception\n+     * @deprecated The behavior of this method will change in a future release. It will then provide cached assets as\n+     *             provided by {@link #getCachedAssets()}. Use {@link #fetchAssets()} instead to fetch up-to-date\n+     *             information of assets.\n      */\n+    @Deprecated\n     public List<GHAsset> getAssets() throws IOException {\n-        Requester builder = owner.root.createRequest();\n+        return fetchAssets();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98b067937a62b91e58631d303ba56266a8baf74b"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQxMTI2MQ==", "bodyText": "Keep the test pointing to the deprecated method since it wraps the new method and we want to show the behavior hasn't changed.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(\"test label\", release.fetchAssets().get(0).getLabel());\n          \n          \n            \n                    assertEquals(\"test label\", release.getAssets().get(0).getLabel());", "url": "https://github.com/hub4j/github-api/pull/977#discussion_r525411261", "createdAt": "2020-11-17T19:00:35Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/LifecycleTest.java", "diffHunk": "@@ -45,18 +45,20 @@ public void testCreateRepository() throws IOException {\n \n     private void updateAsset(GHRelease release, GHAsset asset) throws IOException {\n         asset.setLabel(\"test label\");\n-        assertEquals(\"test label\", release.getAssets().get(0).getLabel());\n+        assertEquals(\"test label\", release.fetchAssets().get(0).getLabel());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98b067937a62b91e58631d303ba56266a8baf74b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2676ef2b7379d9ced9d57535efcd3706252d3ddb", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/hub4j/github-api/commit/2676ef2b7379d9ced9d57535efcd3706252d3ddb", "committedDate": "2020-11-18T18:27:31Z", "message": "rename 'fetchAssets' to 'listAssets' and return PagedIterable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68a82be6c43ab42018a147ac8e721c4cd3979452", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/hub4j/github-api/commit/68a82be6c43ab42018a147ac8e721c4cd3979452", "committedDate": "2020-11-18T18:28:27Z", "message": "rename 'getCachedAssets' to 'assets' (bare property name as getter))"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d796d1f791a1de3013ec7d77595455cad258a00", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/hub4j/github-api/commit/5d796d1f791a1de3013ec7d77595455cad258a00", "committedDate": "2020-11-18T20:24:58Z", "message": "revert unwanted assertion change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79c7dd9ecfe6d80a51cde5d8573fda08ed8ade05", "author": {"user": {"login": "skaldarnar", "name": "Tobias Nett"}}, "url": "https://github.com/hub4j/github-api/commit/79c7dd9ecfe6d80a51cde5d8573fda08ed8ade05", "committedDate": "2020-11-18T20:31:42Z", "message": "fix formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODYxMzA5", "url": "https://github.com/hub4j/github-api/pull/977#pullrequestreview-533861309", "createdAt": "2020-11-18T20:46:01Z", "commit": {"oid": "79c7dd9ecfe6d80a51cde5d8573fda08ed8ade05"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1584, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}