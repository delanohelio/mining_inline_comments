{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNjIxMzYz", "number": 876, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMToyOTo0MlrOELDwXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMToyOTo0MlrOELDwXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDMxMzI1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/kohsuke/github/GHContentIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMToyOTo0MlrOGsdixw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMDowNzo0M1rOGsrVlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3NDU2Nw==", "bodyText": "There are ways to do this but they are inefficient/costly.", "url": "https://github.com/hub4j/github-api/pull/876#discussion_r449274567", "createdAt": "2020-07-02T21:29:42Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHContentIntegrationTest.java", "diffHunk": "@@ -170,4 +171,25 @@ public void testGetFileContentWithNonAsciiPath() throws Exception {\n         final GHContent fileContent2 = repo.getFileContent(fileContent.getPath());\n         assertThat(IOUtils.readLines(fileContent2.read(), StandardCharsets.UTF_8), hasItems(\"test\"));\n     }\n+\n+    @Test\n+    public void testGetFileContentWithSymlink() throws Exception {\n+        final GHRepository repo = gitHub.getRepository(\"hub4j-test-org/GHContentIntegrationTest\");\n+\n+        final GHContent fileContent = repo.getFileContent(\"ghcontent-ro/a-symlink-to-a-file\");\n+        // for whatever reason GH says this is a file :-o\n+        assertThat(IOUtils.toString(fileContent.read(), StandardCharsets.UTF_8), is(\"thanks for reading me\\n\"));\n+\n+        final GHContent dirContent = repo.getFileContent(\"ghcontent-ro/a-symlink-to-a-dir\");\n+        // but symlinks to directories are symlinks!\n+        assertThat(dirContent, allOf(hasProperty(\"target\", is(\"a-dir-with-3-entries\")),\n+                                     hasProperty(\"type\", is(\"symlink\"))));\n+        \n+        // TODO somehow\n+        /*\n+        final GHContent fileContent2 = repo.getFileContent(\"ghcontent-ro/a-symlink-to-a-dir/entry-one\");\n+        // this needs special handling and will 404 from GitHub\n+        assertThat(IOUtils.toString(fileContent.read(), StandardCharsets.UTF_8), is(\"\"));\n+        */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44b72ed647a1dbd8ffbb7b61e6e091fb0212d308"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTUwMDU2NA==", "bodyText": "agreed,  the API does not seem to support this, so given this is a mapping of the API to java I am not sure we should either.\nThat said, I was looking for this in order to solve https://issues.jenkins-ci.org/browse/JENKINS-62922 and if someone wants to acheive this I am not sure that making all users of the API handle it themselves is the correct approach.", "url": "https://github.com/hub4j/github-api/pull/876#discussion_r449500564", "createdAt": "2020-07-03T10:07:43Z", "author": {"login": "jtnord"}, "path": "src/test/java/org/kohsuke/github/GHContentIntegrationTest.java", "diffHunk": "@@ -170,4 +171,25 @@ public void testGetFileContentWithNonAsciiPath() throws Exception {\n         final GHContent fileContent2 = repo.getFileContent(fileContent.getPath());\n         assertThat(IOUtils.readLines(fileContent2.read(), StandardCharsets.UTF_8), hasItems(\"test\"));\n     }\n+\n+    @Test\n+    public void testGetFileContentWithSymlink() throws Exception {\n+        final GHRepository repo = gitHub.getRepository(\"hub4j-test-org/GHContentIntegrationTest\");\n+\n+        final GHContent fileContent = repo.getFileContent(\"ghcontent-ro/a-symlink-to-a-file\");\n+        // for whatever reason GH says this is a file :-o\n+        assertThat(IOUtils.toString(fileContent.read(), StandardCharsets.UTF_8), is(\"thanks for reading me\\n\"));\n+\n+        final GHContent dirContent = repo.getFileContent(\"ghcontent-ro/a-symlink-to-a-dir\");\n+        // but symlinks to directories are symlinks!\n+        assertThat(dirContent, allOf(hasProperty(\"target\", is(\"a-dir-with-3-entries\")),\n+                                     hasProperty(\"type\", is(\"symlink\"))));\n+        \n+        // TODO somehow\n+        /*\n+        final GHContent fileContent2 = repo.getFileContent(\"ghcontent-ro/a-symlink-to-a-dir/entry-one\");\n+        // this needs special handling and will 404 from GitHub\n+        assertThat(IOUtils.toString(fileContent.read(), StandardCharsets.UTF_8), is(\"\"));\n+        */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI3NDU2Nw=="}, "originalCommit": {"oid": "44b72ed647a1dbd8ffbb7b61e6e091fb0212d308"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1803, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}