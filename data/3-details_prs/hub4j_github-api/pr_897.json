{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUyNjEzMTcz", "number": 897, "title": "add create repo with template support", "bodyText": "Signed-off-by: Yang Ting bonnie.young@maxwit.com\nDescription\n\nAdd two method for GHOrganization class:\n\n\ncreateRepositoryWithParametersIsTemplate\ncreateRepositoryWithTemplate\n\n\nAnd the corresponding test class\n\n\ntestCreateRepositoryWithParametersIsTemplate\ntestCreateRepositoryWithTemplate\n\nBefore submitting a PR:\nWe love getting PRs, but we hate asking people for the same basic changes every time.\n\n Push your changes to a branch other than master. Create your PR from that branch.\n Add JavaDocs and other comments\n Write tests that run and pass in CI. See CONTRIBUTING.md for details on how to capture snapshot data.\n Run mvn clean compile locally. This may reformat your code, commit those changes.\n Run mvn -D enable-ci clean install site locally. If this command doesn't succeed, your change will not pass CI.\n\nWhen creating a PR:\n\n Fill in the \"Description\" above.\n Enable \"Allow edits from maintainers\".", "createdAt": "2020-07-19T15:12:40Z", "url": "https://github.com/hub4j/github-api/pull/897", "merged": true, "mergeCommit": {"oid": "ff4324ac67a2ddb42546d3d0a186ac1338bbf2e2"}, "closed": true, "closedAt": "2020-08-12T15:43:18Z", "author": {"login": "bonnie-young"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2eddFgH2gAyNDUyNjEzMTczOjk4MzA5MjcwMjBiNzRiZjk5NzA0NGI4NzMwMzdlZjEyYmMyMzhlZTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-NPl5gFqTQ2NjAzNDcyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9830927020b74bf997044b873037ef12bc238ee9", "author": {"user": {"login": "bonnie-young", "name": "Ting Yang"}}, "url": "https://github.com/hub4j/github-api/commit/9830927020b74bf997044b873037ef12bc238ee9", "committedDate": "2020-07-19T15:07:19Z", "message": "add create repo with template support\n\nSigned-off-by: Yang Ting <bonnie.young@maxwit.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b194a19b98c395a48f34875c11f3b53550d7953f", "author": {"user": {"login": "bonnie-young", "name": "Ting Yang"}}, "url": "https://github.com/hub4j/github-api/commit/b194a19b98c395a48f34875c11f3b53550d7953f", "committedDate": "2020-07-20T16:32:52Z", "message": "Merge branch 'master' into add-create-repo-with-template-support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac470dddb50695bfa9c85ec00d9100d2be4e6bd3", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/ac470dddb50695bfa9c85ec00d9100d2be4e6bd3", "committedDate": "2020-07-27T21:14:16Z", "message": "Merge branch 'master' into add-create-repo-with-template-support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MTQxODA5", "url": "https://github.com/hub4j/github-api/pull/897#pullrequestreview-456141809", "createdAt": "2020-07-27T21:17:03Z", "commit": {"oid": "ac470dddb50695bfa9c85ec00d9100d2be4e6bd3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MTcwMzEz", "url": "https://github.com/hub4j/github-api/pull/897#pullrequestreview-458170313", "createdAt": "2020-07-30T07:59:42Z", "commit": {"oid": "ac470dddb50695bfa9c85ec00d9100d2be4e6bd3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNzo1OTo0MlrOG5YPkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwODoxNDowMFrOG5Yt2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgxOTIxNg==", "bodyText": "@bonnie-young  Could you tell me why we need two new constructors?\nCould we add an templateRepository(boolean) method to the builder instead?", "url": "https://github.com/hub4j/github-api/pull/897#discussion_r462819216", "createdAt": "2020-07-30T07:59:42Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHCreateRepositoryBuilder.java", "diffHunk": "@@ -20,6 +22,22 @@\n         this.builder.with(\"name\", name);\n     }\n \n+    GHCreateRepositoryBuilder(GitHub root, String apiUrlTail, String name, Boolean isTemplate) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac470dddb50695bfa9c85ec00d9100d2be4e6bd3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMTQ4MA==", "bodyText": "Similar to my previous comment could we have a fromTemplateRepository(String templateOwner, String templateRepo) method?   I think the create() method could have .withPreview(BAPTISE) set in general without any negative effect, but I could be wrong.", "url": "https://github.com/hub4j/github-api/pull/897#discussion_r462821480", "createdAt": "2020-07-30T08:04:08Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHCreateRepositoryBuilder.java", "diffHunk": "@@ -211,4 +229,15 @@ public GHRepository create() throws IOException {\n         return builder.method(\"POST\").withUrlPath(apiUrlTail).fetch(GHRepository.class).wrap(root);\n     }\n \n+    /**\n+     * Creates a repository with all the parameters, and with Preview BAPTISE for template repo.\n+     *\n+     * @return the gh repository\n+     * @throws IOException\n+     *             if repsitory cannot be created\n+     */\n+    public GHRepository createWithTemplate() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac470dddb50695bfa9c85ec00d9100d2be4e6bd3"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyMzU2MA==", "bodyText": "Ah, I see.  The create from template repository has almost none of the parameters of general repository creation.\nStill I think that limitation is something that could be explained in the javadoc for fromTemplateRepository(String templateOwner, String templateRepo) and include a link to the GitHub docs.\nWhat you've done is good: guiding users to the a non-failure path.  However, in this case, I'd rather reduce the surface area and added code in this library.\nAlso add @Preview and @Deprecated annotations to the methods that call GitHub Preview APIs.", "url": "https://github.com/hub4j/github-api/pull/897#discussion_r462823560", "createdAt": "2020-07-30T08:07:52Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHOrganization.java", "diffHunk": "@@ -100,6 +100,50 @@ public GHCreateRepositoryBuilder createRepository(String name) {\n         return new GHCreateRepositoryBuilder(root, \"/orgs/\" + login + \"/repos\", name);\n     }\n \n+    /**\n+     * Starts a builder that creates a new repository.\n+     *\n+     * <p>\n+     * You use the returned builder to set various properties, then call {@link GHCreateRepositoryBuilder#create()} to\n+     * finally create a repository.\n+     *\n+     * @param name\n+     *            the name\n+     * @param isTemplate\n+     *            the is_template\n+     * @return the gh create repository builder\n+     */\n+    public GHCreateRepositoryBuilder createRepositoryWithParametersIsTemplate(String name, Boolean isTemplate) {\n+        return new GHCreateRepositoryBuilder(root, \"/orgs/\" + login + \"/repos\", name, isTemplate);\n+    }\n+\n+    /**\n+     * Starts a builder that creates a new repository.\n+     *\n+     * <p>\n+     * You use the returned builder to set various properties, then call\n+     * {@link GHCreateRepositoryBuilder#createWithTemplate()} to finally create a repository.\n+     *\n+     * @param templateOwner\n+     *            the owner of template repository\n+     * @param templateRepo\n+     *            the template repository\n+     * @param name\n+     *            the name of repository to be created\n+     * @param owner\n+     *            the organization of repository to be created\n+     * @return the gh create repository builder\n+     */\n+    public GHCreateRepositoryBuilder createRepositoryWithTemplate(String templateRepo,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac470dddb50695bfa9c85ec00d9100d2be4e6bd3"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyNTE5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    GHRepository repository = org.createRepositoryWithParametersIsTemplate(GITHUB_API_TEMPLATE_TEST, true)\n          \n          \n            \n                            .description(\"a test template repository used to test kohsuke's github-api\")\n          \n          \n            \n                    GHRepository repository = org.createRepository(GITHUB_API_TEMPLATE_TEST)\n          \n          \n            \n                            .templateRepository(true)\n          \n          \n            \n                            .description(\"a test template repository used to test kohsuke's github-api\")", "url": "https://github.com/hub4j/github-api/pull/897#discussion_r462825192", "createdAt": "2020-07-30T08:10:46Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHOrganizationTest.java", "diffHunk": "@@ -56,6 +57,38 @@ public void testCreateRepositoryWithAutoInitialization() throws IOException {\n         Assert.assertNotNull(repository.getReadme());\n     }\n \n+    @Test\n+    public void testCreateRepositoryWithParametersIsTemplate() throws IOException {\n+        cleanupRepository(GITHUB_API_TEST_ORG + '/' + GITHUB_API_TEMPLATE_TEST);\n+\n+        GHOrganization org = gitHub.getOrganization(GITHUB_API_TEST_ORG);\n+        GHRepository repository = org.createRepositoryWithParametersIsTemplate(GITHUB_API_TEMPLATE_TEST, true)\n+                .description(\"a test template repository used to test kohsuke's github-api\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac470dddb50695bfa9c85ec00d9100d2be4e6bd3"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyNjk3MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    GHRepository repository = org\n          \n          \n            \n                            .createRepositoryWithTemplate(GITHUB_API_TEMPLATE_TEST,\n          \n          \n            \n                                    GITHUB_API_TEST_ORG,\n          \n          \n            \n                                    GITHUB_API_TEST,\n          \n          \n            \n                                    GITHUB_API_TEST_ORG)\n          \n          \n            \n                            .createWithTemplate();\n          \n          \n            \n                    GHRepository repository = org.createRepository(GITHUB_API_TEST) \n          \n          \n            \n                            .owner(GITHUB_API_TEST_ORG)\n          \n          \n            \n                            .fromTemplateRepository(GITHUB_API_TEST_ORG, GITHUB_API_TEMPLATE_TEST)\n          \n          \n            \n                            .create();", "url": "https://github.com/hub4j/github-api/pull/897#discussion_r462826970", "createdAt": "2020-07-30T08:14:00Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHOrganizationTest.java", "diffHunk": "@@ -56,6 +57,38 @@ public void testCreateRepositoryWithAutoInitialization() throws IOException {\n         Assert.assertNotNull(repository.getReadme());\n     }\n \n+    @Test\n+    public void testCreateRepositoryWithParametersIsTemplate() throws IOException {\n+        cleanupRepository(GITHUB_API_TEST_ORG + '/' + GITHUB_API_TEMPLATE_TEST);\n+\n+        GHOrganization org = gitHub.getOrganization(GITHUB_API_TEST_ORG);\n+        GHRepository repository = org.createRepositoryWithParametersIsTemplate(GITHUB_API_TEMPLATE_TEST, true)\n+                .description(\"a test template repository used to test kohsuke's github-api\")\n+                .homepage(\"http://github-api.kohsuke.org/\")\n+                .team(org.getTeamByName(\"Core Developers\"))\n+                .autoInit(true)\n+                .create();\n+\n+        Assert.assertNotNull(repository);\n+        Assert.assertNotNull(repository.getReadme());\n+    }\n+\n+    @Test\n+    public void testCreateRepositoryWithTemplate() throws IOException {\n+        cleanupRepository(GITHUB_API_TEST_ORG + '/' + GITHUB_API_TEST);\n+\n+        GHOrganization org = gitHub.getOrganization(GITHUB_API_TEST_ORG);\n+        GHRepository repository = org\n+                .createRepositoryWithTemplate(GITHUB_API_TEMPLATE_TEST,\n+                        GITHUB_API_TEST_ORG,\n+                        GITHUB_API_TEST,\n+                        GITHUB_API_TEST_ORG)\n+                .createWithTemplate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac470dddb50695bfa9c85ec00d9100d2be4e6bd3"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb4d44138ab06d63faff3c86eb8d6ea190eb41a5", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/bb4d44138ab06d63faff3c86eb8d6ea190eb41a5", "committedDate": "2020-08-04T23:05:02Z", "message": "Merge branch 'master' into add-create-repo-with-template-support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd118ff7281744b98dc7a6b7bf8b04770eb78ada", "author": {"user": {"login": "bonnie-young", "name": "Ting Yang"}}, "url": "https://github.com/hub4j/github-api/commit/cd118ff7281744b98dc7a6b7bf8b04770eb78ada", "committedDate": "2020-08-09T09:23:03Z", "message": "update code for create repository from template\n\nSigned-off-by: Yang Ting <bonnie.young@maxwit.com>"}, "afterCommit": {"oid": "eb33cd616218db93b8c7495e2f304432a99b6c5a", "author": {"user": {"login": "bonnie-young", "name": "Ting Yang"}}, "url": "https://github.com/hub4j/github-api/commit/eb33cd616218db93b8c7495e2f304432a99b6c5a", "committedDate": "2020-08-09T09:37:46Z", "message": "update code for create repository from template\n\nSigned-off-by: Yang Ting <bonnie.young@maxwit.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3ec83351cd5588861e26b11b71e179f6fb1a2a9", "author": {"user": {"login": "bonnie-young", "name": "Ting Yang"}}, "url": "https://github.com/hub4j/github-api/commit/d3ec83351cd5588861e26b11b71e179f6fb1a2a9", "committedDate": "2020-08-09T09:40:03Z", "message": "Merge branch 'master' into add-create-repo-with-template-support"}, "afterCommit": {"oid": "a2bc5c6c7018a66327e196f065c4182381883d46", "author": {"user": {"login": "bonnie-young", "name": "Ting Yang"}}, "url": "https://github.com/hub4j/github-api/commit/a2bc5c6c7018a66327e196f065c4182381883d46", "committedDate": "2020-08-09T09:48:04Z", "message": "update code for create repository from template\n\nSigned-off-by: Yang Ting <bonnie.young@maxwit.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2bc5c6c7018a66327e196f065c4182381883d46", "author": {"user": {"login": "bonnie-young", "name": "Ting Yang"}}, "url": "https://github.com/hub4j/github-api/commit/a2bc5c6c7018a66327e196f065c4182381883d46", "committedDate": "2020-08-09T09:48:04Z", "message": "update code for create repository from template\n\nSigned-off-by: Yang Ting <bonnie.young@maxwit.com>"}, "afterCommit": {"oid": "5e703be2bb25bbe83f30d9a37e6607f352cfe46f", "author": {"user": {"login": "bonnie-young", "name": "Ting Yang"}}, "url": "https://github.com/hub4j/github-api/commit/5e703be2bb25bbe83f30d9a37e6607f352cfe46f", "committedDate": "2020-08-10T03:47:20Z", "message": "update code for create repository from template\n\nSigned-off-by: Yang Ting <bonnie.young@maxwit.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3181a00f56d3a7db21c4e947da1d73d8d797444", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/a3181a00f56d3a7db21c4e947da1d73d8d797444", "committedDate": "2020-08-12T02:27:15Z", "message": "Make withPreview automatic instead of exposing to user"}, "afterCommit": {"oid": "6afd248f866bd580fa96b2c8b06f06d4c6ae0788", "author": {"user": {"login": "bonnie-young", "name": "Ting Yang"}}, "url": "https://github.com/hub4j/github-api/commit/6afd248f866bd580fa96b2c8b06f06d4c6ae0788", "committedDate": "2020-08-12T13:51:02Z", "message": "update code for create repository from template\n\nSigned-off-by: Yang Ting <bonnie.young@maxwit.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11bc669e1ded47b8cc1ddaf16be2a14f56ddf022", "author": {"user": {"login": "bonnie-young", "name": "Ting Yang"}}, "url": "https://github.com/hub4j/github-api/commit/11bc669e1ded47b8cc1ddaf16be2a14f56ddf022", "committedDate": "2020-08-12T14:08:31Z", "message": "update code for create repository from template\n\nSigned-off-by: Yang Ting <bonnie.young@maxwit.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6afd248f866bd580fa96b2c8b06f06d4c6ae0788", "author": {"user": {"login": "bonnie-young", "name": "Ting Yang"}}, "url": "https://github.com/hub4j/github-api/commit/6afd248f866bd580fa96b2c8b06f06d4c6ae0788", "committedDate": "2020-08-12T13:51:02Z", "message": "update code for create repository from template\n\nSigned-off-by: Yang Ting <bonnie.young@maxwit.com>"}, "afterCommit": {"oid": "11bc669e1ded47b8cc1ddaf16be2a14f56ddf022", "author": {"user": {"login": "bonnie-young", "name": "Ting Yang"}}, "url": "https://github.com/hub4j/github-api/commit/11bc669e1ded47b8cc1ddaf16be2a14f56ddf022", "committedDate": "2020-08-12T14:08:31Z", "message": "update code for create repository from template\n\nSigned-off-by: Yang Ting <bonnie.young@maxwit.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDM0NzI4", "url": "https://github.com/hub4j/github-api/pull/897#pullrequestreview-466034728", "createdAt": "2020-08-12T15:35:11Z", "commit": {"oid": "11bc669e1ded47b8cc1ddaf16be2a14f56ddf022"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1625, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}