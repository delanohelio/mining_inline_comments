{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4NzAwMjc5", "number": 742, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODo0MjoxNlrODo2AlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODo0MjoxNlrODo2AlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTU0NTE3OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/kohsuke/github/GHPullRequestTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxODo0MjoxNlrOF3pZCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwNToyMjoxN1rOF5H9NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NDE1Mg==", "bodyText": "Needs to be more than non-null.", "url": "https://github.com/hub4j/github-api/pull/742#discussion_r393894152", "createdAt": "2020-03-17T18:42:16Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHPullRequestTest.java", "diffHunk": "@@ -119,6 +119,9 @@ public void pullRequestReviewComments() throws Exception {\n         GHPullRequestReviewComment comment = comments.get(0);\n         assertEquals(\"Sample review comment\", comment.getBody());\n \n+        // Assert htmlUrl is not null\n+        assertNotNull(comment.getHtmlUrl());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bb1d78939b31fe9e941be43e3e81ac3bc2088f8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEzNzcxMQ==", "bodyText": "We need to check for more than just non-null. What value should it be?\n\nIt's actually a dynamically determined URL something along of the lines of this : https://github.com/apache/flink/pull/5862#discussion_r184057665", "url": "https://github.com/hub4j/github-api/pull/742#discussion_r395137711", "createdAt": "2020-03-19T16:00:44Z", "author": {"login": "sladyn98"}, "path": "src/test/java/org/kohsuke/github/GHPullRequestTest.java", "diffHunk": "@@ -119,6 +119,9 @@ public void pullRequestReviewComments() throws Exception {\n         GHPullRequestReviewComment comment = comments.get(0);\n         assertEquals(\"Sample review comment\", comment.getBody());\n \n+        // Assert htmlUrl is not null\n+        assertNotNull(comment.getHtmlUrl());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NDE1Mg=="}, "originalCommit": {"oid": "4bb1d78939b31fe9e941be43e3e81ac3bc2088f8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTI2MTE1Mw==", "bodyText": "@sladyn98\nBut it is recorded so it won't change after that.", "url": "https://github.com/hub4j/github-api/pull/742#discussion_r395261153", "createdAt": "2020-03-19T19:14:40Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHPullRequestTest.java", "diffHunk": "@@ -119,6 +119,9 @@ public void pullRequestReviewComments() throws Exception {\n         GHPullRequestReviewComment comment = comments.get(0);\n         assertEquals(\"Sample review comment\", comment.getBody());\n \n+        // Assert htmlUrl is not null\n+        assertNotNull(comment.getHtmlUrl());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NDE1Mg=="}, "originalCommit": {"oid": "4bb1d78939b31fe9e941be43e3e81ac3bc2088f8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTQ0MzUwOQ==", "bodyText": "Yep, another test upcoming  :)", "url": "https://github.com/hub4j/github-api/pull/742#discussion_r395443509", "createdAt": "2020-03-20T05:22:17Z", "author": {"login": "sladyn98"}, "path": "src/test/java/org/kohsuke/github/GHPullRequestTest.java", "diffHunk": "@@ -119,6 +119,9 @@ public void pullRequestReviewComments() throws Exception {\n         GHPullRequestReviewComment comment = comments.get(0);\n         assertEquals(\"Sample review comment\", comment.getBody());\n \n+        // Assert htmlUrl is not null\n+        assertNotNull(comment.getHtmlUrl());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg5NDE1Mg=="}, "originalCommit": {"oid": "4bb1d78939b31fe9e941be43e3e81ac3bc2088f8"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1895, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}