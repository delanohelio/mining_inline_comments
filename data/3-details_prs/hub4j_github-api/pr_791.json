{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NDkyNDQ3", "number": 791, "title": "Add global node_id to GHObject + GHTeam extends GHObject", "bodyText": "Description\nThat PR is adding Global Node ID according to https://developer.github.com/v4/guides/using-global-node-ids/\nIm trying to mix v3 and v4 (graphQL) of GH API together and without Global Node IDs its really hard.\nExtending GHObject in GHTeam changed signature of ID, so its back incompatible change (Im not sure why GHTeam was not extending GHObject, in my opinion there is no reason for not doing it).\nPlease let me know whats best idea to test if it will work on all objects that extends GHObject..\nBefore submitting a PR:\n\n Push your changes to a branch other than master. Create your PR from that branch.\n Add JavaDocs and other comments\n Write tests that run and pass in CI. See CONTRIBUTING.md for details on how to capture snapshot data.\n Run mvn clean compile locally. This may reformat your code, commit those changes.\n Run mvn -D enable-ci clean install site locally. If this command doesn't succeed, your change will not pass CI.", "createdAt": "2020-04-18T12:29:05Z", "url": "https://github.com/hub4j/github-api/pull/791", "merged": true, "mergeCommit": {"oid": "cc2d14acc6b25397cf66d29a76dc357900ba6a2b"}, "closed": true, "closedAt": "2020-04-22T20:15:13Z", "author": {"login": "ingwarsw"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcY0-DBAH2gAyNDA1NDkyNDQ3OmZkY2Y3NGVhZjI3ZGQ0NTVlNDFhZjQxNTBlYTc4NjQ5OTUyYjNiMjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaLDwHAFqTM5ODM3NjIzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fdcf74eaf27dd455e41af4150ea78649952b3b20", "author": {"user": {"login": "ingwarsw", "name": "Karol Lassak"}}, "url": "https://github.com/hub4j/github-api/commit/fdcf74eaf27dd455e41af4150ea78649952b3b20", "committedDate": "2020-04-18T12:23:06Z", "message": "Add global node_id to GHObject + GHTeam extends GHObject"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e05348463ce3ee51e0159431e91fea987619839d", "author": {"user": {"login": "ingwarsw", "name": "Karol Lassak"}}, "url": "https://github.com/hub4j/github-api/commit/e05348463ce3ee51e0159431e91fea987619839d", "committedDate": "2020-04-18T12:32:51Z", "message": "Fix javadoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTU1MDk5", "url": "https://github.com/hub4j/github-api/pull/791#pullrequestreview-395955099", "createdAt": "2020-04-18T22:06:00Z", "commit": {"oid": "e05348463ce3ee51e0159431e91fea987619839d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMjowNjowMFrOGHuqYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMjowNjowMFrOGHuqYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1NzczMQ==", "bodyText": "We can create a deprecated version of this method and add new method.  We can't just change it.", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r410757731", "createdAt": "2020-04-18T22:06:00Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHOrganization.java", "diffHunk": "@@ -139,7 +139,7 @@ public GHCreateRepositoryBuilder createRepository(String name) {\n      *\n      * @see <a href= \"https://developer.github.com/v3/teams/#get-team-by-name\">documentation</a>\n      */\n-    public GHTeam getTeam(int teamId) throws IOException {\n+    public GHTeam getTeam(long teamId) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05348463ce3ee51e0159431e91fea987619839d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTU1MTc2", "url": "https://github.com/hub4j/github-api/pull/791#pullrequestreview-395955176", "createdAt": "2020-04-18T22:07:04Z", "commit": {"oid": "e05348463ce3ee51e0159431e91fea987619839d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMjowNzowNVrOGHuq-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMjowNzowNVrOGHuq-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1Nzg4Mg==", "bodyText": "We have a BridgeMethods to handle cases like these.  Preserving backward compatibility while changing method return types.\nhttps://github.com/github-api/github-api/blob/7d842175f7984e33b3d97346cba3b20a1f905031/src/main/java/org/kohsuke/github/GHObject.java#L75", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r410757882", "createdAt": "2020-04-18T22:07:05Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHTeam.java", "diffHunk": "@@ -129,15 +130,6 @@ public void setPrivacy(Privacy privacy) throws IOException {\n         root.createRequest().method(\"PATCH\").with(\"privacy\", privacy).withUrlPath(api(\"\")).send();\n     }\n \n-    /**\n-     * Gets id.\n-     *\n-     * @return the id\n-     */\n-    public int getId() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e05348463ce3ee51e0159431e91fea987619839d"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f77eb33029746536aa26ac72ed6b13ad8d03cf1f", "author": {"user": {"login": "ingwarsw", "name": "Karol Lassak"}}, "url": "https://github.com/hub4j/github-api/commit/f77eb33029746536aa26ac72ed6b13ad8d03cf1f", "committedDate": "2020-04-19T09:18:29Z", "message": "Add deprecated method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3073ec14ee13355d8edb591d75cd2a9bec259eb", "author": {"user": {"login": "ingwarsw", "name": "Karol Lassak"}}, "url": "https://github.com/hub4j/github-api/commit/a3073ec14ee13355d8edb591d75cd2a9bec259eb", "committedDate": "2020-04-19T09:19:48Z", "message": "Fix formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b45f353fa95b59d061e65269cc9e75dbca1e3000", "author": {"user": {"login": "ingwarsw", "name": "Karol Lassak"}}, "url": "https://github.com/hub4j/github-api/commit/b45f353fa95b59d061e65269cc9e75dbca1e3000", "committedDate": "2020-04-19T09:38:36Z", "message": "Fix tests + add deprecation to one of methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d536a9f8746287a9e30f256d10407e5539ec0e4e", "author": {"user": {"login": "ingwarsw", "name": "Karol Lassak"}}, "url": "https://github.com/hub4j/github-api/commit/d536a9f8746287a9e30f256d10407e5539ec0e4e", "committedDate": "2020-04-19T09:41:17Z", "message": "Merge branch 'master' into global_node_id"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODg3Mzk3", "url": "https://github.com/hub4j/github-api/pull/791#pullrequestreview-396887397", "createdAt": "2020-04-20T23:27:52Z", "commit": {"oid": "d536a9f8746287a9e30f256d10407e5539ec0e4e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzoyNzo1MlrOGIrvKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMzozNDoyMlrOGIsBQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1ODM3OA==", "bodyText": "* @see <a href= \"https://developer.github.com/v3/teams/#get-team-by-name\">documentation</a>\n     * @deprecated Use {@link GHOrganization#getTeam(long)}\n     */\n    @Deprecated\t     \n    public GHTeam getTeam(int teamId) throws IOException {", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r411758378", "createdAt": "2020-04-20T23:27:52Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHOrganization.java", "diffHunk": "@@ -139,13 +139,28 @@ public GHCreateRepositoryBuilder createRepository(String name) {\n      *\n      * @see <a href= \"https://developer.github.com/v3/teams/#get-team-by-name\">documentation</a>\n      */\n-    public GHTeam getTeam(int teamId) throws IOException {\n+    public GHTeam getTeam(long teamId) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d536a9f8746287a9e30f256d10407e5539ec0e4e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc1ODU3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @deprecated Use {@link GHOrganization#getTeam(long)}\n          \n          \n            \n                 */\n          \n          \n            \n                public GHTeam getTeam(int teamId) throws IOException {\n          \n          \n            \n                 */\n          \n          \n            \n                public GHTeam getTeam(long teamId) throws IOException {", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r411758576", "createdAt": "2020-04-20T23:28:18Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHOrganization.java", "diffHunk": "@@ -139,13 +139,28 @@ public GHCreateRepositoryBuilder createRepository(String name) {\n      *\n      * @see <a href= \"https://developer.github.com/v3/teams/#get-team-by-name\">documentation</a>\n      */\n-    public GHTeam getTeam(int teamId) throws IOException {\n+    public GHTeam getTeam(long teamId) throws IOException {\n         return root.createRequest()\n                 .withUrlPath(String.format(\"/organizations/%d/team/%d\", id, teamId))\n                 .fetch(GHTeam.class)\n                 .wrapUp(this);\n     }\n \n+    /**\n+     * Gets a single team by ID.\n+     *\n+     * @param teamId\n+     *            id of the team that we want to query for\n+     * @return the team\n+     * @throws IOException\n+     *             the io exception\n+     *\n+     * @deprecated Use {@link GHOrganization#getTeam(long)}\n+     */\n+    public GHTeam getTeam(int teamId) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d536a9f8746287a9e30f256d10407e5539ec0e4e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc2MjQ4Mw==", "bodyText": "I'm not sure this is okay.  If I had:\nint a = team.getId();\n\nDoes it compile still with this change?", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r411762483", "createdAt": "2020-04-20T23:32:58Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHTeam.java", "diffHunk": "@@ -129,15 +130,6 @@ public void setPrivacy(Privacy privacy) throws IOException {\n         root.createRequest().method(\"PATCH\").with(\"privacy\", privacy).withUrlPath(api(\"\")).send();\n     }\n \n-    /**\n-     * Gets id.\n-     *\n-     * @return the id\n-     */\n-    public int getId() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1Nzg4Mg=="}, "originalCommit": {"oid": "e05348463ce3ee51e0159431e91fea987619839d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTc2MzAxMA==", "bodyText": "Right... so this means there will be build breaks for clients and we can't have that.", "url": "https://github.com/hub4j/github-api/pull/791#discussion_r411763010", "createdAt": "2020-04-20T23:34:22Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/AppTest.java", "diffHunk": "@@ -291,7 +291,7 @@ public void testShouldFetchTeam() throws Exception {\n         GHOrganization organization = gitHub.getOrganization(GITHUB_API_TEST_ORG);\n         GHTeam teamByName = organization.getTeams().get(\"Core Developers\");\n \n-        GHTeam teamById = gitHub.getTeam(teamByName.getId());\n+        GHTeam teamById = gitHub.getTeam((int) teamByName.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d536a9f8746287a9e30f256d10407e5539ec0e4e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87f37e9f1c62fc4b71862924b25803dc81b41166", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/87f37e9f1c62fc4b71862924b25803dc81b41166", "committedDate": "2020-04-22T16:40:19Z", "message": "Formatting and improved bridge method tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb6acd9672b135ceae75250e8e2fffccd4813026", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/fb6acd9672b135ceae75250e8e2fffccd4813026", "committedDate": "2020-04-22T00:34:15Z", "message": "Formatting and improved bridge method tests"}, "afterCommit": {"oid": "87f37e9f1c62fc4b71862924b25803dc81b41166", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/87f37e9f1c62fc4b71862924b25803dc81b41166", "committedDate": "2020-04-22T16:40:19Z", "message": "Formatting and improved bridge method tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4Mzc2MjM5", "url": "https://github.com/hub4j/github-api/pull/791#pullrequestreview-398376239", "createdAt": "2020-04-22T16:41:10Z", "commit": {"oid": "87f37e9f1c62fc4b71862924b25803dc81b41166"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1736, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}