{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MjE4NjMy", "number": 981, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTozNTowOFrOE8yCfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNDozMDoxNlrOE9QQ9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTY5ODUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GitHubRequest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTozNTowOFrOH5G8_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNDoyMDo0MVrOH51juA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY0NDc5OQ==", "bodyText": "Wow, the built in formatter doesn't protect against this?  Ouch.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529644799", "createdAt": "2020-11-24T15:35:08Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GitHubRequest.java", "diffHunk": "@@ -75,7 +75,7 @@ private GitHubRequest(@Nonnull List<Entry> args,\n \n     /**\n      * Create a new {@link Builder}.\n-     * \n+     *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c56f1f076248b56f9512274a510d836c52d4aee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2ODYxMw==", "bodyText": "Ugh. My editor is supposed to be configured to remove trailing whitespace. Will clean this stuff up.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529868613", "createdAt": "2020-11-24T20:49:06Z", "author": {"login": "Irialad"}, "path": "src/main/java/org/kohsuke/github/GitHubRequest.java", "diffHunk": "@@ -75,7 +75,7 @@ private GitHubRequest(@Nonnull List<Entry> args,\n \n     /**\n      * Create a new {@link Builder}.\n-     * \n+     *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY0NDc5OQ=="}, "originalCommit": {"oid": "3c56f1f076248b56f9512274a510d836c52d4aee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDAzMDk4Nw==", "bodyText": "Oh! I see. My editor did remove it. Hah, now I understand.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530030987", "createdAt": "2020-11-25T00:29:14Z", "author": {"login": "Irialad"}, "path": "src/main/java/org/kohsuke/github/GitHubRequest.java", "diffHunk": "@@ -75,7 +75,7 @@ private GitHubRequest(@Nonnull List<Entry> args,\n \n     /**\n      * Create a new {@link Builder}.\n-     * \n+     *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY0NDc5OQ=="}, "originalCommit": {"oid": "3c56f1f076248b56f9512274a510d836c52d4aee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQwODM3Ng==", "bodyText": "Yeah, it's the autoformatter in the build that failed to catch these earlier. \ud83d\ude22", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530408376", "createdAt": "2020-11-25T14:20:41Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GitHubRequest.java", "diffHunk": "@@ -75,7 +75,7 @@ private GitHubRequest(@Nonnull List<Entry> args,\n \n     /**\n      * Create a new {@link Builder}.\n-     * \n+     *", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY0NDc5OQ=="}, "originalCommit": {"oid": "3c56f1f076248b56f9512274a510d836c52d4aee"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTczMDQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTozODo1NFrOH5HSdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMToxODo0NFrOH5VjxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1MDI5Mw==", "bodyText": "affiliation is not a required parameter.  We shouldn't force it to be added. Maybe add a DEFAULT to the enum?\nhttps://docs.github.com/en/free-pro-team@latest/rest/reference/repos#list-repository-collaborators", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529650293", "createdAt": "2020-11-24T15:38:54Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -834,7 +841,22 @@ public int getSize() {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listUsers(\"collaborators\");\n+        return listCollaborators(CollaboratorAffiliation.ALL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c56f1f076248b56f9512274a510d836c52d4aee"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2OTM1Ng==", "bodyText": "I see your point, I won't force it. I think the enum should map directly to the values in the SDK though, and I'd expect if default behavior is desired, they'd simply call the method with no args. What do you think?", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529869356", "createdAt": "2020-11-24T20:50:25Z", "author": {"login": "Irialad"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -834,7 +841,22 @@ public int getSize() {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listUsers(\"collaborators\");\n+        return listCollaborators(CollaboratorAffiliation.ALL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1MDI5Mw=="}, "originalCommit": {"oid": "3c56f1f076248b56f9512274a510d836c52d4aee"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4NDEwMA==", "bodyText": "they'd simply call the method with no args\n\nExactly, but your change forces the addition of the affiliation to the API call (line 858 below).  So, your call how you want to do it, but this method call should result in a web api call that doesn't have affiliation arg.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529884100", "createdAt": "2020-11-24T21:18:44Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -834,7 +841,22 @@ public int getSize() {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listUsers(\"collaborators\");\n+        return listCollaborators(CollaboratorAffiliation.ALL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1MDI5Mw=="}, "originalCommit": {"oid": "3c56f1f076248b56f9512274a510d836c52d4aee"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTc2MDA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTo0MjowOVrOH5HlJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMTozMzowMlrOH5WA5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1NTA3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    args.put(\"affiliation\", affiliation.toString().toLowerCase());\n          \n          \n            \n                    args.with(\"affiliation\", affiliation);\n          \n      \n    \n    \n  \n\nLowercasing is done automatically for enums inside the request builder.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529655076", "createdAt": "2020-11-24T15:42:09Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -834,7 +841,22 @@ public int getSize() {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listUsers(\"collaborators\");\n+        return listCollaborators(CollaboratorAffiliation.ALL);\n+    }\n+\n+    /**\n+     * Lists up the collaborators on this repository.\n+     *\n+     * @param affiliation\n+     *            Filter users by affiliation\n+     * @return Users paged iterable\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public PagedIterable<GHUser> listCollaborators(CollaboratorAffiliation affiliation) throws IOException {\n+        Map<String, Object> args = new HashMap<>();\n+        args.put(\"affiliation\", affiliation.toString().toLowerCase());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c56f1f076248b56f9512274a510d836c52d4aee"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg2OTYyNA==", "bodyText": "Oh! Lovely. I'll remove the superfluous calls.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529869624", "createdAt": "2020-11-24T20:50:54Z", "author": {"login": "Irialad"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -834,7 +841,22 @@ public int getSize() {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listUsers(\"collaborators\");\n+        return listCollaborators(CollaboratorAffiliation.ALL);\n+    }\n+\n+    /**\n+     * Lists up the collaborators on this repository.\n+     *\n+     * @param affiliation\n+     *            Filter users by affiliation\n+     * @return Users paged iterable\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public PagedIterable<GHUser> listCollaborators(CollaboratorAffiliation affiliation) throws IOException {\n+        Map<String, Object> args = new HashMap<>();\n+        args.put(\"affiliation\", affiliation.toString().toLowerCase());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1NTA3Ng=="}, "originalCommit": {"oid": "3c56f1f076248b56f9512274a510d836c52d4aee"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MTU1Nw==", "bodyText": "Oh, wait, sorry.  This doesn't work.  The request builder with(String, Enum) is what does the toLowercase for you.   You're passing a Map.  Maybe switch to passing  a request builder?  It's okay if you want to keep this as is.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529891557", "createdAt": "2020-11-24T21:33:02Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -834,7 +841,22 @@ public int getSize() {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listUsers(\"collaborators\");\n+        return listCollaborators(CollaboratorAffiliation.ALL);\n+    }\n+\n+    /**\n+     * Lists up the collaborators on this repository.\n+     *\n+     * @param affiliation\n+     *            Filter users by affiliation\n+     * @return Users paged iterable\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public PagedIterable<GHUser> listCollaborators(CollaboratorAffiliation affiliation) throws IOException {\n+        Map<String, Object> args = new HashMap<>();\n+        args.put(\"affiliation\", affiliation.toString().toLowerCase());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1NTA3Ng=="}, "originalCommit": {"oid": "3c56f1f076248b56f9512274a510d836c52d4aee"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzIxODAwOnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/kohsuke/github/AppTest/wiremock/testMembership/mappings/repos_hub4j-test-org_jenkins_collaborators-4.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMToyMDozOVrOH5VoCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMToyMDozOVrOH5VoCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4NTE5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"url\": \"/repos/hub4j-test-org/jenkins/collaborators?affiliation=all\",\n          \n          \n            \n                \"url\": \"/repos/hub4j-test-org/jenkins/collaborators\",", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529885193", "createdAt": "2020-11-24T21:20:39Z", "author": {"login": "bitwiseman"}, "path": "src/test/resources/org/kohsuke/github/AppTest/wiremock/testMembership/mappings/repos_hub4j-test-org_jenkins_collaborators-4.json", "diffHunk": "@@ -2,7 +2,7 @@\n   \"id\": \"bce97482-6a11-44e5-a112-29230b142636\",\n   \"name\": \"repos_hub4j-test-org_jenkins_collaborators\",\n   \"request\": {\n-    \"url\": \"/repos/hub4j-test-org/jenkins/collaborators\",\n+    \"url\": \"/repos/hub4j-test-org/jenkins/collaborators?affiliation=all\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzIxOTE0OnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/kohsuke/github/GHRepositoryTest/wiremock/addCollaborators/mappings/repos_hub4j-test-org_github-api_collaborators-5-ddaa82.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMToyMDo1OVrOH5Votw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMToyMDo1OVrOH5Votw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4NTM2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"url\": \"/repos/hub4j-test-org/github-api/collaborators?affiliation=all\",\n          \n          \n            \n                \"url\": \"/repos/hub4j-test-org/jenkins/collaborators\",", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529885367", "createdAt": "2020-11-24T21:20:59Z", "author": {"login": "bitwiseman"}, "path": "src/test/resources/org/kohsuke/github/GHRepositoryTest/wiremock/addCollaborators/mappings/repos_hub4j-test-org_github-api_collaborators-5-ddaa82.json", "diffHunk": "@@ -2,7 +2,7 @@\n   \"id\": \"ddaa8229-c0ae-4df6-90ed-08425bfe71f2\",\n   \"name\": \"repos_hub4j-test-org_github-api_collaborators\",\n   \"request\": {\n-    \"url\": \"/repos/hub4j-test-org/github-api/collaborators\",\n+    \"url\": \"/repos/hub4j-test-org/github-api/collaborators?affiliation=all\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzIxOTQzOnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/kohsuke/github/GHRepositoryTest/wiremock/getCollaborators/mappings/repos_hub4j-test-org_github-api_collaborators-4.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMToyMTowNlrOH5Vo5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMToyMTowNlrOH5Vo5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4NTQxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"url\": \"/repos/hub4j-test-org/github-api/collaborators?affiliation=all\",\n          \n          \n            \n                \"url\": \"/repos/hub4j-test-org/jenkins/collaborators\",", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529885414", "createdAt": "2020-11-24T21:21:06Z", "author": {"login": "bitwiseman"}, "path": "src/test/resources/org/kohsuke/github/GHRepositoryTest/wiremock/getCollaborators/mappings/repos_hub4j-test-org_github-api_collaborators-4.json", "diffHunk": "@@ -2,7 +2,7 @@\n   \"id\": \"2b8badfb-52b8-4304-a9a5-66b80274e93d\",\n   \"name\": \"repos_hub4j-test-org_github-api_collaborators\",\n   \"request\": {\n-    \"url\": \"/repos/hub4j-test-org/github-api/collaborators\",\n+    \"url\": \"/repos/hub4j-test-org/github-api/collaborators?affiliation=all\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzIxOTY0OnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/kohsuke/github/GHRepositoryTest/wiremock/listCollaborators/mappings/repos_hub4j-test-org_github-api_collaborators-4.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMToyMToxMFrOH5VpBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMToyMToxMFrOH5VpBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4NTQ0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                \"url\": \"/repos/hub4j-test-org/github-api/collaborators?affiliation=all\",\n          \n          \n            \n                \"url\": \"/repos/hub4j-test-org/jenkins/collaborators\",", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529885444", "createdAt": "2020-11-24T21:21:10Z", "author": {"login": "bitwiseman"}, "path": "src/test/resources/org/kohsuke/github/GHRepositoryTest/wiremock/listCollaborators/mappings/repos_hub4j-test-org_github-api_collaborators-4.json", "diffHunk": "@@ -2,7 +2,7 @@\n   \"id\": \"b0680d17-cd3b-4ec0-a857-d352c7167e94\",\n   \"name\": \"repos_hub4j-test-org_github-api_collaborators\",\n   \"request\": {\n-    \"url\": \"/repos/hub4j-test-org/github-api/collaborators\",\n+    \"url\": \"/repos/hub4j-test-org/github-api/collaborators?affiliation=all\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzIzODI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMToyNjowMVrOH5VznA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzowMTozOFrOH9IfPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4ODE1Ng==", "bodyText": "This probably also use listUsers(...) right?", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529888156", "createdAt": "2020-11-24T21:26:01Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -873,10 +895,25 @@ public boolean hasAssignee(GHUser u) throws IOException {\n      *             the io exception\n      */\n     public Set<String> getCollaboratorNames() throws IOException {\n+        return getCollaboratorNames(CollaboratorAffiliation.ALL);\n+    }\n+\n+    /**\n+     * Gets the names of the collaborators on this repository. This method deviates from the principle of this library\n+     * but it works a lot faster than {@link #getCollaborators()}.\n+     *\n+     * @param affiliation\n+     *            Filter users by affiliation\n+     * @return the collaborator names\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public Set<String> getCollaboratorNames(CollaboratorAffiliation affiliation) throws IOException {\n         Set<String> r = new HashSet<>();\n         // no initializer - we just want to the logins\n         PagedIterable<GHUser> users = root.createRequest()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxODg0Nw==", "bodyText": "listUsers does a few extra things, so that would negatively impact the speed of what is ostensibly the \"fast\" alternative. If that's a desirable change, I'm happy to make it.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529918847", "createdAt": "2020-11-24T22:06:16Z", "author": {"login": "Irialad"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -873,10 +895,25 @@ public boolean hasAssignee(GHUser u) throws IOException {\n      *             the io exception\n      */\n     public Set<String> getCollaboratorNames() throws IOException {\n+        return getCollaboratorNames(CollaboratorAffiliation.ALL);\n+    }\n+\n+    /**\n+     * Gets the names of the collaborators on this repository. This method deviates from the principle of this library\n+     * but it works a lot faster than {@link #getCollaborators()}.\n+     *\n+     * @param affiliation\n+     *            Filter users by affiliation\n+     * @return the collaborator names\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public Set<String> getCollaboratorNames(CollaboratorAffiliation affiliation) throws IOException {\n         Set<String> r = new HashSet<>();\n         // no initializer - we just want to the logins\n         PagedIterable<GHUser> users = root.createRequest()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4ODE1Ng=="}, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQxNTY0OA==", "bodyText": "This isn't the fast alternative, just a convenient one. Go ahead and change it.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530415648", "createdAt": "2020-11-25T14:30:52Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -873,10 +895,25 @@ public boolean hasAssignee(GHUser u) throws IOException {\n      *             the io exception\n      */\n     public Set<String> getCollaboratorNames() throws IOException {\n+        return getCollaboratorNames(CollaboratorAffiliation.ALL);\n+    }\n+\n+    /**\n+     * Gets the names of the collaborators on this repository. This method deviates from the principle of this library\n+     * but it works a lot faster than {@link #getCollaborators()}.\n+     *\n+     * @param affiliation\n+     *            Filter users by affiliation\n+     * @return the collaborator names\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public Set<String> getCollaboratorNames(CollaboratorAffiliation affiliation) throws IOException {\n         Set<String> r = new HashSet<>();\n         // no initializer - we just want to the logins\n         PagedIterable<GHUser> users = root.createRequest()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4ODE1Ng=="}, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg2NDI1Mw==", "bodyText": "Is the javadoc in error and I should update that while I'm in here?\n    /**\n     * Gets the names of the collaborators on this repository. This method deviates from the principle of this library\n     * but it works a lot faster than {@link #getCollaborators()}.\n     *\n     * @return the collaborator names\n     * @throws IOException\n     *             the io exception\n     */\n    public Set<String> getCollaboratorNames() throws IOException```", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r533864253", "createdAt": "2020-12-02T03:01:38Z", "author": {"login": "Irialad"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -873,10 +895,25 @@ public boolean hasAssignee(GHUser u) throws IOException {\n      *             the io exception\n      */\n     public Set<String> getCollaboratorNames() throws IOException {\n+        return getCollaboratorNames(CollaboratorAffiliation.ALL);\n+    }\n+\n+    /**\n+     * Gets the names of the collaborators on this repository. This method deviates from the principle of this library\n+     * but it works a lot faster than {@link #getCollaborators()}.\n+     *\n+     * @param affiliation\n+     *            Filter users by affiliation\n+     * @return the collaborator names\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public Set<String> getCollaboratorNames(CollaboratorAffiliation affiliation) throws IOException {\n         Set<String> r = new HashSet<>();\n         // no initializer - we just want to the logins\n         PagedIterable<GHUser> users = root.createRequest()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg4ODE1Ng=="}, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzI1MzcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMTozMDozOVrOH5V8gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzoyNDowOFrOH9I5jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MDQzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private PagedIterable<GHUser> listUsers(final String suffix, Map<String, Object> args) {\n          \n          \n            \n                private PagedIterable<GHUser> listUsers(final String suffix, GitHubRequest.Builder request) {\n          \n      \n    \n    \n  \n\nInstead of passing args, maybe pass the request builder?", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529890435", "createdAt": "2020-11-24T21:30:39Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -2088,8 +2125,14 @@ public GHLabel createLabel(String name, String color, String description) throws\n     }\n \n     private PagedIterable<GHUser> listUsers(final String suffix) {\n+        Map<String, Object> defaultArgs = Collections.EMPTY_MAP;\n+        return listUsers(suffix, defaultArgs);\n+    }\n+\n+    private PagedIterable<GHUser> listUsers(final String suffix, Map<String, Object> args) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkyMjMwMg==", "bodyText": "I'll play around with that, and see if that leads to a more elegant result.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r529922302", "createdAt": "2020-11-24T22:09:39Z", "author": {"login": "Irialad"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -2088,8 +2125,14 @@ public GHLabel createLabel(String name, String color, String description) throws\n     }\n \n     private PagedIterable<GHUser> listUsers(final String suffix) {\n+        Map<String, Object> defaultArgs = Collections.EMPTY_MAP;\n+        return listUsers(suffix, defaultArgs);\n+    }\n+\n+    private PagedIterable<GHUser> listUsers(final String suffix, Map<String, Object> args) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MDQzNQ=="}, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQxMDEyNw==", "bodyText": "I like the with(...) method addition.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530410127", "createdAt": "2020-11-25T14:23:08Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -2088,8 +2125,14 @@ public GHLabel createLabel(String name, String color, String description) throws\n     }\n \n     private PagedIterable<GHUser> listUsers(final String suffix) {\n+        Map<String, Object> defaultArgs = Collections.EMPTY_MAP;\n+        return listUsers(suffix, defaultArgs);\n+    }\n+\n+    private PagedIterable<GHUser> listUsers(final String suffix, Map<String, Object> args) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MDQzNQ=="}, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3MDk5MA==", "bodyText": "Ok, I think I have a slightly nicer way of passing things around. I think I'll shortly be done addressing feedback, and I'll record for the test and update the PR.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r533870990", "createdAt": "2020-12-02T03:24:08Z", "author": {"login": "Irialad"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -2088,8 +2125,14 @@ public GHLabel createLabel(String name, String color, String description) throws\n     }\n \n     private PagedIterable<GHUser> listUsers(final String suffix) {\n+        Map<String, Object> defaultArgs = Collections.EMPTY_MAP;\n+        return listUsers(suffix, defaultArgs);\n+    }\n+\n+    private PagedIterable<GHUser> listUsers(final String suffix, Map<String, Object> args) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTg5MDQzNQ=="}, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjYxMDYxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GitHubRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNDoyMToyOFrOH51l6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNDoyMToyOFrOH51l6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQwODkzOQ==", "bodyText": "Good addition.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530408939", "createdAt": "2020-11-25T14:21:28Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GitHubRequest.java", "diffHunk": "@@ -437,6 +437,21 @@ public B withPreview(String name) {\n             return withHeader(\"Accept\", name);\n         }\n \n+        /**\n+         * With requester.\n+         *\n+         * @param Map\n+         *            map of key value pairs to add\n+         * @return the request builder\n+         */\n+        public B with(Map<String, Object> map) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjYxMjc0OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/kohsuke/github/GHRepositoryTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNDoyMTo1NFrOH51nNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNDoyMTo1NFrOH51nNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQwOTI2OQ==", "bodyText": "Still need to add test recording, of course.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Ignore(\"Data not cached\")", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530409269", "createdAt": "2020-11-25T14:21:54Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHRepositoryTest.java", "diffHunk": "@@ -645,6 +646,16 @@ public void listCollaborators() throws Exception {\n         assertThat(collaborators.size(), greaterThan(10));\n     }\n \n+    @Test\n+    @Ignore(\"Data not cached\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNjY1MDc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNDozMDoxNlrOH51-iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNDoxMTozNVrOH9JuKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQxNTI0MQ==", "bodyText": "Does this work?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return listUsers(\"collaborators\", args);\n          \n          \n            \n                    return listUsers(\"collaborators\", \n          \n          \n            \n                        Collections.singletonMap(\"affiliation\", affiliation);", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r530415241", "createdAt": "2020-11-25T14:30:16Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -834,7 +841,22 @@ public int getSize() {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listUsers(\"collaborators\");\n+        return listCollaborators(CollaboratorAffiliation.ALL);\n+    }\n+\n+    /**\n+     * Lists up the collaborators on this repository.\n+     *\n+     * @param affiliation\n+     *            Filter users by affiliation\n+     * @return Users paged iterable\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public PagedIterable<GHUser> listCollaborators(CollaboratorAffiliation affiliation) throws IOException {\n+        Map<String, Object> args = new HashMap<>();\n+        args.put(\"affiliation\", affiliation.toString().toLowerCase());\n+        return listUsers(\"collaborators\", args);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg4NDQ1OQ==", "bodyText": "Take a look at how I've streamlined things now and tell me what you think.", "url": "https://github.com/hub4j/github-api/pull/981#discussion_r533884459", "createdAt": "2020-12-02T04:11:35Z", "author": {"login": "Irialad"}, "path": "src/main/java/org/kohsuke/github/GHRepository.java", "diffHunk": "@@ -834,7 +841,22 @@ public int getSize() {\n      *             the io exception\n      */\n     public PagedIterable<GHUser> listCollaborators() throws IOException {\n-        return listUsers(\"collaborators\");\n+        return listCollaborators(CollaboratorAffiliation.ALL);\n+    }\n+\n+    /**\n+     * Lists up the collaborators on this repository.\n+     *\n+     * @param affiliation\n+     *            Filter users by affiliation\n+     * @return Users paged iterable\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public PagedIterable<GHUser> listCollaborators(CollaboratorAffiliation affiliation) throws IOException {\n+        Map<String, Object> args = new HashMap<>();\n+        args.put(\"affiliation\", affiliation.toString().toLowerCase());\n+        return listUsers(\"collaborators\", args);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQxNTI0MQ=="}, "originalCommit": {"oid": "3db7aac0d8e0127505fe30812dbc076bf4c5b61b"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1782, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}