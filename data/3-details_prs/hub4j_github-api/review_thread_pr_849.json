{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1Njg5NDQ0", "number": 849, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzoyMzowOFrOEHkajw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzoyMzowOFrOEHkajw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzcyMTExOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHTeam.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMzoyMzowOFrOGnAYrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNTozMjowOFrOGoDffw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU1Mzk2NA==", "bodyText": "The team already knows what organization it is part of, doesn't it?", "url": "https://github.com/hub4j/github-api/pull/849#discussion_r443553964", "createdAt": "2020-06-22T13:23:08Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GHTeam.java", "diffHunk": "@@ -174,6 +174,21 @@ public GHDiscussion getDiscussion(long discussionNumber) throws IOException {\n         return root.createRequest().withUrlPath(api(\"/members\")).toIterable(GHUser[].class, item -> item.wrapUp(root));\n     }\n \n+    /**\n+     * Retrieves the teams that are members of this team.\n+     *\n+     * @param organization\n+     *            the organization that owns this team\n+     * @return the paged iterable\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public PagedIterable<GHTeam> listChildTeams(GHOrganization organization) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "171c7a93f5c1b3141993dfd9b1be571969ffb8eb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY0MDI0OQ==", "bodyText": "I would have guessed so, but I got an Exception when I tried to use the wrapUp method that didn't take an organization argument.\nIs there a better way to solve this?", "url": "https://github.com/hub4j/github-api/pull/849#discussion_r443640249", "createdAt": "2020-06-22T15:23:45Z", "author": {"login": "alexanderkjall"}, "path": "src/main/java/org/kohsuke/github/GHTeam.java", "diffHunk": "@@ -174,6 +174,21 @@ public GHDiscussion getDiscussion(long discussionNumber) throws IOException {\n         return root.createRequest().withUrlPath(api(\"/members\")).toIterable(GHUser[].class, item -> item.wrapUp(root));\n     }\n \n+    /**\n+     * Retrieves the teams that are members of this team.\n+     *\n+     * @param organization\n+     *            the organization that owns this team\n+     * @return the paged iterable\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public PagedIterable<GHTeam> listChildTeams(GHOrganization organization) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU1Mzk2NA=="}, "originalCommit": {"oid": "171c7a93f5c1b3141993dfd9b1be571969ffb8eb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY1MzQzOQ==", "bodyText": "I now see that the organization is stored as a member of the Team.", "url": "https://github.com/hub4j/github-api/pull/849#discussion_r444653439", "createdAt": "2020-06-24T05:32:08Z", "author": {"login": "alexanderkjall"}, "path": "src/main/java/org/kohsuke/github/GHTeam.java", "diffHunk": "@@ -174,6 +174,21 @@ public GHDiscussion getDiscussion(long discussionNumber) throws IOException {\n         return root.createRequest().withUrlPath(api(\"/members\")).toIterable(GHUser[].class, item -> item.wrapUp(root));\n     }\n \n+    /**\n+     * Retrieves the teams that are members of this team.\n+     *\n+     * @param organization\n+     *            the organization that owns this team\n+     * @return the paged iterable\n+     * @throws IOException\n+     *             the io exception\n+     */\n+    public PagedIterable<GHTeam> listChildTeams(GHOrganization organization) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU1Mzk2NA=="}, "originalCommit": {"oid": "171c7a93f5c1b3141993dfd9b1be571969ffb8eb"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1801, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}