{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzI4NDg1", "number": 817, "title": "Consider header rate limit information for getRateLimit()", "bodyText": "Description\nWhen getRateLimit() call gets a 404 response, use the header rate limit information if it is available.\nFixes #802\n@timja Could you take a look at this?\nBefore submitting a PR:\nWe love getting PRs, but we hate asking people for the same basic changes every time.\n\n Push your changes to a branch other than master. Create your PR from that branch.\n Add JavaDocs and other comments\n Write tests that run and pass in CI. See CONTRIBUTING.md for details on how to capture snapshot data.\n Run mvn clean compile locally. This may reformat your code, commit those changes.\n Run mvn -D enable-ci clean install site locally. If this command doesn't succeed, your change will not pass CI.", "createdAt": "2020-05-18T20:34:28Z", "url": "https://github.com/hub4j/github-api/pull/817", "merged": true, "mergeCommit": {"oid": "e1180a12fb882694e7a2fe644781e0d32672d6e6"}, "closed": true, "closedAt": "2020-05-20T00:08:26Z", "author": {"login": "bitwiseman"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcimLpIgBqjMzNDkwNjY0NTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABci7TjmAH2gAyNDE5NzI4NDg1OjZmOTk0ZjMxZjdkMGVhMGNlZjVmMGM2N2E2MTgzMmI5ZGQ0ODJkZDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "085dbfcf33a9fa769b1dd84c2e83293290f4af38", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/085dbfcf33a9fa769b1dd84c2e83293290f4af38", "committedDate": "2020-05-18T20:31:30Z", "message": "Consider header rate limit information for getRateLimit()\n\nFixes #802"}, "afterCommit": {"oid": "c338dd55a038ec6ce46ee07ced5458150d90689e", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/c338dd55a038ec6ce46ee07ced5458150d90689e", "committedDate": "2020-05-18T20:48:25Z", "message": "Consider header rate limit information for getRateLimit()\n\nFixes #802"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c338dd55a038ec6ce46ee07ced5458150d90689e", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/c338dd55a038ec6ce46ee07ced5458150d90689e", "committedDate": "2020-05-18T20:48:25Z", "message": "Consider header rate limit information for getRateLimit()\n\nFixes #802"}, "afterCommit": {"oid": "91c59680d0dd6f2ebdda71b4f3aa59696a5f6e58", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/91c59680d0dd6f2ebdda71b4f3aa59696a5f6e58", "committedDate": "2020-05-18T20:51:41Z", "message": "Consider header rate limit information for getRateLimit()\n\nFixes #802"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91c59680d0dd6f2ebdda71b4f3aa59696a5f6e58", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/91c59680d0dd6f2ebdda71b4f3aa59696a5f6e58", "committedDate": "2020-05-18T20:51:41Z", "message": "Consider header rate limit information for getRateLimit()\n\nFixes #802"}, "afterCommit": {"oid": "ad3f8333c093f2e6489dbd367f1cb382952bacea", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/ad3f8333c093f2e6489dbd367f1cb382952bacea", "committedDate": "2020-05-18T20:53:17Z", "message": "Consider header rate limit information for getRateLimit()\n\nFixes #802"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38aa99a0630fac9f6cadebf69cecb23932340d7a", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/38aa99a0630fac9f6cadebf69cecb23932340d7a", "committedDate": "2020-05-18T20:56:10Z", "message": "Consider header rate limit information for getRateLimit()\n\nFixes #802"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad3f8333c093f2e6489dbd367f1cb382952bacea", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/ad3f8333c093f2e6489dbd367f1cb382952bacea", "committedDate": "2020-05-18T20:53:17Z", "message": "Consider header rate limit information for getRateLimit()\n\nFixes #802"}, "afterCommit": {"oid": "38aa99a0630fac9f6cadebf69cecb23932340d7a", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/38aa99a0630fac9f6cadebf69cecb23932340d7a", "committedDate": "2020-05-18T20:56:10Z", "message": "Consider header rate limit information for getRateLimit()\n\nFixes #802"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MDczMTYx", "url": "https://github.com/hub4j/github-api/pull/817#pullrequestreview-414073161", "createdAt": "2020-05-19T03:16:39Z", "commit": {"oid": "38aa99a0630fac9f6cadebf69cecb23932340d7a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMzoxNjozOVrOGXOYkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwMzoxNjozOVrOGXOYkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAwNjA5Ng==", "bodyText": "I don\u2019t think this statement is right anymore at least on recent versions from reading the docs,\nMy understanding is that it is available but there\u2019s a global flag for turning it off or on.\nHaving it off means that it will return a 404", "url": "https://github.com/hub4j/github-api/pull/817#discussion_r427006096", "createdAt": "2020-05-19T03:16:39Z", "author": {"login": "timja"}, "path": "src/main/java/org/kohsuke/github/GitHubClient.java", "diffHunk": "@@ -210,21 +210,31 @@ public boolean isAnonymous() {\n     /**\n      * Gets the current rate limit from the server.\n      *\n+     * For some versions of GitHub Enterprise, the {@code /rate_limit} endpoint returns a {@code 404 Not Found}. In\n+     * that, if {@link #lastRateLimit()} is not {@code null} and is not expired, it will be returned. Otherwise, a\n+     * placeholder {@link GHRateLimit} instance with {@link GHRateLimit.UnknownLimitRecord}s will be returned.\n+     *\n      * @return the rate limit\n      * @throws IOException\n      *             the io exception\n      */\n+    @Nonnull\n     public GHRateLimit getRateLimit() throws IOException {\n-        GHRateLimit rateLimit;\n+        GHRateLimit result;\n         try {\n-            rateLimit = fetch(JsonRateLimit.class, \"/rate_limit\").resources;\n+            result = fetch(JsonRateLimit.class, \"/rate_limit\").resources;\n         } catch (FileNotFoundException e) {\n-            // GitHub Enterprise doesn't have the rate limit\n-            // return a default rate limit that\n-            rateLimit = GHRateLimit.Unknown();\n+            // GitHub Enterprise doesn't have the rate_limit endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38aa99a0630fac9f6cadebf69cecb23932340d7a"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0ODM0NTM1", "url": "https://github.com/hub4j/github-api/pull/817#pullrequestreview-414834535", "createdAt": "2020-05-19T21:24:47Z", "commit": {"oid": "38aa99a0630fac9f6cadebf69cecb23932340d7a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMToyNDo0N1rOGXzLwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMToyNDo0N1rOGXzLwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzYwOTAyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // GitHub Enterprise doesn't have the rate_limit endpoint\n          \n          \n            \n                        // For some versions of GitHub Enterprise, the rate_limit endpoint returns a 404.", "url": "https://github.com/hub4j/github-api/pull/817#discussion_r427609026", "createdAt": "2020-05-19T21:24:47Z", "author": {"login": "bitwiseman"}, "path": "src/main/java/org/kohsuke/github/GitHubClient.java", "diffHunk": "@@ -210,21 +210,31 @@ public boolean isAnonymous() {\n     /**\n      * Gets the current rate limit from the server.\n      *\n+     * For some versions of GitHub Enterprise, the {@code /rate_limit} endpoint returns a {@code 404 Not Found}. In\n+     * that, if {@link #lastRateLimit()} is not {@code null} and is not expired, it will be returned. Otherwise, a\n+     * placeholder {@link GHRateLimit} instance with {@link GHRateLimit.UnknownLimitRecord}s will be returned.\n+     *\n      * @return the rate limit\n      * @throws IOException\n      *             the io exception\n      */\n+    @Nonnull\n     public GHRateLimit getRateLimit() throws IOException {\n-        GHRateLimit rateLimit;\n+        GHRateLimit result;\n         try {\n-            rateLimit = fetch(JsonRateLimit.class, \"/rate_limit\").resources;\n+            result = fetch(JsonRateLimit.class, \"/rate_limit\").resources;\n         } catch (FileNotFoundException e) {\n-            // GitHub Enterprise doesn't have the rate limit\n-            // return a default rate limit that\n-            rateLimit = GHRateLimit.Unknown();\n+            // GitHub Enterprise doesn't have the rate_limit endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38aa99a0630fac9f6cadebf69cecb23932340d7a"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f994f31f7d0ea0cef5f0c67a61832b9dd482dd2", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/6f994f31f7d0ea0cef5f0c67a61832b9dd482dd2", "committedDate": "2020-05-19T21:25:16Z", "message": "Update src/main/java/org/kohsuke/github/GitHubClient.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1606, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}