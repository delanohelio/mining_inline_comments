{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MTY3NTcw", "number": 804, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDo1OTo1NlrOD6x2TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToyMDo0M1rOD7SU9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTYwNzE3OnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/kohsuke/github/GHContentIntegrationTest/wiremock/testGetFileContentWithNonAsciiPath/__files/repos_github-api-test-org_ghcontentintegrationtest_contents_ghcontent-ro_a-dir-with-nonascii-entry_bornsteintxt-3.json", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMDo1OTo1NlrOGSzhrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToxNzoyNFrOGTg93Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM3MTc1OA==", "bodyText": "This is interesting.  What happens if you take this path string and call repo.getFileContent() on it?", "url": "https://github.com/hub4j/github-api/pull/804#discussion_r422371758", "createdAt": "2020-05-08T20:59:56Z", "author": {"login": "bitwiseman"}, "path": "src/test/resources/org/kohsuke/github/GHContentIntegrationTest/wiremock/testGetFileContentWithNonAsciiPath/__files/repos_github-api-test-org_ghcontentintegrationtest_contents_ghcontent-ro_a-dir-with-nonascii-entry_bornsteintxt-3.json", "diffHunk": "@@ -0,0 +1,18 @@\n+{\n+  \"name\": \"B??????rnstein.txt\",\n+  \"path\": \"ghcontent-ro/a-dir-with-nonascii-entry/B??????rnstein.txt\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa600c03e241014d4aa85db8769179ded41e8930"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAzNDg4Mw==", "bodyText": "You mean against the real github? i haven't tried that but it surely won't work.", "url": "https://github.com/hub4j/github-api/pull/804#discussion_r423034883", "createdAt": "2020-05-11T13:22:47Z", "author": {"login": "reisners"}, "path": "src/test/resources/org/kohsuke/github/GHContentIntegrationTest/wiremock/testGetFileContentWithNonAsciiPath/__files/repos_github-api-test-org_ghcontentintegrationtest_contents_ghcontent-ro_a-dir-with-nonascii-entry_bornsteintxt-3.json", "diffHunk": "@@ -0,0 +1,18 @@\n+{\n+  \"name\": \"B??????rnstein.txt\",\n+  \"path\": \"ghcontent-ro/a-dir-with-nonascii-entry/B??????rnstein.txt\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM3MTc1OA=="}, "originalCommit": {"oid": "fa600c03e241014d4aa85db8769179ded41e8930"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExNjI1Mw==", "bodyText": "It should work.  For other paths you can do exactly this.  It's a roundtrip thing.", "url": "https://github.com/hub4j/github-api/pull/804#discussion_r423116253", "createdAt": "2020-05-11T15:17:24Z", "author": {"login": "bitwiseman"}, "path": "src/test/resources/org/kohsuke/github/GHContentIntegrationTest/wiremock/testGetFileContentWithNonAsciiPath/__files/repos_github-api-test-org_ghcontentintegrationtest_contents_ghcontent-ro_a-dir-with-nonascii-entry_bornsteintxt-3.json", "diffHunk": "@@ -0,0 +1,18 @@\n+{\n+  \"name\": \"B??????rnstein.txt\",\n+  \"path\": \"ghcontent-ro/a-dir-with-nonascii-entry/B??????rnstein.txt\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM3MTc1OA=="}, "originalCommit": {"oid": "fa600c03e241014d4aa85db8769179ded41e8930"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNDkyODUyOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/kohsuke/github/GHContentIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToyMDo0M1rOGThG7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNToyNjoxOFrOGThWrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExODU3NQ==", "bodyText": "I'm looking for a test something like this (I haven't run locally):\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final GHContent fileContent = gitHub.getRepository(\"hub4j-test-org/GHContentIntegrationTest\")\n          \n          \n            \n                            .getFileContent(\"ghcontent-ro/a-file-with-\\u00F6\");\n          \n          \n            \n                    assertThat(IOUtils.readLines(fileContent.read(), StandardCharsets.UTF_8), hasItems(\"test\"));\n          \n          \n            \n                    final GHRepository repo = gitHub.getRepository(\"hub4j-test-org/GHContentIntegrationTest\");\n          \n          \n            \n                    final GHContent fileContent = repo.getFileContent(\"ghcontent-ro/a-file-with-\\u00F6\");\n          \n          \n            \n                    assertThat(IOUtils.readLines(fileContent.read(), StandardCharsets.UTF_8), hasItems(\"test\"));\n          \n          \n            \n                    \n          \n          \n            \n                    final GHContent fileContent2 = repo.getFileContent(fileContent.getPath());\n          \n          \n            \n                    assertThat(IOUtils.readLines(fileContent2.read(), StandardCharsets.UTF_8), hasItems(\"test\"));", "url": "https://github.com/hub4j/github-api/pull/804#discussion_r423118575", "createdAt": "2020-05-11T15:20:43Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHContentIntegrationTest.java", "diffHunk": "@@ -158,4 +160,11 @@ public void testMIMELonger() throws IOException {\n                 + \"123456789012345678901234567890123456789012345678901234567890\");\n         ghContentBuilder.commit();\n     }\n+\n+    @Test\n+    public void testGetFileContentWithNonAsciiPath() throws Exception {\n+        final GHContent fileContent = gitHub.getRepository(\"hub4j-test-org/GHContentIntegrationTest\")\n+                .getFileContent(\"ghcontent-ro/a-file-with-\\u00F6\");\n+        assertThat(IOUtils.readLines(fileContent.read(), StandardCharsets.UTF_8), hasItems(\"test\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbf4c4846153962e513bbdcf39be05402eb36308"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzEyMjYwNQ==", "bodyText": "I just checked; your modification works on my machine. So yes, please go with it.", "url": "https://github.com/hub4j/github-api/pull/804#discussion_r423122605", "createdAt": "2020-05-11T15:26:18Z", "author": {"login": "reisners"}, "path": "src/test/java/org/kohsuke/github/GHContentIntegrationTest.java", "diffHunk": "@@ -158,4 +160,11 @@ public void testMIMELonger() throws IOException {\n                 + \"123456789012345678901234567890123456789012345678901234567890\");\n         ghContentBuilder.commit();\n     }\n+\n+    @Test\n+    public void testGetFileContentWithNonAsciiPath() throws Exception {\n+        final GHContent fileContent = gitHub.getRepository(\"hub4j-test-org/GHContentIntegrationTest\")\n+                .getFileContent(\"ghcontent-ro/a-file-with-\\u00F6\");\n+        assertThat(IOUtils.readLines(fileContent.read(), StandardCharsets.UTF_8), hasItems(\"test\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzExODU3NQ=="}, "originalCommit": {"oid": "fbf4c4846153962e513bbdcf39be05402eb36308"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1926, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}