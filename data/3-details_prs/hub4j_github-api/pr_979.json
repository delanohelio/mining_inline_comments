{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzgwOTg4", "number": 979, "title": "pull_request action \"edited\": changes", "bodyText": "Description\nWebhook with X-GitHub-Event: pull_request and \"action\": \"edited\" has a field \"changes\" that is not present in GHEventPayload.PullRequest. I've found three triggers that leads to \"edited\" action:\n\nChange PR title:\n\n...\n  \"changes\": {\n    \"title\": {\n      \"from\": \"REST-276 - easy-random\"\n    }\n  },\n...\n(full payload - in test data)\n\nChange PR description:\n\n...\n\"changes\": {\n    \"body\": {\n      \"from\": \"**JIRA Ticket URL:**\\r\\nhttps://jira.devfactory.com/browse/REST-276\\r\\n\\r\\n...\"\n    }\n  },\n...\n\nChange target branch:\n\n...\n  \"changes\": {\n    \"base\": {\n      \"ref\": {\n        \"from\": \"develop\"\n      },\n      \"sha\": {\n        \"from\": \"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"\n      }\n    }\n  },\n...\nSo, \"changes\" fields contain old value that was changed, while pull_request object has latest values (see UT json payloads). Any other changes of a PR in GitHub UI leads to other types of notifications (e.g. action is assigned or ready_for_review or labeled).", "createdAt": "2020-11-18T18:14:42Z", "url": "https://github.com/hub4j/github-api/pull/979", "merged": true, "mergeCommit": {"oid": "a433bcda2e51dddfd0e254d58cd582e3e8e71abe"}, "closed": true, "closedAt": "2020-11-24T02:26:09Z", "author": {"login": "seregamorph"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddxy4nAH2gAyNTIzMzgwOTg4OjA0YjI4M2M1MzkwY2VjZGQ0OGY1NWM4NDBlNDg4MGMzOGEwZDJlMGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfgSepAFqTUzNzAyODc4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e", "author": {"user": {"login": "seregamorph", "name": "Sergey Chernov"}}, "url": "https://github.com/hub4j/github-api/commit/04b283c5390cecdd48f55c840e4880c38a0d2e0e", "committedDate": "2020-11-18T17:41:58Z", "message": "pull_request action \"edited\": changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzQ1MjI0", "url": "https://github.com/hub4j/github-api/pull/979#pullrequestreview-533745224", "createdAt": "2020-11-18T18:15:21Z", "commit": {"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoxNToyMVrOH172BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoxNToyMVrOH172BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxNzA2MA==", "bodyText": "base changed - covered with UT\ntitle changed - covered with UT\nbody changed - cover on demand", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526317060", "createdAt": "2020-11-18T18:15:21Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHPullRequestChanges.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package org.kohsuke.github;\n+\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+/**\n+ * Wrapper to define changed fields on pull_request action=\"edited\"\n+ *\n+ * @see GHEventPayload.PullRequest\n+ */\n+@SuppressFBWarnings(\"UWF_UNWRITTEN_FIELD\")\n+public class GHPullRequestChanges {\n+\n+    private GHCommitPointer base;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzQ1ODcz", "url": "https://github.com/hub4j/github-api/pull/979#pullrequestreview-533745873", "createdAt": "2020-11-18T18:16:08Z", "commit": {"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoxNjowOFrOH174Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoxNjowOFrOH174Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxNzU5OA==", "bodyText": "body not changed - hence \"changes\" does not contain it", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526317598", "createdAt": "2020-11-18T18:16:08Z", "author": {"login": "seregamorph"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,33 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODQ5NTg3", "url": "https://github.com/hub4j/github-api/pull/979#pullrequestreview-533849587", "createdAt": "2020-11-18T20:29:28Z", "commit": {"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDoyOToyOFrOH2A65Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozMDoxM1rOH2A8lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMDIyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges().getBody(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges().getBody(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges().getTitle(), nullValue());", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526400229", "createdAt": "2020-11-18T20:29:28Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,33 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMDY2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges().getBody(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges().getBody(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges(). getChanges(), nullValue());", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526400660", "createdAt": "2020-11-18T20:30:13Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,33 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+    }\n+\n+    @Test\n+    public void pull_request_edited_title() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle().getFrom(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random 4.3.0\"));\n+        assertThat(event.getChanges().getBase(), nullValue());\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ad0329c5692afd3c1903539fc0713b088487eb4", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/9ad0329c5692afd3c1903539fc0713b088487eb4", "committedDate": "2020-11-18T20:47:18Z", "message": "Apply suggestions from code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODYzMTY0", "url": "https://github.com/hub4j/github-api/pull/979#pullrequestreview-533863164", "createdAt": "2020-11-18T20:48:44Z", "commit": {"oid": "9ad0329c5692afd3c1903539fc0713b088487eb4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo0ODo0NVrOH2Bjng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo0ODo0NVrOH2Bjng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMDY1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges(). getChanges(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges().getTitle(), nullValue());", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526410654", "createdAt": "2020-11-18T20:48:45Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,35 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+    }\n+\n+    @Test\n+    public void pull_request_edited_title() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle().getFrom(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random 4.3.0\"));\n+        assertThat(event.getChanges().getBase(), nullValue());\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges(). getChanges(), nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad0329c5692afd3c1903539fc0713b088487eb4"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c81e48a31737e59945dbbd9f8d868cbad9afb52", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/8c81e48a31737e59945dbbd9f8d868cbad9afb52", "committedDate": "2020-11-18T20:48:51Z", "message": "Update src/test/java/org/kohsuke/github/GHEventPayloadTest.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODY0MTQy", "url": "https://github.com/hub4j/github-api/pull/979#pullrequestreview-533864142", "createdAt": "2020-11-18T20:50:04Z", "commit": {"oid": "9ad0329c5692afd3c1903539fc0713b088487eb4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo1MDowNFrOH2Bmvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo1MDowNFrOH2Bmvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMTQ1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges(). getChanges(), nullValue());", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526411455", "createdAt": "2020-11-18T20:50:04Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,35 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+    }\n+\n+    @Test\n+    public void pull_request_edited_title() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle().getFrom(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random 4.3.0\"));\n+        assertThat(event.getChanges().getBase(), nullValue());\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges(). getChanges(), nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad0329c5692afd3c1903539fc0713b088487eb4"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzODY0NTk1", "url": "https://github.com/hub4j/github-api/pull/979#pullrequestreview-533864595", "createdAt": "2020-11-18T20:50:41Z", "commit": {"oid": "8c81e48a31737e59945dbbd9f8d868cbad9afb52"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo1MDo0MVrOH2BoHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo1MDo0MVrOH2BoHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMTgwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges().getTitle(), nullValue());", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526411807", "createdAt": "2020-11-18T20:50:41Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,35 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+    }\n+\n+    @Test\n+    public void pull_request_edited_title() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle().getFrom(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random 4.3.0\"));\n+        assertThat(event.getChanges().getBase(), nullValue());\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges().getTitle(), nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c81e48a31737e59945dbbd9f8d868cbad9afb52"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4415ac8fd2f72ee1290b3d958ae7ecaf16578316", "author": {"user": {"login": "bitwiseman", "name": "Liam Newman"}}, "url": "https://github.com/hub4j/github-api/commit/4415ac8fd2f72ee1290b3d958ae7ecaf16578316", "committedDate": "2020-11-18T20:50:47Z", "message": "Update src/test/java/org/kohsuke/github/GHEventPayloadTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca365b12f62a1962150264df0c38bdaf33f757ec", "author": {"user": {"login": "seregamorph", "name": "Sergey Chernov"}}, "url": "https://github.com/hub4j/github-api/commit/ca365b12f62a1962150264df0c38bdaf33f757ec", "committedDate": "2020-11-19T10:44:56Z", "message": "Merge remote-tracking branch 'origin/master' into feature/pull_request-edited"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0feb520549632c8ddb41f36d192dffdd5f385676", "author": {"user": {"login": "seregamorph", "name": "Sergey Chernov"}}, "url": "https://github.com/hub4j/github-api/commit/0feb520549632c8ddb41f36d192dffdd5f385676", "committedDate": "2020-11-19T10:50:33Z", "message": "pull_request action \"edited\": changes - test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MDI4Nzgx", "url": "https://github.com/hub4j/github-api/pull/979#pullrequestreview-537028781", "createdAt": "2020-11-24T02:26:02Z", "commit": {"oid": "0feb520549632c8ddb41f36d192dffdd5f385676"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1586, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}