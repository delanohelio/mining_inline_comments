{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzgwOTg4", "number": 979, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoxNToyMVrOE6s_Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo1MDo0MVrOE6wqUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTg5OTc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/kohsuke/github/GHPullRequestChanges.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoxNToyMVrOH172BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoxNToyMVrOH172BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxNzA2MA==", "bodyText": "base changed - covered with UT\ntitle changed - covered with UT\nbody changed - cover on demand", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526317060", "createdAt": "2020-11-18T18:15:21Z", "author": {"login": "seregamorph"}, "path": "src/main/java/org/kohsuke/github/GHPullRequestChanges.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package org.kohsuke.github;\n+\n+import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n+\n+/**\n+ * Wrapper to define changed fields on pull_request action=\"edited\"\n+ *\n+ * @see GHEventPayload.PullRequest\n+ */\n+@SuppressFBWarnings(\"UWF_UNWRITTEN_FIELD\")\n+public class GHPullRequestChanges {\n+\n+    private GHCommitPointer base;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTkwMzAzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoxNjowOFrOH174Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxODoxNjowOFrOH174Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjMxNzU5OA==", "bodyText": "body not changed - hence \"changes\" does not contain it", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526317598", "createdAt": "2020-11-18T18:16:08Z", "author": {"login": "seregamorph"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,33 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDQyNzU2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDoyOToyOFrOH2A65Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDoyOToyOFrOH2A65Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMDIyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges().getBody(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges().getBody(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges().getTitle(), nullValue());", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526400229", "createdAt": "2020-11-18T20:29:28Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,33 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDQzMDMyOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozMDoxM1rOH2A8lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozMDoxM1rOH2A8lA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMDY2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges().getBody(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges().getBody(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges(). getChanges(), nullValue());", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526400660", "createdAt": "2020-11-18T20:30:13Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,33 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+    }\n+\n+    @Test\n+    public void pull_request_edited_title() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle().getFrom(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random 4.3.0\"));\n+        assertThat(event.getChanges().getBase(), nullValue());\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b283c5390cecdd48f55c840e4880c38a0d2e0e"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDQ5MzQ0OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo0ODo0NVrOH2Bjng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo0ODo0NVrOH2Bjng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMDY1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges(). getChanges(), nullValue());\n          \n          \n            \n                    assertThat(event.getChanges().getTitle(), nullValue());", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526410654", "createdAt": "2020-11-18T20:48:45Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,35 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+    }\n+\n+    @Test\n+    public void pull_request_edited_title() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle().getFrom(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random 4.3.0\"));\n+        assertThat(event.getChanges().getBase(), nullValue());\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges(). getChanges(), nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad0329c5692afd3c1903539fc0713b088487eb4"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDQ5ODk2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo1MDowNFrOH2Bmvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo1MDowNFrOH2Bmvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMTQ1NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges(). getChanges(), nullValue());", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526411455", "createdAt": "2020-11-18T20:50:04Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,35 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+    }\n+\n+    @Test\n+    public void pull_request_edited_title() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle().getFrom(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random 4.3.0\"));\n+        assertThat(event.getChanges().getBase(), nullValue());\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges(). getChanges(), nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad0329c5692afd3c1903539fc0713b088487eb4"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDUwMTI5OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo1MDo0MVrOH2BoHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo1MDo0MVrOH2BoHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMTgwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(event.getChanges().getTitle(), nullValue());", "url": "https://github.com/hub4j/github-api/pull/979#discussion_r526411807", "createdAt": "2020-11-18T20:50:41Z", "author": {"login": "bitwiseman"}, "path": "src/test/java/org/kohsuke/github/GHEventPayloadTest.java", "diffHunk": "@@ -214,6 +214,35 @@ public void pull_request() throws Exception {\n         assertThat(event.getSender().getLogin(), is(\"baxterthehacker\"));\n     }\n \n+    @Test\n+    public void pull_request_edited_base() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getChanges().getBase().getRef().getFrom(), is(\"develop\"));\n+        assertThat(event.getChanges().getBase().getSha().getFrom(), is(\"4b0f3b9fd582b071652ccfccd10bfc8c143cff96\"));\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges().getTitle(), nullValue());\n+    }\n+\n+    @Test\n+    public void pull_request_edited_title() throws Exception {\n+        GHEventPayload.PullRequest event = GitHub.offline()\n+                .parseEventPayload(payload.asReader(), GHEventPayload.PullRequest.class);\n+\n+        assertThat(event.getAction(), is(\"edited\"));\n+        assertThat(event.getChanges().getTitle().getFrom(), is(\"REST-276 - easy-random\"));\n+        assertThat(event.getPullRequest().getTitle(), is(\"REST-276 - easy-random 4.3.0\"));\n+        assertThat(event.getChanges().getBase(), nullValue());\n+        assertThat(event.getPullRequest().getBody(), startsWith(\"**JIRA Ticket URL:**\"));\n+        assertThat(event.getChanges().getBody(), nullValue());\n+        assertThat(event.getChanges().getTitle(), nullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c81e48a31737e59945dbbd9f8d868cbad9afb52"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1776, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}