{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMjM3MTMw", "number": 154, "title": "[Micro-service] Subnet Manager - implementation and deployment in K8s", "bodyText": "This PR proposes the following changes:\n\nSubnet manager and kubernetes automation configuration\nSubnet manager UTs\nSubnet manager integrated with vpc manager, ip manager, route manager, and mac manager", "createdAt": "2020-04-09T06:36:42Z", "url": "https://github.com/futurewei-cloud/alcor/pull/154", "merged": true, "mergeCommit": {"oid": "b6bcc078480884686b51a176ec7befa3fff2529e"}, "closed": true, "closedAt": "2020-04-23T18:37:34Z", "author": {"login": "kevin-zhonghao"}, "timelineItems": {"totalCount": 124, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZkJkCgH2gAyNDAxMjM3MTMwOjVmYmRiMmQxNjI3NGNlYzhkYWYxZTg5ZGU1Mzk0NzMwNThiZDhmYjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcahMh8AH2gAyNDAxMjM3MTMwOjI0NWNmNjFkZDYxYWM3ZTdmYjc0MzE2Y2FkNmY2NTk0YmIwMmM3Yzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/5fbdb2d16274cec8daf1e89de539473058bd8fb7", "committedDate": "2020-04-20T19:21:13Z", "message": "Remove vpcId in SubnetManagerAPIs and update the parameter format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NjUyNTE3", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-396652517", "createdAt": "2020-04-20T17:13:45Z", "commit": {"oid": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoxMzo0NlrOGIe_lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoxMzo0NlrOGIe_lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0OTU5MQ==", "bodyText": "Let us remove all unnecessary dependencies from Subnet Manager. A good example is https://github.com/chenpiaoping/alcor/blob/ip_manager/services/private_ip_manager/pom.xml.\nIt has very limited dependencies which is more expected.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411549591", "createdAt": "2020-04-20T17:13:46Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/pom.xml", "diffHunk": "@@ -0,0 +1,212 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.2.6.RELEASE</version>\n+        <relativePath/> <!-- lookup parent from repository -->\n+    </parent>\n+    <groupId>com.futurewei.alcor</groupId>\n+    <artifactId>SubnetManager</artifactId>\n+    <version>0.1.0-SNAPSHOT</version>\n+    <name>AlcorSubnetManager</name>\n+    <description>AlcorSubnet</description>\n+\n+    <properties>\n+        <java.version>1.8</java.version>\n+        <maven.compiler.source>1.7</maven.compiler.source>\n+        <maven.compiler.target>1.7</maven.compiler.target>\n+        <asciidoctor-plugin.version>1.5.6</asciidoctor-plugin.version>\n+        <snippets>${project.basedir}/target/generated-snippets/</snippets>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd7794d100889ae9ea8f1c8552a7b1779cdaafab", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/bd7794d100889ae9ea8f1c8552a7b1779cdaafab", "committedDate": "2020-04-20T21:11:17Z", "message": "Add a new API to get all subnets in a project"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fa5360033d5c6f5646d8ec6d972db7e83f2b602", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3fa5360033d5c6f5646d8ec6d972db7e83f2b602", "committedDate": "2020-04-20T21:42:43Z", "message": "subnet manager update - comments issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "928358ad845576848b72f826ca12f6cb4d8d1267", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/928358ad845576848b72f826ca12f6cb4d8d1267", "committedDate": "2020-04-20T21:46:00Z", "message": "Merge pull request #20 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update - comments issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82f28a1a356553499cf9b04b273e1c130c3f2682", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/82f28a1a356553499cf9b04b273e1c130c3f2682", "committedDate": "2020-04-20T21:49:09Z", "message": "Merge pull request #21 from kevin-zhonghao/master\n\nsync up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3aae892b07cfb0209eac2e5fb9e5ea769be9ef9", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a3aae892b07cfb0209eac2e5fb9e5ea769be9ef9", "committedDate": "2020-04-21T04:56:54Z", "message": "Fix duplicated webclient bean issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "133ab73e75e63b3cbbdaf3229ccf11d24b392035", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/133ab73e75e63b3cbbdaf3229ccf11d24b392035", "committedDate": "2020-04-21T04:59:38Z", "message": "api gateway update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80aa7111dac5348423c91c5bf79709de6d7efb9d", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/80aa7111dac5348423c91c5bf79709de6d7efb9d", "committedDate": "2020-04-21T05:03:07Z", "message": "Merge pull request #22 from kevin-zhonghao/feature/route_manager\n\napi gateway update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5628dd9a478eec91e0807d6d66f3623296a71adc", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/5628dd9a478eec91e0807d6d66f3623296a71adc", "committedDate": "2020-04-21T05:04:25Z", "message": "Merge pull request #23 from kevin-zhonghao/master\n\napi gateway update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e3c033782a3fc852c0b53882577d8eca50d2780", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/4e3c033782a3fc852c0b53882577d8eca50d2780", "committedDate": "2020-04-21T05:52:24Z", "message": "Update vpcManagerServiceURL and subnetManagerServiceURL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46cee78617f584d217afae421f18d086edf7ea10", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/46cee78617f584d217afae421f18d086edf7ea10", "committedDate": "2020-04-21T05:55:03Z", "message": "Merge pull request #24 from kevin-zhonghao/master\n\nUpdate vpcManagerServiceURL and subnetManagerServiceURL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e224f0083872c7d35f05661d7a503f377fa25d64", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e224f0083872c7d35f05661d7a503f377fa25d64", "committedDate": "2020-04-22T17:15:49Z", "message": "Merge pull request #25 from futurewei-cloud/master\n\n[Micro-service] Private IP manager (#164)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6fc53f16c6827c0840d04010be665308b845728", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f6fc53f16c6827c0840d04010be665308b845728", "committedDate": "2020-04-22T17:16:55Z", "message": "Merge pull request #26 from kevin-zhonghao/master\n\nip_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "513aa00613ba2d98d98661cc271c915d2d12104a", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/513aa00613ba2d98d98661cc271c915d2d12104a", "committedDate": "2020-04-23T00:00:17Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f52b25dce6f357f66931c12fe75381eac92c8930", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f52b25dce6f357f66931c12fe75381eac92c8930", "committedDate": "2020-04-23T00:03:22Z", "message": "Merge pull request #27 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7e9d3b4d20537b6fafd7072215fdf12ea615b2b", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e7e9d3b4d20537b6fafd7072215fdf12ea615b2b", "committedDate": "2020-04-23T18:02:38Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbebd12fcebb3a31e6869c3a128864c96779d33e", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/bbebd12fcebb3a31e6869c3a128864c96779d33e", "committedDate": "2020-04-23T18:05:22Z", "message": "Merge pull request #28 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0adef992724bd6938f925e28b255c2283e106c7a", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0adef992724bd6938f925e28b255c2283e106c7a", "committedDate": "2020-04-23T18:08:42Z", "message": "Merge pull request #29 from kevin-zhonghao/master\n\nvpc manager update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MzU0NDI2", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-399354426", "createdAt": "2020-04-23T18:11:48Z", "commit": {"oid": "f52b25dce6f357f66931c12fe75381eac92c8930"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODoxMTo0OVrOGK1iOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODoxMTo0OVrOGK1iOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAxNjA1OQ==", "bodyText": "gateway mac address", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r414016059", "createdAt": "2020-04-23T18:11:49Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/SubnetState.java", "diffHunk": "@@ -50,31 +50,44 @@\n     @JsonProperty(\"routes\")\n     private List<RouteWebObject> routes;\n \n+    @JsonProperty(\"mac_address\")\n+    private String macAddress;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f52b25dce6f357f66931c12fe75381eac92c8930"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MzU1Mjkx", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-399355291", "createdAt": "2020-04-23T18:13:02Z", "commit": {"oid": "f52b25dce6f357f66931c12fe75381eac92c8930"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f17b628b38eb670bf31a23d48671f60b1701aeb", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/2f17b628b38eb670bf31a23d48671f60b1701aeb", "committedDate": "2020-04-23T18:20:43Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39450ae0739d75c12ca6d81e21bd679e80d66f67", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/39450ae0739d75c12ca6d81e21bd679e80d66f67", "committedDate": "2020-04-23T18:22:23Z", "message": "Merge pull request #30 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "245cf61dd61ac7e7fb74316cad6f6594bb02c7c7", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/245cf61dd61ac7e7fb74316cad6f6594bb02c7c7", "committedDate": "2020-04-23T18:28:40Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a81d90c0c4b33c3a4ee7165b4f787aff53d440ff", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a81d90c0c4b33c3a4ee7165b4f787aff53d440ff", "committedDate": "2020-03-24T23:00:44Z", "message": "vpcmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93da5e40ad87f49cfc891b56a8618c25567b9c40", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/93da5e40ad87f49cfc891b56a8618c25567b9c40", "committedDate": "2020-03-24T23:35:04Z", "message": "vpc manager service update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb7c1ffd71e6ab1c1019b874322b18e239f0be61", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/bb7c1ffd71e6ab1c1019b874322b18e239f0be61", "committedDate": "2020-03-25T16:12:19Z", "message": "Merge pull request #1 from futurewei-cloud/master\n\nReplace Redis with Apache Ignite for in memory cache and db (#129)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b6a43fb0ae185b880969b49ce852434d1799a24", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/2b6a43fb0ae185b880969b49ce852434d1799a24", "committedDate": "2020-03-25T18:26:03Z", "message": "vpc manager directory structure update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49ad0b0272ef71832af87ff93ab68c80a8300121", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/49ad0b0272ef71832af87ff93ab68c80a8300121", "committedDate": "2020-03-27T07:02:52Z", "message": "common service and updated vpcmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9935f10df13ca8e7cfff10ad9f07fdbfc61eb4f", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c9935f10df13ca8e7cfff10ad9f07fdbfc61eb4f", "committedDate": "2020-03-27T07:28:26Z", "message": "Rename directory name from Common-service to lib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f04333e9042ae0c9577c875f9c430a3d78b5aa2", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3f04333e9042ae0c9577c875f9c430a3d78b5aa2", "committedDate": "2020-03-27T07:34:01Z", "message": "Move lib files under com.futurewei.alcor.common"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "715675ee72a3518e87c9280a57ffe52fa242b3e8", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/715675ee72a3518e87c9280a57ffe52fa242b3e8", "committedDate": "2020-03-27T07:53:44Z", "message": "fix package paths in lib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4de3c83ba533eb941ab9a2392f863eda36baa0a9", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/4de3c83ba533eb941ab9a2392f863eda36baa0a9", "committedDate": "2020-03-27T08:04:01Z", "message": "Rename package path to com.futurewei.alcor.vpcmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d2a24da02a5540318f52d288030fbab99b776b6", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/8d2a24da02a5540318f52d288030fbab99b776b6", "committedDate": "2020-03-27T08:12:46Z", "message": "Update common jar and use latest package path in vpcmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84b4cd58ce61c78df855a5feca4bed2b6c4cc760", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/84b4cd58ce61c78df855a5feca4bed2b6c4cc760", "committedDate": "2020-03-27T08:14:40Z", "message": "update vpc manager jar package name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00328559311fede7087bf48ed328008e748f2b0b", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/00328559311fede7087bf48ed328008e748f2b0b", "committedDate": "2020-03-27T17:19:05Z", "message": "change Dockerfilr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "510fe4aced4f39764ac8f5a30df4783a67bef57a", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/510fe4aced4f39764ac8f5a30df4783a67bef57a", "committedDate": "2020-03-27T17:22:43Z", "message": "delete useless file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d1cca813255fedeb2cbd2662cbfb6b50e10f7b5", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/2d1cca813255fedeb2cbd2662cbfb6b50e10f7b5", "committedDate": "2020-03-27T17:48:42Z", "message": "Reformat some files in vpc manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0a81d3ec168f2f1b55af276bcbe58d1255d1266", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/b0a81d3ec168f2f1b55af276bcbe58d1255d1266", "committedDate": "2020-03-27T17:55:22Z", "message": "Reformat files in common lib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c06645add0d6720d8c1475cdc45e049ec370987", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0c06645add0d6720d8c1475cdc45e049ec370987", "committedDate": "2020-03-30T03:48:56Z", "message": "route manager codes and update vpc manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfd46bc69200c5aebf2ca5913bb26d7c6fc8035b", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/bfd46bc69200c5aebf2ca5913bb26d7c6fc8035b", "committedDate": "2020-03-30T04:05:12Z", "message": "update vpc_manager.yaml, route_manager_yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a2c035eda11418a0473781cd195d9492aa8a72a", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3a2c035eda11418a0473781cd195d9492aa8a72a", "committedDate": "2020-03-30T04:07:49Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a739a9c0af774dcf9727474391ab796fa6ea43ef", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a739a9c0af774dcf9727474391ab796fa6ea43ef", "committedDate": "2020-03-30T04:15:29Z", "message": "Delete unused files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e5549a78b09381b116fcb895b13b9dc75ddd8aa", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/8e5549a78b09381b116fcb895b13b9dc75ddd8aa", "committedDate": "2020-03-30T06:55:51Z", "message": "Add get/create apis on route manager and post call from vpc to route"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "771dad76d57ef25344c77e266bca90b313055225", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/771dad76d57ef25344c77e266bca90b313055225", "committedDate": "2020-03-30T21:23:25Z", "message": "update vpc controller and vpcState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d07ff34f909437485a64e40e0f8d71562c8fc8bd", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d07ff34f909437485a64e40e0f8d71562c8fc8bd", "committedDate": "2020-03-31T02:38:49Z", "message": "Update gitignore to exclude logs file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a84ab728c191cf9cf2166b01f54b9d8748fb1dff", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a84ab728c191cf9cf2166b01f54b9d8748fb1dff", "committedDate": "2020-03-31T04:24:32Z", "message": "Merge from alcor/master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e27b2facfe4e77d57f42f08fd8c9633152e071e1", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e27b2facfe4e77d57f42f08fd8c9633152e071e1", "committedDate": "2020-03-31T05:13:59Z", "message": "Merge from vpcmanager to alcor.vpcmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9070cd0137d7dfa0b8c200de531771ec5b839f45", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/9070cd0137d7dfa0b8c200de531771ec5b839f45", "committedDate": "2020-03-31T05:16:14Z", "message": "Remove lib jar and add dependency on pom"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8874c7307bcb7f7f96bb0ac1b3003361db53ff4a", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/8874c7307bcb7f7f96bb0ac1b3003361db53ff4a", "committedDate": "2020-03-31T05:17:36Z", "message": "Remove lib jar and add dependency on pom for route manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b58f598d1df2422900c3c9b6768342e2ec15478", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0b58f598d1df2422900c3c9b6768342e2ec15478", "committedDate": "2020-03-31T05:22:53Z", "message": "update alcor route manager service and package name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6c328f29bc96c5b46b074f313eb68859c54fc62", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/b6c328f29bc96c5b46b074f313eb68859c54fc62", "committedDate": "2020-03-31T05:26:53Z", "message": "Fix vpc manager duplicated UTs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d11745b658f1092eaaf2dec138e1578dde36474d", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d11745b658f1092eaaf2dec138e1578dde36474d", "committedDate": "2020-03-31T05:35:20Z", "message": "redis-route.yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ed002dfc5d6805dc54a49ea9f94679c6717cd9a", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0ed002dfc5d6805dc54a49ea9f94679c6717cd9a", "committedDate": "2020-03-31T05:56:16Z", "message": "Update setRouteWebObjectList"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f73cac5a73fc18c0ffaabfd381d2c1f30d7f8398", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f73cac5a73fc18c0ffaabfd381d2c1f30d7f8398", "committedDate": "2020-03-31T06:00:31Z", "message": "Merge branch 'feature/route_manager' of https://github.com/kevin-zhonghao/alcor into feature/route_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6575ac236283bb433b4cd980015a267b8cef9ef4", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/6575ac236283bb433b4cd980015a267b8cef9ef4", "committedDate": "2020-03-31T06:09:21Z", "message": "Fix setter/getter issue in VpcState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a6ac89f90fc43620e382adcfe43fdbeeade9a89", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/6a6ac89f90fc43620e382adcfe43fdbeeade9a89", "committedDate": "2020-03-31T06:19:16Z", "message": "Move VpcManager under Services"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a25c9f024acc9c14c2b04fb36101b215c5727708", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a25c9f024acc9c14c2b04fb36101b215c5727708", "committedDate": "2020-03-31T06:22:22Z", "message": "Rename vpcmanager to vpc_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27e62ac7be121800ffecfdf9f89f17d54e7452e1", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/27e62ac7be121800ffecfdf9f89f17d54e7452e1", "committedDate": "2020-03-31T06:23:47Z", "message": "Move routemanager under services and rename it to route_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cfc6869dc46cd40a5ee3118cef389bc2c408b32", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0cfc6869dc46cd40a5ee3118cef389bc2c408b32", "committedDate": "2020-03-31T06:33:46Z", "message": "Fix package issues for route_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d76c29f36db8aa4aaf2e932735ae241e0e2eeab", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3d76c29f36db8aa4aaf2e932735ae241e0e2eeab", "committedDate": "2020-03-31T06:47:51Z", "message": "Add web route schema and update vpc schema"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bc699be2963ea2a70ef531742e3dcd6020c9e3c", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3bc699be2963ea2a70ef531742e3dcd6020c9e3c", "committedDate": "2020-03-31T07:03:26Z", "message": "Delete unused yaml files for vpcmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e99d276309abcbbf89aa410fdf4fbd26343d0dfc", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e99d276309abcbbf89aa410fdf4fbd26343d0dfc", "committedDate": "2020-04-02T13:46:03Z", "message": "Remove unused codes in VpcController"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ea48e2e47aa9f33e2e8993a57f4e1806af82a6a", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3ea48e2e47aa9f33e2e8993a57f4e1806af82a6a", "committedDate": "2020-04-02T15:24:50Z", "message": "Address format comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "057fbc3e177ed053bc9ca6e0eab19b9f21086a19", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/057fbc3e177ed053bc9ca6e0eab19b9f21086a19", "committedDate": "2020-04-02T22:40:11Z", "message": "update dynamically load configuration file in kubernetes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90f06509f2230d653d644685de2e0bdf91baa6f3", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/90f06509f2230d653d644685de2e0bdf91baa6f3", "committedDate": "2020-04-02T22:40:43Z", "message": "Merge branch 'feature/route_manager' of https://github.com/kevin-zhonghao/alcor into feature/route_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92a4853fc6056fd4a1df1d13e4c103f6026254ce", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/92a4853fc6056fd4a1df1d13e4c103f6026254ce", "committedDate": "2020-04-08T00:15:12Z", "message": "update subnet manager and kubernetes config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc7b5ae09ca900a9de2851cb09e106dfbe1b7fb4", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/fc7b5ae09ca900a9de2851cb09e106dfbe1b7fb4", "committedDate": "2020-04-09T01:00:05Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "246a9676e137bc85b1ca76c9d64d7746a48892bf", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/246a9676e137bc85b1ca76c9d64d7746a48892bf", "committedDate": "2020-04-09T01:14:01Z", "message": "s"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e0437f2a15fe1f1460e2b559d90372221d945c2", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/1e0437f2a15fe1f1460e2b559d90372221d945c2", "committedDate": "2020-04-09T06:27:17Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d83e814f3c931bb01c6f3dc2c351009471e42fe", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0d83e814f3c931bb01c6f3dc2c351009471e42fe", "committedDate": "2020-04-09T06:32:29Z", "message": "Merge pull request #3 from kevin-zhonghao/feature/route_manager\n\nFeature/route manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea63ded118de2a3d5adcc2d3f12608677861df14", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/ea63ded118de2a3d5adcc2d3f12608677861df14", "committedDate": "2020-04-09T21:42:33Z", "message": "subnet unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2aae4f8df1af392e9a272fb28fd74ecbdf97a2b", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c2aae4f8df1af392e9a272fb28fd74ecbdf97a2b", "committedDate": "2020-04-09T22:03:25Z", "message": "Delete old files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "498c25db2bb78d29a2602c4068493d77537c430c", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/498c25db2bb78d29a2602c4068493d77537c430c", "committedDate": "2020-04-09T22:09:17Z", "message": "s"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "825e40628b7c2471c0ff19756ca15de7cdfd79ba", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/825e40628b7c2471c0ff19756ca15de7cdfd79ba", "committedDate": "2020-04-09T22:10:36Z", "message": "u"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6069c4c8296cb5f05d8dc5c5b9bf23af66d8b45", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e6069c4c8296cb5f05d8dc5c5b9bf23af66d8b45", "committedDate": "2020-04-09T22:40:12Z", "message": "Merge branch 'master' into feature/route_manager\n\n# Conflicts:\n#\tservices/subnet_manager/pom.xml\n#\tservices/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java\n#\tservices/subnet_manager/src/main/resources/application.properties\n#\tservices/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetApplicationTests.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e993dcbd970110fa1bffa29ae7c31a52ed8495d9", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e993dcbd970110fa1bffa29ae7c31a52ed8495d9", "committedDate": "2020-04-09T23:09:16Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1", "committedDate": "2020-04-09T23:12:17Z", "message": "Merge pull request #4 from kevin-zhonghao/feature/route_manager\n\nFeature/route manager"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjIwNDgy", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-391620482", "createdAt": "2020-04-10T19:30:02Z", "commit": {"oid": "f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTozMDowMlrOGEDtHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTozMDowMlrOGEDtHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkwODE5MQ==", "bodyText": "I think we should remove most of the dependencies in this pom file.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r406908191", "createdAt": "2020-04-10T19:30:02Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/pom.xml", "diffHunk": "@@ -0,0 +1,217 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.2.6.RELEASE</version>\n+        <relativePath/> <!-- lookup parent from repository -->\n+    </parent>\n+    <groupId>com.futurewei.alcor</groupId>\n+    <artifactId>SubnetManager</artifactId>\n+    <version>0.1.0-SNAPSHOT</version>\n+    <name>AlcorSubnetManager</name>\n+    <description>AlcorSubnet</description>\n+\n+    <properties>\n+        <java.version>1.8</java.version>\n+        <maven.compiler.source>1.7</maven.compiler.source>\n+        <maven.compiler.target>1.7</maven.compiler.target>\n+        <asciidoctor-plugin.version>1.5.6</asciidoctor-plugin.version>\n+        <snippets>${project.basedir}/target/generated-snippets/</snippets>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-actuator</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-data-redis</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-thymeleaf</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.kafka</groupId>\n+            <artifactId>kafka-clients</artifactId>\n+            <version>2.3.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.google.protobuf</groupId>\n+            <artifactId>protobuf-java</artifactId>\n+            <version>3.8.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.projectlombok</groupId>\n+            <artifactId>lombok</artifactId>\n+            <version>1.18.0</version>\n+        </dependency>\n+        <dependency>\n+            <groupId>mysql</groupId>\n+            <artifactId>mysql-connector-java</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjIwNjIw", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-391620620", "createdAt": "2020-04-10T19:30:24Z", "commit": {"oid": "f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTozMDoyNFrOGEDtjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTozMDoyNFrOGEDtjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkwODMwMQ==", "bodyText": "Can we remove this file if not necessary?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r406908301", "createdAt": "2020-04-10T19:30:24Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/config/ControllerConfig.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.config;\n+\n+public class ControllerConfig {\n+\n+    public static String projectId = \"3dda2801-d675-4688-a63f-dcda8d327f50\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjIwOTMy", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-391620932", "createdAt": "2020-04-10T19:31:14Z", "commit": {"oid": "f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTozMToxNFrOGEDulQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOTozMToxNFrOGEDulQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkwODU2NQ==", "bodyText": "Is this controller necessary for SubnetManager? Please clean up codes which are not needed.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r406908565", "createdAt": "2020-04-10T19:31:14Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjIyNDMw", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-391622430", "createdAt": "2020-04-10T19:34:50Z", "commit": {"oid": "f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d6c25e581ae630a4e830df8a79389ababf73923", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/4d6c25e581ae630a4e830df8a79389ababf73923", "committedDate": "2020-04-11T00:07:46Z", "message": "update subnet unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "218fc8aaef62c63ef0689d2cd24c1f0c32df1217", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/218fc8aaef62c63ef0689d2cd24c1f0c32df1217", "committedDate": "2020-04-11T00:08:27Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cac85838d16f6b4b6d2a5cb9eeb743d040b86996", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/cac85838d16f6b4b6d2a5cb9eeb743d040b86996", "committedDate": "2020-04-11T00:23:07Z", "message": "Merge pull request #5 from kevin-zhonghao/master\n\nMerge pull request #4 from kevin-zhonghao/feature/route_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6ff66052b0dfc49c40b418dfd30d009897bd99e", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c6ff66052b0dfc49c40b418dfd30d009897bd99e", "committedDate": "2020-04-13T19:48:20Z", "message": "subnet structure and unit test update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d53791de5f19297f0c3ffd0f626986b4e655bfbf", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d53791de5f19297f0c3ffd0f626986b4e655bfbf", "committedDate": "2020-04-13T19:51:51Z", "message": "Merge pull request #6 from kevin-zhonghao/feature/route_manager\n\nFeature/subnet_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29266b302ceb94911607de3fb14ee9371b5e3e91", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/29266b302ceb94911607de3fb14ee9371b5e3e91", "committedDate": "2020-04-13T23:33:52Z", "message": "Merge from Alcor upstream master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f52284e8afab618f70512313f83343de7f02b462", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f52284e8afab618f70512313f83343de7f02b462", "committedDate": "2020-04-14T04:18:31Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/4d24063119fa0c59051cda61c356346d4d89b7eb", "committedDate": "2020-04-14T06:13:42Z", "message": "Merge pull request #7 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDc1NzQy", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-393075742", "createdAt": "2020-04-14T16:03:34Z", "commit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjowMzozNFrOGFV5Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjoxNjo0M1rOGFWdaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NDc0Mw==", "bodyText": "Do we need a dedicated RedisConfiguration file every microservice, or could share one file in the /lib folder?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408254743", "createdAt": "2020-04-14T16:03:34Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/config/RedisConfiguration.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.config;\n+\n+import com.futurewei.alcor.common.service.RedisListener;\n+import com.futurewei.alcor.subnet.entity.SubnetState;\n+\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.domain.EntityScan;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.data.redis.connection.RedisStandaloneConfiguration;\n+import org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;\n+import org.springframework.data.redis.core.RedisTemplate;\n+import org.springframework.data.redis.listener.ChannelTopic;\n+import org.springframework.data.redis.listener.RedisMessageListenerContainer;\n+import org.springframework.data.redis.listener.adapter.MessageListenerAdapter;\n+import org.springframework.data.redis.serializer.Jackson2JsonRedisSerializer;\n+import org.springframework.data.redis.serializer.StringRedisSerializer;\n+\n+@Configuration\n+@ComponentScan({\"com.futurewei.alcor.subnet.service\", \"com.futurewei.alcor.common.service\"})\n+@EntityScan({\"com.futurewei.alcor.subnet.entity}\", \"com.futurewei.alcor.common.entity\"})\n+public class RedisConfiguration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NTE1MQ==", "bodyText": "We should remove this file too.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408255151", "createdAt": "2020-04-14T16:04:05Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.subnet.dao.SubnetRedisRepository;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.GET;\n+\n+@RestController\n+public class DebugController {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NjY3NQ==", "bodyText": "Suggest to use \"createRouteRules\"", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408256675", "createdAt": "2020-04-14T16:06:15Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            //Prepare Route Rule(IPv4/6) for Subnet\n+            RouteWebJson routeResponse = this.subnetService.prepeareRouteRule(inSubnetState.getVpcId(), vpcResponse);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzM3OA==", "bodyText": "Why vcResponse = ResourcePersistence?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408257378", "createdAt": "2020-04-14T16:07:16Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new ResourcePersistenceException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzY0NA==", "bodyText": "Which operation will throw ResourceNullException?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408257644", "createdAt": "2020-04-14T16:07:40Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            //Prepare Route Rule(IPv4/6) for Subnet\n+            RouteWebJson routeResponse = this.subnetService.prepeareRouteRule(inSubnetState.getVpcId(), vpcResponse);\n+            if (routeResponse == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            //Allocate Gateway Mac\n+//            MacState macState = new MacState();\n+//            String portId = UUID.randomUUID().toString();\n+//            macState.setProjectId(projectid);\n+//            macState.setPortId(portId);\n+//            macState.setVpcId(inSubnetState.getVpcId());\n+//\n+//            HttpEntity<MacStateJson> macRequest = new HttpEntity<>(new MacStateJson(macState));\n+//            MacStateJson macResponse = restTemplate.postForObject(macUrl, macRequest, MacStateJson.class);\n+//            if (macResponse == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n+\n+            // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n+//            IPState ipState = new IPState();\n+//            ipState.setSubnetId(inSubnetState.getId());\n+//            ipState.setPortId(portId);\n+//            ipState.setSubnetCidr(inSubnetState.getCidr());\n+//\n+//            String ipManagerServiceUrl = ipUrl + inSubnetState.getId() + \"/routes\"; // for kubernetes test\n+//            HttpEntity<IPStateJson> ipRequest = new HttpEntity<>(new IPStateJson(ipState));\n+//            IPStateJson ipResponse = restTemplate.postForObject(ipManagerServiceUrl, ipRequest, IPStateJson.class);\n+//            if (ipResponse == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n+\n+            // set up value of properties for subnetState\n+            List<RouteWebObject> routes = subnetState.getRoutes();\n+            if (routes == null) {\n+                routes = new ArrayList<>();\n+            }\n+            routes.add(routeResponse.getRoute());\n+            subnetState.setRoutes(routes);\n+            //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n+\n+        } catch (ResourceNullException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1ODc1OQ==", "bodyText": "You might want to throw a more specific exception for the case of \"vpc doesn't exist\"?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408258759", "createdAt": "2020-04-14T16:09:10Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new ResourcePersistenceException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NzM3OA=="}, "originalCommit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MDQ5OQ==", "bodyText": "Do we need to call other microservices here?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408260499", "createdAt": "2020-04-14T16:11:43Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,251 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            //Prepare Route Rule(IPv4/6) for Subnet\n+            RouteWebJson routeResponse = this.subnetService.prepeareRouteRule(inSubnetState.getVpcId(), vpcResponse);\n+            if (routeResponse == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            //Allocate Gateway Mac\n+//            MacState macState = new MacState();\n+//            String portId = UUID.randomUUID().toString();\n+//            macState.setProjectId(projectid);\n+//            macState.setPortId(portId);\n+//            macState.setVpcId(inSubnetState.getVpcId());\n+//\n+//            HttpEntity<MacStateJson> macRequest = new HttpEntity<>(new MacStateJson(macState));\n+//            MacStateJson macResponse = restTemplate.postForObject(macUrl, macRequest, MacStateJson.class);\n+//            if (macResponse == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n+\n+            // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n+//            IPState ipState = new IPState();\n+//            ipState.setSubnetId(inSubnetState.getId());\n+//            ipState.setPortId(portId);\n+//            ipState.setSubnetCidr(inSubnetState.getCidr());\n+//\n+//            String ipManagerServiceUrl = ipUrl + inSubnetState.getId() + \"/routes\"; // for kubernetes test\n+//            HttpEntity<IPStateJson> ipRequest = new HttpEntity<>(new IPStateJson(ipState));\n+//            IPStateJson ipResponse = restTemplate.postForObject(ipManagerServiceUrl, ipRequest, IPStateJson.class);\n+//            if (ipResponse == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n+\n+            // set up value of properties for subnetState\n+            List<RouteWebObject> routes = subnetState.getRoutes();\n+            if (routes == null) {\n+                routes = new ArrayList<>();\n+            }\n+            routes.add(routeResponse.getRoute());\n+            subnetState.setRoutes(routes);\n+            //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n+\n+        } catch (ResourceNullException e) {\n+            // Route info of subnet rollback\n+            List<RouteWebObject> routes = resource.getSubnet().getRoutes();\n+            if (routes != null) {\n+                RouteWebObject route = routes.get(routes.size() - 1);\n+                this.subnetService.routeRollback(route.getId(), resource.getSubnet().getVpcId());\n+            }\n+            throw new Exception(e);\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = PUT,\n+            value = {\"/project/{projectid}/vpcs/{vpcid}/subnets/{subnetid}\", \"v4/{projectid}/vpcs/{vpcid}/subnets/{subnetid}\"})\n+    public SubnetStateJson updateSubnetState(@PathVariable String projectid, @PathVariable String vpcid, @PathVariable String subnetid, @RequestBody SubnetStateJson resource) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(vpcid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetid);\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceNotNull(inSubnetState);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            RestPreconditionsUtil.populateResourceVpcId(inSubnetState, vpcid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetid);\n+            if (subnetState == null) {\n+                throw new ResourceNotFoundException(\"Subnet not found : \" + subnetid);\n+            }\n+\n+            RestPreconditionsUtil.verifyParameterEqual(subnetState.getProjectId(), projectid);\n+            RestPreconditionsUtil.verifyParameterEqual(subnetState.getVpcId(), vpcid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MjEzMA==", "bodyText": "Please add interface for Mac and IP manager. it is time for us to think about it.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408262130", "createdAt": "2020-04-14T16:13:58Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/SubnetService.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.futurewei.alcor.subnet.service;\n+\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.subnet.entity.RouteWebJson;\n+import com.futurewei.alcor.subnet.entity.SubnetState;\n+import com.futurewei.alcor.subnet.entity.VpcStateJson;\n+\n+public interface SubnetService {\n+\n+    // Subnet Route info Rollback\n+    public void routeRollback (String routeId, String vpcId);\n+\n+    // Verify VPC ID\n+    public VpcStateJson verifyVpcId (String projectid, String vpcId) throws ResourcePersistenceException;\n+\n+    // Prepare Route Rule(IPv4/6) for Subnet\n+    public RouteWebJson prepeareRouteRule (String vpcId, VpcStateJson vpcResponse) throws ResourcePersistenceException;\n+\n+    // TODO : Allocate Gateway Mac", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2MjgzNg==", "bodyText": "Can you use the same one in /lib folder?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408262836", "createdAt": "2020-04-14T16:14:55Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/RedisPublisherServiceImpl.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.service.implement;\n+\n+import com.futurewei.alcor.common.repo.ICachePublisher;\n+import com.futurewei.alcor.subnet.entity.VpcState;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.data.redis.core.RedisTemplate;\n+import org.springframework.data.redis.listener.ChannelTopic;\n+import org.springframework.stereotype.Service;\n+\n+@Service\n+public class RedisPublisherServiceImpl implements ICachePublisher {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI2NDA0MA==", "bodyText": "Like the UTs. This is a very good start. Keep going :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408264040", "createdAt": "2020-04-14T16:16:43Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTest.java", "diffHunk": "@@ -0,0 +1,215 @@\n+package com.futurewei.alcor.subnet;\n+\n+import static org.springframework.test.web.servlet.request.MockMvcRequestBuilders.*;\n+import static org.springframework.test.web.servlet.result.MockMvcResultHandlers.print;\n+import static org.springframework.test.web.servlet.result.MockMvcResultMatchers.status;\n+import static org.junit.Assert.*;\n+\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.subnet.config.UnitTestConfig;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mockito;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.http.MediaType;\n+import org.springframework.test.context.junit4.SpringRunner;\n+import org.springframework.test.web.servlet.MockMvc;\n+import org.springframework.test.web.servlet.result.MockMvcResultMatchers;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+\n+@RunWith(SpringRunner.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69ac96153afe297489c93c498b46e535576d4353", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/69ac96153afe297489c93c498b46e535576d4353", "committedDate": "2020-04-14T17:28:56Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54269648af85c72861e42874271fc81054d49049", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/54269648af85c72861e42874271fc81054d49049", "committedDate": "2020-04-14T17:32:12Z", "message": "Merge pull request #8 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e815f7afcf76f65b67c47b36c9505c24cc18575", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3e815f7afcf76f65b67c47b36c9505c24cc18575", "committedDate": "2020-04-14T17:34:56Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "291555968c8ee49f5e63327a8e344ddfb009ff57", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/291555968c8ee49f5e63327a8e344ddfb009ff57", "committedDate": "2020-04-14T17:36:35Z", "message": "Merge pull request #9 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNzg3MTEy", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-393787112", "createdAt": "2020-04-15T13:44:49Z", "commit": {"oid": "291555968c8ee49f5e63327a8e344ddfb009ff57"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzo0NDo0OVrOGF6Z4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzo0NDo0OVrOGF6Z4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1Mjk2MA==", "bodyText": "Can we have a better name for the UTs, a recommended name should mention what the main test scenario is.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408852960", "createdAt": "2020-04-15T13:44:49Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTest.java", "diffHunk": "@@ -133,8 +133,8 @@ public void subnetCreateTest2 () throws Exception {\n     public void subnetUpdateTest1 () throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291555968c8ee49f5e63327a8e344ddfb009ff57"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNzkyODEw", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-393792810", "createdAt": "2020-04-15T13:50:59Z", "commit": {"oid": "291555968c8ee49f5e63327a8e344ddfb009ff57"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzo1MDo1OVrOGF6ryg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzo1MDo1OVrOGF6ryg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1NzU0Ng==", "bodyText": "Since this file is not SubnetManager specific, let us use the one under /lib.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408857546", "createdAt": "2020-04-15T13:50:59Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/utils/RestPreconditionsUtil.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.utils;\n+\n+import com.futurewei.alcor.common.entity.CustomerResource;\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.subnet.entity.VpcState;\n+import org.thymeleaf.util.StringUtils;\n+\n+public class RestPreconditionsUtil {\n+    public static <T> T verifyResourceFound(T resource) throws ResourceNotFoundException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291555968c8ee49f5e63327a8e344ddfb009ff57"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNzk1OTIx", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-393795921", "createdAt": "2020-04-15T13:54:10Z", "commit": {"oid": "291555968c8ee49f5e63327a8e344ddfb009ff57"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzo1NDoxMVrOGF61WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzo1NDoxMVrOGF61WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg1OTk5Mg==", "bodyText": "Do you think it will be a good idea to use VpcState and VpcStateJson under /web folder, or replicate one copy in the microservice that needs that?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r408859992", "createdAt": "2020-04-15T13:54:11Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/VpcState.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.entity;\n+\n+import com.futurewei.alcor.common.entity.CustomerResource;\n+import lombok.Data;\n+\n+import java.util.List;\n+\n+@Data\n+public class VpcState extends CustomerResource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291555968c8ee49f5e63327a8e344ddfb009ff57"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07b37d58b41a4360ae306febea1817fecdfcca1d", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/07b37d58b41a4360ae306febea1817fecdfcca1d", "committedDate": "2020-04-15T16:17:51Z", "message": "subnet_manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d97eb29cc9f829ef86f170047311504074c4b98a", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d97eb29cc9f829ef86f170047311504074c4b98a", "committedDate": "2020-04-15T16:19:18Z", "message": "Merge branch 'master' into feature/route_manager\nupdate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67f66639282400684897a87a51e11ca688c810d9", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/67f66639282400684897a87a51e11ca688c810d9", "committedDate": "2020-04-15T16:22:08Z", "message": "Merge pull request #10 from kevin-zhonghao/feature/route_manager\n\nsubnet_manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d6ff2b96a94fb3a25c2f5f15f46199ea6ed5320", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/1d6ff2b96a94fb3a25c2f5f15f46199ea6ed5320", "committedDate": "2020-04-15T17:50:15Z", "message": "subnet manager UTs update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "797642f1dbada9af1fec5575b62865aa6a019559", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/797642f1dbada9af1fec5575b62865aa6a019559", "committedDate": "2020-04-15T17:52:18Z", "message": "Merge pull request #11 from kevin-zhonghao/feature/route_manager\n\nFeature/route manager"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MTE3NDU3", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-394117457", "createdAt": "2020-04-15T20:39:03Z", "commit": {"oid": "797642f1dbada9af1fec5575b62865aa6a019559"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDozOTowM1rOGGKq1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDozOTowM1rOGGKq1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTExOTQ0Ng==", "bodyText": "I don't think failing to create route rules should trigger fall back. We should retry first.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r409119446", "createdAt": "2020-04-15T20:39:03Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,241 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+        String portId = UUID.randomUUID().toString();\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new FallbackException(\"fallback request\");\n+            }\n+\n+            //Prepare Route Rule(IPv4/6) for Subnet\n+            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+            if (routeResponse == null) {\n+                throw new FallbackException(\"fallback request\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "797642f1dbada9af1fec5575b62865aa6a019559"}, "originalPosition": 105}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MTE3OTQ3", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-394117947", "createdAt": "2020-04-15T20:39:51Z", "commit": {"oid": "797642f1dbada9af1fec5575b62865aa6a019559"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDozOTo1MVrOGGKsZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDozOTo1MVrOGGKsZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTExOTg0Ng==", "bodyText": "You might want to log different message in different logging level here.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r409119846", "createdAt": "2020-04-15T20:39:51Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -0,0 +1,241 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.subnet.controller;\n+\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n+import com.futurewei.alcor.subnet.service.SubnetService;\n+import com.futurewei.alcor.subnet.utils.RestPreconditionsUtil;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SubnetController {\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;\n+\n+    @Autowired\n+    private SubnetService subnetService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/subnets/{subnetId}\", \"v4/{projectid}/subnets/{subnetId}\"})\n+    public SubnetStateJson getSubnetStateById(@PathVariable String projectid, @PathVariable String subnetId) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code\n+            throw new Exception(e);\n+        }\n+\n+        if (subnetState == null) {\n+            //TODO: REST error code\n+            return new SubnetStateJson();\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/subnets\", \"v4/{projectid}/subnets\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SubnetStateJson createSubnetState(@PathVariable String projectid, @RequestBody SubnetStateJson resource) throws Exception {\n+        SubnetState subnetState = null;\n+        String portId = UUID.randomUUID().toString();\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyResourceNotNull(resource.getSubnet());\n+\n+            // TODO: Create a verification framework for all resources\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            // Verify VPC ID\n+            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+            if (vpcResponse == null) {\n+                throw new FallbackException(\"fallback request\");\n+            }\n+\n+            //Prepare Route Rule(IPv4/6) for Subnet\n+            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+            if (routeResponse == null) {\n+                throw new FallbackException(\"fallback request\");\n+            }\n+\n+            //Allocate Gateway Mac\n+//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+//            if (macResponse == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n+\n+            // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n+//            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n+//            if (ipResponse == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n+\n+            // set up value of properties for subnetState\n+            List<RouteWebObject> routes = subnetState.getRoutes();\n+            if (routes == null) {\n+                routes = new ArrayList<>();\n+            }\n+            routes.add(routeResponse.getRoute());\n+            subnetState.setRoutes(routes);\n+            //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n+\n+        } catch (ResourcePersistenceException e) {\n+            throw new Exception(e);\n+        } catch (FallbackException e) {\n+            // Route info of subnet rollback\n+            List<RouteWebObject> routes = resource.getSubnet().getRoutes();\n+            if (routes != null) {\n+                RouteWebObject route = routes.get(routes.size() - 1);\n+                this.subnetService.routeRollback(route.getId(), resource.getSubnet().getVpcId());\n+            }\n+            throw new Exception(e);\n+        }\n+\n+        return new SubnetStateJson(subnetState);\n+    }\n+\n+    @RequestMapping(\n+            method = PUT,\n+            value = {\"/project/{projectid}/vpcs/{vpcid}/subnets/{subnetid}\", \"v4/{projectid}/vpcs/{vpcid}/subnets/{subnetid}\"})\n+    public SubnetStateJson updateSubnetState(@PathVariable String projectid, @PathVariable String vpcid, @PathVariable String subnetid, @RequestBody SubnetStateJson resource) throws Exception {\n+\n+        SubnetState subnetState = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(vpcid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetid);\n+            SubnetState inSubnetState = resource.getSubnet();\n+            RestPreconditionsUtil.verifyResourceNotNull(inSubnetState);\n+            RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n+            RestPreconditionsUtil.populateResourceVpcId(inSubnetState, vpcid);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetid);\n+            if (subnetState == null) {\n+                throw new ResourceNotFoundException(\"Subnet not found : \" + subnetid);\n+            }\n+\n+            RestPreconditionsUtil.verifyParameterEqual(subnetState.getProjectId(), projectid);\n+            RestPreconditionsUtil.verifyParameterEqual(subnetState.getVpcId(), vpcid);\n+\n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+            subnetState = this.subnetDatabaseService.getBySubnetId(subnetid);\n+\n+        } catch (ParameterNullOrEmptyException e) {\n+            throw new Exception(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "797642f1dbada9af1fec5575b62865aa6a019559"}, "originalPosition": 172}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MTE4ODAx", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-394118801", "createdAt": "2020-04-15T20:41:08Z", "commit": {"oid": "797642f1dbada9af1fec5575b62865aa6a019559"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDo0MTowOFrOGGKvLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDo0MTowOFrOGGKvLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTEyMDU1OA==", "bodyText": "We could update the ip related data structure to be aligned with the IP manager PR.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r409120558", "createdAt": "2020-04-15T20:41:08Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/entity/IPState.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.futurewei.alcor.subnet.entity;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.futurewei.alcor.common.entity.CustomerResource;\n+\n+public class IPState  extends CustomerResource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "797642f1dbada9af1fec5575b62865aa6a019559"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MTE5NzEz", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-394119713", "createdAt": "2020-04-15T20:42:34Z", "commit": {"oid": "797642f1dbada9af1fec5575b62865aa6a019559"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e735ebd7139e7d439155f8e7a5e6cf348ab013c0", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e735ebd7139e7d439155f8e7a5e6cf348ab013c0", "committedDate": "2020-04-15T22:51:58Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8012b6e9b20888931bfef81a2ac3b69fc4b590b2", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/8012b6e9b20888931bfef81a2ac3b69fc4b590b2", "committedDate": "2020-04-15T22:54:58Z", "message": "Merge pull request #12 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bf0c7bf82318284711b0507f5dd8064ed754039", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3bf0c7bf82318284711b0507f5dd8064ed754039", "committedDate": "2020-04-15T22:58:06Z", "message": "Merge pull request #13 from kevin-zhonghao/master\n\nadd mac manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81e7c12fd1552451c81c6cadae60d20365461f22", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/81e7c12fd1552451c81c6cadae60d20365461f22", "committedDate": "2020-04-15T23:01:50Z", "message": "Merge pull request #14 from futurewei-cloud/master\n\nmac manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da15ddeb473f9f89f19108f49cc4bee62b219c1b", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/da15ddeb473f9f89f19108f49cc4bee62b219c1b", "committedDate": "2020-04-15T23:02:40Z", "message": "Merge pull request #15 from kevin-zhonghao/master\n\nupdate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7c5c4ab2ed9125cce35320abe68b79e3762c9fe", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c7c5c4ab2ed9125cce35320abe68b79e3762c9fe", "committedDate": "2020-04-16T18:51:21Z", "message": "subnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30d105aa88f2346342deeefa70131cb550590a43", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/30d105aa88f2346342deeefa70131cb550590a43", "committedDate": "2020-04-16T18:54:56Z", "message": "Merge pull request #16 from kevin-zhonghao/feature/route_manager\n\nsubnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee14adca5236d5634456789e4c6f4f5056b470c0", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/ee14adca5236d5634456789e4c6f4f5056b470c0", "committedDate": "2020-04-16T23:36:32Z", "message": "subnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbb749f71eb935e476fe887a94b96e8f47bf8833", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/dbb749f71eb935e476fe887a94b96e8f47bf8833", "committedDate": "2020-04-16T23:38:48Z", "message": "Merge pull request #17 from kevin-zhonghao/feature/route_manager\n\nsubnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48808fa9e508d773b09bf4677b3295bfd102c833", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/48808fa9e508d773b09bf4677b3295bfd102c833", "committedDate": "2020-04-17T19:41:14Z", "message": "subnet update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c74460e1f4b25207c5420f41b1651d0e8bf391b7", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c74460e1f4b25207c5420f41b1651d0e8bf391b7", "committedDate": "2020-04-17T22:59:59Z", "message": "subnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "committedDate": "2020-04-17T23:03:55Z", "message": "Merge pull request #18 from kevin-zhonghao/feature/route_manager\n\nsubnet manager e2e update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1ODgyNDg4", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-395882488", "createdAt": "2020-04-18T05:08:19Z", "commit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNTowODoxOVrOGHm00g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxODozNzo0M1rOGHtOUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYyOTMzMA==", "bodyText": "does allFuture.join not include macFuture.join?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410629330", "createdAt": "2020-04-18T05:08:19Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYzMjUxMQ==", "bodyText": "if inSubnetState.getVpcId() is used multiple times, we should use an individual variable to store its value.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410632511", "createdAt": "2020-04-18T05:16:08Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDYzMzU2NQ==", "bodyText": "Why is the atomic reference used here?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410633565", "createdAt": "2020-04-18T05:18:40Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTU3NQ==", "bodyText": "what would happen if inSubnetState includes some route rules, and we add some more from routeResponse which could be duplicated? Will that create multiple copies of the same rules? like so as we are using List", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410731575", "createdAt": "2020-04-18T18:15:27Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTYwMw==", "bodyText": "Can we skip inSubnetState.getRoutes()", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410731603", "createdAt": "2020-04-18T18:15:43Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTU3NQ=="}, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTc0Mw==", "bodyText": "When Database fails to store the data, actually we will need to roll back the allocated resources as well? What do you think?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410731743", "createdAt": "2020-04-18T18:17:38Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();\n             if (routes == null) {\n                 routes = new ArrayList<>();\n             }\n             routes.add(routeResponse.getRoute());\n-            subnetState.setRoutes(routes);\n+            inSubnetState.setRoutes(routes);\n             //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n \n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTg3OA==", "bodyText": "Like this! That is the right way to do.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410731878", "createdAt": "2020-04-18T18:18:34Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();\n             if (routes == null) {\n                 routes = new ArrayList<>();\n             }\n             routes.add(routeResponse.getRoute());\n-            subnetState.setRoutes(routes);\n+            inSubnetState.setRoutes(routes);\n             //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n \n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            return new SubnetStateJson(subnetState);\n+\n         } catch (ResourcePersistenceException e) {\n+            logger.error(e.getMessage());\n             throw new Exception(e);\n-        } catch (FallbackException e) {\n-            // Route info of subnet rollback\n-            List<RouteWebObject> routes = resource.getSubnet().getRoutes();\n-            if (routes != null) {\n-                RouteWebObject route = routes.get(routes.size() - 1);\n-                this.subnetService.routeRollback(route.getId(), resource.getSubnet().getVpcId());\n+        } catch (CompletionException e) {\n+            routeResponse = (RouteWebJson) routeResponseAtomic.get();\n+            macResponse = (MacStateJson) macResponseAtomic.get();\n+            logger.error(e.getMessage());\n+\n+            // Subnet fallback\n+            logger.info(\"subnet fallback start\");\n+            this.subnetDatabaseService.deleteSubnet(resource.getSubnet().getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMTk5Ng==", "bodyText": "So fall back will be an sync call?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410731996", "createdAt": "2020-04-18T18:19:18Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();\n             if (routes == null) {\n                 routes = new ArrayList<>();\n             }\n             routes.add(routeResponse.getRoute());\n-            subnetState.setRoutes(routes);\n+            inSubnetState.setRoutes(routes);\n             //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n \n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            return new SubnetStateJson(subnetState);\n+\n         } catch (ResourcePersistenceException e) {\n+            logger.error(e.getMessage());\n             throw new Exception(e);\n-        } catch (FallbackException e) {\n-            // Route info of subnet rollback\n-            List<RouteWebObject> routes = resource.getSubnet().getRoutes();\n-            if (routes != null) {\n-                RouteWebObject route = routes.get(routes.size() - 1);\n-                this.subnetService.routeRollback(route.getId(), resource.getSubnet().getVpcId());\n+        } catch (CompletionException e) {\n+            routeResponse = (RouteWebJson) routeResponseAtomic.get();\n+            macResponse = (MacStateJson) macResponseAtomic.get();\n+            logger.error(e.getMessage());\n+\n+            // Subnet fallback\n+            logger.info(\"subnet fallback start\");\n+            this.subnetDatabaseService.deleteSubnet(resource.getSubnet().getId());\n+            logger.info(\"subnet fallback end\");\n+\n+            // Route fallback\n+            logger.info(\"Route fallback start\");\n+            if (routeResponse != null) {\n+                RouteWebObject route = routeResponse.getRoute();\n+                this.subnetService.routeFallback(route.getId(), resource.getSubnet().getVpcId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMjA3MA==", "bodyText": "What could cause NullPointerException?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410732070", "createdAt": "2020-04-18T18:19:57Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();\n             if (routes == null) {\n                 routes = new ArrayList<>();\n             }\n             routes.add(routeResponse.getRoute());\n-            subnetState.setRoutes(routes);\n+            inSubnetState.setRoutes(routes);\n             //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n \n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            return new SubnetStateJson(subnetState);\n+\n         } catch (ResourcePersistenceException e) {\n+            logger.error(e.getMessage());\n             throw new Exception(e);\n-        } catch (FallbackException e) {\n-            // Route info of subnet rollback\n-            List<RouteWebObject> routes = resource.getSubnet().getRoutes();\n-            if (routes != null) {\n-                RouteWebObject route = routes.get(routes.size() - 1);\n-                this.subnetService.routeRollback(route.getId(), resource.getSubnet().getVpcId());\n+        } catch (CompletionException e) {\n+            routeResponse = (RouteWebJson) routeResponseAtomic.get();\n+            macResponse = (MacStateJson) macResponseAtomic.get();\n+            logger.error(e.getMessage());\n+\n+            // Subnet fallback\n+            logger.info(\"subnet fallback start\");\n+            this.subnetDatabaseService.deleteSubnet(resource.getSubnet().getId());\n+            logger.info(\"subnet fallback end\");\n+\n+            // Route fallback\n+            logger.info(\"Route fallback start\");\n+            if (routeResponse != null) {\n+                RouteWebObject route = routeResponse.getRoute();\n+                this.subnetService.routeFallback(route.getId(), resource.getSubnet().getVpcId());\n+            }\n+            logger.info(\"Route fallback end\");\n+\n+            // Mac fallback\n+            logger.info(\"Mac fallback start\");\n+            if (macResponse != null) {\n+                this.subnetService.macFallback(macResponse.getMacState().getMacAddress());\n+                //this.subnetService.macFallback(UnitTestConfig.macAddress);\n             }\n+            logger.info(\"Mac fallback end\");\n+            throw new Exception(e);\n+        } catch (NullPointerException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMjMyNA==", "bodyText": "Remove the comment if not applicable here.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410732324", "createdAt": "2020-04-18T18:22:33Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/SubnetServiceImp.java", "diffHunk": "@@ -29,49 +30,86 @@\n     private RestTemplate restTemplate = new RestTemplate();\n \n     @Override\n-    public void routeRollback(String routeId, String vpcId) {\n-        String routeManagerServiceUrl = routeUrl + vpcId + \"/routes/\" + routeId; // for kubernetes test\n+    public void routeFallback(String routeId, String vpcId) {\n+        String routeManagerServiceUrl = routeUrl + \"vpcs/\" + vpcId + \"/routes/\" + routeId; // for kubernetes test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczMzUwMQ==", "bodyText": "We also need to handle FallbackException when the downstream services or db fall back fail.\nIn that case, we need to log error or critical as well.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410733501", "createdAt": "2020-04-18T18:32:08Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -86,59 +101,106 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             RestPreconditionsUtil.verifyResourceFound(inSubnetState.getVpcId());\n             RestPreconditionsUtil.populateResourceProjectId(inSubnetState, projectid);\n \n-            this.subnetDatabaseService.addSubnet(inSubnetState);\n-\n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+            //Allocate Gateway Mac\n+            CompletableFuture<MacStateJson> macFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                macResponseAtomic.set(s);\n+                return s;\n+            });\n \n             // Verify VPC ID\n-            VpcStateJson vpcResponse = this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n-            if (vpcResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<VpcStateJson> vpcFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.verifyVpcId(projectid, inSubnetState.getVpcId());\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR);\n \n             //Prepare Route Rule(IPv4/6) for Subnet\n-            RouteWebJson routeResponse = this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n-            if (routeResponse == null) {\n-                throw new FallbackException(\"fallback request\");\n-            }\n+            CompletableFuture<RouteWebJson> routeFuture = CompletableFuture.supplyAsync(() -> {\n+                try {\n+                    return this.subnetService.createRouteRules(inSubnetState.getId(), inSubnetState);\n+                } catch (Exception e) {\n+                    throw new CompletionException(e);\n+                }\n+            }, ThreadPoolExecutorUtils.SELECT_POOL_EXECUTOR).handle((s, e) -> {\n+                routeResponseAtomic.set(s);\n+                return s;\n+            });;\n+\n \n-            //Allocate Gateway Mac\n-//            MacStateJson macResponse = this.subnetService.allocateMacGateway(projectid, inSubnetState.getVpcId(), portId);\n-//            if (macResponse == null) {\n-//                throw new ResourcePersistenceException();\n-//            }\n \n             // Verify/Allocate Gateway IP, subnet id, port id, subnet cidr, response:IP - unique\n //            IPStateJson ipResponse = this.subnetService.allocateIPGateway(inSubnetState.getId(), inSubnetState.getCidr(), portId);\n //            if (ipResponse == null) {\n //                throw new ResourcePersistenceException();\n //            }\n \n+            // Synchronous blocking\n+            CompletableFuture<Void> allFuture = CompletableFuture.allOf(vpcFuture, macFuture, routeFuture);\n+            allFuture.join();\n+\n+            macResponse = macFuture.join();\n+            routeResponse = routeFuture.join();\n+            logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n+\n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = subnetState.getRoutes();\n+            List<RouteWebObject> routes = inSubnetState.getRoutes();\n             if (routes == null) {\n                 routes = new ArrayList<>();\n             }\n             routes.add(routeResponse.getRoute());\n-            subnetState.setRoutes(routes);\n+            inSubnetState.setRoutes(routes);\n             //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n \n+            this.subnetDatabaseService.addSubnet(inSubnetState);\n+\n+            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n+            if (subnetState == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+            return new SubnetStateJson(subnetState);\n+\n         } catch (ResourcePersistenceException e) {\n+            logger.error(e.getMessage());\n             throw new Exception(e);\n-        } catch (FallbackException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczNDAyNQ==", "bodyText": "what do those value (10,20,5000) stand for?\nA recommended way is to use \"field name: field value\".\nAlso, if possibly, make those value configurable in our application.json file; if not possible, we should make those field as constants and maintain the constants in a separate file.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410734025", "createdAt": "2020-04-18T18:36:14Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/utils/ThreadPoolExecutorUtils.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package com.futurewei.alcor.subnet.utils;\n+\n+import com.google.common.util.concurrent.ThreadFactoryBuilder;\n+\n+import java.util.concurrent.LinkedBlockingQueue;\n+import java.util.concurrent.ThreadPoolExecutor;\n+import java.util.concurrent.TimeUnit;\n+\n+public class ThreadPoolExecutorUtils {\n+    public static final ThreadPoolExecutor SELECT_POOL_EXECUTOR = new ThreadPoolExecutor(10, 20, 5000,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDczNDE2MA==", "bodyText": "Looks like we have some fall back UTs. Good job!\nRecommend to cover all possible fall back failures.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r410734160", "createdAt": "2020-04-18T18:37:43Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java", "diffHunk": "@@ -138,13 +148,50 @@ public void createSubnetState_canNotFindRoute_notPass () throws Exception {\n                 UnitTestConfig.vpcId, UnitTestConfig.name, UnitTestConfig.cidr, new ArrayList<RouteWebObject>(){{add(new RouteWebObject());}});\n \n         VpcStateJson vpcStateJson = new VpcStateJson(vpcState);\n+        MacStateJson macResponse = new MacStateJson();\n \n         Mockito.when(subnetDatabaseService.getBySubnetId(UnitTestConfig.subnetId))\n                 .thenReturn(subnetState);\n         Mockito.when(subnetService.verifyVpcId(UnitTestConfig.projectId, UnitTestConfig.vpcId))\n                 .thenReturn(vpcStateJson);\n-        Mockito.when(subnetService.createRouteRules(UnitTestConfig.subnetId, subnetState))\n-                .thenReturn(null);\n+        Mockito.when(subnetService.createRouteRules(eq(UnitTestConfig.subnetId), any(SubnetState.class)))\n+                .thenThrow(new FallbackException(\"fallback request\"));\n+        Mockito.when(subnetService.allocateMacGateway(anyString(), anyString(), anyString()))\n+                .thenReturn(macResponse);\n+        try {\n+            this.mockMvc.perform(post(creatwUri).contentType(MediaType.APPLICATION_JSON)\n+                    .content(UnitTestConfig.resource))\n+                    .andDo(print())\n+                    .andExpect(status().is(201))\n+                    .andExpect(MockMvcResultMatchers.jsonPath(\"$.subnet.id\").value(UnitTestConfig.subnetId));\n+        }catch (Exception ex) {\n+            //System.out.println(ex.getMessage());\n+            assertEquals(UnitTestConfig.createException, ex.getMessage());\n+        }\n+\n+    }\n+\n+    @Test\n+    public void createSubnetState_canNotFindMac_notPass () throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef723bad84a518a0e1e97dda21ddac04f29ed1a9", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/ef723bad84a518a0e1e97dda21ddac04f29ed1a9", "committedDate": "2020-04-20T06:17:06Z", "message": "subnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/090aa3a1cb28cf03532ab63e41a68aee8eb7012e", "committedDate": "2020-04-20T06:19:15Z", "message": "Merge pull request #19 from kevin-zhonghao/feature/route_manager\n\nsubnet manager e2e update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTY4ODMz", "url": "https://github.com/futurewei-cloud/alcor/pull/154#pullrequestreview-396168833", "createdAt": "2020-04-20T06:24:56Z", "commit": {"oid": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNjoyNDo1NlrOGIE89w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNjoyODoxOFrOGIFCzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyMjkzNQ==", "bodyText": "DatabasePersistenceException?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411122935", "createdAt": "2020-04-20T06:24:56Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/exception/DatabaseAddException.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package com.futurewei.alcor.common.exception;\n+\n+public class DatabaseAddException extends Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyMzA2MQ==", "bodyText": "Like it!", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411123061", "createdAt": "2020-04-20T06:25:13Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/config/ThreadPoolExecutorConfig.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package com.futurewei.alcor.subnet.config;\n+\n+public class ThreadPoolExecutorConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyMzc0NQ==", "bodyText": "Very nice.", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411123745", "createdAt": "2020-04-20T06:26:46Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/SubnetController.java", "diffHunk": "@@ -151,51 +159,25 @@ public SubnetStateJson createSubnetState(@PathVariable String projectid, @Reques\n             logger.info(\"Total processing time:\" + (System.currentTimeMillis() - start) + \"ms\");\n \n             // set up value of properties for subnetState\n-            List<RouteWebObject> routes = inSubnetState.getRoutes();\n-            if (routes == null) {\n-                routes = new ArrayList<>();\n-            }\n+            List<RouteWebObject> routes = new ArrayList<>();\n             routes.add(routeResponse.getRoute());\n             inSubnetState.setRoutes(routes);\n             //subnetState.setGatewayIp(ipResponse.getIpState().getIp());\n \n             this.subnetDatabaseService.addSubnet(inSubnetState);\n \n-            subnetState = this.subnetDatabaseService.getBySubnetId(inSubnetState.getId());\n-            if (subnetState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+//            subnetState = this.subnetDatabaseService.getBySubnetId(subnetId);\n+//            if (SubnetState == null) {\n+//                throw new ResourcePersistenceException();\n+//            }\n \n-            return new SubnetStateJson(subnetState);\n+            return new SubnetStateJson(inSubnetState);\n \n-        } catch (ResourcePersistenceException e) {\n-            logger.error(e.getMessage());\n-            throw new Exception(e);\n         } catch (CompletionException e) {\n-            routeResponse = (RouteWebJson) routeResponseAtomic.get();\n-            macResponse = (MacStateJson) macResponseAtomic.get();\n-            logger.error(e.getMessage());\n-\n-            // Subnet fallback\n-            logger.info(\"subnet fallback start\");\n-            this.subnetDatabaseService.deleteSubnet(resource.getSubnet().getId());\n-            logger.info(\"subnet fallback end\");\n-\n-            // Route fallback\n-            logger.info(\"Route fallback start\");\n-            if (routeResponse != null) {\n-                RouteWebObject route = routeResponse.getRoute();\n-                this.subnetService.routeFallback(route.getId(), resource.getSubnet().getVpcId());\n-            }\n-            logger.info(\"Route fallback end\");\n-\n-            // Mac fallback\n-            logger.info(\"Mac fallback start\");\n-            if (macResponse != null) {\n-                this.subnetService.macFallback(macResponse.getMacState().getMacAddress());\n-                //this.subnetService.macFallback(UnitTestConfig.macAddress);\n-            }\n-            logger.info(\"Mac fallback end\");\n+            this.subnetService.fallbackOperation(routeResponseAtomic, macResponseAtomic, resource, e.getMessage());\n+            throw new Exception(e);\n+        } catch (DatabaseAddException e) {\n+            this.subnetService.fallbackOperation(routeResponseAtomic, macResponseAtomic, resource, e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyMzkxMA==", "bodyText": "oh we can wire two service together?", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411123910", "createdAt": "2020-04-20T06:27:13Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/service/implement/SubnetServiceImp.java", "diffHunk": "@@ -5,16 +5,27 @@\n import com.futurewei.alcor.common.exception.FallbackException;\n import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n import com.futurewei.alcor.subnet.entity.*;\n+import com.futurewei.alcor.subnet.service.SubnetDatabaseService;\n import com.futurewei.alcor.subnet.service.SubnetService;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.http.HttpEntity;\n import org.springframework.scheduling.annotation.Async;\n import org.springframework.stereotype.Service;\n import org.springframework.web.client.RestTemplate;\n \n+import java.util.concurrent.atomic.AtomicReference;\n+\n @Service\n public class SubnetServiceImp implements SubnetService {\n \n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    private SubnetDatabaseService subnetDatabaseService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyNDQzMQ==", "bodyText": "Let us be a little creative in term of naming :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/154#discussion_r411124431", "createdAt": "2020-04-20T06:28:18Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetControllerTests.java", "diffHunk": "@@ -166,7 +168,7 @@ public void createSubnetState_canNotFindRoute_notPass () throws Exception {\n                     .andExpect(MockMvcResultMatchers.jsonPath(\"$.subnet.id\").value(UnitTestConfig.subnetId));\n         }catch (Exception ex) {\n             //System.out.println(ex.getMessage());\n-            assertEquals(UnitTestConfig.createException, ex.getMessage());\n+            assertEquals(UnitTestConfig.createException2, ex.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60123507d0c9c8e5e43aff5b559068aa5445ce5d", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/60123507d0c9c8e5e43aff5b559068aa5445ce5d", "committedDate": "2020-04-20T19:12:37Z", "message": "Add subnet APIs in API gateway"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2395, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}