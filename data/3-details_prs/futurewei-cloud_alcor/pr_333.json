{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5MTAxMjUw", "number": 333, "title": "[API GW] Differentiate Handling of Tokens in Admin & User Role", "bodyText": "This PR proposes an enhancement to handle token differently for admin role and user role\n\nAdd customized HTTP header field in API GW\nSupport handling of the customized header in VPC/Subnet/Port/SG/EIP Mgrs\nEnhance basic UTs for the new feature", "createdAt": "2020-07-30T11:42:21Z", "url": "https://github.com/futurewei-cloud/alcor/pull/333", "merged": true, "mergeCommit": {"oid": "f62e051be29009caf511110e1e3166e532b7da41"}, "closed": true, "closedAt": "2020-07-30T15:16:02Z", "author": {"login": "Gzure"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc59103AH2gAyNDU5MTAxMjUwOjhmZDdjZTc3OTJmYTNiOGVmODNjMjIyOWNhNDJiZTAzMDFlODUyYzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6BE9sgFqTQ1ODQ2MzIyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8fd7ce7792fa3b8ef83c2229ca42be0301e852c6", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/8fd7ce7792fa3b8ef83c2229ca42be0301e852c6", "committedDate": "2020-07-30T11:22:46Z", "message": "add token role handle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd010f6936a659b7cb2f050fe5427a340f8d01af", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/fd010f6936a659b7cb2f050fe5427a340f8d01af", "committedDate": "2020-07-30T11:40:25Z", "message": "fix toJson problem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NDYzMjIx", "url": "https://github.com/futurewei-cloud/alcor/pull/333#pullrequestreview-458463221", "createdAt": "2020-07-30T14:35:45Z", "commit": {"oid": "fd010f6936a659b7cb2f050fe5427a340f8d01af"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDozNTo0NVrOG5l6eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNDo1MDoyMVrOG5mk3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0MzE5NA==", "bodyText": "This is a very good refactor \ud83d\udc4d", "url": "https://github.com/futurewei-cloud/alcor/pull/333#discussion_r463043194", "createdAt": "2020-07-30T14:35:45Z", "author": {"login": "xieus"}, "path": "services/api_gateway/src/main/java/com/futurewei/alcor/apigateway/client/KeystoneClient.java", "diffHunk": "@@ -192,13 +190,13 @@ private void getLocalToken() throws IOException{\n      *\n      * @see <a href=\"https://docs.openstack.org/api-ref/identity/v3/index.html?expanded=password-authentication-with-scoped-authorization-detail#identity-api-operations\">Keystone api operations</a>\n      */\n-    public String verifyToken(String token){\n+    public Optional<TokenEntity> verifyToken(String token){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd010f6936a659b7cb2f050fe5427a340f8d01af"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA0NzU0OA==", "bodyText": "Recommend to add a Log.debug if a token is expired.", "url": "https://github.com/futurewei-cloud/alcor/pull/333#discussion_r463047548", "createdAt": "2020-07-30T14:41:41Z", "author": {"login": "xieus"}, "path": "services/api_gateway/src/main/java/com/futurewei/alcor/apigateway/client/KeystoneClient.java", "diffHunk": "@@ -192,13 +190,13 @@ private void getLocalToken() throws IOException{\n      *\n      * @see <a href=\"https://docs.openstack.org/api-ref/identity/v3/index.html?expanded=password-authentication-with-scoped-authorization-detail#identity-api-operations\">Keystone api operations</a>\n      */\n-    public String verifyToken(String token){\n+    public Optional<TokenEntity> verifyToken(String token){\n         try {\n \n             TokenEntity tokenEntity = cache.get(token);\n             if(tokenEntity != null){\n                 LOG.debug(\"fetch the token from cache {}\", tokenEntity);\n-                return tokenEntity.isExpired() ? \"\" : tokenEntity.getProjectId();\n+                return tokenEntity.isExpired() ? Optional.empty() : Optional.of(tokenEntity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd010f6936a659b7cb2f050fe5427a340f8d01af"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzA1NDA0NQ==", "bodyText": "This appears to overwrite the header fields. Pls make sure that other header fields (if useful) will not be removed. @Gzure", "url": "https://github.com/futurewei-cloud/alcor/pull/333#discussion_r463054045", "createdAt": "2020-07-30T14:50:21Z", "author": {"login": "xieus"}, "path": "services/api_gateway/src/main/java/com/futurewei/alcor/apigateway/filter/KeystoneAuthGwFilter.java", "diffHunk": "@@ -54,21 +61,27 @@\n             exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED);\n             return exchange.getResponse().setComplete();\n         }\n-        String projectId = keystoneClient.verifyToken(token);\n-        if(\"\".equals(projectId)){\n+        Optional<TokenEntity> tokenEntityOptional = keystoneClient.verifyToken(token);\n+        if(tokenEntityOptional.isEmpty()){\n             LOG.warn(\"parsed token {} project id failed\", token);\n             exchange.getResponse().setStatusCode(HttpStatus.UNAUTHORIZED);\n             return exchange.getResponse().setComplete();\n         }\n+\n+        TokenEntity tokenEntity = tokenEntityOptional.get();\n+        String projectId = tokenEntity.getProjectId();\n         LOG.debug(\"parsed token {} project id success, project id:[{}]\", token, projectId);\n+\n         // rewrite uri path include project id\n         ServerHttpRequest req = exchange.getRequest();\n         ServerWebExchangeUtils.addOriginalRequestUrl(exchange, req.getURI());\n         String path = req.getURI().getRawPath();\n         path = path.replaceAll(neutronUrlPrefix, \"/project/\" + projectId);\n         path = path.replaceAll(VPC_REPLACE_NAME, VPC_NAME);\n-        ServerHttpRequest request = req.mutate().path(path).build();\n+\n+        ServerHttpRequest request = req.mutate().path(path).header(TOKEN_INFO_HEADER, tokenEntity.toJson()).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd010f6936a659b7cb2f050fe5427a340f8d01af"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2257, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}