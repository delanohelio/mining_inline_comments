{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MDk0NDQy", "number": 358, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMzo1ODoxMVrOEZQvNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMzo1ODoxMVrOEZQvNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0OTI0MDg1OnYy", "diffSide": "RIGHT", "path": "docs/modules/ROOT/workflows/southbound_prog_workflow_v1.puml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMzo1ODoxMVrOHB-rIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDozMDoxN1rOHB_NVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgzNzQ3Mg==", "bodyText": "Let's plan to change NEIGHBOR_CREATE_UPDATE to our new Neighbor state format: NEIGHBOR,CREATE(operation_type),L2(neighbor_type)", "url": "https://github.com/futurewei-cloud/alcor/pull/358#discussion_r471837472", "createdAt": "2020-08-17T23:58:11Z", "author": {"login": "er1cthe0ne"}, "path": "docs/modules/ROOT/workflows/southbound_prog_workflow_v1.puml", "diffHunk": "@@ -0,0 +1,175 @@\n+' Copyright 2019 The Alcor Authors.\n+\n+' Licensed under the Apache License, Version 2.0 (the \"License\");\n+'        you may not use this file except in compliance with the License.\n+'        You may obtain a copy of the License at\n+\n+'        http://www.apache.org/licenses/LICENSE-2.0\n+\n+'        Unless required by applicable law or agreed to in writing, software\n+'        distributed under the License is distributed on an \"AS IS\" BASIS,\n+'        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+'        See the License for the specific language governing permissions and\n+'        limitations under the License.\n+\n+@startuml\n+\n+title Southbound Workflow of Port Provisioning - v1\n+\n+skinparam monochrome true\n+collections \"Port Manager\" as pm\n+collections \"Data Plane Manager\" as dpm\n+'collections \"Message Queue\" as mq\n+participant \"ACA@Host 1\" as host1\n+participant \"ACA@Host 2\" as host2\n+participant \"ACA@Host 3\" as host3\n+\n+==Scenario A: Create the first Port P1 at Host 1==\n+autonumber \"<b>[0]\"\n+pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\\n\\t[P1 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}\n+activate dpm\n+dpm -> host1: Send a GoalState message {[(P1,CREATE)],[(Subnet,INFO)]} via gPRC\n+activate host1\n+host1 -> dpm: Reply a GoalStateOperationReply message on P1 programming status\n+deactivate host1\n+dpm -> pm: Reply an InternalProgrammingStatus message on P1 programming status\n+deactivate dpm\n+\n+==Create the second Port P2 at Host 1==\n+autonumber 5 \"<b>[0]\"\n+pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\\n\\t[P2 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}\n+activate dpm\n+\n+dpm -> host1: Send a GoalState message \\n{[(P2,CREATE)],[(Subnet,INFO)]} via gPRC\n+activate host1\n+host1 -> dpm: Reply a GoalStateOperationReply message on P2 programming status\n+deactivate host1\n+\n+dpm -> pm: Once receiving response from Host1, reply an InternalProgrammingStatus\\nmessage on P2 programming status\n+deactivate dpm\n+==================================================\n+\n+==Scenario B: Create Ports (P1, P2) at Host 1==\n+autonumber \"<b>[0]\"\n+pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\\n\\t[P1,P2 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}\n+activate dpm\n+\n+autonumber 2 \"<b>[0]\"\n+dpm -> host1: Send a GoalState message \\n{[(P1,CREATE),(P2,CREATE)],[(Subnet,INFO)]} via gPRC\n+activate host1\n+host1 -> dpm: Reply a GoalStateOperationReply message on P1 and P2 programming status\n+deactivate host1\n+\n+autonumber 4 \"<b>[0]\"\n+dpm -> pm: After receiving response from Host1 and Host2, reply an InternalProgrammingStatus\\nmessage on P2 programming status\n+deactivate dpm\n+\n+\n+==Scenario C: Create the first Port P1 at Host 1==\n+autonumber \"<b>[0]\"\n+pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\\n\\t[P1 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}\n+activate dpm\n+dpm -> host1: Send a GoalState message {[(P1,CREATE)],[(Subnet,INFO)]} via gPRC\n+activate host1\n+host1 -> dpm: Reply a GoalStateOperationReply message on P1 programming status\n+deactivate host1\n+dpm -> pm: Reply an InternalProgrammingStatus message on P1 programming status\n+deactivate dpm\n+\n+==Create the second Port P2 at Host 2==\n+autonumber 5 \"<b>[0]\"\n+pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\\n\\t[P2 w/ neighbor_info=[P1]],[Subnet],[VPC],[SG]}\n+activate dpm\n+\n+autonumber 6 \"<b>[0.a]\"\n+dpm -> host2: Send a GoalState message \\n{[(P2,CREATE),(P1,NEIGHBOR_CREATE_UPDATE)],[(Subnet,INFO)]} via gPRC", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c7d231578c72010dc383adde13d592eea6acd91"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0NjIyOQ==", "bodyText": "Acked. Add @haboy52581 to update the workflow based on the latest schema.", "url": "https://github.com/futurewei-cloud/alcor/pull/358#discussion_r471846229", "createdAt": "2020-08-18T00:30:17Z", "author": {"login": "xieus"}, "path": "docs/modules/ROOT/workflows/southbound_prog_workflow_v1.puml", "diffHunk": "@@ -0,0 +1,175 @@\n+' Copyright 2019 The Alcor Authors.\n+\n+' Licensed under the Apache License, Version 2.0 (the \"License\");\n+'        you may not use this file except in compliance with the License.\n+'        You may obtain a copy of the License at\n+\n+'        http://www.apache.org/licenses/LICENSE-2.0\n+\n+'        Unless required by applicable law or agreed to in writing, software\n+'        distributed under the License is distributed on an \"AS IS\" BASIS,\n+'        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+'        See the License for the specific language governing permissions and\n+'        limitations under the License.\n+\n+@startuml\n+\n+title Southbound Workflow of Port Provisioning - v1\n+\n+skinparam monochrome true\n+collections \"Port Manager\" as pm\n+collections \"Data Plane Manager\" as dpm\n+'collections \"Message Queue\" as mq\n+participant \"ACA@Host 1\" as host1\n+participant \"ACA@Host 2\" as host2\n+participant \"ACA@Host 3\" as host3\n+\n+==Scenario A: Create the first Port P1 at Host 1==\n+autonumber \"<b>[0]\"\n+pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\\n\\t[P1 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}\n+activate dpm\n+dpm -> host1: Send a GoalState message {[(P1,CREATE)],[(Subnet,INFO)]} via gPRC\n+activate host1\n+host1 -> dpm: Reply a GoalStateOperationReply message on P1 programming status\n+deactivate host1\n+dpm -> pm: Reply an InternalProgrammingStatus message on P1 programming status\n+deactivate dpm\n+\n+==Create the second Port P2 at Host 1==\n+autonumber 5 \"<b>[0]\"\n+pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\\n\\t[P2 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}\n+activate dpm\n+\n+dpm -> host1: Send a GoalState message \\n{[(P2,CREATE)],[(Subnet,INFO)]} via gPRC\n+activate host1\n+host1 -> dpm: Reply a GoalStateOperationReply message on P2 programming status\n+deactivate host1\n+\n+dpm -> pm: Once receiving response from Host1, reply an InternalProgrammingStatus\\nmessage on P2 programming status\n+deactivate dpm\n+==================================================\n+\n+==Scenario B: Create Ports (P1, P2) at Host 1==\n+autonumber \"<b>[0]\"\n+pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\\n\\t[P1,P2 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}\n+activate dpm\n+\n+autonumber 2 \"<b>[0]\"\n+dpm -> host1: Send a GoalState message \\n{[(P1,CREATE),(P2,CREATE)],[(Subnet,INFO)]} via gPRC\n+activate host1\n+host1 -> dpm: Reply a GoalStateOperationReply message on P1 and P2 programming status\n+deactivate host1\n+\n+autonumber 4 \"<b>[0]\"\n+dpm -> pm: After receiving response from Host1 and Host2, reply an InternalProgrammingStatus\\nmessage on P2 programming status\n+deactivate dpm\n+\n+\n+==Scenario C: Create the first Port P1 at Host 1==\n+autonumber \"<b>[0]\"\n+pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\\n\\t[P1 w/ neighbor_info=NULL],[Subnet],[VPC],[SG]}\n+activate dpm\n+dpm -> host1: Send a GoalState message {[(P1,CREATE)],[(Subnet,INFO)]} via gPRC\n+activate host1\n+host1 -> dpm: Reply a GoalStateOperationReply message on P1 programming status\n+deactivate host1\n+dpm -> pm: Reply an InternalProgrammingStatus message on P1 programming status\n+deactivate dpm\n+\n+==Create the second Port P2 at Host 2==\n+autonumber 5 \"<b>[0]\"\n+pm -> dpm: POST /port async with RequestBody NetworkConfiguration={\\n\\t[P2 w/ neighbor_info=[P1]],[Subnet],[VPC],[SG]}\n+activate dpm\n+\n+autonumber 6 \"<b>[0.a]\"\n+dpm -> host2: Send a GoalState message \\n{[(P2,CREATE),(P1,NEIGHBOR_CREATE_UPDATE)],[(Subnet,INFO)]} via gPRC", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTgzNzQ3Mg=="}, "originalCommit": {"oid": "1c7d231578c72010dc383adde13d592eea6acd91"}, "originalPosition": 85}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4651, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}