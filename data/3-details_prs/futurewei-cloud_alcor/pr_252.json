{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MTYzNTMy", "number": 252, "title": "[AlcorLib] Support Multi-Params Query", "bodyText": "This PR proposes the following changes:\nFeatures:\n\nchange IgniteClient to Ignite node client\nadd support multi params query\nHTTP response can according to URL query param [field] filter need entity fields\nunit test can initialize the Ignite client bean on demand\nreplace webflux with spring gateway route define\nsupport default value return for HTTP JSON response\nadd a new API [/v2.0/extensions] in API GW\nadd security group API in API GW\nsupport return both project_id and tenant_id\n\nBugs:\n\nfix VPC , Subnet, Port microservices return value not correct\nmove generate UUID from API GW to microservice\nremove some no need check in VPC and Subnet microservices", "createdAt": "2020-06-16T11:53:04Z", "url": "https://github.com/futurewei-cloud/alcor/pull/252", "merged": true, "mergeCommit": {"oid": "0276c273e91de79e6b603687810afa730e5a4117"}, "closed": true, "closedAt": "2020-07-03T04:10:53Z", "author": {"login": "Gzure"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsEFH7AFqTQzMTQzNjc3MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxKD2xAH2gAyNDM1MTYzNTMyOjBhZjRiNjFlY2E2ODYzNWE2Y2E1YTBkZDFiMjQyYzQwYmJkMjI5Mzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDM2Nzcw", "url": "https://github.com/futurewei-cloud/alcor/pull/252#pullrequestreview-431436770", "createdAt": "2020-06-16T12:09:11Z", "commit": {"oid": "98436060d7b04dc990854daca20740d57537d1e7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjowOToxMVrOGkYTqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjo0Mzo1MFrOGk3vhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMDE2OQ==", "bodyText": "What is the difference of ignite.Ignite and ignite.client.IgniteClient? Is it Ignite some sort of client?", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r440800169", "createdAt": "2020-06-16T12:09:11Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/ignite/IgniteCacheFactory.java", "diffHunk": "@@ -18,33 +18,35 @@\n \n import com.futurewei.alcor.common.db.ICache;\n import com.futurewei.alcor.common.db.ICacheFactory;\n-import org.apache.ignite.client.IgniteClient;\n+import org.apache.ignite.Ignite;\n+\n import javax.cache.expiry.CreatedExpiryPolicy;\n import javax.cache.expiry.Duration;\n import javax.cache.expiry.ExpiryPolicy;\n import java.util.concurrent.TimeUnit;\n \n public class IgniteCacheFactory implements ICacheFactory {\n \n-    private IgniteClient igniteClient;\n+    private Ignite ignite;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98436060d7b04dc990854daca20740d57537d1e7"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxNTIwNA==", "bodyText": "@Gzure Could you think of renaming the class \"ignite.Ignite\" with more specific meaning, for example, IgniteXYZClient?", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r441315204", "createdAt": "2020-06-17T06:43:50Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/ignite/IgniteCacheFactory.java", "diffHunk": "@@ -18,33 +18,35 @@\n \n import com.futurewei.alcor.common.db.ICache;\n import com.futurewei.alcor.common.db.ICacheFactory;\n-import org.apache.ignite.client.IgniteClient;\n+import org.apache.ignite.Ignite;\n+\n import javax.cache.expiry.CreatedExpiryPolicy;\n import javax.cache.expiry.Duration;\n import javax.cache.expiry.ExpiryPolicy;\n import java.util.concurrent.TimeUnit;\n \n public class IgniteCacheFactory implements ICacheFactory {\n \n-    private IgniteClient igniteClient;\n+    private Ignite ignite;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMDE2OQ=="}, "originalCommit": {"oid": "98436060d7b04dc990854daca20740d57537d1e7"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b23e780ef102e4bd89f641ed7296d813f74b9a0e", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/b23e780ef102e4bd89f641ed7296d813f74b9a0e", "committedDate": "2020-06-20T10:18:08Z", "message": "rebase commits"}, "afterCommit": {"oid": "fa769da8a38285649cc0453e26337cca6a44ae17", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/fa769da8a38285649cc0453e26337cca6a44ae17", "committedDate": "2020-06-22T02:58:04Z", "message": "add multi params query support\nadd field filter support\nadd UTs skip init ignite client bean"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzM5Mjc2", "url": "https://github.com/futurewei-cloud/alcor/pull/252#pullrequestreview-438739276", "createdAt": "2020-06-28T03:06:43Z", "commit": {"oid": "fa769da8a38285649cc0453e26337cca6a44ae17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMzowNjo0M1rOGp55YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMzowNjo0M1rOGp55YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU5MzM3Nw==", "bodyText": "Since we have used Ignite instead of IgniteClient, the exceptions of cache operations should be modified accordingly.", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r446593377", "createdAt": "2020-06-28T03:06:43Z", "author": {"login": "chenpiaoping"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/ignite/IgniteDbCache.java", "diffHunk": "@@ -19,63 +19,64 @@\n import com.futurewei.alcor.common.db.CacheException;\n import com.futurewei.alcor.common.db.ICache;\n import com.futurewei.alcor.common.db.Transaction;\n+import com.futurewei.alcor.common.db.query.CachePredicate;\n+import com.futurewei.alcor.common.db.query.ScanQueryBuilder;\n+import com.futurewei.alcor.common.db.query.impl.MapPredicate;\n import com.futurewei.alcor.common.logging.Logger;\n import com.futurewei.alcor.common.logging.LoggerFactory;\n+import org.apache.ignite.Ignite;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.binary.BinaryObject;\n import org.apache.ignite.cache.query.Query;\n import org.apache.ignite.cache.query.QueryCursor;\n import org.apache.ignite.cache.query.ScanQuery;\n-import org.apache.ignite.client.ClientCache;\n-import org.apache.ignite.client.ClientCacheConfiguration;\n import org.apache.ignite.client.ClientException;\n-import org.apache.ignite.client.IgniteClient;\n import org.springframework.util.Assert;\n \n import javax.cache.Cache;\n import javax.cache.expiry.ExpiryPolicy;\n+import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.logging.Level;\n import java.util.stream.Collectors;\n \n \n-public class IgniteCache<K, V> implements ICache<K, V> {\n+public class IgniteDbCache<K, V> implements ICache<K, V> {\n     private static final Logger logger = LoggerFactory.getLogger();\n-    private ClientCache<K, V> cache;\n-    private IgniteClient igniteClient;\n+\n+    private static final int RESULT_THRESHOLD_SIZE = 100000;\n+    private IgniteCache<K, V> cache;\n     private IgniteTransaction transaction;\n \n-    public IgniteCache(IgniteClient igniteClient, String name) {\n-        this.igniteClient = igniteClient;\n+    public IgniteDbCache(Ignite ignite, String name) {\n \n         try {\n-            cache = igniteClient.getOrCreateCache(name);\n+            cache = ignite.getOrCreateCache(name);\n         } catch (ClientException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa769da8a38285649cc0453e26337cca6a44ae17"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzQwMjgx", "url": "https://github.com/futurewei-cloud/alcor/pull/252#pullrequestreview-438740281", "createdAt": "2020-06-28T03:30:16Z", "commit": {"oid": "fa769da8a38285649cc0453e26337cca6a44ae17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMzozMDoxNlrOGp5_rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMzozMDoxNlrOGp5_rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU5NDk4OA==", "bodyText": "How to ensure that there is only one result of the query? if so, is the getAll (CachePredicate < E1, E2 > cachePredicate) interface sufficient?", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r446594988", "createdAt": "2020-06-28T03:30:16Z", "author": {"login": "chenpiaoping"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/ignite/IgniteDbCache.java", "diffHunk": "@@ -142,6 +143,61 @@ public boolean remove(K key) throws CacheException {\n         }\n     }\n \n+    @Override\n+    public V get(Map<String, Object[]> filterParams) throws CacheException {\n+        CachePredicate<String, BinaryObject> predicate = MapPredicate.getInstance(filterParams);\n+        return get(predicate);\n+    }\n+\n+    @Override\n+    public <E1, E2> V get(CachePredicate<E1, E2> cachePredicate) throws CacheException {\n+        QueryCursor<Cache.Entry<E1, E2>> cursor =\n+                cache.withKeepBinary().query(ScanQueryBuilder.newScanQuery(cachePredicate));\n+        List<Cache.Entry<E1, E2>> result = cursor.getAll();\n+        if(result.size() > 1){\n+            throw new CacheException(\"more than one rows found!\");\n+        }\n+\n+        if(result.isEmpty()){\n+            return null;\n+        }\n+\n+        E2 obj = result.get(0).getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa769da8a38285649cc0453e26337cca6a44ae17"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NzQwMzY3", "url": "https://github.com/futurewei-cloud/alcor/pull/252#pullrequestreview-438740367", "createdAt": "2020-06-28T03:32:07Z", "commit": {"oid": "fa769da8a38285649cc0453e26337cca6a44ae17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMzozMjowN1rOGp6AGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOFQwMzozMjowN1rOGp6AGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjU5NTA5OQ==", "bodyText": "Let's delete useless import.", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r446595099", "createdAt": "2020-06-28T03:32:07Z", "author": {"login": "chenpiaoping"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/query/impl/MapPredicate.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *\n+ * Copyright 2019 The Alcor Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *         you may not use this file except in compliance with the License.\n+ *         You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *         Unless required by applicable law or agreed to in writing, software\n+ *         distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *         See the License for the specific language governing permissions and\n+ *         limitations under the License.\n+ * /\n+ */\n+\n+package com.futurewei.alcor.common.db.query.impl;\n+\n+import com.futurewei.alcor.common.db.query.CachePredicate;\n+import com.google.common.collect.ImmutableMap;\n+import org.apache.ignite.binary.BinaryObject;\n+import org.apache.ignite.cache.query.ScanQuery;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa769da8a38285649cc0453e26337cca6a44ae17"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b213ccf652ae8c50818db3a1ff292566f21428c", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/2b213ccf652ae8c50818db3a1ff292566f21428c", "committedDate": "2020-06-29T07:45:22Z", "message": "fix vpc and subnet create post problem\nmake some api return value meet neutron api"}, "afterCommit": {"oid": "7bf67abdc2e3ed4f451297dee78a353b7fddfc69", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/7bf67abdc2e3ed4f451297dee78a353b7fddfc69", "committedDate": "2020-06-29T07:49:23Z", "message": "fix vpc and subnet create post problem\nmake some api return value meet neutron api"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NjY2MTM2", "url": "https://github.com/futurewei-cloud/alcor/pull/252#pullrequestreview-439666136", "createdAt": "2020-06-30T04:45:07Z", "commit": {"oid": "7bf67abdc2e3ed4f451297dee78a353b7fddfc69"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNDo0NTowN1rOGqrgcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwNDo1MDozNFrOGqrmPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwNjE5NQ==", "bodyText": "Seems that we need to update the comments here.", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r447406195", "createdAt": "2020-06-30T04:45:07Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/ICache.java", "diffHunk": "@@ -17,17 +17,57 @@\n package com.futurewei.alcor.common.db;\n \n \n+import com.futurewei.alcor.common.db.query.CachePredicate;\n+\n import java.util.Map;\n \n public interface ICache<K, V> {\n     V get(K var1) throws CacheException;\n \n+    /**\n+     * Get Cache value from cache db by multi params\n+     *\n+     * @param var1 the cache key", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bf67abdc2e3ed4f451297dee78a353b7fddfc69"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwNzI1OQ==", "bodyText": "Like it.", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r447407259", "createdAt": "2020-06-30T04:49:10Z", "author": {"login": "xieus"}, "path": "lib/src/test/java/com/futurewei/alcor/common/cache/ControllerUtilTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ *\n+ * Copyright 2019 The Alcor Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *         you may not use this file except in compliance with the License.\n+ *         You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *         Unless required by applicable law or agreed to in writing, software\n+ *         distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *         See the License for the specific language governing permissions and\n+ *         limitations under the License.\n+ * /\n+ */\n+\n+package com.futurewei.alcor.common.cache;\n+\n+import com.futurewei.alcor.common.cache.entity.TestEntity;\n+import com.futurewei.alcor.common.exception.QueryParamTypeNotSupportException;\n+import com.futurewei.alcor.common.utils.ControllerUtil;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import java.lang.annotation.Annotation;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+public class ControllerUtilTest {\n+\n+    @Test\n+    public void transformUrlPathParamsTest() throws QueryParamTypeNotSupportException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bf67abdc2e3ed4f451297dee78a353b7fddfc69"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQwNzY3Ng==", "bodyText": "duplicated issue or merge issue?", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r447407676", "createdAt": "2020-06-30T04:50:34Z", "author": {"login": "xieus"}, "path": "services/api_gateway/src/main/java/com/futurewei/alcor/apigateway/filter/KeystoneConfiguration.java", "diffHunk": "@@ -34,14 +34,22 @@\n     @Autowired\n     private CacheFactory cacheFactory;\n \n-    @Bean\n+    //@Bean\n     public KeystoneAuthWebFilter keystoneAuthWebFilter(){\n         if(!keystoneEnable){\n             return null;\n         }\n         return new KeystoneAuthWebFilter();\n     }\n \n+    @Bean\n+    public KeystoneAuthGwFilter keystoneAuthGwFilter(){\n+        if(!keystoneEnable){\n+            return null;\n+        }\n+        return new KeystoneAuthGwFilter();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bf67abdc2e3ed4f451297dee78a353b7fddfc69"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNDk0MTkz", "url": "https://github.com/futurewei-cloud/alcor/pull/252#pullrequestreview-440494193", "createdAt": "2020-07-01T01:46:43Z", "commit": {"oid": "6dd6d31c98c5d64b7d5573efa5061b1837bb2eda"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMTo0Njo0NFrOGrUDqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoxNTozOFrOGrUf4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3MDU3MQ==", "bodyText": "This class depends on ignite.\nShould it be put in the ignite directory?", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r448070571", "createdAt": "2020-07-01T01:46:44Z", "author": {"login": "chenpiaoping"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/query/ScanQueryBuilder.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ *\n+ * Copyright 2019 The Alcor Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *         you may not use this file except in compliance with the License.\n+ *         You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *         Unless required by applicable law or agreed to in writing, software\n+ *         distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *         See the License for the specific language governing permissions and\n+ *         limitations under the License.\n+ * /\n+ */\n+\n+package com.futurewei.alcor.common.db.query;\n+\n+import org.apache.ignite.cache.query.ScanQuery;\n+\n+public class ScanQueryBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dd6d31c98c5d64b7d5573efa5061b1837bb2eda"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3MDg2Nw==", "bodyText": "This class depends on ignite. should it be put in the ignite directory?", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r448070867", "createdAt": "2020-07-01T01:48:01Z", "author": {"login": "chenpiaoping"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/query/impl/MapPredicate.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ *\n+ * Copyright 2019 The Alcor Authors.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *         you may not use this file except in compliance with the License.\n+ *         You may obtain a copy of the License at\n+ *\n+ *         http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *         Unless required by applicable law or agreed to in writing, software\n+ *         distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *         WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *         See the License for the specific language governing permissions and\n+ *         limitations under the License.\n+ * /\n+ */\n+\n+package com.futurewei.alcor.common.db.query.impl;\n+\n+import com.futurewei.alcor.common.db.query.CachePredicate;\n+import com.google.common.collect.ImmutableMap;\n+import org.apache.ignite.binary.BinaryObject;\n+import org.apache.ignite.cache.query.ScanQuery;\n+\n+import java.util.Map;\n+\n+\n+public class MapPredicate implements CachePredicate<String, BinaryObject> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dd6d31c98c5d64b7d5573efa5061b1837bb2eda"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NDYxNA==", "bodyText": "There is still ClientException in the constructor.", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r448074614", "createdAt": "2020-07-01T02:03:00Z", "author": {"login": "chenpiaoping"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/ignite/IgniteDbCache.java", "diffHunk": "@@ -83,7 +85,7 @@ public IgniteDbCache(Ignite client, String name, ExpiryPolicy ep) {\n     public V get(K key) throws CacheException {\n         try {\n             return cache.get(key);\n-        } catch (ClientException e) {\n+        } catch (IgniteException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1918bd9657b223c1c7f43ece2cd4be950ded0679"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3Nzc5Mg==", "bodyText": "If an exception is not thrown here, subsequent cache operations (for example: cache.put()) may cause null pointer exceptions. This Modification may cause all microservices to be changed, and the priority can be lowered.", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r448077792", "createdAt": "2020-07-01T02:15:38Z", "author": {"login": "chenpiaoping"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/ignite/IgniteDbCache.java", "diffHunk": "@@ -19,63 +19,64 @@\n import com.futurewei.alcor.common.db.CacheException;\n import com.futurewei.alcor.common.db.ICache;\n import com.futurewei.alcor.common.db.Transaction;\n+import com.futurewei.alcor.common.db.query.CachePredicate;\n+import com.futurewei.alcor.common.db.query.ScanQueryBuilder;\n+import com.futurewei.alcor.common.db.query.impl.MapPredicate;\n import com.futurewei.alcor.common.logging.Logger;\n import com.futurewei.alcor.common.logging.LoggerFactory;\n+import org.apache.ignite.Ignite;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.binary.BinaryObject;\n import org.apache.ignite.cache.query.Query;\n import org.apache.ignite.cache.query.QueryCursor;\n import org.apache.ignite.cache.query.ScanQuery;\n-import org.apache.ignite.client.ClientCache;\n-import org.apache.ignite.client.ClientCacheConfiguration;\n import org.apache.ignite.client.ClientException;\n-import org.apache.ignite.client.IgniteClient;\n import org.springframework.util.Assert;\n \n import javax.cache.Cache;\n import javax.cache.expiry.ExpiryPolicy;\n+import java.util.HashMap;\n+import java.util.List;\n import java.util.Map;\n import java.util.logging.Level;\n import java.util.stream.Collectors;\n \n \n-public class IgniteCache<K, V> implements ICache<K, V> {\n+public class IgniteDbCache<K, V> implements ICache<K, V> {\n     private static final Logger logger = LoggerFactory.getLogger();\n-    private ClientCache<K, V> cache;\n-    private IgniteClient igniteClient;\n+\n+    private static final int RESULT_THRESHOLD_SIZE = 100000;\n+    private IgniteCache<K, V> cache;\n     private IgniteTransaction transaction;\n \n-    public IgniteCache(IgniteClient igniteClient, String name) {\n-        this.igniteClient = igniteClient;\n+    public IgniteDbCache(Ignite ignite, String name) {\n \n         try {\n-            cache = igniteClient.getOrCreateCache(name);\n+            cache = ignite.getOrCreateCache(name);\n         } catch (ClientException e) {\n             logger.log(Level.WARNING, \"Create cache for client \" + name + \" failed:\" + e.getMessage());\n         } catch (Exception e) {\n             logger.log(Level.WARNING, \"Unexpected failure:\" + e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dd6d31c98c5d64b7d5573efa5061b1837bb2eda"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79ce34e3c5d7991abb9e990310ed0b48921202b9", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/79ce34e3c5d7991abb9e990310ed0b48921202b9", "committedDate": "2020-06-30T09:03:36Z", "message": "support return both project_id and tenant_id"}, "afterCommit": {"oid": "c14d746fb5826f2e54d182f7efa863a98a6316c3", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c14d746fb5826f2e54d182f7efa863a98a6316c3", "committedDate": "2020-07-02T01:36:22Z", "message": "add ignite thin client and rewrite some db interfaces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMzkwODYz", "url": "https://github.com/futurewei-cloud/alcor/pull/252#pullrequestreview-441390863", "createdAt": "2020-07-02T06:45:08Z", "commit": {"oid": "c14d746fb5826f2e54d182f7efa863a98a6316c3"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNjo0NTowOFrOGr_fFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwNjo1MTozOVrOGr_qTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4MjEwMw==", "bodyText": "Do we still need throws CacheException here?", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r448782103", "createdAt": "2020-07-02T06:45:08Z", "author": {"login": "chenpiaoping"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/ignite/IgniteTransaction.java", "diffHunk": "@@ -33,55 +31,43 @@\n public class IgniteTransaction implements Transaction {\n     private static final Logger logger = LoggerFactory.getLogger();\n \n-    private IgniteClient igniteClient;\n-    private ClientTransaction clientTransaction;\n+    private final Ignite client;\n+    private org.apache.ignite.transactions.Transaction transaction;\n \n-    public IgniteTransaction(IgniteClient igniteClient) {\n-        this.igniteClient = igniteClient;\n+    public IgniteTransaction(Ignite client) {\n+        this.client = client;\n     }\n \n+    @Override\n     public Transaction start() throws CacheException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c14d746fb5826f2e54d182f7efa863a98a6316c3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4MjY2Mw==", "bodyText": "May need to catch IgniteException here.", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r448782663", "createdAt": "2020-07-02T06:46:25Z", "author": {"login": "chenpiaoping"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/ignite/IgniteTransaction.java", "diffHunk": "@@ -33,55 +31,43 @@\n public class IgniteTransaction implements Transaction {\n     private static final Logger logger = LoggerFactory.getLogger();\n \n-    private IgniteClient igniteClient;\n-    private ClientTransaction clientTransaction;\n+    private final Ignite client;\n+    private org.apache.ignite.transactions.Transaction transaction;\n \n-    public IgniteTransaction(IgniteClient igniteClient) {\n-        this.igniteClient = igniteClient;\n+    public IgniteTransaction(Ignite client) {\n+        this.client = client;\n     }\n \n+    @Override\n     public Transaction start() throws CacheException {\n-        try {\n-            clientTransaction = igniteClient.transactions().txStart(PESSIMISTIC, SERIALIZABLE);\n-        } catch (ClientServerError e) {\n-            logger.log(Level.WARNING, \"IgniteTransaction start error:\" + e.getMessage());\n-            throw new CacheException(e.getMessage());\n-        } catch (ClientException e) {\n-            logger.log(Level.WARNING, \"IgniteTransaction start error:\" + e.getMessage());\n-            throw new CacheException(e.getMessage());\n-        }\n-\n+        transaction = client.transactions().txStart(PESSIMISTIC, SERIALIZABLE);\n         return this;\n     }\n \n+    @Override\n     public void commit() throws CacheException {\n         try {\n-            clientTransaction.commit();\n-        } catch (ClientServerError e) {\n-            logger.log(Level.WARNING, \"IgniteTransaction commit error:\" + e.getMessage());\n-            throw new CacheException(e.getMessage());\n-        } catch (ClientException e) {\n+            transaction.commit();\n+        } catch (IgniteException e) {\n             logger.log(Level.WARNING, \"IgniteTransaction commit error:\" + e.getMessage());\n             throw new CacheException(e.getMessage());\n         }\n     }\n \n+    @Override\n     public void rollback() throws CacheException {\n         try {\n-            clientTransaction.rollback();\n-        } catch (ClientServerError e) {\n-            logger.log(Level.WARNING, \"IgniteTransaction rollback error:\" + e.getMessage());\n-            throw new CacheException(e.getMessage());\n-        } catch (ClientException e) {\n+            transaction.rollback();\n+        } catch (IgniteException e) {\n             logger.log(Level.WARNING, \"IgniteTransaction rollback error:\" + e.getMessage());\n             throw new CacheException(e.getMessage());\n         }\n     }\n \n     @Override\n     public void close() {\n-        if (clientTransaction != null) {\n-            clientTransaction.close();\n+        if (transaction != null) {\n+            transaction.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c14d746fb5826f2e54d182f7efa863a98a6316c3"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODc4NDk3NQ==", "bodyText": "Should there be no iginte-related information in redis?", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r448784975", "createdAt": "2020-07-02T06:51:39Z", "author": {"login": "chenpiaoping"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/redis/RedisExpireCache.java", "diffHunk": "@@ -113,6 +114,26 @@ public boolean remove(K key) throws CacheException {\n         }\n     }\n \n+    @Override\n+    public V get(Map<String, Object[]> filterParams) throws CacheException {\n+        return null;\n+    }\n+\n+    @Override\n+    public <E1, E2> V get(IgniteBiPredicate<E1, E2> igniteBiPredicate) throws CacheException {\n+        return null;\n+    }\n+\n+    @Override\n+    public <E1, E2> Map<K, V> getAll(Map<String, Object[]> filterParams) throws CacheException {\n+        return null;\n+    }\n+\n+    @Override\n+    public <E1, E2> Map<K, V> getAll(IgniteBiPredicate<E1, E2> igniteBiPredicate) throws CacheException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c14d746fb5826f2e54d182f7efa863a98a6316c3"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTYyNzc4", "url": "https://github.com/futurewei-cloud/alcor/pull/252#pullrequestreview-441562778", "createdAt": "2020-07-02T10:46:33Z", "commit": {"oid": "de99e62709d42f996eae5d9a64fcde19d7aab57d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDkwOTg5", "url": "https://github.com/futurewei-cloud/alcor/pull/252#pullrequestreview-442090989", "createdAt": "2020-07-03T01:00:42Z", "commit": {"oid": "de99e62709d42f996eae5d9a64fcde19d7aab57d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMTowMDo0MlrOGsgyyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMTowMzoyNlrOGsg1AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyNzgxOA==", "bodyText": "@Gzure Should Ignitetransaction also support IgniteClient based on the setting?\nThis is non-blocking. If we do need that, we can do it next PR.", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r449327818", "createdAt": "2020-07-03T01:00:42Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/ignite/IgniteTransaction.java", "diffHunk": "@@ -33,55 +31,48 @@\n public class IgniteTransaction implements Transaction {\n     private static final Logger logger = LoggerFactory.getLogger();\n \n-    private IgniteClient igniteClient;\n-    private ClientTransaction clientTransaction;\n+    private final Ignite client;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de99e62709d42f996eae5d9a64fcde19d7aab57d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMyODM4NQ==", "bodyText": "In our MockIgniteServer, do we need to test both IgniteClient and Ignite?", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r449328385", "createdAt": "2020-07-03T01:03:26Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/ignite/MockIgniteServer.java", "diffHunk": "@@ -16,26 +16,45 @@\n package com.futurewei.alcor.common.db.ignite;\n \n import org.apache.ignite.Ignite;\n+import org.apache.ignite.IgniteCache;\n import org.apache.ignite.IgniteException;\n import org.apache.ignite.Ignition;\n-import org.apache.ignite.configuration.ClientConnectorConfiguration;\n+import org.apache.ignite.internal.IgniteKernal;\n+import org.apache.ignite.internal.processors.cache.IgniteCacheProxyImpl;\n+import org.apache.ignite.spi.discovery.tcp.TcpDiscoverySpi;\n+import org.apache.ignite.spi.discovery.tcp.ipfinder.vm.TcpDiscoveryVmIpFinder;\n import org.junit.AfterClass;\n import org.junit.BeforeClass;\n \n+import java.util.Collections;\n+import java.util.Optional;\n+import java.util.function.Consumer;\n+\n \n public class MockIgniteServer {\n+\n+    private static final String LOCAL_ADDRESS = \"127.0.0.1\";\n+    private static final int LISTEN_PORT = 11801;\n+    private static final int LISTEN_PORT_RANGE = 10;\n+\n     private static Ignite igniteServer = null;\n-    private static int ListenPort = 10801;\n \n     @BeforeClass\n     public static void init() {\n         if (igniteServer == null) {\n             try {\n-                ClientConnectorConfiguration clientConfig = new ClientConnectorConfiguration();\n-                clientConfig.setPort(ListenPort);\n-\n                 org.apache.ignite.configuration.IgniteConfiguration cfg = new org.apache.ignite.configuration.IgniteConfiguration();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de99e62709d42f996eae5d9a64fcde19d7aab57d"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDkzOTcy", "url": "https://github.com/futurewei-cloud/alcor/pull/252#pullrequestreview-442093972", "createdAt": "2020-07-03T01:13:08Z", "commit": {"oid": "de99e62709d42f996eae5d9a64fcde19d7aab57d"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMToxMzowOFrOGsg8-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMToxMzowOFrOGsg8-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMzMDQyNQ==", "bodyText": "If not that in use anyway, we can consider deprecate then remove them", "url": "https://github.com/futurewei-cloud/alcor/pull/252#discussion_r449330425", "createdAt": "2020-07-03T01:13:08Z", "author": {"login": "xieus"}, "path": "services/api_gateway/src/main/java/com/futurewei/alcor/apigateway/proxies/SubnetManagerServiceProxy.java", "diffHunk": "@@ -28,7 +28,7 @@\n \n import java.util.UUID;\n \n-@Service\n+//@Service", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de99e62709d42f996eae5d9a64fcde19d7aab57d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90d19e42a375751898b25fb667ad6515ddf5ea9d", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/90d19e42a375751898b25fb667ad6515ddf5ea9d", "committedDate": "2020-07-03T02:12:12Z", "message": "add multi params query support\nadd field filter support\nadd UTs skip init ignite client bean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f02e022199cb73c403de410ef0f8c92cf3099d59", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f02e022199cb73c403de410ef0f8c92cf3099d59", "committedDate": "2020-07-03T02:12:12Z", "message": "add handle default value handle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9da2521addd2aa7c25d98f2a16d849f172b0575", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a9da2521addd2aa7c25d98f2a16d849f172b0575", "committedDate": "2020-07-03T02:12:12Z", "message": "rename dhcp_enable to enable_dhcp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddc3f668a0d3aa75bbe8c1acdc475e7533825865", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/ddc3f668a0d3aa75bbe8c1acdc475e7533825865", "committedDate": "2020-07-03T02:12:12Z", "message": "remove some check in update subnet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2ee7733a69a7ea4eddcc179b4d82bd9e1202874", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c2ee7733a69a7ea4eddcc179b4d82bd9e1202874", "committedDate": "2020-07-03T02:12:12Z", "message": "change return type to PortWebBulkJson"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35a0b2fbb9fabdbc39d903f5a5036d77280d7994", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/35a0b2fbb9fabdbc39d903f5a5036d77280d7994", "committedDate": "2020-07-03T02:12:13Z", "message": "change return type to VpcsWebJson"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f59fcc1b0a257bb69dc628068ba50648577bf3c", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/9f59fcc1b0a257bb69dc628068ba50648577bf3c", "committedDate": "2020-07-03T02:12:13Z", "message": "change vpcs to networks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a43bd28fc5ab20522df89fc7cd42164e43741544", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a43bd28fc5ab20522df89fc7cd42164e43741544", "committedDate": "2020-07-03T02:12:13Z", "message": "change webflux to spring gateway and add port route defines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0044a1feb058a6283ab91b496f9946c6faea3876", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0044a1feb058a6283ab91b496f9946c6faea3876", "committedDate": "2020-07-03T02:12:13Z", "message": "change ClientException to IgniteException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60cd4df20820e387c7e6045efc96e45ef7107b64", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/60cd4df20820e387c7e6045efc96e45ef7107b64", "committedDate": "2020-07-03T02:12:13Z", "message": "rewrite test unit and remove some beans"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1426628c07f612a9350b13c0a29b1f25f1edb20", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f1426628c07f612a9350b13c0a29b1f25f1edb20", "committedDate": "2020-07-03T02:12:13Z", "message": "fix vpc and subnet create post problem\nmake some api return value meet neutron api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f81529010c96cec998956cdf210221deb6be104", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/2f81529010c96cec998956cdf210221deb6be104", "committedDate": "2020-07-03T02:12:13Z", "message": "add securityGroup route in API Gateway"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1df69df0851cbadb297ce66c4edfc65ba94794f1", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/1df69df0851cbadb297ce66c4edfc65ba94794f1", "committedDate": "2020-07-03T02:14:23Z", "message": "support return both project_id and tenant_id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2296ca2eca38ef1381d9c339127043e5a4b6d160", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/2296ca2eca38ef1381d9c339127043e5a4b6d160", "committedDate": "2020-07-03T02:14:29Z", "message": "add ignite thin client and rewrite some db interfaces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca8a57a8ea99748de3f5a0f2642c9aadaa6d887e", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/ca8a57a8ea99748de3f5a0f2642c9aadaa6d887e", "committedDate": "2020-07-03T02:14:29Z", "message": "add new interface IgniteICache extends ICache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc42ef24afe7486aa4da13c04bacf5edd3cdee31", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/bc42ef24afe7486aa4da13c04bacf5edd3cdee31", "committedDate": "2020-07-03T02:14:29Z", "message": "add some Exception handle in ignite Transaction class"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d8ed7e504f2fd94feabe0a1a9e27dbc83267da4", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/9d8ed7e504f2fd94feabe0a1a9e27dbc83267da4", "committedDate": "2020-07-03T01:29:45Z", "message": "Merge branch 'master' into multi-params-query"}, "afterCommit": {"oid": "bc42ef24afe7486aa4da13c04bacf5edd3cdee31", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/bc42ef24afe7486aa4da13c04bacf5edd3cdee31", "committedDate": "2020-07-03T02:14:29Z", "message": "add some Exception handle in ignite Transaction class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0af4b61eca68635a6ca5a0dd1b242c40bbd22939", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0af4b61eca68635a6ca5a0dd1b242c40bbd22939", "committedDate": "2020-07-03T02:31:38Z", "message": "merge with master"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2159, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}