{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNDU3MDMx", "number": 248, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNDo1NTowMVrOEE7nSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDozNzozNlrOEFFRCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjA2NDcyOnYy", "diffSide": "LEFT", "path": "web/src/main/java/com/futurewei/alcor/web/entity/dataplane/InternalPortEntity.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNDo1NTowMVrOGi3Atw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzowOToyNlrOGi5csg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNjA3MQ==", "bodyText": "@chenpiaoping Check a few latest commits that were not included here: https://github.com/futurewei-cloud/alcor/pull/244/commits, particularly this one cdbd96e", "url": "https://github.com/futurewei-cloud/alcor/pull/248#discussion_r439206071", "createdAt": "2020-06-12T04:55:01Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/dataplane/InternalPortEntity.java", "diffHunk": "@@ -15,24 +15,27 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.futurewei.alcor.web.entity.port.PortEntity;\n import com.futurewei.alcor.web.entity.route.RouteEntity;\n-import com.futurewei.alcor.web.entity.vpc.VpcEntity;\n import lombok.Data;\n \n+import java.util.ArrayList;\n import java.util.List;\n-import java.util.Set;\n \n @Data\n-public class InternalPortEntityNB extends PortEntity {\n+public class InternalPortEntity extends PortEntity {\n \n-  @JsonProperty(\"routes\")\n-  private List<RouteEntity> routes;\n+    @JsonProperty(\"routes\")\n+    private List<RouteEntity> routes;\n \n-  @JsonProperty(\"neighbor_info\")\n-  private List<NeighborInfo> neighborIps;\n+    @JsonProperty(\"neighbor_info\")\n+    private List<NeighborInfo> neighborInfos;\n \n-  @JsonProperty(\"binding_host_ip\")\n-  private String bindingHostIP;\n+    @JsonProperty(\"binding_host_ip\")\n+    private String bindingHostIP;\n \n-  private Set<InternalSubnetEntityNB> subnetEntities;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "752095bf4025e071d1dbb3baf638cb488c5d27ab"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIyNTY1Mg==", "bodyText": "Why does InternalPortEntity need the fields vpcEntities and subnetEntities\uff1fDon't they conflict with vpcEntities and subnetEntities in NetworkConfiguration?", "url": "https://github.com/futurewei-cloud/alcor/pull/248#discussion_r439225652", "createdAt": "2020-06-12T06:12:28Z", "author": {"login": "chenpiaoping"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/dataplane/InternalPortEntity.java", "diffHunk": "@@ -15,24 +15,27 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.futurewei.alcor.web.entity.port.PortEntity;\n import com.futurewei.alcor.web.entity.route.RouteEntity;\n-import com.futurewei.alcor.web.entity.vpc.VpcEntity;\n import lombok.Data;\n \n+import java.util.ArrayList;\n import java.util.List;\n-import java.util.Set;\n \n @Data\n-public class InternalPortEntityNB extends PortEntity {\n+public class InternalPortEntity extends PortEntity {\n \n-  @JsonProperty(\"routes\")\n-  private List<RouteEntity> routes;\n+    @JsonProperty(\"routes\")\n+    private List<RouteEntity> routes;\n \n-  @JsonProperty(\"neighbor_info\")\n-  private List<NeighborInfo> neighborIps;\n+    @JsonProperty(\"neighbor_info\")\n+    private List<NeighborInfo> neighborInfos;\n \n-  @JsonProperty(\"binding_host_ip\")\n-  private String bindingHostIP;\n+    @JsonProperty(\"binding_host_ip\")\n+    private String bindingHostIP;\n \n-  private Set<InternalSubnetEntityNB> subnetEntities;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNjA3MQ=="}, "originalCommit": {"oid": "752095bf4025e071d1dbb3baf638cb488c5d27ab"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0NjAwMg==", "bodyText": "Good question. Asked the same question when I saw them at the first place. Those two fields are internal fields which are not exposed to other services (port manager don't have to pass to DPM. DPM uses those two fields for internal bookkeeping purpose. @haboy52581", "url": "https://github.com/futurewei-cloud/alcor/pull/248#discussion_r439246002", "createdAt": "2020-06-12T07:09:26Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/dataplane/InternalPortEntity.java", "diffHunk": "@@ -15,24 +15,27 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.futurewei.alcor.web.entity.port.PortEntity;\n import com.futurewei.alcor.web.entity.route.RouteEntity;\n-import com.futurewei.alcor.web.entity.vpc.VpcEntity;\n import lombok.Data;\n \n+import java.util.ArrayList;\n import java.util.List;\n-import java.util.Set;\n \n @Data\n-public class InternalPortEntityNB extends PortEntity {\n+public class InternalPortEntity extends PortEntity {\n \n-  @JsonProperty(\"routes\")\n-  private List<RouteEntity> routes;\n+    @JsonProperty(\"routes\")\n+    private List<RouteEntity> routes;\n \n-  @JsonProperty(\"neighbor_info\")\n-  private List<NeighborInfo> neighborIps;\n+    @JsonProperty(\"neighbor_info\")\n+    private List<NeighborInfo> neighborInfos;\n \n-  @JsonProperty(\"binding_host_ip\")\n-  private String bindingHostIP;\n+    @JsonProperty(\"binding_host_ip\")\n+    private String bindingHostIP;\n \n-  private Set<InternalSubnetEntityNB> subnetEntities;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTIwNjA3MQ=="}, "originalCommit": {"oid": "752095bf4025e071d1dbb3baf638cb488c5d27ab"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjM0MjE1OnYy", "diffSide": "RIGHT", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/repo/PortRepository.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzoxODozMVrOGi5rQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzo1ODoxOFrOGi6vtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0OTczMQ==", "bodyText": "Lock on portCache may not be sufficient. If multiple ports (in the same vpc) are created in separate calls, those calls will operate on different portCache row but the same neighborCache row.", "url": "https://github.com/futurewei-cloud/alcor/pull/248#discussion_r439249731", "createdAt": "2020-06-12T07:18:31Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/repo/PortRepository.java", "diffHunk": "@@ -18,62 +18,199 @@\n import com.futurewei.alcor.common.db.CacheException;\n import com.futurewei.alcor.common.db.CacheFactory;\n import com.futurewei.alcor.common.db.ICache;\n-import com.futurewei.alcor.common.db.repo.ICacheRepository;\n+import com.futurewei.alcor.common.db.Transaction;\n+import com.futurewei.alcor.portmanager.entity.PortNeighbors;\n+import com.futurewei.alcor.web.entity.dataplane.NeighborInfo;\n import com.futurewei.alcor.web.entity.port.PortEntity;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.stereotype.Repository;\n import javax.annotation.PostConstruct;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n \n @ComponentScan(value=\"com.futurewei.alcor.common.db\")\n @Repository\n-public class PortRepository implements ICacheRepository<PortEntity> {\n+public class PortRepository {\n     private static final Logger LOG = LoggerFactory.getLogger(PortRepository.class);\n \n-    private ICache<String, PortEntity> cache;\n+    private ICache<String, PortEntity> portCache;\n+    private ICache<String, PortNeighbors> neighborCache;\n \n     @Autowired\n     public PortRepository(CacheFactory cacheFactory) {\n-        cache = cacheFactory.getCache(PortEntity.class);\n+        portCache = cacheFactory.getCache(PortEntity.class);\n     }\n \n     @PostConstruct\n     private void init() {\n         LOG.info(\"PortRepository init done\");\n     }\n \n-    @Override\n-    public PortEntity findItem(String id) throws CacheException {\n-        return cache.get(id);\n+    public PortEntity findPortEntity(String portId) throws CacheException {\n+        return portCache.get(portId);\n     }\n \n-    @Override\n-    public Map<String, PortEntity> findAllItems() throws CacheException {\n-        return cache.getAll();\n+    public Map<String, PortEntity> findAllPortEntities() throws CacheException {\n+        return portCache.getAll();\n     }\n \n-    @Override\n-    public void addItem(PortEntity portEntity) throws CacheException {\n-        cache.put(portEntity.getId(), portEntity);\n+    public void createPortAndNeighbor(PortEntity portEntity, NeighborInfo neighborInfo) throws Exception {\n+        try (Transaction tx = portCache.getTransaction().start()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "752095bf4025e071d1dbb3baf638cb488c5d27ab"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1MzA3MQ==", "bodyText": "This lock can lock multiple caches, It should be taken out of the cache.", "url": "https://github.com/futurewei-cloud/alcor/pull/248#discussion_r439253071", "createdAt": "2020-06-12T07:26:35Z", "author": {"login": "chenpiaoping"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/repo/PortRepository.java", "diffHunk": "@@ -18,62 +18,199 @@\n import com.futurewei.alcor.common.db.CacheException;\n import com.futurewei.alcor.common.db.CacheFactory;\n import com.futurewei.alcor.common.db.ICache;\n-import com.futurewei.alcor.common.db.repo.ICacheRepository;\n+import com.futurewei.alcor.common.db.Transaction;\n+import com.futurewei.alcor.portmanager.entity.PortNeighbors;\n+import com.futurewei.alcor.web.entity.dataplane.NeighborInfo;\n import com.futurewei.alcor.web.entity.port.PortEntity;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.stereotype.Repository;\n import javax.annotation.PostConstruct;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n \n @ComponentScan(value=\"com.futurewei.alcor.common.db\")\n @Repository\n-public class PortRepository implements ICacheRepository<PortEntity> {\n+public class PortRepository {\n     private static final Logger LOG = LoggerFactory.getLogger(PortRepository.class);\n \n-    private ICache<String, PortEntity> cache;\n+    private ICache<String, PortEntity> portCache;\n+    private ICache<String, PortNeighbors> neighborCache;\n \n     @Autowired\n     public PortRepository(CacheFactory cacheFactory) {\n-        cache = cacheFactory.getCache(PortEntity.class);\n+        portCache = cacheFactory.getCache(PortEntity.class);\n     }\n \n     @PostConstruct\n     private void init() {\n         LOG.info(\"PortRepository init done\");\n     }\n \n-    @Override\n-    public PortEntity findItem(String id) throws CacheException {\n-        return cache.get(id);\n+    public PortEntity findPortEntity(String portId) throws CacheException {\n+        return portCache.get(portId);\n     }\n \n-    @Override\n-    public Map<String, PortEntity> findAllItems() throws CacheException {\n-        return cache.getAll();\n+    public Map<String, PortEntity> findAllPortEntities() throws CacheException {\n+        return portCache.getAll();\n     }\n \n-    @Override\n-    public void addItem(PortEntity portEntity) throws CacheException {\n-        cache.put(portEntity.getId(), portEntity);\n+    public void createPortAndNeighbor(PortEntity portEntity, NeighborInfo neighborInfo) throws Exception {\n+        try (Transaction tx = portCache.getTransaction().start()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0OTczMQ=="}, "originalCommit": {"oid": "752095bf4025e071d1dbb3baf638cb488c5d27ab"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI2MTQzNw==", "bodyText": "oh could you pls point me to the right codes that explain a bit more about multi-cache locking? Just out of curiosity.", "url": "https://github.com/futurewei-cloud/alcor/pull/248#discussion_r439261437", "createdAt": "2020-06-12T07:46:10Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/repo/PortRepository.java", "diffHunk": "@@ -18,62 +18,199 @@\n import com.futurewei.alcor.common.db.CacheException;\n import com.futurewei.alcor.common.db.CacheFactory;\n import com.futurewei.alcor.common.db.ICache;\n-import com.futurewei.alcor.common.db.repo.ICacheRepository;\n+import com.futurewei.alcor.common.db.Transaction;\n+import com.futurewei.alcor.portmanager.entity.PortNeighbors;\n+import com.futurewei.alcor.web.entity.dataplane.NeighborInfo;\n import com.futurewei.alcor.web.entity.port.PortEntity;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.stereotype.Repository;\n import javax.annotation.PostConstruct;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n \n @ComponentScan(value=\"com.futurewei.alcor.common.db\")\n @Repository\n-public class PortRepository implements ICacheRepository<PortEntity> {\n+public class PortRepository {\n     private static final Logger LOG = LoggerFactory.getLogger(PortRepository.class);\n \n-    private ICache<String, PortEntity> cache;\n+    private ICache<String, PortEntity> portCache;\n+    private ICache<String, PortNeighbors> neighborCache;\n \n     @Autowired\n     public PortRepository(CacheFactory cacheFactory) {\n-        cache = cacheFactory.getCache(PortEntity.class);\n+        portCache = cacheFactory.getCache(PortEntity.class);\n     }\n \n     @PostConstruct\n     private void init() {\n         LOG.info(\"PortRepository init done\");\n     }\n \n-    @Override\n-    public PortEntity findItem(String id) throws CacheException {\n-        return cache.get(id);\n+    public PortEntity findPortEntity(String portId) throws CacheException {\n+        return portCache.get(portId);\n     }\n \n-    @Override\n-    public Map<String, PortEntity> findAllItems() throws CacheException {\n-        return cache.getAll();\n+    public Map<String, PortEntity> findAllPortEntities() throws CacheException {\n+        return portCache.getAll();\n     }\n \n-    @Override\n-    public void addItem(PortEntity portEntity) throws CacheException {\n-        cache.put(portEntity.getId(), portEntity);\n+    public void createPortAndNeighbor(PortEntity portEntity, NeighborInfo neighborInfo) throws Exception {\n+        try (Transaction tx = portCache.getTransaction().start()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0OTczMQ=="}, "originalCommit": {"oid": "752095bf4025e071d1dbb3baf638cb488c5d27ab"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI2NzI1NQ==", "bodyText": "https://github.com/futurewei-cloud/alcor/blob/master/lib/src/main/java/com/futurewei/alcor/common/db/ignite/IgniteTransaction.java", "url": "https://github.com/futurewei-cloud/alcor/pull/248#discussion_r439267255", "createdAt": "2020-06-12T07:58:18Z", "author": {"login": "chenpiaoping"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/repo/PortRepository.java", "diffHunk": "@@ -18,62 +18,199 @@\n import com.futurewei.alcor.common.db.CacheException;\n import com.futurewei.alcor.common.db.CacheFactory;\n import com.futurewei.alcor.common.db.ICache;\n-import com.futurewei.alcor.common.db.repo.ICacheRepository;\n+import com.futurewei.alcor.common.db.Transaction;\n+import com.futurewei.alcor.portmanager.entity.PortNeighbors;\n+import com.futurewei.alcor.web.entity.dataplane.NeighborInfo;\n import com.futurewei.alcor.web.entity.port.PortEntity;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.context.annotation.ComponentScan;\n import org.springframework.stereotype.Repository;\n import javax.annotation.PostConstruct;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n import java.util.function.Function;\n import java.util.stream.Collectors;\n \n @ComponentScan(value=\"com.futurewei.alcor.common.db\")\n @Repository\n-public class PortRepository implements ICacheRepository<PortEntity> {\n+public class PortRepository {\n     private static final Logger LOG = LoggerFactory.getLogger(PortRepository.class);\n \n-    private ICache<String, PortEntity> cache;\n+    private ICache<String, PortEntity> portCache;\n+    private ICache<String, PortNeighbors> neighborCache;\n \n     @Autowired\n     public PortRepository(CacheFactory cacheFactory) {\n-        cache = cacheFactory.getCache(PortEntity.class);\n+        portCache = cacheFactory.getCache(PortEntity.class);\n     }\n \n     @PostConstruct\n     private void init() {\n         LOG.info(\"PortRepository init done\");\n     }\n \n-    @Override\n-    public PortEntity findItem(String id) throws CacheException {\n-        return cache.get(id);\n+    public PortEntity findPortEntity(String portId) throws CacheException {\n+        return portCache.get(portId);\n     }\n \n-    @Override\n-    public Map<String, PortEntity> findAllItems() throws CacheException {\n-        return cache.getAll();\n+    public Map<String, PortEntity> findAllPortEntities() throws CacheException {\n+        return portCache.getAll();\n     }\n \n-    @Override\n-    public void addItem(PortEntity portEntity) throws CacheException {\n-        cache.put(portEntity.getId(), portEntity);\n+    public void createPortAndNeighbor(PortEntity portEntity, NeighborInfo neighborInfo) throws Exception {\n+        try (Transaction tx = portCache.getTransaction().start()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI0OTczMQ=="}, "originalCommit": {"oid": "752095bf4025e071d1dbb3baf638cb488c5d27ab"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjM2MzU2OnYy", "diffSide": "RIGHT", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzoyNjo0MlrOGi54fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzo1OToxOFrOGi6xlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1MzExNw==", "bodyText": "Try to use \"this.getNodeInfos\" if possible.", "url": "https://github.com/futurewei-cloud/alcor/pull/248#discussion_r439253117", "createdAt": "2020-06-12T07:26:42Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "diffHunk": "@@ -146,21 +205,25 @@ public PortWebJson createPort(String projectId, PortWebJson portWebJson) throws\n         portEntity.setProjectId(projectId);\n \n         try {\n-            createPortAsync(portEntity, executor, rollbacks);\n+            this.createPortAsync(portEntity, executor, rollbacks, true);\n \n             //Wait for all async functions to finish\n             List<Object> entities = executor.joinAll();\n             entities.add(portEntity);\n \n-            //Build GoalState and Send it to DPM\n+            NeighborInfo neighborInfo = null;\n             if (portEntity.getBindingHostId() != null) {\n-                Goalstate.GoalState goalState = GoalStateUtil.buildGoalState(entities, Common.OperationType.CREATE);\n+                Map<String, NodeInfo> nodeInfoMap = getNodeInfos(entities);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "752095bf4025e071d1dbb3baf638cb488c5d27ab"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI2NzczNQ==", "bodyText": "ok", "url": "https://github.com/futurewei-cloud/alcor/pull/248#discussion_r439267735", "createdAt": "2020-06-12T07:59:18Z", "author": {"login": "chenpiaoping"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "diffHunk": "@@ -146,21 +205,25 @@ public PortWebJson createPort(String projectId, PortWebJson portWebJson) throws\n         portEntity.setProjectId(projectId);\n \n         try {\n-            createPortAsync(portEntity, executor, rollbacks);\n+            this.createPortAsync(portEntity, executor, rollbacks, true);\n \n             //Wait for all async functions to finish\n             List<Object> entities = executor.joinAll();\n             entities.add(portEntity);\n \n-            //Build GoalState and Send it to DPM\n+            NeighborInfo neighborInfo = null;\n             if (portEntity.getBindingHostId() != null) {\n-                Goalstate.GoalState goalState = GoalStateUtil.buildGoalState(entities, Common.OperationType.CREATE);\n+                Map<String, NodeInfo> nodeInfoMap = getNodeInfos(entities);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1MzExNw=="}, "originalCommit": {"oid": "752095bf4025e071d1dbb3baf638cb488c5d27ab"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjM3OTQyOnYy", "diffSide": "RIGHT", "path": "web/src/main/java/com/futurewei/alcor/web/entity/dataplane/NeighborInfo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzozMjo0M1rOGi6CjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwNzozMjo0M1rOGi6CjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTI1NTY5Mg==", "bodyText": "Confirmed. This is needed. @chenpiaoping @haboy52581", "url": "https://github.com/futurewei-cloud/alcor/pull/248#discussion_r439255692", "createdAt": "2020-06-12T07:32:43Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/dataplane/NeighborInfo.java", "diffHunk": "@@ -26,4 +25,50 @@\n \n   @JsonProperty(\"port_id\")\n   private String portId;\n+\n+  @JsonProperty(\"port_mac\")\n+  private String portMac;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "752095bf4025e071d1dbb3baf638cb488c5d27ab"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzU1MDk4OnYy", "diffSide": "LEFT", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/PortManagerApplication.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDoxMToyM1rOGjFeZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDoxMToyM1rOGjFeZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ0MzA0Ng==", "bodyText": "Do we disable temporarily for some reason?", "url": "https://github.com/futurewei-cloud/alcor/pull/248#discussion_r439443046", "createdAt": "2020-06-12T14:11:23Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/PortManagerApplication.java", "diffHunk": "@@ -1,13 +1,10 @@\n package com.futurewei.alcor.portmanager;\n \n-import org.mybatis.spring.annotation.MapperScan;\n import org.springframework.boot.SpringApplication;\n import org.springframework.boot.autoconfigure.SpringBootApplication;\n import org.springframework.transaction.annotation.EnableTransactionManagement;\n \n @SpringBootApplication\n-@EnableTransactionManagement", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a81f32cc854a84f4a4e5437540bb89262b7f9"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzY0NjE3OnYy", "diffSide": "RIGHT", "path": "services/port_manager/src/main/resources/application.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDozNzozNlrOGjGbng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDozNzozNlrOGjGbng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ1ODcxOA==", "bodyText": "Need to add dpm service url as in commit 5fce678\nLet me add it for you to kick off the integration.", "url": "https://github.com/futurewei-cloud/alcor/pull/248#discussion_r439458718", "createdAt": "2020-06-12T14:37:36Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/resources/application.properties", "diffHunk": "@@ -17,12 +17,4 @@ microservices.ip.service.url=http://localhost:9004/ips\n microservices.mac.service.url=http://localhost:9005/macs\n microservices.sg.service.url=http://127.0.0.1:8080/securitygroups\n microservices.route.service.url=http://localhost:9003/routes\n-microservices.node.service.url=http://localhost:9007/nodes\n-#MyBatis configuration\n-spring.datasource.driverClassName=org.apache.ignite.IgniteJdbcThinDriver\n-spring.datasource.url=jdbc:ignite:thin://127.0.0.1\n-spring.datasource.schema=classpath:sql/port.sql\n-mybatis.configuration.map-underscore-to-camel-case=true\n-#spring.datasource.username=your_username\n-#spring.datasource.password=your_password\n-logging.level.com.dao=debug\n\\ No newline at end of file\n+microservices.node.service.url=http://localhost:9007/nodes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5a81f32cc854a84f4a4e5437540bb89262b7f9"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4553, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}