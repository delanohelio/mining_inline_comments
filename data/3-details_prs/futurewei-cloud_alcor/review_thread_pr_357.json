{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4MTIyMDgw", "number": 357, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo1Mzo0M1rOEYnSdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOToxMTowMFrOEZndRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjQ0OTgxOnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/SegmentController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo1Mzo0M1rOHBDBYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNTowMjo1N1rOHCDcKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MDEyOQ==", "bodyText": "Recommend to handle this variable same as vpcId, i.e., assigning it to a local variable and use the variable here.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r470860129", "createdAt": "2020-08-14T20:53:43Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/SegmentController.java", "diffHunk": "@@ -97,15 +102,18 @@ public SegmentWebResponseJson createSegment(@PathVariable String projectid, @Req\n             RestPreconditionsUtil.verifyResourceNotNull(segmentEntity);\n             RestPreconditionsUtil.populateResourceProjectId(segmentEntity, projectid);\n \n+            String vpcId = segmentWebRequestObject.getVpcId();\n+            VpcEntity vpcState = this.vpcDatabaseService.getByVpcId(vpcId);\n+\n             // verify network type\n             String networkType = segmentWebRequestObject.getNetworkType();\n             Long key = null;\n             if (NetworkTypeEnum.VXLAN.getNetworkType().equals(networkType)) {\n-                key = segmentService.addVxlanEntity(networkTypeId, networkType, segmentWebRequestObject.getVpcId());\n+                key = segmentService.addVxlanEntity(networkTypeId, networkType, vpcId, vpcState.getMtu());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0MDI5NA==", "bodyText": "Sure", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r471840294", "createdAt": "2020-08-18T00:08:11Z", "author": {"login": "kevin-zhonghao"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/SegmentController.java", "diffHunk": "@@ -97,15 +102,18 @@ public SegmentWebResponseJson createSegment(@PathVariable String projectid, @Req\n             RestPreconditionsUtil.verifyResourceNotNull(segmentEntity);\n             RestPreconditionsUtil.populateResourceProjectId(segmentEntity, projectid);\n \n+            String vpcId = segmentWebRequestObject.getVpcId();\n+            VpcEntity vpcState = this.vpcDatabaseService.getByVpcId(vpcId);\n+\n             // verify network type\n             String networkType = segmentWebRequestObject.getNetworkType();\n             Long key = null;\n             if (NetworkTypeEnum.VXLAN.getNetworkType().equals(networkType)) {\n-                key = segmentService.addVxlanEntity(networkTypeId, networkType, segmentWebRequestObject.getVpcId());\n+                key = segmentService.addVxlanEntity(networkTypeId, networkType, vpcId, vpcState.getMtu());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MDEyOQ=="}, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkxNTU2Mg==", "bodyText": "@kevin-zhonghao Maybe the previous comment was unclear. It meant that using a variable to replace vpcState.getMtu().", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r471915562", "createdAt": "2020-08-18T05:02:57Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/SegmentController.java", "diffHunk": "@@ -97,15 +102,18 @@ public SegmentWebResponseJson createSegment(@PathVariable String projectid, @Req\n             RestPreconditionsUtil.verifyResourceNotNull(segmentEntity);\n             RestPreconditionsUtil.populateResourceProjectId(segmentEntity, projectid);\n \n+            String vpcId = segmentWebRequestObject.getVpcId();\n+            VpcEntity vpcState = this.vpcDatabaseService.getByVpcId(vpcId);\n+\n             // verify network type\n             String networkType = segmentWebRequestObject.getNetworkType();\n             Long key = null;\n             if (NetworkTypeEnum.VXLAN.getNetworkType().equals(networkType)) {\n-                key = segmentService.addVxlanEntity(networkTypeId, networkType, segmentWebRequestObject.getVpcId());\n+                key = segmentService.addVxlanEntity(networkTypeId, networkType, vpcId, vpcState.getMtu());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MDEyOQ=="}, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjQ1NDQyOnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/VpcController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo1NToyMFrOHBDEDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNTowMzozOFrOHCDczA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MDgxMg==", "bodyText": "If not needed, remove the block.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r470860812", "createdAt": "2020-08-14T20:55:20Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/VpcController.java", "diffHunk": "@@ -136,12 +136,12 @@ public VpcWebJson createVpcState(@PathVariable String projectid, @RequestBody Vp\n             RestPreconditionsUtil.verifyResourceNotNull(inVpcState);\n             RestPreconditionsUtil.populateResourceProjectId(inVpcState, projectid);\n \n-            this.vpcDatabaseService.addVpc(inVpcState);\n-\n-            inVpcState = this.vpcDatabaseService.getByVpcId(inVpcState.getId());\n-            if (inVpcState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+//            this.vpcDatabaseService.addVpc(inVpcState);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0MDc4Mw==", "bodyText": "okay", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r471840783", "createdAt": "2020-08-18T00:10:03Z", "author": {"login": "kevin-zhonghao"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/VpcController.java", "diffHunk": "@@ -136,12 +136,12 @@ public VpcWebJson createVpcState(@PathVariable String projectid, @RequestBody Vp\n             RestPreconditionsUtil.verifyResourceNotNull(inVpcState);\n             RestPreconditionsUtil.populateResourceProjectId(inVpcState, projectid);\n \n-            this.vpcDatabaseService.addVpc(inVpcState);\n-\n-            inVpcState = this.vpcDatabaseService.getByVpcId(inVpcState.getId());\n-            if (inVpcState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+//            this.vpcDatabaseService.addVpc(inVpcState);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MDgxMg=="}, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkxNTcyNA==", "bodyText": "@kevin-zhonghao I think you didn't check in your local commit :-) This comment is unresolved.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r471915724", "createdAt": "2020-08-18T05:03:38Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/VpcController.java", "diffHunk": "@@ -136,12 +136,12 @@ public VpcWebJson createVpcState(@PathVariable String projectid, @RequestBody Vp\n             RestPreconditionsUtil.verifyResourceNotNull(inVpcState);\n             RestPreconditionsUtil.populateResourceProjectId(inVpcState, projectid);\n \n-            this.vpcDatabaseService.addVpc(inVpcState);\n-\n-            inVpcState = this.vpcDatabaseService.getByVpcId(inVpcState.getId());\n-            if (inVpcState == null) {\n-                throw new ResourcePersistenceException();\n-            }\n+//            this.vpcDatabaseService.addVpc(inVpcState);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MDgxMg=="}, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjQ1NTg3OnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo1NTo1OFrOHBDE7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo1NTo1OFrOHBDE7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MTAzOA==", "bodyText": "Good optimization.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r470861038", "createdAt": "2020-08-14T20:55:58Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -74,11 +74,7 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n \n             key = this.vlanRangeRepository.allocateVlanKey(rangeId);\n \n-            if (vpcId != null) {\n-                VpcEntity vpc = this.vpcDatabaseService.getByVpcId(vpcId);\n-                Integer mtu = vpc.getMtu();\n-                vlan.setMtu(mtu);\n-            }\n+            vlan.setMtu(mtu);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjQ2MTE0OnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo1Nzo1N1rOHBDICg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDoxOToyN1rOHB_B_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MTgzNA==", "bodyText": "We may need to do Ctrl+shif+L in this file. Could easily find some formatting issues in this file.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r470861834", "createdAt": "2020-08-14T20:57:57Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -150,7 +151,7 @@ public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) thr\n \n         } catch (Exception e) {\n             this.vxlanRepository.deleteItem(vxlanId);\n-            this.vxlanRangeRepository.releaseVxlanKey(rangeId,key);\n+            this.vxlanRangeRepository.releaseVxlanKey(p,key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0MzMyNA==", "bodyText": "np", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r471843324", "createdAt": "2020-08-18T00:19:27Z", "author": {"login": "kevin-zhonghao"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -150,7 +151,7 @@ public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) thr\n \n         } catch (Exception e) {\n             this.vxlanRepository.deleteItem(vxlanId);\n-            this.vxlanRangeRepository.releaseVxlanKey(rangeId,key);\n+            this.vxlanRangeRepository.releaseVxlanKey(p,key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MTgzNA=="}, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjQ2NDE1OnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMDo1OTowN1rOHBDJvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDoxNzozNVrOHB_AMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MjI2OQ==", "bodyText": "Remove debugging information after the issue is confirmed.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r470862269", "createdAt": "2020-08-14T20:59:07Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +100,48 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String p = null;\n         Random ran = new Random();\n-        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n+//        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n \n         try {\n             NetworkVxlanType vxlan = new NetworkVxlanType();\n+            long start = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0Mjg2Ng==", "bodyText": "Yes", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r471842866", "createdAt": "2020-08-18T00:17:35Z", "author": {"login": "kevin-zhonghao"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +100,48 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String p = null;\n         Random ran = new Random();\n-        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n+//        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n \n         try {\n             NetworkVxlanType vxlan = new NetworkVxlanType();\n+            long start = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg2MjI2OQ=="}, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MjUzNjc5OnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMToyODo0NVrOHBD0fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNTowNDowNlrOHCDdOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg3MzIxNA==", "bodyText": "is p a partition id, or range id or something else? may need a better name.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r470873214", "createdAt": "2020-08-14T21:28:45Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +100,48 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String p = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0Mjc5Nw==", "bodyText": "np", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r471842797", "createdAt": "2020-08-18T00:17:21Z", "author": {"login": "kevin-zhonghao"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +100,48 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String p = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg3MzIxNA=="}, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTkxNTgzMg==", "bodyText": "Same here.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r471915832", "createdAt": "2020-08-18T05:04:06Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +100,48 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String p = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg3MzIxNA=="}, "originalCommit": {"oid": "7552dca3a29dc2a75e3f6b287bf1ea1d4864e468"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjkyMzAwOnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/allocator/NetworkKeyAllocator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo1ODozM1rOHCh2yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzowNzo1MFrOHCpq1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxMzg5OQ==", "bodyText": "Time to remove the commented block :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472413899", "createdAt": "2020-08-18T18:58:33Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/allocator/NetworkKeyAllocator.java", "diffHunk": "@@ -25,8 +26,11 @@ public NetworkKeyAllocator(int firstKey, int lastKey) {\n     @Override\n     public Long allocate() throws Exception {\n         int freeBit = bitSet.nextClearBit(0);\n+//        if (freeBit < 0 || freeBit >= keyNum) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ2OTYyMw==", "bodyText": "okay", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472469623", "createdAt": "2020-08-18T20:27:02Z", "author": {"login": "kevin-zhonghao"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/allocator/NetworkKeyAllocator.java", "diffHunk": "@@ -25,8 +26,11 @@ public NetworkKeyAllocator(int firstKey, int lastKey) {\n     @Override\n     public Long allocate() throws Exception {\n         int freeBit = bitSet.nextClearBit(0);\n+//        if (freeBit < 0 || freeBit >= keyNum) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxMzg5OQ=="}, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU0MTkwOA==", "bodyText": "sure", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472541908", "createdAt": "2020-08-18T23:07:50Z", "author": {"login": "kevin-zhonghao"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/allocator/NetworkKeyAllocator.java", "diffHunk": "@@ -25,8 +26,11 @@ public NetworkKeyAllocator(int firstKey, int lastKey) {\n     @Override\n     public Long allocate() throws Exception {\n         int freeBit = bitSet.nextClearBit(0);\n+//        if (freeBit < 0 || freeBit >= keyNum) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxMzg5OQ=="}, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjkzMjE4OnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/dao/GreRangeRepository.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTowMToxNVrOHCh8hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMzoxMDo1M1rOHEWOdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxNTM2NA==", "bodyText": "Recommend to put this check into a util method which could be used for other extended validation, not only checking keyNotEnoughReturnValue.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472415364", "createdAt": "2020-08-18T19:01:15Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/dao/GreRangeRepository.java", "diffHunk": "@@ -121,7 +122,9 @@ public synchronized Long allocateGreKey (String rangeId) throws Exception {\n             }\n \n             key = networkGRERange.allocateKey();\n-            cache.put(networkGRERange.getId(), networkGRERange);\n+            if (!key.equals(ConstantsConfig.keyNotEnoughReturnValue)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzODYzNQ==", "bodyText": "Yeah that's right ~ but we could make this change when we have other extended validation later, what do you think", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r474138635", "createdAt": "2020-08-20T16:58:47Z", "author": {"login": "kevin-zhonghao"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/dao/GreRangeRepository.java", "diffHunk": "@@ -121,7 +122,9 @@ public synchronized Long allocateGreKey (String rangeId) throws Exception {\n             }\n \n             key = networkGRERange.allocateKey();\n-            cache.put(networkGRERange.getId(), networkGRERange);\n+            if (!key.equals(ConstantsConfig.keyNotEnoughReturnValue)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxNTM2NA=="}, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMyMDUwMw==", "bodyText": "Sure.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r474320503", "createdAt": "2020-08-20T23:10:53Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/dao/GreRangeRepository.java", "diffHunk": "@@ -121,7 +122,9 @@ public synchronized Long allocateGreKey (String rangeId) throws Exception {\n             }\n \n             key = networkGRERange.allocateKey();\n-            cache.put(networkGRERange.getId(), networkGRERange);\n+            if (!key.equals(ConstantsConfig.keyNotEnoughReturnValue)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxNTM2NA=="}, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjkzMzA4OnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTowMTozN1rOHCh9KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTowMTozN1rOHCh9KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxNTUyOA==", "bodyText": "Remove the comment line.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472415528", "createdAt": "2020-08-18T19:01:37Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +107,46 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String partitionStringFormat = null;\n         Random ran = new Random();\n-        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n+//        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjk0NDg0OnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTowNTowOFrOHCiEOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDozNjoxMlrOHClvvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxNzMzNg==", "bodyText": "will the value of \"partition\" get changed for every round?\nAlso please use String method to convert to a String object.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472417336", "createdAt": "2020-08-18T19:05:08Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +107,46 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String partitionStringFormat = null;\n         Random ran = new Random();\n-        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n+//        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n \n         try {\n             NetworkVxlanType vxlan = new NetworkVxlanType();\n+            // the number of randomly allocating partition in vxlan range\n+            int round = 1;\n+\n+            while (round <= ConstantsConfig.MAX_ROUNDS) {\n+                // Randomly allocate a partition and check if the partition exist in db\n+                int partition = ran.nextInt(NetworkType.VXLAN_PARTITION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3NzYyOQ==", "bodyText": "Yes\uff0cI could use String.valueOf()", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472477629", "createdAt": "2020-08-18T20:36:12Z", "author": {"login": "kevin-zhonghao"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +107,46 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String partitionStringFormat = null;\n         Random ran = new Random();\n-        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n+//        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n \n         try {\n             NetworkVxlanType vxlan = new NetworkVxlanType();\n+            // the number of randomly allocating partition in vxlan range\n+            int round = 1;\n+\n+            while (round <= ConstantsConfig.MAX_ROUNDS) {\n+                // Randomly allocate a partition and check if the partition exist in db\n+                int partition = ran.nextInt(NetworkType.VXLAN_PARTITION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxNzMzNg=="}, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjk0NjMxOnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTowNTozMFrOHCiFFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDozNToxN1rOHCltvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxNzU1OA==", "bodyText": "Remove comment code.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472417558", "createdAt": "2020-08-18T19:05:30Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +107,46 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String partitionStringFormat = null;\n         Random ran = new Random();\n-        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n+//        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n \n         try {\n             NetworkVxlanType vxlan = new NetworkVxlanType();\n+            // the number of randomly allocating partition in vxlan range\n+            int round = 1;\n+\n+            while (round <= ConstantsConfig.MAX_ROUNDS) {\n+                // Randomly allocate a partition and check if the partition exist in db\n+                int partition = ran.nextInt(NetworkType.VXLAN_PARTITION);\n+                partitionStringFormat = partition + \"\";\n+                NetworkVxlanRange networkVxlanRange = this.vxlanRangeRepository.findItem(partitionStringFormat);\n+                if (networkVxlanRange == null) {\n+//                  rangeId = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3NzExNg==", "bodyText": "Sure", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472477116", "createdAt": "2020-08-18T20:35:17Z", "author": {"login": "kevin-zhonghao"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +107,46 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String partitionStringFormat = null;\n         Random ran = new Random();\n-        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n+//        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n \n         try {\n             NetworkVxlanType vxlan = new NetworkVxlanType();\n+            // the number of randomly allocating partition in vxlan range\n+            int round = 1;\n+\n+            while (round <= ConstantsConfig.MAX_ROUNDS) {\n+                // Randomly allocate a partition and check if the partition exist in db\n+                int partition = ran.nextInt(NetworkType.VXLAN_PARTITION);\n+                partitionStringFormat = partition + \"\";\n+                NetworkVxlanRange networkVxlanRange = this.vxlanRangeRepository.findItem(partitionStringFormat);\n+                if (networkVxlanRange == null) {\n+//                  rangeId = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxNzU1OA=="}, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjk1NDAwOnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTowODowOFrOHCiKJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNjo1Mzo0NVrOHEK8Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxODg1NQ==", "bodyText": "Recommended to return id if a creation is successful.\nSomething like\uff1a\npartitionStringFormat = this.vxlanRangeRepository.createRange(request);", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472418855", "createdAt": "2020-08-18T19:08:08Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +107,46 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String partitionStringFormat = null;\n         Random ran = new Random();\n-        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n+//        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n \n         try {\n             NetworkVxlanType vxlan = new NetworkVxlanType();\n+            // the number of randomly allocating partition in vxlan range\n+            int round = 1;\n+\n+            while (round <= ConstantsConfig.MAX_ROUNDS) {\n+                // Randomly allocate a partition and check if the partition exist in db\n+                int partition = ran.nextInt(NetworkType.VXLAN_PARTITION);\n+                partitionStringFormat = partition + \"\";\n+                NetworkVxlanRange networkVxlanRange = this.vxlanRangeRepository.findItem(partitionStringFormat);\n+                if (networkVxlanRange == null) {\n+//                  rangeId = UUID.randomUUID().toString();\n+                    int firstKey = partition * NetworkType.VXLAN_ONE_PARTITION_SIZE;\n+                    int lastKey = (partition + 1) * NetworkType.VXLAN_ONE_PARTITION_SIZE;\n+                    NetworkRangeRequest request = new NetworkRangeRequest(partitionStringFormat, networkType, partition, firstKey, lastKey);\n+                    this.vxlanRangeRepository.createRange(request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEzNTU3OA==", "bodyText": "Sure", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r474135578", "createdAt": "2020-08-20T16:53:45Z", "author": {"login": "kevin-zhonghao"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +107,46 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String partitionStringFormat = null;\n         Random ran = new Random();\n-        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n+//        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n \n         try {\n             NetworkVxlanType vxlan = new NetworkVxlanType();\n+            // the number of randomly allocating partition in vxlan range\n+            int round = 1;\n+\n+            while (round <= ConstantsConfig.MAX_ROUNDS) {\n+                // Randomly allocate a partition and check if the partition exist in db\n+                int partition = ran.nextInt(NetworkType.VXLAN_PARTITION);\n+                partitionStringFormat = partition + \"\";\n+                NetworkVxlanRange networkVxlanRange = this.vxlanRangeRepository.findItem(partitionStringFormat);\n+                if (networkVxlanRange == null) {\n+//                  rangeId = UUID.randomUUID().toString();\n+                    int firstKey = partition * NetworkType.VXLAN_ONE_PARTITION_SIZE;\n+                    int lastKey = (partition + 1) * NetworkType.VXLAN_ONE_PARTITION_SIZE;\n+                    NetworkRangeRequest request = new NetworkRangeRequest(partitionStringFormat, networkType, partition, firstKey, lastKey);\n+                    this.vxlanRangeRepository.createRange(request);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxODg1NQ=="}, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjk1NTQ4OnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTowODo0MlrOHCiLMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTowODo0MlrOHCiLMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxOTEyMA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472419120", "createdAt": "2020-08-18T19:08:42Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -104,43 +107,46 @@ public Long addVlanEntity(String vlanId, String networkType, String vpcId) throw\n      */\n     @Override\n     @DurationStatistics\n-    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId) throws Exception {\n+    public Long addVxlanEntity(String vxlanId, String networkType, String vpcId, Integer mtu) throws Exception {\n \n         Long key = null;\n-        String rangeId = null;\n+        String partitionStringFormat = null;\n         Random ran = new Random();\n-        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n+//        Map<Integer, String> partitionsAndRangeIds = new HashMap<>();\n \n         try {\n             NetworkVxlanType vxlan = new NetworkVxlanType();\n+            // the number of randomly allocating partition in vxlan range\n+            int round = 1;\n+\n+            while (round <= ConstantsConfig.MAX_ROUNDS) {\n+                // Randomly allocate a partition and check if the partition exist in db\n+                int partition = ran.nextInt(NetworkType.VXLAN_PARTITION);\n+                partitionStringFormat = partition + \"\";\n+                NetworkVxlanRange networkVxlanRange = this.vxlanRangeRepository.findItem(partitionStringFormat);\n+                if (networkVxlanRange == null) {\n+//                  rangeId = UUID.randomUUID().toString();\n+                    int firstKey = partition * NetworkType.VXLAN_ONE_PARTITION_SIZE;\n+                    int lastKey = (partition + 1) * NetworkType.VXLAN_ONE_PARTITION_SIZE;\n+                    NetworkRangeRequest request = new NetworkRangeRequest(partitionStringFormat, networkType, partition, firstKey, lastKey);\n+                    this.vxlanRangeRepository.createRange(request);\n+                } else {\n+                    partitionStringFormat = networkVxlanRange.getId();\n+                }\n \n-            // Find all partitions exist in db\n-            Map<String, NetworkVxlanRange> map = this.vxlanRangeRepository.findAllItems();\n-            for (Map.Entry<String, NetworkVxlanRange> entry : map.entrySet()) {\n-                int temp_partition = entry.getValue().getPartition();\n-                String temp_rangeId = entry.getValue().getId();\n-                partitionsAndRangeIds.put(temp_partition, temp_rangeId);\n-            }\n+                key = this.vxlanRangeRepository.allocateVxlanKey(partitionStringFormat);\n \n-            // Randomly allocate a partition and check if the partition exist in db\n-            int partition = ran.nextInt(NetworkType.VXLAN_PARTITION);\n-            if (!partitionsAndRangeIds.containsKey(partition)) {\n-                rangeId = UUID.randomUUID().toString();\n-                int firstKey = partition * NetworkType.VXLAN_ONE_PARTITION_SIZE;\n-                int lastKey = (partition + 1) * NetworkType.VXLAN_ONE_PARTITION_SIZE;\n-                NetworkRangeRequest request = new NetworkRangeRequest(rangeId, networkType, partition, firstKey, lastKey);\n-                this.vxlanRangeRepository.createRange(request);\n-            }else {\n-                rangeId = partitionsAndRangeIds.get(partition);\n+                if (!key.equals(ConstantsConfig.keyNotEnoughReturnValue)) {\n+                    break;\n+                }\n+                round ++;\n             }\n \n-            key = this.vxlanRangeRepository.allocateVxlanKey(rangeId);\n-\n-            if (vpcId != null) {\n-                VpcEntity vpc = this.vpcDatabaseService.getByVpcId(vpcId);\n-                Integer mtu = vpc.getMtu();\n-                vxlan.setMtu(mtu);\n+            if (key.equals(ConstantsConfig.keyNotEnoughReturnValue)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjk2MzI0OnYy", "diffSide": "RIGHT", "path": "services/vpc_manager/src/test/java/com/futurewei/alcor/vpcmanager/SegmentControllerTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOToxMTowMFrOHCiQNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMDozMjowM1rOHCljIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyMDQwNw==", "bodyText": "I think we will need one more test case to validate that if all ranges are allocated and the new codes could throw out the keyNotEnough exception.", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472420407", "createdAt": "2020-08-18T19:11:00Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/test/java/com/futurewei/alcor/vpcmanager/SegmentControllerTests.java", "diffHunk": "@@ -46,6 +48,9 @@\n     @MockBean\n     private SegmentDatabaseService segmentDatabaseService;\n \n+    @MockBean\n+    private VpcDatabaseService vpcDatabaseService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ3NDQwMA==", "bodyText": "got it", "url": "https://github.com/futurewei-cloud/alcor/pull/357#discussion_r472474400", "createdAt": "2020-08-18T20:32:03Z", "author": {"login": "kevin-zhonghao"}, "path": "services/vpc_manager/src/test/java/com/futurewei/alcor/vpcmanager/SegmentControllerTests.java", "diffHunk": "@@ -46,6 +48,9 @@\n     @MockBean\n     private SegmentDatabaseService segmentDatabaseService;\n \n+    @MockBean\n+    private VpcDatabaseService vpcDatabaseService;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyMDQwNw=="}, "originalCommit": {"oid": "0a5e3f48ed70d3aca06dfa7dd129d9c9229b0ff2"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4648, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}