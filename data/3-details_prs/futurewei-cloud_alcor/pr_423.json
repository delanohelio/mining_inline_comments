{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NjYwOTMw", "number": 423, "title": "[Data Plane Mgr] New Message Contract and Handling ", "bodyText": "This PR proposes new DPM message handling based on new neighbor schema.", "createdAt": "2020-10-16T07:53:06Z", "url": "https://github.com/futurewei-cloud/alcor/pull/423", "merged": true, "mergeCommit": {"oid": "53d10233e1a833870e357a006e6a2a1c9684dd35"}, "closed": true, "closedAt": "2020-10-29T08:29:07Z", "author": {"login": "Gzure"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTGtuLAFqTUxMDQ1NDA5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXN4yOgFqTUxOTQyODQ1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNDU0MDkz", "url": "https://github.com/futurewei-cloud/alcor/pull/423#pullrequestreview-510454093", "createdAt": "2020-10-16T13:12:00Z", "commit": {"oid": "ff6e04e5e7cbb52b168d287d66db4364815f9a2c"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzoxMjowMFrOHi8Mww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMzo1MDoxNVrOHi-5vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM5OTkzOQ==", "bodyText": "Which interface is in use? DataPlaneService or DataPlaneServiceNew :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/423#discussion_r506399939", "createdAt": "2020-10-16T13:12:00Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/DataPlaneServiceNew.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.dataplane.service;\n+\n+import com.futurewei.alcor.web.entity.dataplane.InternalDPMResultList;\n+import com.futurewei.alcor.web.entity.dataplane.refactor.NetworkConfiguration;\n+\n+public interface DataPlaneServiceNew {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff6e04e5e7cbb52b168d287d66db4364815f9a2c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQwMDU1OA==", "bodyText": "This is important interface? Can we add some brief comment?", "url": "https://github.com/futurewei-cloud/alcor/pull/423#discussion_r506400558", "createdAt": "2020-10-16T13:12:33Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/DataPlaneService.java", "diffHunk": "@@ -15,10 +15,11 @@\n */\n package com.futurewei.alcor.dataplane.service;\n \n+import com.futurewei.alcor.web.entity.dataplane.InternalDPMResultList;\n import com.futurewei.alcor.web.entity.dataplane.NetworkConfiguration;\n \n public interface DataPlaneService {\n-    NetworkConfiguration createNetworkConfiguration(NetworkConfiguration networkConfiguration) throws Exception;\n-    NetworkConfiguration updateNetworkConfiguration(NetworkConfiguration networkConfiguration) throws Exception;\n-    NetworkConfiguration deleteNetworkConfiguration(NetworkConfiguration networkConfiguration) throws Exception;\n+    InternalDPMResultList createNetworkConfiguration(NetworkConfiguration networkConfiguration) throws Exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff6e04e5e7cbb52b168d287d66db4364815f9a2c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQwMjEwOQ==", "bodyText": "refactor => v2", "url": "https://github.com/futurewei-cloud/alcor/pull/423#discussion_r506402109", "createdAt": "2020-10-16T13:14:20Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/dataplane/refactor/NetworkConfiguration.java", "diffHunk": "@@ -0,0 +1,167 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+        http://www.apache.org/licenses/LICENSE-2.0\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.web.entity.dataplane.refactor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff6e04e5e7cbb52b168d287d66db4364815f9a2c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQwMzc2NQ==", "bodyText": "routerTable => routerInfo", "url": "https://github.com/futurewei-cloud/alcor/pull/423#discussion_r506403765", "createdAt": "2020-10-16T13:15:34Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/dataplane/refactor/NetworkConfiguration.java", "diffHunk": "@@ -0,0 +1,167 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+        http://www.apache.org/licenses/LICENSE-2.0\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.web.entity.dataplane.refactor;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.futurewei.alcor.schema.Common.OperationType;\n+import com.futurewei.alcor.schema.Common.ResourceType;\n+import com.futurewei.alcor.web.entity.dataplane.InternalPortEntity;\n+import com.futurewei.alcor.web.entity.dataplane.InternalSubnetEntity;\n+import com.futurewei.alcor.web.entity.dataplane.NeighborEntry;\n+import com.futurewei.alcor.web.entity.dataplane.NeighborInfo;\n+import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroup;\n+import com.futurewei.alcor.web.entity.vpc.VpcEntity;\n+import lombok.Data;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Data\n+public class NetworkConfiguration {\n+\n+  private ResourceType rsType;\n+  private OperationType opType;\n+\n+  @JsonProperty(\"ports_internal\")\n+  private List<InternalPortEntity> portEntities;\n+\n+  @JsonProperty(\"vpcs_internal\")\n+  private List<VpcEntity> vpcs;\n+\n+  @JsonProperty(\"subnets_internal\")\n+  private List<InternalSubnetEntity> subnets;\n+\n+  @JsonProperty(\"security_groups_internal\")\n+  private List<SecurityGroup> securityGroups;\n+\n+  @JsonProperty(\"neighbor_info\")\n+  private Map<String, NeighborInfo> neighborInfos;\n+\n+  @JsonProperty(\"neighbor_table\")\n+  private Map<String, List<NeighborEntry>> neighborTable;\n+\n+  @JsonProperty(\"routers_internal\")\n+  private List<InternalRouterInfo> internalRouterInfos;\n+\n+  @Override\n+  public String toString() {\n+    return \"NetworkConfiguration{\" + \"rsType=\" + rsType + \", opType=\" + opType + \", portEntities=\" + portEntities + \", vpcs=\" + vpcs + \", subnets=\" + subnets + \", securityGroups=\" + securityGroups + \", neighborInfos=\" + neighborInfos + \", neighborTable=\" + neighborTable + \", routerTable=\" + internalRouterInfos + '}';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff6e04e5e7cbb52b168d287d66db4364815f9a2c"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxMzIzNg==", "bodyText": "As discussed in the open-source meeting, let us use Alcor Thread pool if possible. Please refer to PR #424 for details.", "url": "https://github.com/futurewei-cloud/alcor/pull/423#discussion_r506413236", "createdAt": "2020-10-16T13:22:58Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/client/grpc/DataPlaneClientImpl.java", "diffHunk": "@@ -19,44 +19,97 @@\n import com.futurewei.alcor.dataplane.config.grpc.GoalStateProvisionerClient;\n import com.futurewei.alcor.dataplane.entity.HostGoalState;\n import com.futurewei.alcor.schema.Goalstate;\n+import com.futurewei.alcor.schema.Goalstateprovisioner;\n+import io.netty.util.concurrent.DefaultThreadFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.stereotype.Component;\n \n+import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.*;\n+import java.util.stream.Collectors;\n \n @Component\n public class DataPlaneClientImpl implements DataPlaneClient {\n \n     private int grpcPort;\n \n+    private static ExecutorService executor = new ThreadPoolExecutor(100, 200, 50, TimeUnit.SECONDS,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff6e04e5e7cbb52b168d287d66db4364815f9a2c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQ0NDIyMg==", "bodyText": "Could we have a brief comment here to explain each method, as well as the map (e.g., what the key is)?", "url": "https://github.com/futurewei-cloud/alcor/pull/423#discussion_r506444222", "createdAt": "2020-10-16T13:50:15Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/client/DataPlaneClient.java", "diffHunk": "@@ -17,14 +17,23 @@\n \n import com.futurewei.alcor.dataplane.entity.HostGoalState;\n import com.futurewei.alcor.schema.Goalstate.GoalState;\n+import com.futurewei.alcor.schema.Goalstateprovisioner;\n import org.springframework.stereotype.Component;\n \n import java.util.List;\n+import java.util.Map;\n \n @Component\n public interface DataPlaneClient {\n-    void createGoalState(GoalState goalState, String hostIp) throws Exception;\n-    void createGoalState(List<HostGoalState> hostGoalStates) throws Exception;\n-    void updateGoalState(List<HostGoalState> hostGoalStates) throws Exception;\n-    void deleteGoalState(List<HostGoalState> hostGoalStates) throws Exception;\n+    Map<String, List<Goalstateprovisioner.GoalStateOperationReply.GoalStateOperationStatus>>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff6e04e5e7cbb52b168d287d66db4364815f9a2c"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMzg4NDE1", "url": "https://github.com/futurewei-cloud/alcor/pull/423#pullrequestreview-512388415", "createdAt": "2020-10-20T07:05:01Z", "commit": {"oid": "ff6e04e5e7cbb52b168d287d66db4364815f9a2c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzowNTowMVrOHktgDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzowNTowMVrOHktgDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI1NjI3MA==", "bodyText": "Well. Which kinds of features are available in original thread pool but not in Alcor thread pool?\nMeanwhile, we plan to make this more than test code :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/423#discussion_r508256270", "createdAt": "2020-10-20T07:05:01Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/client/grpc/DataPlaneClientImpl.java", "diffHunk": "@@ -19,44 +19,97 @@\n import com.futurewei.alcor.dataplane.config.grpc.GoalStateProvisionerClient;\n import com.futurewei.alcor.dataplane.entity.HostGoalState;\n import com.futurewei.alcor.schema.Goalstate;\n+import com.futurewei.alcor.schema.Goalstateprovisioner;\n+import io.netty.util.concurrent.DefaultThreadFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.stereotype.Component;\n \n+import java.util.ArrayList;\n+import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.*;\n+import java.util.stream.Collectors;\n \n @Component\n public class DataPlaneClientImpl implements DataPlaneClient {\n \n     private int grpcPort;\n \n+    private static ExecutorService executor = new ThreadPoolExecutor(100, 200, 50, TimeUnit.SECONDS,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjQxMzIzNg=="}, "originalCommit": {"oid": "ff6e04e5e7cbb52b168d287d66db4364815f9a2c"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "168645527ff7a864a767791b41e5a671318f8a55", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/168645527ff7a864a767791b41e5a671318f8a55", "committedDate": "2020-10-22T08:26:59Z", "message": "add grpc async send goalstate\nexport grpc thread pool"}, "afterCommit": {"oid": "c06d4fbf635884c1fd7c34aa919aec30ca61361e", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c06d4fbf635884c1fd7c34aa919aec30ca61361e", "committedDate": "2020-10-22T08:38:54Z", "message": "add grpc async send goalstate\nexport grpc thread pool"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NTE1MDU2", "url": "https://github.com/futurewei-cloud/alcor/pull/423#pullrequestreview-514515056", "createdAt": "2020-10-22T09:08:23Z", "commit": {"oid": "c06d4fbf635884c1fd7c34aa919aec30ca61361e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwOTowODoyM1rOHmYD1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwOToxMDoyOVrOHmYJWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDAwMjEzMg==", "bodyText": "So DPM thread pool has a name :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/423#discussion_r510002132", "createdAt": "2020-10-22T09:08:23Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/resources/application.properties", "diffHunk": "@@ -3,7 +3,13 @@ server.port=9010\n dataplane.grpc.port = 50001\n dataplane.isovs=true\n \n+grpc.min-threads = 100\n+grpc.max-threads = 200\n+grpc.threads-pool-name = grpc-thread-pool", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c06d4fbf635884c1fd7c34aa919aec30ca61361e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDAwMzU0NQ==", "bodyText": "In v2 NetworkConfiguration, could we get rid of rsType and OpType, which are supposed to be DPM internal and not part of the contract.", "url": "https://github.com/futurewei-cloud/alcor/pull/423#discussion_r510003545", "createdAt": "2020-10-22T09:10:29Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/dataplane/refactor/NetworkConfiguration.java", "diffHunk": "@@ -0,0 +1,167 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+        http://www.apache.org/licenses/LICENSE-2.0\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.web.entity.dataplane.refactor;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.futurewei.alcor.schema.Common.OperationType;\n+import com.futurewei.alcor.schema.Common.ResourceType;\n+import com.futurewei.alcor.web.entity.dataplane.InternalPortEntity;\n+import com.futurewei.alcor.web.entity.dataplane.InternalSubnetEntity;\n+import com.futurewei.alcor.web.entity.dataplane.NeighborEntry;\n+import com.futurewei.alcor.web.entity.dataplane.NeighborInfo;\n+import com.futurewei.alcor.web.entity.route.InternalRouterInfo;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroup;\n+import com.futurewei.alcor.web.entity.vpc.VpcEntity;\n+import lombok.Data;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Data\n+public class NetworkConfiguration {\n+\n+  private ResourceType rsType;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c06d4fbf635884c1fd7c34aa919aec30ca61361e"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NTI0NDU2", "url": "https://github.com/futurewei-cloud/alcor/pull/423#pullrequestreview-514524456", "createdAt": "2020-10-22T09:19:16Z", "commit": {"oid": "c06d4fbf635884c1fd7c34aa919aec30ca61361e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwOToxOToxNlrOHmYgaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwOToxOToxNlrOHmYgaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDAwOTQ0OQ==", "bodyText": "Looks like supporting thread pool is something missing in our Alcor async executor. Could you evaluate with @chenpiaoping to see what need to add into our own executor.\nIdeally we would like to replace it with our own implementation. I understand it may take some time but we will need to know what the gap is so that we could plan for it.", "url": "https://github.com/futurewei-cloud/alcor/pull/423#discussion_r510009449", "createdAt": "2020-10-22T09:19:16Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/client/grpc/DataPlaneClientImpl.java", "diffHunk": "@@ -16,47 +16,182 @@\n package com.futurewei.alcor.dataplane.client.grpc;\n \n import com.futurewei.alcor.dataplane.client.DataPlaneClient;\n+import com.futurewei.alcor.dataplane.config.Config;\n import com.futurewei.alcor.dataplane.config.grpc.GoalStateProvisionerClient;\n import com.futurewei.alcor.dataplane.entity.HostGoalState;\n+import com.futurewei.alcor.schema.GoalStateProvisionerGrpc;\n import com.futurewei.alcor.schema.Goalstate;\n+import com.futurewei.alcor.schema.Goalstateprovisioner;\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n+import io.grpc.stub.StreamObserver;\n+import io.netty.util.concurrent.DefaultThreadFactory;\n+import org.apache.catalina.Manager;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Value;\n import org.springframework.stereotype.Component;\n \n-import java.util.List;\n+import java.util.*;\n+import java.util.concurrent.*;\n+import java.util.stream.Collectors;\n \n @Component\n public class DataPlaneClientImpl implements DataPlaneClient {\n \n+    private static final Logger LOG = LoggerFactory.getLogger(DataPlaneClientImpl.class);\n+\n     private int grpcPort;\n \n     @Autowired\n-    public DataPlaneClientImpl(@Value(\"${dataplane.grpc.port}\")int grpcPort) {\n-        this.grpcPort = grpcPort;\n+    private Config globalConfig;\n+\n+    private final ExecutorService executor;\n+\n+    @Autowired\n+    public DataPlaneClientImpl() {\n+        this.grpcPort = globalConfig.port;\n+        executor = new ThreadPoolExecutor(globalConfig.grpcMinThreads,\n+                globalConfig.grpcMaxThreads, 50, TimeUnit.SECONDS,\n+                new LinkedBlockingDeque<>(),\n+                new DefaultThreadFactory(globalConfig.grpThreadsName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c06d4fbf635884c1fd7c34aa919aec30ca61361e"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1395b6c477c060489989e357e1f4b851bcddf50", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d1395b6c477c060489989e357e1f4b851bcddf50", "committedDate": "2020-10-29T06:07:50Z", "message": "add new dpm msg handle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84ac7e5a3d09fa70b45d22f719bbbc7a7e5f10db", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/84ac7e5a3d09fa70b45d22f719bbbc7a7e5f10db", "committedDate": "2020-10-29T06:07:51Z", "message": "add new dpm msg handle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "315f1699a19c6c519b9932cd88a8d209c4f67790", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/315f1699a19c6c519b9932cd88a8d209c4f67790", "committedDate": "2020-10-29T06:07:51Z", "message": "add grpc async send goalstate\nexport grpc thread pool"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "378291c07cd21bcd3b5a0e596c2ea3b8f43a40f1", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/378291c07cd21bcd3b5a0e596c2ea3b8f43a40f1", "committedDate": "2020-10-29T06:07:51Z", "message": "fix ut fail"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1146ba257612c780944483b20c625d3c3008e903", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/1146ba257612c780944483b20c625d3c3008e903", "committedDate": "2020-10-29T06:07:51Z", "message": "rename refactor to v2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46c4b87869c5c641ce931e361054d0c12756bd5c", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/46c4b87869c5c641ce931e361054d0c12756bd5c", "committedDate": "2020-10-23T02:54:03Z", "message": "fix ut fail"}, "afterCommit": {"oid": "1146ba257612c780944483b20c625d3c3008e903", "author": {"user": {"login": "Gzure", "name": "gure"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/1146ba257612c780944483b20c625d3c3008e903", "committedDate": "2020-10-29T06:07:51Z", "message": "rename refactor to v2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NDA0NTcy", "url": "https://github.com/futurewei-cloud/alcor/pull/423#pullrequestreview-519404572", "createdAt": "2020-10-29T07:50:57Z", "commit": {"oid": "1146ba257612c780944483b20c625d3c3008e903"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NDI4NDUw", "url": "https://github.com/futurewei-cloud/alcor/pull/423#pullrequestreview-519428450", "createdAt": "2020-10-29T08:28:17Z", "commit": {"oid": "1146ba257612c780944483b20c625d3c3008e903"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1991, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}