{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMzE5MjY3", "number": 458, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNToxMDoxM1rOE0qQrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNToxMzowNFrOE0qSWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjUzODA3OnYy", "diffSide": "RIGHT", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/GoalStateManager.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNToxMDoxM1rOHsgcIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwNzoyNDowM1rOHt2UkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQzMDg4MQ==", "bodyText": "I think we could revert the change as it is related to PR #418 .", "url": "https://github.com/futurewei-cloud/alcor/pull/458#discussion_r516430881", "createdAt": "2020-11-03T05:10:13Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/GoalStateManager.java", "diffHunk": "@@ -46,418 +46,418 @@\n public class GoalStateManager {\n     public static final int FORMAT_REVISION_NUMBER = 1;\n     @Autowired private GoalStateService goalStateService;\n-  private static final Logger LOG = LoggerFactory.getLogger();\n-\n-  private void printNetworkConfiguration(NetworkConfiguration networkConfiguration)\n-  {\n-    LOG.log(Level.INFO,\n-            \"### networkConf str: \"+networkConfiguration.toString());\n-    ExclusionStrategy myExclusionStrategy =\n-            new ExclusionStrategy() {\n-              @Override\n-              public boolean shouldSkipField(FieldAttributes fa) {\n-                return fa.getName().equals(\"tenantId\");\n-              }\n-\n-              @Override\n-              public boolean shouldSkipClass(Class<?> clazz) {\n-                return false;\n-              }\n-            };\n-    Gson gson = new GsonBuilder().setExclusionStrategies(myExclusionStrategy).create();\n-    LOG.log(Level.INFO,\"###############\");\n-    LOG.log(Level.INFO,gson.toJson(networkConfiguration));\n-  }\n-  /**\n-   * transform client of dpm msg to aca protobuf format\n-   *\n-   * @param networkConfiguration  msg to be transformmed\n-   * @return Map<String, Goalstate.GoalState>\n-   * @throws RuntimeException Various exceptions that may occur during the send process\n-   */\n-  public Map<String, Goalstate.GoalState> transformNorthToSouth(\n-      NetworkConfiguration networkConfiguration) throws RuntimeException {\n-    // print entry input\n-    printNetworkConfiguration(networkConfiguration);\n-\n-    Map<String, Set<String>> portsInSameSubnetMap = new HashMap<>();\n-\n-    Map<String, Set<NeighborInfo>> neighborInfoInSameSubenetMap = new HashMap<>();\n-\n-    InternalPortEntity[] portStatesArr =\n-        networkConfiguration.getPortEntities().toArray(new InternalPortEntity[0]);\n-    InternalSubnetEntity[] subnetArr =\n-        networkConfiguration.getSubnets().toArray(new InternalSubnetEntity[0]);\n-    com.futurewei.alcor.web.entity.vpc.VpcEntity[] vpcArr =\n-        networkConfiguration.getVpcs().toArray(new com.futurewei.alcor.web.entity.vpc.VpcEntity[0]);\n-\n-    // TODO need to v2 subnet and vpc part when logic is\n-    //  clear and integration done\n-    Map<String, List<InternalPortEntity>> mapGroupedByHostIp = new HashMap();\n-    Map<String, InternalSubnetEntity> subnetMap = new HashMap<>();\n-    Map<String, InternalPortEntity> portMap = new HashMap<>();\n-    Map<String, com.futurewei.alcor.web.entity.vpc.VpcEntity> vpcMap = new HashMap<>();\n-    // construct map from list\n-    for (InternalSubnetEntity s : subnetArr) {\n-      subnetMap.put(s.getId(), s);\n+    private static final Logger LOG = LoggerFactory.getLogger();\n+\n+    private void printNetworkConfiguration(NetworkConfiguration networkConfiguration)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecab50a6787ed4330f3562c4c424565d5439379d"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg1NDM3NQ==", "bodyText": "Sure", "url": "https://github.com/futurewei-cloud/alcor/pull/458#discussion_r516854375", "createdAt": "2020-11-03T17:55:55Z", "author": {"login": "kevin-zhonghao"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/GoalStateManager.java", "diffHunk": "@@ -46,418 +46,418 @@\n public class GoalStateManager {\n     public static final int FORMAT_REVISION_NUMBER = 1;\n     @Autowired private GoalStateService goalStateService;\n-  private static final Logger LOG = LoggerFactory.getLogger();\n-\n-  private void printNetworkConfiguration(NetworkConfiguration networkConfiguration)\n-  {\n-    LOG.log(Level.INFO,\n-            \"### networkConf str: \"+networkConfiguration.toString());\n-    ExclusionStrategy myExclusionStrategy =\n-            new ExclusionStrategy() {\n-              @Override\n-              public boolean shouldSkipField(FieldAttributes fa) {\n-                return fa.getName().equals(\"tenantId\");\n-              }\n-\n-              @Override\n-              public boolean shouldSkipClass(Class<?> clazz) {\n-                return false;\n-              }\n-            };\n-    Gson gson = new GsonBuilder().setExclusionStrategies(myExclusionStrategy).create();\n-    LOG.log(Level.INFO,\"###############\");\n-    LOG.log(Level.INFO,gson.toJson(networkConfiguration));\n-  }\n-  /**\n-   * transform client of dpm msg to aca protobuf format\n-   *\n-   * @param networkConfiguration  msg to be transformmed\n-   * @return Map<String, Goalstate.GoalState>\n-   * @throws RuntimeException Various exceptions that may occur during the send process\n-   */\n-  public Map<String, Goalstate.GoalState> transformNorthToSouth(\n-      NetworkConfiguration networkConfiguration) throws RuntimeException {\n-    // print entry input\n-    printNetworkConfiguration(networkConfiguration);\n-\n-    Map<String, Set<String>> portsInSameSubnetMap = new HashMap<>();\n-\n-    Map<String, Set<NeighborInfo>> neighborInfoInSameSubenetMap = new HashMap<>();\n-\n-    InternalPortEntity[] portStatesArr =\n-        networkConfiguration.getPortEntities().toArray(new InternalPortEntity[0]);\n-    InternalSubnetEntity[] subnetArr =\n-        networkConfiguration.getSubnets().toArray(new InternalSubnetEntity[0]);\n-    com.futurewei.alcor.web.entity.vpc.VpcEntity[] vpcArr =\n-        networkConfiguration.getVpcs().toArray(new com.futurewei.alcor.web.entity.vpc.VpcEntity[0]);\n-\n-    // TODO need to v2 subnet and vpc part when logic is\n-    //  clear and integration done\n-    Map<String, List<InternalPortEntity>> mapGroupedByHostIp = new HashMap();\n-    Map<String, InternalSubnetEntity> subnetMap = new HashMap<>();\n-    Map<String, InternalPortEntity> portMap = new HashMap<>();\n-    Map<String, com.futurewei.alcor.web.entity.vpc.VpcEntity> vpcMap = new HashMap<>();\n-    // construct map from list\n-    for (InternalSubnetEntity s : subnetArr) {\n-      subnetMap.put(s.getId(), s);\n+    private static final Logger LOG = LoggerFactory.getLogger();\n+\n+    private void printNetworkConfiguration(NetworkConfiguration networkConfiguration)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQzMDg4MQ=="}, "originalCommit": {"oid": "ecab50a6787ed4330f3562c4c424565d5439379d"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzgzNzk2OQ==", "bodyText": "I think we could revert the change as it is related to PR #418 .\n\n@kevin-zhonghao I think this PR still contains payload from PR #418, which should not be included in this PR.", "url": "https://github.com/futurewei-cloud/alcor/pull/458#discussion_r517837969", "createdAt": "2020-11-05T07:24:03Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/utils/GoalStateManager.java", "diffHunk": "@@ -46,418 +46,418 @@\n public class GoalStateManager {\n     public static final int FORMAT_REVISION_NUMBER = 1;\n     @Autowired private GoalStateService goalStateService;\n-  private static final Logger LOG = LoggerFactory.getLogger();\n-\n-  private void printNetworkConfiguration(NetworkConfiguration networkConfiguration)\n-  {\n-    LOG.log(Level.INFO,\n-            \"### networkConf str: \"+networkConfiguration.toString());\n-    ExclusionStrategy myExclusionStrategy =\n-            new ExclusionStrategy() {\n-              @Override\n-              public boolean shouldSkipField(FieldAttributes fa) {\n-                return fa.getName().equals(\"tenantId\");\n-              }\n-\n-              @Override\n-              public boolean shouldSkipClass(Class<?> clazz) {\n-                return false;\n-              }\n-            };\n-    Gson gson = new GsonBuilder().setExclusionStrategies(myExclusionStrategy).create();\n-    LOG.log(Level.INFO,\"###############\");\n-    LOG.log(Level.INFO,gson.toJson(networkConfiguration));\n-  }\n-  /**\n-   * transform client of dpm msg to aca protobuf format\n-   *\n-   * @param networkConfiguration  msg to be transformmed\n-   * @return Map<String, Goalstate.GoalState>\n-   * @throws RuntimeException Various exceptions that may occur during the send process\n-   */\n-  public Map<String, Goalstate.GoalState> transformNorthToSouth(\n-      NetworkConfiguration networkConfiguration) throws RuntimeException {\n-    // print entry input\n-    printNetworkConfiguration(networkConfiguration);\n-\n-    Map<String, Set<String>> portsInSameSubnetMap = new HashMap<>();\n-\n-    Map<String, Set<NeighborInfo>> neighborInfoInSameSubenetMap = new HashMap<>();\n-\n-    InternalPortEntity[] portStatesArr =\n-        networkConfiguration.getPortEntities().toArray(new InternalPortEntity[0]);\n-    InternalSubnetEntity[] subnetArr =\n-        networkConfiguration.getSubnets().toArray(new InternalSubnetEntity[0]);\n-    com.futurewei.alcor.web.entity.vpc.VpcEntity[] vpcArr =\n-        networkConfiguration.getVpcs().toArray(new com.futurewei.alcor.web.entity.vpc.VpcEntity[0]);\n-\n-    // TODO need to v2 subnet and vpc part when logic is\n-    //  clear and integration done\n-    Map<String, List<InternalPortEntity>> mapGroupedByHostIp = new HashMap();\n-    Map<String, InternalSubnetEntity> subnetMap = new HashMap<>();\n-    Map<String, InternalPortEntity> portMap = new HashMap<>();\n-    Map<String, com.futurewei.alcor.web.entity.vpc.VpcEntity> vpcMap = new HashMap<>();\n-    // construct map from list\n-    for (InternalSubnetEntity s : subnetArr) {\n-      subnetMap.put(s.getId(), s);\n+    private static final Logger LOG = LoggerFactory.getLogger();\n+\n+    private void printNetworkConfiguration(NetworkConfiguration networkConfiguration)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQzMDg4MQ=="}, "originalCommit": {"oid": "ecab50a6787ed4330f3562c4c424565d5439379d"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjUzODc0OnYy", "diffSide": "RIGHT", "path": "services/data_plane_manager/src/test/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNToxMDo0OFrOHsgckA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMDozMDozMlrOHs_Y6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQzMDk5Mg==", "bodyText": "Let us remove if not needed.", "url": "https://github.com/futurewei-cloud/alcor/pull/458#discussion_r516430992", "createdAt": "2020-11-03T05:10:48Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/test/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerUtil.java", "diffHunk": "@@ -355,31 +416,38 @@ private InternalSubnetEntity getInternalSubnetEntity(NetworkConfiguration networ\n      * @throws Exception\n      */\n     private void buildSubnetState(NetworkConfiguration networkConfig, Goalstate.GoalState.Builder goalStateBuilder) throws Exception {\n-        List<Port.PortState> portStates = goalStateBuilder.getPortStatesList();\n-        if (portStates == null || portStates.size() == 0) {\n+        List<InternalSubnetEntity> subnets = networkConfig.getSubnets();\n+        if (subnets == null || subnets.size() == 0) {\n             return;\n         }\n-\n-        List<InternalSubnetEntity> subnetEntities = new ArrayList<>();\n-        List<String> subnetIdsInFixedIP = new ArrayList<>();\n-        for (Port.PortState portState: portStates) {\n-            for (Port.PortConfiguration.FixedIp fixedIp: portState.getConfiguration().getFixedIpsList()) {\n-                if (!subnetIdsInFixedIP.contains(fixedIp.getSubnetId())) {\n-                    InternalSubnetEntity internalSubnetEntity = getInternalSubnetEntity(\n-                            networkConfig, fixedIp.getSubnetId());\n-                    subnetEntities.add(internalSubnetEntity);\n-                    subnetIdsInFixedIP.add(fixedIp.getSubnetId());\n-                }\n-            }\n-        }\n-\n-        for (InternalSubnetEntity subnetEntity: subnetEntities) {\n+//        List<Port.PortState> portStates = goalStateBuilder.getPortStatesList();\n+//        if (portStates == null || portStates.size() == 0) {\n+//            return;\n+//        }\n+//\n+//        List<InternalSubnetEntity> subnetEntities = new ArrayList<>();\n+//        List<String> subnetIdsInFixedIP = new ArrayList<>();\n+//        for (Port.PortState portState: portStates) {\n+//            for (Port.PortConfiguration.FixedIp fixedIp: portState.getConfiguration().getFixedIpsList()) {\n+//                if (!subnetIdsInFixedIP.contains(fixedIp.getSubnetId())) {\n+//                    InternalSubnetEntity internalSubnetEntity = getInternalSubnetEntity(\n+//                            networkConfig, fixedIp.getSubnetId());\n+//                    subnetEntities.add(internalSubnetEntity);\n+//                    subnetIdsInFixedIP.add(fixedIp.getSubnetId());\n+//                }\n+//            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecab50a6787ed4330f3562c4c424565d5439379d"}, "originalPosition": 203}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkzNzk2MA==", "bodyText": "Sure", "url": "https://github.com/futurewei-cloud/alcor/pull/458#discussion_r516937960", "createdAt": "2020-11-03T20:30:32Z", "author": {"login": "kevin-zhonghao"}, "path": "services/data_plane_manager/src/test/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerUtil.java", "diffHunk": "@@ -355,31 +416,38 @@ private InternalSubnetEntity getInternalSubnetEntity(NetworkConfiguration networ\n      * @throws Exception\n      */\n     private void buildSubnetState(NetworkConfiguration networkConfig, Goalstate.GoalState.Builder goalStateBuilder) throws Exception {\n-        List<Port.PortState> portStates = goalStateBuilder.getPortStatesList();\n-        if (portStates == null || portStates.size() == 0) {\n+        List<InternalSubnetEntity> subnets = networkConfig.getSubnets();\n+        if (subnets == null || subnets.size() == 0) {\n             return;\n         }\n-\n-        List<InternalSubnetEntity> subnetEntities = new ArrayList<>();\n-        List<String> subnetIdsInFixedIP = new ArrayList<>();\n-        for (Port.PortState portState: portStates) {\n-            for (Port.PortConfiguration.FixedIp fixedIp: portState.getConfiguration().getFixedIpsList()) {\n-                if (!subnetIdsInFixedIP.contains(fixedIp.getSubnetId())) {\n-                    InternalSubnetEntity internalSubnetEntity = getInternalSubnetEntity(\n-                            networkConfig, fixedIp.getSubnetId());\n-                    subnetEntities.add(internalSubnetEntity);\n-                    subnetIdsInFixedIP.add(fixedIp.getSubnetId());\n-                }\n-            }\n-        }\n-\n-        for (InternalSubnetEntity subnetEntity: subnetEntities) {\n+//        List<Port.PortState> portStates = goalStateBuilder.getPortStatesList();\n+//        if (portStates == null || portStates.size() == 0) {\n+//            return;\n+//        }\n+//\n+//        List<InternalSubnetEntity> subnetEntities = new ArrayList<>();\n+//        List<String> subnetIdsInFixedIP = new ArrayList<>();\n+//        for (Port.PortState portState: portStates) {\n+//            for (Port.PortConfiguration.FixedIp fixedIp: portState.getConfiguration().getFixedIpsList()) {\n+//                if (!subnetIdsInFixedIP.contains(fixedIp.getSubnetId())) {\n+//                    InternalSubnetEntity internalSubnetEntity = getInternalSubnetEntity(\n+//                            networkConfig, fixedIp.getSubnetId());\n+//                    subnetEntities.add(internalSubnetEntity);\n+//                    subnetIdsInFixedIP.add(fixedIp.getSubnetId());\n+//                }\n+//            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQzMDk5Mg=="}, "originalCommit": {"oid": "ecab50a6787ed4330f3562c4c424565d5439379d"}, "originalPosition": 203}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjU0MjMyOnYy", "diffSide": "RIGHT", "path": "services/data_plane_manager/src/test/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNToxMzowNFrOHsgefQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMDozMDo1MFrOHs_Zeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQzMTQ4NQ==", "bodyText": "@kevin-zhonghao As this change is a pretty big change, could you please generate a few input and output using the UT framework? Let us review them together tomorrow.", "url": "https://github.com/futurewei-cloud/alcor/pull/458#discussion_r516431485", "createdAt": "2020-11-03T05:13:04Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/test/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerUtil.java", "diffHunk": "@@ -79,21 +120,35 @@ public NetworkConfiguration autoGenerateUTsInput(int operationType,\n             InternalRouterInfo routerInfo = new InternalRouterInfo();\n             InternalRouterConfiguration internalRouterConfiguration = new InternalRouterConfiguration();\n             List<InternalSubnetRoutingTable> subnet_routing_tables = new ArrayList<>();\n+            for (int i = 0; i < subnetNum; i ++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecab50a6787ed4330f3562c4c424565d5439379d"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkzODEwNg==", "bodyText": "NP", "url": "https://github.com/futurewei-cloud/alcor/pull/458#discussion_r516938106", "createdAt": "2020-11-03T20:30:50Z", "author": {"login": "kevin-zhonghao"}, "path": "services/data_plane_manager/src/test/java/com/futurewei/alcor/dataplane/utils/DataPlaneManagerUtil.java", "diffHunk": "@@ -79,21 +120,35 @@ public NetworkConfiguration autoGenerateUTsInput(int operationType,\n             InternalRouterInfo routerInfo = new InternalRouterInfo();\n             InternalRouterConfiguration internalRouterConfiguration = new InternalRouterConfiguration();\n             List<InternalSubnetRoutingTable> subnet_routing_tables = new ArrayList<>();\n+            for (int i = 0; i < subnetNum; i ++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQzMTQ4NQ=="}, "originalCommit": {"oid": "ecab50a6787ed4330f3562c4c424565d5439379d"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4449, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}