{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NjY0NDA0", "number": 298, "title": "[Elastic IP Manager] Support EIP and Port Association", "bodyText": "Implement about associating an elastic ip with a port", "createdAt": "2020-07-15T18:44:43Z", "url": "https://github.com/futurewei-cloud/alcor/pull/298", "merged": true, "mergeCommit": {"oid": "beb092674e0e60681f115d326c9e92440c55cf43"}, "closed": true, "closedAt": "2020-07-22T06:14:41Z", "author": {"login": "Eric-Yuan"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1PAZugH2gAyNDQ5NjY0NDA0Ojg0YWYxMDc5YzM1ZGFmMWJiMTYzMTlhMzUzNTMwMGVlMDY3MjgwZjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3UeQcAFqTQ1MzAxNDMyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "84af1079c35daf1bb16319a3535300ee067280f3", "author": {"user": {"login": "Eric-Yuan", "name": "Wei Yuan"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/84af1079c35daf1bb16319a3535300ee067280f3", "committedDate": "2020-07-15T18:33:05Z", "message": "upload codes about associating eip with a port"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38dc779c99f1453b575dd60da732aec78a00b7a2", "author": {"user": {"login": "Eric-Yuan", "name": "Wei Yuan"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/38dc779c99f1453b575dd60da732aec78a00b7a2", "committedDate": "2020-07-15T18:40:54Z", "message": "upload codes about associating eip with a port"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b0ede336c43129b7c8c54002c14df4c7cebee06", "author": {"user": {"login": "Eric-Yuan", "name": "Wei Yuan"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/5b0ede336c43129b7c8c54002c14df4c7cebee06", "committedDate": "2020-07-15T18:41:57Z", "message": "Merge branch 'elasticip_associate_port' of https://github.com/Eric-Yuan/alcor into elasticip_associate_port"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a0c894366d5aee633aab5cd3a83458486d819d6", "author": {"user": {"login": "Eric-Yuan", "name": "Wei Yuan"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/1a0c894366d5aee633aab5cd3a83458486d819d6", "committedDate": "2020-07-15T18:53:10Z", "message": "upload codes about associating eip with a port"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6bca7ddfe9b13076aef4dde87e7a0956bac0eaf", "author": {"user": {"login": "Eric-Yuan", "name": "Wei Yuan"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/b6bca7ddfe9b13076aef4dde87e7a0956bac0eaf", "committedDate": "2020-07-15T18:55:08Z", "message": "Merge branch 'elasticip_associate_port' of https://github.com/Eric-Yuan/alcor into elasticip_associate_port"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70", "author": {"user": {"login": "Eric-Yuan", "name": "Wei Yuan"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/b5b65d47ff27373451c8edcde148c355268b4f70", "committedDate": "2020-07-16T07:01:10Z", "message": "modify the replication and ignite host values in k8s deploy yaml in according to other micro services."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNTk5NzQx", "url": "https://github.com/futurewei-cloud/alcor/pull/298#pullrequestreview-450599741", "createdAt": "2020-07-17T12:03:29Z", "commit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMjowMzoyOVrOGzQYPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMzoyNjozNFrOGzS7xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM5ODkwOQ==", "bodyText": "Thank you for updating the yaml file \ud83d\udc4d", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456398909", "createdAt": "2020-07-17T12:03:29Z", "author": {"login": "xieus"}, "path": "kubernetes/services/elasticip_manager.yaml", "diffHunk": "@@ -4,8 +4,9 @@ metadata:\n   name: elasticip-configmap\r\n data:\r\n   application.properties: |\r\n-    ignite.host=10.99.135.32\r\n+    ignite.host=ignite-alcor-service.default.svc.cluster.local\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQwMDE2Nw==", "bodyText": "is it possible to give the conflicted ip address here? If so it would help for debugging in production.", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456400167", "createdAt": "2020-07-17T12:06:34Z", "author": {"login": "xieus"}, "path": "services/elastic_ip_manager/src/main/java/com/futurewei/alcor/elasticipmanager/exception/elasticip/ElasticIpAssociateConflict.java", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\r\n+Copyright 2020 The Alcor Authors.\r\n+\r\n+Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+        you may not use this file except in compliance with the License.\r\n+        You may obtain a copy of the License at\r\n+\r\n+        http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+        Unless required by applicable law or agreed to in writing, software\r\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+        See the License for the specific language governing permissions and\r\n+        limitations under the License.\r\n+*/\r\n+\r\n+package com.futurewei.alcor.elasticipmanager.exception.elasticip;\r\n+\r\n+import org.springframework.http.HttpStatus;\r\n+import org.springframework.web.bind.annotation.ResponseStatus;\r\n+\r\n+@ResponseStatus(code= HttpStatus.BAD_REQUEST, reason=\"The associate port or private ip has already associated with \" +\r\n+        \"another elastic ip\")\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQwODAyMw==", "bodyText": "Possibly we would need to document the current supported scenarios.\nLet us investigate further for IPv6 EIP to see if we want to support in the near future.", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456408023", "createdAt": "2020-07-17T12:24:14Z", "author": {"login": "xieus"}, "path": "services/elastic_ip_manager/src/main/java/com/futurewei/alcor/elasticipmanager/utils/ElasticIpControllerUtils.java", "diffHunk": "@@ -104,9 +103,13 @@ public static void createElasticIpParameterProcess(String projectId, ElasticIpIn\n                 throw new ElasticIpNoPortIdException();\r\n             }\r\n         } else {\r\n-            if (elasticIpInfo.getPrivateIpVersion() != null &&\r\n-                    isIpVersionInvalid(elasticIpInfo.getPrivateIpVersion())) {\r\n-                throw new ElasticIpPipVersionException();\r\n+            if (elasticIpInfo.getPrivateIpVersion() != null) {\r\n+                if (elasticIpInfo.getPrivateIpVersion().equals(IpVersion.IPV6.getVersion())) {\r\n+                    throw new ElasticIpIPv6PIPNotSupported();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQwODU5Mg==", "bodyText": "Question: which scenarios is the eip's private ip version invalid?", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456408592", "createdAt": "2020-07-17T12:25:16Z", "author": {"login": "xieus"}, "path": "services/elastic_ip_manager/src/main/java/com/futurewei/alcor/elasticipmanager/utils/ElasticIpControllerUtils.java", "diffHunk": "@@ -104,9 +103,13 @@ public static void createElasticIpParameterProcess(String projectId, ElasticIpIn\n                 throw new ElasticIpNoPortIdException();\r\n             }\r\n         } else {\r\n-            if (elasticIpInfo.getPrivateIpVersion() != null &&\r\n-                    isIpVersionInvalid(elasticIpInfo.getPrivateIpVersion())) {\r\n-                throw new ElasticIpPipVersionException();\r\n+            if (elasticIpInfo.getPrivateIpVersion() != null) {\r\n+                if (elasticIpInfo.getPrivateIpVersion().equals(IpVersion.IPV6.getVersion())) {\r\n+                    throw new ElasticIpIPv6PIPNotSupported();\r\n+                }\r\n+                if (isIpVersionInvalid(elasticIpInfo.getPrivateIpVersion())) {\r\n+                    throw new ElasticIpPipVersionException();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQwOTQ2NA==", "bodyText": "Very comprehensive test case! Like it a lot \ud83d\udc4d", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456409464", "createdAt": "2020-07-17T12:27:10Z", "author": {"login": "xieus"}, "path": "services/elastic_ip_manager/src/test/java/com/futurewei/alcor/elasticipmanager/ElasticIpControllerTests.java", "diffHunk": "@@ -1017,6 +1030,117 @@ public void elasticIpRange_updateNameAndDescription() throws Exception {\n         this.cleanRange();\n     }\n \n+    @Test\n+    public void elasticIp_associateWithPort() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQxNzExNg==", "bodyText": "We could try to collect some perf numnber for EIP Mgr. @Eric-Yuan", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456417116", "createdAt": "2020-07-17T12:42:15Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/restclient/ElasticIpManagerRestClient.java", "diffHunk": "@@ -1,11 +1,77 @@\n+/*\r\n+Copyright 2019 The Alcor Authors.\r\n+\r\n+Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+        you may not use this file except in compliance with the License.\r\n+        You may obtain a copy of the License at\r\n+\r\n+        http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+        Unless required by applicable law or agreed to in writing, software\r\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+        See the License for the specific language governing permissions and\r\n+        limitations under the License.\r\n+*/\r\n+\r\n package com.futurewei.alcor.web.restclient;\r\n \r\n+import com.fasterxml.jackson.databind.ObjectMapper;\r\n+import com.futurewei.alcor.common.stats.DurationStatistics;\r\n+import com.futurewei.alcor.common.utils.ControllerUtil;\r\n+import com.futurewei.alcor.web.entity.elasticip.ElasticIpInfo;\r\n+import com.futurewei.alcor.web.entity.elasticip.ElasticIpInfoWrapper;\r\n+import com.futurewei.alcor.web.entity.elasticip.ElasticIpsInfoWrapper;\r\n import org.springframework.beans.factory.annotation.Value;\r\n+import org.springframework.http.*;\r\n+import org.springframework.util.MimeType;\r\n+import org.springframework.util.MimeTypeUtils;\r\n+import org.springframework.web.client.RestClientException;\r\n+import org.springframework.web.client.RestTemplate;\r\n+\r\n+import java.util.Map;\r\n \r\n public class ElasticIpManagerRestClient extends AbstractRestClient {\r\n     @Value(\"${microservices.elasticip.service.url:#{\\\"\\\"}}\")\r\n     private String elasticIpManagerUrl;\r\n \r\n+    @DurationStatistics\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQyNzg0Ng==", "bodyText": "Line 79-89 in the new file (I am unable to comment there directly):\nIn the current algorithm, we look into all ranges and pick the first one matching the request ip's version. Pulling all ranges from repo is fine when the number of ranges is limited.\nOne concern is that the first few ranges could be drained very quickly, which causes the following requests takes more time to find one available ip as it will need to check more and more ranges. We could think of adding ip availability stats for each range, and pick the one with least utilization.\nNot high priority. I would recommend us to run some perf/scalability test to see. @Eric-Yuan", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456427846", "createdAt": "2020-07-17T13:03:11Z", "author": {"login": "xieus"}, "path": "services/elastic_ip_manager/src/main/java/com/futurewei/alcor/elasticipmanager/service/implement/ElasticIpServiceImpl.java", "diffHunk": "@@ -86,9 +93,11 @@ public ElasticIpInfo createElasticIp(ElasticIpInfo request) throws Exception {\n         eip.setElasticIp(ipAddress);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQzMDc2NA==", "bodyText": "Recommend to rename it to ElasticIpAssociatedIpNotFound()", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456430764", "createdAt": "2020-07-17T13:08:45Z", "author": {"login": "xieus"}, "path": "services/elastic_ip_manager/src/main/java/com/futurewei/alcor/elasticipmanager/service/implement/ElasticIpServiceImpl.java", "diffHunk": "@@ -258,6 +269,56 @@ public ElasticIpInfo updateElasticIp(ElasticIpInfo request) throws Exception {\n         return new ElasticIpInfo(eip);\n     }\n \n+    private Map<String, ElasticIp> getElasticIpsByPortId(String projectId, String portId) {\n+\n+        Map<String, Object[]> filter = new HashMap<>();\n+        filter.put(\"project_id\", new Object[] {projectId});\n+        filter.put(\"port_id\", new Object[] {portId});\n+\n+        return elasticIpRepo.findAllItems(filter);\n+    }\n+\n+    private String getAssociatedPortIp(String projectId, String portId, Integer ipVersion, String ipAddress)\n+            throws Exception {\n+        PortManagerProxy portManagerProxy = new PortManagerProxy(projectId);\n+        PortEntity port = portManagerProxy.getPortById(portId);\n+\n+        List<PortEntity.FixedIp> fixedIps = port.getFixedIps();\n+        List<String> fixedIpv4List = new ArrayList<>();\n+        for (PortEntity.FixedIp fixedIp: fixedIps) {\n+            if (Ipv4AddrUtil.formatCheck(fixedIp.getIpAddress())) {\n+                fixedIpv4List.add(fixedIp.getIpAddress());\n+            }\n+        }\n+\n+        if (fixedIpv4List.isEmpty()) {\n+            throw new ElasticIpPipNotFound();\n+        }\n+\n+        String associatedIp;\n+        if (ipAddress != null) {\n+            if (fixedIpv4List.contains(ipAddress)) {\n+                associatedIp = ipAddress;\n+            } else {\n+                throw new ElasticIpPipNotFound();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQzMjI0Ng==", "bodyText": "I am trying to understand why port with multi-ips are invalid here.\nFor a port with multiple private ips, one could be considered as primary ip and the rest are secondary. The EIP could be associated with the primary pip.", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456432246", "createdAt": "2020-07-17T13:11:33Z", "author": {"login": "xieus"}, "path": "services/elastic_ip_manager/src/main/java/com/futurewei/alcor/elasticipmanager/service/implement/ElasticIpServiceImpl.java", "diffHunk": "@@ -258,6 +269,56 @@ public ElasticIpInfo updateElasticIp(ElasticIpInfo request) throws Exception {\n         return new ElasticIpInfo(eip);\n     }\n \n+    private Map<String, ElasticIp> getElasticIpsByPortId(String projectId, String portId) {\n+\n+        Map<String, Object[]> filter = new HashMap<>();\n+        filter.put(\"project_id\", new Object[] {projectId});\n+        filter.put(\"port_id\", new Object[] {portId});\n+\n+        return elasticIpRepo.findAllItems(filter);\n+    }\n+\n+    private String getAssociatedPortIp(String projectId, String portId, Integer ipVersion, String ipAddress)\n+            throws Exception {\n+        PortManagerProxy portManagerProxy = new PortManagerProxy(projectId);\n+        PortEntity port = portManagerProxy.getPortById(portId);\n+\n+        List<PortEntity.FixedIp> fixedIps = port.getFixedIps();\n+        List<String> fixedIpv4List = new ArrayList<>();\n+        for (PortEntity.FixedIp fixedIp: fixedIps) {\n+            if (Ipv4AddrUtil.formatCheck(fixedIp.getIpAddress())) {\n+                fixedIpv4List.add(fixedIp.getIpAddress());\n+            }\n+        }\n+\n+        if (fixedIpv4List.isEmpty()) {\n+            throw new ElasticIpPipNotFound();\n+        }\n+\n+        String associatedIp;\n+        if (ipAddress != null) {\n+            if (fixedIpv4List.contains(ipAddress)) {\n+                associatedIp = ipAddress;\n+            } else {\n+                throw new ElasticIpPipNotFound();\n+            }\n+        } else {\n+            if (fixedIpv4List.size() > 1) {\n+                throw new ElasticIpMultipleFixedIpFound();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQzMzIyMA==", "bodyText": "It would be a good idea to include the conflicted ip in the exception message.", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456433220", "createdAt": "2020-07-17T13:13:17Z", "author": {"login": "xieus"}, "path": "services/elastic_ip_manager/src/main/java/com/futurewei/alcor/elasticipmanager/service/implement/ElasticIpServiceImpl.java", "diffHunk": "@@ -258,6 +269,56 @@ public ElasticIpInfo updateElasticIp(ElasticIpInfo request) throws Exception {\n         return new ElasticIpInfo(eip);\n     }\n \n+    private Map<String, ElasticIp> getElasticIpsByPortId(String projectId, String portId) {\n+\n+        Map<String, Object[]> filter = new HashMap<>();\n+        filter.put(\"project_id\", new Object[] {projectId});\n+        filter.put(\"port_id\", new Object[] {portId});\n+\n+        return elasticIpRepo.findAllItems(filter);\n+    }\n+\n+    private String getAssociatedPortIp(String projectId, String portId, Integer ipVersion, String ipAddress)\n+            throws Exception {\n+        PortManagerProxy portManagerProxy = new PortManagerProxy(projectId);\n+        PortEntity port = portManagerProxy.getPortById(portId);\n+\n+        List<PortEntity.FixedIp> fixedIps = port.getFixedIps();\n+        List<String> fixedIpv4List = new ArrayList<>();\n+        for (PortEntity.FixedIp fixedIp: fixedIps) {\n+            if (Ipv4AddrUtil.formatCheck(fixedIp.getIpAddress())) {\n+                fixedIpv4List.add(fixedIp.getIpAddress());\n+            }\n+        }\n+\n+        if (fixedIpv4List.isEmpty()) {\n+            throw new ElasticIpPipNotFound();\n+        }\n+\n+        String associatedIp;\n+        if (ipAddress != null) {\n+            if (fixedIpv4List.contains(ipAddress)) {\n+                associatedIp = ipAddress;\n+            } else {\n+                throw new ElasticIpPipNotFound();\n+            }\n+        } else {\n+            if (fixedIpv4List.size() > 1) {\n+                throw new ElasticIpMultipleFixedIpFound();\n+            }\n+            associatedIp = fixedIpv4List.get(0);\n+        }\n+\n+        Map<String, ElasticIp> associatedEips = this.getElasticIpsByPortId(projectId, projectId);\n+        for (ElasticIp eip: associatedEips.values()) {\n+            if (associatedIp.equals(eip.getPrivateIp())) {\n+                throw new ElasticIpAssociateConflict();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQzMzg5Mw==", "bodyText": "getElasticIpsByPortId(projectId, portId)\nI think we need a UT here :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456433893", "createdAt": "2020-07-17T13:14:29Z", "author": {"login": "xieus"}, "path": "services/elastic_ip_manager/src/main/java/com/futurewei/alcor/elasticipmanager/service/implement/ElasticIpServiceImpl.java", "diffHunk": "@@ -258,6 +269,56 @@ public ElasticIpInfo updateElasticIp(ElasticIpInfo request) throws Exception {\n         return new ElasticIpInfo(eip);\n     }\n \n+    private Map<String, ElasticIp> getElasticIpsByPortId(String projectId, String portId) {\n+\n+        Map<String, Object[]> filter = new HashMap<>();\n+        filter.put(\"project_id\", new Object[] {projectId});\n+        filter.put(\"port_id\", new Object[] {portId});\n+\n+        return elasticIpRepo.findAllItems(filter);\n+    }\n+\n+    private String getAssociatedPortIp(String projectId, String portId, Integer ipVersion, String ipAddress)\n+            throws Exception {\n+        PortManagerProxy portManagerProxy = new PortManagerProxy(projectId);\n+        PortEntity port = portManagerProxy.getPortById(portId);\n+\n+        List<PortEntity.FixedIp> fixedIps = port.getFixedIps();\n+        List<String> fixedIpv4List = new ArrayList<>();\n+        for (PortEntity.FixedIp fixedIp: fixedIps) {\n+            if (Ipv4AddrUtil.formatCheck(fixedIp.getIpAddress())) {\n+                fixedIpv4List.add(fixedIp.getIpAddress());\n+            }\n+        }\n+\n+        if (fixedIpv4List.isEmpty()) {\n+            throw new ElasticIpPipNotFound();\n+        }\n+\n+        String associatedIp;\n+        if (ipAddress != null) {\n+            if (fixedIpv4List.contains(ipAddress)) {\n+                associatedIp = ipAddress;\n+            } else {\n+                throw new ElasticIpPipNotFound();\n+            }\n+        } else {\n+            if (fixedIpv4List.size() > 1) {\n+                throw new ElasticIpMultipleFixedIpFound();\n+            }\n+            associatedIp = fixedIpv4List.get(0);\n+        }\n+\n+        Map<String, ElasticIp> associatedEips = this.getElasticIpsByPortId(projectId, projectId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQzNzc0OA==", "bodyText": "Oh EIP calls itself! Could we handle those calls internally or ask other instance to handle is better?", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456437748", "createdAt": "2020-07-17T13:21:34Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/restclient/ElasticIpManagerRestClient.java", "diffHunk": "@@ -1,11 +1,77 @@\n+/*\r\n+Copyright 2019 The Alcor Authors.\r\n+\r\n+Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+        you may not use this file except in compliance with the License.\r\n+        You may obtain a copy of the License at\r\n+\r\n+        http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+        Unless required by applicable law or agreed to in writing, software\r\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+        See the License for the specific language governing permissions and\r\n+        limitations under the License.\r\n+*/\r\n+\r\n package com.futurewei.alcor.web.restclient;\r\n \r\n+import com.fasterxml.jackson.databind.ObjectMapper;\r\n+import com.futurewei.alcor.common.stats.DurationStatistics;\r\n+import com.futurewei.alcor.common.utils.ControllerUtil;\r\n+import com.futurewei.alcor.web.entity.elasticip.ElasticIpInfo;\r\n+import com.futurewei.alcor.web.entity.elasticip.ElasticIpInfoWrapper;\r\n+import com.futurewei.alcor.web.entity.elasticip.ElasticIpsInfoWrapper;\r\n import org.springframework.beans.factory.annotation.Value;\r\n+import org.springframework.http.*;\r\n+import org.springframework.util.MimeType;\r\n+import org.springframework.util.MimeTypeUtils;\r\n+import org.springframework.web.client.RestClientException;\r\n+import org.springframework.web.client.RestTemplate;\r\n+\r\n+import java.util.Map;\r\n \r\n public class ElasticIpManagerRestClient extends AbstractRestClient {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQ0MDc3Mw==", "bodyText": "We could perf testing this method especially when elasticIps = elasticIpManagerRestClient.getElasticIps(this.projectId, filters) returns a lot of eips.\nIt involves at least two self-calls which are not parallel at this time.", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r456440773", "createdAt": "2020-07-17T13:26:34Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/proxy/ElasticIpManagerProxy.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\r\n+Copyright 2019 The Alcor Authors.\r\n+\r\n+Licensed under the Apache License, Version 2.0 (the \"License\");\r\n+        you may not use this file except in compliance with the License.\r\n+        You may obtain a copy of the License at\r\n+\r\n+        http://www.apache.org/licenses/LICENSE-2.0\r\n+\r\n+        Unless required by applicable law or agreed to in writing, software\r\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+        See the License for the specific language governing permissions and\r\n+        limitations under the License.\r\n+*/\r\n+\r\n+package com.futurewei.alcor.portmanager.proxy;\r\n+\r\n+import com.futurewei.alcor.common.utils.SpringContextUtil;\r\n+import com.futurewei.alcor.web.entity.elasticip.*;\r\n+import com.futurewei.alcor.web.restclient.ElasticIpManagerRestClient;\r\n+\r\n+import java.util.ArrayList;\r\n+import java.util.HashMap;\r\n+import java.util.List;\r\n+import java.util.Map;\r\n+\r\n+public class ElasticIpManagerProxy {\r\n+\r\n+    private String projectId;\r\n+\r\n+    private ElasticIpManagerRestClient elasticIpManagerRestClient;\r\n+\r\n+    public ElasticIpManagerProxy(String projectId) {\r\n+        this.projectId = projectId;\r\n+        elasticIpManagerRestClient = SpringContextUtil.getBean(ElasticIpManagerRestClient.class);\r\n+    }\r\n+\r\n+    /**\r\n+     * Update the elastic ip association info when port deleted or ip address deleted\r\n+     * @param arg1 Port id\r\n+     * @param arg2 Private ip\r\n+     * @return List<ElasticIpInfoWrapper></>\r\n+     * @throws Exception Rest request exception\r\n+     */\r\n+    public List<ElasticIpInfoWrapper> portIpDeleteEventProcess(Object arg1, Object arg2) throws Exception {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a18c3a705101d409fc1ee03a6c1f0c2b74a48212", "author": {"user": {"login": "Eric-Yuan", "name": "Wei Yuan"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a18c3a705101d409fc1ee03a6c1f0c2b74a48212", "committedDate": "2020-07-21T08:21:29Z", "message": "Fixed some issues according to the review comments\n1) use a support custom defined message exception instead of the former fixed message exception\n2) cancel the limitation of specifying an ipv6 private ip\n3) cancel the limitation of associating a multi fixed ips port and not specifying the private ip to be associated\n4) fixed a bug that allocated ip would not be released when a exception occurs at associating port process"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2189e1ef866ca0f29b38863b3187e3b1ff778190", "author": {"user": {"login": "Eric-Yuan", "name": "Wei Yuan"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/2189e1ef866ca0f29b38863b3187e3b1ff778190", "committedDate": "2020-07-22T01:44:59Z", "message": "Fixed some issues according to the review comments\n1) use a support custom defined message exception instead of the former fixed message exception\n2) cancel the limitation of specifying an ipv6 private ip\n3) cancel the limitation of associating a multi fixed ips port and not specifying the private ip to be associated\n4) fixed a bug that allocated ip would not be released when a exception occurs at associating port process"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68249bca96570d69fd34e17c69a95bc37087e870", "author": {"user": {"login": "Eric-Yuan", "name": "Wei Yuan"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/68249bca96570d69fd34e17c69a95bc37087e870", "committedDate": "2020-07-22T01:45:12Z", "message": "Merge branch 'elasticip_associate_port' of https://github.com/Eric-Yuan/alcor into elasticip_associate_port"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b308687f24f4a12458cabe76d36397b19be7a156", "author": {"user": {"login": "Eric-Yuan", "name": "Wei Yuan"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/b308687f24f4a12458cabe76d36397b19be7a156", "committedDate": "2020-07-22T01:55:40Z", "message": "Merge branch 'elasticip_associate_port' of https://github.com/Eric-Yuan/alcor into elasticip_associate_port"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94bbd8c2676d5bf96bbf4619ed579ce94f2178b0", "author": {"user": {"login": "Eric-Yuan", "name": "Wei Yuan"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/94bbd8c2676d5bf96bbf4619ed579ce94f2178b0", "committedDate": "2020-07-22T01:55:51Z", "message": "Merge branch 'elasticip_associate_port' of https://github.com/Eric-Yuan/alcor into elasticip_associate_port"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMDE0MzI0", "url": "https://github.com/futurewei-cloud/alcor/pull/298#pullrequestreview-453014324", "createdAt": "2020-07-22T05:56:11Z", "commit": {"oid": "94bbd8c2676d5bf96bbf4619ed579ce94f2178b0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTo1NjoxMVrOG1TxTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTo1NjoxMVrOG1TxTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU1MTYzMA==", "bodyText": "Cool.", "url": "https://github.com/futurewei-cloud/alcor/pull/298#discussion_r458551630", "createdAt": "2020-07-22T05:56:11Z", "author": {"login": "xieus"}, "path": "services/elastic_ip_manager/src/main/java/com/futurewei/alcor/elasticipmanager/utils/ElasticIpControllerUtils.java", "diffHunk": "@@ -104,9 +103,13 @@ public static void createElasticIpParameterProcess(String projectId, ElasticIpIn\n                 throw new ElasticIpNoPortIdException();\r\n             }\r\n         } else {\r\n-            if (elasticIpInfo.getPrivateIpVersion() != null &&\r\n-                    isIpVersionInvalid(elasticIpInfo.getPrivateIpVersion())) {\r\n-                throw new ElasticIpPipVersionException();\r\n+            if (elasticIpInfo.getPrivateIpVersion() != null) {\r\n+                if (elasticIpInfo.getPrivateIpVersion().equals(IpVersion.IPV6.getVersion())) {\r\n+                    throw new ElasticIpIPv6PIPNotSupported();\r\n+                }\r\n+                if (isIpVersionInvalid(elasticIpInfo.getPrivateIpVersion())) {\r\n+                    throw new ElasticIpPipVersionException();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjQwODU5Mg=="}, "originalCommit": {"oid": "b5b65d47ff27373451c8edcde148c355268b4f70"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2207, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}