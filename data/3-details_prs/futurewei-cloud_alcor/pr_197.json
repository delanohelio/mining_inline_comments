{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MzYyMzcx", "number": 197, "title": "[Port Manager] Add Bulk operation & Integrate with Route/SGM", "bodyText": "This PR contains the following features\uff1a\n\nAdd validation for PortEntity on controller.\nSupport bulk port creation and update.\nEnable Port Manager UTs.\nSupport interaction with Route Manager, Security Group Manager and Data-Plane Manager.\nFix missing fields in PortEntity.", "createdAt": "2020-05-15T03:59:38Z", "url": "https://github.com/futurewei-cloud/alcor/pull/197", "merged": true, "mergeCommit": {"oid": "6ace5e78e0d16b2284276aa4e0dfbaa0907fdbf2"}, "closed": true, "closedAt": "2020-06-03T21:28:08Z", "author": {"login": "chenpiaoping"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchZ-5zgFqTQxMjMzMjQ3NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnwRKVgFqTQyMzk0NzQ3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzMyNDc0", "url": "https://github.com/futurewei-cloud/alcor/pull/197#pullrequestreview-412332474", "createdAt": "2020-05-15T04:01:55Z", "commit": {"oid": "93b46e80a524dccca70118e74d3e292a286dbdf6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93b46e80a524dccca70118e74d3e292a286dbdf6", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/93b46e80a524dccca70118e74d3e292a286dbdf6", "committedDate": "2020-05-15T03:45:46Z", "message": "turn on all UTs of port-manager"}, "afterCommit": {"oid": "d4cd8321e75a1e55b464c7fb7b63b734f545dd01", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d4cd8321e75a1e55b464c7fb7b63b734f545dd01", "committedDate": "2020-05-15T08:39:50Z", "message": "turn on all UTs of port-manager"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDI4NTMx", "url": "https://github.com/futurewei-cloud/alcor/pull/197#pullrequestreview-413028531", "createdAt": "2020-05-16T00:30:03Z", "commit": {"oid": "d4cd8321e75a1e55b464c7fb7b63b734f545dd01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwMDozMDowM1rOGWW69g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwMDozMDowM1rOGWW69g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA5NzM5OA==", "bodyText": "@chenpiaoping What does this exclusions block do? It could skip the portion of UTs which potentially fails if enabled, right? Let us fix the actual problem directly.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r426097398", "createdAt": "2020-05-16T00:30:03Z", "author": {"login": "xieus"}, "path": "services/port_manager/pom.xml", "diffHunk": "@@ -41,6 +41,12 @@\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-starter-test</artifactId>\n             <scope>test</scope>\n+            <exclusions>\n+                <exclusion>\n+                    <groupId>org.junit.vintage</groupId>\n+                    <artifactId>junit-vintage-engine</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cd8321e75a1e55b464c7fb7b63b734f545dd01"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4cd8321e75a1e55b464c7fb7b63b734f545dd01", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d4cd8321e75a1e55b464c7fb7b63b734f545dd01", "committedDate": "2020-05-15T08:39:50Z", "message": "turn on all UTs of port-manager"}, "afterCommit": {"oid": "7def1d013cefd389ba278747eaf6b1e7e9ddc748", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/7def1d013cefd389ba278747eaf6b1e7e9ddc748", "committedDate": "2020-05-18T11:06:49Z", "message": "batch operations are supported for the creation and update of port"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MDM1NDcz", "url": "https://github.com/futurewei-cloud/alcor/pull/197#pullrequestreview-415035473", "createdAt": "2020-05-20T06:46:34Z", "commit": {"oid": "7def1d013cefd389ba278747eaf6b1e7e9ddc748"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjo0NjozNFrOGX9akg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjo0Nzo0OFrOGX9cqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3NjY1OA==", "bodyText": "By sharing the same rollbacks stack, will one port creation failure cause rollback of other ports in the same request?", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r427776658", "createdAt": "2020-05-20T06:46:34Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "diffHunk": "@@ -115,57 +162,53 @@ public PortStateJson createPortState(String projectId, PortStateJson portStateJs\n         portState.setProjectId(projectId);\n \n         try {\n-            //Verify VPC ID\n-            VpcManagerProxy vpcManagerProxy = new VpcManagerProxy(rollbacks);\n-            executor.runAsync(vpcManagerProxy::verifyVpc, portState);\n+            createPortStateAsync(portState, executor, rollbacks);\n \n-            IpManagerProxy ipManagerProxy = new IpManagerProxy(rollbacks, portState.getProjectId());\n-            if (portState.getFixedIps() == null) {\n-                executor.runAsync(ipManagerProxy::allocateRandomIpAddress, portState);\n-            } else {\n-                executor.runAsync(ipManagerProxy::allocateFixedIpAddress, portState.getFixedIps());\n-            }\n+            //Wait for all async functions to finish\n+            executor.joinAll();\n \n-            //Generate uuid for port\n-            if (portState.getId() == null) {\n-                portState.setId(UUID.randomUUID().toString());\n-            }\n+            //Persist portState\n+            portRepository.addItem(portState);\n+        } catch (Exception e) {\n+            exceptionHandle(executor, rollbacks, e);\n+        }\n \n-            MacManagerProxy macManagerProxy = new MacManagerProxy(rollbacks);\n-            if (portState.getMacAddress() == null) {\n-                executor.runAsync(macManagerProxy::allocateRandomMacAddress, portState);\n-            } else {\n-                executor.runAsync(macManagerProxy::allocateFixedMacAddress, portState);\n-            }\n+        LOG.info(\"Create port state success, projectId: {}, PortStateJson: {}\", projectId, portStateJson);\n \n-            //Verify security group\n+        return portStateJson;\n+    }\n+\n+    /**\n+     * Create multiple ports, and call the interfaces of each micro-service according to the\n+     * configuration of the port to create various required resources for all ports.\n+     * If an exception occurs during the creation of multiple ports, we need to roll back\n+     * the resource allocated from each micro-service.\n+     * @param projectId Project the port belongs to\n+     * @param portStateBulkJson Multiple ports configuration\n+     * @return PortStateBulkJson\n+     * @throws Exception Various exceptions that may occur during the create process\n+     */\n+    @Override\n+    public PortStateBulkJson createPortStateBulk(String projectId, PortStateBulkJson portStateBulkJson) throws Exception {\n+        Stack<PortStateRollback> rollbacks = new Stack<>();\n+        AsyncExecutor executor = new AsyncExecutor();\n \n-            //Verify Binding Host ID\n-            if (portState.getBindingHostId() != null) {\n-                NodeManagerProxy nodeManagerProxy = new NodeManagerProxy(rollbacks);\n-                nodeManagerProxy.verifyHost(portState.getBindingHostId());\n+        try {\n+            for (PortState portState: portStateBulkJson.getPortStates()) {\n+                portState.setProjectId(projectId);\n+                createPortStateAsync(portState, executor, rollbacks);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7def1d013cefd389ba278747eaf6b1e7e9ddc748"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3NzE5NQ==", "bodyText": "Bulk APIs are very fancy. Let us add some UTs to cover them :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r427777195", "createdAt": "2020-05-20T06:47:48Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/test/java/com/futurewei/alcor/portmanager/config/UnitTestConfig.java", "diffHunk": "@@ -82,4 +85,42 @@\n             \"        \\\"allowed_address_pairs\\\":[{\\\"ip_address\\\":\\\"\" + ip2 + \"\\\", \\\"mac_address\\\":\\\"\" + mac1 + \"\\\"}]\\n\" +\n             \"    }\\n\" +\n             \"}\";\n+    public static String createPortBulk = \"{\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7def1d013cefd389ba278747eaf6b1e7e9ddc748"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1ODk2MzU4", "url": "https://github.com/futurewei-cloud/alcor/pull/197#pullrequestreview-415896358", "createdAt": "2020-05-21T05:56:15Z", "commit": {"oid": "7def1d013cefd389ba278747eaf6b1e7e9ddc748"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNTo1NjoxNVrOGYnGyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNTo1Njo1M1rOGYnHcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ1OTcyMA==", "bodyText": "Btw, so Ignite doesn't support a bulk insertion?", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r428459720", "createdAt": "2020-05-21T05:56:15Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/db/repo/ICacheRepository.java", "diffHunk": "@@ -28,5 +29,7 @@\n \n     void addItem(T newItem) throws CacheException;\n \n+    //void addItems(List<T> items) throws CacheException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7def1d013cefd389ba278747eaf6b1e7e9ddc748"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ1OTg4OA==", "bodyText": "Just checking in to see if you are still blocked on this.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r428459888", "createdAt": "2020-05-21T05:56:53Z", "author": {"login": "xieus"}, "path": "services/port_manager/pom.xml", "diffHunk": "@@ -41,6 +41,12 @@\n             <groupId>org.springframework.boot</groupId>\n             <artifactId>spring-boot-starter-test</artifactId>\n             <scope>test</scope>\n+            <exclusions>\n+                <exclusion>\n+                    <groupId>org.junit.vintage</groupId>\n+                    <artifactId>junit-vintage-engine</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA5NzM5OA=="}, "originalCommit": {"oid": "d4cd8321e75a1e55b464c7fb7b63b734f545dd01"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba92b92b37e6a2c1c8eead009aeac2c7c3d526b4", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/ba92b92b37e6a2c1c8eead009aeac2c7c3d526b4", "committedDate": "2020-05-26T02:38:53Z", "message": "Merge branch 'master' into port-manager"}, "afterCommit": {"oid": "5959954f536183668ebc1092a408d295a651e394", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/5959954f536183668ebc1092a408d295a651e394", "committedDate": "2020-05-26T03:25:10Z", "message": "rebase from master"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5959954f536183668ebc1092a408d295a651e394", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/5959954f536183668ebc1092a408d295a651e394", "committedDate": "2020-05-26T03:25:10Z", "message": "rebase from master"}, "afterCommit": {"oid": "3a171b70ef745b6aa95d7ddc32bcaf2eab34134e", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3a171b70ef745b6aa95d7ddc32bcaf2eab34134e", "committedDate": "2020-05-26T04:35:09Z", "message": "rebase from master"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a171b70ef745b6aa95d7ddc32bcaf2eab34134e", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3a171b70ef745b6aa95d7ddc32bcaf2eab34134e", "committedDate": "2020-05-26T04:35:09Z", "message": "rebase from master"}, "afterCommit": {"oid": "fe4e219dbe3c5fee2b93f928a7320bb2d2885da9", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/fe4e219dbe3c5fee2b93f928a7320bb2d2885da9", "committedDate": "2020-05-26T06:37:50Z", "message": "rebase from master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4ODA2OTg0", "url": "https://github.com/futurewei-cloud/alcor/pull/197#pullrequestreview-418806984", "createdAt": "2020-05-27T01:59:54Z", "commit": {"oid": "fe4e219dbe3c5fee2b93f928a7320bb2d2885da9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMTo1OTo1NFrOGa26_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMzo1Nzo0NlrOGa4nBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgxNTk5Ng==", "bodyText": "What does the responsed data look like when we support allow_partial?\n\nFor the successful ports, we could return its detailed port info.\nFor unsuccessful ones, we could return port_id: error code + detailed exception, something like that.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430815996", "createdAt": "2020-05-27T01:59:54Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "diffHunk": "@@ -115,57 +162,53 @@ public PortStateJson createPortState(String projectId, PortStateJson portStateJs\n         portState.setProjectId(projectId);\n \n         try {\n-            //Verify VPC ID\n-            VpcManagerProxy vpcManagerProxy = new VpcManagerProxy(rollbacks);\n-            executor.runAsync(vpcManagerProxy::verifyVpc, portState);\n+            createPortStateAsync(portState, executor, rollbacks);\n \n-            IpManagerProxy ipManagerProxy = new IpManagerProxy(rollbacks, portState.getProjectId());\n-            if (portState.getFixedIps() == null) {\n-                executor.runAsync(ipManagerProxy::allocateRandomIpAddress, portState);\n-            } else {\n-                executor.runAsync(ipManagerProxy::allocateFixedIpAddress, portState.getFixedIps());\n-            }\n+            //Wait for all async functions to finish\n+            executor.joinAll();\n \n-            //Generate uuid for port\n-            if (portState.getId() == null) {\n-                portState.setId(UUID.randomUUID().toString());\n-            }\n+            //Persist portState\n+            portRepository.addItem(portState);\n+        } catch (Exception e) {\n+            exceptionHandle(executor, rollbacks, e);\n+        }\n \n-            MacManagerProxy macManagerProxy = new MacManagerProxy(rollbacks);\n-            if (portState.getMacAddress() == null) {\n-                executor.runAsync(macManagerProxy::allocateRandomMacAddress, portState);\n-            } else {\n-                executor.runAsync(macManagerProxy::allocateFixedMacAddress, portState);\n-            }\n+        LOG.info(\"Create port state success, projectId: {}, PortStateJson: {}\", projectId, portStateJson);\n \n-            //Verify security group\n+        return portStateJson;\n+    }\n+\n+    /**\n+     * Create multiple ports, and call the interfaces of each micro-service according to the\n+     * configuration of the port to create various required resources for all ports.\n+     * If an exception occurs during the creation of multiple ports, we need to roll back\n+     * the resource allocated from each micro-service.\n+     * @param projectId Project the port belongs to\n+     * @param portStateBulkJson Multiple ports configuration\n+     * @return PortStateBulkJson\n+     * @throws Exception Various exceptions that may occur during the create process\n+     */\n+    @Override\n+    public PortStateBulkJson createPortStateBulk(String projectId, PortStateBulkJson portStateBulkJson) throws Exception {\n+        Stack<PortStateRollback> rollbacks = new Stack<>();\n+        AsyncExecutor executor = new AsyncExecutor();\n \n-            //Verify Binding Host ID\n-            if (portState.getBindingHostId() != null) {\n-                NodeManagerProxy nodeManagerProxy = new NodeManagerProxy(rollbacks);\n-                nodeManagerProxy.verifyHost(portState.getBindingHostId());\n+        try {\n+            for (PortState portState: portStateBulkJson.getPortStates()) {\n+                portState.setProjectId(projectId);\n+                createPortStateAsync(portState, executor, rollbacks);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc3NjY1OA=="}, "originalCommit": {"oid": "7def1d013cefd389ba278747eaf6b1e7e9ddc748"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0MTQ1OQ==", "bodyText": "As the requested RouteManager API is ready (ref:#203), we should be able to add integration with Route Manager now.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430841459", "createdAt": "2020-05-27T03:47:42Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "diffHunk": "@@ -94,6 +96,51 @@ private void addPortToHost(String hostId) {\n         //FIXME: Add port to Host\n     }\n \n+    private void createPortStateAsync(PortState portState, AsyncExecutor executor, Stack<PortStateRollback> rollbacks) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4e219dbe3c5fee2b93f928a7320bb2d2885da9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0MTk2Nw==", "bodyText": "Is update port implementation completed?", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430841967", "createdAt": "2020-05-27T03:49:59Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "diffHunk": "@@ -247,6 +290,68 @@ private void updatePortToHost(PortState portState) {\n \n     }\n \n+    private void updatePortStateAsync(PortState portState, PortState oldPortState, AsyncExecutor executor,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4e219dbe3c5fee2b93f928a7320bb2d2885da9"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0MjU2OA==", "bodyText": "We should allocate mac address before releasing the old one. Otherwise, it is possible that after releasing the old mac, Port Manager instance crashes which causes loss of old mac but no new mac is allocated. In the worse case, the old mac address is allocated by some other tenant.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430842568", "createdAt": "2020-05-27T03:52:47Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "diffHunk": "@@ -247,6 +290,68 @@ private void updatePortToHost(PortState portState) {\n \n     }\n \n+    private void updatePortStateAsync(PortState portState, PortState oldPortState, AsyncExecutor executor,\n+                                      Stack<PortStateRollback> rollbacks) throws Exception {\n+        //Update mac_address\n+        String macAddress = portState.getMacAddress();\n+        String oldMacAddress = oldPortState.getMacAddress();\n+        if (macAddress != null && !oldMacAddress.equals(macAddress)) {\n+            MacManagerProxy macManagerProxy = new MacManagerProxy(rollbacks);\n+            executor.runAsync(macManagerProxy::releaseMacAddress, oldPortState);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4e219dbe3c5fee2b93f928a7320bb2d2885da9"}, "originalPosition": 164}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0MzE0NQ==", "bodyText": "Same there. Allocate before release.\nAlso, could you give a simple comment or example to explain addFixedIps and delFixedIps to increase code readability?", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430843145", "createdAt": "2020-05-27T03:55:28Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "diffHunk": "@@ -247,6 +290,68 @@ private void updatePortToHost(PortState portState) {\n \n     }\n \n+    private void updatePortStateAsync(PortState portState, PortState oldPortState, AsyncExecutor executor,\n+                                      Stack<PortStateRollback> rollbacks) throws Exception {\n+        //Update mac_address\n+        String macAddress = portState.getMacAddress();\n+        String oldMacAddress = oldPortState.getMacAddress();\n+        if (macAddress != null && !oldMacAddress.equals(macAddress)) {\n+            MacManagerProxy macManagerProxy = new MacManagerProxy(rollbacks);\n+            executor.runAsync(macManagerProxy::releaseMacAddress, oldPortState);\n+            executor.runAsync(macManagerProxy::allocateFixedMacAddress, portState);\n+            oldPortState.setMacAddress(macAddress);\n+        }\n+\n+        //Update device_owner and device_id\n+        String deviceOwnerNew = portState.getDeviceOwner();\n+        String deviceIdNew = portState.getDeviceId();\n+        String deviceIdOld = oldPortState.getDeviceId();\n+        String tenantId = oldPortState.getTenantId();\n+\n+        if (deviceOwnerNew != null && deviceIdNew != null && !deviceIdNew.equals(deviceIdOld)) {\n+            if (DeviceOwner.ROUTER.getOwner().equals(deviceOwnerNew)) {\n+                verifyRouter(deviceIdNew, tenantId);\n+            }\n+        }\n+\n+        //Update fixed_ips\n+        List<PortState.FixedIp> fixedIps = portState.getFixedIps();\n+        IpManagerProxy ipManagerProxy = new IpManagerProxy(rollbacks, portState.getProjectId());\n+\n+        if (fixedIps != null) {\n+            List<PortState.FixedIp> oldFixedIps = oldPortState.getFixedIps();\n+\n+            List<PortState.FixedIp> addFixedIps = fixedIpsCompare(fixedIps, oldFixedIps);\n+            List<PortState.FixedIp> delFixedIps = fixedIpsCompare(oldFixedIps, fixedIps);\n+\n+            if (delFixedIps.size() > 0) {\n+                executor.runAsync(ipManagerProxy::releaseIpAddressBulk, delFixedIps);\n+            }\n+\n+            if (addFixedIps.size() > 0) {\n+                executor.runAsync(ipManagerProxy::allocateFixedIpAddress, addFixedIps);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4e219dbe3c5fee2b93f928a7320bb2d2885da9"}, "originalPosition": 197}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0MzQxMA==", "bodyText": "newPortState?", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430843410", "createdAt": "2020-05-27T03:56:41Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "diffHunk": "@@ -267,84 +372,70 @@ public PortStateJson updatePortState(String projectId, String portId, PortStateJ\n         AsyncExecutor executor = new AsyncExecutor();\n \n         PortState portState = portStateJson.getPortState();\n-        PortState oldPortState = portRepository.findItem(portId);\n+        portState.setProjectId(projectId);\n \n         try {\n-            if (portRepository.findItem(portId) == null) {\n+            PortState oldPortState = portRepository.findItem(portId);\n+            if (oldPortState == null) {\n                 throw new PortStateNotFoundException();\n             }\n \n-            portState.setProjectId(projectId);\n-\n-            //Update mac_address\n+            updatePortStateAsync(portState, oldPortState, executor, rollbacks);\n \n-            //Update device_owner and device_id\n-            String deviceOwnerNew = portState.getDeviceOwner();\n-            String deviceIdNew = portState.getDeviceId();\n-            String deviceIdOld = oldPortState.getDeviceId();\n-            String tenantId = oldPortState.getTenantId();\n-\n-            if (deviceOwnerNew != null && deviceIdNew != null && !deviceIdNew.equals(deviceIdOld)) {\n-                if (DeviceOwner.ROUTER.getOwner().equals(deviceOwnerNew)) {\n-                    verifyRouter(deviceIdNew, tenantId);\n-                }\n-            }\n+            //Wait for all async functions to finish\n+            executor.joinAll();\n \n-            //Update fixed_ips\n-            List<PortState.FixedIp> fixedIps = portState.getFixedIps();\n-            IpManagerProxy ipManagerProxy = new IpManagerProxy(rollbacks, projectId);\n+            //Persist the new configuration of port to the db\n+            portRepository.addItem(oldPortState);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4e219dbe3c5fee2b93f928a7320bb2d2885da9"}, "originalPosition": 259}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg0MzY1NA==", "bodyText": "The update logic is quite tricky. Do we have sufficient UTs to cover those corner cases?", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430843654", "createdAt": "2020-05-27T03:57:46Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "diffHunk": "@@ -267,84 +372,70 @@ public PortStateJson updatePortState(String projectId, String portId, PortStateJ\n         AsyncExecutor executor = new AsyncExecutor();\n \n         PortState portState = portStateJson.getPortState();\n-        PortState oldPortState = portRepository.findItem(portId);\n+        portState.setProjectId(projectId);\n \n         try {\n-            if (portRepository.findItem(portId) == null) {\n+            PortState oldPortState = portRepository.findItem(portId);\n+            if (oldPortState == null) {\n                 throw new PortStateNotFoundException();\n             }\n \n-            portState.setProjectId(projectId);\n-\n-            //Update mac_address\n+            updatePortStateAsync(portState, oldPortState, executor, rollbacks);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4e219dbe3c5fee2b93f928a7320bb2d2885da9"}, "originalPosition": 239}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4ODUxNzQ0", "url": "https://github.com/futurewei-cloud/alcor/pull/197#pullrequestreview-418851744", "createdAt": "2020-05-27T04:39:38Z", "commit": {"oid": "af2d5f1e2703237730bea53e9e2ff429b1d5ddad"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNDozOTozOFrOGa5Kxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNToyOToyM1rOGa56KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg1MjgwNg==", "bodyText": "Can we use fast_path instead of fastPath?", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430852806", "createdAt": "2020-05-27T04:39:38Z", "author": {"login": "xieus"}, "path": "docs/modules/ROOT/pages/mgmt_services/port_manager.adoc", "diffHunk": "@@ -0,0 +1,600 @@\n+= Port Manager Design Specification\n+Piaoping Chen <chenpiaoping@yeah.net>, Liguang Xie <lxie@futurewei.com>\n+v0.1, 2020-04-08\n+:toc: right\n+:imagesdir: ../../images\n+\n+== Overview\n+\n+Port manager is an Alcor microservice which manages all ports of vms, It provides tenant with the CRUD interface of port.\n+When creating a virtual machine, the Rest interface of Port Manager is called to create a port,\n+Port Manager allocate the corresponding resources (such as mac address, ip address) according to the requested configuration, and create a port in the database.\n+If the port binding host,Port Manager will send it to dataplane manager,the configuration of port will eventually be sent to the bound host.\n+Port can be used as a network card for a virtual machine or as an interface for a router.\n+\n+== Service Requirements\n+\n+[arabic]\n+. Support CRUD operations of port.\n+. Support create and update of a list of ports.\n+. Working together with other services including vpc manager, subnet manager, mac manager, security group manager and dataplane manager.\n+. Support asynchronous interaction with other services\n+. Rollback is supported when CRUD operation occurs exception.\n+. Support query operation with any field of port as parameters.\n+\n+\n+== REST APIs\n+\n+=== API Snapshot\n+\n+[width=\"100%\",cols=\"22%,12%,50%,17%\"]\n+|===\n+|*API Name* |*Method* |*Request*|*Response*\n+\n+|Create port\n+|POST\n+|/project/{project_id}/ports\n+|port state\n+<<Create_Port,[sample]>>\n+\n+|Create port bulk\n+|POST\n+|/project/{project_id}/ports/bulk\n+|port state list\n+<<Create_Port_Bulk,[sample]>>\n+\n+|Update port\n+|PUT\n+|/project/{project_id}/ports/{port_id}\n+|port state\n+<<Update_Port,[sample]>>\n+\n+|Delete port\n+|POST\n+|/project/{project_id}/ports/{port_id}\n+|None\n+<<Delete_Port,[sample]>>\n+\n+|Get port\n+|GET\n+|/project/{project_id}/ports/{port_id}\n+|port state\n+<<Get_Port,[sample]>>\n+\n+|List port\n+|GET\n+|/project/{project_id}/ports\n+|port state list\n+<<List_Port,[sample]>>\n+|===\n+\n+=== API Specification\n+\n+anchor:Create_Port[]\n+**(1) Create port**\n+\n+* Method: `POST`\n+\n+* Request: `/project/{project_id}/ports`\n+\n+* Request Parameter: `@PathVariable String projectId`\n+\n+* Response: port state\n+* Normal response codes: 200\n+* Error response codes: 400, 412, 500\n+\n+* Example\n+\n+....\n+Request:\n+http://127.0.0.1:8080/project/3d53801c-32ce-4e97-9572-bb966f4de79c/ports\n+\n+Body:\n+{\n+\t\"port\": {\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f4aa53e\",\n+\t\t\"vpc_id\": \"3d53801c-32ce-4e97-9572-bb966f4d175e\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"fixed_ips\": [{\n+\t\t\t\"subnet_id\": \"3d53801c-32ce-4e97-9572-bb966f4056b\",\n+\t\t\t\"ip_address\": \"11.11.11.100\"\n+\t\t}],\n+\t\t\"security_groups\": [\"3d53801c-32ce-4e97-9572-bb966f4d45ca\"],\n+\t\t\"allowed_address_pairs\": [{\n+\t\t\t\"ip_address\": \"11.11.11.101\",\n+\t\t\t\"mac_address\": \"00:01:6C:06:A6:29\"\n+\t\t}]\n+\t}\n+}\n+\n+Response:\n+{\n+\t\"port\": {\n+\t\t\"fastPath\": false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af2d5f1e2703237730bea53e9e2ff429b1d5ddad"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg1MzIwNA==", "bodyText": "Somehow we have duplicated field.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430853204", "createdAt": "2020-05-27T04:41:05Z", "author": {"login": "xieus"}, "path": "docs/modules/ROOT/pages/mgmt_services/port_manager.adoc", "diffHunk": "@@ -0,0 +1,600 @@\n+= Port Manager Design Specification\n+Piaoping Chen <chenpiaoping@yeah.net>, Liguang Xie <lxie@futurewei.com>\n+v0.1, 2020-04-08\n+:toc: right\n+:imagesdir: ../../images\n+\n+== Overview\n+\n+Port manager is an Alcor microservice which manages all ports of vms, It provides tenant with the CRUD interface of port.\n+When creating a virtual machine, the Rest interface of Port Manager is called to create a port,\n+Port Manager allocate the corresponding resources (such as mac address, ip address) according to the requested configuration, and create a port in the database.\n+If the port binding host,Port Manager will send it to dataplane manager,the configuration of port will eventually be sent to the bound host.\n+Port can be used as a network card for a virtual machine or as an interface for a router.\n+\n+== Service Requirements\n+\n+[arabic]\n+. Support CRUD operations of port.\n+. Support create and update of a list of ports.\n+. Working together with other services including vpc manager, subnet manager, mac manager, security group manager and dataplane manager.\n+. Support asynchronous interaction with other services\n+. Rollback is supported when CRUD operation occurs exception.\n+. Support query operation with any field of port as parameters.\n+\n+\n+== REST APIs\n+\n+=== API Snapshot\n+\n+[width=\"100%\",cols=\"22%,12%,50%,17%\"]\n+|===\n+|*API Name* |*Method* |*Request*|*Response*\n+\n+|Create port\n+|POST\n+|/project/{project_id}/ports\n+|port state\n+<<Create_Port,[sample]>>\n+\n+|Create port bulk\n+|POST\n+|/project/{project_id}/ports/bulk\n+|port state list\n+<<Create_Port_Bulk,[sample]>>\n+\n+|Update port\n+|PUT\n+|/project/{project_id}/ports/{port_id}\n+|port state\n+<<Update_Port,[sample]>>\n+\n+|Delete port\n+|POST\n+|/project/{project_id}/ports/{port_id}\n+|None\n+<<Delete_Port,[sample]>>\n+\n+|Get port\n+|GET\n+|/project/{project_id}/ports/{port_id}\n+|port state\n+<<Get_Port,[sample]>>\n+\n+|List port\n+|GET\n+|/project/{project_id}/ports\n+|port state list\n+<<List_Port,[sample]>>\n+|===\n+\n+=== API Specification\n+\n+anchor:Create_Port[]\n+**(1) Create port**\n+\n+* Method: `POST`\n+\n+* Request: `/project/{project_id}/ports`\n+\n+* Request Parameter: `@PathVariable String projectId`\n+\n+* Response: port state\n+* Normal response codes: 200\n+* Error response codes: 400, 412, 500\n+\n+* Example\n+\n+....\n+Request:\n+http://127.0.0.1:8080/project/3d53801c-32ce-4e97-9572-bb966f4de79c/ports\n+\n+Body:\n+{\n+\t\"port\": {\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f4aa53e\",\n+\t\t\"vpc_id\": \"3d53801c-32ce-4e97-9572-bb966f4d175e\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"fixed_ips\": [{\n+\t\t\t\"subnet_id\": \"3d53801c-32ce-4e97-9572-bb966f4056b\",\n+\t\t\t\"ip_address\": \"11.11.11.100\"\n+\t\t}],\n+\t\t\"security_groups\": [\"3d53801c-32ce-4e97-9572-bb966f4d45ca\"],\n+\t\t\"allowed_address_pairs\": [{\n+\t\t\t\"ip_address\": \"11.11.11.101\",\n+\t\t\t\"mac_address\": \"00:01:6C:06:A6:29\"\n+\t\t}]\n+\t}\n+}\n+\n+Response:\n+{\n+\t\"port\": {\n+\t\t\"fastPath\": false,\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966f4de79c\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f4aa53e\",\n+\t\t\"name\": null,\n+\t\t\"description\": null,\n+\t\t\"vpc_id\": \"3d53801c-32ce-4e97-9572-bb966f4d175e\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"admin_state_up\": false,\n+\t\t\"mac_address\": \"00:01:6C:06:A6:29\",\n+\t\t\"veth_name\": null,\n+\t\t\"fast_path\": false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af2d5f1e2703237730bea53e9e2ff429b1d5ddad"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg1MzM0Mg==", "bodyText": "let us use \"network_id\", instead of vpc_id, to be OpenStack compatible :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430853342", "createdAt": "2020-05-27T04:41:48Z", "author": {"login": "xieus"}, "path": "docs/modules/ROOT/pages/mgmt_services/port_manager.adoc", "diffHunk": "@@ -0,0 +1,600 @@\n+= Port Manager Design Specification\n+Piaoping Chen <chenpiaoping@yeah.net>, Liguang Xie <lxie@futurewei.com>\n+v0.1, 2020-04-08\n+:toc: right\n+:imagesdir: ../../images\n+\n+== Overview\n+\n+Port manager is an Alcor microservice which manages all ports of vms, It provides tenant with the CRUD interface of port.\n+When creating a virtual machine, the Rest interface of Port Manager is called to create a port,\n+Port Manager allocate the corresponding resources (such as mac address, ip address) according to the requested configuration, and create a port in the database.\n+If the port binding host,Port Manager will send it to dataplane manager,the configuration of port will eventually be sent to the bound host.\n+Port can be used as a network card for a virtual machine or as an interface for a router.\n+\n+== Service Requirements\n+\n+[arabic]\n+. Support CRUD operations of port.\n+. Support create and update of a list of ports.\n+. Working together with other services including vpc manager, subnet manager, mac manager, security group manager and dataplane manager.\n+. Support asynchronous interaction with other services\n+. Rollback is supported when CRUD operation occurs exception.\n+. Support query operation with any field of port as parameters.\n+\n+\n+== REST APIs\n+\n+=== API Snapshot\n+\n+[width=\"100%\",cols=\"22%,12%,50%,17%\"]\n+|===\n+|*API Name* |*Method* |*Request*|*Response*\n+\n+|Create port\n+|POST\n+|/project/{project_id}/ports\n+|port state\n+<<Create_Port,[sample]>>\n+\n+|Create port bulk\n+|POST\n+|/project/{project_id}/ports/bulk\n+|port state list\n+<<Create_Port_Bulk,[sample]>>\n+\n+|Update port\n+|PUT\n+|/project/{project_id}/ports/{port_id}\n+|port state\n+<<Update_Port,[sample]>>\n+\n+|Delete port\n+|POST\n+|/project/{project_id}/ports/{port_id}\n+|None\n+<<Delete_Port,[sample]>>\n+\n+|Get port\n+|GET\n+|/project/{project_id}/ports/{port_id}\n+|port state\n+<<Get_Port,[sample]>>\n+\n+|List port\n+|GET\n+|/project/{project_id}/ports\n+|port state list\n+<<List_Port,[sample]>>\n+|===\n+\n+=== API Specification\n+\n+anchor:Create_Port[]\n+**(1) Create port**\n+\n+* Method: `POST`\n+\n+* Request: `/project/{project_id}/ports`\n+\n+* Request Parameter: `@PathVariable String projectId`\n+\n+* Response: port state\n+* Normal response codes: 200\n+* Error response codes: 400, 412, 500\n+\n+* Example\n+\n+....\n+Request:\n+http://127.0.0.1:8080/project/3d53801c-32ce-4e97-9572-bb966f4de79c/ports\n+\n+Body:\n+{\n+\t\"port\": {\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f4aa53e\",\n+\t\t\"vpc_id\": \"3d53801c-32ce-4e97-9572-bb966f4d175e\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"fixed_ips\": [{\n+\t\t\t\"subnet_id\": \"3d53801c-32ce-4e97-9572-bb966f4056b\",\n+\t\t\t\"ip_address\": \"11.11.11.100\"\n+\t\t}],\n+\t\t\"security_groups\": [\"3d53801c-32ce-4e97-9572-bb966f4d45ca\"],\n+\t\t\"allowed_address_pairs\": [{\n+\t\t\t\"ip_address\": \"11.11.11.101\",\n+\t\t\t\"mac_address\": \"00:01:6C:06:A6:29\"\n+\t\t}]\n+\t}\n+}\n+\n+Response:\n+{\n+\t\"port\": {\n+\t\t\"fastPath\": false,\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966f4de79c\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f4aa53e\",\n+\t\t\"name\": null,\n+\t\t\"description\": null,\n+\t\t\"vpc_id\": \"3d53801c-32ce-4e97-9572-bb966f4d175e\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af2d5f1e2703237730bea53e9e2ff429b1d5ddad"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg2MzA4MA==", "bodyText": "For port binding properties, could we add minimum set of validation, for example, only allow specific given value to pass?", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430863080", "createdAt": "2020-05-27T05:22:13Z", "author": {"login": "xieus"}, "path": "docs/modules/ROOT/pages/mgmt_services/port_manager.adoc", "diffHunk": "@@ -0,0 +1,600 @@\n+= Port Manager Design Specification\n+Piaoping Chen <chenpiaoping@yeah.net>, Liguang Xie <lxie@futurewei.com>\n+v0.1, 2020-04-08\n+:toc: right\n+:imagesdir: ../../images\n+\n+== Overview\n+\n+Port manager is an Alcor microservice which manages all ports of vms, It provides tenant with the CRUD interface of port.\n+When creating a virtual machine, the Rest interface of Port Manager is called to create a port,\n+Port Manager allocate the corresponding resources (such as mac address, ip address) according to the requested configuration, and create a port in the database.\n+If the port binding host,Port Manager will send it to dataplane manager,the configuration of port will eventually be sent to the bound host.\n+Port can be used as a network card for a virtual machine or as an interface for a router.\n+\n+== Service Requirements\n+\n+[arabic]\n+. Support CRUD operations of port.\n+. Support create and update of a list of ports.\n+. Working together with other services including vpc manager, subnet manager, mac manager, security group manager and dataplane manager.\n+. Support asynchronous interaction with other services\n+. Rollback is supported when CRUD operation occurs exception.\n+. Support query operation with any field of port as parameters.\n+\n+\n+== REST APIs\n+\n+=== API Snapshot\n+\n+[width=\"100%\",cols=\"22%,12%,50%,17%\"]\n+|===\n+|*API Name* |*Method* |*Request*|*Response*\n+\n+|Create port\n+|POST\n+|/project/{project_id}/ports\n+|port state\n+<<Create_Port,[sample]>>\n+\n+|Create port bulk\n+|POST\n+|/project/{project_id}/ports/bulk\n+|port state list\n+<<Create_Port_Bulk,[sample]>>\n+\n+|Update port\n+|PUT\n+|/project/{project_id}/ports/{port_id}\n+|port state\n+<<Update_Port,[sample]>>\n+\n+|Delete port\n+|POST\n+|/project/{project_id}/ports/{port_id}\n+|None\n+<<Delete_Port,[sample]>>\n+\n+|Get port\n+|GET\n+|/project/{project_id}/ports/{port_id}\n+|port state\n+<<Get_Port,[sample]>>\n+\n+|List port\n+|GET\n+|/project/{project_id}/ports\n+|port state list\n+<<List_Port,[sample]>>\n+|===\n+\n+=== API Specification\n+\n+anchor:Create_Port[]\n+**(1) Create port**\n+\n+* Method: `POST`\n+\n+* Request: `/project/{project_id}/ports`\n+\n+* Request Parameter: `@PathVariable String projectId`\n+\n+* Response: port state\n+* Normal response codes: 200\n+* Error response codes: 400, 412, 500\n+\n+* Example\n+\n+....\n+Request:\n+http://127.0.0.1:8080/project/3d53801c-32ce-4e97-9572-bb966f4de79c/ports\n+\n+Body:\n+{\n+\t\"port\": {\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f4aa53e\",\n+\t\t\"vpc_id\": \"3d53801c-32ce-4e97-9572-bb966f4d175e\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"fixed_ips\": [{\n+\t\t\t\"subnet_id\": \"3d53801c-32ce-4e97-9572-bb966f4056b\",\n+\t\t\t\"ip_address\": \"11.11.11.100\"\n+\t\t}],\n+\t\t\"security_groups\": [\"3d53801c-32ce-4e97-9572-bb966f4d45ca\"],\n+\t\t\"allowed_address_pairs\": [{\n+\t\t\t\"ip_address\": \"11.11.11.101\",\n+\t\t\t\"mac_address\": \"00:01:6C:06:A6:29\"\n+\t\t}]\n+\t}\n+}\n+\n+Response:\n+{\n+\t\"port\": {\n+\t\t\"fastPath\": false,\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966f4de79c\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f4aa53e\",\n+\t\t\"name\": null,\n+\t\t\"description\": null,\n+\t\t\"vpc_id\": \"3d53801c-32ce-4e97-9572-bb966f4d175e\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"admin_state_up\": false,\n+\t\t\"mac_address\": \"00:01:6C:06:A6:29\",\n+\t\t\"veth_name\": null,\n+\t\t\"fast_path\": false,\n+\t\t\"device_id\": null,\n+\t\t\"device_owner\": null,\n+\t\t\"status\": null,\n+\t\t\"fixed_ips\": [{\n+\t\t\t\"subnet_id\": \"3d53801c-32ce-4e97-9572-bb966f4056b\",\n+\t\t\t\"ip_address\": \"11.11.11.100\"\n+\t\t}],\n+\t\t\"allowed_address_pairs\": [{\n+\t\t\t\"ip_address\": \"11.11.11.101\",\n+\t\t\t\"mac_address\": \"00:01:6C:06:A6:29\"\n+\t\t}],\n+\t\t\"extra_dhcp_opts\": null,\n+\t\t\"security_groups\": [\"3d53801c-32ce-4e97-9572-bb966f4d45ca\"],\n+\t\t\"binding:host_id\": null,\n+\t\t\"binding:profile\": null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af2d5f1e2703237730bea53e9e2ff429b1d5ddad"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg2MzQ5OQ==", "bodyText": "We don't have created_at and updated_at value. Refer to latest VPC/Subnet manager implementation, which just added those fields.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430863499", "createdAt": "2020-05-27T05:23:47Z", "author": {"login": "xieus"}, "path": "docs/modules/ROOT/pages/mgmt_services/port_manager.adoc", "diffHunk": "@@ -0,0 +1,600 @@\n+= Port Manager Design Specification\n+Piaoping Chen <chenpiaoping@yeah.net>, Liguang Xie <lxie@futurewei.com>\n+v0.1, 2020-04-08\n+:toc: right\n+:imagesdir: ../../images\n+\n+== Overview\n+\n+Port manager is an Alcor microservice which manages all ports of vms, It provides tenant with the CRUD interface of port.\n+When creating a virtual machine, the Rest interface of Port Manager is called to create a port,\n+Port Manager allocate the corresponding resources (such as mac address, ip address) according to the requested configuration, and create a port in the database.\n+If the port binding host,Port Manager will send it to dataplane manager,the configuration of port will eventually be sent to the bound host.\n+Port can be used as a network card for a virtual machine or as an interface for a router.\n+\n+== Service Requirements\n+\n+[arabic]\n+. Support CRUD operations of port.\n+. Support create and update of a list of ports.\n+. Working together with other services including vpc manager, subnet manager, mac manager, security group manager and dataplane manager.\n+. Support asynchronous interaction with other services\n+. Rollback is supported when CRUD operation occurs exception.\n+. Support query operation with any field of port as parameters.\n+\n+\n+== REST APIs\n+\n+=== API Snapshot\n+\n+[width=\"100%\",cols=\"22%,12%,50%,17%\"]\n+|===\n+|*API Name* |*Method* |*Request*|*Response*\n+\n+|Create port\n+|POST\n+|/project/{project_id}/ports\n+|port state\n+<<Create_Port,[sample]>>\n+\n+|Create port bulk\n+|POST\n+|/project/{project_id}/ports/bulk\n+|port state list\n+<<Create_Port_Bulk,[sample]>>\n+\n+|Update port\n+|PUT\n+|/project/{project_id}/ports/{port_id}\n+|port state\n+<<Update_Port,[sample]>>\n+\n+|Delete port\n+|POST\n+|/project/{project_id}/ports/{port_id}\n+|None\n+<<Delete_Port,[sample]>>\n+\n+|Get port\n+|GET\n+|/project/{project_id}/ports/{port_id}\n+|port state\n+<<Get_Port,[sample]>>\n+\n+|List port\n+|GET\n+|/project/{project_id}/ports\n+|port state list\n+<<List_Port,[sample]>>\n+|===\n+\n+=== API Specification\n+\n+anchor:Create_Port[]\n+**(1) Create port**\n+\n+* Method: `POST`\n+\n+* Request: `/project/{project_id}/ports`\n+\n+* Request Parameter: `@PathVariable String projectId`\n+\n+* Response: port state\n+* Normal response codes: 200\n+* Error response codes: 400, 412, 500\n+\n+* Example\n+\n+....\n+Request:\n+http://127.0.0.1:8080/project/3d53801c-32ce-4e97-9572-bb966f4de79c/ports\n+\n+Body:\n+{\n+\t\"port\": {\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f4aa53e\",\n+\t\t\"vpc_id\": \"3d53801c-32ce-4e97-9572-bb966f4d175e\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"fixed_ips\": [{\n+\t\t\t\"subnet_id\": \"3d53801c-32ce-4e97-9572-bb966f4056b\",\n+\t\t\t\"ip_address\": \"11.11.11.100\"\n+\t\t}],\n+\t\t\"security_groups\": [\"3d53801c-32ce-4e97-9572-bb966f4d45ca\"],\n+\t\t\"allowed_address_pairs\": [{\n+\t\t\t\"ip_address\": \"11.11.11.101\",\n+\t\t\t\"mac_address\": \"00:01:6C:06:A6:29\"\n+\t\t}]\n+\t}\n+}\n+\n+Response:\n+{\n+\t\"port\": {\n+\t\t\"fastPath\": false,\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966f4de79c\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f4aa53e\",\n+\t\t\"name\": null,\n+\t\t\"description\": null,\n+\t\t\"vpc_id\": \"3d53801c-32ce-4e97-9572-bb966f4d175e\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"admin_state_up\": false,\n+\t\t\"mac_address\": \"00:01:6C:06:A6:29\",\n+\t\t\"veth_name\": null,\n+\t\t\"fast_path\": false,\n+\t\t\"device_id\": null,\n+\t\t\"device_owner\": null,\n+\t\t\"status\": null,\n+\t\t\"fixed_ips\": [{\n+\t\t\t\"subnet_id\": \"3d53801c-32ce-4e97-9572-bb966f4056b\",\n+\t\t\t\"ip_address\": \"11.11.11.100\"\n+\t\t}],\n+\t\t\"allowed_address_pairs\": [{\n+\t\t\t\"ip_address\": \"11.11.11.101\",\n+\t\t\t\"mac_address\": \"00:01:6C:06:A6:29\"\n+\t\t}],\n+\t\t\"extra_dhcp_opts\": null,\n+\t\t\"security_groups\": [\"3d53801c-32ce-4e97-9572-bb966f4d45ca\"],\n+\t\t\"binding:host_id\": null,\n+\t\t\"binding:profile\": null,\n+\t\t\"binding:vif_details\": null,\n+\t\t\"binding:vif_type\": null,\n+\t\t\"binding:vnic_type\": null,\n+\t\t\"network_ns\": null,\n+\t\t\"dns_name\": null,\n+\t\t\"dns_assignment\": null\n+\t}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af2d5f1e2703237730bea53e9e2ff429b1d5ddad"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg2NDkzNg==", "bodyText": "Some missing fields to be added:\n\ndns_domain\nip_allocation\nport_security_enabled\nqos_network_policy_id\nqos_policy_id\nrevision_number\nresource_request\ntags\nuplink_status_propagation\nmac_leaning_enabled\n\nReferences: https://docs.openstack.org/api-ref/network/v2/?expanded=show-port-details-detail#show-port-details", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r430864936", "createdAt": "2020-05-27T05:29:23Z", "author": {"login": "xieus"}, "path": "docs/modules/ROOT/pages/mgmt_services/port_manager.adoc", "diffHunk": "@@ -0,0 +1,600 @@\n+= Port Manager Design Specification\n+Piaoping Chen <chenpiaoping@yeah.net>, Liguang Xie <lxie@futurewei.com>\n+v0.1, 2020-04-08\n+:toc: right\n+:imagesdir: ../../images\n+\n+== Overview\n+\n+Port manager is an Alcor microservice which manages all ports of vms, It provides tenant with the CRUD interface of port.\n+When creating a virtual machine, the Rest interface of Port Manager is called to create a port,\n+Port Manager allocate the corresponding resources (such as mac address, ip address) according to the requested configuration, and create a port in the database.\n+If the port binding host,Port Manager will send it to dataplane manager,the configuration of port will eventually be sent to the bound host.\n+Port can be used as a network card for a virtual machine or as an interface for a router.\n+\n+== Service Requirements\n+\n+[arabic]\n+. Support CRUD operations of port.\n+. Support create and update of a list of ports.\n+. Working together with other services including vpc manager, subnet manager, mac manager, security group manager and dataplane manager.\n+. Support asynchronous interaction with other services\n+. Rollback is supported when CRUD operation occurs exception.\n+. Support query operation with any field of port as parameters.\n+\n+\n+== REST APIs\n+\n+=== API Snapshot\n+\n+[width=\"100%\",cols=\"22%,12%,50%,17%\"]\n+|===\n+|*API Name* |*Method* |*Request*|*Response*\n+\n+|Create port\n+|POST\n+|/project/{project_id}/ports\n+|port state\n+<<Create_Port,[sample]>>\n+\n+|Create port bulk\n+|POST\n+|/project/{project_id}/ports/bulk\n+|port state list\n+<<Create_Port_Bulk,[sample]>>\n+\n+|Update port\n+|PUT\n+|/project/{project_id}/ports/{port_id}\n+|port state\n+<<Update_Port,[sample]>>\n+\n+|Delete port\n+|POST\n+|/project/{project_id}/ports/{port_id}\n+|None\n+<<Delete_Port,[sample]>>\n+\n+|Get port\n+|GET\n+|/project/{project_id}/ports/{port_id}\n+|port state\n+<<Get_Port,[sample]>>\n+\n+|List port\n+|GET\n+|/project/{project_id}/ports\n+|port state list\n+<<List_Port,[sample]>>\n+|===\n+\n+=== API Specification\n+\n+anchor:Create_Port[]\n+**(1) Create port**\n+\n+* Method: `POST`\n+\n+* Request: `/project/{project_id}/ports`\n+\n+* Request Parameter: `@PathVariable String projectId`\n+\n+* Response: port state\n+* Normal response codes: 200\n+* Error response codes: 400, 412, 500\n+\n+* Example\n+\n+....\n+Request:\n+http://127.0.0.1:8080/project/3d53801c-32ce-4e97-9572-bb966f4de79c/ports\n+\n+Body:\n+{\n+\t\"port\": {\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f4aa53e\",\n+\t\t\"vpc_id\": \"3d53801c-32ce-4e97-9572-bb966f4d175e\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"fixed_ips\": [{\n+\t\t\t\"subnet_id\": \"3d53801c-32ce-4e97-9572-bb966f4056b\",\n+\t\t\t\"ip_address\": \"11.11.11.100\"\n+\t\t}],\n+\t\t\"security_groups\": [\"3d53801c-32ce-4e97-9572-bb966f4d45ca\"],\n+\t\t\"allowed_address_pairs\": [{\n+\t\t\t\"ip_address\": \"11.11.11.101\",\n+\t\t\t\"mac_address\": \"00:01:6C:06:A6:29\"\n+\t\t}]\n+\t}\n+}\n+\n+Response:\n+{\n+\t\"port\": {\n+\t\t\"fastPath\": false,\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966f4de79c\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f4aa53e\",\n+\t\t\"name\": null,\n+\t\t\"description\": null,\n+\t\t\"vpc_id\": \"3d53801c-32ce-4e97-9572-bb966f4d175e\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"admin_state_up\": false,\n+\t\t\"mac_address\": \"00:01:6C:06:A6:29\",\n+\t\t\"veth_name\": null,\n+\t\t\"fast_path\": false,\n+\t\t\"device_id\": null,\n+\t\t\"device_owner\": null,\n+\t\t\"status\": null,\n+\t\t\"fixed_ips\": [{\n+\t\t\t\"subnet_id\": \"3d53801c-32ce-4e97-9572-bb966f4056b\",\n+\t\t\t\"ip_address\": \"11.11.11.100\"\n+\t\t}],\n+\t\t\"allowed_address_pairs\": [{\n+\t\t\t\"ip_address\": \"11.11.11.101\",\n+\t\t\t\"mac_address\": \"00:01:6C:06:A6:29\"\n+\t\t}],\n+\t\t\"extra_dhcp_opts\": null,\n+\t\t\"security_groups\": [\"3d53801c-32ce-4e97-9572-bb966f4d45ca\"],\n+\t\t\"binding:host_id\": null,\n+\t\t\"binding:profile\": null,\n+\t\t\"binding:vif_details\": null,\n+\t\t\"binding:vif_type\": null,\n+\t\t\"binding:vnic_type\": null,\n+\t\t\"network_ns\": null,\n+\t\t\"dns_name\": null,\n+\t\t\"dns_assignment\": null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af2d5f1e2703237730bea53e9e2ff429b1d5ddad"}, "originalPosition": 144}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af2d5f1e2703237730bea53e9e2ff429b1d5ddad", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/af2d5f1e2703237730bea53e9e2ff429b1d5ddad", "committedDate": "2020-05-27T03:55:01Z", "message": "add API specs and basic design for Port Manager"}, "afterCommit": {"oid": "91932144cbb23bb6f1854a0f5d15ea5e06827d84", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/91932144cbb23bb6f1854a0f5d15ea5e06827d84", "committedDate": "2020-06-02T12:30:48Z", "message": "port manager interact with dataplane manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93a59b92e1780501be96c5c7511f1fafd6e76a23", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/93a59b92e1780501be96c5c7511f1fafd6e76a23", "committedDate": "2020-06-03T01:51:22Z", "message": "turn on all UTs of port-manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "737196623b1829d36a78ec24712b6daef1f8b639", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/737196623b1829d36a78ec24712b6daef1f8b639", "committedDate": "2020-06-03T01:51:24Z", "message": "batch operations are supported for the creation and update of port"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c68200cd01d7da17f76ea9e3cde673b89900e0c7", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c68200cd01d7da17f76ea9e3cde673b89900e0c7", "committedDate": "2020-06-03T01:51:27Z", "message": "rebase from master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a20ff164d9b9089670b10e4453075c7ae9964b2d", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a20ff164d9b9089670b10e4453075c7ae9964b2d", "committedDate": "2020-06-03T01:51:27Z", "message": "add API specs and basic design for Port Manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5db1d48ca913008d235046eb6a1d0e0d6eb17098", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/5db1d48ca913008d235046eb6a1d0e0d6eb17098", "committedDate": "2020-06-03T01:51:30Z", "message": "add some missing fileds to PortState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80730b0ee2e310f2eb591ba8aaf1360cf04a4e8a", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/80730b0ee2e310f2eb591ba8aaf1360cf04a4e8a", "committedDate": "2020-06-03T01:51:32Z", "message": "rebase from master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d406a27e6c3c092154f8726100a75ed42b48d711", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d406a27e6c3c092154f8726100a75ed42b48d711", "committedDate": "2020-06-03T01:51:37Z", "message": "port manager interact with dataplane manager"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91932144cbb23bb6f1854a0f5d15ea5e06827d84", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/91932144cbb23bb6f1854a0f5d15ea5e06827d84", "committedDate": "2020-06-02T12:30:48Z", "message": "port manager interact with dataplane manager"}, "afterCommit": {"oid": "d8f1bbe0f7a33a1183e3da7c047d23a25a93350f", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d8f1bbe0f7a33a1183e3da7c047d23a25a93350f", "committedDate": "2020-06-03T03:37:33Z", "message": "add security group test cases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d8f1bbe0f7a33a1183e3da7c047d23a25a93350f", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d8f1bbe0f7a33a1183e3da7c047d23a25a93350f", "committedDate": "2020-06-03T03:37:33Z", "message": "add security group test cases"}, "afterCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/80608d29d4f49608b260f636f74f05074cb717c9", "committedDate": "2020-06-03T03:56:49Z", "message": "add security group test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/80608d29d4f49608b260f636f74f05074cb717c9", "committedDate": "2020-06-03T03:56:49Z", "message": "add security group test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMjM2MDEy", "url": "https://github.com/futurewei-cloud/alcor/pull/197#pullrequestreview-423236012", "createdAt": "2020-06-03T05:51:33Z", "commit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNTo1MTozNFrOGeM84g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNjowODowMlrOGeNRUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMjY1OA==", "bodyText": "\".which\" => \", which\"", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434322658", "createdAt": "2020-06-03T05:51:34Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/executor/AsyncExecutor.java", "diffHunk": "@@ -44,6 +44,15 @@ public AsyncExecutor() {\n         return CompletableFuture.supplyAsync(supplier);\n     }\n \n+    /**\n+     * Execute the function(first parameter) asynchronously.which has one input parameter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyNDg0NA==", "bodyText": "\".which\" => \", which\"", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434324844", "createdAt": "2020-06-03T05:58:24Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/executor/AsyncExecutor.java", "diffHunk": "@@ -58,13 +67,146 @@ public AsyncExecutor() {\n         return future;\n     }\n \n-    public void joinAll() throws CompletionException {\n+    /**\n+     * Execute the function(first parameter) asynchronously.which has one input parameter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyNTA0NQ==", "bodyText": "Is this comment supposed to be the same as \"runAsync\"?", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434325045", "createdAt": "2020-06-03T05:59:00Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/executor/AsyncExecutor.java", "diffHunk": "@@ -58,13 +67,146 @@ public AsyncExecutor() {\n         return future;\n     }\n \n-    public void joinAll() throws CompletionException {\n+    /**\n+     * Execute the function(first parameter) asynchronously.which has one input parameter", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyNDg0NA=="}, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyNzIyMQ==", "bodyText": "Okay. We definitely need comments on each of these methods.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434327221", "createdAt": "2020-06-03T06:05:54Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/executor/AsyncExecutor.java", "diffHunk": "@@ -58,13 +67,146 @@ public AsyncExecutor() {\n         return future;\n     }\n \n-    public void joinAll() throws CompletionException {\n+    /**\n+     * Execute the function(first parameter) asynchronously.which has one input parameter\n+     * and one return value. The type of input parameter is Object, and the return value is R.\n+     * @param fun1 The function to be executed\n+     * @param fun2 The function to be executed\n+     * @param arg1 The parameter of the function being executed\n+     * @param <R> The parameter of the function being executed\n+     * @param <U> The type of return value of the function being executed\n+     * @return CompletableFuture\n+     * @throws CompletionException\n+     */\n+    public <R, U>CompletableFuture runAsyncThenApply(AsyncFunction<Object, R> fun1, AsyncFunction<Object, U> fun2, Object arg1) throws CompletionException {\n+        CompletableFuture<U> future = CompletableFuture.supplyAsync(() -> {\n+            try {\n+                return fun1.apply(arg1);\n+            } catch (Exception e) {\n+                throw new CompletionException(e);\n+            }\n+        }, executor).thenApply((ret) -> {\n+            try {\n+                return fun2.apply(ret);\n+            } catch (Exception e) {\n+                throw new CompletionException(e);\n+            }\n+        });\n+\n+        futures.add(future);\n+\n+        return future;\n+    }\n+\n+    public <R, U>CompletableFuture runAsyncThenApply(AsyncFunction<Object, R> fun1, AsyncFunction<Object, U> fun2, Object arg1, Object arg2) throws CompletionException {\n+        CompletableFuture<U> future = CompletableFuture.supplyAsync(() -> {\n+            try {\n+                return fun1.apply(arg1);\n+            } catch (Exception e) {\n+                throw new CompletionException(e);\n+            }\n+        }, executor).thenApply((ret) -> {\n+            try {\n+                return fun2.apply(arg2);\n+            } catch (Exception e) {\n+                throw new CompletionException(e);\n+            }\n+        });\n+\n+        futures.add(future);\n+\n+        return future;\n+    }\n+\n+    public <R, U>CompletableFuture runAsyncThenAccept(AsyncFunction<Object, R> fun1, AsyncFunction<Object, U> fun2, Object arg1) throws CompletionException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyNzg5MQ==", "bodyText": "Move util class from port manager to common is great. I remember previous attempt of moving this caused some UT failure or so.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434327891", "createdAt": "2020-06-03T06:08:02Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/utils/SpringContextUtil.java", "diffHunk": "@@ -13,7 +13,7 @@\n         See the License for the specific language governing permissions and\n         limitations under the License.\n */\n-package com.futurewei.alcor.portmanager.util;\n+package com.futurewei.alcor.common.utils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1857c1695fd45fb12f0f3ea2ee6a846e10d777e2", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/1857c1695fd45fb12f0f3ea2ee6a846e10d777e2", "committedDate": "2020-06-03T07:00:37Z", "message": "add some comments for methods of AsyncExecutor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMjU2ODI1", "url": "https://github.com/futurewei-cloud/alcor/pull/197#pullrequestreview-423256825", "createdAt": "2020-06-03T06:38:50Z", "commit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNjozODo1MFrOGeN-EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNjo1OTowNlrOGeOgfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMzOTM0NQ==", "bodyText": "Just checked SGM PR #208. Didn't find these entity classes there.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434339345", "createdAt": "2020-06-03T06:38:50Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/securitygroup/SecurityGroupEntity.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+        http://www.apache.org/licenses/LICENSE-2.0\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.web.entity.securitygroup;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.futurewei.alcor.common.entity.CustomerResource;\n+\n+import java.util.List;\n+\n+public class SecurityGroupEntity extends CustomerResource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MDUxNQ==", "bodyText": "Like it!", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434340515", "createdAt": "2020-06-03T06:41:38Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/repo/PortRepository.java", "diffHunk": "@@ -61,6 +63,15 @@ public void addItem(PortEntity portEntity) throws CacheException {\n         cache.put(portEntity.getId(), portEntity);\n     }\n \n+    //@Override\n+    public void addItems(List<PortEntity> portEntities) throws CacheException {\n+        Map<String, PortEntity> portEntityMap = portEntities\n+                .stream()\n+                .collect(Collectors.toMap(PortEntity::getId, Function.identity()));\n+\n+        cache.putAll(portEntityMap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0MzI4OA==", "bodyText": "Issue\nThe buildGoalState method will be used for constructing the message sent from DPM to ACA. I think port manager needs to call REST API of DPM.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434343288", "createdAt": "2020-06-03T06:48:13Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/implement/PortServiceImpl.java", "diffHunk": "@@ -94,94 +95,167 @@ private void addPortToHost(String hostId) {\n         //FIXME: Add port to Host\n     }\n \n+    private void createPortAsync(PortEntity portEntity, AsyncExecutor executor, Stack<Rollback> rollbacks) throws Exception {\n+        //Verify VPC ID\n+        VpcManagerProxy vpcManagerProxy = new VpcManagerProxy(rollbacks);\n+        executor.runAsync(vpcManagerProxy::getVpcEntity, portEntity);\n+\n+        //Allocate IP address\n+        IpManagerProxy ipManagerProxy = new IpManagerProxy(rollbacks, portEntity.getProjectId());\n+        SubnetManagerProxy subnetManagerProxy = new SubnetManagerProxy(portEntity.getProjectId());\n+        if (portEntity.getFixedIps() != null) {\n+            for (PortEntity.FixedIp fixedIp: portEntity.getFixedIps()) {\n+                executor.runAsyncThenAccept(subnetManagerProxy::getSubnetEntity,\n+                        ipManagerProxy::allocateFixedIpAddress,\n+                        fixedIp, fixedIp);\n+            }\n+        } else {\n+            executor.runAsyncThenApply(ipManagerProxy::allocateRandomIpAddress,\n+                    subnetManagerProxy::getSubnetEntity,\n+                    portEntity);\n+        }\n+\n+        //Generate uuid for port\n+        if (portEntity.getId() == null) {\n+            portEntity.setId(UUID.randomUUID().toString());\n+        }\n+\n+        //Allocate MAC address\n+        MacManagerProxy macManagerProxy = new MacManagerProxy(rollbacks);\n+        if (portEntity.getMacAddress() == null) {\n+            executor.runAsync(macManagerProxy::allocateRandomMacAddress, portEntity);\n+        } else {\n+            executor.runAsync(macManagerProxy::allocateFixedMacAddress, portEntity);\n+        }\n+\n+        //Verify and bind security group\n+        SecurityGroupManagerProxy securityGroupManagerProxy = new SecurityGroupManagerProxy(portEntity.getProjectId());\n+        if (portEntity.getSecurityGroups() != null) {\n+            for (String securityGroupId: portEntity.getSecurityGroups()) {\n+                executor.runAsync(securityGroupManagerProxy::getSecurityGroupEntity, securityGroupId);\n+                executor.runAsync(securityGroupManagerProxy::bindSecurityGroup, portEntity);\n+            }\n+        } else {\n+            //Do we need to bind default security group? No, we don't\n+            executor.runAsync(securityGroupManagerProxy::getDefaultSecurityGroupEntity, null);\n+        }\n+\n+        //Get subnet route\n+        if (portEntity.getFixedIps() != null) {\n+            RouteManagerProxy routeManagerProxy = new RouteManagerProxy(rollbacks);\n+\n+            for (PortEntity.FixedIp fixedIp: portEntity.getFixedIps()) {\n+                executor.runAsync(routeManagerProxy::getRouteBySubnetId, fixedIp.getSubnetId());\n+            }\n+        }\n+\n+        //Verify Binding Host ID\n+        if (portEntity.getBindingHostId() != null) {\n+            NodeManagerProxy nodeManagerProxy = new NodeManagerProxy(rollbacks);\n+            executor.runAsync(nodeManagerProxy::getNodeInfo, portEntity.getBindingHostId());\n+        }\n+    }\n+\n+    private void exceptionHandle(AsyncExecutor executor, Stack<Rollback> rollbacks, Exception e) throws Exception {\n+        /**\n+         When an exception occurs, we need to roll back all asynchronous operations,\n+         and some asynchronous may not be finished yet.if we roll back at this time,\n+         they may not be completed until the rollback operation is completed.\n+         as a result, they cannot be rolled back.\n+         */\n+        executor.waitAll();\n+        rollBackAllOperations(rollbacks);\n+        throw e;\n+    }\n+\n     /**\n      * Create a port, and call the interfaces of each micro-service according to the\n      * configuration of the port to create various required resources for the port.\n      * If any exception occurs in the added process, we need to roll back\n      * the resource allocated from each micro-service.\n      * @param projectId Project the port belongs to\n      * @param portWebJson Port configuration\n-     * @return PortStateJson\n+     * @return PortWebJson\n      * @throws Exception Various exceptions that may occur during the create process\n      */\n     @Override\n-    public PortWebJson createPortState(String projectId, PortWebJson portWebJson) throws Exception {\n-        LOG.debug(\"Create port state, projectId: {}, PortStateJson: {}\", projectId, portWebJson);\n+    public PortWebJson createPort(String projectId, PortWebJson portWebJson) throws Exception {\n+        LOG.debug(\"Create port state, projectId: {}, PortWebJson: {}\", projectId, portWebJson);\n \n-        Stack<PortStateRollback> rollbacks = new Stack<>();\n+        Stack<Rollback> rollbacks = new Stack<>();\n         AsyncExecutor executor = new AsyncExecutor();\n \n         PortEntity portEntity = portWebJson.getPortEntity();\n         portEntity.setProjectId(projectId);\n \n         try {\n-            //Verify VPC ID\n-            VpcManagerProxy vpcManagerProxy = new VpcManagerProxy(rollbacks);\n-            executor.runAsync(vpcManagerProxy::verifyVpc, portEntity);\n-\n-            IpManagerProxy ipManagerProxy = new IpManagerProxy(rollbacks, portEntity.getProjectId());\n-            if (portEntity.getFixedIps() == null) {\n-                executor.runAsync(ipManagerProxy::allocateRandomIpAddress, portEntity);\n-            } else {\n-                executor.runAsync(ipManagerProxy::allocateFixedIpAddress, portEntity.getFixedIps());\n-            }\n+            createPortAsync(portEntity, executor, rollbacks);\n \n-            //Generate uuid for port\n-            if (portEntity.getId() == null) {\n-                portEntity.setId(UUID.randomUUID().toString());\n-            }\n-\n-            MacManagerProxy macManagerProxy = new MacManagerProxy(rollbacks);\n-            if (portEntity.getMacAddress() == null) {\n-                executor.runAsync(macManagerProxy::allocateRandomMacAddress, portEntity);\n-            } else {\n-                executor.runAsync(macManagerProxy::allocateFixedMacAddress, portEntity);\n-            }\n-\n-            //Verify security group\n+            //Wait for all async functions to finish\n+            List<Object> entities = executor.joinAll();\n+            entities.add(portEntity);\n \n-            //Verify Binding Host ID\n+            //Build GoalState and Send it to DPM\n             if (portEntity.getBindingHostId() != null) {\n-                NodeManagerProxy nodeManagerProxy = new NodeManagerProxy(rollbacks);\n-                nodeManagerProxy.verifyHost(portEntity.getBindingHostId());\n+                Goalstate.GoalState goalState = GoalStateUtil.buildGoalState(entities, Common.OperationType.CREATE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0NDM2MA==", "bodyText": "As mentioned previously, Port Manager shouldn't use any class under alcor.schema.*", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434344360", "createdAt": "2020-06-03T06:50:45Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/util/GoalStateUtil.java", "diffHunk": "@@ -0,0 +1,368 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.portmanager.util;\n+\n+import com.futurewei.alcor.portmanager.exception.*;\n+import com.futurewei.alcor.schema.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0NTc1NQ==", "bodyText": "Remove this dependency.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434345755", "createdAt": "2020-06-03T06:53:54Z", "author": {"login": "xieus"}, "path": "web/pom.xml", "diffHunk": "@@ -47,6 +47,13 @@\n             <scope>compile</scope>\n         </dependency>\n \n+        <dependency>\n+            <groupId>com.futurewei.alcor</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0NjUzNA==", "bodyText": "I would recommend to use the following way: Externally we call it network_id, but internally we call it vpcId. This is the way how VPC/Subnet Manager handles the inconsistency.\n@JsonProperty(\"network_id\")\nprivate String vpcId;", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434346534", "createdAt": "2020-06-03T06:55:40Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/port/PortEntity.java", "diffHunk": "@@ -24,8 +24,8 @@\n \n @Data\n public class PortEntity extends CustomerResource {\n-    @JsonProperty(\"vpc_id\")\n-    private String vpcId;\n+    @JsonProperty(\"network_id\")\n+    private String networkId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0NzAyOQ==", "bodyText": "If this PR checked in first, I will assume that SGM will use the same set of entity classes from alcor/web/securitygroup/", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434347029", "createdAt": "2020-06-03T06:56:43Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/securitygroup/SecurityGroupEntity.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+        http://www.apache.org/licenses/LICENSE-2.0\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.web.entity.securitygroup;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.futurewei.alcor.common.entity.CustomerResource;\n+\n+import java.util.List;\n+\n+public class SecurityGroupEntity extends CustomerResource {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMzOTM0NQ=="}, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM0ODE1Nw==", "bodyText": "Like you moved restclient to the AlcorCommon. This is awesome!", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434348157", "createdAt": "2020-06-03T06:59:06Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/restclient/IpManagerRestClient.java", "diffHunk": "@@ -13,7 +13,7 @@\n         See the License for the specific language governing permissions and\n         limitations under the License.\n */\n-package com.futurewei.alcor.portmanager.restclient;\n+package com.futurewei.alcor.web.restclient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80608d29d4f49608b260f636f74f05074cb717c9"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMjcwODc5", "url": "https://github.com/futurewei-cloud/alcor/pull/197#pullrequestreview-423270879", "createdAt": "2020-06-03T07:04:02Z", "commit": {"oid": "1857c1695fd45fb12f0f3ea2ee6a846e10d777e2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzowNDowMlrOGeOpTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzowNDowMlrOGeOpTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM1MDQxMg==", "bodyText": "Nice comments!", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434350412", "createdAt": "2020-06-03T07:04:02Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/executor/AsyncExecutor.java", "diffHunk": "@@ -45,7 +45,7 @@ public AsyncExecutor() {\n     }\n \n     /**\n-     * Execute the function(first parameter) asynchronously.which has one input parameter\n+     * Execute the function(first parameter) asynchronously which has one input parameter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1857c1695fd45fb12f0f3ea2ee6a846e10d777e2"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d6fe808558f4bbcd207612939cf31e6c9dbdb66", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3d6fe808558f4bbcd207612939cf31e6c9dbdb66", "committedDate": "2020-06-03T07:23:26Z", "message": "modify some comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52dca37ba2fe03e883212eb2843d853412c48743", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/52dca37ba2fe03e883212eb2843d853412c48743", "committedDate": "2020-06-03T08:01:10Z", "message": "rename networkId to vpcId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ce0658abac0925e94c1c3369a1c5d7e5bdba82a", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/6ce0658abac0925e94c1c3369a1c5d7e5bdba82a", "committedDate": "2020-06-03T08:16:08Z", "message": "rename fastPath to fast_path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da743c06ee0ae6dd23cbcb5faa197c6fb5cdc806", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/da743c06ee0ae6dd23cbcb5faa197c6fb5cdc806", "committedDate": "2020-06-03T10:36:12Z", "message": "add some update port UTs for port-manager"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNzUwMzU4", "url": "https://github.com/futurewei-cloud/alcor/pull/197#pullrequestreview-423750358", "createdAt": "2020-06-03T16:53:55Z", "commit": {"oid": "da743c06ee0ae6dd23cbcb5faa197c6fb5cdc806"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjo1Mzo1NVrOGek7kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjo1Mzo1NVrOGek7kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxNTUzNw==", "bodyText": "Good call to comment out IPv6 allocation for now. Let us revisit IPv6 allocation when other components are more ready. Created a tracking issue in case we forget.\nIssue #227", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434715537", "createdAt": "2020-06-03T16:53:55Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/proxy/IpManagerProxy.java", "diffHunk": "@@ -104,19 +118,37 @@ private void addIpAddrRollback(AbstractIpAddrRollback rollback, IpAddrRequest ip\n         addIpAddrRollback(new AllocateIpAddrRollback(ipManagerRestClient), ipv4Addr);\n \n         //Allocate a random ipv6 address", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da743c06ee0ae6dd23cbcb5faa197c6fb5cdc806"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNzUxMzUz", "url": "https://github.com/futurewei-cloud/alcor/pull/197#pullrequestreview-423751353", "createdAt": "2020-06-03T16:55:13Z", "commit": {"oid": "da743c06ee0ae6dd23cbcb5faa197c6fb5cdc806"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjo1NToxNFrOGek-rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjo1NToxNFrOGek-rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDcxNjMzMw==", "bodyText": "Minor comment: rename it to genereateMacState.", "url": "https://github.com/futurewei-cloud/alcor/pull/197#discussion_r434716333", "createdAt": "2020-06-03T16:55:14Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/proxy/MacManagerProxy.java", "diffHunk": "@@ -42,6 +43,16 @@ private void addMacAddrRollback(AbstractMacAddrRollback rollback, MacState macSt\n         rollbacks.push(rollback);\n     }\n \n+    private MacState newMacState(String projectId, String vpcId, String portId, String macAddress) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da743c06ee0ae6dd23cbcb5faa197c6fb5cdc806"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzOTQ3NDcy", "url": "https://github.com/futurewei-cloud/alcor/pull/197#pullrequestreview-423947472", "createdAt": "2020-06-03T21:23:19Z", "commit": {"oid": "da743c06ee0ae6dd23cbcb5faa197c6fb5cdc806"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2466, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}