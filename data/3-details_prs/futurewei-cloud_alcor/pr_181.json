{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMTQ2NzU5", "number": 181, "title": "[Vpc/Subnet Manager] API Standardization, and Segment APIs", "bodyText": "Code refactor and new features included in this PR:\n\nStandardized VPC Manager and Subnet Manager with their properties and APIs\nAdd Segment module and new UTs\nAdd SegmentRange module and new UTs\nAdd NetworkVlanType, NetworkVxlanType, NetworkGreType entities in db\nImplement Vlan , Vxlan and GRE module in Segment\nAdd design doc draft for VPC and Subnet manager\nAdd new APIs in route manager", "createdAt": "2020-04-30T05:22:56Z", "url": "https://github.com/futurewei-cloud/alcor/pull/181", "merged": true, "mergeCommit": {"oid": "f88a67f81fc322698400dd82701d02f7b430d9e1"}, "closed": true, "closedAt": "2020-05-13T07:51:53Z", "author": {"login": "kevin-zhonghao"}, "timelineItems": {"totalCount": 136, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaRYmRAH2gAyNDExMTQ2NzU5OmY1MmIyNWRjZTZmMzU3ZjY2OTMxYzEyZmU3NTM4MWVhYzkyYzg5MzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcg0DRpAFqTQxMDY3MTU1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f52b25dce6f357f66931c12fe75381eac92c8930", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f52b25dce6f357f66931c12fe75381eac92c8930", "committedDate": "2020-04-23T00:03:22Z", "message": "Merge pull request #27 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7e9d3b4d20537b6fafd7072215fdf12ea615b2b", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e7e9d3b4d20537b6fafd7072215fdf12ea615b2b", "committedDate": "2020-04-23T18:02:38Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbebd12fcebb3a31e6869c3a128864c96779d33e", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/bbebd12fcebb3a31e6869c3a128864c96779d33e", "committedDate": "2020-04-23T18:05:22Z", "message": "Merge pull request #28 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0adef992724bd6938f925e28b255c2283e106c7a", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0adef992724bd6938f925e28b255c2283e106c7a", "committedDate": "2020-04-23T18:08:42Z", "message": "Merge pull request #29 from kevin-zhonghao/master\n\nvpc manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f17b628b38eb670bf31a23d48671f60b1701aeb", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/2f17b628b38eb670bf31a23d48671f60b1701aeb", "committedDate": "2020-04-23T18:20:43Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39450ae0739d75c12ca6d81e21bd679e80d66f67", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/39450ae0739d75c12ca6d81e21bd679e80d66f67", "committedDate": "2020-04-23T18:22:23Z", "message": "Merge pull request #30 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "245cf61dd61ac7e7fb74316cad6f6594bb02c7c7", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/245cf61dd61ac7e7fb74316cad6f6594bb02c7c7", "committedDate": "2020-04-23T18:28:40Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76549a3cbcd78a9fa7daac2ba31cc51bbb7cce4e", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/76549a3cbcd78a9fa7daac2ba31cc51bbb7cce4e", "committedDate": "2020-04-23T18:38:20Z", "message": "Merge pull request #32 from futurewei-cloud/master\n\n[Micro-service] Subnet Manager - implementation and deployment in K8s\u2026"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d477061d8090f7f6ca6b01abb5aafd2dc5d5de62", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d477061d8090f7f6ca6b01abb5aafd2dc5d5de62", "committedDate": "2020-04-30T05:10:09Z", "message": "Merge pull request #1 from futurewei-cloud/master\n\nSync"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8759aff513dcdbecca293536acd59a3325b70442", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/8759aff513dcdbecca293536acd59a3325b70442", "committedDate": "2020-04-30T05:11:36Z", "message": "vpc manager and subnet manager refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "256a119a6358a6558fb5cc0fddddee337d7577ed", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/256a119a6358a6558fb5cc0fddddee337d7577ed", "committedDate": "2020-04-30T05:12:13Z", "message": "Merge branch 'master' of https://github.com/kevin-zhonghao/alcor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzNDM5MTQ4", "url": "https://github.com/futurewei-cloud/alcor/pull/181#pullrequestreview-403439148", "createdAt": "2020-04-30T11:39:45Z", "commit": {"oid": "256a119a6358a6558fb5cc0fddddee337d7577ed"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTozOTo0NlrOGOlebg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMTo0NDo0MFrOGOlnmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0NzI0Ng==", "bodyText": "Should we use enum instead?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r417947246", "createdAt": "2020-04-30T11:39:46Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/constants/Ipv6AddressMode.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package com.futurewei.alcor.common.constants;\n+\n+public class Ipv6AddressMode {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "256a119a6358a6558fb5cc0fddddee337d7577ed"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0ODc5Mg==", "bodyText": "@kevin-zhonghao Do we want to split it to web object and db object for subnet?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r417948792", "createdAt": "2020-04-30T11:43:04Z", "author": {"login": "xieus"}, "path": "services/subnet_manager/src/main/java/com/futurewei/alcor/subnet/dao/SubnetRepository.java", "diffHunk": "@@ -33,21 +33,21 @@\n \n @Repository\n @ComponentScan(value=\"com.futurewei.alcor.common.db\")\n-public class SubnetRepository implements ICacheRepository<SubnetState> {\n+public class SubnetRepository implements ICacheRepository<SubnetWebObject> {\n \n     private static final Logger logger = LoggerFactory.getLogger();\n \n     private static final String KEY = \"SubnetState\";\n \n-    public ICache<String, SubnetState> getCache() {\n+    public ICache<String, SubnetWebObject> getCache() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "256a119a6358a6558fb5cc0fddddee337d7577ed"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzk0OTU5NQ==", "bodyText": "This is an interesting class. How will it be used?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r417949595", "createdAt": "2020-04-30T11:44:40Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/AllocationPool.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.futurewei.alcor.web.entity;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.Data;\n+\n+@Data\n+public class AllocationPool {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "256a119a6358a6558fb5cc0fddddee337d7577ed"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cda453bcfa9208c826597770122b356117f019fe", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/cda453bcfa9208c826597770122b356117f019fe", "committedDate": "2020-05-01T06:27:28Z", "message": "Add Segment module and new UTs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42e6fec6b0e456c1efb1aae4bfa869c0ed0abf7c", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/42e6fec6b0e456c1efb1aae4bfa869c0ed0abf7c", "committedDate": "2020-05-04T17:09:08Z", "message": "add segmentRange module and UTs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e892cfb84923079b1e10d38cbfb1c1422dee61f7", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e892cfb84923079b1e10d38cbfb1c1422dee61f7", "committedDate": "2020-05-04T19:35:03Z", "message": "Merge branch 'master' of https://github.com/kevin-zhonghao/alcor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MzI5ODgz", "url": "https://github.com/futurewei-cloud/alcor/pull/181#pullrequestreview-405329883", "createdAt": "2020-05-04T20:39:54Z", "commit": {"oid": "e892cfb84923079b1e10d38cbfb1c1422dee61f7"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDozOTo1NFrOGQRUxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDo0NjoxN1rOGQRh4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxNDI0NA==", "bodyText": "Like switching to enum here.\nBut what if networkType == null..", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r419714244", "createdAt": "2020-05-04T20:39:54Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/SegmentController.java", "diffHunk": "@@ -72,6 +73,16 @@ public SegmentWebResponseJson createSegment(@PathVariable String projectid, @Req\n             RestPreconditionsUtil.verifyResourceNotNull(segmentWebResponseObject);\n             RestPreconditionsUtil.populateResourceProjectId(segmentWebResponseObject, projectid);\n \n+            // verify network type\n+            String networkType = segmentWebRequestObject.getNetworkType();\n+            if (networkType.equals(NetworkTypeEnum.VXLAN)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e892cfb84923079b1e10d38cbfb1c1422dee61f7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxNTAwMw==", "bodyText": "I think it is time for us to use standard REST error code that is compatible to OpenStack.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r419715003", "createdAt": "2020-05-04T20:41:23Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/SegmentRangeController.java", "diffHunk": "@@ -0,0 +1,174 @@\n+package com.futurewei.alcor.vpcmanager.controller;\n+\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.common.exception.ParameterNullOrEmptyException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourceNullException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.vpcmanager.service.SegmentRangeDatabaseService;\n+import com.futurewei.alcor.vpcmanager.utils.RestPreconditionsUtil;\n+import com.futurewei.alcor.web.entity.*;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SegmentRangeController {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    private SegmentRangeDatabaseService segmentRangeDatabaseService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/network_segment_ranges/{network_segment_range_id}\", \"/v4/{projectid}/network_segment_ranges/{network_segment_range_id}\"})\n+    public NetworkSegmentRangeWebResponseJson getSegmentRangeBySegmentRangeId(@PathVariable String projectid, @PathVariable String network_segment_range_id) throws Exception {\n+\n+        NetworkSegmentRangeWebResponseObject segmentRangeWebResponseObject = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(network_segment_range_id);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            segmentRangeWebResponseObject = this.segmentRangeDatabaseService.getBySegmentRangeId(network_segment_range_id);\n+        } catch (ParameterNullOrEmptyException e) {\n+            //TODO: REST error code", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e892cfb84923079b1e10d38cbfb1c1422dee61f7"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxNjM3Mg==", "bodyText": "Thanks for adding those new entity classes in AlcorWeb.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r419716372", "createdAt": "2020-05-04T20:44:00Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/NetworkSegmentRangeWebRequestJson.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.futurewei.alcor.web.entity;\n+\n+import lombok.Data;\n+\n+import java.util.UUID;\n+\n+@Data\n+public class NetworkSegmentRangeWebRequestJson {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e892cfb84923079b1e10d38cbfb1c1422dee61f7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxNjY3Mg==", "bodyText": "should it be a child class of CustomerResource?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r419716672", "createdAt": "2020-05-04T20:44:33Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/NetworkSegmentRangeWebRequestJson.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package com.futurewei.alcor.web.entity;\n+\n+import lombok.Data;\n+\n+import java.util.UUID;\n+\n+@Data\n+public class NetworkSegmentRangeWebRequestJson {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxNjM3Mg=="}, "originalCommit": {"oid": "e892cfb84923079b1e10d38cbfb1c1422dee61f7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxNzYwMA==", "bodyText": "This class is for VxLan, so the id should be \"vxlan_id\", instead of \"vlan_id\" :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r419717600", "createdAt": "2020-05-04T20:46:17Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/NetworkVxlanType.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package com.futurewei.alcor.web.entity;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.Data;\n+import org.springframework.data.annotation.CreatedDate;\n+import org.springframework.data.annotation.LastModifiedDate;\n+\n+@Data\n+public class NetworkVxlanType {\n+\n+    @JsonProperty(\"id\")\n+    private String id;\n+\n+    @JsonProperty(\"name\")\n+    private String name;\n+\n+    @JsonProperty(\"mtu\")\n+    private String mtu;\n+\n+    @JsonProperty(\"vlan_id\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e892cfb84923079b1e10d38cbfb1c1422dee61f7"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3df3d9cd62a784a14158094f0e1cbd237a437aec", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3df3d9cd62a784a14158094f0e1cbd237a437aec", "committedDate": "2020-05-05T02:52:46Z", "message": "Outline VPC/Subnet manager design docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTE0ODUy", "url": "https://github.com/futurewei-cloud/alcor/pull/181#pullrequestreview-405514852", "createdAt": "2020-05-05T06:16:03Z", "commit": {"oid": "3df3d9cd62a784a14158094f0e1cbd237a437aec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjoxNjowM1rOGQbs5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjoxNjowM1rOGQbs5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4NDI2Mw==", "bodyText": "This is the vpc state retrieved from database, meaning that it is not the \"in\"VpcState any more. Let us use a new variable name, like \"persisted\"VpcState, or \"db\"VpcState, or something else.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r419884263", "createdAt": "2020-05-05T06:16:03Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/DebugVpcController.java", "diffHunk": "@@ -92,25 +91,26 @@ public Map getVpcCount() throws CacheException {\n             method = POST,\n             value = {\"/debug/project/{projectid}/vpcs\"})\n     @ResponseStatus(HttpStatus.CREATED)\n-    public VpcStateJson createVpcState(@PathVariable String projectid, @RequestBody VpcStateJson resource) throws Exception {\n-        VpcState vpcState = null;\n+    public VpcWebJson createVpcState(@PathVariable String projectid, @RequestBody VpcWebRequestJson resource) throws Exception {\n+        VpcWebResponseObject inVpcState = new VpcWebResponseObject();\n \n         try {\n             RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n \n-            VpcState inVpcState = resource.getVpc();\n+            VpcWebRequestObject vpcWebRequestObject = resource.getNetwork();\n+            BeanUtils.copyProperties(vpcWebRequestObject, inVpcState);\n             RestPreconditionsUtil.verifyResourceNotNull(inVpcState);\n             RestPreconditionsUtil.populateResourceProjectId(inVpcState, projectid);\n \n             Transaction transaction = this.vpcDatabaseService.getCache().getTransaction();\n             transaction.start();\n \n             this.vpcDatabaseService.addVpc(inVpcState);\n-            vpcState = this.vpcDatabaseService.getByVpcId(inVpcState.getId());\n+            inVpcState = this.vpcDatabaseService.getByVpcId(inVpcState.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df3d9cd62a784a14158094f0e1cbd237a437aec"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTE1ODE1", "url": "https://github.com/futurewei-cloud/alcor/pull/181#pullrequestreview-405515815", "createdAt": "2020-05-05T06:18:29Z", "commit": {"oid": "3df3d9cd62a784a14158094f0e1cbd237a437aec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjoxODozMFrOGQbwBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjoxODozMFrOGQbwBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4NTA2Mg==", "bodyText": "Do we have to use a GetTransaction for every get request? If so, please move the transaction block code to service layer, instead of keeping it in Controller layer.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r419885062", "createdAt": "2020-05-05T06:18:30Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/DebugVpcController.java", "diffHunk": "@@ -92,25 +91,26 @@ public Map getVpcCount() throws CacheException {\n             method = POST,\n             value = {\"/debug/project/{projectid}/vpcs\"})\n     @ResponseStatus(HttpStatus.CREATED)\n-    public VpcStateJson createVpcState(@PathVariable String projectid, @RequestBody VpcStateJson resource) throws Exception {\n-        VpcState vpcState = null;\n+    public VpcWebJson createVpcState(@PathVariable String projectid, @RequestBody VpcWebRequestJson resource) throws Exception {\n+        VpcWebResponseObject inVpcState = new VpcWebResponseObject();\n \n         try {\n             RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n \n-            VpcState inVpcState = resource.getVpc();\n+            VpcWebRequestObject vpcWebRequestObject = resource.getNetwork();\n+            BeanUtils.copyProperties(vpcWebRequestObject, inVpcState);\n             RestPreconditionsUtil.verifyResourceNotNull(inVpcState);\n             RestPreconditionsUtil.populateResourceProjectId(inVpcState, projectid);\n \n             Transaction transaction = this.vpcDatabaseService.getCache().getTransaction();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df3d9cd62a784a14158094f0e1cbd237a437aec"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTE2NzU5", "url": "https://github.com/futurewei-cloud/alcor/pull/181#pullrequestreview-405516759", "createdAt": "2020-05-05T06:20:51Z", "commit": {"oid": "3df3d9cd62a784a14158094f0e1cbd237a437aec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjoyMDo1MVrOGQbzYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjoyMDo1MVrOGQbzYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg4NTkyMg==", "bodyText": "@kevin-zhonghao I remember there is logics here to call RouteManager to create default route rules. Somehow the logics is gone. Could you recover it and make it ASYNC?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r419885922", "createdAt": "2020-05-05T06:20:51Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/DebugVpcController.java", "diffHunk": "@@ -92,25 +91,26 @@ public Map getVpcCount() throws CacheException {\n             method = POST,\n             value = {\"/debug/project/{projectid}/vpcs\"})\n     @ResponseStatus(HttpStatus.CREATED)\n-    public VpcStateJson createVpcState(@PathVariable String projectid, @RequestBody VpcStateJson resource) throws Exception {\n-        VpcState vpcState = null;\n+    public VpcWebJson createVpcState(@PathVariable String projectid, @RequestBody VpcWebRequestJson resource) throws Exception {\n+        VpcWebResponseObject inVpcState = new VpcWebResponseObject();\n \n         try {\n             RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n \n-            VpcState inVpcState = resource.getVpc();\n+            VpcWebRequestObject vpcWebRequestObject = resource.getNetwork();\n+            BeanUtils.copyProperties(vpcWebRequestObject, inVpcState);\n             RestPreconditionsUtil.verifyResourceNotNull(inVpcState);\n             RestPreconditionsUtil.populateResourceProjectId(inVpcState, projectid);\n \n             Transaction transaction = this.vpcDatabaseService.getCache().getTransaction();\n             transaction.start();\n \n             this.vpcDatabaseService.addVpc(inVpcState);\n-            vpcState = this.vpcDatabaseService.getByVpcId(inVpcState.getId());\n+            inVpcState = this.vpcDatabaseService.getByVpcId(inVpcState.getId());\n \n             transaction.commit();\n \n-            if (vpcState == null) {\n+            if (inVpcState == null) {\n                 throw new ResourcePersistenceException();\n             }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3df3d9cd62a784a14158094f0e1cbd237a437aec"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/65306b72a412a33ceaf8668818b6d1261ef6f9f3", "committedDate": "2020-05-07T00:59:00Z", "message": "network_vlan module update"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MTIzMjUw", "url": "https://github.com/futurewei-cloud/alcor/pull/181#pullrequestreview-407123250", "createdAt": "2020-05-07T03:16:33Z", "commit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMzoxNjozM1rOGRs6Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMzo1Mzo1OVrOGRtddw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxNDc2Mw==", "bodyText": "The image looks great.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421214763", "createdAt": "2020-05-07T03:16:33Z", "author": {"login": "xieus"}, "path": "docs/design/vpc_manager.adoc", "diffHunk": "@@ -16,7 +16,8 @@ v0.1, 2020-05-04\n === Concurrency Control\n \n == Database Schema\n-\n+=== Network Vlan Range and Vlan State\n+image::images/network_type_vlan.PNG[]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxNDkxMg==", "bodyText": "Do we really need this dependency for lib?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421214912", "createdAt": "2020-05-07T03:17:00Z", "author": {"login": "xieus"}, "path": "lib/pom.xml", "diffHunk": "@@ -21,6 +21,10 @@\n     </properties>\n \n     <dependencies>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxNTE1Mg==", "bodyText": "Use 2 ^ 24?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421215152", "createdAt": "2020-05-07T03:17:58Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/constants/NetworkType.java", "diffHunk": "@@ -0,0 +1,11 @@\n+package com.futurewei.alcor.common.constants;\n+\n+public class NetworkType {\n+\n+    public static final int VXLAN_MAX_KEY = 16000000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxNTU0OA==", "bodyText": "Space here.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421215548", "createdAt": "2020-05-07T03:19:37Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/exception/InternalDbOperationException.java", "diffHunk": "@@ -0,0 +1,24 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.common.exception;\n+\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+\n+@ResponseStatus(code= HttpStatus.INTERNAL_SERVER_ERROR, reason=\"Internal db operation exception\")\n+public class InternalDbOperationException extends Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxNTkxNQ==", "bodyText": "Do we need the parameter of networkType in the addVlanEntity method?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421215915", "createdAt": "2020-05-07T03:21:11Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/SegmentController.java", "diffHunk": "@@ -75,14 +81,18 @@ public SegmentWebResponseJson createSegment(@PathVariable String projectid, @Req\n \n             // verify network type\n             String networkType = segmentWebRequestObject.getNetworkType();\n-            if (networkType.equals(NetworkTypeEnum.VXLAN)) {\n-\n-            } else if (networkType.equals(NetworkTypeEnum.VLAN)) {\n-\n-            }else if (networkType.equals(NetworkTypeEnum.GRE)) {\n-\n+            Long key = null;\n+            if (NetworkTypeEnum.VXLAN.getNetworkType().equals(networkType)) {\n+                key = segmentService.addVxlanEntity(segmentWebRequestObject.getId());\n+            } else if (NetworkTypeEnum.VLAN.getNetworkType().equals(networkType)) {\n+                key = segmentService.addVlanEntity(segmentWebRequestObject.getId(), networkTypeId, networkType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxNjE0Mw==", "bodyText": "\"getSegmentUuid\"?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421216143", "createdAt": "2020-05-07T03:22:10Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/SegmentController.java", "diffHunk": "@@ -150,7 +160,19 @@ public ResponseId deleteSegmentBySegmentId(@PathVariable String projectid, @Path\n                 return new ResponseId();\n             }\n \n+            // Release Network Type\n+            String networkType = segmentWebResponseObject.getNetworkType();\n+            Long key = Long.parseLong(String.valueOf(segmentWebResponseObject.getSegmentationId()));\n+            if (NetworkTypeEnum.VXLAN.getNetworkType().equals(networkType)) {\n+\n+            } else if (NetworkTypeEnum.VLAN.getNetworkType().equals(networkType)) {\n+                this.segmentService.releaseVlanEntity(segmentWebResponseObject.getSegmentationUUId(), key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxODg5NQ==", "bodyText": "Remove.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421218895", "createdAt": "2020-05-07T03:33:34Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/dao/SegmentRepository.java", "diffHunk": "@@ -3,6 +3,7 @@\n import com.futurewei.alcor.common.db.CacheException;\n import com.futurewei.alcor.common.db.CacheFactory;\n import com.futurewei.alcor.common.db.ICache;\n+import com.futurewei.alcor.common.db.Transaction;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxOTMwOA==", "bodyText": "Like the comment! Can we add it everywhere :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421219308", "createdAt": "2020-05-07T03:35:00Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/dao/VlanRangeRepository.java", "diffHunk": "@@ -0,0 +1,186 @@\n+package com.futurewei.alcor.vpcmanager.dao;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.db.CacheFactory;\n+import com.futurewei.alcor.common.db.ICache;\n+import com.futurewei.alcor.common.db.Transaction;\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.repo.ICacheRepository;\n+import com.futurewei.alcor.web.allocator.VlanKeyAllocator;\n+import com.futurewei.alcor.web.entity.NetworkVlanRange;\n+import com.futurewei.alcor.web.entity.NetworkVlanRangeRequest;\n+import com.futurewei.alcor.web.entity.NetworkVlanType;\n+import com.futurewei.alcor.web.entity.VlanKeyAlloc;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.stereotype.Repository;\n+\n+import javax.annotation.PostConstruct;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+@Repository\n+@ComponentScan(value=\"com.futurewei.alcor.common.db\")\n+public class VlanRangeRepository implements ICacheRepository<NetworkVlanRange> {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    public ICache<String, NetworkVlanRange> getCache() {\n+        return cache;\n+    }\n+\n+    private ICache<String, NetworkVlanRange> cache;\n+\n+\n+    @Autowired\n+    public VlanRangeRepository(CacheFactory cacheFactory) {\n+        cache = cacheFactory.getCache(NetworkVlanRange.class);\n+    }\n+\n+    @PostConstruct\n+    private void init() {\n+        logger.info( \"VlanRangeRepository init completed\");\n+    }\n+\n+    @Override\n+    public synchronized NetworkVlanRange findItem(String id) {\n+        try {\n+            return cache.get(id);\n+        } catch (CacheException e) {\n+            e.printStackTrace();\n+            logger.error(\"VlanRangeRepository findItem() exception:\", e);\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public synchronized Map<String, NetworkVlanRange> findAllItems() {\n+        try {\n+            return cache.getAll();\n+        } catch (CacheException e) {\n+            e.printStackTrace();\n+            logger.error(\"VlanRangeRepository findAllItems() exception:\", e);\n+        }\n+\n+        return new HashMap();\n+    }\n+\n+    @Override\n+    public synchronized void addItem(NetworkVlanRange networkVlanRange){\n+        logger.error(\"Add networkVlanRange:{}\", networkVlanRange);\n+\n+        try {\n+            cache.put(networkVlanRange.getId(), networkVlanRange);\n+        } catch (CacheException e) {\n+            e.printStackTrace();\n+            logger.error(\"VlanRangeRepository addItem() exception:\", e);\n+        }\n+    }\n+\n+    @Override\n+    public synchronized void deleteItem(String id) {\n+        logger.error(\"Delete rangeId:{}\", id);\n+\n+        try {\n+            cache.remove(id);\n+        } catch (CacheException e) {\n+            e.printStackTrace();\n+            logger.error(\"VlanRangeRepository deleteItem() exception:\", e);\n+        }\n+    }\n+\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMTMzMQ==", "bodyText": "can we just get the first range here?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421221331", "createdAt": "2020-05-07T03:43:44Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,254 @@\n+package com.futurewei.alcor.vpcmanager.service.Impl;\n+\n+import com.futurewei.alcor.common.constants.NetworkType;\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.NetworkTypeInvalidException;\n+import com.futurewei.alcor.common.exception.VlanRangeNotFoundException;\n+import com.futurewei.alcor.vpcmanager.dao.GreRepository;\n+import com.futurewei.alcor.vpcmanager.dao.VlanRangeRepository;\n+import com.futurewei.alcor.vpcmanager.dao.VlanRepository;\n+import com.futurewei.alcor.vpcmanager.dao.VxlanRepository;\n+import com.futurewei.alcor.vpcmanager.service.SegmentService;\n+import com.futurewei.alcor.web.allocator.VlanKeyAllocator;\n+import com.futurewei.alcor.web.entity.*;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+\n+@Service\n+public class SegmentServiceImpl implements SegmentService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    private VlanRangeRepository vlanRangeRepository;\n+\n+    @Autowired\n+    private VlanRepository vlanRepository;\n+\n+    @Autowired\n+    private VxlanRepository vxlanRepository;\n+\n+    @Autowired\n+    private GreRepository greRepository;\n+\n+    @Override\n+    public Long addVlanEntity(String segmentId, String vlanId, String networkType) throws DatabasePersistenceException, CacheException {\n+        try {\n+            NetworkVlanType vlan = new NetworkVlanType();\n+            // check if range exist in db\n+            Map<String, NetworkVlanRange> map = this.vlanRangeRepository.findAllItems();\n+            if (map.size() == 0) {\n+                String rangeId = UUID.randomUUID().toString();\n+                NetworkVlanRangeRequest request = new NetworkVlanRangeRequest(rangeId, segmentId, networkType, NetworkType.VLAN_FIRST_KEY, NetworkType.VLAN_LAST_KEY);\n+                this.vlanRangeRepository.createRange(request);\n+            }\n+\n+            String rangeId = \"\";\n+            for (Map.Entry<String, NetworkVlanRange> entry : map.entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMTU1NA==", "bodyText": "Please uncomment this. We do need MTU.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421221554", "createdAt": "2020-05-07T03:44:43Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,254 @@\n+package com.futurewei.alcor.vpcmanager.service.Impl;\n+\n+import com.futurewei.alcor.common.constants.NetworkType;\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.NetworkTypeInvalidException;\n+import com.futurewei.alcor.common.exception.VlanRangeNotFoundException;\n+import com.futurewei.alcor.vpcmanager.dao.GreRepository;\n+import com.futurewei.alcor.vpcmanager.dao.VlanRangeRepository;\n+import com.futurewei.alcor.vpcmanager.dao.VlanRepository;\n+import com.futurewei.alcor.vpcmanager.dao.VxlanRepository;\n+import com.futurewei.alcor.vpcmanager.service.SegmentService;\n+import com.futurewei.alcor.web.allocator.VlanKeyAllocator;\n+import com.futurewei.alcor.web.entity.*;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+\n+@Service\n+public class SegmentServiceImpl implements SegmentService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    private VlanRangeRepository vlanRangeRepository;\n+\n+    @Autowired\n+    private VlanRepository vlanRepository;\n+\n+    @Autowired\n+    private VxlanRepository vxlanRepository;\n+\n+    @Autowired\n+    private GreRepository greRepository;\n+\n+    @Override\n+    public Long addVlanEntity(String segmentId, String vlanId, String networkType) throws DatabasePersistenceException, CacheException {\n+        try {\n+            NetworkVlanType vlan = new NetworkVlanType();\n+            // check if range exist in db\n+            Map<String, NetworkVlanRange> map = this.vlanRangeRepository.findAllItems();\n+            if (map.size() == 0) {\n+                String rangeId = UUID.randomUUID().toString();\n+                NetworkVlanRangeRequest request = new NetworkVlanRangeRequest(rangeId, segmentId, networkType, NetworkType.VLAN_FIRST_KEY, NetworkType.VLAN_LAST_KEY);\n+                this.vlanRangeRepository.createRange(request);\n+            }\n+\n+            String rangeId = \"\";\n+            for (Map.Entry<String, NetworkVlanRange> entry : map.entrySet()) {\n+                rangeId = entry.getKey();\n+            }\n+\n+            Long key = this.vlanRangeRepository.allocateVlanKey(rangeId);\n+\n+            //vlan.setMtu(mtu);\n+            vlan.setSegmentId(segmentId);\n+            vlan.setVlanId(vlanId);\n+            vlan.setKey(key);\n+\n+            this.vlanRepository.addItem(vlan);\n+            logger.info(\"Allocate vlan key success, key: \" + key);\n+            return key;\n+        } catch (Exception e) {\n+            this.vlanRepository.deleteItem(vlanId);\n+            logger.info(\"Allocate vlan key failed\");\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+\n+    }\n+\n+    @Override\n+    public Long addVxlanEntity(String segmentId) throws DatabasePersistenceException {\n+        try {\n+            String vxlanId = UUID.randomUUID().toString();\n+            NetworkVxlanType vxlan = new NetworkVxlanType();\n+            //vxlan.setMtu(mtu);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMTc5Mg==", "bodyText": "Response should be \"VlanKeyResponse\", right?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421221792", "createdAt": "2020-05-07T03:45:56Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,254 @@\n+package com.futurewei.alcor.vpcmanager.service.Impl;\n+\n+import com.futurewei.alcor.common.constants.NetworkType;\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.NetworkTypeInvalidException;\n+import com.futurewei.alcor.common.exception.VlanRangeNotFoundException;\n+import com.futurewei.alcor.vpcmanager.dao.GreRepository;\n+import com.futurewei.alcor.vpcmanager.dao.VlanRangeRepository;\n+import com.futurewei.alcor.vpcmanager.dao.VlanRepository;\n+import com.futurewei.alcor.vpcmanager.dao.VxlanRepository;\n+import com.futurewei.alcor.vpcmanager.service.SegmentService;\n+import com.futurewei.alcor.web.allocator.VlanKeyAllocator;\n+import com.futurewei.alcor.web.entity.*;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+\n+@Service\n+public class SegmentServiceImpl implements SegmentService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    private VlanRangeRepository vlanRangeRepository;\n+\n+    @Autowired\n+    private VlanRepository vlanRepository;\n+\n+    @Autowired\n+    private VxlanRepository vxlanRepository;\n+\n+    @Autowired\n+    private GreRepository greRepository;\n+\n+    @Override\n+    public Long addVlanEntity(String segmentId, String vlanId, String networkType) throws DatabasePersistenceException, CacheException {\n+        try {\n+            NetworkVlanType vlan = new NetworkVlanType();\n+            // check if range exist in db\n+            Map<String, NetworkVlanRange> map = this.vlanRangeRepository.findAllItems();\n+            if (map.size() == 0) {\n+                String rangeId = UUID.randomUUID().toString();\n+                NetworkVlanRangeRequest request = new NetworkVlanRangeRequest(rangeId, segmentId, networkType, NetworkType.VLAN_FIRST_KEY, NetworkType.VLAN_LAST_KEY);\n+                this.vlanRangeRepository.createRange(request);\n+            }\n+\n+            String rangeId = \"\";\n+            for (Map.Entry<String, NetworkVlanRange> entry : map.entrySet()) {\n+                rangeId = entry.getKey();\n+            }\n+\n+            Long key = this.vlanRangeRepository.allocateVlanKey(rangeId);\n+\n+            //vlan.setMtu(mtu);\n+            vlan.setSegmentId(segmentId);\n+            vlan.setVlanId(vlanId);\n+            vlan.setKey(key);\n+\n+            this.vlanRepository.addItem(vlan);\n+            logger.info(\"Allocate vlan key success, key: \" + key);\n+            return key;\n+        } catch (Exception e) {\n+            this.vlanRepository.deleteItem(vlanId);\n+            logger.info(\"Allocate vlan key failed\");\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+\n+    }\n+\n+    @Override\n+    public Long addVxlanEntity(String segmentId) throws DatabasePersistenceException {\n+        try {\n+            String vxlanId = UUID.randomUUID().toString();\n+            NetworkVxlanType vxlan = new NetworkVxlanType();\n+            //vxlan.setMtu(mtu);\n+            vxlan.setSegmentId(segmentId);\n+            vxlan.setVxlanId(vxlanId);\n+\n+            this.vxlanRepository.addItem(vxlan);\n+            return null;\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public Long addGreEntity(String segmentId) throws DatabasePersistenceException {\n+        try {\n+            String greId = UUID.randomUUID().toString();\n+            NetworkVGREType gre = new NetworkVGREType();\n+            gre.setSegmentId(segmentId);\n+            gre.setGreId(greId);\n+\n+            this.greRepository.addItem(gre);\n+            return null;\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public void releaseVlanEntity(String vlanId, Long key) throws DatabasePersistenceException {\n+        try {\n+            Map<String, NetworkVlanRange> map = this.vlanRangeRepository.findAllItems();\n+            if (map.size() == 0) {\n+                // TO DO: throw exception\n+                return;\n+            }\n+\n+            String rangeId = \"\";\n+            for (Map.Entry<String, NetworkVlanRange> entry : map.entrySet()) {\n+                rangeId = entry.getKey();\n+            }\n+\n+            this.vlanRangeRepository.releaseVlanKey(rangeId, key);\n+            this.vlanRepository.deleteItem(vlanId);\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public VlanKeyRequest allocateVlan(VlanKeyRequest request) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMjIzMw==", "bodyText": "Either rename the method to GetVlanRange, or change the response type to a more generic name like NetworkSegmentRange etc..", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421222233", "createdAt": "2020-05-07T03:47:49Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/Impl/SegmentServiceImpl.java", "diffHunk": "@@ -0,0 +1,254 @@\n+package com.futurewei.alcor.vpcmanager.service.Impl;\n+\n+import com.futurewei.alcor.common.constants.NetworkType;\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.NetworkTypeInvalidException;\n+import com.futurewei.alcor.common.exception.VlanRangeNotFoundException;\n+import com.futurewei.alcor.vpcmanager.dao.GreRepository;\n+import com.futurewei.alcor.vpcmanager.dao.VlanRangeRepository;\n+import com.futurewei.alcor.vpcmanager.dao.VlanRepository;\n+import com.futurewei.alcor.vpcmanager.dao.VxlanRepository;\n+import com.futurewei.alcor.vpcmanager.service.SegmentService;\n+import com.futurewei.alcor.web.allocator.VlanKeyAllocator;\n+import com.futurewei.alcor.web.entity.*;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.UUID;\n+\n+@Service\n+public class SegmentServiceImpl implements SegmentService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    private VlanRangeRepository vlanRangeRepository;\n+\n+    @Autowired\n+    private VlanRepository vlanRepository;\n+\n+    @Autowired\n+    private VxlanRepository vxlanRepository;\n+\n+    @Autowired\n+    private GreRepository greRepository;\n+\n+    @Override\n+    public Long addVlanEntity(String segmentId, String vlanId, String networkType) throws DatabasePersistenceException, CacheException {\n+        try {\n+            NetworkVlanType vlan = new NetworkVlanType();\n+            // check if range exist in db\n+            Map<String, NetworkVlanRange> map = this.vlanRangeRepository.findAllItems();\n+            if (map.size() == 0) {\n+                String rangeId = UUID.randomUUID().toString();\n+                NetworkVlanRangeRequest request = new NetworkVlanRangeRequest(rangeId, segmentId, networkType, NetworkType.VLAN_FIRST_KEY, NetworkType.VLAN_LAST_KEY);\n+                this.vlanRangeRepository.createRange(request);\n+            }\n+\n+            String rangeId = \"\";\n+            for (Map.Entry<String, NetworkVlanRange> entry : map.entrySet()) {\n+                rangeId = entry.getKey();\n+            }\n+\n+            Long key = this.vlanRangeRepository.allocateVlanKey(rangeId);\n+\n+            //vlan.setMtu(mtu);\n+            vlan.setSegmentId(segmentId);\n+            vlan.setVlanId(vlanId);\n+            vlan.setKey(key);\n+\n+            this.vlanRepository.addItem(vlan);\n+            logger.info(\"Allocate vlan key success, key: \" + key);\n+            return key;\n+        } catch (Exception e) {\n+            this.vlanRepository.deleteItem(vlanId);\n+            logger.info(\"Allocate vlan key failed\");\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+\n+    }\n+\n+    @Override\n+    public Long addVxlanEntity(String segmentId) throws DatabasePersistenceException {\n+        try {\n+            String vxlanId = UUID.randomUUID().toString();\n+            NetworkVxlanType vxlan = new NetworkVxlanType();\n+            //vxlan.setMtu(mtu);\n+            vxlan.setSegmentId(segmentId);\n+            vxlan.setVxlanId(vxlanId);\n+\n+            this.vxlanRepository.addItem(vxlan);\n+            return null;\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public Long addGreEntity(String segmentId) throws DatabasePersistenceException {\n+        try {\n+            String greId = UUID.randomUUID().toString();\n+            NetworkVGREType gre = new NetworkVGREType();\n+            gre.setSegmentId(segmentId);\n+            gre.setGreId(greId);\n+\n+            this.greRepository.addItem(gre);\n+            return null;\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public void releaseVlanEntity(String vlanId, Long key) throws DatabasePersistenceException {\n+        try {\n+            Map<String, NetworkVlanRange> map = this.vlanRangeRepository.findAllItems();\n+            if (map.size() == 0) {\n+                // TO DO: throw exception\n+                return;\n+            }\n+\n+            String rangeId = \"\";\n+            for (Map.Entry<String, NetworkVlanRange> entry : map.entrySet()) {\n+                rangeId = entry.getKey();\n+            }\n+\n+            this.vlanRangeRepository.releaseVlanKey(rangeId, key);\n+            this.vlanRepository.deleteItem(vlanId);\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public VlanKeyRequest allocateVlan(VlanKeyRequest request) throws Exception {\n+        logger.debug(\"Allocate vlan key, request: {}\", request);\n+\n+        Long key = vlanRangeRepository.allocateVlanKey(request.getRangeId());\n+\n+        request.setKey(key);\n+\n+        logger.info(\"Allocate vlan key success, request: {}\", request);\n+\n+        return request;\n+    }\n+\n+    @Override\n+    public VlanKeyRequest releaseVlan(String networkType, String rangeId, Long key) throws Exception {\n+        logger.debug(\"Release vlan key, ipAddr: {}\", key);\n+\n+        vlanRangeRepository.releaseVlanKey(rangeId, key);\n+\n+        VlanKeyRequest result = new VlanKeyRequest();\n+        result.setNetworkType(networkType);\n+        result.setRangeId(rangeId);\n+        result.setKey(key);\n+\n+        logger.info(\"Release vlan key success, result: {}\", result);\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public VlanKeyRequest getVlan(String networkType, String rangeId, Long key) throws Exception {\n+        logger.debug(\"Get vlan key, rangeId: {}, ipAddr: {}\", rangeId, key);\n+\n+        VlanKeyAlloc vlanKeyAlloc = vlanRangeRepository.getVlanKeyAlloc(rangeId, key);\n+        if (vlanKeyAlloc.getNetworkType() != networkType) {\n+            throw new NetworkTypeInvalidException();\n+        }\n+\n+        VlanKeyRequest result = new VlanKeyRequest();\n+\n+        result.setNetworkType(vlanKeyAlloc.getNetworkType());\n+        result.setRangeId(vlanKeyAlloc.getRangeId());\n+        result.setKey(vlanKeyAlloc.getKey());\n+\n+        logger.info(\"Get vlan key success, result: {}\", result);\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public NetworkVlanRangeRequest createRange(NetworkVlanRangeRequest request) throws Exception {\n+        logger.debug(\"Create vlan range, request: {}\", request);\n+\n+        vlanRangeRepository.createRange(request);\n+\n+        logger.info(\"Create vlan range success, request: {}\", request);\n+\n+        return request;\n+    }\n+\n+    @Override\n+    public NetworkVlanRangeRequest deleteRange(String rangeId) throws Exception {\n+        logger.debug(\"Delete vlan range, rangeId: {}\", rangeId);\n+\n+        NetworkVlanRange networkVlanRange = vlanRangeRepository.deleteRange(rangeId);\n+\n+        NetworkVlanRangeRequest request = new NetworkVlanRangeRequest();\n+        request.setId(networkVlanRange.getId());\n+        request.setSegmentId(networkVlanRange.getSegmentId());\n+        request.setNetworkType(networkVlanRange.getNetworkType());\n+        request.setFirstKey(networkVlanRange.getFirstKey());\n+        request.setLastKey(networkVlanRange.getLastKey());\n+        request.setUsedKeys(networkVlanRange.getUsedKeys());\n+        request.setTotalKeys(networkVlanRange.getTotalKeys());\n+\n+        logger.info(\"Delete vlan range success, request: {}\", request);\n+\n+        return request;\n+    }\n+\n+    @Override\n+    public NetworkVlanRangeRequest getRange(String rangeId) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 210}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMjkzMQ==", "bodyText": "Ideally, the Segment Service could have a generic method name like addEntity(segmentId, segmentationId, networkType) so that it could have different implementation for various network types.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421222931", "createdAt": "2020-05-07T03:50:15Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/SegmentService.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package com.futurewei.alcor.vpcmanager.service;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.web.entity.NetworkVlanRangeRequest;\n+import com.futurewei.alcor.web.entity.VlanKeyRequest;\n+\n+import java.util.List;\n+\n+public interface SegmentService {\n+\n+    public Long addVlanEntity (String segmentId, String vlanId, String networkType) throws DatabasePersistenceException, CacheException;\n+    public Long addVxlanEntity (String segmentId) throws DatabasePersistenceException;\n+    public Long addGreEntity (String segmentId) throws DatabasePersistenceException;\n+    public void releaseVlanEntity (String vlanId, Long key) throws DatabasePersistenceException;\n+    public VlanKeyRequest allocateVlan(VlanKeyRequest request) throws Exception;\n+    public VlanKeyRequest releaseVlan(String networkType, String rangeId, Long key) throws Exception;\n+    public VlanKeyRequest getVlan(String networkType, String rangeId, Long key) throws Exception;\n+    public NetworkVlanRangeRequest createRange(NetworkVlanRangeRequest request) throws Exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMzM4Ng==", "bodyText": "Should a VlanRange be associated with a segment id?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421223386", "createdAt": "2020-05-07T03:52:17Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/NetworkVlanRange.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package com.futurewei.alcor.web.entity;\n+\n+import com.futurewei.alcor.common.enumClass.NetworkTypeEnum;\n+import com.futurewei.alcor.common.exception.KeyInvalidException;\n+import com.futurewei.alcor.common.exception.VlanKeyAllocNotFoundException;\n+import com.futurewei.alcor.web.allocator.VlanKeyAllocator;\n+import lombok.Data;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+@Data\n+public class NetworkVlanRange {\n+\n+    private String id;\n+    private String segmentId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMzQ2Nw==", "bodyText": "Split it to NetworkValanRangeRequest and Response", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421223467", "createdAt": "2020-05-07T03:52:42Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/NetworkVlanRangeRequest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package com.futurewei.alcor.web.entity;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.Data;\n+\n+@Data\n+public class NetworkVlanRangeRequest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMzY2MA==", "bodyText": "String \"segmentationUuid\" or \"segmentationUUID\"", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421223660", "createdAt": "2020-05-07T03:53:31Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/SegmentWebResponseObject.java", "diffHunk": "@@ -21,6 +21,9 @@\n     @JsonProperty(\"segmentation_id\")\n     private Integer segmentationId;\n \n+    @JsonProperty(\"segmentation_uuid\")\n+    private String segmentationUUId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMzc5OQ==", "bodyText": "Add License statement.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r421223799", "createdAt": "2020-05-07T03:53:59Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/VlanKeyAlloc.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.futurewei.alcor.web.entity;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53890d8ce5065ac2117aab331185b2113eb4e459", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/53890d8ce5065ac2117aab331185b2113eb4e459", "committedDate": "2020-05-08T03:49:44Z", "message": "Merge pull request #2 from futurewei-cloud/master\n\nsync up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e74ef6f563bed8e89ed56abf5b90aeea0ebd90d0", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e74ef6f563bed8e89ed56abf5b90aeea0ebd90d0", "committedDate": "2020-05-08T03:50:12Z", "message": "Vxlan module update and solve comments issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "776fd86356bb0d846163ea9d082209dbf4e7022b", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/776fd86356bb0d846163ea9d082209dbf4e7022b", "committedDate": "2020-05-08T04:48:38Z", "message": "Import API specs to design doc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91d1ac6343e56294db48a4d666231206bacc393b", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/91d1ac6343e56294db48a4d666231206bacc393b", "committedDate": "2020-05-08T22:46:45Z", "message": "GRE module update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aaf6b95f074b06308d5819b96d4ff0ac1315c412", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/aaf6b95f074b06308d5819b96d4ff0ac1315c412", "committedDate": "2020-05-08T22:50:07Z", "message": "Merge remote-tracking branch 'remotes/origin/master'\n\n# Conflicts:\n#\tdocs/design/vpc_manager.adoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c31042de16e973d8a56dbc27063ceffc3ff880f3", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c31042de16e973d8a56dbc27063ceffc3ff880f3", "committedDate": "2020-05-11T15:56:16Z", "message": "Merge branch 'master' of https://github.com/futurewei-cloud/alcor into futurewei-cloud-master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01db3e4910a80e739642920fbf44f07f78b901a5", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/01db3e4910a80e739642920fbf44f07f78b901a5", "committedDate": "2020-05-11T22:11:43Z", "message": "subnet and vpc design doc update, add new APIs in route manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ca1ea74fee5d74cdec371ba50f39306c7a9a03e", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/8ca1ea74fee5d74cdec371ba50f39306c7a9a03e", "committedDate": "2020-05-11T23:36:50Z", "message": "route manager UTs fixed issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66499cea9aa1af74c9d129b93daed6556bbf9ecb", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/66499cea9aa1af74c9d129b93daed6556bbf9ecb", "committedDate": "2020-05-12T21:35:00Z", "message": "Fixed issues mentioned in comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNTQ1NzU0", "url": "https://github.com/futurewei-cloud/alcor/pull/181#pullrequestreview-410545754", "createdAt": "2020-05-13T02:27:52Z", "commit": {"oid": "66499cea9aa1af74c9d129b93daed6556bbf9ecb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMjoyNzo1M1rOGUfU_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNDozNDoyMFrOGUhGuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEzNzk4MQ==", "bodyText": "Please try to remove this dependency if not necessary.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r424137981", "createdAt": "2020-05-13T02:27:53Z", "author": {"login": "xieus"}, "path": "lib/pom.xml", "diffHunk": "@@ -21,6 +21,10 @@\n     </properties>\n \n     <dependencies>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxNDkxMg=="}, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEzODE0MQ==", "bodyText": "I think we could remove it for now.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r424138141", "createdAt": "2020-05-13T02:28:28Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/config/MockIgniteConfiguration.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package com.futurewei.alcor.common.config;\n+\n+import org.apache.ignite.Ignite;\n+import org.apache.ignite.IgniteException;\n+import org.apache.ignite.Ignition;\n+import org.apache.ignite.configuration.ClientConnectorConfiguration;\n+import org.junit.AfterClass;\n+import org.junit.BeforeClass;\n+\n+public class MockIgniteConfiguration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66499cea9aa1af74c9d129b93daed6556bbf9ecb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2MTM5Mw==", "bodyText": "Thanks for adding all these exceptions!\nDo you expect the same exceptions to be used by other services? If those are VPC manager specific, maybe we should move them to VpcManager?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r424161393", "createdAt": "2020-05-13T04:08:19Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/exception/NetworkKeyAllocNotFoundException.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package com.futurewei.alcor.common.exception;\n+\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+\n+@ResponseStatus(code= HttpStatus.NOT_FOUND, reason=\"Key allocation is not found\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66499cea9aa1af74c9d129b93daed6556bbf9ecb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2MTUzOQ==", "bodyText": "Add POST and DELETE as well.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r424161539", "createdAt": "2020-05-13T04:09:06Z", "author": {"login": "xieus"}, "path": "services/api_gateway/src/main/java/com/futurewei/alcor/apigateway/vpc/VpcWebConfiguration.java", "diffHunk": "@@ -36,6 +36,7 @@\n     public RouterFunction<ServerResponse> vpcHandlerRouting(VpcWebHandlers vpcWebHandlers) {\n         return\n                 route(GET(\"/project/{projectId}/vpcs/{vpcId}\"), vpcWebHandlers::getVpc)\n+                        .andRoute(GET(\"/project/{projectId}/network/{vpcId}\"), vpcWebHandlers::getVpc)\n                         .andRoute(POST(\"/project/{projectId}/vpcs\").and(accept(APPLICATION_JSON)).and(contentType(APPLICATION_JSON)), vpcWebHandlers::createVpc)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66499cea9aa1af74c9d129b93daed6556bbf9ecb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2MzY3Mw==", "bodyText": "Usually DELETE is the reverse order of POST. Let us do this:\n(1) segmentDatabaseService.deleteSegment(segmentid);\n(2) segmentService.release VxLan/VLan/Gre entity.\nIf segmentService tries to release entity first and the process crashes before segmentDatabaseService.deleteSegment, the segmentation Id might be released already so will be allocated to other segment, which causes \"one key shared by two segments\" issue.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r424163673", "createdAt": "2020-05-13T04:18:59Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/SegmentController.java", "diffHunk": "@@ -0,0 +1,208 @@\n+package com.futurewei.alcor.vpcmanager.controller;\n+\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.common.enumClass.NetworkTypeEnum;\n+import com.futurewei.alcor.common.exception.ParameterNullOrEmptyException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourceNullException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.vpcmanager.service.SegmentDatabaseService;\n+import com.futurewei.alcor.vpcmanager.service.SegmentService;\n+import com.futurewei.alcor.vpcmanager.utils.RestPreconditionsUtil;\n+import com.futurewei.alcor.web.entity.*;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SegmentController {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    private SegmentDatabaseService segmentDatabaseService;\n+\n+    @Autowired\n+    private SegmentService segmentService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/segments/{segmentid}\", \"/v4/{projectid}/segments/{segmentid}\"})\n+    public SegmentWebResponseJson getSegmentBySegmentId(@PathVariable String projectid, @PathVariable String segmentid) throws Exception {\n+\n+        SegmentWebResponseObject segmentWebResponseObject = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(segmentid);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            segmentWebResponseObject = this.segmentDatabaseService.getBySegmentId(segmentid);\n+        } catch (ParameterNullOrEmptyException e) {\n+            throw new Exception(e);\n+        }\n+\n+        if (segmentWebResponseObject == null) {\n+            return new SegmentWebResponseJson();\n+        }\n+\n+        return new SegmentWebResponseJson(segmentWebResponseObject);\n+\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/segments\", \"/v4/{projectid}/segments\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SegmentWebResponseJson createSegment(@PathVariable String projectid, @RequestBody SegmentWebRequestJson resource) throws Exception {\n+\n+        SegmentWebResponseObject segmentWebResponseObject = new SegmentWebResponseObject();\n+        String networkTypeId = UUID.randomUUID().toString();\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            SegmentWebRequestObject segmentWebRequestObject = resource.getSegment();\n+            BeanUtils.copyProperties(segmentWebRequestObject, segmentWebResponseObject);\n+            RestPreconditionsUtil.verifyResourceNotNull(segmentWebResponseObject);\n+            RestPreconditionsUtil.populateResourceProjectId(segmentWebResponseObject, projectid);\n+\n+            // verify network type\n+            String networkType = segmentWebRequestObject.getNetworkType();\n+            Long key = null;\n+            if (NetworkTypeEnum.VXLAN.getNetworkType().equals(networkType)) {\n+                key = segmentService.addVxlanEntity(segmentWebRequestObject.getId(), networkTypeId, networkType, segmentWebRequestObject.getVpcId());\n+            } else if (NetworkTypeEnum.VLAN.getNetworkType().equals(networkType)) {\n+                key = segmentService.addVlanEntity(segmentWebRequestObject.getId(), networkTypeId, networkType, segmentWebRequestObject.getVpcId());\n+            }else if (NetworkTypeEnum.GRE.getNetworkType().equals(networkType)) {\n+                key = segmentService.addGreEntity(segmentWebRequestObject.getId(), networkTypeId, networkType, segmentWebRequestObject.getVpcId());\n+            }\n+\n+            if (key != null) {\n+                segmentWebResponseObject.setSegmentationId(Integer.parseInt(String.valueOf(key)));\n+            }\n+            segmentWebResponseObject.setSegmentationUUID(networkTypeId);\n+\n+            this.segmentDatabaseService.addSegment(segmentWebResponseObject);\n+\n+            segmentWebResponseObject = this.segmentDatabaseService.getBySegmentId(segmentWebResponseObject.getId());\n+            if (segmentWebResponseObject == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+        } catch (ParameterNullOrEmptyException e) {\n+            throw new Exception(e);\n+        } catch (ResourceNullException e) {\n+            throw new Exception(e);\n+        }\n+\n+        return new SegmentWebResponseJson(segmentWebResponseObject);\n+\n+    }\n+\n+    @RequestMapping(\n+            method = PUT,\n+            value = {\"/project/{projectid}/segments/{segmentid}\", \"/v4/{projectid}/segments/{segmentid}\"})\n+    public SegmentWebResponseJson updateSegmentBySegmentId(@PathVariable String projectid, @PathVariable String segmentid, @RequestBody SegmentWebRequestJson resource) throws Exception {\n+\n+        SegmentWebResponseObject segmentWebResponseObject = new SegmentWebResponseObject();\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(segmentid);\n+            SegmentWebRequestObject segmentWebRequestObject = resource.getSegment();\n+            BeanUtils.copyProperties(segmentWebRequestObject, segmentWebResponseObject);\n+            RestPreconditionsUtil.verifyResourceNotNull(segmentWebResponseObject);\n+            RestPreconditionsUtil.populateResourceProjectId(segmentWebResponseObject, projectid);\n+            RestPreconditionsUtil.populateResourceSegmentId(segmentWebResponseObject, segmentid);\n+\n+            segmentWebResponseObject = this.segmentDatabaseService.getBySegmentId(segmentid);\n+            if (segmentWebResponseObject == null) {\n+                throw new ResourceNotFoundException(\"Segment not found : \" + segmentid);\n+            }\n+\n+            this.segmentDatabaseService.addSegment(segmentWebResponseObject);\n+\n+            segmentWebResponseObject = this.segmentDatabaseService.getBySegmentId(segmentid);\n+\n+        } catch (ParameterNullOrEmptyException e) {\n+            throw new Exception(e);\n+        }\n+\n+        return new SegmentWebResponseJson(segmentWebResponseObject);\n+\n+    }\n+\n+    @RequestMapping(\n+            method = DELETE,\n+            value = {\"/project/{projectid}/segments/{segmentid}\", \"/v4/{projectid}/segments/{segmentid}\"})\n+    public ResponseId deleteSegmentBySegmentId(@PathVariable String projectid, @PathVariable String segmentid) throws Exception {\n+\n+        SegmentWebResponseObject segmentWebResponseObject = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(segmentid);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            segmentWebResponseObject = this.segmentDatabaseService.getBySegmentId(segmentid);\n+            if (segmentWebResponseObject == null) {\n+                return new ResponseId();\n+            }\n+\n+            // Release Network Type\n+            String networkType = segmentWebResponseObject.getNetworkType();\n+            Long key = Long.parseLong(String.valueOf(segmentWebResponseObject.getSegmentationId()));\n+            if (NetworkTypeEnum.VXLAN.getNetworkType().equals(networkType)) {\n+                this.segmentService.releaseVxlanEntity(segmentWebResponseObject.getSegmentationUUID(), key);\n+            } else if (NetworkTypeEnum.VLAN.getNetworkType().equals(networkType)) {\n+                this.segmentService.releaseVlanEntity(segmentWebResponseObject.getSegmentationUUID(), key);\n+            }else if (NetworkTypeEnum.GRE.getNetworkType().equals(networkType)) {\n+                this.segmentService.releaseGreEntity(segmentWebResponseObject.getSegmentationUUID(), key);\n+            }\n+\n+            segmentDatabaseService.deleteSegment(segmentid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66499cea9aa1af74c9d129b93daed6556bbf9ecb"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2NDA5NA==", "bodyText": "We might need to visit other Controller in VPC/subnet/Route to see if we hit the same issue elsewhere.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r424164094", "createdAt": "2020-05-13T04:20:49Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/controller/SegmentController.java", "diffHunk": "@@ -0,0 +1,208 @@\n+package com.futurewei.alcor.vpcmanager.controller;\n+\n+import com.futurewei.alcor.common.entity.ResponseId;\n+import com.futurewei.alcor.common.enumClass.NetworkTypeEnum;\n+import com.futurewei.alcor.common.exception.ParameterNullOrEmptyException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourceNullException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.vpcmanager.service.SegmentDatabaseService;\n+import com.futurewei.alcor.vpcmanager.service.SegmentService;\n+import com.futurewei.alcor.vpcmanager.utils.RestPreconditionsUtil;\n+import com.futurewei.alcor.web.entity.*;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.BeanUtils;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+\n+import static org.springframework.web.bind.annotation.RequestMethod.*;\n+\n+@RestController\n+public class SegmentController {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    private SegmentDatabaseService segmentDatabaseService;\n+\n+    @Autowired\n+    private SegmentService segmentService;\n+\n+    @RequestMapping(\n+            method = GET,\n+            value = {\"/project/{projectid}/segments/{segmentid}\", \"/v4/{projectid}/segments/{segmentid}\"})\n+    public SegmentWebResponseJson getSegmentBySegmentId(@PathVariable String projectid, @PathVariable String segmentid) throws Exception {\n+\n+        SegmentWebResponseObject segmentWebResponseObject = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(segmentid);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            segmentWebResponseObject = this.segmentDatabaseService.getBySegmentId(segmentid);\n+        } catch (ParameterNullOrEmptyException e) {\n+            throw new Exception(e);\n+        }\n+\n+        if (segmentWebResponseObject == null) {\n+            return new SegmentWebResponseJson();\n+        }\n+\n+        return new SegmentWebResponseJson(segmentWebResponseObject);\n+\n+    }\n+\n+    @RequestMapping(\n+            method = POST,\n+            value = {\"/project/{projectid}/segments\", \"/v4/{projectid}/segments\"})\n+    @ResponseStatus(HttpStatus.CREATED)\n+    public SegmentWebResponseJson createSegment(@PathVariable String projectid, @RequestBody SegmentWebRequestJson resource) throws Exception {\n+\n+        SegmentWebResponseObject segmentWebResponseObject = new SegmentWebResponseObject();\n+        String networkTypeId = UUID.randomUUID().toString();\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            SegmentWebRequestObject segmentWebRequestObject = resource.getSegment();\n+            BeanUtils.copyProperties(segmentWebRequestObject, segmentWebResponseObject);\n+            RestPreconditionsUtil.verifyResourceNotNull(segmentWebResponseObject);\n+            RestPreconditionsUtil.populateResourceProjectId(segmentWebResponseObject, projectid);\n+\n+            // verify network type\n+            String networkType = segmentWebRequestObject.getNetworkType();\n+            Long key = null;\n+            if (NetworkTypeEnum.VXLAN.getNetworkType().equals(networkType)) {\n+                key = segmentService.addVxlanEntity(segmentWebRequestObject.getId(), networkTypeId, networkType, segmentWebRequestObject.getVpcId());\n+            } else if (NetworkTypeEnum.VLAN.getNetworkType().equals(networkType)) {\n+                key = segmentService.addVlanEntity(segmentWebRequestObject.getId(), networkTypeId, networkType, segmentWebRequestObject.getVpcId());\n+            }else if (NetworkTypeEnum.GRE.getNetworkType().equals(networkType)) {\n+                key = segmentService.addGreEntity(segmentWebRequestObject.getId(), networkTypeId, networkType, segmentWebRequestObject.getVpcId());\n+            }\n+\n+            if (key != null) {\n+                segmentWebResponseObject.setSegmentationId(Integer.parseInt(String.valueOf(key)));\n+            }\n+            segmentWebResponseObject.setSegmentationUUID(networkTypeId);\n+\n+            this.segmentDatabaseService.addSegment(segmentWebResponseObject);\n+\n+            segmentWebResponseObject = this.segmentDatabaseService.getBySegmentId(segmentWebResponseObject.getId());\n+            if (segmentWebResponseObject == null) {\n+                throw new ResourcePersistenceException();\n+            }\n+\n+        } catch (ParameterNullOrEmptyException e) {\n+            throw new Exception(e);\n+        } catch (ResourceNullException e) {\n+            throw new Exception(e);\n+        }\n+\n+        return new SegmentWebResponseJson(segmentWebResponseObject);\n+\n+    }\n+\n+    @RequestMapping(\n+            method = PUT,\n+            value = {\"/project/{projectid}/segments/{segmentid}\", \"/v4/{projectid}/segments/{segmentid}\"})\n+    public SegmentWebResponseJson updateSegmentBySegmentId(@PathVariable String projectid, @PathVariable String segmentid, @RequestBody SegmentWebRequestJson resource) throws Exception {\n+\n+        SegmentWebResponseObject segmentWebResponseObject = new SegmentWebResponseObject();\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(segmentid);\n+            SegmentWebRequestObject segmentWebRequestObject = resource.getSegment();\n+            BeanUtils.copyProperties(segmentWebRequestObject, segmentWebResponseObject);\n+            RestPreconditionsUtil.verifyResourceNotNull(segmentWebResponseObject);\n+            RestPreconditionsUtil.populateResourceProjectId(segmentWebResponseObject, projectid);\n+            RestPreconditionsUtil.populateResourceSegmentId(segmentWebResponseObject, segmentid);\n+\n+            segmentWebResponseObject = this.segmentDatabaseService.getBySegmentId(segmentid);\n+            if (segmentWebResponseObject == null) {\n+                throw new ResourceNotFoundException(\"Segment not found : \" + segmentid);\n+            }\n+\n+            this.segmentDatabaseService.addSegment(segmentWebResponseObject);\n+\n+            segmentWebResponseObject = this.segmentDatabaseService.getBySegmentId(segmentid);\n+\n+        } catch (ParameterNullOrEmptyException e) {\n+            throw new Exception(e);\n+        }\n+\n+        return new SegmentWebResponseJson(segmentWebResponseObject);\n+\n+    }\n+\n+    @RequestMapping(\n+            method = DELETE,\n+            value = {\"/project/{projectid}/segments/{segmentid}\", \"/v4/{projectid}/segments/{segmentid}\"})\n+    public ResponseId deleteSegmentBySegmentId(@PathVariable String projectid, @PathVariable String segmentid) throws Exception {\n+\n+        SegmentWebResponseObject segmentWebResponseObject = null;\n+\n+        try {\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectid);\n+            RestPreconditionsUtil.verifyParameterNotNullorEmpty(segmentid);\n+            RestPreconditionsUtil.verifyResourceFound(projectid);\n+\n+            segmentWebResponseObject = this.segmentDatabaseService.getBySegmentId(segmentid);\n+            if (segmentWebResponseObject == null) {\n+                return new ResponseId();\n+            }\n+\n+            // Release Network Type\n+            String networkType = segmentWebResponseObject.getNetworkType();\n+            Long key = Long.parseLong(String.valueOf(segmentWebResponseObject.getSegmentationId()));\n+            if (NetworkTypeEnum.VXLAN.getNetworkType().equals(networkType)) {\n+                this.segmentService.releaseVxlanEntity(segmentWebResponseObject.getSegmentationUUID(), key);\n+            } else if (NetworkTypeEnum.VLAN.getNetworkType().equals(networkType)) {\n+                this.segmentService.releaseVlanEntity(segmentWebResponseObject.getSegmentationUUID(), key);\n+            }else if (NetworkTypeEnum.GRE.getNetworkType().equals(networkType)) {\n+                this.segmentService.releaseGreEntity(segmentWebResponseObject.getSegmentationUUID(), key);\n+            }\n+\n+            segmentDatabaseService.deleteSegment(segmentid);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2MzY3Mw=="}, "originalCommit": {"oid": "66499cea9aa1af74c9d129b93daed6556bbf9ecb"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2NDkwNw==", "bodyText": "These comments are really good. Let us try to spread it elsewhere for important Controller and Service methods.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r424164907", "createdAt": "2020-05-13T04:24:17Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/dao/GreRangeRepository.java", "diffHunk": "@@ -0,0 +1,211 @@\n+package com.futurewei.alcor.vpcmanager.dao;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.db.CacheFactory;\n+import com.futurewei.alcor.common.db.ICache;\n+import com.futurewei.alcor.common.db.Transaction;\n+import com.futurewei.alcor.common.exception.*;\n+import com.futurewei.alcor.common.repo.ICacheRepository;\n+import com.futurewei.alcor.web.entity.KeyAlloc;\n+import com.futurewei.alcor.web.entity.NetworkGRERange;\n+\n+import com.futurewei.alcor.web.entity.NetworkRangeRequest;\n+import com.futurewei.alcor.web.entity.NetworkVxlanRange;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.stereotype.Repository;\n+\n+import javax.annotation.PostConstruct;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+@Repository\n+@ComponentScan(value=\"com.futurewei.alcor.common.db\")\n+public class GreRangeRepository implements ICacheRepository<NetworkGRERange> {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    public ICache<String, NetworkGRERange> getCache() {\n+        return cache;\n+    }\n+\n+    private ICache<String, NetworkGRERange> cache;\n+\n+\n+    @Autowired\n+    public GreRangeRepository(CacheFactory cacheFactory) {\n+        cache = cacheFactory.getCache(NetworkGRERange.class);\n+    }\n+\n+    @PostConstruct\n+    private void init() {\n+        logger.info( \"GreRangeRepository init completed\");\n+    }\n+\n+\n+    @Override\n+    public NetworkGRERange findItem(String id) {\n+        try {\n+            return cache.get(id);\n+        } catch (CacheException e) {\n+            e.printStackTrace();\n+            logger.error(\"GreRangeRepository findItem() exception:\", e);\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public Map<String, NetworkGRERange> findAllItems() {\n+        try {\n+            return cache.getAll();\n+        } catch (CacheException e) {\n+            e.printStackTrace();\n+            logger.error(\"GreRangeRepository findAllItems() exception:\", e);\n+        }\n+\n+        return new HashMap();\n+    }\n+\n+    @Override\n+    public void addItem(NetworkGRERange networkGRERange) {\n+        logger.error(\"Add networkGreRange:{}\", networkGRERange);\n+\n+        try {\n+            cache.put(networkGRERange.getId(), networkGRERange);\n+        } catch (CacheException e) {\n+            e.printStackTrace();\n+            logger.error(\"GreRangeRepository addItem() exception:\", e);\n+        }\n+    }\n+\n+    @Override\n+    public void deleteItem(String id) {\n+        logger.error(\"Delete rangeId:{}\", id);\n+\n+        try {\n+            cache.remove(id);\n+        } catch (CacheException e) {\n+            e.printStackTrace();\n+            logger.error(\"GreRangeRepository deleteItem() exception:\", e);\n+        }\n+    }\n+\n+    /**\n+     * Allocate a key from GreRange repository\n+     * @param rangeId\n+     * @return range key in db\n+     * @throws Exception Db operation or key assignment exception\n+     */\n+    public synchronized Long allocateGreKey (String rangeId) throws Exception {\n+        Long key;\n+\n+        try (Transaction tx = cache.getTransaction().start()) {\n+            NetworkGRERange networkGRERange = cache.get(rangeId);\n+            if (networkGRERange == null) {\n+                throw new RangeNotFoundException();\n+            }\n+\n+            key = networkGRERange.allocateKey();\n+            cache.put(networkGRERange.getId(), networkGRERange);\n+\n+            tx.commit();\n+        }\n+\n+        return key;\n+    }\n+\n+    /**\n+     * Release a key from GreRange repository\n+     * @param rangId\n+     * @param key\n+     * @throws Exception Range Not Found Exception\n+     */\n+    public synchronized void releaseGreKey(String rangId, Long key) throws Exception {\n+        try (Transaction tx = cache.getTransaction().start()) {\n+            NetworkGRERange networkGRERange = cache.get(rangId);\n+            if (networkGRERange == null) {\n+                throw new RangeNotFoundException();\n+            }\n+\n+            networkGRERange.release(key);\n+            cache.put(networkGRERange.getId(), networkGRERange);\n+\n+            tx.commit();\n+        }\n+    }\n+\n+    public synchronized KeyAlloc getGreKeyAlloc(String rangeId, Long key) throws Exception {\n+        NetworkGRERange networkGRERange = cache.get(rangeId);\n+        if (networkGRERange == null) {\n+            throw new RangeNotFoundException();\n+        }\n+\n+        return networkGRERange.getNetworkKey(key);\n+    }\n+\n+    /**\n+     * Create a range entity from range repo\n+     * @param request\n+     * @throws Exception Network Range Already Exist Exception\n+     * @throws Exception Internal Db Operation Exception\n+     */\n+    public synchronized void createRange(NetworkRangeRequest request) throws Exception {\n+        try (Transaction tx = cache.getTransaction().start()) {\n+            if (cache.get(request.getId()) != null) {\n+                logger.warn(\"Create network range failed: Network Range already exists\");\n+                throw new NetworkRangeExistException();\n+            }\n+\n+            NetworkGRERange range = new NetworkGRERange(request.getId(), request.getSegmentId(),\n+                    request.getNetworkType(), request.getPartition(), request.getFirstKey(), request.getLastKey());\n+\n+            cache.put(request.getId(), range);\n+\n+            range = cache.get(request.getId());\n+            if (range == null) {\n+                logger.warn(\"Create network range failed: Internal db operation error\");\n+                throw new InternalDbOperationException();\n+            }\n+\n+            request.setUsedKeys(range.getUsedKeys());\n+            request.setTotalKeys(range.getTotalKeys());\n+\n+            tx.commit();\n+        }\n+\n+    }\n+\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66499cea9aa1af74c9d129b93daed6556bbf9ecb"}, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2NTk2NA==", "bodyText": "There is another service interface called \"SegmentService\" but it also deals with database access, right? In this case, we should use names that match what it is exactly?\nA renaming suggestion:\n(1) SegmentDatabaseService  => SegmentManagementService\n(2) SegmentService  => SegmentKeyManagementService", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r424165964", "createdAt": "2020-05-13T04:29:06Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/service/SegmentDatabaseService.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.futurewei.alcor.vpcmanager.service;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.db.ICache;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.web.entity.SegmentWebResponseObject;\n+import com.futurewei.alcor.web.entity.VpcWebResponseObject;\n+\n+import java.util.Map;\n+\n+public interface SegmentDatabaseService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66499cea9aa1af74c9d129b93daed6556bbf9ecb"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2NjI2Ng==", "bodyText": "Try not use \"println\"", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r424166266", "createdAt": "2020-05-13T04:30:21Z", "author": {"login": "xieus"}, "path": "services/vpc_manager/src/main/java/com/futurewei/alcor/vpcmanager/utils/RestPreconditionsUtil.java", "diffHunk": "@@ -79,4 +81,32 @@ public static void populateResourceVpcId(CustomerResource resource, String vpcId\n             resource.setId(vpcId);\n         }\n     }\n+\n+    public static void populateResourceSegmentId(CustomerResource resource, String segmentId) {\n+        String resourceSegmentId = null;\n+        if (resource instanceof SegmentWebResponseObject) {\n+            resourceSegmentId = resource.getId();\n+        }\n+\n+        if (StringUtils.isEmpty(resourceSegmentId)) {\n+            resource.setId(segmentId);\n+        } else if (!resourceSegmentId.equalsIgnoreCase(segmentId)) {\n+            System.out.println(\"Resource segment id not matched \" + resourceSegmentId + \" : \" + segmentId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66499cea9aa1af74c9d129b93daed6556bbf9ecb"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2NjczMg==", "bodyText": "yes but NetworkVlanRange is about the range of Vlan Segmentation Id, right? Let us discuss on these.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r424166732", "createdAt": "2020-05-13T04:32:33Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/NetworkVlanRange.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package com.futurewei.alcor.web.entity;\n+\n+import com.futurewei.alcor.common.enumClass.NetworkTypeEnum;\n+import com.futurewei.alcor.common.exception.KeyInvalidException;\n+import com.futurewei.alcor.common.exception.VlanKeyAllocNotFoundException;\n+import com.futurewei.alcor.web.allocator.VlanKeyAllocator;\n+import lombok.Data;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+@Data\n+public class NetworkVlanRange {\n+\n+    private String id;\n+    private String segmentId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIyMzM4Ng=="}, "originalCommit": {"oid": "65306b72a412a33ceaf8668818b6d1261ef6f9f3"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2Njk3Mg==", "bodyText": "Could you comment the usage of 0 and 4095?", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r424166972", "createdAt": "2020-05-13T04:33:41Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/NetworkVlanType.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.futurewei.alcor.web.entity;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.Data;\n+import org.springframework.data.annotation.CreatedDate;\n+import org.springframework.data.annotation.Id;\n+import org.springframework.data.annotation.LastModifiedDate;\n+\n+@Data\n+public class NetworkVlanType {\n+\n+    @Id\n+    private Long key; // 1 - 4094", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66499cea9aa1af74c9d129b93daed6556bbf9ecb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE2NzA5Nw==", "bodyText": "I think segmentId should be removed from NetworkVxlanRange as well.", "url": "https://github.com/futurewei-cloud/alcor/pull/181#discussion_r424167097", "createdAt": "2020-05-13T04:34:20Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/NetworkVxlanRange.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package com.futurewei.alcor.web.entity;\n+\n+import com.futurewei.alcor.common.exception.KeyInvalidException;\n+import com.futurewei.alcor.common.exception.NetworkKeyAllocNotFoundException;\n+import com.futurewei.alcor.web.allocator.NetworkKeyAllocator;\n+import lombok.Data;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+@Data\n+public class NetworkVxlanRange {\n+\n+    private String id;\n+    private String segmentId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66499cea9aa1af74c9d129b93daed6556bbf9ecb"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0b96b84c2a3564d331cf616b5bb5464279e5e9f", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e0b96b84c2a3564d331cf616b5bb5464279e5e9f", "committedDate": "2020-05-13T07:03:43Z", "message": "Fix issues, add comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "294da701859e2cfe304a95046e8851f630f27b39", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/294da701859e2cfe304a95046e8851f630f27b39", "committedDate": "2020-05-13T07:19:21Z", "message": "fix issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1923706c2bda96df797acfce7eaaaf1eb6de65bc", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/1923706c2bda96df797acfce7eaaaf1eb6de65bc", "committedDate": "2020-05-13T07:43:58Z", "message": "fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjcxNTUw", "url": "https://github.com/futurewei-cloud/alcor/pull/181#pullrequestreview-410671550", "createdAt": "2020-05-13T07:50:18Z", "commit": {"oid": "1923706c2bda96df797acfce7eaaaf1eb6de65bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a81d90c0c4b33c3a4ee7165b4f787aff53d440ff", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a81d90c0c4b33c3a4ee7165b4f787aff53d440ff", "committedDate": "2020-03-24T23:00:44Z", "message": "vpcmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93da5e40ad87f49cfc891b56a8618c25567b9c40", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/93da5e40ad87f49cfc891b56a8618c25567b9c40", "committedDate": "2020-03-24T23:35:04Z", "message": "vpc manager service update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb7c1ffd71e6ab1c1019b874322b18e239f0be61", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/bb7c1ffd71e6ab1c1019b874322b18e239f0be61", "committedDate": "2020-03-25T16:12:19Z", "message": "Merge pull request #1 from futurewei-cloud/master\n\nReplace Redis with Apache Ignite for in memory cache and db (#129)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b6a43fb0ae185b880969b49ce852434d1799a24", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/2b6a43fb0ae185b880969b49ce852434d1799a24", "committedDate": "2020-03-25T18:26:03Z", "message": "vpc manager directory structure update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49ad0b0272ef71832af87ff93ab68c80a8300121", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/49ad0b0272ef71832af87ff93ab68c80a8300121", "committedDate": "2020-03-27T07:02:52Z", "message": "common service and updated vpcmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9935f10df13ca8e7cfff10ad9f07fdbfc61eb4f", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c9935f10df13ca8e7cfff10ad9f07fdbfc61eb4f", "committedDate": "2020-03-27T07:28:26Z", "message": "Rename directory name from Common-service to lib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f04333e9042ae0c9577c875f9c430a3d78b5aa2", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3f04333e9042ae0c9577c875f9c430a3d78b5aa2", "committedDate": "2020-03-27T07:34:01Z", "message": "Move lib files under com.futurewei.alcor.common"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "715675ee72a3518e87c9280a57ffe52fa242b3e8", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/715675ee72a3518e87c9280a57ffe52fa242b3e8", "committedDate": "2020-03-27T07:53:44Z", "message": "fix package paths in lib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4de3c83ba533eb941ab9a2392f863eda36baa0a9", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/4de3c83ba533eb941ab9a2392f863eda36baa0a9", "committedDate": "2020-03-27T08:04:01Z", "message": "Rename package path to com.futurewei.alcor.vpcmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d2a24da02a5540318f52d288030fbab99b776b6", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/8d2a24da02a5540318f52d288030fbab99b776b6", "committedDate": "2020-03-27T08:12:46Z", "message": "Update common jar and use latest package path in vpcmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84b4cd58ce61c78df855a5feca4bed2b6c4cc760", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/84b4cd58ce61c78df855a5feca4bed2b6c4cc760", "committedDate": "2020-03-27T08:14:40Z", "message": "update vpc manager jar package name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00328559311fede7087bf48ed328008e748f2b0b", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/00328559311fede7087bf48ed328008e748f2b0b", "committedDate": "2020-03-27T17:19:05Z", "message": "change Dockerfilr"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "510fe4aced4f39764ac8f5a30df4783a67bef57a", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/510fe4aced4f39764ac8f5a30df4783a67bef57a", "committedDate": "2020-03-27T17:22:43Z", "message": "delete useless file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d1cca813255fedeb2cbd2662cbfb6b50e10f7b5", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/2d1cca813255fedeb2cbd2662cbfb6b50e10f7b5", "committedDate": "2020-03-27T17:48:42Z", "message": "Reformat some files in vpc manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0a81d3ec168f2f1b55af276bcbe58d1255d1266", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/b0a81d3ec168f2f1b55af276bcbe58d1255d1266", "committedDate": "2020-03-27T17:55:22Z", "message": "Reformat files in common lib"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c06645add0d6720d8c1475cdc45e049ec370987", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0c06645add0d6720d8c1475cdc45e049ec370987", "committedDate": "2020-03-30T03:48:56Z", "message": "route manager codes and update vpc manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfd46bc69200c5aebf2ca5913bb26d7c6fc8035b", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/bfd46bc69200c5aebf2ca5913bb26d7c6fc8035b", "committedDate": "2020-03-30T04:05:12Z", "message": "update vpc_manager.yaml, route_manager_yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a2c035eda11418a0473781cd195d9492aa8a72a", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3a2c035eda11418a0473781cd195d9492aa8a72a", "committedDate": "2020-03-30T04:07:49Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a739a9c0af774dcf9727474391ab796fa6ea43ef", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a739a9c0af774dcf9727474391ab796fa6ea43ef", "committedDate": "2020-03-30T04:15:29Z", "message": "Delete unused files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e5549a78b09381b116fcb895b13b9dc75ddd8aa", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/8e5549a78b09381b116fcb895b13b9dc75ddd8aa", "committedDate": "2020-03-30T06:55:51Z", "message": "Add get/create apis on route manager and post call from vpc to route"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "771dad76d57ef25344c77e266bca90b313055225", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/771dad76d57ef25344c77e266bca90b313055225", "committedDate": "2020-03-30T21:23:25Z", "message": "update vpc controller and vpcState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d07ff34f909437485a64e40e0f8d71562c8fc8bd", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d07ff34f909437485a64e40e0f8d71562c8fc8bd", "committedDate": "2020-03-31T02:38:49Z", "message": "Update gitignore to exclude logs file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a84ab728c191cf9cf2166b01f54b9d8748fb1dff", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a84ab728c191cf9cf2166b01f54b9d8748fb1dff", "committedDate": "2020-03-31T04:24:32Z", "message": "Merge from alcor/master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e27b2facfe4e77d57f42f08fd8c9633152e071e1", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e27b2facfe4e77d57f42f08fd8c9633152e071e1", "committedDate": "2020-03-31T05:13:59Z", "message": "Merge from vpcmanager to alcor.vpcmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9070cd0137d7dfa0b8c200de531771ec5b839f45", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/9070cd0137d7dfa0b8c200de531771ec5b839f45", "committedDate": "2020-03-31T05:16:14Z", "message": "Remove lib jar and add dependency on pom"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8874c7307bcb7f7f96bb0ac1b3003361db53ff4a", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/8874c7307bcb7f7f96bb0ac1b3003361db53ff4a", "committedDate": "2020-03-31T05:17:36Z", "message": "Remove lib jar and add dependency on pom for route manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b58f598d1df2422900c3c9b6768342e2ec15478", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0b58f598d1df2422900c3c9b6768342e2ec15478", "committedDate": "2020-03-31T05:22:53Z", "message": "update alcor route manager service and package name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6c328f29bc96c5b46b074f313eb68859c54fc62", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/b6c328f29bc96c5b46b074f313eb68859c54fc62", "committedDate": "2020-03-31T05:26:53Z", "message": "Fix vpc manager duplicated UTs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d11745b658f1092eaaf2dec138e1578dde36474d", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d11745b658f1092eaaf2dec138e1578dde36474d", "committedDate": "2020-03-31T05:35:20Z", "message": "redis-route.yaml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ed002dfc5d6805dc54a49ea9f94679c6717cd9a", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0ed002dfc5d6805dc54a49ea9f94679c6717cd9a", "committedDate": "2020-03-31T05:56:16Z", "message": "Update setRouteWebObjectList"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f73cac5a73fc18c0ffaabfd381d2c1f30d7f8398", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f73cac5a73fc18c0ffaabfd381d2c1f30d7f8398", "committedDate": "2020-03-31T06:00:31Z", "message": "Merge branch 'feature/route_manager' of https://github.com/kevin-zhonghao/alcor into feature/route_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6575ac236283bb433b4cd980015a267b8cef9ef4", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/6575ac236283bb433b4cd980015a267b8cef9ef4", "committedDate": "2020-03-31T06:09:21Z", "message": "Fix setter/getter issue in VpcState"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a6ac89f90fc43620e382adcfe43fdbeeade9a89", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/6a6ac89f90fc43620e382adcfe43fdbeeade9a89", "committedDate": "2020-03-31T06:19:16Z", "message": "Move VpcManager under Services"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a25c9f024acc9c14c2b04fb36101b215c5727708", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a25c9f024acc9c14c2b04fb36101b215c5727708", "committedDate": "2020-03-31T06:22:22Z", "message": "Rename vpcmanager to vpc_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27e62ac7be121800ffecfdf9f89f17d54e7452e1", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/27e62ac7be121800ffecfdf9f89f17d54e7452e1", "committedDate": "2020-03-31T06:23:47Z", "message": "Move routemanager under services and rename it to route_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0cfc6869dc46cd40a5ee3118cef389bc2c408b32", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0cfc6869dc46cd40a5ee3118cef389bc2c408b32", "committedDate": "2020-03-31T06:33:46Z", "message": "Fix package issues for route_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d76c29f36db8aa4aaf2e932735ae241e0e2eeab", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3d76c29f36db8aa4aaf2e932735ae241e0e2eeab", "committedDate": "2020-03-31T06:47:51Z", "message": "Add web route schema and update vpc schema"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bc699be2963ea2a70ef531742e3dcd6020c9e3c", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3bc699be2963ea2a70ef531742e3dcd6020c9e3c", "committedDate": "2020-03-31T07:03:26Z", "message": "Delete unused yaml files for vpcmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e99d276309abcbbf89aa410fdf4fbd26343d0dfc", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e99d276309abcbbf89aa410fdf4fbd26343d0dfc", "committedDate": "2020-04-02T13:46:03Z", "message": "Remove unused codes in VpcController"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ea48e2e47aa9f33e2e8993a57f4e1806af82a6a", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3ea48e2e47aa9f33e2e8993a57f4e1806af82a6a", "committedDate": "2020-04-02T15:24:50Z", "message": "Address format comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "057fbc3e177ed053bc9ca6e0eab19b9f21086a19", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/057fbc3e177ed053bc9ca6e0eab19b9f21086a19", "committedDate": "2020-04-02T22:40:11Z", "message": "update dynamically load configuration file in kubernetes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90f06509f2230d653d644685de2e0bdf91baa6f3", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/90f06509f2230d653d644685de2e0bdf91baa6f3", "committedDate": "2020-04-02T22:40:43Z", "message": "Merge branch 'feature/route_manager' of https://github.com/kevin-zhonghao/alcor into feature/route_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92a4853fc6056fd4a1df1d13e4c103f6026254ce", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/92a4853fc6056fd4a1df1d13e4c103f6026254ce", "committedDate": "2020-04-08T00:15:12Z", "message": "update subnet manager and kubernetes config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc7b5ae09ca900a9de2851cb09e106dfbe1b7fb4", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/fc7b5ae09ca900a9de2851cb09e106dfbe1b7fb4", "committedDate": "2020-04-09T01:00:05Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "246a9676e137bc85b1ca76c9d64d7746a48892bf", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/246a9676e137bc85b1ca76c9d64d7746a48892bf", "committedDate": "2020-04-09T01:14:01Z", "message": "s"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e0437f2a15fe1f1460e2b559d90372221d945c2", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/1e0437f2a15fe1f1460e2b559d90372221d945c2", "committedDate": "2020-04-09T06:27:17Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d83e814f3c931bb01c6f3dc2c351009471e42fe", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0d83e814f3c931bb01c6f3dc2c351009471e42fe", "committedDate": "2020-04-09T06:32:29Z", "message": "Merge pull request #3 from kevin-zhonghao/feature/route_manager\n\nFeature/route manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea63ded118de2a3d5adcc2d3f12608677861df14", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/ea63ded118de2a3d5adcc2d3f12608677861df14", "committedDate": "2020-04-09T21:42:33Z", "message": "subnet unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2aae4f8df1af392e9a272fb28fd74ecbdf97a2b", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c2aae4f8df1af392e9a272fb28fd74ecbdf97a2b", "committedDate": "2020-04-09T22:03:25Z", "message": "Delete old files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "498c25db2bb78d29a2602c4068493d77537c430c", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/498c25db2bb78d29a2602c4068493d77537c430c", "committedDate": "2020-04-09T22:09:17Z", "message": "s"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "825e40628b7c2471c0ff19756ca15de7cdfd79ba", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/825e40628b7c2471c0ff19756ca15de7cdfd79ba", "committedDate": "2020-04-09T22:10:36Z", "message": "u"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6069c4c8296cb5f05d8dc5c5b9bf23af66d8b45", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e6069c4c8296cb5f05d8dc5c5b9bf23af66d8b45", "committedDate": "2020-04-09T22:40:12Z", "message": "Merge branch 'master' into feature/route_manager\n\n# Conflicts:\n#\tservices/subnet_manager/pom.xml\n#\tservices/subnet_manager/src/main/java/com/futurewei/alcor/subnet/controller/DebugController.java\n#\tservices/subnet_manager/src/main/resources/application.properties\n#\tservices/subnet_manager/src/test/java/com/futurewei/alcor/subnet/SubnetApplicationTests.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e993dcbd970110fa1bffa29ae7c31a52ed8495d9", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e993dcbd970110fa1bffa29ae7c31a52ed8495d9", "committedDate": "2020-04-09T23:09:16Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f9a5da46bc6110e0039c7c0e82a88cc51d6d86e1", "committedDate": "2020-04-09T23:12:17Z", "message": "Merge pull request #4 from kevin-zhonghao/feature/route_manager\n\nFeature/route manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d6c25e581ae630a4e830df8a79389ababf73923", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/4d6c25e581ae630a4e830df8a79389ababf73923", "committedDate": "2020-04-11T00:07:46Z", "message": "update subnet unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "218fc8aaef62c63ef0689d2cd24c1f0c32df1217", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/218fc8aaef62c63ef0689d2cd24c1f0c32df1217", "committedDate": "2020-04-11T00:08:27Z", "message": "update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cac85838d16f6b4b6d2a5cb9eeb743d040b86996", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/cac85838d16f6b4b6d2a5cb9eeb743d040b86996", "committedDate": "2020-04-11T00:23:07Z", "message": "Merge pull request #5 from kevin-zhonghao/master\n\nMerge pull request #4 from kevin-zhonghao/feature/route_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6ff66052b0dfc49c40b418dfd30d009897bd99e", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c6ff66052b0dfc49c40b418dfd30d009897bd99e", "committedDate": "2020-04-13T19:48:20Z", "message": "subnet structure and unit test update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d53791de5f19297f0c3ffd0f626986b4e655bfbf", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d53791de5f19297f0c3ffd0f626986b4e655bfbf", "committedDate": "2020-04-13T19:51:51Z", "message": "Merge pull request #6 from kevin-zhonghao/feature/route_manager\n\nFeature/subnet_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29266b302ceb94911607de3fb14ee9371b5e3e91", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/29266b302ceb94911607de3fb14ee9371b5e3e91", "committedDate": "2020-04-13T23:33:52Z", "message": "Merge from Alcor upstream master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f52284e8afab618f70512313f83343de7f02b462", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f52284e8afab618f70512313f83343de7f02b462", "committedDate": "2020-04-14T04:18:31Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d24063119fa0c59051cda61c356346d4d89b7eb", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/4d24063119fa0c59051cda61c356346d4d89b7eb", "committedDate": "2020-04-14T06:13:42Z", "message": "Merge pull request #7 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69ac96153afe297489c93c498b46e535576d4353", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/69ac96153afe297489c93c498b46e535576d4353", "committedDate": "2020-04-14T17:28:56Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54269648af85c72861e42874271fc81054d49049", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/54269648af85c72861e42874271fc81054d49049", "committedDate": "2020-04-14T17:32:12Z", "message": "Merge pull request #8 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e815f7afcf76f65b67c47b36c9505c24cc18575", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3e815f7afcf76f65b67c47b36c9505c24cc18575", "committedDate": "2020-04-14T17:34:56Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "291555968c8ee49f5e63327a8e344ddfb009ff57", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/291555968c8ee49f5e63327a8e344ddfb009ff57", "committedDate": "2020-04-14T17:36:35Z", "message": "Merge pull request #9 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07b37d58b41a4360ae306febea1817fecdfcca1d", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/07b37d58b41a4360ae306febea1817fecdfcca1d", "committedDate": "2020-04-15T16:17:51Z", "message": "subnet_manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d97eb29cc9f829ef86f170047311504074c4b98a", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d97eb29cc9f829ef86f170047311504074c4b98a", "committedDate": "2020-04-15T16:19:18Z", "message": "Merge branch 'master' into feature/route_manager\nupdate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67f66639282400684897a87a51e11ca688c810d9", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/67f66639282400684897a87a51e11ca688c810d9", "committedDate": "2020-04-15T16:22:08Z", "message": "Merge pull request #10 from kevin-zhonghao/feature/route_manager\n\nsubnet_manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d6ff2b96a94fb3a25c2f5f15f46199ea6ed5320", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/1d6ff2b96a94fb3a25c2f5f15f46199ea6ed5320", "committedDate": "2020-04-15T17:50:15Z", "message": "subnet manager UTs update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "797642f1dbada9af1fec5575b62865aa6a019559", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/797642f1dbada9af1fec5575b62865aa6a019559", "committedDate": "2020-04-15T17:52:18Z", "message": "Merge pull request #11 from kevin-zhonghao/feature/route_manager\n\nFeature/route manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e735ebd7139e7d439155f8e7a5e6cf348ab013c0", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e735ebd7139e7d439155f8e7a5e6cf348ab013c0", "committedDate": "2020-04-15T22:51:58Z", "message": "subnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8012b6e9b20888931bfef81a2ac3b69fc4b590b2", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/8012b6e9b20888931bfef81a2ac3b69fc4b590b2", "committedDate": "2020-04-15T22:54:58Z", "message": "Merge pull request #12 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bf0c7bf82318284711b0507f5dd8064ed754039", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3bf0c7bf82318284711b0507f5dd8064ed754039", "committedDate": "2020-04-15T22:58:06Z", "message": "Merge pull request #13 from kevin-zhonghao/master\n\nadd mac manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81e7c12fd1552451c81c6cadae60d20365461f22", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/81e7c12fd1552451c81c6cadae60d20365461f22", "committedDate": "2020-04-15T23:01:50Z", "message": "Merge pull request #14 from futurewei-cloud/master\n\nmac manager update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da15ddeb473f9f89f19108f49cc4bee62b219c1b", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/da15ddeb473f9f89f19108f49cc4bee62b219c1b", "committedDate": "2020-04-15T23:02:40Z", "message": "Merge pull request #15 from kevin-zhonghao/master\n\nupdate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7c5c4ab2ed9125cce35320abe68b79e3762c9fe", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c7c5c4ab2ed9125cce35320abe68b79e3762c9fe", "committedDate": "2020-04-16T18:51:21Z", "message": "subnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30d105aa88f2346342deeefa70131cb550590a43", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/30d105aa88f2346342deeefa70131cb550590a43", "committedDate": "2020-04-16T18:54:56Z", "message": "Merge pull request #16 from kevin-zhonghao/feature/route_manager\n\nsubnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee14adca5236d5634456789e4c6f4f5056b470c0", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/ee14adca5236d5634456789e4c6f4f5056b470c0", "committedDate": "2020-04-16T23:36:32Z", "message": "subnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbb749f71eb935e476fe887a94b96e8f47bf8833", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/dbb749f71eb935e476fe887a94b96e8f47bf8833", "committedDate": "2020-04-16T23:38:48Z", "message": "Merge pull request #17 from kevin-zhonghao/feature/route_manager\n\nsubnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48808fa9e508d773b09bf4677b3295bfd102c833", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/48808fa9e508d773b09bf4677b3295bfd102c833", "committedDate": "2020-04-17T19:41:14Z", "message": "subnet update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c74460e1f4b25207c5420f41b1651d0e8bf391b7", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/c74460e1f4b25207c5420f41b1651d0e8bf391b7", "committedDate": "2020-04-17T22:59:59Z", "message": "subnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/39f7d50d6771e89c8c99603a3f2a89f7d80ca146", "committedDate": "2020-04-17T23:03:55Z", "message": "Merge pull request #18 from kevin-zhonghao/feature/route_manager\n\nsubnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef723bad84a518a0e1e97dda21ddac04f29ed1a9", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/ef723bad84a518a0e1e97dda21ddac04f29ed1a9", "committedDate": "2020-04-20T06:17:06Z", "message": "subnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "090aa3a1cb28cf03532ab63e41a68aee8eb7012e", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/090aa3a1cb28cf03532ab63e41a68aee8eb7012e", "committedDate": "2020-04-20T06:19:15Z", "message": "Merge pull request #19 from kevin-zhonghao/feature/route_manager\n\nsubnet manager e2e update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60123507d0c9c8e5e43aff5b559068aa5445ce5d", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/60123507d0c9c8e5e43aff5b559068aa5445ce5d", "committedDate": "2020-04-20T19:12:37Z", "message": "Add subnet APIs in API gateway"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fbdb2d16274cec8daf1e89de539473058bd8fb7", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/5fbdb2d16274cec8daf1e89de539473058bd8fb7", "committedDate": "2020-04-20T19:21:13Z", "message": "Remove vpcId in SubnetManagerAPIs and update the parameter format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd7794d100889ae9ea8f1c8552a7b1779cdaafab", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/bd7794d100889ae9ea8f1c8552a7b1779cdaafab", "committedDate": "2020-04-20T21:11:17Z", "message": "Add a new API to get all subnets in a project"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fa5360033d5c6f5646d8ec6d972db7e83f2b602", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/3fa5360033d5c6f5646d8ec6d972db7e83f2b602", "committedDate": "2020-04-20T21:42:43Z", "message": "subnet manager update - comments issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "928358ad845576848b72f826ca12f6cb4d8d1267", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/928358ad845576848b72f826ca12f6cb4d8d1267", "committedDate": "2020-04-20T21:46:00Z", "message": "Merge pull request #20 from kevin-zhonghao/feature/route_manager\n\nsubnet manager update - comments issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82f28a1a356553499cf9b04b273e1c130c3f2682", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/82f28a1a356553499cf9b04b273e1c130c3f2682", "committedDate": "2020-04-20T21:49:09Z", "message": "Merge pull request #21 from kevin-zhonghao/master\n\nsync up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3aae892b07cfb0209eac2e5fb9e5ea769be9ef9", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a3aae892b07cfb0209eac2e5fb9e5ea769be9ef9", "committedDate": "2020-04-21T04:56:54Z", "message": "Fix duplicated webclient bean issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "133ab73e75e63b3cbbdaf3229ccf11d24b392035", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/133ab73e75e63b3cbbdaf3229ccf11d24b392035", "committedDate": "2020-04-21T04:59:38Z", "message": "api gateway update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80aa7111dac5348423c91c5bf79709de6d7efb9d", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/80aa7111dac5348423c91c5bf79709de6d7efb9d", "committedDate": "2020-04-21T05:03:07Z", "message": "Merge pull request #22 from kevin-zhonghao/feature/route_manager\n\napi gateway update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5628dd9a478eec91e0807d6d66f3623296a71adc", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/5628dd9a478eec91e0807d6d66f3623296a71adc", "committedDate": "2020-04-21T05:04:25Z", "message": "Merge pull request #23 from kevin-zhonghao/master\n\napi gateway update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e3c033782a3fc852c0b53882577d8eca50d2780", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/4e3c033782a3fc852c0b53882577d8eca50d2780", "committedDate": "2020-04-21T05:52:24Z", "message": "Update vpcManagerServiceURL and subnetManagerServiceURL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46cee78617f584d217afae421f18d086edf7ea10", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/46cee78617f584d217afae421f18d086edf7ea10", "committedDate": "2020-04-21T05:55:03Z", "message": "Merge pull request #24 from kevin-zhonghao/master\n\nUpdate vpcManagerServiceURL and subnetManagerServiceURL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e224f0083872c7d35f05661d7a503f377fa25d64", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e224f0083872c7d35f05661d7a503f377fa25d64", "committedDate": "2020-04-22T17:15:49Z", "message": "Merge pull request #25 from futurewei-cloud/master\n\n[Micro-service] Private IP manager (#164)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6fc53f16c6827c0840d04010be665308b845728", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f6fc53f16c6827c0840d04010be665308b845728", "committedDate": "2020-04-22T17:16:55Z", "message": "Merge pull request #26 from kevin-zhonghao/master\n\nip_manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "513aa00613ba2d98d98661cc271c915d2d12104a", "author": {"user": {"login": "kevin-zhonghao", "name": "Zhonghao(Kevin) Lyu"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/513aa00613ba2d98d98661cc271c915d2d12104a", "committedDate": "2020-04-23T00:00:17Z", "message": "subnet manager update"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2432, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}