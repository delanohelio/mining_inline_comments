{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5MDAyMjg3", "number": 472, "title": "[Microservice] Data Plane Mgr v2.0 Implementation", "bodyText": "This PR proposes a major refactor of Data Plane Manager. The change includes:\n\nDPM v2.0 framework\nSupport of port creation\nSupport of router configuration", "createdAt": "2020-11-11T07:11:21Z", "url": "https://github.com/futurewei-cloud/alcor/pull/472", "merged": true, "mergeCommit": {"oid": "ff19c6b5bdf45b81572409e66201b04fe94a6fcb"}, "closed": true, "closedAt": "2020-11-18T04:02:40Z", "author": {"login": "chenpiaoping"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbbG30ABqjM5ODMwOTk4MDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddmEVdAFqTUzMzA4NTg3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71e697c40c2f40693989a575195ad15932063ea0", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/71e697c40c2f40693989a575195ad15932063ea0", "committedDate": "2020-11-11T09:53:27Z", "message": "Routing information configuration"}, "afterCommit": {"oid": "219da6f9e4e36675175b82d034de2ccf5430a4f3", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/219da6f9e4e36675175b82d034de2ccf5430a4f3", "committedDate": "2020-11-11T10:04:05Z", "message": "Routing information configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMjIwNDE2", "url": "https://github.com/futurewei-cloud/alcor/pull/472#pullrequestreview-530220416", "createdAt": "2020-11-13T16:43:19Z", "commit": {"oid": "219da6f9e4e36675175b82d034de2ccf5430a4f3"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjo0MzoyMFrOHy1vqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjo1ODo1N1rOHy2V0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3MTQwMg==", "bodyText": "Next step, we might consider to change InternalDPMResultList as well. DPM client (RM or PM) would need to process the response of DPM in a near future, and in the scenario of large VPC, the current form of response is inefficient due to a list member.\nAlso, as we discussed last time on the Slack channel, DPM would need to aggregate the response on the level of resource that DPM receives from the client, for example,\n\nPM => DPM is per port, therefore, the response DPM => PM is on the same port, which is not the case right now.", "url": "https://github.com/futurewei-cloud/alcor/pull/472#discussion_r523071402", "createdAt": "2020-11-13T16:43:20Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/DataPlaneService.java", "diffHunk": "@@ -16,10 +16,34 @@\n package com.futurewei.alcor.dataplane.service;\n \n import com.futurewei.alcor.web.entity.dataplane.InternalDPMResultList;\n-import com.futurewei.alcor.web.entity.dataplane.NetworkConfiguration;\n+import com.futurewei.alcor.web.entity.dataplane.v2.NetworkConfiguration;\n \n public interface DataPlaneService {\n+\n+    /**\n+     * process create network configuration message and send to ACA nodes\n+     *\n+     * @param networkConfiguration network configuration details\n+     * @return InternalDPMResultList result list\n+     * @throws Exception throw any Exception\n+     */\n     InternalDPMResultList createNetworkConfiguration(NetworkConfiguration networkConfiguration) throws Exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "219da6f9e4e36675175b82d034de2ccf5430a4f3"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3Mzg5Mg==", "bodyText": "What do you think of the coding style of more conventional for-loop vs. stream?", "url": "https://github.com/futurewei-cloud/alcor/pull/472#discussion_r523073892", "createdAt": "2020-11-13T16:47:15Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/ovs/DataPlaneServiceImpl.java", "diffHunk": "@@ -78,37 +92,47 @@ private VpcEntity getVpcEntity(NetworkConfiguration networkConfig, String vpcId)\n         return result;\n     }\n \n-    private void buildVpcState(NetworkConfiguration networkConfig, GoalState.Builder goalStateBuilder) throws Exception {\n-        List<PortState> portStates = goalStateBuilder.getPortStatesList();\n+    private void buildVpcStates(NetworkConfiguration networkConfig, UnicastGoalState unicastGoalState) throws Exception {\n+        List<PortState> portStates = unicastGoalState.getGoalStateBuilder().getPortStatesList();\n         if (portStates == null || portStates.size() == 0) {\n             return;\n         }\n \n         for (PortState portState: portStates) {\n             VpcEntity vpcEntity = getVpcEntity(networkConfig, portState.getConfiguration().getVpcId());\n             VpcConfiguration.Builder vpcConfigBuilder = VpcConfiguration.newBuilder();\n+            vpcConfigBuilder.setFormatVersion(FORMAT_REVISION_NUMBER);\n+            vpcConfigBuilder.setRevisionNumber(FORMAT_REVISION_NUMBER);\n             vpcConfigBuilder.setId(vpcEntity.getId());\n             vpcConfigBuilder.setProjectId(vpcEntity.getProjectId());\n-            vpcConfigBuilder.setName(vpcEntity.getName());\n-            vpcConfigBuilder.setCidr(vpcEntity.getCidr());\n-            vpcConfigBuilder.setTunnelId(Long.parseLong(vpcEntity.getSegmentationId() + \"\"));\n-\n-            networkConfig.getSubnets().stream()\n-                    .filter(s -> s.getVpcId().equals(vpcEntity.getId()))\n-                    .map(InternalSubnetEntity::getId)\n-                    .forEach(id -> {\n-                        SubnetId.Builder subnetIdBuilder = SubnetId.newBuilder();\n-                        subnetIdBuilder.setId(id);\n-                        vpcConfigBuilder.addSubnetIds(subnetIdBuilder.build());\n-                    });\n \n+            if (vpcEntity.getName() != null) {\n+                vpcConfigBuilder.setName(vpcEntity.getName());\n+            }\n+\n+            if (vpcEntity.getCidr() != null) {\n+                vpcConfigBuilder.setCidr(vpcEntity.getCidr());\n+            }\n+\n+            //vpcConfigBuilder.setTunnelId();\n+\n+            if (networkConfig.getSubnets() != null) {\n+                networkConfig.getSubnets().stream()\n+                        .filter(s -> s.getVpcId().equals(vpcEntity.getId()))\n+                        .map(InternalSubnetEntity::getId)\n+                        .forEach(id -> {\n+                            SubnetId.Builder subnetIdBuilder = SubnetId.newBuilder();\n+                            subnetIdBuilder.setId(id);\n+                            vpcConfigBuilder.addSubnetIds(subnetIdBuilder.build());\n+                        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "219da6f9e4e36675175b82d034de2ccf5430a4f3"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3OTA5MA==", "bodyText": "@chenpiaoping As UnicastGoalState and MulticastGoalState are two key entity classes in the DPM v2.0 implementation, can you add a brief comment in the file to explain what they are etc., so that others could get the idea easily?", "url": "https://github.com/futurewei-cloud/alcor/pull/472#discussion_r523079090", "createdAt": "2020-11-13T16:55:26Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/entity/UnicastGoalState.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.dataplane.entity;\n+\n+import com.futurewei.alcor.schema.Goalstate.GoalState;\n+\n+public class UnicastGoalState {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "219da6f9e4e36675175b82d034de2ccf5430a4f3"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA4MTE3MA==", "bodyText": "You can use a reference to Issue #369 or update the MQ design doc https://github.com/futurewei-cloud/alcor/blob/master/docs/modules/ROOT/pages/mq_services/message_queue_system.adoc (better option).", "url": "https://github.com/futurewei-cloud/alcor/pull/472#discussion_r523081170", "createdAt": "2020-11-13T16:58:57Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/entity/UnicastGoalState.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.dataplane.entity;\n+\n+import com.futurewei.alcor.schema.Goalstate.GoalState;\n+\n+public class UnicastGoalState {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA3OTA5MA=="}, "originalCommit": {"oid": "219da6f9e4e36675175b82d034de2ccf5430a4f3"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bc164190bb3f8c36bca3921cb4bdce2f4c72d8c", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/4bc164190bb3f8c36bca3921cb4bdce2f4c72d8c", "committedDate": "2020-11-18T02:56:00Z", "message": "dpm-v2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf159a9af7da67f5ab2e6f16d4937fcd2d651be0", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/cf159a9af7da67f5ab2e6f16d4937fcd2d651be0", "committedDate": "2020-11-18T02:56:03Z", "message": "add revision number"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85ae57dce4fe9fc50f70cd8eea2b47d28c6e5cac", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/85ae57dce4fe9fc50f70cd8eea2b47d28c6e5cac", "committedDate": "2020-11-18T02:56:05Z", "message": "Routing information configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92d0f0e8cf1f31bb161c86150776922b77e308b7", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/92d0f0e8cf1f31bb161c86150776922b77e308b7", "committedDate": "2020-11-18T03:40:35Z", "message": "rebase from master"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "219da6f9e4e36675175b82d034de2ccf5430a4f3", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/219da6f9e4e36675175b82d034de2ccf5430a4f3", "committedDate": "2020-11-11T10:04:05Z", "message": "Routing information configuration"}, "afterCommit": {"oid": "92d0f0e8cf1f31bb161c86150776922b77e308b7", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/92d0f0e8cf1f31bb161c86150776922b77e308b7", "committedDate": "2020-11-18T03:40:35Z", "message": "rebase from master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMDg1ODc3", "url": "https://github.com/futurewei-cloud/alcor/pull/472#pullrequestreview-533085877", "createdAt": "2020-11-18T03:53:55Z", "commit": {"oid": "92d0f0e8cf1f31bb161c86150776922b77e308b7"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMzo1Mzo1NlrOH1Zpow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMzo1OTo1M1rOH1aAGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc1NjgzNQ==", "bodyText": "This is very nice comment. Thanks!", "url": "https://github.com/futurewei-cloud/alcor/pull/472#discussion_r525756835", "createdAt": "2020-11-18T03:53:56Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/entity/MulticastGoalState.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.dataplane.entity;\n+\n+import com.futurewei.alcor.schema.Goalstate.GoalState;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * MulticastGoalState represents the GoalState that needs to be sent by multicast,\n+ * that is the same GoalState message needs to be sent to multiple host, MulticastGoalState\n+ * including a goalState object and multiple destination host ip addresses to which\n+ * the GoalState object is sent. It also contains a nextTopics field to support\n+ * the hierarchical topic of pulsar, which is used by pulsar to decide which topics to\n+ * send goalState to. The field goalStateBuilder is a temporary object that is used to\n+ * construct a goalState object that must be cleared before the MulticastGoalState is sent.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92d0f0e8cf1f31bb161c86150776922b77e308b7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc2MDY1OQ==", "bodyText": "@chenpiaoping Consider to use some design pattern for this field later.", "url": "https://github.com/futurewei-cloud/alcor/pull/472#discussion_r525760659", "createdAt": "2020-11-18T03:57:57Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/entity/MulticastGoalState.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.dataplane.entity;\n+\n+import com.futurewei.alcor.schema.Goalstate.GoalState;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * MulticastGoalState represents the GoalState that needs to be sent by multicast,\n+ * that is the same GoalState message needs to be sent to multiple host, MulticastGoalState\n+ * including a goalState object and multiple destination host ip addresses to which\n+ * the GoalState object is sent. It also contains a nextTopics field to support\n+ * the hierarchical topic of pulsar, which is used by pulsar to decide which topics to\n+ * send goalState to. The field goalStateBuilder is a temporary object that is used to\n+ * construct a goalState object that must be cleared before the MulticastGoalState is sent.\n+ */\n+public class MulticastGoalState {\n+    private List<String> hostIps;\n+    private List<String> nextTopics;\n+    private GoalState goalState;\n+    private GoalState.Builder goalStateBuilder;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92d0f0e8cf1f31bb161c86150776922b77e308b7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc2MjU4Nw==", "bodyText": "Agreed. This new URL makes more sense.", "url": "https://github.com/futurewei-cloud/alcor/pull/472#discussion_r525762587", "createdAt": "2020-11-18T03:59:53Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/controller/DataPlaneController.java", "diffHunk": "@@ -16,34 +16,42 @@\n package com.futurewei.alcor.dataplane.controller;\n \n import com.futurewei.alcor.common.stats.DurationStatistics;\n-import com.futurewei.alcor.dataplane.service.DataPlaneServiceNew;\n+import com.futurewei.alcor.dataplane.service.DataPlaneService;\n import com.futurewei.alcor.web.entity.dataplane.InternalDPMResultList;\n import com.futurewei.alcor.web.entity.dataplane.v2.NetworkConfiguration;\n import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.ComponentScan;\n import org.springframework.http.HttpStatus;\n import org.springframework.web.bind.annotation.*;\n \n+import static com.futurewei.alcor.dataplane.utils.RestParameterValidator.checkNetworkConfiguration;\n+\n+@RestController\n+@ComponentScan(value = \"com.futurewei.alcor.common.stats\")\n public class DataPlaneController {\n \n     @Autowired\n-    private DataPlaneServiceNew dataPlaneService;\n+    private DataPlaneService dataPlaneService;\n \n-    @PostMapping({\"/port/\", \"v4/port/\"})\n+    @PostMapping({\"/network-configuration\", \"v4/network-configuration\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92d0f0e8cf1f31bb161c86150776922b77e308b7"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2031, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}