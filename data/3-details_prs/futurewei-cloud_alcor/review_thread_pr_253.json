{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTQ2NjI3", "number": 253, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjozMDozMVrOEGNg3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDoxNjoxMVrOELFkZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTQ4MzE2OnYy", "diffSide": "RIGHT", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/proxy/RouteManagerProxy.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjozMDozMVrOGk3aGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODo1Njo0NlrOGsZqWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwOTcyMw==", "bodyText": "Create Issue #255 for tracking.", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r441309723", "createdAt": "2020-06-17T06:30:31Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/proxy/RouteManagerProxy.java", "diffHunk": "@@ -45,23 +46,25 @@ public RouteManagerProxy(Stack<Rollback> rollbacks) {\n     public PortBindingRoute getRouteBySubnetId(Object arg1, Object arg2) throws Exception {\n         String portId = (String)arg1;\n         String subnetId = (String)arg2;\n-        RouteWebJson routeWebJson = routeManagerRestClient.getRouteBySubnetId(subnetId);\n-        if (routeWebJson == null || routeWebJson.getRoute() == null) {\n+        RoutesWebJson routesWebJson = routeManagerRestClient.getRouteBySubnetId(subnetId);\n+        if (routesWebJson == null || routesWebJson.getRoutes() == null) {\n             throw new GetRouteEntityException();\n         }\n \n-        return new PortBindingRoute(portId, routeWebJson.getRoute());\n+        // FIXME : we should bind a port with several route rules\n+        return new PortBindingRoute(portId, routesWebJson.getRoutes().get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5179753093c2edf7d26f9c439d8292a8a2930d14"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwNDYxNA==", "bodyText": "Thanks Liguang!", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r442404614", "createdAt": "2020-06-18T17:57:10Z", "author": {"login": "kevin-zhonghao"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/proxy/RouteManagerProxy.java", "diffHunk": "@@ -45,23 +46,25 @@ public RouteManagerProxy(Stack<Rollback> rollbacks) {\n     public PortBindingRoute getRouteBySubnetId(Object arg1, Object arg2) throws Exception {\n         String portId = (String)arg1;\n         String subnetId = (String)arg2;\n-        RouteWebJson routeWebJson = routeManagerRestClient.getRouteBySubnetId(subnetId);\n-        if (routeWebJson == null || routeWebJson.getRoute() == null) {\n+        RoutesWebJson routesWebJson = routeManagerRestClient.getRouteBySubnetId(subnetId);\n+        if (routesWebJson == null || routesWebJson.getRoutes() == null) {\n             throw new GetRouteEntityException();\n         }\n \n-        return new PortBindingRoute(portId, routeWebJson.getRoute());\n+        // FIXME : we should bind a port with several route rules\n+        return new PortBindingRoute(portId, routesWebJson.getRoutes().get(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwOTcyMw=="}, "originalCommit": {"oid": "5179753093c2edf7d26f9c439d8292a8a2930d14"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIxMDk3MA==", "bodyText": "Np. Let us keep this comment unresolved to remind us.", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449210970", "createdAt": "2020-07-02T18:56:46Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/proxy/RouteManagerProxy.java", "diffHunk": "@@ -45,23 +46,25 @@ public RouteManagerProxy(Stack<Rollback> rollbacks) {\n     public PortBindingRoute getRouteBySubnetId(Object arg1, Object arg2) throws Exception {\n         String portId = (String)arg1;\n         String subnetId = (String)arg2;\n-        RouteWebJson routeWebJson = routeManagerRestClient.getRouteBySubnetId(subnetId);\n-        if (routeWebJson == null || routeWebJson.getRoute() == null) {\n+        RoutesWebJson routesWebJson = routeManagerRestClient.getRouteBySubnetId(subnetId);\n+        if (routesWebJson == null || routesWebJson.getRoutes() == null) {\n             throw new GetRouteEntityException();\n         }\n \n-        return new PortBindingRoute(portId, routeWebJson.getRoute());\n+        // FIXME : we should bind a port with several route rules\n+        return new PortBindingRoute(portId, routesWebJson.getRoutes().get(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwOTcyMw=="}, "originalCommit": {"oid": "5179753093c2edf7d26f9c439d8292a8a2930d14"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTQ4Njg3OnYy", "diffSide": "RIGHT", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/util/NetworkConfigurationUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjozMTo1NFrOGk3cXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowNDoyOVrOGl6ejg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMDMwMA==", "bodyText": "It seems that we didn't format this file using Ctrl+Shift+L :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r441310300", "createdAt": "2020-06-17T06:31:54Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/util/NetworkConfigurationUtil.java", "diffHunk": "@@ -137,7 +137,8 @@ public static NetworkConfiguration buildNetworkConfiguration(List<Object> entiti\n                 }\n \n                 if (!subnetUniqueIds.contains(subnetId)) {\n-                    Long tunnelId = subnetEntity.getTenantId() !=null ? Long.valueOf(subnetEntity.getTenantId()): null;\n+                    // FIXME \uff1asubnetEntity.getVpcId().hashCode() need to be changed to segmentId\n+                    Long tunnelId = subnetEntity.getTenantId() !=null ? Long.valueOf(getHashCode(subnetEntity.getVpcId())): null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5179753093c2edf7d26f9c439d8292a8a2930d14"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMDg1Ng==", "bodyText": "This line of code is quite long and a bit buggy. Let us move it to an util method with appropriate check.", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r441310856", "createdAt": "2020-06-17T06:33:09Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/util/NetworkConfigurationUtil.java", "diffHunk": "@@ -137,7 +137,8 @@ public static NetworkConfiguration buildNetworkConfiguration(List<Object> entiti\n                 }\n \n                 if (!subnetUniqueIds.contains(subnetId)) {\n-                    Long tunnelId = subnetEntity.getTenantId() !=null ? Long.valueOf(subnetEntity.getTenantId()): null;\n+                    // FIXME \uff1asubnetEntity.getVpcId().hashCode() need to be changed to segmentId\n+                    Long tunnelId = subnetEntity.getTenantId() !=null ? Long.valueOf(getHashCode(subnetEntity.getVpcId())): null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMDMwMA=="}, "originalCommit": {"oid": "5179753093c2edf7d26f9c439d8292a8a2930d14"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwODU5MA==", "bodyText": "NP", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r442408590", "createdAt": "2020-06-18T18:04:29Z", "author": {"login": "kevin-zhonghao"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/util/NetworkConfigurationUtil.java", "diffHunk": "@@ -137,7 +137,8 @@ public static NetworkConfiguration buildNetworkConfiguration(List<Object> entiti\n                 }\n \n                 if (!subnetUniqueIds.contains(subnetId)) {\n-                    Long tunnelId = subnetEntity.getTenantId() !=null ? Long.valueOf(subnetEntity.getTenantId()): null;\n+                    // FIXME \uff1asubnetEntity.getVpcId().hashCode() need to be changed to segmentId\n+                    Long tunnelId = subnetEntity.getTenantId() !=null ? Long.valueOf(getHashCode(subnetEntity.getVpcId())): null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMDMwMA=="}, "originalCommit": {"oid": "5179753093c2edf7d26f9c439d8292a8a2930d14"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTQ5Mjk4OnYy", "diffSide": "RIGHT", "path": "services/port_manager/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjozNDoxMlrOGk3gDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODowNDoxNVrOGsYJ0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMTI0NA==", "bodyText": "Please remove local change. We learned the lesson before :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r441311244", "createdAt": "2020-06-17T06:34:12Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/resources/application.properties", "diffHunk": "@@ -16,6 +16,6 @@ microservices.subnet.service.url=http://localhost:9002\n microservices.route.service.url=http://localhost:9003/routes\n microservices.ip.service.url=http://localhost:9004/ips\n microservices.mac.service.url=http://localhost:9005/macs\n-microservices.sg.service.url=http://127.0.0.1:9006/securitygroups\n+microservices.sg.service.url=http://localhost:9008\n microservices.node.service.url=http://localhost:9007/nodes\n-microservices.dataplane.service.url=http://localhost:9100\n\\ No newline at end of file\n+microservices.dataplane.service.url=http://10.213.43.187:8080/v4/port/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5179753093c2edf7d26f9c439d8292a8a2930d14"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwNzI3MA==", "bodyText": "Yeah ~ I would change it when next submit", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r442407270", "createdAt": "2020-06-18T18:02:07Z", "author": {"login": "kevin-zhonghao"}, "path": "services/port_manager/src/main/resources/application.properties", "diffHunk": "@@ -16,6 +16,6 @@ microservices.subnet.service.url=http://localhost:9002\n microservices.route.service.url=http://localhost:9003/routes\n microservices.ip.service.url=http://localhost:9004/ips\n microservices.mac.service.url=http://localhost:9005/macs\n-microservices.sg.service.url=http://127.0.0.1:9006/securitygroups\n+microservices.sg.service.url=http://localhost:9008\n microservices.node.service.url=http://localhost:9007/nodes\n-microservices.dataplane.service.url=http://localhost:9100\n\\ No newline at end of file\n+microservices.dataplane.service.url=http://10.213.43.187:8080/v4/port/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMTI0NA=="}, "originalCommit": {"oid": "5179753093c2edf7d26f9c439d8292a8a2930d14"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxMzAwMA==", "bodyText": "@kevin-zhonghao Just a reminder.", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r447313000", "createdAt": "2020-06-29T23:19:36Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/resources/application.properties", "diffHunk": "@@ -16,6 +16,6 @@ microservices.subnet.service.url=http://localhost:9002\n microservices.route.service.url=http://localhost:9003/routes\n microservices.ip.service.url=http://localhost:9004/ips\n microservices.mac.service.url=http://localhost:9005/macs\n-microservices.sg.service.url=http://127.0.0.1:9006/securitygroups\n+microservices.sg.service.url=http://localhost:9008\n microservices.node.service.url=http://localhost:9007/nodes\n-microservices.dataplane.service.url=http://localhost:9100\n\\ No newline at end of file\n+microservices.dataplane.service.url=http://10.213.43.187:8080/v4/port/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMTI0NA=="}, "originalCommit": {"oid": "5179753093c2edf7d26f9c439d8292a8a2930d14"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NjI1Ng==", "bodyText": "Fix it", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449186256", "createdAt": "2020-07-02T18:04:15Z", "author": {"login": "kevin-zhonghao"}, "path": "services/port_manager/src/main/resources/application.properties", "diffHunk": "@@ -16,6 +16,6 @@ microservices.subnet.service.url=http://localhost:9002\n microservices.route.service.url=http://localhost:9003/routes\n microservices.ip.service.url=http://localhost:9004/ips\n microservices.mac.service.url=http://localhost:9005/macs\n-microservices.sg.service.url=http://127.0.0.1:9006/securitygroups\n+microservices.sg.service.url=http://localhost:9008\n microservices.node.service.url=http://localhost:9007/nodes\n-microservices.dataplane.service.url=http://localhost:9100\n\\ No newline at end of file\n+microservices.dataplane.service.url=http://10.213.43.187:8080/v4/port/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMTI0NA=="}, "originalCommit": {"oid": "5179753093c2edf7d26f9c439d8292a8a2930d14"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTQ5ODkxOnYy", "diffSide": "RIGHT", "path": "web/src/main/java/com/futurewei/alcor/web/entity/route/RouteWithSubnetMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjozNjozMFrOGk3joA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxODowMjoyMFrOGl6ZvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMjE2MA==", "bodyText": "SubnetToRouteMapper?", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r441312160", "createdAt": "2020-06-17T06:36:30Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/route/RouteWithSubnetMapper.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.web.entity.route;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.Data;\n+import org.springframework.data.annotation.CreatedDate;\n+import org.springframework.data.annotation.LastModifiedDate;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+@Data\n+public class RouteWithSubnetMapper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5179753093c2edf7d26f9c439d8292a8a2930d14"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwNzM1Ng==", "bodyText": "Sure", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r442407356", "createdAt": "2020-06-18T18:02:20Z", "author": {"login": "kevin-zhonghao"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/route/RouteWithSubnetMapper.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.web.entity.route;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.Data;\n+import org.springframework.data.annotation.CreatedDate;\n+import org.springframework.data.annotation.LastModifiedDate;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+@Data\n+public class RouteWithSubnetMapper {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMxMjE2MA=="}, "originalCommit": {"oid": "5179753093c2edf7d26f9c439d8292a8a2930d14"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzgwNjk1OnYy", "diffSide": "RIGHT", "path": "kubernetes/services/sg_manager.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzoxMjo1NFrOGqlsEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODowNjowOFrOGsYNnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxMDg2Ng==", "bodyText": "We will need to add one more step of pushing container image to the \"official\" container registry in the CI workflow (for every PR merge) so that this yaml file could pull the latest \"official\" image.\nCreate an issue ##270 for tracking.", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r447310866", "createdAt": "2020-06-29T23:12:54Z", "author": {"login": "xieus"}, "path": "kubernetes/services/sg_manager.yaml", "diffHunk": "@@ -0,0 +1,63 @@\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: sg-configmap\n+data:\n+  application.properties: |\n+    ignite.host=10.99.135.32\n+    ignite.port=10800\n+---\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  labels:\n+    app: sgmanager\n+  name: sgmanager\n+spec:\n+  selector:\n+    matchLabels:\n+      app: sgmanager\n+  replicas: 1\n+  #replicas: 3\n+  template:\n+    metadata:\n+      labels:\n+        app: sgmanager\n+    spec:\n+      volumes:\n+        - name: sg-volume\n+          configMap:\n+            name: sg-configmap\n+            items:\n+              - key: application.properties\n+                path: application.properties\n+      containers:\n+        - image: zhonghaolyu/repo:sgKube1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NzIyOQ==", "bodyText": "Sure ~ when CI is finished, I'll change it", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449187229", "createdAt": "2020-07-02T18:06:08Z", "author": {"login": "kevin-zhonghao"}, "path": "kubernetes/services/sg_manager.yaml", "diffHunk": "@@ -0,0 +1,63 @@\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: sg-configmap\n+data:\n+  application.properties: |\n+    ignite.host=10.99.135.32\n+    ignite.port=10800\n+---\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  labels:\n+    app: sgmanager\n+  name: sgmanager\n+spec:\n+  selector:\n+    matchLabels:\n+      app: sgmanager\n+  replicas: 1\n+  #replicas: 3\n+  template:\n+    metadata:\n+      labels:\n+        app: sgmanager\n+    spec:\n+      volumes:\n+        - name: sg-volume\n+          configMap:\n+            name: sg-configmap\n+            items:\n+              - key: application.properties\n+                path: application.properties\n+      containers:\n+        - image: zhonghaolyu/repo:sgKube1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxMDg2Ng=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzgxMDEwOnYy", "diffSide": "RIGHT", "path": "kubernetes/services/sg_manager.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzoxNDoyMVrOGqlt4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzoyNDoxNVrOGsW54w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxMTMzMQ==", "bodyText": "How big is the image? We could want to change the policy to alwaysPull.", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r447311331", "createdAt": "2020-06-29T23:14:21Z", "author": {"login": "xieus"}, "path": "kubernetes/services/sg_manager.yaml", "diffHunk": "@@ -0,0 +1,63 @@\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: sg-configmap\n+data:\n+  application.properties: |\n+    ignite.host=10.99.135.32\n+    ignite.port=10800\n+---\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  labels:\n+    app: sgmanager\n+  name: sgmanager\n+spec:\n+  selector:\n+    matchLabels:\n+      app: sgmanager\n+  replicas: 1\n+  #replicas: 3\n+  template:\n+    metadata:\n+      labels:\n+        app: sgmanager\n+    spec:\n+      volumes:\n+        - name: sg-volume\n+          configMap:\n+            name: sg-configmap\n+            items:\n+              - key: application.properties\n+                path: application.properties\n+      containers:\n+        - image: zhonghaolyu/repo:sgKube1\n+        #- image: fwnetworking/controller:node_manager-v0.3.0\n+          name: sgmanager-web\n+          imagePullPolicy: IfNotPresent", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE2NTc5NQ==", "bodyText": "About several hundreds MB", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449165795", "createdAt": "2020-07-02T17:24:15Z", "author": {"login": "kevin-zhonghao"}, "path": "kubernetes/services/sg_manager.yaml", "diffHunk": "@@ -0,0 +1,63 @@\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: sg-configmap\n+data:\n+  application.properties: |\n+    ignite.host=10.99.135.32\n+    ignite.port=10800\n+---\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  labels:\n+    app: sgmanager\n+  name: sgmanager\n+spec:\n+  selector:\n+    matchLabels:\n+      app: sgmanager\n+  replicas: 1\n+  #replicas: 3\n+  template:\n+    metadata:\n+      labels:\n+        app: sgmanager\n+    spec:\n+      volumes:\n+        - name: sg-volume\n+          configMap:\n+            name: sg-configmap\n+            items:\n+              - key: application.properties\n+                path: application.properties\n+      containers:\n+        - image: zhonghaolyu/repo:sgKube1\n+        #- image: fwnetworking/controller:node_manager-v0.3.0\n+          name: sgmanager-web\n+          imagePullPolicy: IfNotPresent", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxMTMzMQ=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzgxMjYzOnYy", "diffSide": "RIGHT", "path": "kubernetes/services/sg_manager.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzoxNToyMFrOGqlvUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzoxNToyMFrOGqlvUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxMTY5OQ==", "bodyText": "ClusterIP or NodePort? Let us discuss.", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r447311699", "createdAt": "2020-06-29T23:15:20Z", "author": {"login": "xieus"}, "path": "kubernetes/services/sg_manager.yaml", "diffHunk": "@@ -0,0 +1,63 @@\n+apiVersion: v1\n+kind: ConfigMap\n+metadata:\n+  name: sg-configmap\n+data:\n+  application.properties: |\n+    ignite.host=10.99.135.32\n+    ignite.port=10800\n+---\n+apiVersion: apps/v1\n+kind: Deployment\n+metadata:\n+  labels:\n+    app: sgmanager\n+  name: sgmanager\n+spec:\n+  selector:\n+    matchLabels:\n+      app: sgmanager\n+  replicas: 1\n+  #replicas: 3\n+  template:\n+    metadata:\n+      labels:\n+        app: sgmanager\n+    spec:\n+      volumes:\n+        - name: sg-volume\n+          configMap:\n+            name: sg-configmap\n+            items:\n+              - key: application.properties\n+                path: application.properties\n+      containers:\n+        - image: zhonghaolyu/repo:sgKube1\n+        #- image: fwnetworking/controller:node_manager-v0.3.0\n+          name: sgmanager-web\n+          imagePullPolicy: IfNotPresent\n+          command: [\"java\", \"-jar\", \"/app/AlcorSecurityGroupManager-0.0.1-SNAPSHOT.jar\", \"--spring.config.location=/etc/sg/application.properties\"]\n+          ports:\n+            - containerPort: 8080\n+          volumeMounts:\n+            - name: sg-volume\n+              mountPath: /etc/sg\n+          envFrom:\n+            - configMapRef:\n+                name: sg-configmap\n+---\n+apiVersion: v1\n+kind: Service\n+metadata:\n+  name: sgmanager-service\n+  labels:\n+    name: sgmanager-service\n+spec:\n+  type: NodePort", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzgyNzUxOnYy", "diffSide": "RIGHT", "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/controller/RouteController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzoyMjowMFrOGql35Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODowNzoxNlrOGsYP1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxMzg5Mw==", "bodyText": "@kevin-zhonghao We may need to change the API doc if any.", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r447313893", "createdAt": "2020-06-29T23:22:00Z", "author": {"login": "xieus"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/controller/RouteController.java", "diffHunk": "@@ -45,40 +49,69 @@\n     @Autowired\n     private RouteDatabaseService routeDatabaseService;\n \n+    @Autowired\n+    private RouteWithVpcMapperService routeWithVpcMapperService;\n+\n+    @Autowired\n+    private RouteWithSubnetMapperService routeWithSubnetMapperService;\n+\n     @RequestMapping(\n             method = GET,\n-            value = {\"/vpcs/{vpcId}/routes/{routeId}\"})\n-    public RouteWebJson getRuleByVpcId(@PathVariable String vpcId, @PathVariable String routeId) throws Exception {\n+            value = {\"routes/vpcs/{vpcId}/get\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4Nzc5Nw==", "bodyText": "It seems we didn't have route API doc right now, I will add it after", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449187797", "createdAt": "2020-07-02T18:07:16Z", "author": {"login": "kevin-zhonghao"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/controller/RouteController.java", "diffHunk": "@@ -45,40 +49,69 @@\n     @Autowired\n     private RouteDatabaseService routeDatabaseService;\n \n+    @Autowired\n+    private RouteWithVpcMapperService routeWithVpcMapperService;\n+\n+    @Autowired\n+    private RouteWithSubnetMapperService routeWithSubnetMapperService;\n+\n     @RequestMapping(\n             method = GET,\n-            value = {\"/vpcs/{vpcId}/routes/{routeId}\"})\n-    public RouteWebJson getRuleByVpcId(@PathVariable String vpcId, @PathVariable String routeId) throws Exception {\n+            value = {\"routes/vpcs/{vpcId}/get\"})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxMzg5Mw=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NzgzMzQ3OnYy", "diffSide": "RIGHT", "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/controller/RouteController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzoyNDo0OVrOGql7cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODowNzozM1rOGsYQYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxNDgwMQ==", "bodyText": "Let us change the route manager exception handling in this PR.\nOne idea is to define different exception (each with specific error codes and message), and we could throw a specific exception instead of a general exception.\nAn example is Port Manager which defines 20+ different exceptions for various corner cases.\nhttps://github.com/futurewei-cloud/alcor/tree/master/services/port_manager/src/main/java/com/futurewei/alcor/portmanager/exception", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r447314801", "createdAt": "2020-06-29T23:24:49Z", "author": {"login": "xieus"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/controller/RouteController.java", "diffHunk": "@@ -45,40 +49,69 @@\n     @Autowired\n     private RouteDatabaseService routeDatabaseService;\n \n+    @Autowired\n+    private RouteWithVpcMapperService routeWithVpcMapperService;\n+\n+    @Autowired\n+    private RouteWithSubnetMapperService routeWithSubnetMapperService;\n+\n     @RequestMapping(\n             method = GET,\n-            value = {\"/vpcs/{vpcId}/routes/{routeId}\"})\n-    public RouteWebJson getRuleByVpcId(@PathVariable String vpcId, @PathVariable String routeId) throws Exception {\n+            value = {\"routes/vpcs/{vpcId}/get\"})\n+    public RoutesWebJson getRulesByVpcId(@PathVariable String vpcId) throws Exception {\n \n-        RouteEntity routeEntity = null;\n+        List<RouteEntity> routes = null;\n \n         try {\n             RestPreconditionsUtil.verifyParameterNotNullorEmpty(vpcId);\n-            RestPreconditionsUtil.verifyParameterNotNullorEmpty(routeId);\n \n-            routeEntity = this.routeDatabaseService.getByRouteId(routeId);\n+            routes = this.routeWithVpcMapperService.getRuleByVpcId(vpcId);\n         } catch (ParameterNullOrEmptyException e) {\n             //TODO: REST error code\n             throw new Exception(e);\n         }\n \n-        if (routeEntity == null) {\n+        if (routes == null) {\n             //TODO: REST error code\n-            return new RouteWebJson();\n+            return new RoutesWebJson();\n         }\n \n-        return new RouteWebJson(routeEntity);\n+        return new RoutesWebJson(routes);\n     }\n \n     @RequestMapping(\n             method = GET,\n-            value = {\"/subnets/{subnetId}/routes/{routeId}\"})\n-    public RouteWebJson getRuleBySubnetId(@PathVariable String subnetId, @PathVariable String routeId) throws Exception {\n+            value = {\"routes/subnets/{subnetId}/get\"})\n+    public RoutesWebJson getRulesBySubnetId(@PathVariable String subnetId) throws Exception {\n \n-        RouteEntity routeEntity = null;\n+        List<RouteEntity> routes = null;\n \n         try {\n             RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+\n+            routes = this.routeWithSubnetMapperService.getRuleBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NzkzOQ==", "bodyText": "Got it", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449187939", "createdAt": "2020-07-02T18:07:33Z", "author": {"login": "kevin-zhonghao"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/controller/RouteController.java", "diffHunk": "@@ -45,40 +49,69 @@\n     @Autowired\n     private RouteDatabaseService routeDatabaseService;\n \n+    @Autowired\n+    private RouteWithVpcMapperService routeWithVpcMapperService;\n+\n+    @Autowired\n+    private RouteWithSubnetMapperService routeWithSubnetMapperService;\n+\n     @RequestMapping(\n             method = GET,\n-            value = {\"/vpcs/{vpcId}/routes/{routeId}\"})\n-    public RouteWebJson getRuleByVpcId(@PathVariable String vpcId, @PathVariable String routeId) throws Exception {\n+            value = {\"routes/vpcs/{vpcId}/get\"})\n+    public RoutesWebJson getRulesByVpcId(@PathVariable String vpcId) throws Exception {\n \n-        RouteEntity routeEntity = null;\n+        List<RouteEntity> routes = null;\n \n         try {\n             RestPreconditionsUtil.verifyParameterNotNullorEmpty(vpcId);\n-            RestPreconditionsUtil.verifyParameterNotNullorEmpty(routeId);\n \n-            routeEntity = this.routeDatabaseService.getByRouteId(routeId);\n+            routes = this.routeWithVpcMapperService.getRuleByVpcId(vpcId);\n         } catch (ParameterNullOrEmptyException e) {\n             //TODO: REST error code\n             throw new Exception(e);\n         }\n \n-        if (routeEntity == null) {\n+        if (routes == null) {\n             //TODO: REST error code\n-            return new RouteWebJson();\n+            return new RoutesWebJson();\n         }\n \n-        return new RouteWebJson(routeEntity);\n+        return new RoutesWebJson(routes);\n     }\n \n     @RequestMapping(\n             method = GET,\n-            value = {\"/subnets/{subnetId}/routes/{routeId}\"})\n-    public RouteWebJson getRuleBySubnetId(@PathVariable String subnetId, @PathVariable String routeId) throws Exception {\n+            value = {\"routes/subnets/{subnetId}/get\"})\n+    public RoutesWebJson getRulesBySubnetId(@PathVariable String subnetId) throws Exception {\n \n-        RouteEntity routeEntity = null;\n+        List<RouteEntity> routes = null;\n \n         try {\n             RestPreconditionsUtil.verifyParameterNotNullorEmpty(subnetId);\n+\n+            routes = this.routeWithSubnetMapperService.getRuleBySubnetId(subnetId);\n+        } catch (ParameterNullOrEmptyException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxNDgwMQ=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4Nzg1NDg5OnYy", "diffSide": "RIGHT", "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzozMzo1NlrOGqmHOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODowMjoxNFrOGsYGJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxNzgxNw==", "bodyText": "Can we give a more specific exception here and similar other places?", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r447317817", "createdAt": "2020-06-29T23:33:56Z", "author": {"login": "xieus"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithSubnetMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithSubnetMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.SubnetToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithSubnetMapperServiceImpl implements RouteWithSubnetMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithSubnetMapperRepository routeWithSubnetMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public SubnetToRouteMapper getBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        try {\n+            return this.routeWithSubnetMapperRepository.findItem(subnetId);\n+        }catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4MzY3MA==", "bodyText": "Sure", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449183670", "createdAt": "2020-07-02T17:59:01Z", "author": {"login": "kevin-zhonghao"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithSubnetMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithSubnetMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.SubnetToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithSubnetMapperServiceImpl implements RouteWithSubnetMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithSubnetMapperRepository routeWithSubnetMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public SubnetToRouteMapper getBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        try {\n+            return this.routeWithSubnetMapperRepository.findItem(subnetId);\n+        }catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxNzgxNw=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NTMxOA==", "bodyText": "Sure", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449185318", "createdAt": "2020-07-02T18:02:14Z", "author": {"login": "kevin-zhonghao"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithSubnetMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithSubnetMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.SubnetToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithSubnetMapperServiceImpl implements RouteWithSubnetMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithSubnetMapperRepository routeWithSubnetMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public SubnetToRouteMapper getBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        try {\n+            return this.routeWithSubnetMapperRepository.findItem(subnetId);\n+        }catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxNzgxNw=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4Nzg1OTUyOnYy", "diffSide": "RIGHT", "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzozNToyOVrOGqmJnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODowMjowM1rOGsYF1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxODQyOQ==", "bodyText": "quick question: why do we need two get methods,\ngetBySubnetId => to get SubnetToRouteMapper\ngetRuleBySubnetId => to get the real RouteEntity List\nWhy do we need the first get method?", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r447318429", "createdAt": "2020-06-29T23:35:29Z", "author": {"login": "xieus"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithSubnetMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithSubnetMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.SubnetToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithSubnetMapperServiceImpl implements RouteWithSubnetMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithSubnetMapperRepository routeWithSubnetMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public SubnetToRouteMapper getBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3NjA4Mg==", "bodyText": "I think I dont have getBySubnetId, just getRulesBySubnetId", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449176082", "createdAt": "2020-07-02T17:44:22Z", "author": {"login": "kevin-zhonghao"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithSubnetMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithSubnetMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.SubnetToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithSubnetMapperServiceImpl implements RouteWithSubnetMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithSubnetMapperRepository routeWithSubnetMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public SubnetToRouteMapper getBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxODQyOQ=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NDMyMg==", "bodyText": "Oh I see ~ that's two different method, the one is to get SubnetToRouteMapper entity, the other one is to get List", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449184322", "createdAt": "2020-07-02T18:00:13Z", "author": {"login": "kevin-zhonghao"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithSubnetMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithSubnetMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.SubnetToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithSubnetMapperServiceImpl implements RouteWithSubnetMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithSubnetMapperRepository routeWithSubnetMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public SubnetToRouteMapper getBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxODQyOQ=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NTIzNw==", "bodyText": "The one is to get SubnetToRouteMapper entity, the other one is to get List", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449185237", "createdAt": "2020-07-02T18:02:03Z", "author": {"login": "kevin-zhonghao"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithSubnetMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithSubnetMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.SubnetToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithSubnetMapperServiceImpl implements RouteWithSubnetMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithSubnetMapperRepository routeWithSubnetMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public SubnetToRouteMapper getBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMxODQyOQ=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4Nzg3NDExOnYy", "diffSide": "RIGHT", "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzo0MjoyMFrOGqmR9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODoyMDozNlrOGsYocw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyMDU2Ng==", "bodyText": "In Route Manager ServiceImpl and repo classes, I don't find usage of a transaction.\nPlease find the reference implementation: \n  \n    \n      alcor/services/port_manager/src/main/java/com/futurewei/alcor/portmanager/repo/PortRepository.java\n    \n    \n         Line 66\n      in\n      7c6f138\n    \n    \n    \n    \n\n        \n          \n           public void createPortAndNeighbor(PortEntity portEntity, NeighborInfo neighborInfo) throws Exception { \n        \n    \n  \n\n\n@kevin-zhonghao", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r447320566", "createdAt": "2020-06-29T23:42:20Z", "author": {"login": "xieus"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithSubnetMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithSubnetMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.SubnetToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithSubnetMapperServiceImpl implements RouteWithSubnetMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithSubnetMapperRepository routeWithSubnetMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public SubnetToRouteMapper getBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        try {\n+            return this.routeWithSubnetMapperRepository.findItem(subnetId);\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public List<RouteEntity> getRuleBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        List<RouteEntity> routes = new ArrayList<>();\n+\n+        try {\n+            SubnetToRouteMapper subnetToRouteMapper =  this.routeWithSubnetMapperRepository.findItem(subnetId);\n+            if (subnetToRouteMapper == null) {\n+                return null;\n+            }\n+\n+            List<String> routeIds = subnetToRouteMapper.getRouteIds();\n+            for (String routeId : routeIds) {\n+                RouteEntity route = this.routeRepository.findItem(routeId);\n+                if (route != null) {\n+                    routes.add(route);\n+                }\n+            }\n+\n+            return routes;\n+\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public Map getAllMappers() throws CacheException {\n+        return this.routeWithSubnetMapperRepository.findAllItems();\n+    }\n+\n+    @Override\n+    public void addMapper(SubnetToRouteMapper subnetToRouteMapper) throws DatabasePersistenceException {\n+        try {\n+            this.routeWithSubnetMapperRepository.addItem(subnetToRouteMapper);\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public void addMapperByRouteEntity(String subnetId, RouteEntity routeEntity) throws DatabasePersistenceException {\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3NDczMg==", "bodyText": "Fix it ~", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449174732", "createdAt": "2020-07-02T17:41:38Z", "author": {"login": "kevin-zhonghao"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithSubnetMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithSubnetMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.SubnetToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithSubnetMapperServiceImpl implements RouteWithSubnetMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithSubnetMapperRepository routeWithSubnetMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public SubnetToRouteMapper getBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        try {\n+            return this.routeWithSubnetMapperRepository.findItem(subnetId);\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public List<RouteEntity> getRuleBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        List<RouteEntity> routes = new ArrayList<>();\n+\n+        try {\n+            SubnetToRouteMapper subnetToRouteMapper =  this.routeWithSubnetMapperRepository.findItem(subnetId);\n+            if (subnetToRouteMapper == null) {\n+                return null;\n+            }\n+\n+            List<String> routeIds = subnetToRouteMapper.getRouteIds();\n+            for (String routeId : routeIds) {\n+                RouteEntity route = this.routeRepository.findItem(routeId);\n+                if (route != null) {\n+                    routes.add(route);\n+                }\n+            }\n+\n+            return routes;\n+\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public Map getAllMappers() throws CacheException {\n+        return this.routeWithSubnetMapperRepository.findAllItems();\n+    }\n+\n+    @Override\n+    public void addMapper(SubnetToRouteMapper subnetToRouteMapper) throws DatabasePersistenceException {\n+        try {\n+            this.routeWithSubnetMapperRepository.addItem(subnetToRouteMapper);\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public void addMapperByRouteEntity(String subnetId, RouteEntity routeEntity) throws DatabasePersistenceException {\n+        try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyMDU2Ng=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE4NDg2Ng==", "bodyText": "Sure", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449184866", "createdAt": "2020-07-02T18:01:17Z", "author": {"login": "kevin-zhonghao"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithSubnetMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithSubnetMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.SubnetToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithSubnetMapperServiceImpl implements RouteWithSubnetMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithSubnetMapperRepository routeWithSubnetMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public SubnetToRouteMapper getBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        try {\n+            return this.routeWithSubnetMapperRepository.findItem(subnetId);\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public List<RouteEntity> getRuleBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        List<RouteEntity> routes = new ArrayList<>();\n+\n+        try {\n+            SubnetToRouteMapper subnetToRouteMapper =  this.routeWithSubnetMapperRepository.findItem(subnetId);\n+            if (subnetToRouteMapper == null) {\n+                return null;\n+            }\n+\n+            List<String> routeIds = subnetToRouteMapper.getRouteIds();\n+            for (String routeId : routeIds) {\n+                RouteEntity route = this.routeRepository.findItem(routeId);\n+                if (route != null) {\n+                    routes.add(route);\n+                }\n+            }\n+\n+            return routes;\n+\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public Map getAllMappers() throws CacheException {\n+        return this.routeWithSubnetMapperRepository.findAllItems();\n+    }\n+\n+    @Override\n+    public void addMapper(SubnetToRouteMapper subnetToRouteMapper) throws DatabasePersistenceException {\n+        try {\n+            this.routeWithSubnetMapperRepository.addItem(subnetToRouteMapper);\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public void addMapperByRouteEntity(String subnetId, RouteEntity routeEntity) throws DatabasePersistenceException {\n+        try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyMDU2Ng=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE5NDA5OQ==", "bodyText": "Create a ticket for tracking #274", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449194099", "createdAt": "2020-07-02T18:20:36Z", "author": {"login": "kevin-zhonghao"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithSubnetMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithSubnetMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithSubnetMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.SubnetToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithSubnetMapperServiceImpl implements RouteWithSubnetMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithSubnetMapperRepository routeWithSubnetMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public SubnetToRouteMapper getBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        try {\n+            return this.routeWithSubnetMapperRepository.findItem(subnetId);\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public List<RouteEntity> getRuleBySubnetId(String subnetId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        List<RouteEntity> routes = new ArrayList<>();\n+\n+        try {\n+            SubnetToRouteMapper subnetToRouteMapper =  this.routeWithSubnetMapperRepository.findItem(subnetId);\n+            if (subnetToRouteMapper == null) {\n+                return null;\n+            }\n+\n+            List<String> routeIds = subnetToRouteMapper.getRouteIds();\n+            for (String routeId : routeIds) {\n+                RouteEntity route = this.routeRepository.findItem(routeId);\n+                if (route != null) {\n+                    routes.add(route);\n+                }\n+            }\n+\n+            return routes;\n+\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public Map getAllMappers() throws CacheException {\n+        return this.routeWithSubnetMapperRepository.findAllItems();\n+    }\n+\n+    @Override\n+    public void addMapper(SubnetToRouteMapper subnetToRouteMapper) throws DatabasePersistenceException {\n+        try {\n+            this.routeWithSubnetMapperRepository.addItem(subnetToRouteMapper);\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public void addMapperByRouteEntity(String subnetId, RouteEntity routeEntity) throws DatabasePersistenceException {\n+        try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyMDU2Ng=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4Nzg4MDU4OnYy", "diffSide": "RIGHT", "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithVpcMapperServiceImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzo0NToxMFrOGqmVnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzozNjoyNlrOGsXSag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyMTUwMw==", "bodyText": "We need to run Ctrl+Alt+L for proper code format. Seems that at least this file doesn't follow the formatting guidance.", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r447321503", "createdAt": "2020-06-29T23:45:10Z", "author": {"login": "xieus"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithVpcMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithVpcMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithVpcMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.VpcToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithVpcMapperServiceImpl implements RouteWithVpcMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithVpcMapperRepository routeWithVpcMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public VpcToRouteMapper getByVpcId(String vpcId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        try {\n+            return this.routeWithVpcMapperRepository.findItem(vpcId);\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public List<RouteEntity> getRuleByVpcId(String vpcId) throws ResourceNotFoundException, ResourcePersistenceException {\n+\n+        List<RouteEntity> routes = new ArrayList<>();\n+\n+        try {\n+            VpcToRouteMapper vpcToRouteMapper =  this.routeWithVpcMapperRepository.findItem(vpcId);\n+            if (vpcToRouteMapper == null) {\n+                return null;\n+            }\n+\n+            List<String> routeIds = vpcToRouteMapper.getRouteIds();\n+            for (String routeId : routeIds) {\n+                RouteEntity route = this.routeRepository.findItem(routeId);\n+                if (route != null) {\n+                    routes.add(route);\n+                }\n+            }\n+\n+            return routes;\n+\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public Map getAllMappers() throws CacheException {\n+        return this.routeWithVpcMapperRepository.findAllItems();\n+    }\n+\n+    @Override\n+    public void addMapper(VpcToRouteMapper vpcToRouteMapper) throws DatabasePersistenceException {\n+        try {\n+            this.routeWithVpcMapperRepository.addItem(vpcToRouteMapper);\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public void addMapperByRouteEntity(String vpcId, RouteEntity routeEntity) throws DatabasePersistenceException {\n+        try {\n+            if (routeEntity == null) {\n+                return;\n+            }\n+\n+            String routeId = routeEntity.getId();\n+            VpcToRouteMapper vpcToRouteMapper = getByVpcId(vpcId);\n+            if (vpcToRouteMapper == null) {\n+                vpcToRouteMapper = new VpcToRouteMapper();\n+                vpcToRouteMapper.setVpcId(vpcId);\n+            }\n+            List<String> routeIds = vpcToRouteMapper.getRouteIds();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3MTA2Nw==", "bodyText": "Sure", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449171067", "createdAt": "2020-07-02T17:34:29Z", "author": {"login": "kevin-zhonghao"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithVpcMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithVpcMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithVpcMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.VpcToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithVpcMapperServiceImpl implements RouteWithVpcMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithVpcMapperRepository routeWithVpcMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public VpcToRouteMapper getByVpcId(String vpcId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        try {\n+            return this.routeWithVpcMapperRepository.findItem(vpcId);\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public List<RouteEntity> getRuleByVpcId(String vpcId) throws ResourceNotFoundException, ResourcePersistenceException {\n+\n+        List<RouteEntity> routes = new ArrayList<>();\n+\n+        try {\n+            VpcToRouteMapper vpcToRouteMapper =  this.routeWithVpcMapperRepository.findItem(vpcId);\n+            if (vpcToRouteMapper == null) {\n+                return null;\n+            }\n+\n+            List<String> routeIds = vpcToRouteMapper.getRouteIds();\n+            for (String routeId : routeIds) {\n+                RouteEntity route = this.routeRepository.findItem(routeId);\n+                if (route != null) {\n+                    routes.add(route);\n+                }\n+            }\n+\n+            return routes;\n+\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public Map getAllMappers() throws CacheException {\n+        return this.routeWithVpcMapperRepository.findAllItems();\n+    }\n+\n+    @Override\n+    public void addMapper(VpcToRouteMapper vpcToRouteMapper) throws DatabasePersistenceException {\n+        try {\n+            this.routeWithVpcMapperRepository.addItem(vpcToRouteMapper);\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public void addMapperByRouteEntity(String vpcId, RouteEntity routeEntity) throws DatabasePersistenceException {\n+        try {\n+            if (routeEntity == null) {\n+                return;\n+            }\n+\n+            String routeId = routeEntity.getId();\n+            VpcToRouteMapper vpcToRouteMapper = getByVpcId(vpcId);\n+            if (vpcToRouteMapper == null) {\n+                vpcToRouteMapper = new VpcToRouteMapper();\n+                vpcToRouteMapper.setVpcId(vpcId);\n+            }\n+            List<String> routeIds = vpcToRouteMapper.getRouteIds();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyMTUwMw=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3MjA3NA==", "bodyText": "Sure", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449172074", "createdAt": "2020-07-02T17:36:26Z", "author": {"login": "kevin-zhonghao"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/Impl/RouteWithVpcMapperServiceImpl.java", "diffHunk": "@@ -0,0 +1,154 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service.Impl;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.route.dao.RouteRepository;\n+import com.futurewei.alcor.route.dao.RouteWithVpcMapperRepository;\n+import com.futurewei.alcor.route.service.RouteWithVpcMapperService;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.VpcToRouteMapper;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+@Service\n+public class RouteWithVpcMapperServiceImpl implements RouteWithVpcMapperService {\n+\n+    private Logger logger = LoggerFactory.getLogger(this.getClass());\n+\n+    @Autowired\n+    RouteWithVpcMapperRepository routeWithVpcMapperRepository;\n+\n+    @Autowired\n+    RouteRepository routeRepository;\n+\n+    @Override\n+    public VpcToRouteMapper getByVpcId(String vpcId) throws ResourceNotFoundException, ResourcePersistenceException {\n+        try {\n+            return this.routeWithVpcMapperRepository.findItem(vpcId);\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public List<RouteEntity> getRuleByVpcId(String vpcId) throws ResourceNotFoundException, ResourcePersistenceException {\n+\n+        List<RouteEntity> routes = new ArrayList<>();\n+\n+        try {\n+            VpcToRouteMapper vpcToRouteMapper =  this.routeWithVpcMapperRepository.findItem(vpcId);\n+            if (vpcToRouteMapper == null) {\n+                return null;\n+            }\n+\n+            List<String> routeIds = vpcToRouteMapper.getRouteIds();\n+            for (String routeId : routeIds) {\n+                RouteEntity route = this.routeRepository.findItem(routeId);\n+                if (route != null) {\n+                    routes.add(route);\n+                }\n+            }\n+\n+            return routes;\n+\n+        }catch (Exception e) {\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public Map getAllMappers() throws CacheException {\n+        return this.routeWithVpcMapperRepository.findAllItems();\n+    }\n+\n+    @Override\n+    public void addMapper(VpcToRouteMapper vpcToRouteMapper) throws DatabasePersistenceException {\n+        try {\n+            this.routeWithVpcMapperRepository.addItem(vpcToRouteMapper);\n+        } catch (Exception e) {\n+            throw new DatabasePersistenceException(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public void addMapperByRouteEntity(String vpcId, RouteEntity routeEntity) throws DatabasePersistenceException {\n+        try {\n+            if (routeEntity == null) {\n+                return;\n+            }\n+\n+            String routeId = routeEntity.getId();\n+            VpcToRouteMapper vpcToRouteMapper = getByVpcId(vpcId);\n+            if (vpcToRouteMapper == null) {\n+                vpcToRouteMapper = new VpcToRouteMapper();\n+                vpcToRouteMapper.setVpcId(vpcId);\n+            }\n+            List<String> routeIds = vpcToRouteMapper.getRouteIds();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyMTUwMw=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4Nzg4MjI1OnYy", "diffSide": "RIGHT", "path": "web/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMzo0NTo1OFrOGqmWmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzozMjoyNlrOGsXKYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyMTc1NQ==", "bodyText": "Do we have other fastjson alternative to use?", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r447321755", "createdAt": "2020-06-29T23:45:58Z", "author": {"login": "xieus"}, "path": "web/pom.xml", "diffHunk": "@@ -65,6 +65,12 @@\n             <artifactId>lombok</artifactId>\n             <version>1.18.0</version>\n         </dependency>\n+        <dependency>\n+            <groupId>com.alibaba</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3MDAxOA==", "bodyText": "I think we could remove that, because it is just for testing", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449170018", "createdAt": "2020-07-02T17:32:26Z", "author": {"login": "kevin-zhonghao"}, "path": "web/pom.xml", "diffHunk": "@@ -65,6 +65,12 @@\n             <artifactId>lombok</artifactId>\n             <version>1.18.0</version>\n         </dependency>\n+        <dependency>\n+            <groupId>com.alibaba</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMyMTc1NQ=="}, "originalCommit": {"oid": "d4cc86d2dd6e4b0c325d05e771419a7c234d59ba"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDU3NzE4OnYy", "diffSide": "RIGHT", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/util/NetworkConfigurationUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzo1NDowN1rOGsf89g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMzo1NDowN1rOGsf89g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMxNDAzOA==", "bodyText": "Add a new issue for tracking #275", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449314038", "createdAt": "2020-07-02T23:54:07Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/util/NetworkConfigurationUtil.java", "diffHunk": "@@ -143,7 +143,8 @@ public static NetworkConfiguration buildNetworkConfiguration(List<Object> entiti\n                 }\n \n                 if (!subnetUniqueIds.contains(subnetId)) {\n-                    Long tunnelId = subnetEntity.getTenantId() != null ? Long.valueOf(subnetEntity.getTenantId()) : null;\n+                    // FIXME \uff1asubnetEntity.getVpcId().hashCode() need to be changed to segmentId\n+                    Long tunnelId = getTunnelId(subnetEntity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b5abb9c37715e133129adb53f4b1743c6ccc5f5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDYwMTIyOnYy", "diffSide": "RIGHT", "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/RouteWithSubnetMapperService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDowOTo0OVrOGsgKpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDowOTo0OVrOGsgKpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMxNzU0MQ==", "bodyText": "Add comments if possible.", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449317541", "createdAt": "2020-07-03T00:09:49Z", "author": {"login": "xieus"}, "path": "services/route_manager/src/main/java/com/futurewei/alcor/route/service/RouteWithSubnetMapperService.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.route.service;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.exception.DatabasePersistenceException;\n+import com.futurewei.alcor.common.exception.ResourceNotFoundException;\n+import com.futurewei.alcor.common.exception.ResourcePersistenceException;\n+import com.futurewei.alcor.web.entity.route.RouteEntity;\n+import com.futurewei.alcor.web.entity.route.SubnetToRouteMapper;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+public interface RouteWithSubnetMapperService {\n+\n+    public SubnetToRouteMapper getBySubnetId (String subnetId) throws ResourceNotFoundException, ResourcePersistenceException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b5abb9c37715e133129adb53f4b1743c6ccc5f5"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDYwODA5OnYy", "diffSide": "RIGHT", "path": "web/src/main/java/com/futurewei/alcor/web/entity/route/SubnetToRouteMapper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDoxNDozOVrOGsgOxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDoxNDozOVrOGsgOxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMxODU5Nw==", "bodyText": "Think of moving these two to a common resource class.", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449318597", "createdAt": "2020-07-03T00:14:39Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/route/SubnetToRouteMapper.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+\n+package com.futurewei.alcor.web.entity.route;\n+\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import lombok.Data;\n+import org.springframework.data.annotation.CreatedDate;\n+import org.springframework.data.annotation.LastModifiedDate;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+@Data\n+public class SubnetToRouteMapper {\n+\n+    @JsonProperty(\"subnet_id\")\n+    private String subnetId;\n+\n+    @JsonProperty(\"route_ids\")\n+    private List<String> routeIds;\n+\n+    @CreatedDate", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b5abb9c37715e133129adb53f4b1743c6ccc5f5"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDYxMDMwOnYy", "diffSide": "RIGHT", "path": "web/src/main/java/com/futurewei/alcor/web/restclient/RouteManagerRestClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDoxNjoxMVrOGsgP_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMDoxNjoxMVrOGsgP_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTMxODkxMQ==", "bodyText": "Url usually doesn't come with /get", "url": "https://github.com/futurewei-cloud/alcor/pull/253#discussion_r449318911", "createdAt": "2020-07-03T00:16:11Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/restclient/RouteManagerRestClient.java", "diffHunk": "@@ -24,13 +25,13 @@\n     @Value(\"${microservices.route.service.url:#{\\\"\\\"}}\")\n     private String routeManagerUrl;\n \n-    public RouteWebJson getRouteBySubnetId(String subnetId) throws Exception {\n-        String url = routeManagerUrl + \"/subnets/\" + subnetId + \"/routes/\" + \"routeId\";\n-        RouteWebJson routeWebJson = restTemplate.getForObject(url, RouteWebJson.class);\n-        if (routeWebJson == null) {\n+    public RoutesWebJson getRouteBySubnetId(String subnetId) throws Exception {\n+        String url = routeManagerUrl + \"/subnets/\" + subnetId + \"/get\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b5abb9c37715e133129adb53f4b1743c6ccc5f5"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4566, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}