{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNDQzMDM0", "number": 521, "title": "One port supports multiple neighbors && Fix the failure to update port", "bodyText": "One port supports multiple neighbors\nFix the failure to update port", "createdAt": "2020-12-18T10:09:33Z", "url": "https://github.com/futurewei-cloud/alcor/pull/521", "merged": true, "mergeCommit": {"oid": "97315da3b2b1ecd3738e8f7c382afa6d89f8d52c"}, "closed": true, "closedAt": "2020-12-22T04:22:59Z", "author": {"login": "chenpiaoping"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnVViogH2gAyNTQyNDQzMDM0OmRhOTVlZTZhM2Y4ZTE1ZjU1ZjFlMDZkYWU2NGRkMzdhNGY2NmYzMzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdoiuQRAFqTU1NjgwNjA3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "da95ee6a3f8e15f55f1e06dae64dd37a4f66f330", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/da95ee6a3f8e15f55f1e06dae64dd37a4f66f330", "committedDate": "2020-12-18T10:11:49Z", "message": "One port supports multiple neighbors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d33cbd854120035c4b168a3a900034dc7f97a522", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d33cbd854120035c4b168a3a900034dc7f97a522", "committedDate": "2020-12-18T10:11:50Z", "message": "Rename some methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce3c9b17b7f08c951d39b03bfcba43ce894fba56", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/ce3c9b17b7f08c951d39b03bfcba43ce894fba56", "committedDate": "2020-12-18T10:11:52Z", "message": "Fix the failure to update port"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f511c7ff46a79122954a8ef6a2afa4d9b35ce4a", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/0f511c7ff46a79122954a8ef6a2afa4d9b35ce4a", "committedDate": "2020-12-18T10:06:36Z", "message": "Fix the failure to update port"}, "afterCommit": {"oid": "ce3c9b17b7f08c951d39b03bfcba43ce894fba56", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/ce3c9b17b7f08c951d39b03bfcba43ce894fba56", "committedDate": "2020-12-18T10:11:52Z", "message": "Fix the failure to update port"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODA2MDcx", "url": "https://github.com/futurewei-cloud/alcor/pull/521#pullrequestreview-556806071", "createdAt": "2020-12-22T04:05:55Z", "commit": {"oid": "ce3c9b17b7f08c951d39b03bfcba43ce894fba56"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDowNTo1NVrOIJtqbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDoxOToyOVrOIJt2gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA1NjIzOA==", "bodyText": "@chenpiaoping When you get a chance, please update the PM design doc and list the repositories used in Port? It is time for us to sync the doc with the implementation as we are looking into perf optimization.", "url": "https://github.com/futurewei-cloud/alcor/pull/521#discussion_r547056238", "createdAt": "2020-12-22T04:05:55Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/repo/NeighborRepository.java", "diffHunk": "@@ -0,0 +1,109 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.portmanager.repo;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.db.CacheFactory;\n+import com.futurewei.alcor.common.db.ICache;\n+import com.futurewei.alcor.common.stats.DurationStatistics;\n+import com.futurewei.alcor.portmanager.entity.PortNeighbors;\n+import com.futurewei.alcor.web.entity.dataplane.NeighborInfo;\n+import com.futurewei.alcor.web.entity.port.PortEntity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.util.List;\n+import java.util.Map;\n+import java.util.function.Function;\n+import java.util.stream.Collectors;\n+\n+public class NeighborRepository {\n+    private static final Logger LOG = LoggerFactory.getLogger(NeighborRepository.class);\n+    private static final String NEIGHBOR_CACHE_NAME_PREFIX = \"neighborCache-\";\n+\n+    private ICache<String, PortNeighbors> neighborCache;\n+    private CacheFactory cacheFactory;\n+\n+    public NeighborRepository(CacheFactory cacheFactory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce3c9b17b7f08c951d39b03bfcba43ce894fba56"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA1OTMzMQ==", "bodyText": "Good refactor.", "url": "https://github.com/futurewei-cloud/alcor/pull/521#discussion_r547059331", "createdAt": "2020-12-22T04:19:29Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/repo/PortRepository.java", "diffHunk": "@@ -261,126 +260,25 @@ public PortNeighbors getPortNeighbors(Object arg) throws CacheException {\n         return portNeighbors;\n     }\n \n-    private String getNeighborCacheName(String suffix) {\n-        return NEIGHBOR_CACHE_NAME_PREFIX + suffix;\n-    }\n-\n-    private List<SubnetPortIds> getSubnetPortIds(List<PortEntity> portEntities) {\n-        Map<String, SubnetPortIds> subnetPortIdsMap = new HashMap<>();\n-        for (PortEntity portEntity: portEntities) {\n-            if (GATEWAY_PORT_DEVICE_OWNER.equals(portEntity.getDeviceOwner())) {\n-                continue;\n-            }\n-\n-            List<PortEntity.FixedIp> fixedIps = portEntity.getFixedIps();\n-            if (fixedIps == null) {\n-                LOG.warn(\"Port:{} has no ip address\", portEntity.getId());\n-                continue;\n-            }\n-\n-            for (PortEntity.FixedIp fixedIp: fixedIps) {\n-                String subnetId = fixedIp.getSubnetId();\n-                if (!subnetPortIdsMap.containsKey(subnetId)) {\n-                    SubnetPortIds subnetPortIds = new SubnetPortIds(subnetId, new HashSet<>());\n-                    subnetPortIdsMap.put(subnetId, subnetPortIds);\n-                }\n-\n-                subnetPortIdsMap.get(subnetId).getPortIds().add(portEntity.getId());\n-            }\n-        }\n-\n-        return new ArrayList<>(subnetPortIdsMap.values());\n-    }\n-\n     @DurationStatistics\n     public synchronized void createPortBulk(List<PortEntity> portEntities, Map<String, List<NeighborInfo>> neighbors) throws Exception {\n         try (Transaction tx = portCache.getTransaction().start()) {\n             Map<String, PortEntity> portEntityMap = portEntities\n                     .stream()\n                     .collect(Collectors.toMap(PortEntity::getId, Function.identity()));\n             portCache.putAll(portEntityMap);\n-\n-            for (Map.Entry<String, List<NeighborInfo>> entry : neighbors.entrySet()) {\n-                Map<String, NeighborInfo> neighborMap = entry.getValue()\n-                        .stream()\n-                        .collect(Collectors.toMap(NeighborInfo::getPortId, Function.identity()));\n-\n-                ICache<String, NeighborInfo> neighborCache = this.cacheFactory.getCache(\n-                        NeighborInfo.class, getNeighborCacheName(entry.getKey()));\n-                neighborCache.putAll(neighborMap);\n-            }\n-\n-            //Store the mapping between subnet id and port id\n-            List<SubnetPortIds> subnetPortIdsList = getSubnetPortIds(portEntities);\n-\n-            for (SubnetPortIds item: subnetPortIdsList) {\n-                String subnetId = item.getSubnetId();\n-                Set<String> portIds = item.getPortIds();\n-\n-                SubnetPortIds subnetPortIds = subnetPortIdsCache.get(subnetId);\n-                if (subnetPortIds == null) {\n-                    subnetPortIds = new SubnetPortIds(subnetId, new HashSet<>(portIds));\n-                } else {\n-                    subnetPortIds.getPortIds().addAll(portIds);\n-                }\n-\n-                subnetPortIdsCache.put(subnetId, subnetPortIds);\n-            }\n-\n+            neighborRepository.createNeighbors(neighbors);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce3c9b17b7f08c951d39b03bfcba43ce894fba56"}, "originalPosition": 107}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2067, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}