{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0OTQ4NzQ5", "number": 512, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzoyOToxMFrOFE1srw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo1NToxOVrOFE2O6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjE4NDE1OnYy", "diffSide": "RIGHT", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/client/DataPlaneClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzoyOToxMFrOIFDGRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzoyOToxMFrOIFDGRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2NDU1MA==", "bodyText": "This is indeed a better name.", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542164550", "createdAt": "2020-12-14T07:29:10Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/client/DataPlaneClient.java", "diffHunk": "@@ -26,7 +26,7 @@\n \n @Component\n public interface DataPlaneClient {\n-    List<String> createGoalStates(List<UnicastGoalState> unicastGoalStates) throws Exception;\n-    List<String> createGoalStates(List<UnicastGoalState> unicastGoalStates,\n-                                  MulticastGoalState multicastGoalState) throws Exception;\n+    List<String> sendGoalStates(List<UnicastGoalState> unicastGoalStates) throws Exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjIxOTUzOnYy", "diffSide": "RIGHT", "path": "web/src/main/java/com/futurewei/alcor/web/entity/route/RouterUpdateInfo.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzozOTo1OVrOIFDZqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMzoxOToxMVrOIFxCrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2OTUxNA==", "bodyText": "@kevin-zhonghao @cj-chung  FYI. Please review this change as well.", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542169514", "createdAt": "2020-12-14T07:39:59Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/route/RouterUpdateInfo.java", "diffHunk": "@@ -29,8 +29,8 @@\n     @JsonProperty(\"operation_type\")\n     private String operationType;\n \n-    @JsonProperty(\"old_subnet_ids\")\n-    private List<String> oldSubnetIds;\n+    @JsonProperty(\"gateway_port_ids\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkxNzI5NQ==", "bodyText": "The change is ok I think.\n@kevin-zhonghao  we need to prepare a RouterUpdateInfo object and send it to update-l3-neighbors API in PM when there is a gateway port updated in a router.", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542917295", "createdAt": "2020-12-14T23:19:11Z", "author": {"login": "cj-chung"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/route/RouterUpdateInfo.java", "diffHunk": "@@ -29,8 +29,8 @@\n     @JsonProperty(\"operation_type\")\n     private String operationType;\n \n-    @JsonProperty(\"old_subnet_ids\")\n-    private List<String> oldSubnetIds;\n+    @JsonProperty(\"gateway_port_ids\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2OTUxNA=="}, "originalCommit": {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjIzMDE1OnYy", "diffSide": "RIGHT", "path": "services/port_manager/src/main/resources/application.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo0MzowOVrOIFDfeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODoxNjoyOVrOIFEgwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3MTAwMA==", "bodyText": "@chenpiaoping Please also update the yaml file\n\n  \n    \n      alcor/kubernetes/services/port_manager.yaml\n    \n    \n         Line 23\n      in\n      28cfda5\n    \n    \n    \n    \n\n        \n          \n               microservices.dataplane.service.url=http://dataplanemanager-service.default.svc.cluster.local:9010/v4/port/", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542171000", "createdAt": "2020-12-14T07:43:09Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/resources/application.properties", "diffHunk": "@@ -8,7 +8,7 @@ microservices.ip.service.url=http://localhost:9004/ips\n microservices.mac.service.url=http://localhost:9005/macs\n microservices.sg.service.url=http://localhost:9008\n microservices.node.service.url=http://localhost:9007/nodes\n-microservices.dataplane.service.url=http://localhost:9010/v4/port/\n+microservices.dataplane.service.url=http://localhost:9010/network-configuration", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4NzcxMg==", "bodyText": "microservices.dataplane.service.url=http://dataplanemanager-service.default.svc.cluster.local:9010/v4/port/\n\nOK, I will do that.", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542187712", "createdAt": "2020-12-14T08:16:29Z", "author": {"login": "chenpiaoping"}, "path": "services/port_manager/src/main/resources/application.properties", "diffHunk": "@@ -8,7 +8,7 @@ microservices.ip.service.url=http://localhost:9004/ips\n microservices.mac.service.url=http://localhost:9005/macs\n microservices.sg.service.url=http://localhost:9008\n microservices.node.service.url=http://localhost:9007/nodes\n-microservices.dataplane.service.url=http://localhost:9010/v4/port/\n+microservices.dataplane.service.url=http://localhost:9010/network-configuration", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3MTAwMA=="}, "originalCommit": {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjI1OTM5OnYy", "diffSide": "RIGHT", "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/PortServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo1MjowMlrOIFDvqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODoxMzo1NFrOIFEbOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3NTE0Nw==", "bodyText": "what if gatewayPortEntities ==null here? Should we add some special handling?", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542175147", "createdAt": "2020-12-14T07:52:02Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/PortServiceImpl.java", "diffHunk": "@@ -208,25 +209,51 @@ public PortWebJson getPort(String projectId, String portId) throws Exception {\n         return result;\n     }\n \n-    private List<NeighborEntry> buildNeighborTable(List<NeighborInfo> localNeighborInfos, List<NeighborInfo> l3Neighbors) {\n-        List<NeighborEntry> neighborTable = new ArrayList<>();\n+    private Map<String, List<NeighborEntry>> buildNeighborTable(List<NeighborInfo> localNeighborInfos, List<NeighborInfo> l3Neighbors) {\n+        Map<String, List<NeighborEntry>> neighborTable = new HashMap<>();\n         for (NeighborInfo localNeighborInfo: localNeighborInfos) {\n+            List<NeighborEntry> neighborEntries = new ArrayList<>();\n             for (NeighborInfo l3Neighbor: l3Neighbors) {\n                 NeighborEntry neighborEntry = new NeighborEntry();\n                 neighborEntry.setNeighborType(NeighborEntry.NeighborType.L3);\n                 neighborEntry.setLocalIp(localNeighborInfo.getPortIp());\n                 neighborEntry.setNeighborIp(l3Neighbor.getPortIp());\n-                neighborTable.add(neighborEntry);\n+                neighborEntries.add(neighborEntry);\n             }\n+\n+            String portIp = localNeighborInfo.getPortIp();\n+            neighborTable.put(portIp, neighborEntries);\n         }\n \n         return neighborTable;\n     }\n \n-    private List<NeighborEntry> updateNeighborTable(RouterUpdateInfo routerUpdateInfo, List<NeighborInfo> neighborInfos) throws CacheException {\n+    private Map<String, List<NeighborEntry>> updateNeighborTable(RouterUpdateInfo routerUpdateInfo, Map<String, NeighborInfo> neighborInfos) throws CacheException {\n         String vpcId = routerUpdateInfo.getVpcId();\n         String subnetId = routerUpdateInfo.getSubnetId();\n-        List<String> oldSubnetIds = routerUpdateInfo.getOldSubnetIds();\n+        List<String> gatewayPortIds = routerUpdateInfo.getGatewayPortIds();\n+        List<String> gatewaySubnetIds = new ArrayList<>();\n+\n+        Map<String, Object[]> filterParams = new HashMap<>();\n+        filterParams.put(\"id\", gatewayPortIds.toArray());\n+        Map<String, PortEntity> gatewayPortEntities = portRepository.findAllPortEntities(filterParams);\n+        if (gatewayPortEntities != null) {\n+            for (Map.Entry<String, PortEntity> entry: gatewayPortEntities.entrySet()) {\n+                PortEntity portEntity = entry.getValue();\n+                List<PortEntity.FixedIp> fixedIps = portEntity.getFixedIps();\n+                if (fixedIps == null) {\n+                    LOG.warn(\"Can not find fixedIp of gateway port: {}\", portEntity);\n+                    continue;\n+                }\n+\n+                for (PortEntity.FixedIp fixedIp: fixedIps) {\n+                    String subnetId1 = fixedIp.getSubnetId();\n+                    if (!StringUtils.isEmpty(subnetId1)) {\n+                        gatewaySubnetIds.add(subnetId1);\n+                    }\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4NjI5Ng==", "bodyText": "PortController will check its legitimacy.", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542186296", "createdAt": "2020-12-14T08:13:54Z", "author": {"login": "chenpiaoping"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/service/PortServiceImpl.java", "diffHunk": "@@ -208,25 +209,51 @@ public PortWebJson getPort(String projectId, String portId) throws Exception {\n         return result;\n     }\n \n-    private List<NeighborEntry> buildNeighborTable(List<NeighborInfo> localNeighborInfos, List<NeighborInfo> l3Neighbors) {\n-        List<NeighborEntry> neighborTable = new ArrayList<>();\n+    private Map<String, List<NeighborEntry>> buildNeighborTable(List<NeighborInfo> localNeighborInfos, List<NeighborInfo> l3Neighbors) {\n+        Map<String, List<NeighborEntry>> neighborTable = new HashMap<>();\n         for (NeighborInfo localNeighborInfo: localNeighborInfos) {\n+            List<NeighborEntry> neighborEntries = new ArrayList<>();\n             for (NeighborInfo l3Neighbor: l3Neighbors) {\n                 NeighborEntry neighborEntry = new NeighborEntry();\n                 neighborEntry.setNeighborType(NeighborEntry.NeighborType.L3);\n                 neighborEntry.setLocalIp(localNeighborInfo.getPortIp());\n                 neighborEntry.setNeighborIp(l3Neighbor.getPortIp());\n-                neighborTable.add(neighborEntry);\n+                neighborEntries.add(neighborEntry);\n             }\n+\n+            String portIp = localNeighborInfo.getPortIp();\n+            neighborTable.put(portIp, neighborEntries);\n         }\n \n         return neighborTable;\n     }\n \n-    private List<NeighborEntry> updateNeighborTable(RouterUpdateInfo routerUpdateInfo, List<NeighborInfo> neighborInfos) throws CacheException {\n+    private Map<String, List<NeighborEntry>> updateNeighborTable(RouterUpdateInfo routerUpdateInfo, Map<String, NeighborInfo> neighborInfos) throws CacheException {\n         String vpcId = routerUpdateInfo.getVpcId();\n         String subnetId = routerUpdateInfo.getSubnetId();\n-        List<String> oldSubnetIds = routerUpdateInfo.getOldSubnetIds();\n+        List<String> gatewayPortIds = routerUpdateInfo.getGatewayPortIds();\n+        List<String> gatewaySubnetIds = new ArrayList<>();\n+\n+        Map<String, Object[]> filterParams = new HashMap<>();\n+        filterParams.put(\"id\", gatewayPortIds.toArray());\n+        Map<String, PortEntity> gatewayPortEntities = portRepository.findAllPortEntities(filterParams);\n+        if (gatewayPortEntities != null) {\n+            for (Map.Entry<String, PortEntity> entry: gatewayPortEntities.entrySet()) {\n+                PortEntity portEntity = entry.getValue();\n+                List<PortEntity.FixedIp> fixedIps = portEntity.getFixedIps();\n+                if (fixedIps == null) {\n+                    LOG.warn(\"Can not find fixedIp of gateway port: {}\", portEntity);\n+                    continue;\n+                }\n+\n+                for (PortEntity.FixedIp fixedIp: fixedIps) {\n+                    String subnetId1 = fixedIp.getSubnetId();\n+                    if (!StringUtils.isEmpty(subnetId1)) {\n+                        gatewaySubnetIds.add(subnetId1);\n+                    }\n+                }\n+            }\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3NTE0Nw=="}, "originalCommit": {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjI2NzIwOnYy", "diffSide": "RIGHT", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo1NDowNlrOIFDz1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwODoxNDoyNVrOIFEcPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3NjIxNA==", "bodyText": "Could you add brief comments to this method?", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542176214", "createdAt": "2020-12-14T07:54:06Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java", "diffHunk": "@@ -108,10 +117,10 @@ private UnicastGoalState buildUnicastGoalState(NetworkConfiguration networkConfi\n                     networkConfig, hostIp, portEntities, multicastGoalState));\n         }\n \n-        return dataPlaneClient.createGoalStates(unicastGoalStates, multicastGoalState);\n+        return dataPlaneClient.sendGoalStates(unicastGoalStates, multicastGoalState);\n     }\n \n-    private List<String> createPortConfiguration(NetworkConfiguration networkConfig) throws Exception {\n+    private List<String> processPortConfiguration(NetworkConfiguration networkConfig) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4NjU1OA==", "bodyText": "No problem", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542186558", "createdAt": "2020-12-14T08:14:25Z", "author": {"login": "chenpiaoping"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java", "diffHunk": "@@ -108,10 +117,10 @@ private UnicastGoalState buildUnicastGoalState(NetworkConfiguration networkConfi\n                     networkConfig, hostIp, portEntities, multicastGoalState));\n         }\n \n-        return dataPlaneClient.createGoalStates(unicastGoalStates, multicastGoalState);\n+        return dataPlaneClient.sendGoalStates(unicastGoalStates, multicastGoalState);\n     }\n \n-    private List<String> createPortConfiguration(NetworkConfiguration networkConfig) throws Exception {\n+    private List<String> processPortConfiguration(NetworkConfiguration networkConfig) throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3NjIxNA=="}, "originalCommit": {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjI3MTc4OnYy", "diffSide": "RIGHT", "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzo1NToxOVrOIFD2Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMDo1MDo0NVrOIFoBjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3Njg0Mg==", "bodyText": "Can you elaborate a bit here? Neighbor table also includes L2 neighbors if my memory is right :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542176842", "createdAt": "2020-12-14T07:55:19Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java", "diffHunk": "@@ -144,20 +153,92 @@ private UnicastGoalState buildUnicastGoalState(NetworkConfiguration networkConfi\n                     networkConfig, pulsarHostPortEntities, pulsarDataPlaneClient));\n         }\n \n-        localCache.addSubnetPorts(networkConfig);\n+        localCache.updateLocalCache(networkConfig);\n \n         return statusList;\n     }\n \n-    private List<String> createNeighborConfiguration(NetworkConfiguration networkConfig) throws Exception {\n-        return null;\n+    private List<String> processNeighborConfiguration(NetworkConfiguration networkConfig) throws Exception {\n+        Map<String, NeighborInfo> neighborInfos = networkConfig.getNeighborInfos();\n+        Map<String, List<NeighborEntry>> neighborTable = networkConfig.getNeighborTable();\n+        List<UnicastGoalState> unicastGoalStates = new ArrayList<>();\n+        MulticastGoalState multicastGoalState = new MulticastGoalState();\n+\n+        if (neighborTable == null || neighborInfos == null) {\n+            throw new NeighborInfoNotFound();\n+        }\n+\n+        Map<String, List<NeighborInfo>> hostNeighbors = new HashMap<>();\n+        for (Map.Entry<String, List<NeighborEntry>> entry: neighborTable.entrySet()) {\n+            String portIp = entry.getKey();\n+            NeighborInfo localInfo = neighborInfos.get(portIp);\n+            if (localInfo == null) {\n+                throw new NeighborInfoNotFound();\n+            }\n+\n+            String hostIp = localInfo.getHostIp();\n+            if (!hostNeighbors.containsKey(hostIp)) {\n+                hostNeighbors.put(hostIp, new ArrayList<>());\n+            }\n+\n+            List<NeighborEntry> neighborEntries = entry.getValue();\n+            for (NeighborEntry neighborEntry: neighborEntries) {\n+                String neighborIp = neighborEntry.getNeighborIp();\n+                NeighborInfo neighborInfo = neighborInfos.get(neighborIp);\n+                if (neighborInfo == null) {\n+                    throw new NeighborInfoNotFound();\n+                }\n+\n+                hostNeighbors.get(hostIp).add(neighborInfo);\n+                multicastGoalState.getHostIps().add(neighborInfo.getHostIp());\n+            }\n+\n+            //Add neighborInfo to multicastGoalState\n+            Neighbor.NeighborState neighborState = neighborService.buildNeighborState(\n+                    NeighborType.L3, localInfo, networkConfig.getOpType());\n+            multicastGoalState.getGoalStateBuilder().addNeighborStates(neighborState);\n+        }\n+\n+        for (Map.Entry<String, List<NeighborInfo>> entry: hostNeighbors.entrySet()) {\n+            String hostIp = entry.getKey();\n+            List<NeighborInfo> hostNeighborInfos = entry.getValue();\n+\n+            /**\n+             * At present, there are only L3 neighbors in the neighbor table,\n+             * and the processing of L2 neighbors should be considered in the future.\n+             */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE4NzI5OA==", "bodyText": "This case is for update-l3-neighbor, so there will be no L2 neighbors here.", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542187298", "createdAt": "2020-12-14T08:15:43Z", "author": {"login": "chenpiaoping"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java", "diffHunk": "@@ -144,20 +153,92 @@ private UnicastGoalState buildUnicastGoalState(NetworkConfiguration networkConfi\n                     networkConfig, pulsarHostPortEntities, pulsarDataPlaneClient));\n         }\n \n-        localCache.addSubnetPorts(networkConfig);\n+        localCache.updateLocalCache(networkConfig);\n \n         return statusList;\n     }\n \n-    private List<String> createNeighborConfiguration(NetworkConfiguration networkConfig) throws Exception {\n-        return null;\n+    private List<String> processNeighborConfiguration(NetworkConfiguration networkConfig) throws Exception {\n+        Map<String, NeighborInfo> neighborInfos = networkConfig.getNeighborInfos();\n+        Map<String, List<NeighborEntry>> neighborTable = networkConfig.getNeighborTable();\n+        List<UnicastGoalState> unicastGoalStates = new ArrayList<>();\n+        MulticastGoalState multicastGoalState = new MulticastGoalState();\n+\n+        if (neighborTable == null || neighborInfos == null) {\n+            throw new NeighborInfoNotFound();\n+        }\n+\n+        Map<String, List<NeighborInfo>> hostNeighbors = new HashMap<>();\n+        for (Map.Entry<String, List<NeighborEntry>> entry: neighborTable.entrySet()) {\n+            String portIp = entry.getKey();\n+            NeighborInfo localInfo = neighborInfos.get(portIp);\n+            if (localInfo == null) {\n+                throw new NeighborInfoNotFound();\n+            }\n+\n+            String hostIp = localInfo.getHostIp();\n+            if (!hostNeighbors.containsKey(hostIp)) {\n+                hostNeighbors.put(hostIp, new ArrayList<>());\n+            }\n+\n+            List<NeighborEntry> neighborEntries = entry.getValue();\n+            for (NeighborEntry neighborEntry: neighborEntries) {\n+                String neighborIp = neighborEntry.getNeighborIp();\n+                NeighborInfo neighborInfo = neighborInfos.get(neighborIp);\n+                if (neighborInfo == null) {\n+                    throw new NeighborInfoNotFound();\n+                }\n+\n+                hostNeighbors.get(hostIp).add(neighborInfo);\n+                multicastGoalState.getHostIps().add(neighborInfo.getHostIp());\n+            }\n+\n+            //Add neighborInfo to multicastGoalState\n+            Neighbor.NeighborState neighborState = neighborService.buildNeighborState(\n+                    NeighborType.L3, localInfo, networkConfig.getOpType());\n+            multicastGoalState.getGoalStateBuilder().addNeighborStates(neighborState);\n+        }\n+\n+        for (Map.Entry<String, List<NeighborInfo>> entry: hostNeighbors.entrySet()) {\n+            String hostIp = entry.getKey();\n+            List<NeighborInfo> hostNeighborInfos = entry.getValue();\n+\n+            /**\n+             * At present, there are only L3 neighbors in the neighbor table,\n+             * and the processing of L2 neighbors should be considered in the future.\n+             */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3Njg0Mg=="}, "originalCommit": {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjc2OTU1MA==", "bodyText": "aha sounds good.", "url": "https://github.com/futurewei-cloud/alcor/pull/512#discussion_r542769550", "createdAt": "2020-12-14T20:50:45Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/main/java/com/futurewei/alcor/dataplane/service/impl/DpmServiceImpl.java", "diffHunk": "@@ -144,20 +153,92 @@ private UnicastGoalState buildUnicastGoalState(NetworkConfiguration networkConfi\n                     networkConfig, pulsarHostPortEntities, pulsarDataPlaneClient));\n         }\n \n-        localCache.addSubnetPorts(networkConfig);\n+        localCache.updateLocalCache(networkConfig);\n \n         return statusList;\n     }\n \n-    private List<String> createNeighborConfiguration(NetworkConfiguration networkConfig) throws Exception {\n-        return null;\n+    private List<String> processNeighborConfiguration(NetworkConfiguration networkConfig) throws Exception {\n+        Map<String, NeighborInfo> neighborInfos = networkConfig.getNeighborInfos();\n+        Map<String, List<NeighborEntry>> neighborTable = networkConfig.getNeighborTable();\n+        List<UnicastGoalState> unicastGoalStates = new ArrayList<>();\n+        MulticastGoalState multicastGoalState = new MulticastGoalState();\n+\n+        if (neighborTable == null || neighborInfos == null) {\n+            throw new NeighborInfoNotFound();\n+        }\n+\n+        Map<String, List<NeighborInfo>> hostNeighbors = new HashMap<>();\n+        for (Map.Entry<String, List<NeighborEntry>> entry: neighborTable.entrySet()) {\n+            String portIp = entry.getKey();\n+            NeighborInfo localInfo = neighborInfos.get(portIp);\n+            if (localInfo == null) {\n+                throw new NeighborInfoNotFound();\n+            }\n+\n+            String hostIp = localInfo.getHostIp();\n+            if (!hostNeighbors.containsKey(hostIp)) {\n+                hostNeighbors.put(hostIp, new ArrayList<>());\n+            }\n+\n+            List<NeighborEntry> neighborEntries = entry.getValue();\n+            for (NeighborEntry neighborEntry: neighborEntries) {\n+                String neighborIp = neighborEntry.getNeighborIp();\n+                NeighborInfo neighborInfo = neighborInfos.get(neighborIp);\n+                if (neighborInfo == null) {\n+                    throw new NeighborInfoNotFound();\n+                }\n+\n+                hostNeighbors.get(hostIp).add(neighborInfo);\n+                multicastGoalState.getHostIps().add(neighborInfo.getHostIp());\n+            }\n+\n+            //Add neighborInfo to multicastGoalState\n+            Neighbor.NeighborState neighborState = neighborService.buildNeighborState(\n+                    NeighborType.L3, localInfo, networkConfig.getOpType());\n+            multicastGoalState.getGoalStateBuilder().addNeighborStates(neighborState);\n+        }\n+\n+        for (Map.Entry<String, List<NeighborInfo>> entry: hostNeighbors.entrySet()) {\n+            String hostIp = entry.getKey();\n+            List<NeighborInfo> hostNeighborInfos = entry.getValue();\n+\n+            /**\n+             * At present, there are only L3 neighbors in the neighbor table,\n+             * and the processing of L2 neighbors should be considered in the future.\n+             */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE3Njg0Mg=="}, "originalCommit": {"oid": "4c1a2a2ddd8bfe32fe0da34ae4f595598151e6f5"}, "originalPosition": 109}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4487, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}