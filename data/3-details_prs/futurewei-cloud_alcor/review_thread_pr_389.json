{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMDY3OTQ3", "number": 389, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjo1ODowNFrOEnIrng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjo1ODowNFrOEnIrng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5NDcyMTU4OnYy", "diffSide": "RIGHT", "path": "services/data_plane_manager/src/test/java/com/futurewei/alcor/dataplane/utils/GoalStateManagerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjo1ODowNFrOHXkJ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNjo1ODowNFrOHXkJ-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDQ3MTY3NQ==", "bodyText": "unknown? :-)", "url": "https://github.com/futurewei-cloud/alcor/pull/389#discussion_r494471675", "createdAt": "2020-09-24T16:58:04Z", "author": {"login": "xieus"}, "path": "services/data_plane_manager/src/test/java/com/futurewei/alcor/dataplane/utils/GoalStateManagerTest.java", "diffHunk": "@@ -17,4951 +18,156 @@\n \n public class GoalStateManagerTest {\n \n-  static Gson gson = null;\n-  static GoalStateManager goalStateManager = null;\n+    static Gson gson = null;\n+    static GoalStateManager goalStateManager = null;\n+\n+    @BeforeClass\n+    public static void setUp() {\n+        goalStateManager = new GoalStateManager();\n+        ExclusionStrategy myExclusionStrategy =\n+                new ExclusionStrategy() {\n+                    @Override\n+                    public boolean shouldSkipField(FieldAttributes fa) {\n+                        return fa.getName().equals(\"tenantId\");\n+                    }\n+\n+                    @Override\n+                    public boolean shouldSkipClass(Class<?> clazz) {\n+                        return false;\n+                    }\n+                };\n+        gson = new GsonBuilder().setExclusionStrategies(myExclusionStrategy).create();\n+    }\n \n-  @BeforeClass\n-  public static void setUp() {\n-    goalStateManager = new GoalStateManager();\n-    ExclusionStrategy myExclusionStrategy =\n-        new ExclusionStrategy() {\n-          @Override\n-          public boolean shouldSkipField(FieldAttributes fa) {\n-            return fa.getName().equals(\"tenantId\");\n-          }\n+    @AfterEach\n+    void tearDown() {\n+    }\n \n-          @Override\n-          public boolean shouldSkipClass(Class<?> clazz) {\n-            return false;\n-          }\n-        };\n-    gson = new GsonBuilder().setExclusionStrategies(myExclusionStrategy).create();\n-  }\n+    /**\n+     * unknown", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0072b6d10ff9831a409164fb80061ed96d8bc141"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4403, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}