{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxODE1MDc2", "number": 208, "title": "[Microservice] Security Group Manager, Port Manager Refactor", "bodyText": "This PR contains the following features:\n\n\nSecurity Group Manager\n-- Security group create/update/delete/query interfaces\n-- Security group rule create/delete/query interfaces\n-- Port bind/unbind security group interfaces\n\n\nIgnite\n-- Add a thin Ignite Client to support SQL-alike query\n\n\nPort Manager\n-- Add port data modeling and new dao layer to support SQL-alike query", "createdAt": "2020-05-22T09:25:55Z", "url": "https://github.com/futurewei-cloud/alcor/pull/208", "merged": true, "mergeCommit": {"oid": "1f6760595bc0e4955502c6a3f9d405975b312109"}, "closed": true, "closedAt": "2020-06-12T05:07:15Z", "author": {"login": "chenpiaoping"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckoo4sgFqTQxNzQ1MDI5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqbjjHAH2gAyNDIxODE1MDc2OjU0ZjVjZjI2ZDMzZjVkYWU4MWRmMGQ0NGMzZWVhODczOTZjODA5MTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDUwMjkz", "url": "https://github.com/futurewei-cloud/alcor/pull/208#pullrequestreview-417450293", "createdAt": "2020-05-25T04:30:22Z", "commit": {"oid": "194593933bdffb392cda8c4bab5696ab56e1c2d3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNDozMDoyMlrOGZ0c4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNDo0NzoxOVrOGZ0nDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyNjk0NA==", "bodyText": "Like it!", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r429726944", "createdAt": "2020-05-25T04:30:22Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/utils/Ipv4AddrUtil.java", "diffHunk": "@@ -63,4 +68,13 @@ public static String longToIpv4(long longIpv4) {\n \n         return result;\n     }\n+\n+    public static boolean ipv4PrefixCheck(String strIpv4) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194593933bdffb392cda8c4bab5696ab56e1c2d3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyNzAyMA==", "bodyText": "Let us get some UTs to cover this basic util method.", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r429727020", "createdAt": "2020-05-25T04:30:57Z", "author": {"login": "xieus"}, "path": "lib/src/main/java/com/futurewei/alcor/common/utils/Ipv4AddrUtil.java", "diffHunk": "@@ -63,4 +68,13 @@ public static String longToIpv4(long longIpv4) {\n \n         return result;\n     }\n+\n+    public static boolean ipv4PrefixCheck(String strIpv4) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyNjk0NA=="}, "originalCommit": {"oid": "194593933bdffb392cda8c4bab5696ab56e1c2d3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyNzE1NA==", "bodyText": "This pom is extremely concise! Very good.", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r429727154", "createdAt": "2020-05-25T04:31:53Z", "author": {"login": "xieus"}, "path": "services/security_group_manager/pom.xml", "diffHunk": "@@ -0,0 +1,62 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-starter-parent</artifactId>\n+        <version>2.3.0.RELEASE</version>\n+        <relativePath/> <!-- lookup parent from repository -->\n+    </parent>\n+    <groupId>com.futurewei.alcor</groupId>\n+    <artifactId>security-group-manager</artifactId>\n+    <version>0.0.1-SNAPSHOT</version>\n+    <name>SecurityGroupManager</name>\n+    <description>Security Group Manager Module</description>\n+\n+    <properties>\n+        <java.version>1.8</java.version>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.springframework.boot</groupId>\n+            <artifactId>spring-boot-starter-web</artifactId>\n+        </dependency>\n+\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194593933bdffb392cda8c4bab5696ab56e1c2d3"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyNzY3OA==", "bodyText": "I think we should have a good design doc and include details of all these good exception.", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r429727678", "createdAt": "2020-05-25T04:35:10Z", "author": {"login": "xieus"}, "path": "services/security_group_manager/src/main/java/com/futurewei/alcor/securitygroup/exception/DefaultSecurityGroupExists.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.securitygroup.exception;\n+\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.ResponseStatus;\n+\n+@ResponseStatus(code= HttpStatus.PRECONDITION_FAILED, reason=\"Default security group exists\")\n+public class DefaultSecurityGroupExists extends Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194593933bdffb392cda8c4bab5696ab56e1c2d3"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyODg5Ng==", "bodyText": "Could we add binding to a subnet?", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r429728896", "createdAt": "2020-05-25T04:43:07Z", "author": {"login": "xieus"}, "path": "services/security_group_manager/src/main/java/com/futurewei/alcor/securitygroup/repo/SecurityGroupBindingsRepository.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.securitygroup.repo;\n+\n+import com.futurewei.alcor.common.db.CacheException;\n+import com.futurewei.alcor.common.db.CacheFactory;\n+import com.futurewei.alcor.common.db.ICache;\n+import com.futurewei.alcor.common.db.Transaction;\n+import com.futurewei.alcor.securitygroup.exception.SecurityGroupNotFound;\n+import com.futurewei.alcor.web.entity.port.PortSecurityGroupsJson;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroup;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroupBindings;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.ComponentScan;\n+import org.springframework.stereotype.Repository;\n+import javax.annotation.PostConstruct;\n+import java.util.HashSet;\n+\n+@Repository\n+@ComponentScan(value=\"com.futurewei.alcor.common.db\")\n+public class SecurityGroupBindingsRepository {\n+    private static final Logger LOG = LoggerFactory.getLogger(SecurityGroupBindingsRepository.class);\n+\n+    private ICache<String, SecurityGroupBindings> bindingCache;\n+    private ICache<String, SecurityGroup> securityGroupCache;\n+\n+    @Autowired\n+    public SecurityGroupBindingsRepository(CacheFactory cacheFactory) {\n+        bindingCache = cacheFactory.getCache(SecurityGroupBindings.class);\n+        securityGroupCache = cacheFactory.getCache(SecurityGroup.class);\n+    }\n+\n+    @PostConstruct\n+    private void init() {\n+        LOG.info(\"SecurityGroupBindingsRepository init done\");\n+    }\n+\n+    public SecurityGroupBindings getSecurityGroupBindings(String id) throws CacheException {\n+        return bindingCache.get(id);\n+    }\n+\n+\n+    public void addSecurityGroupBinding(PortSecurityGroupsJson portSecurityGroupsJson) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194593933bdffb392cda8c4bab5696ab56e1c2d3"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTcyOTU0OQ==", "bodyText": "For binding, we should also update port manager, right?", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r429729549", "createdAt": "2020-05-25T04:47:19Z", "author": {"login": "xieus"}, "path": "services/security_group_manager/src/main/java/com/futurewei/alcor/securitygroup/service/implement/SecurityGroupServiceImpl.java", "diffHunk": "@@ -0,0 +1,242 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.securitygroup.service.implement;\n+\n+import com.futurewei.alcor.securitygroup.exception.*;\n+import com.futurewei.alcor.securitygroup.repo.SecurityGroupBindingsRepository;\n+import com.futurewei.alcor.securitygroup.repo.SecurityGroupRepository;\n+import com.futurewei.alcor.securitygroup.service.SecurityGroupService;\n+import com.futurewei.alcor.securitygroup.utils.TimeUtil;\n+import com.futurewei.alcor.web.entity.port.PortSecurityGroupsJson;\n+import com.futurewei.alcor.web.entity.securitygroup.*;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Service;\n+\n+import java.util.*;\n+\n+@Service\n+public class SecurityGroupServiceImpl implements SecurityGroupService {\n+    private static final Logger LOG = LoggerFactory.getLogger(SecurityGroupServiceImpl.class);\n+\n+    @Autowired\n+    private SecurityGroupRepository securityGroupRepository;\n+\n+    @Autowired\n+    private SecurityGroupBindingsRepository securityGroupBindingsRepository;\n+\n+    private boolean isDefaultSecurityGroup(SecurityGroup securityGroup) {\n+        return \"default\".equals(securityGroup.getName());\n+    }\n+\n+    private void createDefaultSecurityGroupRules(SecurityGroup securityGroup, SecurityGroupRule.Direction direction) throws Exception {\n+        List<SecurityGroupRule> securityGroupRules = new ArrayList<>();\n+        List<SecurityGroupRule.EtherType> etherTypes = Arrays.asList(SecurityGroupRule.EtherType.IPV4, SecurityGroupRule.EtherType.IPV6);\n+\n+        for (SecurityGroupRule.EtherType etherType: etherTypes) {\n+            SecurityGroupRule securityGroupRule = new SecurityGroupRule();\n+\n+            securityGroupRule.setId(UUID.randomUUID().toString());\n+            securityGroupRule.setEtherType(etherType.getType());\n+            securityGroupRule.setTenantId(securityGroup.getTenantId());\n+            securityGroupRule.setSecurityGroupId(securityGroup.getId());\n+            securityGroupRule.setDirection(direction.getDirection());\n+\n+            securityGroupRules.add(securityGroupRule);\n+        }\n+\n+        securityGroup.setSecurityGroupRules(securityGroupRules);\n+    }\n+\n+    private void createDefaultSecurityGroup(SecurityGroup securityGroup, String description) throws Exception {\n+        SecurityGroup defaultSecurityGroup = new SecurityGroup();\n+        defaultSecurityGroup.setId(UUID.randomUUID().toString());\n+        defaultSecurityGroup.setTenantId(securityGroup.getTenantId());\n+        defaultSecurityGroup.setProjectId(securityGroup.getProjectId());\n+        defaultSecurityGroup.setDescription(description);\n+        defaultSecurityGroup.setName(\"default\");\n+\n+        //Create default security group rules\n+        createDefaultSecurityGroupRules(defaultSecurityGroup, SecurityGroupRule.Direction.INGRESS);\n+\n+        //Set create and update time for securityGroup\n+        String currentTime = TimeUtil.getCurrentTime();\n+        defaultSecurityGroup.setCreateAt(currentTime);\n+        defaultSecurityGroup.setUpdateAt(currentTime);\n+\n+        //Persist securityGroup\n+        securityGroupRepository.createDefaultSecurityGroup(defaultSecurityGroup);\n+    }\n+\n+    @Override\n+    public SecurityGroupJson createSecurityGroup(SecurityGroupJson securityGroupJson) throws Exception {\n+        SecurityGroup securityGroup = securityGroupJson.getSecurityGroup();\n+        String tenantId = securityGroup.getTenantId();\n+        String description = securityGroup.getDescription();\n+\n+        //Create default security group if not exist\n+        SecurityGroup defaultSecurityGroup = securityGroupRepository.getSecurityGroup(tenantId);\n+        if (isDefaultSecurityGroup(securityGroup) && defaultSecurityGroup != null) {\n+            throw new DefaultSecurityGroupExists();\n+        }\n+\n+        if (!isDefaultSecurityGroup(securityGroup)) {\n+            //Default security group not exists, create it\n+            if (defaultSecurityGroup == null) {\n+                createDefaultSecurityGroup(securityGroup, null);\n+            }\n+\n+            //Generate uuid for securityGroup\n+            if (securityGroup.getId() == null) {\n+                securityGroup.setId(UUID.randomUUID().toString());\n+            }\n+\n+            //Create default security group rule for securityGroup\n+            createDefaultSecurityGroupRules(securityGroup, SecurityGroupRule.Direction.EGRESS);\n+\n+            //Set create and update time for securityGroup\n+            String currentTime = TimeUtil.getCurrentTime();\n+            securityGroup.setCreateAt(currentTime);\n+            securityGroup.setUpdateAt(currentTime);\n+\n+            //Persist securityGroup\n+            securityGroupRepository.addSecurityGroup(securityGroup);\n+        } else {\n+            createDefaultSecurityGroup(securityGroup, description);\n+        }\n+\n+        LOG.info(\"Create security group success, securityGroupJson: {}\", securityGroupJson);\n+\n+        return securityGroupJson;\n+    }\n+\n+    @Override\n+    public SecurityGroupJson updateSecurityGroup(String securityGroupId, SecurityGroupJson securityGroupJson) throws Exception {\n+        SecurityGroup securityGroup = securityGroupJson.getSecurityGroup();\n+        SecurityGroup oldSecurityGroup = securityGroupRepository.getSecurityGroup(securityGroupId);\n+        if (oldSecurityGroup == null) {\n+            throw new SecurityGroupNotFound();\n+        }\n+\n+        if (oldSecurityGroup.getName().equals(\"default\") && securityGroup.getName() != null) {\n+            throw new ModificationNotAllowed();\n+        }\n+\n+        //Only name and description updates are supported\n+        if (securityGroup.getName() != null) {\n+            oldSecurityGroup.setName(securityGroup.getName());\n+        }\n+\n+        if (securityGroup.getDescription() != null) {\n+            oldSecurityGroup.setDescription(securityGroup.getDescription());\n+        }\n+\n+        //Set update time for securityGroup\n+        String currentTime = TimeUtil.getCurrentTime();\n+        oldSecurityGroup.setUpdateAt(currentTime);\n+\n+        securityGroupRepository.addSecurityGroup(oldSecurityGroup);\n+        securityGroupJson.setSecurityGroup(oldSecurityGroup);\n+\n+        LOG.info(\"Update security group success, securityGroupJson: {}\", securityGroupJson);\n+\n+        return securityGroupJson;\n+    }\n+\n+    private Set<String> getSecurityGroupBindings(String SecurityGroupId) throws Exception {\n+        SecurityGroupBindings securityGroupBindings = securityGroupBindingsRepository.getSecurityGroupBindings(SecurityGroupId);\n+        if (securityGroupBindings == null || securityGroupBindings.getBindings().size() == 0) {\n+            return null;\n+        }\n+\n+        return securityGroupBindings.getBindings();\n+    }\n+\n+    @Override\n+    public void deleteSecurityGroup(String securityGroupId) throws Exception {\n+        SecurityGroup securityGroup = securityGroupRepository.getSecurityGroup(securityGroupId);\n+        if (securityGroup == null) {\n+            throw new SecurityGroupNotFound();\n+        }\n+\n+        if (getSecurityGroupBindings(securityGroupId) != null) {\n+            throw new SecurityGroupHasBindings();\n+        }\n+\n+        if (securityGroup.getName().equals(\"default\")) {\n+            securityGroupRepository.deleteDefaultSecurityGroup(securityGroupId);\n+        } else {\n+            securityGroupRepository.deleteSecurityGroup(securityGroupId);\n+        }\n+\n+        LOG.info(\"Delete security group success, securityGroupId: {}\", securityGroupId);\n+    }\n+\n+    @Override\n+    public SecurityGroupJson getSecurityGroup(String SecurityGroupId) throws Exception {\n+        SecurityGroup securityGroup = securityGroupRepository.getSecurityGroup(SecurityGroupId);\n+        if (securityGroup == null) {\n+            throw new SecurityGroupNotFound();\n+        }\n+\n+        LOG.info(\"Get security group success, securityGroup: {}\", securityGroup);\n+\n+        return new SecurityGroupJson(securityGroup);\n+    }\n+\n+    @Override\n+    public List<SecurityGroupJson> listSecurityGroup() throws Exception {\n+        List<SecurityGroupJson> securityGroups = new ArrayList<>();\n+\n+        Map<String, SecurityGroup> securityGroupMap = securityGroupRepository.getAllSecurityGroups();\n+        if (securityGroupMap == null) {\n+            return securityGroups;\n+        }\n+\n+        for (Map.Entry<String, SecurityGroup> entry: securityGroupMap.entrySet()) {\n+            //Skip the internal default security group\n+            if (entry.getKey().equals(entry.getValue().getTenantId())) {\n+                continue;\n+            }\n+\n+            SecurityGroupJson securityGroup = new SecurityGroupJson(entry.getValue());\n+            securityGroups.add(securityGroup);\n+        }\n+\n+        LOG.info(\"List security group success\");\n+\n+        return securityGroups;\n+    }\n+\n+    @Override\n+    public PortSecurityGroupsJson bindSecurityGroups(PortSecurityGroupsJson portSecurityGroupsJson) throws Exception {\n+        securityGroupBindingsRepository.addSecurityGroupBinding(portSecurityGroupsJson);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "194593933bdffb392cda8c4bab5696ab56e1c2d3"}, "originalPosition": 227}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3OTYzNjA1", "url": "https://github.com/futurewei-cloud/alcor/pull/208#pullrequestreview-417963605", "createdAt": "2020-05-26T04:32:56Z", "commit": {"oid": "96b1b76d90749ae59213eb7396b1ba317aa5ffb8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNDozMjo1NlrOGaOTBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNDozMjo1NlrOGaOTBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE1MDQwNw==", "bodyText": "In the future, we could write a general microservice validation framework, which supports an abstraction of validator and includes a list of abstract rules. A validator implementation for a specific microservice could include specific set of rules, for example, validateProjectId, validateSecurityGroup etc.", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r430150407", "createdAt": "2020-05-26T04:32:56Z", "author": {"login": "xieus"}, "path": "services/security_group_manager/src/main/java/com/futurewei/alcor/securitygroup/controller/SecurityGroupController.java", "diffHunk": "@@ -31,67 +34,129 @@\n     @Autowired\n     private SecurityGroupService securityGroupService;\n \n+    private void checkProjectId(String projectId) throws ProjectIdRequired {\n+        if (StringUtils.isEmpty(projectId)) {\n+            throw new ProjectIdRequired();\n+        }\n+    }\n+\n+    private void checkTenantId(String tenantId) throws TenantIdRequired {\n+        if (StringUtils.isEmpty(tenantId)) {\n+            throw new TenantIdRequired();\n+        }\n+    }\n+\n+    private void checkSecurityGroup(SecurityGroupJson securityGroupJson) throws SecurityGroupRequired {\n+        if (securityGroupJson == null || securityGroupJson.getSecurityGroup() == null) {\n+            throw new SecurityGroupRequired();\n+        }\n+    }\n+\n+    private void checkSecurityGroupId(String securityGroupId) throws SecurityGroupIdRequired {\n+        if (StringUtils.isEmpty(securityGroupId)) {\n+            throw new SecurityGroupIdRequired();\n+        }\n+    }\n+\n+    private void checkPortId(String portId) throws PortIdRequired {\n+        if (StringUtils.isEmpty(portId)) {\n+            throw new PortIdRequired();\n+        }\n+    }\n+\n+    private void checkPortSecurityGroups(PortSecurityGroupsJson portSecurityGroupsJson) throws PortSecurityGroupsRequired {\n+        if (portSecurityGroupsJson == null || portSecurityGroupsJson.getSecurityGroups() == null) {\n+            throw new PortSecurityGroupsRequired();\n+        }\n+    }\n+\n+    private void checkSecurityGroups(SecurityGroupBulkJson securityGroupBulkJson) throws SecurityGroupsRequired {\n+        if (securityGroupBulkJson == null ||\n+                securityGroupBulkJson.getSecurityGroups() == null ||\n+                securityGroupBulkJson.getSecurityGroups().size() == 0) {\n+            throw new SecurityGroupsRequired();\n+        }\n+    }\n+\n     @PostMapping({\"/project/{project_id}/security-groups\", \"v4/{project_id}/security-groups\"})\n     @ResponseBody\n     @ResponseStatus(HttpStatus.CREATED)\n     public SecurityGroupJson createSecurityGroup(@PathVariable(\"project_id\") String projectId,\n                                              @RequestBody SecurityGroupJson securityGroupJson) throws Exception {\n-        RestPreconditionsUtil.verifyParameterNotNullorEmpty(projectId);\n-        RestPreconditionsUtil.verifyParameterNotNullorEmpty(securityGroupJson);\n-        SecurityGroup securityGroup = securityGroupJson.getSecurityGroup();\n-        RestPreconditionsUtil.verifyParameterNotNullorEmpty(securityGroup);\n-        RestPreconditionsUtil.verifyParameterNotNullorEmpty(securityGroup.getTenantId());\n-        securityGroup.setProjectId(projectId);\n+        checkProjectId(projectId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96b1b76d90749ae59213eb7396b1ba317aa5ffb8"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4ODc0MzA1", "url": "https://github.com/futurewei-cloud/alcor/pull/208#pullrequestreview-418874305", "createdAt": "2020-05-27T05:50:46Z", "commit": {"oid": "9837115bbbe17a265ed276b356d8cc94b5129775"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNTo1MDo0NlrOGa6T3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjo1NjowN1rOGa7xyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg3MTUxNw==", "bodyText": "Just a reminder. Seems that we need to merge pull from latest alcor/master. The doc path is not latest.", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r430871517", "createdAt": "2020-05-27T05:50:46Z", "author": {"login": "xieus"}, "path": "docs/design/security_group_manager.adoc", "diffHunk": "@@ -0,0 +1,1132 @@\n+= Security Group Manager Design Specification", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9837115bbbe17a265ed276b356d8cc94b5129775"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg5NTU2MQ==", "bodyText": "SGM indeed has a lot of APIs. Give me a bit time to review. Good job in writing them down.", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r430895561", "createdAt": "2020-05-27T06:56:07Z", "author": {"login": "xieus"}, "path": "docs/design/security_group_manager.adoc", "diffHunk": "@@ -0,0 +1,1132 @@\n+= Security Group Manager Design Specification\n+Piaoping Chen <chenpiaoping@yeah.net>, Liguang Xie <lxie@futurewei.com>\n+v0.1, 2020-04-08\n+:toc: right\n+\n+== Overview\n+\n+Security Group Manager is an Alcor microservice which manages the lifecycle of all security groups and security group rules.\n+It provides rest interfaces for creating security group, updating security group, deleting security group, creating security group rule, \n+deleting security group rule, port binding security groups, and port unbinding security groups. Port Manager binds port to security groups by \n+interacting with Security Group Manager.By default, each tenant has at least one security group, the default security group, which contains two default ingress security group rules. When tenant creates the first security group, Security Group Manager determines whether the tenant has a default security group, if it does not, create a default security group. If the tenant does not specify a security group when creating the port, the port should bind to the default security group.\n+A port can bind to multiple security groups, but bind at least one. When port binds to a security group, Security Group Manager creates a binding relationship table entry between port and security group, and deletes the binding relationship table entry when port is released.\n+\n+\n+== Service Requirements\n+\n+[arabic]\n+. Managing security group and security group rule resources.\n+. Create (port, Security Group) association when a port is created.\n+. Release (port, Security Group) association when a port is released.\n+. Concurrency control mechanism should be provided to process multiple concurrent bind/unbind Security Group requests.\n+. Working together with other services including subnet manager, port manager.\n+\n+\n+== REST APIs\n+\n+=== API Snapshot", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9837115bbbe17a265ed276b356d8cc94b5129775"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9837115bbbe17a265ed276b356d8cc94b5129775", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/9837115bbbe17a265ed276b356d8cc94b5129775", "committedDate": "2020-05-26T09:54:21Z", "message": "add API specs and basic design for Security Group Manager"}, "afterCommit": {"oid": "a2a23bd73f545c8414caa7d60dd64305ce1cf618", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a2a23bd73f545c8414caa7d60dd64305ce1cf618", "committedDate": "2020-06-03T07:37:29Z", "message": "move security_group_manager.adoc to new mgmt_services directory"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2a23bd73f545c8414caa7d60dd64305ce1cf618", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/a2a23bd73f545c8414caa7d60dd64305ce1cf618", "committedDate": "2020-06-03T07:37:29Z", "message": "move security_group_manager.adoc to new mgmt_services directory"}, "afterCommit": {"oid": "826e0944d77cec11cc6b4eb0249a3355bf60167e", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/826e0944d77cec11cc6b4eb0249a3355bf60167e", "committedDate": "2020-06-04T03:58:59Z", "message": "get default security group by tenant id"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MDI1MjUz", "url": "https://github.com/futurewei-cloud/alcor/pull/208#pullrequestreview-425025253", "createdAt": "2020-06-05T06:25:16Z", "commit": {"oid": "826e0944d77cec11cc6b4eb0249a3355bf60167e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjoyNToxNlrOGfh1jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwNjoyNToxNlrOGfh1jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTcxMzQyMQ==", "bodyText": "Seems that the latest Alcor/master is not merge yet. We should have SecurityGroupEntity class here @chenpiaoping", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r435713421", "createdAt": "2020-06-05T06:25:16Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/main/java/com/futurewei/alcor/portmanager/util/GoalStateUtil.java", "diffHunk": "@@ -270,9 +273,9 @@ private static int protocolToNumber(String protocol) {\n             } else if (entity instanceof SubnetEntity) {\n                 SubnetEntity subnetEntity = (SubnetEntity) entity;\n                 subnetEntityMap.put(subnetEntity.getId(), subnetEntity);\n-            } else if (entity instanceof SecurityGroupEntity) {\n-                SecurityGroupEntity securityGroupEntity = (SecurityGroupEntity) entity;\n-                securityGroupEntityMap.put(securityGroupEntity.getId(), securityGroupEntity);\n+            } else if (entity instanceof SecurityGroup) {\n+                SecurityGroup securityGroupEntity = (SecurityGroup) entity;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "826e0944d77cec11cc6b4eb0249a3355bf60167e"}, "originalPosition": 192}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1OTUzNjc5", "url": "https://github.com/futurewei-cloud/alcor/pull/208#pullrequestreview-425953679", "createdAt": "2020-06-08T06:51:16Z", "commit": {"oid": "826e0944d77cec11cc6b4eb0249a3355bf60167e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNjo1MToxNlrOGgRHqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNjo1NTozOVrOGgROVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ4ODEwNw==", "bodyText": "For the private check methods, I would recommend to move to an util class which could be replaced by a validator.", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r436488107", "createdAt": "2020-06-08T06:51:16Z", "author": {"login": "xieus"}, "path": "services/security_group_manager/src/main/java/com/futurewei/alcor/securitygroup/controller/SecurityGroupRuleController.java", "diffHunk": "@@ -0,0 +1,250 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.securitygroup.controller;\n+\n+import com.futurewei.alcor.common.utils.Ipv4AddrUtil;\n+import com.futurewei.alcor.common.utils.Ipv6AddrUtil;\n+import com.futurewei.alcor.securitygroup.exception.*;\n+import com.futurewei.alcor.securitygroup.service.SecurityGroupRuleService;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroupRule;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroupRuleBulkJson;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroupRuleJson;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+import org.thymeleaf.util.StringUtils;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+@RestController\n+public class SecurityGroupRuleController {\n+    @Autowired\n+    private SecurityGroupRuleService securityGroupRuleService;\n+\n+    private void checkProjectId(String projectId) throws ProjectIdRequired {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "826e0944d77cec11cc6b4eb0249a3355bf60167e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ4ODkyMg==", "bodyText": "Didn't see protocol check here. Which protocols are supported by the v1 implementation. Could you list the current scope at the beginning of the controller.", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r436488922", "createdAt": "2020-06-08T06:53:20Z", "author": {"login": "xieus"}, "path": "services/security_group_manager/src/main/java/com/futurewei/alcor/securitygroup/controller/SecurityGroupRuleController.java", "diffHunk": "@@ -0,0 +1,250 @@\n+/*\n+Copyright 2019 The Alcor Authors.\n+\n+Licensed under the Apache License, Version 2.0 (the \"License\");\n+        you may not use this file except in compliance with the License.\n+        You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+        Unless required by applicable law or agreed to in writing, software\n+        distributed under the License is distributed on an \"AS IS\" BASIS,\n+        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+        See the License for the specific language governing permissions and\n+        limitations under the License.\n+*/\n+package com.futurewei.alcor.securitygroup.controller;\n+\n+import com.futurewei.alcor.common.utils.Ipv4AddrUtil;\n+import com.futurewei.alcor.common.utils.Ipv6AddrUtil;\n+import com.futurewei.alcor.securitygroup.exception.*;\n+import com.futurewei.alcor.securitygroup.service.SecurityGroupRuleService;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroupRule;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroupRuleBulkJson;\n+import com.futurewei.alcor.web.entity.securitygroup.SecurityGroupRuleJson;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.web.bind.annotation.*;\n+import org.thymeleaf.util.StringUtils;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+\n+@RestController\n+public class SecurityGroupRuleController {\n+    @Autowired\n+    private SecurityGroupRuleService securityGroupRuleService;\n+\n+    private void checkProjectId(String projectId) throws ProjectIdRequired {\n+        if (StringUtils.isEmpty(projectId)) {\n+            throw new ProjectIdRequired();\n+        }\n+    }\n+\n+    private void checkTenantId(String tenantId) throws TenantIdRequired {\n+        if (StringUtils.isEmpty(tenantId)) {\n+            throw new TenantIdRequired();\n+        }\n+    }\n+\n+    private void checkSecurityGroupId(String securityGroupId) throws SecurityGroupIdRequired {\n+        if (StringUtils.isEmpty(securityGroupId)) {\n+            throw new SecurityGroupIdRequired();\n+        }\n+    }\n+\n+    private void checkDirection(String direction) throws DirectionRequired {\n+        if (StringUtils.isEmpty(direction)) {\n+            throw new DirectionRequired();\n+        }\n+    }\n+\n+    private void checkSecurityGroupRule(SecurityGroupRuleJson securityGroupRuleJson) throws SecurityGroupRuleRequired {\n+        if (securityGroupRuleJson == null || securityGroupRuleJson.getSecurityGroupRule() == null) {\n+            throw new SecurityGroupRuleRequired();\n+        }\n+    }\n+\n+    private void checkSecurityGroupRules(SecurityGroupRuleBulkJson securityGroupRuleBulkJson) throws SecurityGroupRuleRequired {\n+        if (securityGroupRuleBulkJson == null ||\n+                securityGroupRuleBulkJson.getSecurityGroupRules() == null ||\n+                securityGroupRuleBulkJson.getSecurityGroupRules().size() == 0) {\n+            throw new SecurityGroupRuleRequired();\n+        }\n+    }\n+\n+    private void checkSecurityGroupRuleId(String securityGroupRuleId) throws SecurityGroupRuleIdRequired {\n+        if (StringUtils.isEmpty(securityGroupRuleId)) {\n+            throw new SecurityGroupRuleIdRequired();\n+        }\n+    }\n+\n+    private void checkPortRange(SecurityGroupRule securityGroupRule) throws Exception {\n+        Integer portRangeMax = securityGroupRule.getPortRangeMax();\n+        Integer portRangeMin = securityGroupRule.getPortRangeMin();\n+        String protocol = securityGroupRule.getProtocol();\n+\n+        if (protocol == null) {\n+            throw new ProtocolInvalidException();\n+        }\n+\n+        if (Arrays.asList(\"tcp\", \"udp\").contains(protocol)) {\n+            if (portRangeMax == null || portRangeMin == null) {\n+                throw new PortRangeInvalid();\n+            }\n+\n+            if (!(portRangeMax > 0 && portRangeMax < 65536)) {\n+                throw new PortRangeInvalid();\n+            }\n+\n+            if (!(portRangeMin > 0 && portRangeMin < 65536)) {\n+                throw new PortRangeInvalid();\n+            }\n+\n+            if (portRangeMin > portRangeMax) {\n+                throw new PortRangeInvalid();\n+            }\n+        }\n+\n+        if (Arrays.asList(\"icmp\", \"icmpv6\").contains(protocol)) {\n+            if (portRangeMin == null && portRangeMax != null) {\n+                throw new PortRangeInvalid();\n+            }\n+\n+            if (portRangeMin != null && portRangeMax == null) {\n+                throw new PortRangeInvalid();\n+            }\n+\n+            if (portRangeMin != null && !(0 <= portRangeMin && portRangeMin <= 255)) {\n+                throw new PortRangeInvalid();\n+            }\n+\n+            if (portRangeMax != null && !(0 <= portRangeMax && portRangeMax <= 255)) {\n+                throw new PortRangeInvalid();\n+            }\n+        }\n+    }\n+\n+    private String getIpVersionByPrefix(String prefix) throws Exception {\n+        if (Ipv4AddrUtil.ipv4PrefixCheck(prefix)) {\n+            return \"IPv4\";\n+        } else if (Ipv6AddrUtil.ipv6PrefixCheck(prefix)) {\n+            return \"IPv6\";\n+        }\n+\n+        throw new RemoteIpPrefixInvalid();\n+    }\n+    private void checkRemoteIpPrefix(SecurityGroupRule securityGroupRule) throws Exception {\n+        String remoteIpPrefix = securityGroupRule.getRemoteIpPrefix();\n+        String etherType = securityGroupRule.getEtherType();\n+\n+        if (!getIpVersionByPrefix(remoteIpPrefix).equals(etherType)) {\n+            throw new EtherTypeRemoteIpPrefixConflict();\n+        }\n+    }\n+\n+    private void checkProtocolAndEtherType(SecurityGroupRule securityGroupRule) throws Exception {\n+        String protocol = securityGroupRule.getProtocol();\n+        String etherType = securityGroupRule.getEtherType();\n+\n+        List<String> ipv6Protocols = Arrays.asList(\"icmpv6\");\n+        if (ipv6Protocols.contains(protocol) &&\n+                SecurityGroupRule.EtherType.IPV4.getType().equals(etherType)) {\n+            throw new ProtocolEtherTypeConflict();\n+        }\n+    }\n+\n+    private void checkSecurityGroupRule(SecurityGroupRule securityGroupRule) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "826e0944d77cec11cc6b4eb0249a3355bf60167e"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ4OTgxNQ==", "bodyText": "Compared with Neutron SG rule, we need three more fields:\nrevision_number, created_at, updated_at.\nConsider to add it into CustomerResource.", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r436489815", "createdAt": "2020-06-08T06:55:39Z", "author": {"login": "xieus"}, "path": "web/src/main/java/com/futurewei/alcor/web/entity/securitygroup/SecurityGroupRule.java", "diffHunk": "@@ -15,7 +18,7 @@\n import com.fasterxml.jackson.annotation.JsonProperty;\n import com.futurewei.alcor.common.entity.CustomerResource;\n \n-public class SecurityGroupRuleEntity extends CustomerResource {\n+public class SecurityGroupRule extends CustomerResource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "826e0944d77cec11cc6b4eb0249a3355bf60167e"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1OTU3NDI0", "url": "https://github.com/futurewei-cloud/alcor/pull/208#pullrequestreview-425957424", "createdAt": "2020-06-08T06:58:44Z", "commit": {"oid": "826e0944d77cec11cc6b4eb0249a3355bf60167e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNjo1ODo0NVrOGgRTcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQwNjo1ODo0NVrOGgRTcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjQ5MTEyMA==", "bodyText": "remote_group_id and remote_group_prefix can't be null at the same time. Please check if we have appropriate check in the code.", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r436491120", "createdAt": "2020-06-08T06:58:45Z", "author": {"login": "xieus"}, "path": "docs/modules/ROOT/pages/mgmt_services/security_group_manager.adoc", "diffHunk": "@@ -0,0 +1,1132 @@\n+= Security Group Manager Design Specification\n+Piaoping Chen <chenpiaoping@yeah.net>, Liguang Xie <lxie@futurewei.com>\n+v0.1, 2020-04-08\n+:toc: right\n+\n+== Overview\n+\n+Security Group Manager is an Alcor microservice which manages the lifecycle of all security groups and security group rules.\n+It provides rest interfaces for creating security group, updating security group, deleting security group, creating security group rule, \n+deleting security group rule, port binding security groups, and port unbinding security groups. Port Manager binds port to security groups by \n+interacting with Security Group Manager.By default, each tenant has at least one security group, the default security group, which contains two default ingress security group rules. When tenant creates the first security group, Security Group Manager determines whether the tenant has a default security group, if it does not, create a default security group. If the tenant does not specify a security group when creating the port, the port should bind to the default security group.\n+A port can bind to multiple security groups, but bind at least one. When port binds to a security group, Security Group Manager creates a binding relationship table entry between port and security group, and deletes the binding relationship table entry when port is released.\n+\n+\n+== Service Requirements\n+\n+[arabic]\n+. Managing security group and security group rule resources.\n+. Create (port, Security Group) association when a port is created.\n+. Release (port, Security Group) association when a port is released.\n+. Concurrency control mechanism should be provided to process multiple concurrent bind/unbind Security Group requests.\n+. Working together with other services including subnet manager, port manager.\n+\n+\n+== REST APIs\n+\n+=== API Snapshot\n+\n+[width=\"100%\",cols=\"22%,12%,50%,17%\"]\n+|===\n+|*API Name* |*Method* |*Request*|*Response*\n+\n+|Create Security Group\n+|POST\n+|/project/{project_id}/security-groups\n+|Security Group\n+<<Create_Security_Group,[sample]>>\n+\n+|Create Security Group Bulk\n+|POST\n+|/project/{project_id}/security-groups/bulk\n+|Security Group list\n+<<Create_Security_Group_Bulk,[sample]>>\n+\n+|Update Security Group\n+|PUT\n+|/project/{project_id}/security-groups/{security_group_id}\n+|Security Group\n+<<Update_Security_Group,[sample]>>\n+\n+|Get Security Group\n+|GET\n+|/project/{project_id}/security-groups/{security_group_id}\n+|Security Group\n+<<Get_Security_Group,[sample]>>\n+\n+|List Security Group\n+|GET\n+|/project/{project_id}/security-groups\n+|Security Group list\n+<<List_Security_Group,[sample]>>\n+\n+|Delete Security Group\n+|DELETE\n+|/project/{project_id}/security-groups/{security_group_id}\n+|None\n+<<Delete_Security_Group,[sample]>>\n+\n+|Create Security Group Rule\n+|POST\n+|/project/{project_id}/security-group-rules\n+|Security Group Rule\n+<<Create_Security_Group_Rule,[sample]>>\n+\n+|Create Security Group Rule Bulk\n+|POST\n+|/project/{project_id}/security-group-rules/bulk\n+|Security Group Rule list\n+<<Create_Security_Group_Rule_Bulk,[sample]>>\n+\n+|Get Security Group Rule\n+|GET\n+|/project/{project_id}/security-group-rules/{security_group_rule_id}\n+|Security Group Rule\n+<<Get_Security_Group_Rule,[sample]>>\n+\n+|List Security Group Rule\n+|GET\n+|/project/{project_id}/security-group-rules\n+|Security Group Rule list\n+<<List_Security_Group_Rule,[sample]>>\n+\n+|Delete Security Group Rule\n+|DELETE\n+| /project/{project_id}/security-group-rules/{security_group_rule_id}\n+|None\n+<<Delete_Security_Group_Rule,[sample]>>\n+\n+|Binding Security Group\n+|POST\n+|/project/{project_id}/bind-security-groups\n+|Port Security Groups\n+<<Bind_Security_Group,[sample]>>\n+\n+|Unbinding Security Group\n+|POST\n+|/project/{project_id}/bind-security-groups\n+|Port Security Groups\n+<<Unbind_Security_Group,[sample]>>\n+\n+|===\n+\n+=== API Specification\n+\n+anchor:Create_Security_Group[]\n+**(1) Create Security Group**\n+\n+* Method: `POST`\n+\n+* Request: `/project/{project_id}/security-groups`\n+\n+* Request Parameter: `PathVariable String projectId`\n+\n+* Response: Security Group\n+* Normal response codes: 200\n+* Error response codes: 400, 412, 500\n+\n+* Example\n+\n+....\n+Request:\n+http://127.0.0.1:8080/project/3d53801c-32ce-4e97-9572-bb966fab628/security-groups\n+\n+Body:\n+{\n+\t\"security_group\": {\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"name\": \"securityGroup1\",\n+\t\t\"description\": \"This is a security group\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\"\n+\t}\n+}\n+\n+Response:\n+{\n+\t\"security_group\": {\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"name\": \"securityGroup1\",\n+\t\t\"description\": \"This is a security group\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"security_group_rules\": [{\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"40a24482-eec2-4105-86ad-77a8539a566b\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv4\"\n+\t\t}, {\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"fde106d3-904c-455f-be34-e82879a1afcc\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv6\"\n+\t\t}],\n+\t\t\"create_at\": \"2020-05-26 16:06:14\",\n+\t\t\"update_at\": \"2020-05-26 16:06:14\"\n+\t}\n+}\n+\n+....\n+anchor:Create_Security_Group_Bulk[]\n+**(2) Create Security Group Bulk**\n+\n+* Method: `POST`\n+\n+* Request: `/project/{project_id}/security-groups/bulk`\n+\n+* Request Parameter: `PathVariable String projectId`\n+\n+* Response: Security Group list\n+* Normal response codes: 200\n+* Error response codes: 400, 412, 500\n+\n+* Example\n+\n+....\n+Request:\n+http://127.0.0.1:8080/project/3d53801c-32ce-4e97-9572-bb966fab628/security-groups/bulk\n+\n+Body:\n+{\n+\t\"security_groups\": [{\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"name\": \"securityGroup1\",\n+\t\t\"description\": \"This is a security group\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"security_group_rules\": null,\n+\t\t\"create_at\": null,\n+\t\t\"update_at\": null\n+\t}, {\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f7a5f1\",\n+\t\t\"name\": \"securityGroup2\",\n+\t\t\"description\": \"This is another security group\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"security_group_rules\": null,\n+\t\t\"create_at\": null,\n+\t\t\"update_at\": null\n+\t}]\n+}\n+\n+Response:\n+{\n+\t\"security_groups\": [{\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"name\": \"securityGroup1\",\n+\t\t\"description\": \"This is a security group\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"security_group_rules\": [{\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"bb71feb1-abd2-403f-93ca-7d87fe3e6082\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv4\"\n+\t\t}, {\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"50ec33df-fdc2-4256-9378-96b471b544d3\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv6\"\n+\t\t}],\n+\t\t\"create_at\": \"2020-05-26 16:06:14\",\n+\t\t\"update_at\": \"2020-05-26 16:06:14\"\n+\t}, {\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f7a5f1\",\n+\t\t\"name\": \"securityGroup2\",\n+\t\t\"description\": \"This is another security group\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"security_group_rules\": [{\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"af97dfab-fc4f-45d8-9e29-d0a0d26ff3a1\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f7a5f1\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv4\"\n+\t\t}, {\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"c9b66c52-dfc3-4c8b-920e-75b2f740f5f6\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f7a5f1\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv6\"\n+\t\t}],\n+\t\t\"create_at\": \"2020-05-26 16:06:14\",\n+\t\t\"update_at\": \"2020-05-26 16:06:14\"\n+\t}]\n+}\n+\n+....\n+anchor:Update_Security_Group[]\n+**(3) Update Security Group**\n+\n+* Method: `PUT`\n+\n+* Request: `/project/{project_id}/security-groups/{security_group_id}`\n+\n+* Request Parameter: `PathVariable String projectId, @PathVariable String securityGroupId`\n+\n+* Response: Security Group\n+* Normal response codes: 200\n+* Error response codes: 400, 412, 500\n+\n+* Example\n+\n+....\n+Request:\n+http://127.0.0.1:8080/project/3d53801c-32ce-4e97-9572-bb966fab628/security-groups/3d53801c-32ce-4e97-9572-bb966f476ec\n+\n+Body:\n+{\n+\t\"security_group\": {\n+\t\t\"project_id\": null,\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"name\": \"securityGroup2\",\n+\t\t\"description\": \"This is another security group\"\n+\t}\n+}\n+\n+Response:\n+{\n+\t\"security_group\": {\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"name\": \"securityGroup2\",\n+\t\t\"description\": \"This is another security group\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"security_group_rules\": [{\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"bb71feb1-abd2-403f-93ca-7d87fe3e6082\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv4\"\n+\t\t}, {\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"50ec33df-fdc2-4256-9378-96b471b544d3\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv6\"\n+\t\t}],\n+\t\t\"create_at\": \"2020-05-26 16:06:14\",\n+\t\t\"update_at\": \"2020-05-26 16:06:15\"\n+\t}\n+}\n+\n+....\n+anchor:Get_Security_Group[]\n+**(4) Get Security Group**\n+\n+* Method: `GET`\n+\n+* Request: `/project/{project_id}/security-groups/{security_group_id}`\n+\n+* Request Parameter: `PathVariable String projectId, @PathVariable String securityGroupId`\n+\n+* Response: `Security Group`\n+\n+* Normal response codes: 201\n+\n+* Error response codes: 400, 409, 412, 500, 503\n+\n+* Example\n+....\n+Request:\n+http://127.0.0.1:8080/project/3d53801c-32ce-4e97-9572-bb966fab628/security-groups/3d53801c-32ce-4e97-9572-bb966f476ec\n+\n+Response:\n+{\n+\t\"security_group\": {\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"name\": \"securityGroup2\",\n+\t\t\"description\": \"This is another security group\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"security_group_rules\": [{\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"bb71feb1-abd2-403f-93ca-7d87fe3e6082\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv4\"\n+\t\t}, {\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"50ec33df-fdc2-4256-9378-96b471b544d3\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv6\"\n+\t\t}],\n+\t\t\"create_at\": \"2020-05-26 16:06:14\",\n+\t\t\"update_at\": \"2020-05-26 16:06:15\"\n+\t}\n+}\n+\n+....\n+anchor:List_Security_Group[]\n+**(5) List Security Group**\n+\n+* Method: `GET`\n+\n+* Request: `/project/{project_id}/security-groups`\n+\n+* Request Parameter:`@PathVariable String projectId`\n+\n+* Response: `Security Group list`\n+\n+* Normal response codes: 201\n+\n+* Error response codes: 400, 409, 412, 500, 503\n+\n+* Example\n+....\n+Request:\n+http://127.0.0.1:8080/project/3d53801c-32ce-4e97-9572-bb966fab628/security-groups\n+\n+\n+Response:\n+[{\n+\t\"security_group\": {\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f7a5f1\",\n+\t\t\"name\": \"securityGroup2\",\n+\t\t\"description\": \"This is another security group\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"security_group_rules\": [{\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"af97dfab-fc4f-45d8-9e29-d0a0d26ff3a1\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f7a5f1\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv4\"\n+\t\t}, {\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"c9b66c52-dfc3-4c8b-920e-75b2f740f5f6\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f7a5f1\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv6\"\n+\t\t}],\n+\t\t\"create_at\": \"2020-05-26 16:06:14\",\n+\t\t\"update_at\": \"2020-05-26 16:06:14\"\n+\t}\n+}, {\n+\t\"security_group\": {\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"id\": \"98d5b83c-2aed-4bc7-aa22-303960fd0017\",\n+\t\t\"name\": \"default\",\n+\t\t\"description\": null,\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"security_group_rules\": [{\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"11401dd4-2f9a-41c0-8fc3-7a0b7e6e28b3\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"98d5b83c-2aed-4bc7-aa22-303960fd0017\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"ingress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv4\"\n+\t\t}, {\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"62ad51e8-c871-4ccd-a9c6-f17d64dcb89b\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"98d5b83c-2aed-4bc7-aa22-303960fd0017\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"ingress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv6\"\n+\t\t}],\n+\t\t\"create_at\": \"2020-05-26 16:06:14\",\n+\t\t\"update_at\": \"2020-05-26 16:06:14\"\n+\t}\n+}, {\n+\t\"security_group\": {\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"name\": \"securityGroup2\",\n+\t\t\"description\": \"This is another security group\",\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"security_group_rules\": [{\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"bb71feb1-abd2-403f-93ca-7d87fe3e6082\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv4\"\n+\t\t}, {\n+\t\t\t\"project_id\": null,\n+\t\t\t\"id\": \"50ec33df-fdc2-4256-9378-96b471b544d3\",\n+\t\t\t\"name\": null,\n+\t\t\t\"description\": null,\n+\t\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\t\"remote_group_id\": null,\n+\t\t\t\"direction\": \"egress\",\n+\t\t\t\"remote_ip_prefix\": null,\n+\t\t\t\"protocol\": null,\n+\t\t\t\"port_range_max\": null,\n+\t\t\t\"port_range_min\": null,\n+\t\t\t\"ether_type\": \"IPv6\"\n+\t\t}],\n+\t\t\"create_at\": \"2020-05-26 16:06:14\",\n+\t\t\"update_at\": \"2020-05-26 16:06:15\"\n+\t}\n+}]\n+....\n+anchor:Create_Security_Group_Rule[]\n+**(6) Create Security Group Rule**\n+\n+* Method: `POST`\n+\n+* Request: `/project/{project_id}/security-group-rules`\n+\n+* Request Parameter: `@PathVariable String projectId`\n+\n+* Response: `Security Group Rule `\n+\n+* Normal response codes: 200\n+\n+* Error response codes: 400, 412, 500\n+\n+* Example\n+....\n+Request:\n+http://127.0.0.1:8080/project/3d53801c-32ce-4e97-9572-bb966fab628/security-group-rules\n+\n+Body:\n+{\n+\t\"security_group_rule\": {\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966fa6b23\",\n+\t\t\"name\": null,\n+\t\t\"description\": null,\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"remote_group_id\": null,\n+\t\t\"direction\": \"ingress\",\n+\t\t\"remote_ip_prefix\": null,\n+\t\t\"protocol\": \"tcp\",\n+\t\t\"port_range_max\": 65535,\n+\t\t\"port_range_min\": 1,\n+\t\t\"ether_type\": \"IPv4\"\n+\t}\n+}\n+\n+Response:\n+{\n+\t\"security_group_rule\": {\n+\t\t\"project_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"id\": \"3d53801c-32ce-4e97-9572-bb966fa6b23\",\n+\t\t\"name\": null,\n+\t\t\"description\": null,\n+\t\t\"tenant_id\": \"3d53801c-32ce-4e97-9572-bb966fab628\",\n+\t\t\"security_group_id\": \"3d53801c-32ce-4e97-9572-bb966f476ec\",\n+\t\t\"remote_group_id\": null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "826e0944d77cec11cc6b4eb0249a3355bf60167e"}, "originalPosition": 633}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "822c9f6ba10b21ffab512f6a0f1ec5713aba92d1", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/822c9f6ba10b21ffab512f6a0f1ec5713aba92d1", "committedDate": "2020-06-11T02:11:28Z", "message": "port manager supprt sql"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8e058f83f7b83d536d7b2ec46814739101dab87", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/b8e058f83f7b83d536d7b2ec46814739101dab87", "committedDate": "2020-06-11T02:13:22Z", "message": "Merge remote-tracking branch 'upstream/master'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f98541fcbcf4430a79e8073d43e172bb0588360a", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/f98541fcbcf4430a79e8073d43e172bb0588360a", "committedDate": "2020-06-11T03:27:57Z", "message": "[Micro-Service] Security group manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "328296f871ed0733abe614a6d3b85349649c6c77", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/328296f871ed0733abe614a6d3b85349649c6c77", "committedDate": "2020-06-11T03:28:04Z", "message": "add bulk interfaces for security group"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4667754d71271b8e485be205d763ed27b46477a2", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/4667754d71271b8e485be205d763ed27b46477a2", "committedDate": "2020-06-11T03:28:06Z", "message": "add some test cases for Ipv4/Ipv6 util"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e30a8485851095bdd48b87195a632ff67b083d4b", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/e30a8485851095bdd48b87195a632ff67b083d4b", "committedDate": "2020-06-11T03:28:07Z", "message": "add API specs and basic design for Security Group Manager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04f86469016b223916b2dcbad42a5bf3c6c72830", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/04f86469016b223916b2dcbad42a5bf3c6c72830", "committedDate": "2020-06-11T03:28:08Z", "message": "move security_group_manager.adoc to new mgmt_services directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d575ce1f08d6f3f4b31941e13517db3d82bd2601", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/d575ce1f08d6f3f4b31941e13517db3d82bd2601", "committedDate": "2020-06-11T03:29:43Z", "message": "get default security group by tenant id"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "826e0944d77cec11cc6b4eb0249a3355bf60167e", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/826e0944d77cec11cc6b4eb0249a3355bf60167e", "committedDate": "2020-06-04T03:58:59Z", "message": "get default security group by tenant id"}, "afterCommit": {"oid": "07f61f978ce7fdb8f534fe4b458617ad9f647b00", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/07f61f978ce7fdb8f534fe4b458617ad9f647b00", "committedDate": "2020-06-11T06:39:41Z", "message": "move parameter check methods to an util class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59638019ca06cc4687dc90f9b76f20df6f46402c", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/59638019ca06cc4687dc90f9b76f20df6f46402c", "committedDate": "2020-06-11T06:54:58Z", "message": "move parameter check methods to an util class"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07f61f978ce7fdb8f534fe4b458617ad9f647b00", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/07f61f978ce7fdb8f534fe4b458617ad9f647b00", "committedDate": "2020-06-11T06:39:41Z", "message": "move parameter check methods to an util class"}, "afterCommit": {"oid": "59638019ca06cc4687dc90f9b76f20df6f46402c", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/59638019ca06cc4687dc90f9b76f20df6f46402c", "committedDate": "2020-06-11T06:54:58Z", "message": "move parameter check methods to an util class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NDIxNTg5", "url": "https://github.com/futurewei-cloud/alcor/pull/208#pullrequestreview-429421589", "createdAt": "2020-06-12T02:26:19Z", "commit": {"oid": "59638019ca06cc4687dc90f9b76f20df6f46402c"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoyNjoxOVrOGi1BdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoyNjoxOVrOGi1BdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE3MzQ5Mg==", "bodyText": "Not Alcor classes. Please remove.", "url": "https://github.com/futurewei-cloud/alcor/pull/208#discussion_r439173492", "createdAt": "2020-06-12T02:26:19Z", "author": {"login": "xieus"}, "path": "services/port_manager/src/test/java/com/futurewei/alcor/portmanager/entity/Address.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.futurewei.alcor.portmanager.entity;\n+\n+import org.apache.ignite.binary.BinaryObjectException;\n+import org.apache.ignite.binary.BinaryReader;\n+import org.apache.ignite.binary.BinaryWriter;\n+import org.apache.ignite.binary.Binarylizable;\n+\n+/**\n+ * Employee address.\n+ * <p>\n+ * This class implements {@link Binarylizable} only for example purposes,\n+ * in order to show how to customize serialization and deserialization of\n+ * binary objects.\n+ */\n+public class Address implements Binarylizable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59638019ca06cc4687dc90f9b76f20df6f46402c"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8120c670d9d314e87ab09d08578a8a365e7c885", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/b8120c670d9d314e87ab09d08578a8a365e7c885", "committedDate": "2020-06-12T02:37:21Z", "message": "Delete Address.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01c10775a0326fd29c650649c9793cb4fb650589", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/01c10775a0326fd29c650649c9793cb4fb650589", "committedDate": "2020-06-12T02:37:34Z", "message": "Delete Employee.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52324f08a526b5e38a9892c8cdc0cb8ede393014", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/52324f08a526b5e38a9892c8cdc0cb8ede393014", "committedDate": "2020-06-12T02:37:43Z", "message": "Delete Organization.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a61a401dc53e6a51f152433480a4a77884c3d8a", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/5a61a401dc53e6a51f152433480a4a77884c3d8a", "committedDate": "2020-06-12T02:37:51Z", "message": "Delete OrganizationType.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4415880729e110bdcfd48bfa878072fc1ff6897a", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/4415880729e110bdcfd48bfa878072fc1ff6897a", "committedDate": "2020-06-12T02:38:09Z", "message": "Delete Person.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd5e469ea1f0087db583211884cb2b38d01793c9", "author": {"user": {"login": "chenpiaoping", "name": null}}, "url": "https://github.com/futurewei-cloud/alcor/commit/bd5e469ea1f0087db583211884cb2b38d01793c9", "committedDate": "2020-06-12T02:38:22Z", "message": "Delete IgniteCacheTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd75eb07441c145e900ddcc8dfc1ca0ced3c0968", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/dd75eb07441c145e900ddcc8dfc1ca0ced3c0968", "committedDate": "2020-06-12T04:07:33Z", "message": "Add SGM into main pom.xml and standarlize SGM pom.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86954451b194717513a1c185cbef9ed51fc6ad12", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/86954451b194717513a1c185cbef9ed51fc6ad12", "committedDate": "2020-06-12T04:46:59Z", "message": "Enable Swagger UI and code report"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54f5cf26d33f5dae81df0d44c3eea87396c80911", "author": {"user": {"login": "xieus", "name": "Liguang Xie"}}, "url": "https://github.com/futurewei-cloud/alcor/commit/54f5cf26d33f5dae81df0d44c3eea87396c80911", "committedDate": "2020-06-12T04:57:10Z", "message": "Minor fix format"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2097, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}