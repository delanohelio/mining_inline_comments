{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0ODIyOTU3", "number": 2495, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMjo1NjoyNVrOE1AtIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMjo1NjoyNVrOE1AtIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MDIxNTM2OnYy", "diffSide": "RIGHT", "path": "tests/functional/request-scope/src/main/java/io/helidon/tests/functional/requestscope/RequestTestQualifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMjo1NjoyNVrOHtDaiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMjo1NjoyNVrOHtDaiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwMzkxMw==", "bodyText": "Intentional?", "url": "https://github.com/oracle/helidon/pull/2495#discussion_r517003913", "createdAt": "2020-11-03T22:56:25Z", "author": {"login": "ljnelson"}, "path": "tests/functional/request-scope/src/main/java/io/helidon/tests/functional/requestscope/RequestTestQualifier.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.tests.functional.requestscope;\n+\n+import javax.enterprise.context.RequestScoped;\n+import javax.inject.Inject;\n+\n+@RequestScoped\n+@TestQualifier\n+public class RequestTestQualifier {\n+\n+    @Inject\n+    TenantContext tenantContext;\n+\n+    public String test() throws Exception {\n+        String tenantId = tenantContext.getTenantId();\n+        System.out.println(\"Tenant Context: \" + tenantId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2484a57c54e9fe50d31e7623bacab89fcac9ef69"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 336, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}