{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MTYyNzM2", "number": 1410, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzoxNzowNFrODhEKiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzoxNzowNFrODhEKiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1OTk3ODMzOnYy", "diffSide": "RIGHT", "path": "common/reactive/src/test/java/io/helidon/common/reactive/SingleTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzoxNzowNFrOFrnpSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMTozNzowNFrOFsQGVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI4MjYzMg==", "bodyText": "Although not verified by the TCK, ignoring non-positive request amounts after cancellation can hide subtle bugs in operators.", "url": "https://github.com/oracle/helidon/pull/1410#discussion_r381282632", "createdAt": "2020-02-19T13:17:04Z", "author": {"login": "akarnokd"}, "path": "common/reactive/src/test/java/io/helidon/common/reactive/SingleTest.java", "diffHunk": "@@ -88,7 +88,7 @@ public void onSubscribe(Subscription subscription) {\n         };\n         Single.<String>just(\"foo\").subscribe(subscriber);\n         assertThat(subscriber.isComplete(), is(equalTo(false)));\n-        assertThat(subscriber.getLastError(), is(nullValue()));\n+        assertThat(subscriber.getLastError(), instanceOf(IllegalArgumentException.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "145559ee1a76d03d8236fdcad6a5239adeffeb11"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk0NTQyOQ==", "bodyText": "Nice thx!", "url": "https://github.com/oracle/helidon/pull/1410#discussion_r381945429", "createdAt": "2020-02-20T11:37:04Z", "author": {"login": "danielkec"}, "path": "common/reactive/src/test/java/io/helidon/common/reactive/SingleTest.java", "diffHunk": "@@ -88,7 +88,7 @@ public void onSubscribe(Subscription subscription) {\n         };\n         Single.<String>just(\"foo\").subscribe(subscriber);\n         assertThat(subscriber.isComplete(), is(equalTo(false)));\n-        assertThat(subscriber.getLastError(), is(nullValue()));\n+        assertThat(subscriber.getLastError(), instanceOf(IllegalArgumentException.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI4MjYzMg=="}, "originalCommit": {"oid": "145559ee1a76d03d8236fdcad6a5239adeffeb11"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 239, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}