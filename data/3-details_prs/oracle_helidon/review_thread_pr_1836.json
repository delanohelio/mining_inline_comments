{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNzA3NDQ5", "number": 1836, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjo0NzowMFrOD-MtBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjo0OTo1OVrOD-Mx7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTQ2NDM5OnYy", "diffSide": "RIGHT", "path": "grpc/core/src/main/java/io/helidon/grpc/core/JsonbMarshaller.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjo0NzowMFrOGYJ0Yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo0OTo0MlrOGYMrFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk3OTg3NA==", "bodyText": "Is the usage of public constructor for a marshaller a standard?\nIf not, please change to create() factory method.", "url": "https://github.com/oracle/helidon/pull/1836#discussion_r427979874", "createdAt": "2020-05-20T12:47:00Z", "author": {"login": "tomas-langer"}, "path": "grpc/core/src/main/java/io/helidon/grpc/core/JsonbMarshaller.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.helidon.grpc.core;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Named;\n+import javax.json.bind.Jsonb;\n+import javax.json.bind.JsonbBuilder;\n+\n+import io.grpc.MethodDescriptor;\n+\n+/**\n+ * An implementation of a gRPC {@link MethodDescriptor.Marshaller} that\n+ * uses JSONB for serialization.\n+ *\n+ * @param <T>  the type of value to be marshalled\n+ */\n+public class JsonbMarshaller<T>\n+        implements MethodDescriptor.Marshaller<T> {\n+\n+    private static final Jsonb JSONB = JsonbBuilder.create();\n+\n+    private final Class<T> clazz;\n+\n+    /**\n+     * Construct {@code JsonbMarshaller} instance.\n+     *\n+     * @param clazz  the type of object to marshall\n+     */\n+    public JsonbMarshaller(Class<T> clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cfdf0d0d1e72dd5fc18f3675d7116855b47c5d"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyNjY0Ng==", "bodyText": "I made it package private instead", "url": "https://github.com/oracle/helidon/pull/1836#discussion_r428026646", "createdAt": "2020-05-20T13:49:42Z", "author": {"login": "aseovic"}, "path": "grpc/core/src/main/java/io/helidon/grpc/core/JsonbMarshaller.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.helidon.grpc.core;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Named;\n+import javax.json.bind.Jsonb;\n+import javax.json.bind.JsonbBuilder;\n+\n+import io.grpc.MethodDescriptor;\n+\n+/**\n+ * An implementation of a gRPC {@link MethodDescriptor.Marshaller} that\n+ * uses JSONB for serialization.\n+ *\n+ * @param <T>  the type of value to be marshalled\n+ */\n+public class JsonbMarshaller<T>\n+        implements MethodDescriptor.Marshaller<T> {\n+\n+    private static final Jsonb JSONB = JsonbBuilder.create();\n+\n+    private final Class<T> clazz;\n+\n+    /**\n+     * Construct {@code JsonbMarshaller} instance.\n+     *\n+     * @param clazz  the type of object to marshall\n+     */\n+    public JsonbMarshaller(Class<T> clazz) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk3OTg3NA=="}, "originalCommit": {"oid": "66cfdf0d0d1e72dd5fc18f3675d7116855b47c5d"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTQ2NzQwOnYy", "diffSide": "RIGHT", "path": "grpc/core/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjo0Nzo0MlrOGYJ2KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjo0Nzo0MlrOGYJ2KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk4MDMyOA==", "bodyText": "This dependency should never be in SE. Please change it to provided scope.", "url": "https://github.com/oracle/helidon/pull/1836#discussion_r427980328", "createdAt": "2020-05-20T12:47:42Z", "author": {"login": "tomas-langer"}, "path": "grpc/core/pom.xml", "diffHunk": "@@ -116,6 +116,14 @@\n             <groupId>jakarta.annotation</groupId>\n             <artifactId>jakarta.annotation-api</artifactId>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cfdf0d0d1e72dd5fc18f3675d7116855b47c5d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTQ3Njk1OnYy", "diffSide": "RIGHT", "path": "grpc/core/src/main/java/io/helidon/grpc/core/JsonbMarshaller.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjo0OTo1OVrOGYJ79w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1MToyOFrOGYMw-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk4MTgxNQ==", "bodyText": "The name Supplier conflicts with JDK's supplier. I think this should be named differently.", "url": "https://github.com/oracle/helidon/pull/1836#discussion_r427981815", "createdAt": "2020-05-20T12:49:59Z", "author": {"login": "tomas-langer"}, "path": "grpc/core/src/main/java/io/helidon/grpc/core/JsonbMarshaller.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.helidon.grpc.core;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Named;\n+import javax.json.bind.Jsonb;\n+import javax.json.bind.JsonbBuilder;\n+\n+import io.grpc.MethodDescriptor;\n+\n+/**\n+ * An implementation of a gRPC {@link MethodDescriptor.Marshaller} that\n+ * uses JSONB for serialization.\n+ *\n+ * @param <T>  the type of value to be marshalled\n+ */\n+public class JsonbMarshaller<T>\n+        implements MethodDescriptor.Marshaller<T> {\n+\n+    private static final Jsonb JSONB = JsonbBuilder.create();\n+\n+    private final Class<T> clazz;\n+\n+    /**\n+     * Construct {@code JsonbMarshaller} instance.\n+     *\n+     * @param clazz  the type of object to marshall\n+     */\n+    public JsonbMarshaller(Class<T> clazz) {\n+        this.clazz = clazz;\n+    }\n+\n+    @Override\n+    public InputStream stream(T obj) {\n+        return new ByteArrayInputStream(JSONB.toJson(obj).getBytes(StandardCharsets.UTF_8));\n+    }\n+\n+    @Override\n+    public T parse(InputStream in) {\n+        return JSONB.fromJson(in, clazz);\n+    }\n+\n+    /**\n+     * A {@link MarshallerSupplier} implementation that supplies\n+     * instances of {@link JsonbMarshaller}.\n+     */\n+    @Named(\"jsonb\")\n+    @ApplicationScoped\n+    public static class Supplier implements MarshallerSupplier {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66cfdf0d0d1e72dd5fc18f3675d7116855b47c5d"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyODE1NA==", "bodyText": "It's an inner class, it's never used directly (only via ServiceLoader), and we already have a precedent in JavaMarshaller.Supplier, so it's probably best to leave it as is. Nobody will ever import it...", "url": "https://github.com/oracle/helidon/pull/1836#discussion_r428028154", "createdAt": "2020-05-20T13:51:28Z", "author": {"login": "aseovic"}, "path": "grpc/core/src/main/java/io/helidon/grpc/core/JsonbMarshaller.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.helidon.grpc.core;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.InputStream;\n+import java.nio.charset.StandardCharsets;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Named;\n+import javax.json.bind.Jsonb;\n+import javax.json.bind.JsonbBuilder;\n+\n+import io.grpc.MethodDescriptor;\n+\n+/**\n+ * An implementation of a gRPC {@link MethodDescriptor.Marshaller} that\n+ * uses JSONB for serialization.\n+ *\n+ * @param <T>  the type of value to be marshalled\n+ */\n+public class JsonbMarshaller<T>\n+        implements MethodDescriptor.Marshaller<T> {\n+\n+    private static final Jsonb JSONB = JsonbBuilder.create();\n+\n+    private final Class<T> clazz;\n+\n+    /**\n+     * Construct {@code JsonbMarshaller} instance.\n+     *\n+     * @param clazz  the type of object to marshall\n+     */\n+    public JsonbMarshaller(Class<T> clazz) {\n+        this.clazz = clazz;\n+    }\n+\n+    @Override\n+    public InputStream stream(T obj) {\n+        return new ByteArrayInputStream(JSONB.toJson(obj).getBytes(StandardCharsets.UTF_8));\n+    }\n+\n+    @Override\n+    public T parse(InputStream in) {\n+        return JSONB.fromJson(in, clazz);\n+    }\n+\n+    /**\n+     * A {@link MarshallerSupplier} implementation that supplies\n+     * instances of {@link JsonbMarshaller}.\n+     */\n+    @Named(\"jsonb\")\n+    @ApplicationScoped\n+    public static class Supplier implements MarshallerSupplier {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk4MTgxNQ=="}, "originalCommit": {"oid": "66cfdf0d0d1e72dd5fc18f3675d7116855b47c5d"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 569, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}