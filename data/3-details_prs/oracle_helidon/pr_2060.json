{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2ODMwOTQz", "number": 2060, "title": "SE Config can be created from MP Config ", "bodyText": "Environment variables were not honored correctly - now we use MP config as the implementation and we have an SE config implementation fronting it when creating SE config from MP Config.\nResolves #2059", "createdAt": "2020-06-19T00:53:27Z", "url": "https://github.com/oracle/helidon/pull/2060", "merged": true, "mergeCommit": {"oid": "af949542c8abbd4587cd102123ab899ca2638f3e"}, "closed": true, "closedAt": "2020-06-19T14:07:21Z", "author": {"login": "tomas-langer"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcstqwpgFqTQzMzg1MTE3MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsznHbAFqTQzNDEwNTA4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzODUxMTcx", "url": "https://github.com/oracle/helidon/pull/2060#pullrequestreview-433851171", "createdAt": "2020-06-19T07:11:11Z", "commit": {"oid": "968aa6d58241ed134975b23bfd72dcc82dbf31dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzoxMToxMVrOGmKdGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzoxMToxMVrOGmKdGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3MDM2MQ==", "bodyText": "Maybe we could add some disableMutableSources or something similar in the future", "url": "https://github.com/oracle/helidon/pull/2060#discussion_r442670361", "createdAt": "2020-06-19T07:11:11Z", "author": {"login": "danielkec"}, "path": "config/config/src/main/java/io/helidon/config/BuilderImpl.java", "diffHunk": "@@ -605,6 +584,7 @@ private EmptyConfigHolder() {\n                 .disableSystemPropertiesSource()\n                 .disableParserServices()\n                 .disableFilterServices()\n+                .changesExecutor(command -> {})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "968aa6d58241ed134975b23bfd72dcc82dbf31dc"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzODY0MzM3", "url": "https://github.com/oracle/helidon/pull/2060#pullrequestreview-433864337", "createdAt": "2020-06-19T07:35:17Z", "commit": {"oid": "968aa6d58241ed134975b23bfd72dcc82dbf31dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzozNToxN1rOGmLGnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzozNToxN1rOGmLGnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4MDk4OA==", "bodyText": "Can we assert those resolved PATH values equals with System.getenv(\"PATH\")?", "url": "https://github.com/oracle/helidon/pull/2060#discussion_r442680988", "createdAt": "2020-06-19T07:35:17Z", "author": {"login": "danielkec"}, "path": "config/config-mp/src/test/java/io/helidon/config/mp/MpConfigTest.java", "diffHunk": "@@ -274,5 +275,29 @@ public static void reset() {\n             counter.set(0);\n         }\n     }\n+\n+    @Test\n+    void testEnvVar() {\n+        ConfigProviderResolver instance = ConfigProviderResolver.instance();\n+        ClassLoader myCl = Thread.currentThread().getContextClassLoader();\n+        Config current = ConfigProvider.getConfig(myCl);\n+\n+        try {\n+            instance.registerConfig(instance.getBuilder()\n+                                            .withSources(MpConfigSources.environmentVariables())\n+                                            .build(),\n+                                    myCl);\n+            Config myConfig = instance.getConfig(myCl);\n+            // this must not throw an exception - path should be on any environment\n+            // and the MP env var processing should make it available\n+            String path = myConfig.getValue(\"path\", String.class);\n+\n+            io.helidon.config.Config helidonConfig = (io.helidon.config.Config) myConfig;\n+            // should work if we use it as SE as well\n+            helidonConfig.get(\"path\").asString().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "968aa6d58241ed134975b23bfd72dcc82dbf31dc"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzODcyNjQ2", "url": "https://github.com/oracle/helidon/pull/2060#pullrequestreview-433872646", "createdAt": "2020-06-19T07:48:58Z", "commit": {"oid": "968aa6d58241ed134975b23bfd72dcc82dbf31dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzo0ODo1OFrOGmLgRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzo0ODo1OFrOGmLgRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY4NzU1Ng==", "bodyText": "Failing on windows java.util.NoSuchElementException: Property \"path\" is not available in configuration", "url": "https://github.com/oracle/helidon/pull/2060#discussion_r442687556", "createdAt": "2020-06-19T07:48:58Z", "author": {"login": "danielkec"}, "path": "config/config-mp/src/test/java/io/helidon/config/mp/MpConfigTest.java", "diffHunk": "@@ -274,5 +275,29 @@ public static void reset() {\n             counter.set(0);\n         }\n     }\n+\n+    @Test\n+    void testEnvVar() {\n+        ConfigProviderResolver instance = ConfigProviderResolver.instance();\n+        ClassLoader myCl = Thread.currentThread().getContextClassLoader();\n+        Config current = ConfigProvider.getConfig(myCl);\n+\n+        try {\n+            instance.registerConfig(instance.getBuilder()\n+                                            .withSources(MpConfigSources.environmentVariables())\n+                                            .build(),\n+                                    myCl);\n+            Config myConfig = instance.getConfig(myCl);\n+            // this must not throw an exception - path should be on any environment\n+            // and the MP env var processing should make it available\n+            String path = myConfig.getValue(\"path\", String.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "968aa6d58241ed134975b23bfd72dcc82dbf31dc"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzOTA0NjA3", "url": "https://github.com/oracle/helidon/pull/2060#pullrequestreview-433904607", "createdAt": "2020-06-19T08:39:24Z", "commit": {"oid": "968aa6d58241ed134975b23bfd72dcc82dbf31dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwODozOToyNVrOGmNBPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwODozOToyNVrOGmNBPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjcxMjM4MQ==", "bodyText": "io.helidon.config.mp.MpConfigProviderResolver#registerConfig has no defense against null and registered config is stored in io.helidon.config.mp.MpConfigProviderResolver#CONFIGS map with null key, but that Config is not acessible any more because getConfig has defense against null\n    public Config getConfig(ClassLoader loader) {\n        if (null == loader) {\n            loader = ClassLoader.getSystemClassLoader();\n        }", "url": "https://github.com/oracle/helidon/pull/2060#discussion_r442712381", "createdAt": "2020-06-19T08:39:25Z", "author": {"login": "danielkec"}, "path": "microprofile/messaging/src/test/java/io/helidon/microprofile/messaging/AdHocConfigBuilderTest.java", "diffHunk": "@@ -76,6 +132,38 @@ void customValueOverride() {\n         assertThat(c.getValue(TEST_KEY, String.class), is(TEST_TOPIC_CUSTOM));\n     }\n \n+    @Test\n+    void putAllTestMp() {\n+        Map<String, String> propMap = Map.of(\n+                \"mp.messaging.outcoming.test-channel.\" + TEST_KEY, TEST_TOPIC_CONFIG\n+        );\n+\n+        Map<String, String> propMap2 = Map.of(\n+                \"mp.messaging.connector.\" + TEST_CONNECTOR + \".\" + ADDITION_ATTR_1, ADDITION_ATTR_1_VALUE,\n+                \"mp.messaging.connector.\" + TEST_CONNECTOR + \".\" + ADDITION_ATTR_2, ADDITION_ATTR_2_VALUE\n+        );\n+\n+        resolver.registerConfig(resolver.getBuilder()\n+                                        .withSources(MpConfigSources.create(propMap))\n+                                        .build(), null);\n+\n+        Config config = (Config) resolver.getConfig();\n+\n+        resolver.registerConfig(resolver.getBuilder()\n+                                        .withSources(MpConfigSources.create(propMap2))\n+                                        .build(), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "968aa6d58241ed134975b23bfd72dcc82dbf31dc"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzOTQzODc3", "url": "https://github.com/oracle/helidon/pull/2060#pullrequestreview-433943877", "createdAt": "2020-06-19T09:46:15Z", "commit": {"oid": "eed6a3fcb399b27b8538e47ffe5a571656b62315"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e23c4774f4f50fddf52ee63667a924cf8598329", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/7e23c4774f4f50fddf52ee63667a924cf8598329", "committedDate": "2020-06-19T11:53:29Z", "message": "MP to SE config now works including environment variables.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0f4b762e1c1e8a2f8d3091714571d7e2e884372", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/f0f4b762e1c1e8a2f8d3091714571d7e2e884372", "committedDate": "2020-06-19T11:53:29Z", "message": "Unused fields removed\nEmpty config now does not create an executor service.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4694753afdcf5e98079760e9251e7a95611e36e0", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/4694753afdcf5e98079760e9251e7a95611e36e0", "committedDate": "2020-06-19T11:53:29Z", "message": "Only mapper services enabled for mapper config.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69a6198acb7f75a027334f3fc9e30ddb027760f7", "author": {"user": {"login": "romain-grecourt", "name": "Romain Grecourt"}}, "url": "https://github.com/oracle/helidon/commit/69a6198acb7f75a027334f3fc9e30ddb027760f7", "committedDate": "2020-06-19T11:53:29Z", "message": "Fix spotbugs error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1ef6b050c556bb626493f65d6c1fbc08ff83128", "author": {"user": {"login": "romain-grecourt", "name": "Romain Grecourt"}}, "url": "https://github.com/oracle/helidon/commit/d1ef6b050c556bb626493f65d6c1fbc08ff83128", "committedDate": "2020-06-19T11:53:29Z", "message": "Fix imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bec5ec6739b05a1f04a699b497e612998efd990a", "author": {"user": {"login": "romain-grecourt", "name": "Romain Grecourt"}}, "url": "https://github.com/oracle/helidon/commit/bec5ec6739b05a1f04a699b497e612998efd990a", "committedDate": "2020-06-19T11:53:29Z", "message": "Fix import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5b20644f9c7fe17e3a5fa8b8906a8d42ba6034a", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/a5b20644f9c7fe17e3a5fa8b8906a8d42ba6034a", "committedDate": "2020-06-19T11:53:29Z", "message": "Using the same classloader when null is sent in MP config.\nAdded env var test.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eed6a3fcb399b27b8538e47ffe5a571656b62315", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/eed6a3fcb399b27b8538e47ffe5a571656b62315", "committedDate": "2020-06-19T09:21:59Z", "message": "Using the same classloader when null is sent in MP config.\nAdded env var test.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}, "afterCommit": {"oid": "a5b20644f9c7fe17e3a5fa8b8906a8d42ba6034a", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/a5b20644f9c7fe17e3a5fa8b8906a8d42ba6034a", "committedDate": "2020-06-19T11:53:29Z", "message": "Using the same classloader when null is sent in MP config.\nAdded env var test.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDUyMzI4", "url": "https://github.com/oracle/helidon/pull/2060#pullrequestreview-434052328", "createdAt": "2020-06-19T12:53:08Z", "commit": {"oid": "a5b20644f9c7fe17e3a5fa8b8906a8d42ba6034a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cf55b91c963de7dabb45611c9ca004c5ea08b71", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/3cf55b91c963de7dabb45611c9ca004c5ea08b71", "committedDate": "2020-06-19T13:05:18Z", "message": "Ensure the reference config uses its own configuration (intermitent failure fix)\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTA1MDg4", "url": "https://github.com/oracle/helidon/pull/2060#pullrequestreview-434105088", "createdAt": "2020-06-19T14:06:38Z", "commit": {"oid": "3cf55b91c963de7dabb45611c9ca004c5ea08b71"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 598, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}