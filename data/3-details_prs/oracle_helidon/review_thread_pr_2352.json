{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1MTgyMTkz", "number": 2352, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo0ODoyOFrOEmtjcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjoyMDoyM1rOEpG3-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDI3Njk3OnYy", "diffSide": "RIGHT", "path": "microprofile/messaging/core/src/main/java/io/helidon/microprofile/messaging/UniversalChannel.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo0ODoyOFrOHW5zHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxOToyNDoxNFrOHZMb1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3NzY5Mg==", "bodyText": "Is there a possibility isUp is called before connect? If so, this would return null and most likely cause a NPE", "url": "https://github.com/oracle/helidon/pull/2352#discussion_r493777692", "createdAt": "2020-09-23T17:48:28Z", "author": {"login": "tomas-langer"}, "path": "microprofile/messaging/core/src/main/java/io/helidon/microprofile/messaging/UniversalChannel.java", "diffHunk": "@@ -67,6 +69,10 @@ void setOutgoing(OutgoingMethod outgoingMethod) {\n         this.outgoingMethod = outgoingMethod;\n     }\n \n+    AtomicBoolean isUp() {\n+        return up;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1a921579604dee3a3dd302c7bbe5f69feb51e0d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3ODQ5Ng==", "bodyText": "Also up is not volatile. Even if the field is AtomicBoolean, access to it must be correctly synchronized if the field may be created in a different thread.\nMaybe the AtomicBoolean should be final and true and sent to Probe.connect as a parameter", "url": "https://github.com/oracle/helidon/pull/2352#discussion_r493778496", "createdAt": "2020-09-23T17:49:41Z", "author": {"login": "tomas-langer"}, "path": "microprofile/messaging/core/src/main/java/io/helidon/microprofile/messaging/UniversalChannel.java", "diffHunk": "@@ -67,6 +69,10 @@ void setOutgoing(OutgoingMethod outgoingMethod) {\n         this.outgoingMethod = outgoingMethod;\n     }\n \n+    AtomicBoolean isUp() {\n+        return up;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3NzY5Mg=="}, "originalCommit": {"oid": "a1a921579604dee3a3dd302c7bbe5f69feb51e0d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE4MDE4Mw==", "bodyText": "oj, thx!", "url": "https://github.com/oracle/helidon/pull/2352#discussion_r496180183", "createdAt": "2020-09-28T19:24:14Z", "author": {"login": "danielkec"}, "path": "microprofile/messaging/core/src/main/java/io/helidon/microprofile/messaging/UniversalChannel.java", "diffHunk": "@@ -67,6 +69,10 @@ void setOutgoing(OutgoingMethod outgoingMethod) {\n         this.outgoingMethod = outgoingMethod;\n     }\n \n+    AtomicBoolean isUp() {\n+        return up;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc3NzY5Mg=="}, "originalCommit": {"oid": "a1a921579604dee3a3dd302c7bbe5f69feb51e0d"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTM5NzA0OnYy", "diffSide": "RIGHT", "path": "microprofile/messaging/core/src/main/java/io/helidon/microprofile/messaging/UniversalChannel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjoyMDoyM1rOHaldkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNjo0NToxOVrOHamcPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYzODgwMw==", "bodyText": "This is leaking internal state - this method may just return a boolean", "url": "https://github.com/oracle/helidon/pull/2352#discussion_r497638803", "createdAt": "2020-09-30T16:20:23Z", "author": {"login": "tomas-langer"}, "path": "microprofile/messaging/core/src/main/java/io/helidon/microprofile/messaging/UniversalChannel.java", "diffHunk": "@@ -69,8 +70,12 @@ void setOutgoing(OutgoingMethod outgoingMethod) {\n         this.outgoingMethod = outgoingMethod;\n     }\n \n-    AtomicBoolean isUp() {\n-        return up;\n+    AtomicBoolean isLive() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ffe728ab5e48454e6aa7b015cfdf724dee337cf"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY1NDg0NQ==", "bodyText": "package private, but true, I've got changes in here from another PR, will fix it there", "url": "https://github.com/oracle/helidon/pull/2352#discussion_r497654845", "createdAt": "2020-09-30T16:45:19Z", "author": {"login": "danielkec"}, "path": "microprofile/messaging/core/src/main/java/io/helidon/microprofile/messaging/UniversalChannel.java", "diffHunk": "@@ -69,8 +70,12 @@ void setOutgoing(OutgoingMethod outgoingMethod) {\n         this.outgoingMethod = outgoingMethod;\n     }\n \n-    AtomicBoolean isUp() {\n-        return up;\n+    AtomicBoolean isLive() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYzODgwMw=="}, "originalCommit": {"oid": "0ffe728ab5e48454e6aa7b015cfdf724dee337cf"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 402, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}