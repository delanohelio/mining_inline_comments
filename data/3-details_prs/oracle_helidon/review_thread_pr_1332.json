{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NzMyMTc1", "number": 1332, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTowMDo1M1rODbt7sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTowMDo1M1rODbt7sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzkwNzA1OnYy", "diffSide": "RIGHT", "path": "config/config/src/main/java/io/helidon/config/UrlConfigSource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMTowMDo1M1rOFjXWYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQyMjo0MjoxMVrOFjaFYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYyNzA0Mg==", "bodyText": "Very minor point. The probeContentType methods in the other classes return Optional<String>. This one returns String and uses orElse. After a quick look I did not see any null checks on the returned String from this method. Just for consistency would it make sense (without excessive disruption of the other sites which invoke UrlConfigSource#probeContentType) to  return the Optional just as probeContentType in the other classes do?", "url": "https://github.com/oracle/helidon/pull/1332#discussion_r372627042", "createdAt": "2020-01-29T21:00:53Z", "author": {"login": "tjquinno"}, "path": "config/config/src/main/java/io/helidon/config/UrlConfigSource.java", "diffHunk": "@@ -162,25 +160,8 @@ private String mediaType(String responseMediaType) throws URISyntaxException {\n         return mediaType;\n     }\n \n-    private String probeContentType() throws URISyntaxException {\n-        URI uri = url.toURI();\n-        Path path;\n-        switch (uri.getScheme()) {\n-            case \"jar\":\n-                String relativePath = uri.getSchemeSpecificPart();\n-                int idx = relativePath.indexOf(\"!\");\n-                if (idx > 0 && idx < relativePath.length()) {\n-                    relativePath = relativePath.substring(idx + 1);\n-                }\n-                path = Paths.get(relativePath);\n-                break;\n-            case \"file\":\n-                path = Paths.get(uri);\n-                break;\n-            default:\n-                path = Paths.get(url.getPath());\n-        }\n-        return ConfigHelper.detectContentType(path);\n+    private String probeContentType() {\n+        return MediaTypes.detectType(url).orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53bfac9cfc4ab8c1261bb0918a1851a2e8de4481"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY2OTk0OQ==", "bodyText": "I wanted to simply replace the existing usage. In other classes, Optional was removed. This class just returned the value (which could have been null with previous implementation).\nI will have a look if this is not a too complicated change to do", "url": "https://github.com/oracle/helidon/pull/1332#discussion_r372669949", "createdAt": "2020-01-29T22:37:07Z", "author": {"login": "tomas-langer"}, "path": "config/config/src/main/java/io/helidon/config/UrlConfigSource.java", "diffHunk": "@@ -162,25 +160,8 @@ private String mediaType(String responseMediaType) throws URISyntaxException {\n         return mediaType;\n     }\n \n-    private String probeContentType() throws URISyntaxException {\n-        URI uri = url.toURI();\n-        Path path;\n-        switch (uri.getScheme()) {\n-            case \"jar\":\n-                String relativePath = uri.getSchemeSpecificPart();\n-                int idx = relativePath.indexOf(\"!\");\n-                if (idx > 0 && idx < relativePath.length()) {\n-                    relativePath = relativePath.substring(idx + 1);\n-                }\n-                path = Paths.get(relativePath);\n-                break;\n-            case \"file\":\n-                path = Paths.get(uri);\n-                break;\n-            default:\n-                path = Paths.get(url.getPath());\n-        }\n-        return ConfigHelper.detectContentType(path);\n+    private String probeContentType() {\n+        return MediaTypes.detectType(url).orElse(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYyNzA0Mg=="}, "originalCommit": {"oid": "53bfac9cfc4ab8c1261bb0918a1851a2e8de4481"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY3MDk5NA==", "bodyText": "This seems to be a deeper problem in the implementation, as ConfigParser.Content.mediaType() is allowed to return null. I will create a follow up issue to clean this up", "url": "https://github.com/oracle/helidon/pull/1332#discussion_r372670994", "createdAt": "2020-01-29T22:40:00Z", "author": {"login": "tomas-langer"}, "path": "config/config/src/main/java/io/helidon/config/UrlConfigSource.java", "diffHunk": "@@ -162,25 +160,8 @@ private String mediaType(String responseMediaType) throws URISyntaxException {\n         return mediaType;\n     }\n \n-    private String probeContentType() throws URISyntaxException {\n-        URI uri = url.toURI();\n-        Path path;\n-        switch (uri.getScheme()) {\n-            case \"jar\":\n-                String relativePath = uri.getSchemeSpecificPart();\n-                int idx = relativePath.indexOf(\"!\");\n-                if (idx > 0 && idx < relativePath.length()) {\n-                    relativePath = relativePath.substring(idx + 1);\n-                }\n-                path = Paths.get(relativePath);\n-                break;\n-            case \"file\":\n-                path = Paths.get(uri);\n-                break;\n-            default:\n-                path = Paths.get(url.getPath());\n-        }\n-        return ConfigHelper.detectContentType(path);\n+    private String probeContentType() {\n+        return MediaTypes.detectType(url).orElse(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYyNzA0Mg=="}, "originalCommit": {"oid": "53bfac9cfc4ab8c1261bb0918a1851a2e8de4481"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjY3MTg0MA==", "bodyText": "Follow up: #1333", "url": "https://github.com/oracle/helidon/pull/1332#discussion_r372671840", "createdAt": "2020-01-29T22:42:11Z", "author": {"login": "tomas-langer"}, "path": "config/config/src/main/java/io/helidon/config/UrlConfigSource.java", "diffHunk": "@@ -162,25 +160,8 @@ private String mediaType(String responseMediaType) throws URISyntaxException {\n         return mediaType;\n     }\n \n-    private String probeContentType() throws URISyntaxException {\n-        URI uri = url.toURI();\n-        Path path;\n-        switch (uri.getScheme()) {\n-            case \"jar\":\n-                String relativePath = uri.getSchemeSpecificPart();\n-                int idx = relativePath.indexOf(\"!\");\n-                if (idx > 0 && idx < relativePath.length()) {\n-                    relativePath = relativePath.substring(idx + 1);\n-                }\n-                path = Paths.get(relativePath);\n-                break;\n-            case \"file\":\n-                path = Paths.get(uri);\n-                break;\n-            default:\n-                path = Paths.get(url.getPath());\n-        }\n-        return ConfigHelper.detectContentType(path);\n+    private String probeContentType() {\n+        return MediaTypes.detectType(url).orElse(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjYyNzA0Mg=="}, "originalCommit": {"oid": "53bfac9cfc4ab8c1261bb0918a1851a2e8de4481"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 314, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}