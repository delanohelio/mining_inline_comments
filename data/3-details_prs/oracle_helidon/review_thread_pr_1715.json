{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMzM5NDU0", "number": 1715, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNToyMjoyMlrOD4qqwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToxMjoxNlrOD5IIAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzQ1OTIxOnYy", "diffSide": "RIGHT", "path": "examples/microprofile/hello-world-explicit/src/main/java/io/helidon/microprofile/example/helloworld/explicit/Main.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNToyMjoyMlrOGPj8_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzo1MTo0NlrOGQLYyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDg3Ng==", "bodyText": "The message is wrong - this uses the MP Config, not Helidon config", "url": "https://github.com/oracle/helidon/pull/1715#discussion_r418970876", "createdAt": "2020-05-02T15:22:22Z", "author": {"login": "tomas-langer"}, "path": "examples/microprofile/hello-world-explicit/src/main/java/io/helidon/microprofile/example/helloworld/explicit/Main.java", "diffHunk": "@@ -34,7 +34,6 @@ private Main() {\n      */\n     public static void main(String[] args) {\n         Server server = Server.builder()\n-                .addApplication(HelloWorldApplication.class)\n                 // using a customized helidon config instance (in this case the default...)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6786dcdf7c271d9a4d3b2f48f74146f1516575"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxNjk3MQ==", "bodyText": "Fixed", "url": "https://github.com/oracle/helidon/pull/1715#discussion_r419616971", "createdAt": "2020-05-04T17:51:46Z", "author": {"login": "barchetta"}, "path": "examples/microprofile/hello-world-explicit/src/main/java/io/helidon/microprofile/example/helloworld/explicit/Main.java", "diffHunk": "@@ -34,7 +34,6 @@ private Main() {\n      */\n     public static void main(String[] args) {\n         Server server = Server.builder()\n-                .addApplication(HelloWorldApplication.class)\n                 // using a customized helidon config instance (in this case the default...)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDg3Ng=="}, "originalCommit": {"oid": "3f6786dcdf7c271d9a4d3b2f48f74146f1516575"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzQ1OTg1OnYy", "diffSide": "RIGHT", "path": "examples/microprofile/mp1_1-static-content/src/main/java/io/helidon/microprofile/example/staticc/Main.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNToyMzoyMVrOGPj9TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzo1MzozNlrOGQLdMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDk1Nw==", "bodyText": "This main class seems to be useless.", "url": "https://github.com/oracle/helidon/pull/1715#discussion_r418970957", "createdAt": "2020-05-02T15:23:21Z", "author": {"login": "tomas-langer"}, "path": "examples/microprofile/mp1_1-static-content/src/main/java/io/helidon/microprofile/example/staticc/Main.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020 Oracle and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f6786dcdf7c271d9a4d3b2f48f74146f1516575"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDk5NA==", "bodyText": "Also type in package name", "url": "https://github.com/oracle/helidon/pull/1715#discussion_r418970994", "createdAt": "2020-05-02T15:23:37Z", "author": {"login": "tomas-langer"}, "path": "examples/microprofile/mp1_1-static-content/src/main/java/io/helidon/microprofile/example/staticc/Main.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020 Oracle and/or its affiliates.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDk1Nw=="}, "originalCommit": {"oid": "3f6786dcdf7c271d9a4d3b2f48f74146f1516575"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTYxODA5Nw==", "bodyText": "staticc? I think that is short for static content. I will leave this as-is for now.", "url": "https://github.com/oracle/helidon/pull/1715#discussion_r419618097", "createdAt": "2020-05-04T17:53:36Z", "author": {"login": "barchetta"}, "path": "examples/microprofile/mp1_1-static-content/src/main/java/io/helidon/microprofile/example/staticc/Main.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.\n+ * Copyright (c) 2018, 2020 Oracle and/or its affiliates.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MDk1Nw=="}, "originalCommit": {"oid": "3f6786dcdf7c271d9a4d3b2f48f74146f1516575"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjI4NTQ3OnYy", "diffSide": "RIGHT", "path": "examples/webserver/basics/src/main/java/io/helidon/webserver/examples/basics/NameReader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToxMjoxNlrOGQOWKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxOToxMjoxNlrOGQOWKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY2NTQ0OQ==", "bodyText": "That's a lot of empty lines :)", "url": "https://github.com/oracle/helidon/pull/1715#discussion_r419665449", "createdAt": "2020-05-04T19:12:16Z", "author": {"login": "romain-grecourt"}, "path": "examples/webserver/basics/src/main/java/io/helidon/webserver/examples/basics/NameReader.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.webserver.examples.basics;\n+\n+import java.util.concurrent.Flow;\n+\n+import io.helidon.common.GenericType;\n+import io.helidon.common.http.DataChunk;\n+import io.helidon.common.http.MediaType;\n+import io.helidon.common.reactive.Single;\n+import io.helidon.media.common.ContentReaders;\n+import io.helidon.media.common.MessageBodyReader;\n+import io.helidon.media.common.MessageBodyReaderContext;\n+\n+public class NameReader implements MessageBodyReader<Name> {\n+\n+    private NameReader() {\n+    }\n+\n+    static NameReader create() {\n+        return new NameReader();\n+    }\n+\n+    @Override\n+    public <U extends Name> Single<U> read(Flow.Publisher<DataChunk> publisher, GenericType<U> type,\n+                                           MessageBodyReaderContext context) {\n+        return (Single<U>) ContentReaders.readString(publisher, context.charset()).map(Name::new);\n+    }\n+\n+    @Override\n+    public boolean accept(GenericType<?> type, MessageBodyReaderContext context) {\n+        return context.contentType()\n+                .map(ct -> MediaType.parse(\"application/name\").equals(ct))\n+                .map(acceptable -> acceptable && Name.class.isAssignableFrom(type.rawType()))\n+                .orElse(false);\n+    }\n+}\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3de919442311720ea14e3e3f486a8c1323136b60"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 657, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}