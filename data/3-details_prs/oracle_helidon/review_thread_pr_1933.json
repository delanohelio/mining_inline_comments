{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MDYyMzQ5", "number": 1933, "reviewThreads": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyMTozOVrOECuCOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozNDoyNlrOEEzaaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjg2ODQyOnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyMTozOVrOGfWbEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzo0NTozMFrOGfvHuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNjQxNg==", "bodyText": "Is compile scope right?  I would have thought that Helidon's runtime would already bring this along.  Maybe not; worth a check I guess.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435526416", "createdAt": "2020-06-04T20:21:39Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,181 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n+                             http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+        <relativePath>../../../../applications/mp/pom.xml</relativePath>\n+    </parent>\n+    <groupId>io.helidon.examples.integrations.cdi</groupId>\n+    <artifactId>helidon-integrations-examples-pokemons</artifactId>\n+    <name>Helidon CDI Extensions Examples Pokemons JPA</name>\n+\n+    <dependencies>\n+        <!-- Test-scoped dependencies. -->\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.hamcrest</groupId>\n+            <artifactId>hamcrest-all</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- Runtime-scoped dependencies. -->\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jpa</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss</groupId>\n+            <artifactId>jandex</artifactId>\n+            <scope>runtime</scope>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.server</groupId>\n+            <artifactId>helidon-microprofile-server</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.media</groupId>\n+            <artifactId>jersey-media-json-binding</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.config</groupId>\n+            <artifactId>helidon-microprofile-config</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n+        <!-- Provided-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.persistence</groupId>\n+            <artifactId>jakarta.persistence-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.transaction</groupId>\n+            <artifactId>jakarta.transaction-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <!-- Compile-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.annotation</groupId>\n+            <artifactId>jakarta.annotation-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NDU0MQ==", "bodyText": "You cannot use provided scope, as that would practically exclude this library from runtime - we are not an application server that has libraries \"pre-installed\" - all our libraries are brought in by the application's pom file.\nThe user's pom always \"wins\" - so if you need a library for compilation, it must be in compile scope, and never in provided", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435784541", "createdAt": "2020-06-05T08:57:10Z", "author": {"login": "tomas-langer"}, "path": "examples/integrations/cdi/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,181 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n+                             http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+        <relativePath>../../../../applications/mp/pom.xml</relativePath>\n+    </parent>\n+    <groupId>io.helidon.examples.integrations.cdi</groupId>\n+    <artifactId>helidon-integrations-examples-pokemons</artifactId>\n+    <name>Helidon CDI Extensions Examples Pokemons JPA</name>\n+\n+    <dependencies>\n+        <!-- Test-scoped dependencies. -->\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.hamcrest</groupId>\n+            <artifactId>hamcrest-all</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- Runtime-scoped dependencies. -->\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jpa</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss</groupId>\n+            <artifactId>jandex</artifactId>\n+            <scope>runtime</scope>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.server</groupId>\n+            <artifactId>helidon-microprofile-server</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.media</groupId>\n+            <artifactId>jersey-media-json-binding</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.config</groupId>\n+            <artifactId>helidon-microprofile-config</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n+        <!-- Provided-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.persistence</groupId>\n+            <artifactId>jakarta.persistence-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.transaction</groupId>\n+            <artifactId>jakarta.transaction-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <!-- Compile-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.annotation</groupId>\n+            <artifactId>jakarta.annotation-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNjQxNg=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzMTA2Nw==", "bodyText": "The pom.xml is identical (copied) from helidon-integrations-examples-jpa which I though you wrote, but maybe somebody else updated.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435931067", "createdAt": "2020-06-05T13:45:30Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,181 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n+                             http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+        <relativePath>../../../../applications/mp/pom.xml</relativePath>\n+    </parent>\n+    <groupId>io.helidon.examples.integrations.cdi</groupId>\n+    <artifactId>helidon-integrations-examples-pokemons</artifactId>\n+    <name>Helidon CDI Extensions Examples Pokemons JPA</name>\n+\n+    <dependencies>\n+        <!-- Test-scoped dependencies. -->\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.hamcrest</groupId>\n+            <artifactId>hamcrest-all</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- Runtime-scoped dependencies. -->\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jpa</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss</groupId>\n+            <artifactId>jandex</artifactId>\n+            <scope>runtime</scope>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.server</groupId>\n+            <artifactId>helidon-microprofile-server</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.media</groupId>\n+            <artifactId>jersey-media-json-binding</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.config</groupId>\n+            <artifactId>helidon-microprofile-config</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n+        <!-- Provided-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.persistence</groupId>\n+            <artifactId>jakarta.persistence-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.transaction</groupId>\n+            <artifactId>jakarta.transaction-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <!-- Compile-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.annotation</groupId>\n+            <artifactId>jakarta.annotation-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNjQxNg=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjg2OTAzOnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyMTo0OVrOGfWbcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyMTo0OVrOGfWbcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNjUxMw==", "bodyText": "Same as above", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435526513", "createdAt": "2020-06-04T20:21:49Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,181 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n+                             http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+        <relativePath>../../../../applications/mp/pom.xml</relativePath>\n+    </parent>\n+    <groupId>io.helidon.examples.integrations.cdi</groupId>\n+    <artifactId>helidon-integrations-examples-pokemons</artifactId>\n+    <name>Helidon CDI Extensions Examples Pokemons JPA</name>\n+\n+    <dependencies>\n+        <!-- Test-scoped dependencies. -->\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.hamcrest</groupId>\n+            <artifactId>hamcrest-all</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- Runtime-scoped dependencies. -->\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jpa</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss</groupId>\n+            <artifactId>jandex</artifactId>\n+            <scope>runtime</scope>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.server</groupId>\n+            <artifactId>helidon-microprofile-server</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.media</groupId>\n+            <artifactId>jersey-media-json-binding</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.config</groupId>\n+            <artifactId>helidon-microprofile-config</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n+        <!-- Provided-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.persistence</groupId>\n+            <artifactId>jakarta.persistence-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.transaction</groupId>\n+            <artifactId>jakarta.transaction-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <!-- Compile-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.annotation</groupId>\n+            <artifactId>jakarta.annotation-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.inject</groupId>\n+            <artifactId>jakarta.inject-api</artifactId>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjg2OTYxOnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyMjowMVrOGfWb0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyMjowMVrOGfWb0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNjYxMQ==", "bodyText": "Same as above", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435526611", "createdAt": "2020-06-04T20:22:01Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,181 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n+                             http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+        <relativePath>../../../../applications/mp/pom.xml</relativePath>\n+    </parent>\n+    <groupId>io.helidon.examples.integrations.cdi</groupId>\n+    <artifactId>helidon-integrations-examples-pokemons</artifactId>\n+    <name>Helidon CDI Extensions Examples Pokemons JPA</name>\n+\n+    <dependencies>\n+        <!-- Test-scoped dependencies. -->\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.hamcrest</groupId>\n+            <artifactId>hamcrest-all</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- Runtime-scoped dependencies. -->\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jpa</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss</groupId>\n+            <artifactId>jandex</artifactId>\n+            <scope>runtime</scope>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.server</groupId>\n+            <artifactId>helidon-microprofile-server</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.media</groupId>\n+            <artifactId>jersey-media-json-binding</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.config</groupId>\n+            <artifactId>helidon-microprofile-config</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n+        <!-- Provided-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.persistence</groupId>\n+            <artifactId>jakarta.persistence-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.transaction</groupId>\n+            <artifactId>jakarta.transaction-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <!-- Compile-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.annotation</groupId>\n+            <artifactId>jakarta.annotation-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.inject</groupId>\n+            <artifactId>jakarta.inject-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.ws.rs</groupId>\n+            <artifactId>jakarta.ws.rs-api</artifactId>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjg3MDgxOnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyMjoyNVrOGfWcog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzo0NjoxOVrOGfvJ2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNjgxOA==", "bodyText": "Same as above; also you've omitted the explicit <scope> element here; any reason?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435526818", "createdAt": "2020-06-04T20:22:25Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,181 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n+                             http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+        <relativePath>../../../../applications/mp/pom.xml</relativePath>\n+    </parent>\n+    <groupId>io.helidon.examples.integrations.cdi</groupId>\n+    <artifactId>helidon-integrations-examples-pokemons</artifactId>\n+    <name>Helidon CDI Extensions Examples Pokemons JPA</name>\n+\n+    <dependencies>\n+        <!-- Test-scoped dependencies. -->\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.hamcrest</groupId>\n+            <artifactId>hamcrest-all</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- Runtime-scoped dependencies. -->\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jpa</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss</groupId>\n+            <artifactId>jandex</artifactId>\n+            <scope>runtime</scope>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.server</groupId>\n+            <artifactId>helidon-microprofile-server</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.media</groupId>\n+            <artifactId>jersey-media-json-binding</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.config</groupId>\n+            <artifactId>helidon-microprofile-config</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n+        <!-- Provided-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.persistence</groupId>\n+            <artifactId>jakarta.persistence-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.transaction</groupId>\n+            <artifactId>jakarta.transaction-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <!-- Compile-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.annotation</groupId>\n+            <artifactId>jakarta.annotation-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.inject</groupId>\n+            <artifactId>jakarta.inject-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.ws.rs</groupId>\n+            <artifactId>jakarta.ws.rs-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.json.bind</groupId>\n+            <artifactId>jakarta.json.bind-api</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzMTYwOA==", "bodyText": "See above. I was just using another JPA pom. I could drop all that and use defaults.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435931608", "createdAt": "2020-06-05T13:46:19Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,181 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n+                             http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+        <relativePath>../../../../applications/mp/pom.xml</relativePath>\n+    </parent>\n+    <groupId>io.helidon.examples.integrations.cdi</groupId>\n+    <artifactId>helidon-integrations-examples-pokemons</artifactId>\n+    <name>Helidon CDI Extensions Examples Pokemons JPA</name>\n+\n+    <dependencies>\n+        <!-- Test-scoped dependencies. -->\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.hamcrest</groupId>\n+            <artifactId>hamcrest-all</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- Runtime-scoped dependencies. -->\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jpa</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss</groupId>\n+            <artifactId>jandex</artifactId>\n+            <scope>runtime</scope>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.server</groupId>\n+            <artifactId>helidon-microprofile-server</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.media</groupId>\n+            <artifactId>jersey-media-json-binding</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.config</groupId>\n+            <artifactId>helidon-microprofile-config</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n+        <!-- Provided-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.persistence</groupId>\n+            <artifactId>jakarta.persistence-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.transaction</groupId>\n+            <artifactId>jakarta.transaction-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <!-- Compile-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.annotation</groupId>\n+            <artifactId>jakarta.annotation-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.inject</groupId>\n+            <artifactId>jakarta.inject-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.ws.rs</groupId>\n+            <artifactId>jakarta.ws.rs-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.json.bind</groupId>\n+            <artifactId>jakarta.json.bind-api</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNjgxOA=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjg3NTY2OnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyNDowOVrOGfWf6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzo0Njo0NFrOGfvKzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNzY1OQ==", "bodyText": "Name of the class is PokemonResource.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435527659", "createdAt": "2020-06-04T20:24:09Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NTI4Mw==", "bodyText": "Also such a javadoc is useless. If this is your template, please change it to TODO: Javadoc, to make sure it is reported ;)", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435785283", "createdAt": "2020-06-05T08:58:28Z", "author": {"login": "tomas-langer"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNzY1OQ=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzMTg1Mw==", "bodyText": "Will fix javadocs.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435931853", "createdAt": "2020-06-05T13:46:44Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNzY1OQ=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjg3Njk5OnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyNDo0MFrOGfWgyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzo0OTo1MlrOGfvSEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNzg4MQ==", "bodyText": "Double-checking that you mean for this to be in effectively @Dependent (per-lookup) scope and not, say, @Singleton or @ApplicationScoped.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435527881", "createdAt": "2020-06-04T20:24:40Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzMzcxMw==", "bodyText": "Yeap", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435933713", "createdAt": "2020-06-05T13:49:52Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNzg4MQ=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjg4MTkwOnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyNjoxN1rOGfWj-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDoyNDoyNFrOGfwtgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyODY5OA==", "bodyText": "Not needed, and not used.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435528698", "createdAt": "2020-06-04T20:26:17Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk1NzEyMQ==", "bodyText": "Fixed", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435957121", "createdAt": "2020-06-05T14:24:24Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyODY5OA=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjg4NzE0OnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyODowNFrOGfWnYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDoyNDozM1rOGfwt1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyOTU3MA==", "bodyText": "In the other resource methods, you don't use Response.  (Personally I like using Response for everything.)  Consider picking one way or the other, not mixing them?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435529570", "createdAt": "2020-06-04T20:28:04Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response getPokemons() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk1NzIwNg==", "bodyText": "Fixed.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435957206", "createdAt": "2020-06-05T14:24:33Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response getPokemons() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyOTU3MA=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjg4ODI5OnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyODoyNFrOGfWoGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDoyNDo0NFrOGfwubw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyOTc1Mw==", "bodyText": "Nit: list.isEmpty()", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435529753", "createdAt": "2020-06-04T20:28:24Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response getPokemons() {\n+        List<Pokemon> pokemons =  entityManager.createNamedQuery(\"getPokemons\", Pokemon.class).getResultList();\n+        return Response.ok(new GenericEntity<>(pokemons){}).build();\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonById(@PathParam(\"id\") String id) {\n+        try {\n+            return entityManager.find(Pokemon.class, Integer.valueOf(id));\n+        } catch (IllegalArgumentException e) {\n+            throw new NotFoundException(\"Unable to find pokemon with ID \" + id);\n+        }\n+    }\n+\n+    @DELETE\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Transactional(Transactional.TxType.REQUIRED)\n+    public void deletePokemon(@PathParam(\"id\") String id) {\n+        Pokemon pokemon = getPokemonById(id);\n+        entityManager.remove(pokemon);\n+    }\n+\n+    @GET\n+    @Path(\"name/{name}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonByName(@PathParam(\"name\") String name) {\n+        TypedQuery<Pokemon> query = entityManager.createNamedQuery(\"getPokemonByName\", Pokemon.class);\n+        List<Pokemon> list = query.setParameter(\"name\", name).getResultList();\n+        if (list.size() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzMjE4MA==", "bodyText": "That's better.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435932180", "createdAt": "2020-06-05T13:47:19Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response getPokemons() {\n+        List<Pokemon> pokemons =  entityManager.createNamedQuery(\"getPokemons\", Pokemon.class).getResultList();\n+        return Response.ok(new GenericEntity<>(pokemons){}).build();\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonById(@PathParam(\"id\") String id) {\n+        try {\n+            return entityManager.find(Pokemon.class, Integer.valueOf(id));\n+        } catch (IllegalArgumentException e) {\n+            throw new NotFoundException(\"Unable to find pokemon with ID \" + id);\n+        }\n+    }\n+\n+    @DELETE\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Transactional(Transactional.TxType.REQUIRED)\n+    public void deletePokemon(@PathParam(\"id\") String id) {\n+        Pokemon pokemon = getPokemonById(id);\n+        entityManager.remove(pokemon);\n+    }\n+\n+    @GET\n+    @Path(\"name/{name}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonByName(@PathParam(\"name\") String name) {\n+        TypedQuery<Pokemon> query = entityManager.createNamedQuery(\"getPokemonByName\", Pokemon.class);\n+        List<Pokemon> list = query.setParameter(\"name\", name).getResultList();\n+        if (list.size() == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyOTc1Mw=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk1NzM1OQ==", "bodyText": "Fixed.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435957359", "createdAt": "2020-06-05T14:24:44Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response getPokemons() {\n+        List<Pokemon> pokemons =  entityManager.createNamedQuery(\"getPokemons\", Pokemon.class).getResultList();\n+        return Response.ok(new GenericEntity<>(pokemons){}).build();\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonById(@PathParam(\"id\") String id) {\n+        try {\n+            return entityManager.find(Pokemon.class, Integer.valueOf(id));\n+        } catch (IllegalArgumentException e) {\n+            throw new NotFoundException(\"Unable to find pokemon with ID \" + id);\n+        }\n+    }\n+\n+    @DELETE\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Transactional(Transactional.TxType.REQUIRED)\n+    public void deletePokemon(@PathParam(\"id\") String id) {\n+        Pokemon pokemon = getPokemonById(id);\n+        entityManager.remove(pokemon);\n+    }\n+\n+    @GET\n+    @Path(\"name/{name}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonByName(@PathParam(\"name\") String name) {\n+        TypedQuery<Pokemon> query = entityManager.createNamedQuery(\"getPokemonByName\", Pokemon.class);\n+        List<Pokemon> list = query.setParameter(\"name\", name).getResultList();\n+        if (list.size() == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyOTc1Mw=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjg5MDkwOnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyOToxNlrOGfWpyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzo0NzozOFrOGfvMwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMDE4NQ==", "bodyText": "Mm, not always a bad request, right?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435530185", "createdAt": "2020-06-04T20:29:16Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response getPokemons() {\n+        List<Pokemon> pokemons =  entityManager.createNamedQuery(\"getPokemons\", Pokemon.class).getResultList();\n+        return Response.ok(new GenericEntity<>(pokemons){}).build();\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonById(@PathParam(\"id\") String id) {\n+        try {\n+            return entityManager.find(Pokemon.class, Integer.valueOf(id));\n+        } catch (IllegalArgumentException e) {\n+            throw new NotFoundException(\"Unable to find pokemon with ID \" + id);\n+        }\n+    }\n+\n+    @DELETE\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Transactional(Transactional.TxType.REQUIRED)\n+    public void deletePokemon(@PathParam(\"id\") String id) {\n+        Pokemon pokemon = getPokemonById(id);\n+        entityManager.remove(pokemon);\n+    }\n+\n+    @GET\n+    @Path(\"name/{name}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonByName(@PathParam(\"name\") String name) {\n+        TypedQuery<Pokemon> query = entityManager.createNamedQuery(\"getPokemonByName\", Pokemon.class);\n+        List<Pokemon> list = query.setParameter(\"name\", name).getResultList();\n+        if (list.size() == 0) {\n+            throw new NotFoundException(\"Unable to find pokemon with name \" + name);\n+        }\n+        return list.get(0);\n+    }\n+\n+    @POST\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Transactional(Transactional.TxType.REQUIRED)\n+    public void createPokemon(Pokemon pokemon) {\n+        try {\n+            PokemonType pokemonType = entityManager.createNamedQuery(\"getPokemonTypeById\", PokemonType.class)\n+                    .setParameter(\"id\", pokemon.getType()).getSingleResult();\n+            pokemon.setPokemonType(pokemonType);\n+            entityManager.persist(pokemon);\n+        } catch (Exception e) {\n+            throw new BadRequestException(\"Unable to create pokemon with ID \" + pokemon.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzMjM1Mg==", "bodyText": "Maybe be not, but I prefer to keep the example simple.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435932352", "createdAt": "2020-06-05T13:47:38Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response getPokemons() {\n+        List<Pokemon> pokemons =  entityManager.createNamedQuery(\"getPokemons\", Pokemon.class).getResultList();\n+        return Response.ok(new GenericEntity<>(pokemons){}).build();\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonById(@PathParam(\"id\") String id) {\n+        try {\n+            return entityManager.find(Pokemon.class, Integer.valueOf(id));\n+        } catch (IllegalArgumentException e) {\n+            throw new NotFoundException(\"Unable to find pokemon with ID \" + id);\n+        }\n+    }\n+\n+    @DELETE\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Transactional(Transactional.TxType.REQUIRED)\n+    public void deletePokemon(@PathParam(\"id\") String id) {\n+        Pokemon pokemon = getPokemonById(id);\n+        entityManager.remove(pokemon);\n+    }\n+\n+    @GET\n+    @Path(\"name/{name}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonByName(@PathParam(\"name\") String name) {\n+        TypedQuery<Pokemon> query = entityManager.createNamedQuery(\"getPokemonByName\", Pokemon.class);\n+        List<Pokemon> list = query.setParameter(\"name\", name).getResultList();\n+        if (list.size() == 0) {\n+            throw new NotFoundException(\"Unable to find pokemon with name \" + name);\n+        }\n+        return list.get(0);\n+    }\n+\n+    @POST\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Transactional(Transactional.TxType.REQUIRED)\n+    public void createPokemon(Pokemon pokemon) {\n+        try {\n+            PokemonType pokemonType = entityManager.createNamedQuery(\"getPokemonTypeById\", PokemonType.class)\n+                    .setParameter(\"id\", pokemon.getType()).getSingleResult();\n+            pokemon.setPokemonType(pokemonType);\n+            entityManager.persist(pokemon);\n+        } catch (Exception e) {\n+            throw new BadRequestException(\"Unable to create pokemon with ID \" + pokemon.getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMDE4NQ=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjg5MzAzOnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonTypeResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyOTo0OFrOGfWrBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyOTo0OFrOGfWrBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMDUwMw==", "bodyText": "Name of the class is actually PokemonTypeResource", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435530503", "createdAt": "2020-06-04T20:29:48Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonTypeResource.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class TypeResource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjg5ODg3OnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/init_script.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDozMTo0MlrOGfWuqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDoyNjo1MVrOGfwzxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMTQzNQ==", "bodyText": "Just a note: If you're using H2, remember to futz with the JDBC URL in the right way (can't remember what that is at the moment) such that closing all the connections in the pool doesn't nuke your in-memory database, rendering this DDL useless.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435531435", "createdAt": "2020-06-04T20:31:42Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/init_script.sql", "diffHunk": "@@ -0,0 +1,25 @@\n+INSERT INTO POKEMONTYPE VALUES (1, 'Normal');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk1ODcyNQ==", "bodyText": "See @tomas-langer's comment, we may not be able to use H2 :(", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435958725", "createdAt": "2020-06-05T14:26:51Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/init_script.sql", "diffHunk": "@@ -0,0 +1,25 @@\n+INSERT INTO POKEMONTYPE VALUES (1, 'Normal');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMTQzNQ=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjkwNDc2OnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDozMzo0MFrOGfWyeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDozMzo0MFrOGfWyeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMjQwOQ==", "bodyText": "See if you need to add ;DB_CLOSE_DELAY=-1 to this for your scenario.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435532409", "createdAt": "2020-06-04T20:33:40Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,23 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDUwMDM0OnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1OTo0OFrOGfmReg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDoyODoyNFrOGhM3ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NjEwNg==", "bodyText": "If this should be an archetype that is built into native image, we cannot use in-memory database for it.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435786106", "createdAt": "2020-06-05T08:59:48Z", "author": {"login": "tomas-langer"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,23 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzNTIyNw==", "bodyText": "That's bad. Depending on an external DB would make everything harder. Any suggestions?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435935227", "createdAt": "2020-06-05T13:52:15Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,23 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NjEwNg=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA4MDkyNA==", "bodyText": "Just a data point: haven't looked at it yet but see this example of H2 1.4.200 working in memory with Graal VM.  (H2's official position is that GraalVM is not supported.)", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r436080924", "createdAt": "2020-06-05T18:05:51Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,23 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NjEwNg=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4Njg1OA==", "bodyText": "Have tried 1.4.200 - did not work with native image even for tcp connections.\nThere is a difference between \"Graal VM\" and 'native-image'\nGraal VM is a full JRE.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r436186858", "createdAt": "2020-06-05T22:10:01Z", "author": {"login": "tomas-langer"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,23 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NjEwNg=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4NzA4OA==", "bodyText": "You can run h2 either as a small java process or as a docker image.\nThere is no easy way to build a native image with an in-memory database now.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r436187088", "createdAt": "2020-06-05T22:10:50Z", "author": {"login": "tomas-langer"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,23 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NjEwNg=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE4OTUzMQ==", "bodyText": "I thought something like this would do it.  Does it not?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r436189531", "createdAt": "2020-06-05T22:19:12Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,23 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NjEwNg=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjcwMTMxMw==", "bodyText": "The error I'm seeing with H2 and native is related to direct byte buffers. After discussing this with Joe and others, there's some agreement that we should have a sample like this even without native (trying to fix this later. The other problem is that building a native image takes a very very long time, resulting in a very poor user experience. WDYT @tomas-langer?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r436701313", "createdAt": "2020-06-08T13:29:22Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,23 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NjEwNg=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ2NzAwMw==", "bodyText": "After discussing this with @paulparkinson, even using just the client driver and running H2 in a container is problem with native. I think we should come back to this post release.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r437467003", "createdAt": "2020-06-09T14:28:24Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,23 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NjEwNg=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNDUwMTk4OnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/persistence.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwOTowMDowNlrOGfmSYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMzo1MTo1OFrOGfvXSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NjMzOQ==", "bodyText": "If this should be an archetype that is built into native image, we cannot use eclipse link, we would need to use hibernate", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435786339", "createdAt": "2020-06-05T09:00:06Z", "author": {"login": "tomas-langer"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/persistence.xml", "diffHunk": "@@ -0,0 +1,42 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<persistence version=\"2.2\"\n+             xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\n+             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+             xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence\n+                                 http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd\">\n+  <persistence-unit name=\"test\" transaction-type=\"JTA\">\n+    <jta-data-source>test</jta-data-source>\n+    <class>io.helidon.examples.integrations.cdi.pokemon.Pokemon</class>\n+    <class>io.helidon.examples.integrations.cdi.pokemon.PokemonType</class>\n+    <properties>\n+      <property name=\"javax.persistence.schema-generation.database.action\" value=\"drop-and-create\"/>\n+      <property name=\"javax.persistence.sql-load-script-source\" value=\"META-INF/init_script.sql\"/>\n+      <property name=\"eclipselink.create-ddl-jdbc-file-name\" value=\"createDDL_ddlGeneration.jdbc\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzNTA1MA==", "bodyText": "Ok, will try to switch.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435935050", "createdAt": "2020-06-05T13:51:58Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/persistence.xml", "diffHunk": "@@ -0,0 +1,42 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<persistence version=\"2.2\"\n+             xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\n+             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+             xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence\n+                                 http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd\">\n+  <persistence-unit name=\"test\" transaction-type=\"JTA\">\n+    <jta-data-source>test</jta-data-source>\n+    <class>io.helidon.examples.integrations.cdi.pokemon.Pokemon</class>\n+    <class>io.helidon.examples.integrations.cdi.pokemon.PokemonType</class>\n+    <properties>\n+      <property name=\"javax.persistence.schema-generation.database.action\" value=\"drop-and-create\"/>\n+      <property name=\"javax.persistence.sql-load-script-source\" value=\"META-INF/init_script.sql\"/>\n+      <property name=\"eclipselink.create-ddl-jdbc-file-name\" value=\"createDDL_ddlGeneration.jdbc\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NjMzOQ=="}, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDQxMDI2OnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzoyNDozN1rOGh_FmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNToxNDoyMlrOGih6nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4OTgxNg==", "bodyText": "Nit: this list and all the other things in this doc comment will not be formatted in any javadoc output.  Normally I'd not say anything but this is an archetype, and so serves as an example to customers.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438289816", "createdAt": "2020-06-10T17:24:37Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+/**\n+ * This class implements REST endpoints to interact with Pokemons. The following\n+ * operations are supported:\n+ *\n+ * GET /pokemon: Retrieve list of all pokemons", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31738d36a2d5d6588927fd172e1cd167bb18b1a6"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0ODQ1NQ==", "bodyText": "Yeap, thought about that too. I'll address this.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438848455", "createdAt": "2020-06-11T14:56:57Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+/**\n+ * This class implements REST endpoints to interact with Pokemons. The following\n+ * operations are supported:\n+ *\n+ * GET /pokemon: Retrieve list of all pokemons", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4OTgxNg=="}, "originalCommit": {"oid": "31738d36a2d5d6588927fd172e1cd167bb18b1a6"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg2MDQ0NQ==", "bodyText": "Updated the archetype files only.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438860445", "createdAt": "2020-06-11T15:14:22Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+/**\n+ * This class implements REST endpoints to interact with Pokemons. The following\n+ * operations are supported:\n+ *\n+ * GET /pokemon: Retrieve list of all pokemons", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4OTgxNg=="}, "originalCommit": {"oid": "31738d36a2d5d6588927fd172e1cd167bb18b1a6"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDcxMzE5OnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozMTo1MVrOGip2Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODo0MjowN1rOGiqKwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MDM1MQ==", "bodyText": "Nit: eliminate this line?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438990351", "createdAt": "2020-06-11T18:31:51Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,24 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+#javax.sql.DataSource.test.dataSource.url=jdbc:h2:tcp://localhost:1521/test;IFEXISTS=FALSE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5NTY1MA==", "bodyText": "Intentional to easily switch.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438995650", "createdAt": "2020-06-11T18:42:07Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,24 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+#javax.sql.DataSource.test.dataSource.url=jdbc:h2:tcp://localhost:1521/test;IFEXISTS=FALSE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MDM1MQ=="}, "originalCommit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDcxNTQ2OnYy", "diffSide": "RIGHT", "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonTypeResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozMjozNlrOGip3fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODo0MjozM1rOGiqLug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MDcxOA==", "bodyText": "Nit: javadoc formatting again", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438990718", "createdAt": "2020-06-11T18:32:36Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonTypeResource.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+/**\n+ * This class implements a REST endpoint to retrieve Pokemon types.\n+ *\n+ * GET /type: Retrieve list of all pokemon types", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5NTg5OA==", "bodyText": "I only modified the archetype, not the example. Other examples are like that.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438995898", "createdAt": "2020-06-11T18:42:33Z", "author": {"login": "spericas"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonTypeResource.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+/**\n+ * This class implements a REST endpoint to retrieve Pokemon types.\n+ *\n+ * GET /type: Retrieve list of all pokemon types", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MDcxOA=="}, "originalCommit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDcyMDAzOnYy", "diffSide": "RIGHT", "path": "archetypes/database-mp/src/test/resources/projects/it1/goal.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozNDowNFrOGip6Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODo0Mjo1NFrOGiqMcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MTQ1MA==", "bodyText": "I don't know what this file does; if it's OK then\u2026good and carry on!", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438991450", "createdAt": "2020-06-11T18:34:04Z", "author": {"login": "ljnelson"}, "path": "archetypes/database-mp/src/test/resources/projects/it1/goal.txt", "diffHunk": "@@ -0,0 +1 @@\n+package", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5NjA4MQ==", "bodyText": "That's left out of the archetype after generation.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438996081", "createdAt": "2020-06-11T18:42:54Z", "author": {"login": "spericas"}, "path": "archetypes/database-mp/src/test/resources/projects/it1/goal.txt", "diffHunk": "@@ -0,0 +1 @@\n+package", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MTQ1MA=="}, "originalCommit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDcyMTA3OnYy", "diffSide": "RIGHT", "path": "archetypes/database-mp/src/main/resources/src/main/resources/native-image/reflect-config.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozNDoyNlrOGip7Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODo0NDowMFrOGiqPEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MTYzOQ==", "bodyText": "Intentional?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438991639", "createdAt": "2020-06-11T18:34:26Z", "author": {"login": "ljnelson"}, "path": "archetypes/database-mp/src/main/resources/src/main/resources/native-image/reflect-config.json", "diffHunk": "@@ -0,0 +1 @@\n+[]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5Njc1NQ==", "bodyText": "We don't really need at this time. I will remove it in a follow up PR.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438996755", "createdAt": "2020-06-11T18:44:00Z", "author": {"login": "spericas"}, "path": "archetypes/database-mp/src/main/resources/src/main/resources/native-image/reflect-config.json", "diffHunk": "@@ -0,0 +1 @@\n+[]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MTYzOQ=="}, "originalCommit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 610, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}