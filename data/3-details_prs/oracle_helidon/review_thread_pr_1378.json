{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTUwOTI0", "number": 1378, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjo1MToyNlrODfub5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjo1Njo1MVrODfugcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTkzMjU1OnYy", "diffSide": "RIGHT", "path": "media/common/src/main/java/io/helidon/media/common/ContentWriters.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjo1MToyNlrOFpmVlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowMTo0NVrOFpmjqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NDA1Mw==", "bodyText": "Function<T, Publisher<DataChunk> is the old style of writer that is deprecated, we don't need that.", "url": "https://github.com/oracle/helidon/pull/1378#discussion_r379164053", "createdAt": "2020-02-13T22:51:26Z", "author": {"login": "romain-grecourt"}, "path": "media/common/src/main/java/io/helidon/media/common/ContentWriters.java", "diffHunk": "@@ -147,4 +187,18 @@ private ContentWriters() {\n     public static Function<ReadableByteChannel, Publisher<DataChunk>> byteChannelWriter() {\n         return byteChannelWriter(null);\n     }\n+\n+    /**\n+     * Returns a writer function for a {@link Throwable}'s stack trace.\n+     *\n+     * @param context a {@link MessageBodyWriterContext}\n+     * @param setContentLength whether {@link MessageBodyWriterContext#contentLength(long)} should be called\n+     * @return a {@link Throwable} writer\n+     * @see #writeStackTrace(Throwable, MessageBodyWriterContext, boolean)\n+     */\n+    public static Function<Throwable, Publisher<DataChunk>> stackTraceWriter(MessageBodyWriterContext context,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7096ed998cfafa8cc189193a73e8c6370495556"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NzY1OA==", "bodyText": "OK; will remove these.  (The other ones: should they be @Deprecated?)", "url": "https://github.com/oracle/helidon/pull/1378#discussion_r379167658", "createdAt": "2020-02-13T23:01:45Z", "author": {"login": "ljnelson"}, "path": "media/common/src/main/java/io/helidon/media/common/ContentWriters.java", "diffHunk": "@@ -147,4 +187,18 @@ private ContentWriters() {\n     public static Function<ReadableByteChannel, Publisher<DataChunk>> byteChannelWriter() {\n         return byteChannelWriter(null);\n     }\n+\n+    /**\n+     * Returns a writer function for a {@link Throwable}'s stack trace.\n+     *\n+     * @param context a {@link MessageBodyWriterContext}\n+     * @param setContentLength whether {@link MessageBodyWriterContext#contentLength(long)} should be called\n+     * @return a {@link Throwable} writer\n+     * @see #writeStackTrace(Throwable, MessageBodyWriterContext, boolean)\n+     */\n+    public static Function<Throwable, Publisher<DataChunk>> stackTraceWriter(MessageBodyWriterContext context,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NDA1Mw=="}, "originalCommit": {"oid": "d7096ed998cfafa8cc189193a73e8c6370495556"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTk0MDE0OnYy", "diffSide": "RIGHT", "path": "media/common/src/main/java/io/helidon/media/common/ContentWriters.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjo1NDo1N1rOFpmafg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowMToxOVrOFpmjDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NTMxMA==", "bodyText": "With the addition the context as parameter, this methods differs from all the other ones in ContentWriters.\nLets not over do it and stick with just ThrowableBodyWriter.", "url": "https://github.com/oracle/helidon/pull/1378#discussion_r379165310", "createdAt": "2020-02-13T22:54:57Z", "author": {"login": "romain-grecourt"}, "path": "media/common/src/main/java/io/helidon/media/common/ContentWriters.java", "diffHunk": "@@ -81,6 +83,44 @@ private ContentWriters() {\n         return Single.just(DataChunk.create(false, buffer.encode(charset)));\n     }\n \n+    /**\n+     * Create a a publisher {@link DataChunk} with the given\n+     * {@link Throwable} / {@link Charset} and return a {@link Single}.\n+     *\n+     * @param throwable the {@link Throwable}\n+     * @param context a {@link MessageBodyWriterContext}\n+     * @param setContentLength whether {@link MessageBodyWriterContext#contentLength(long)} should be called\n+     * @return Single\n+     */\n+    public static Single<DataChunk> writeStackTrace(Throwable throwable,\n+                                                    MessageBodyWriterContext context,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7096ed998cfafa8cc189193a73e8c6370495556"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NzUwMQ==", "bodyText": "OK; note that the content length issue is one that will be faced by the CharSequence-related methods as well, so if it's OK to remove content length concerns then I can accept what they do.  WDYT?", "url": "https://github.com/oracle/helidon/pull/1378#discussion_r379167501", "createdAt": "2020-02-13T23:01:19Z", "author": {"login": "ljnelson"}, "path": "media/common/src/main/java/io/helidon/media/common/ContentWriters.java", "diffHunk": "@@ -81,6 +83,44 @@ private ContentWriters() {\n         return Single.just(DataChunk.create(false, buffer.encode(charset)));\n     }\n \n+    /**\n+     * Create a a publisher {@link DataChunk} with the given\n+     * {@link Throwable} / {@link Charset} and return a {@link Single}.\n+     *\n+     * @param throwable the {@link Throwable}\n+     * @param context a {@link MessageBodyWriterContext}\n+     * @param setContentLength whether {@link MessageBodyWriterContext#contentLength(long)} should be called\n+     * @return Single\n+     */\n+    public static Single<DataChunk> writeStackTrace(Throwable throwable,\n+                                                    MessageBodyWriterContext context,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NTMxMA=="}, "originalCommit": {"oid": "d7096ed998cfafa8cc189193a73e8c6370495556"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTk0NDE3OnYy", "diffSide": "RIGHT", "path": "webserver/webserver/src/main/java/io/helidon/webserver/ServerResponse.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjo1Njo1MVrOFpmdIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzowMDoxNlrOFpmhqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NTk4NQ==", "bodyText": "Lets not use a default method here.\nThe API and implementation come together, so there isn't much benefit to having a default method implementation right ?", "url": "https://github.com/oracle/helidon/pull/1378#discussion_r379165985", "createdAt": "2020-02-13T22:56:51Z", "author": {"login": "romain-grecourt"}, "path": "webserver/webserver/src/main/java/io/helidon/webserver/ServerResponse.java", "diffHunk": "@@ -100,6 +100,27 @@ default ServerResponse status(int statusCode) throws AlreadyCompletedException {\n      */\n     MessageBodyWriterContext writerContext();\n \n+    /**\n+     * Send a {@link Throwable} and close the response.\n+     *\n+     * @param content the {@link Throwable} to send\n+     * @return {@code null} when invoked\n+     * @throws IllegalArgumentException if there is no registered writer for a given type\n+     * @throws IllegalStateException if any {@code send(...)} method was already called\n+     * @see #send(Object)\n+     */\n+    default Void send(Throwable content) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7096ed998cfafa8cc189193a73e8c6370495556"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NzE0Nw==", "bodyText": "OK; will change to an interface here and then will move its contents to {checks notes} Response.java.", "url": "https://github.com/oracle/helidon/pull/1378#discussion_r379167147", "createdAt": "2020-02-13T23:00:16Z", "author": {"login": "ljnelson"}, "path": "webserver/webserver/src/main/java/io/helidon/webserver/ServerResponse.java", "diffHunk": "@@ -100,6 +100,27 @@ default ServerResponse status(int statusCode) throws AlreadyCompletedException {\n      */\n     MessageBodyWriterContext writerContext();\n \n+    /**\n+     * Send a {@link Throwable} and close the response.\n+     *\n+     * @param content the {@link Throwable} to send\n+     * @return {@code null} when invoked\n+     * @throws IllegalArgumentException if there is no registered writer for a given type\n+     * @throws IllegalStateException if any {@code send(...)} method was already called\n+     * @see #send(Object)\n+     */\n+    default Void send(Throwable content) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE2NTk4NQ=="}, "originalCommit": {"oid": "d7096ed998cfafa8cc189193a73e8c6370495556"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 227, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}