{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MTQ1MDgw", "number": 2065, "title": "DB Archetypes: README updates for native support", "bodyText": "Updates to README and related files with a section describing how to run database-se/mp using an external H2 database and GraalVM native.", "createdAt": "2020-06-19T14:52:23Z", "url": "https://github.com/oracle/helidon/pull/2065", "merged": true, "mergeCommit": {"oid": "200a5377858ba6530174fac5393f7eff23afa248"}, "closed": true, "closedAt": "2020-06-19T19:54:56Z", "author": {"login": "spericas"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcszT1DAH2gAyNDM3MTQ1MDgwOjRhNzE0M2VkMjcwZjYwOWRkMGNmZmNlM2JlNDI0NzZjYmE2M2ExNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcs4lx9AFqTQzNDMxMDg3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4a7143ed270f609dd0cffce3be42476cba63a176", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/4a7143ed270f609dd0cffce3be42476cba63a176", "committedDate": "2020-06-19T13:45:34Z", "message": "Updates to README and related files with a section describing how to run database-se using an external H2 database and GraalVM native.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b150bd37058582f8129dea34fb0eb2b1e496a22", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/0b150bd37058582f8129dea34fb0eb2b1e496a22", "committedDate": "2020-06-19T14:50:06Z", "message": "Updates to README and related files with a section describing how to run database-mp using an external H2 database and GraalVM native.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTY5NjI5", "url": "https://github.com/oracle/helidon/pull/2065#pullrequestreview-434169629", "createdAt": "2020-06-19T15:34:03Z", "commit": {"oid": "0b150bd37058582f8129dea34fb0eb2b1e496a22"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MjA4ODU3", "url": "https://github.com/oracle/helidon/pull/2065#pullrequestreview-434208857", "createdAt": "2020-06-19T16:34:45Z", "commit": {"oid": "0b150bd37058582f8129dea34fb0eb2b1e496a22"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjozNDo0NVrOGma6gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNjozNzoxN1rOGma-8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0MDAzMw==", "bodyText": "The first dependency is for Oracle JDBC, not needed for h2", "url": "https://github.com/oracle/helidon/pull/2065#discussion_r442940033", "createdAt": "2020-06-19T16:34:45Z", "author": {"login": "tomas-langer"}, "path": "archetypes/database-mp/src/main/resources/README.md.mustache", "diffHunk": "@@ -38,4 +38,54 @@ curl -s -X GET http://localhost:8080/metrics\n curl -H 'Accept: application/json' -X GET http://localhost:8080/metrics\n {\"base\":...\n . . .\n-```\n\\ No newline at end of file\n+```\n+\n+## GraalVM Native Support\n+\n+The generation of native binaries requires an installation of GraalVM 20.0.0+. For more\n+information about the steps necessary to use GraalVM with Helidon\n+see https://helidon.io/docs/v2/#/mp/guides/36_graalnative.\n+\n+The H2 Database when configured to use the in-memory mode is currently _not compatible_\n+with GraalVM native.\n+In order to produce a native binary, you must run the H2 Database as a separate process\n+and use a network connection for access. The simplest way to do this is by starting a Docker\n+container as follows:\n+\n+```\n+docker run -d -p 1521:1521 -p 81:81 -e H2_OPTIONS='-ifNotExists' --name=h2 oscarfonts/h2\n+```\n+\n+The resulting container will listen to port 1521 for network connections.\n+Switch property `javax.sql.DataSource.test.dataSource.url` in `microprofile-config.properties`\n+to use a TCP connection:\n+\n+```\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:tcp://localhost:1521/test;IFEXISTS=FALSE\n+```\n+\n+Next, uncomment the following dependencies in your project's pom file:\n+\n+```\n+<dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b150bd37058582f8129dea34fb0eb2b1e496a22"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0MDMyOA==", "bodyText": "If you use the dependency above, this one is not needed (and you do not need to comment out anything for native image)", "url": "https://github.com/oracle/helidon/pull/2065#discussion_r442940328", "createdAt": "2020-06-19T16:35:23Z", "author": {"login": "tomas-langer"}, "path": "archetypes/database-mp/src/main/resources/pom.xml.mustache", "diffHunk": "@@ -43,6 +43,14 @@\n             <groupId>jakarta.transaction</groupId>\n             <artifactId>jakarta.transaction-api</artifactId>\n         </dependency>\n+        <!-- dependency>\n+            <groupId>io.helidon.integrations.db</groupId>\n+            <artifactId>ojdbc</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.db</groupId>\n+            <artifactId>h2</artifactId>\n+        </dependency -->\n         <dependency>\n             <groupId>com.h2database</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b150bd37058582f8129dea34fb0eb2b1e496a22"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0MDg3MA==", "bodyText": "ifexists is not needed here, sufficient on server side", "url": "https://github.com/oracle/helidon/pull/2065#discussion_r442940870", "createdAt": "2020-06-19T16:36:34Z", "author": {"login": "tomas-langer"}, "path": "archetypes/database-mp/src/main/resources/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -1,8 +1,8 @@\n \n # Datasource properties\n javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n-#javax.sql.DataSource.test.dataSource.url=jdbc:h2:tcp://localhost:1521/test;IFEXISTS=FALSE\n javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test;DB_CLOSE_DELAY=-1\n+#javax.sql.DataSource.test.dataSource.url=jdbc:h2:tcp://localhost:1521/test;IFEXISTS=FALSE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b150bd37058582f8129dea34fb0eb2b1e496a22"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjk0MTE3MA==", "bodyText": "Same as above - only one of them is needed (h2), the other one is for Oracle JDBC", "url": "https://github.com/oracle/helidon/pull/2065#discussion_r442941170", "createdAt": "2020-06-19T16:37:17Z", "author": {"login": "tomas-langer"}, "path": "archetypes/database-se/src/main/resources/README.md.mustache", "diffHunk": "@@ -38,4 +38,52 @@ curl -s -X GET http://localhost:8080/metrics\n curl -H 'Accept: application/json' -X GET http://localhost:8080/metrics\n {\"base\":...\n . . .\n-```\n\\ No newline at end of file\n+```\n+\n+## GraalVM Native Support\n+\n+The generation of native binaries requires an installation of GraalVM 20.0.0+. For more\n+information about the steps necessary to use GraalVM with Helidon\n+see https://helidon.io/docs/v2/#/se/guides/36_graalnative.\n+\n+The H2 Database when configured to use the in-memory mode is currently _not compatible_\n+with GraalVM native.\n+In order to produce a native binary, you must run the H2 Database as a separate process\n+and use a network connection for access. The simplest way to do this is by starting a Docker\n+container as follows:\n+\n+```\n+docker run -d -p 1521:1521 -p 81:81 -e H2_OPTIONS='-ifNotExists' --name=h2 oscarfonts/h2\n+```\n+\n+The resulting container will listen to port 1521 for network connections.\n+Switch the `url` in `application.yaml` to use a TCP connection:\n+\n+```\n+url: jdbc:h2:tcp://localhost:1521/test;DB_CLOSE_DELAY=-1\n+```\n+\n+Next, uncomment the following dependencies in your project's pom file:\n+\n+```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b150bd37058582f8129dea34fb0eb2b1e496a22"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e8d0a8291678f958fe966cde0fbc73378f8bcd2", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/8e8d0a8291678f958fe966cde0fbc73378f8bcd2", "committedDate": "2020-06-19T16:55:19Z", "message": "Removed unnecessary dependency and cleaned up DB URLs.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MjI2MDcx", "url": "https://github.com/oracle/helidon/pull/2065#pullrequestreview-434226071", "createdAt": "2020-06-19T17:05:12Z", "commit": {"oid": "8e8d0a8291678f958fe966cde0fbc73378f8bcd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0Mjk4MjU3", "url": "https://github.com/oracle/helidon/pull/2065#pullrequestreview-434298257", "createdAt": "2020-06-19T19:26:37Z", "commit": {"oid": "8e8d0a8291678f958fe966cde0fbc73378f8bcd2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOToyNjozN1rOGmfLRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxOToyNjozN1rOGmfLRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzAwOTg2Mg==", "bodyText": "I think you are missing microprofile health and metrics:\n        <dependency>\n            <groupId>io.helidon.microprofile.metrics</groupId>\n            <artifactId>helidon-microprofile-metrics</artifactId>\n            <scope>runtime</scope>\n        </dependency>\n        <dependency>\n            <groupId>io.helidon.microprofile.health</groupId>\n            <artifactId>helidon-microprofile-health</artifactId>\n            <scope>runtime</scope>\n        </dependency>", "url": "https://github.com/oracle/helidon/pull/2065#discussion_r443009862", "createdAt": "2020-06-19T19:26:37Z", "author": {"login": "barchetta"}, "path": "archetypes/database-mp/src/main/resources/pom.xml.mustache", "diffHunk": "@@ -43,6 +43,10 @@\n             <groupId>jakarta.transaction</groupId>\n             <artifactId>jakarta.transaction-api</artifactId>\n         </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e8d0a8291678f958fe966cde0fbc73378f8bcd2"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MzEwODc5", "url": "https://github.com/oracle/helidon/pull/2065#pullrequestreview-434310879", "createdAt": "2020-06-19T19:54:42Z", "commit": {"oid": "8e8d0a8291678f958fe966cde0fbc73378f8bcd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 602, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}