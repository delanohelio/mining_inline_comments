{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NTIzMzgz", "number": 1329, "title": "DB Client examples", "bodyText": "DB Model:\n\nTypes (id, name) -- Pokemon type table\nPokemons (id, name, id_type) -- Pokemon entity table with Types(id) reference\n\nUse-cases:\n\nList all Pokemons (without types)\nGet pokemon by ID\nGet pokemon by name\nCreate pokemon\nUpdate pokemon\nDelete pokemon by ID\n\nReadme\n\nhttps://github.com/Tomas-Kraus/helidon/tree/master/examples/dbclient/pokemons", "createdAt": "2020-01-29T12:11:34Z", "url": "https://github.com/oracle/helidon/pull/1329", "merged": true, "mergeCommit": {"oid": "015daea1734a52480a60ab98564c52ec79f0eb34"}, "closed": true, "closedAt": "2020-01-31T19:28:35Z", "author": {"login": "Tomas-Kraus"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_HQ-VAFqTM1MDE2MjAzNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_0TTFAFqTM1MTcyNjAyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMTYyMDM3", "url": "https://github.com/oracle/helidon/pull/1329#pullrequestreview-350162037", "createdAt": "2020-01-29T14:48:02Z", "commit": {"oid": "f064fc9ee8c99e21d0a74525631cc8f21e1a2bd8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNDo0ODowM1rOFjLB9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxNDo1ODo1MVrOFjLdow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQyNTIwNw==", "bodyText": "you catch the NumberFormatException above, not here. Is there a reason not to be consistent?", "url": "https://github.com/oracle/helidon/pull/1329#discussion_r372425207", "createdAt": "2020-01-29T14:48:03Z", "author": {"login": "tomas-langer"}, "path": "examples/dbclient/common/src/main/java/io/helidon/examples/dbclient/common/AbstractPokemonService.java", "diffHunk": "@@ -124,74 +120,116 @@ private void insertPokemonSimple(ServerRequest request, ServerResponse response)\n      * @param request  server request\n      * @param response server response\n      */\n-    private void getPokemon(ServerRequest request, ServerResponse response) {\n+    private void getPokemonByName(ServerRequest request, ServerResponse response) {\n         String pokemonName = request.path().param(\"name\");\n-\n-        dbClient.execute(exec -> exec.namedGet(\"select-one\", pokemonName))\n+        dbClient.execute(exec -> exec.namedGet(\"select-pokemon-by-name\", pokemonName))\n                 .onEmpty(() -> sendNotFound(response, \"Pokemon \" + pokemonName + \" not found\"))\n                 .onValue(row -> sendRow(row, response))\n                 .exceptionally(throwable -> sendError(throwable, response));\n     }\n \n     /**\n-     * Return JsonArray with all stored pokemons or pokemons with matching attributes.\n+     * Insert new pokemon with specified name.\n      *\n      * @param request  the server request\n      * @param response the server response\n      */\n-    private void listPokemons(ServerRequest request, ServerResponse response) {\n-        dbClient.execute(exec -> exec.namedQuery(\"select-all\"))\n-                .thenAccept(response::send)\n+    private void insertPokemon(ServerRequest request, ServerResponse response, Pokemon pokemon) {\n+        dbClient.execute(exec -> exec\n+                .createNamedInsert(\"insert-pokemon\")\n+                .indexedParam(pokemon)\n+                .execute())\n+                .thenAccept(count -> response.send(\"Inserted: \" + count + \" values\"))\n                 .exceptionally(throwable -> sendError(throwable, response));\n     }\n \n+    /**\n+     * Insert new pokemon type to pokemon with specified id.\n+     *\n+     * @param request  the server request\n+     * @param response the server response\n+     */\n+    private void insertPokemonType(ServerRequest request, ServerResponse response) {\n+        try {\n+            int pokemonId = Integer.parseInt(request.path().param(\"pokemonId\"));\n+            int typeId = Integer.parseInt(request.path().param(\"typeId\"));\n+            dbClient.execute(exec -> exec\n+                    .namedInsert(\"insert-poketype\", pokemonId, typeId))\n+                    .thenAccept(count -> response.send(\"Inserted: \" + count + \" values\"))\n+                    .exceptionally(throwable -> sendError(throwable, response));\n+        } catch (NumberFormatException ex) {\n+            sendError(ex, response);\n+        }\n+    }\n+\n     /**\n      * Update a pokemon.\n      * Uses a transaction.\n      *\n      * @param request  the server request\n      * @param response the server response\n      */\n-    private void updatePokemonType(ServerRequest request, ServerResponse response) {\n+    private void updatePokemonName(ServerRequest request, ServerResponse response) {\n+        int id = Integer.parseInt(request.path().param(\"id\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f064fc9ee8c99e21d0a74525631cc8f21e1a2bd8"}, "originalPosition": 175}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQzMTcyNA==", "bodyText": "Wrong javadoc, or wrong method name", "url": "https://github.com/oracle/helidon/pull/1329#discussion_r372431724", "createdAt": "2020-01-29T14:57:58Z", "author": {"login": "tomas-langer"}, "path": "examples/dbclient/jdbc/src/main/java/io/helidon/examples/dbclient/jdbc/PokemonService.java", "diffHunk": "@@ -32,35 +31,98 @@\n \n     PokemonService(DbClient dbClient) {\n         super(dbClient);\n-\n-        // dirty hack to prepare database for our POC\n-        // MySQL init\n-        dbClient.execute(handle -> handle.namedDml(\"create-table\"))\n-                .thenAccept(System.out::println)\n-                .exceptionally(throwable -> {\n-                    LOGGER.log(Level.WARNING, \"Failed to create table, maybe it already exists?\", throwable);\n-                    return null;\n-                });\n     }\n \n     /**\n-     * Delete all pokemons.\n+     * Delete pokemon with specified id (key).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f064fc9ee8c99e21d0a74525631cc8f21e1a2bd8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQzMTk4Mg==", "bodyText": "Do not add such methods, if not supported.", "url": "https://github.com/oracle/helidon/pull/1329#discussion_r372431982", "createdAt": "2020-01-29T14:58:23Z", "author": {"login": "tomas-langer"}, "path": "examples/dbclient/jdbc/src/main/java/io/helidon/examples/dbclient/jdbc/PokemonService.java", "diffHunk": "@@ -32,35 +31,98 @@\n \n     PokemonService(DbClient dbClient) {\n         super(dbClient);\n-\n-        // dirty hack to prepare database for our POC\n-        // MySQL init\n-        dbClient.execute(handle -> handle.namedDml(\"create-table\"))\n-                .thenAccept(System.out::println)\n-                .exceptionally(throwable -> {\n-                    LOGGER.log(Level.WARNING, \"Failed to create table, maybe it already exists?\", throwable);\n-                    return null;\n-                });\n     }\n \n     /**\n-     * Delete all pokemons.\n+     * Delete pokemon with specified id (key).\n      *\n      * @param request  the server request\n      * @param response the server response\n      */\n     @Override\n     protected void deleteAllPokemons(ServerRequest request, ServerResponse response) {\n-        dbClient().execute(exec -> exec\n-                // this is to show how ad-hoc statements can be executed (and their naming in Tracing and Metrics)\n-                .createDelete(\"DELETE FROM pokemons\")\n-                .execute())\n-                .thenAccept(count -> response.send(\"Deleted: \" + count + \" values\"))\n+        // Response message contains information about deleted records from both tables\n+        StringBuilder sb = new StringBuilder();\n+        // Pokemon must be removed from both PokemonTypes and Pokemons tables in transaction\n+        dbClient().inTransaction(tx -> tx\n+                // Execute delete from PokemonTypes table\n+                .createDelete(\"DELETE FROM PokemonTypes\")\n+                .execute()\n+                .thenCompose(typesCount -> {\n+                    sb.append(\"Deleted \").append(typesCount).append(\" types\");\n+                    // Execute delete from Pokemons table\n+                    return tx.createDelete(\"DELETE FROM Pokemons\")\n+                            .execute();\n+                }))\n+                // Process response when transaction is completed\n+                .thenAccept(pokemonsCount -> { \n+                    sb.append(\" and \").append(pokemonsCount).append(\" pokemons\");\n+                    response.send(sb.toString());\n+                })\n                 .exceptionally(throwable -> sendError(throwable, response));\n+     }\n+\n+    @Override\n+    protected void listPokemonsWithTypes(ServerRequest request, ServerResponse response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f064fc9ee8c99e21d0a74525631cc8f21e1a2bd8"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQzMjExMw==", "bodyText": "Remove from code", "url": "https://github.com/oracle/helidon/pull/1329#discussion_r372432113", "createdAt": "2020-01-29T14:58:34Z", "author": {"login": "tomas-langer"}, "path": "examples/dbclient/jdbc/src/main/java/io/helidon/examples/dbclient/jdbc/PokemonService.java", "diffHunk": "@@ -32,35 +31,98 @@\n \n     PokemonService(DbClient dbClient) {\n         super(dbClient);\n-\n-        // dirty hack to prepare database for our POC\n-        // MySQL init\n-        dbClient.execute(handle -> handle.namedDml(\"create-table\"))\n-                .thenAccept(System.out::println)\n-                .exceptionally(throwable -> {\n-                    LOGGER.log(Level.WARNING, \"Failed to create table, maybe it already exists?\", throwable);\n-                    return null;\n-                });\n     }\n \n     /**\n-     * Delete all pokemons.\n+     * Delete pokemon with specified id (key).\n      *\n      * @param request  the server request\n      * @param response the server response\n      */\n     @Override\n     protected void deleteAllPokemons(ServerRequest request, ServerResponse response) {\n-        dbClient().execute(exec -> exec\n-                // this is to show how ad-hoc statements can be executed (and their naming in Tracing and Metrics)\n-                .createDelete(\"DELETE FROM pokemons\")\n-                .execute())\n-                .thenAccept(count -> response.send(\"Deleted: \" + count + \" values\"))\n+        // Response message contains information about deleted records from both tables\n+        StringBuilder sb = new StringBuilder();\n+        // Pokemon must be removed from both PokemonTypes and Pokemons tables in transaction\n+        dbClient().inTransaction(tx -> tx\n+                // Execute delete from PokemonTypes table\n+                .createDelete(\"DELETE FROM PokemonTypes\")\n+                .execute()\n+                .thenCompose(typesCount -> {\n+                    sb.append(\"Deleted \").append(typesCount).append(\" types\");\n+                    // Execute delete from Pokemons table\n+                    return tx.createDelete(\"DELETE FROM Pokemons\")\n+                            .execute();\n+                }))\n+                // Process response when transaction is completed\n+                .thenAccept(pokemonsCount -> { \n+                    sb.append(\" and \").append(pokemonsCount).append(\" pokemons\");\n+                    response.send(sb.toString());\n+                })\n                 .exceptionally(throwable -> sendError(throwable, response));\n+     }\n+\n+    @Override\n+    protected void listPokemonsWithTypes(ServerRequest request, ServerResponse response) {\n+        throw new UnsupportedOperationException(\"Not supported yet.\");\n     }\n \n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f064fc9ee8c99e21d0a74525631cc8f21e1a2bd8"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjQzMjI5MQ==", "bodyText": "Remove", "url": "https://github.com/oracle/helidon/pull/1329#discussion_r372432291", "createdAt": "2020-01-29T14:58:51Z", "author": {"login": "tomas-langer"}, "path": "examples/dbclient/mongodb/src/main/java/io/helidon/examples/dbclient/mongo/PokemonService.java", "diffHunk": "@@ -56,4 +47,10 @@ protected void deleteAllPokemons(ServerRequest request, ServerResponse response)\n                 .thenAccept(count -> response.send(\"Deleted: \" + count + \" values\"))\n                 .exceptionally(throwable -> sendError(throwable, response));\n     }\n+\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f064fc9ee8c99e21d0a74525631cc8f21e1a2bd8"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "278e584b2190c8d4aa93ea453886bcba518bb74a", "author": {"user": {"login": "Tomas-Kraus", "name": "Tom\u00e1\u0161 Kraus"}}, "url": "https://github.com/oracle/helidon/commit/278e584b2190c8d4aa93ea453886bcba518bb74a", "committedDate": "2020-01-30T16:30:00Z", "message": "Fixed JDBC ResultSet column names metadata processing.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eced7de3966e63c464112df877d82705cf2786d6", "author": {"user": {"login": "Tomas-Kraus", "name": "Tom\u00e1\u0161 Kraus"}}, "url": "https://github.com/oracle/helidon/commit/eced7de3966e63c464112df877d82705cf2786d6", "committedDate": "2020-01-30T16:31:05Z", "message": "Added pokemon sample.\n - JDBC module is finished\n - MongoDB needs DB model update\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d83f49a433cd8702528f67bfc05e088fb7095b4", "author": {"user": {"login": "Tomas-Kraus", "name": "Tom\u00e1\u0161 Kraus"}}, "url": "https://github.com/oracle/helidon/commit/5d83f49a433cd8702528f67bfc05e088fb7095b4", "committedDate": "2020-01-31T13:42:38Z", "message": "Added mongoDB support to pokemons demo example.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e41ce71c1935e5c1541e6986796808f63b8d831", "author": {"user": {"login": "Tomas-Kraus", "name": "Tom\u00e1\u0161 Kraus"}}, "url": "https://github.com/oracle/helidon/commit/8e41ce71c1935e5c1541e6986796808f63b8d831", "committedDate": "2020-01-31T13:51:22Z", "message": "Checkstyle fixes.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9ff07eab8897de5adef16cac34ae0e0eb730de4", "author": {"user": {"login": "Tomas-Kraus", "name": "Tom\u00e1\u0161 Kraus"}}, "url": "https://github.com/oracle/helidon/commit/f9ff07eab8897de5adef16cac34ae0e0eb730de4", "committedDate": "2020-01-31T13:56:11Z", "message": "Exception handling should be tha same.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21145d58a89e653c0d348995bb7fb393b57a832a", "author": {"user": {"login": "Tomas-Kraus", "name": "Tom\u00e1\u0161 Kraus"}}, "url": "https://github.com/oracle/helidon/commit/21145d58a89e653c0d348995bb7fb393b57a832a", "committedDate": "2020-01-31T14:12:56Z", "message": "Final code cleanup.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbaae20d35eb30da00c7da88cfec42673497a7f0", "author": {"user": {"login": "Tomas-Kraus", "name": "Tom\u00e1\u0161 Kraus"}}, "url": "https://github.com/oracle/helidon/commit/dbaae20d35eb30da00c7da88cfec42673497a7f0", "committedDate": "2020-01-31T14:16:53Z", "message": "README update\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNTI3MDkx", "url": "https://github.com/oracle/helidon/pull/1329#pullrequestreview-351527091", "createdAt": "2020-01-31T14:09:03Z", "commit": {"oid": "f9ff07eab8897de5adef16cac34ae0e0eb730de4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDowOTowM1rOFkMaQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNDoxNzowMFrOFkMpiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5NjM4NA==", "bodyText": "This should not be a part of example in repo", "url": "https://github.com/oracle/helidon/pull/1329#discussion_r373496384", "createdAt": "2020-01-31T14:09:03Z", "author": {"login": "tomas-langer"}, "path": "examples/dbclient/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,190 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Copyright (c) 2019, 2020 Oracle and/or its affiliates. All rights reserved.\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+        xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-se</artifactId>\n+        <version>2.0-SNAPSHOT</version>\n+        <relativePath>../../../applications/se/pom.xml</relativePath>\n+    </parent>\n+\n+    <artifactId>helidon-examples-dbclient-pokemons</artifactId>\n+    <name>Helidon Examples DB Client: Pokemons Database</name>\n+\n+    <properties>\n+        <mainClass>io.helidon.examples.dbclient.pokemons.jdbc.PokemonMain</mainClass>\n+        <arg>jdbc</arg>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.helidon.health</groupId>\n+            <artifactId>helidon-health</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.metrics</groupId>\n+            <artifactId>helidon-metrics</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.tracing</groupId>\n+            <artifactId>helidon-tracing</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.tracing</groupId>\n+            <artifactId>helidon-tracing-zipkin</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-jdbc</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-mongodb</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-tracing</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-metrics</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-metrics-jdbc</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-health</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-jsonp</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-webserver-jsonp</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>mysql</groupId>\n+            <artifactId>mysql-connector-java</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.zaxxer</groupId>\n+            <artifactId>HikariCP</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-jdk14</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.webserver</groupId>\n+            <artifactId>helidon-webserver</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.media.jsonp</groupId>\n+            <artifactId>helidon-media-jsonp-server</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.media.jsonb</groupId>\n+            <artifactId>helidon-media-jsonb-server</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.config</groupId>\n+            <artifactId>helidon-config-yaml</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-engine</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-dependency-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>copy-libs</id>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ff07eab8897de5adef16cac34ae0e0eb730de4"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5NzEyNA==", "bodyText": "Default exec is part of parent. Do not add this plugin.", "url": "https://github.com/oracle/helidon/pull/1329#discussion_r373497124", "createdAt": "2020-01-31T14:10:39Z", "author": {"login": "tomas-langer"}, "path": "examples/dbclient/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,190 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Copyright (c) 2019, 2020 Oracle and/or its affiliates. All rights reserved.\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+      http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+  -->\n+\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+        xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+        xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-se</artifactId>\n+        <version>2.0-SNAPSHOT</version>\n+        <relativePath>../../../applications/se/pom.xml</relativePath>\n+    </parent>\n+\n+    <artifactId>helidon-examples-dbclient-pokemons</artifactId>\n+    <name>Helidon Examples DB Client: Pokemons Database</name>\n+\n+    <properties>\n+        <mainClass>io.helidon.examples.dbclient.pokemons.jdbc.PokemonMain</mainClass>\n+        <arg>jdbc</arg>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.helidon.health</groupId>\n+            <artifactId>helidon-health</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.metrics</groupId>\n+            <artifactId>helidon-metrics</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.tracing</groupId>\n+            <artifactId>helidon-tracing</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.tracing</groupId>\n+            <artifactId>helidon-tracing-zipkin</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-jdbc</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-mongodb</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-tracing</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-metrics</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-metrics-jdbc</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-health</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-jsonp</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.dbclient</groupId>\n+            <artifactId>helidon-dbclient-webserver-jsonp</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>mysql</groupId>\n+            <artifactId>mysql-connector-java</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.zaxxer</groupId>\n+            <artifactId>HikariCP</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.slf4j</groupId>\n+            <artifactId>slf4j-jdk14</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.webserver</groupId>\n+            <artifactId>helidon-webserver</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.media.jsonp</groupId>\n+            <artifactId>helidon-media-jsonp-server</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.media.jsonb</groupId>\n+            <artifactId>helidon-media-jsonb-server</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.config</groupId>\n+            <artifactId>helidon-config-yaml</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-engine</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-dependency-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>copy-libs</id>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>debug</id>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.codehaus.mojo</groupId>\n+                        <artifactId>exec-maven-plugin</artifactId>\n+                        <configuration>\n+                            <executable>java</executable>\n+                            <arguments>\n+                                <argument>-cp</argument>\n+                                <classpath />\n+                                <argument>-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=8787</argument>\n+                                <argument>${mainClass}</argument>\n+                            </arguments>\n+                        </configuration>\n+                        <executions>\n+                            <execution>\n+                                <phase>verify</phase>\n+                                <goals>\n+                                    <goal>exec</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+        <profile>\n+            <id>exec</id>\n+            <build>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ff07eab8897de5adef16cac34ae0e0eb730de4"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5NzY1Nw==", "bodyText": "Why is this protected? Either make the methods public, or package local.", "url": "https://github.com/oracle/helidon/pull/1329#discussion_r373497657", "createdAt": "2020-01-31T14:11:43Z", "author": {"login": "tomas-langer"}, "path": "examples/dbclient/pokemons/src/main/java/io/helidon/examples/dbclient/pokemons/jdbc/InitializeDb.java", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Copyright (c) 2019, 2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.dbclient.pokemons.jdbc;\n+\n+import java.util.concurrent.CompletionStage;\n+import java.util.concurrent.ExecutionException;\n+\n+import io.helidon.dbclient.DbClient;\n+import io.helidon.dbclient.DbExecute;\n+\n+/**\n+ * Initialize JDBC database schema and populate it with sample data.\n+ */\n+public class InitializeDb {\n+\n+    /** Pokemon types source file. */\n+    private static final String TYPES = \"/Types.json\";\n+    /** Pokemons source file. */\n+    private static final String POKEMONS = \"/Pokemons.json\";\n+\n+    /**\n+     * Initialize JDBC database schema and populate it with sample data.\n+     * @param dbClient database client\n+     */\n+    static void init(DbClient dbClient) {\n+        try {\n+            if (!PokemonMain.mongo) {\n+                initSchema(dbClient);\n+            }\n+            initData(dbClient);\n+        } catch (ExecutionException | InterruptedException ex) {\n+            System.out.printf(\"Could not initialize database: %s\", ex.getMessage());\n+        }\n+    }\n+\n+    /**\n+     * Initializes database schema (tables).\n+     *\n+     * @param dbClient database client\n+     */\n+    protected static void initSchema(DbClient dbClient) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ff07eab8897de5adef16cac34ae0e0eb730de4"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5OTQwMw==", "bodyText": "We use flat package structure everywhere. Do not create subpackages.", "url": "https://github.com/oracle/helidon/pull/1329#discussion_r373499403", "createdAt": "2020-01-31T14:15:15Z", "author": {"login": "tomas-langer"}, "path": "examples/dbclient/pokemons/src/main/java/io/helidon/examples/dbclient/pokemons/jdbc/mapper/Pokemon.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright (c) 2019, 2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.dbclient.pokemons.jdbc.mapper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ff07eab8897de5adef16cac34ae0e0eb730de4"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ5OTgzMA==", "bodyText": "you are missing the provides section for the java service implementation in this module", "url": "https://github.com/oracle/helidon/pull/1329#discussion_r373499830", "createdAt": "2020-01-31T14:16:05Z", "author": {"login": "tomas-langer"}, "path": "examples/dbclient/pokemons/src/main/java/module-info.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**\n+ * JDBC example.\n+ */\n+module io.helidon.examples.dbclient.pokemons.jdbc {\n+    requires java.logging;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ff07eab8897de5adef16cac34ae0e0eb730de4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzUwMDI5OQ==", "bodyText": "simplify this for this example - this is too complicated (metrics is not the main reason this example is created)", "url": "https://github.com/oracle/helidon/pull/1329#discussion_r373500299", "createdAt": "2020-01-31T14:17:00Z", "author": {"login": "tomas-langer"}, "path": "examples/dbclient/pokemons/src/main/resources/application.yaml", "diffHunk": "@@ -0,0 +1,95 @@\n+#\n+# Copyright (c) 2019, 2020 Oracle and/or its affiliates. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+server:\n+  port: 8079\n+  host: 0.0.0.0\n+  features:\n+    print-details: true\n+\n+tracing:\n+  service: jdbc-db\n+\n+# docker run --rm --name mysql -p 3306:3306 -e MYSQL_ROOT_PASSWORD=root -e MYSQL_DATABASE=pokemon -e MYSQL_USER=user -e MYSQL_PASSWORD=password  mysql:5.7\n+db:\n+  source: jdbc\n+  connection:\n+    url: jdbc:mysql://127.0.0.1:3306/pokemon?useSSL=false\n+    username: user\n+    password: password\n+    poolName: mysql\n+    initializationFailTimeout: -1\n+    connectionTimeout: 2000\n+    helidon:\n+      pool-metrics:\n+        enabled: true\n+        # name prefix defaults to \"db.pool.\" - if you have more than one client within a JVM, you may want to distinguish between them\n+        name-prefix: \"hikari.\"\n+  interceptors:\n+    tracing:\n+      global:\n+    metrics:\n+      # possible also global:\n+      global:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ff07eab8897de5adef16cac34ae0e0eb730de4"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0647d0cbca5574c92d5eeb18db7c46e80ad3e534", "author": {"user": {"login": "Tomas-Kraus", "name": "Tom\u00e1\u0161 Kraus"}}, "url": "https://github.com/oracle/helidon/commit/0647d0cbca5574c92d5eeb18db7c46e80ad3e534", "committedDate": "2020-01-31T14:20:53Z", "message": "Readme fix.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4aa12aa7a183dbb8226bef4c40161e032720d181", "author": {"user": {"login": "Tomas-Kraus", "name": "Tom\u00e1\u0161 Kraus"}}, "url": "https://github.com/oracle/helidon/commit/4aa12aa7a183dbb8226bef4c40161e032720d181", "committedDate": "2020-01-31T14:44:59Z", "message": "Review notes applied.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "577ecc2cc0834c8e7eb7d448d6272cb3b82c4051", "author": {"user": {"login": "Tomas-Kraus", "name": "Tom\u00e1\u0161 Kraus"}}, "url": "https://github.com/oracle/helidon/commit/577ecc2cc0834c8e7eb7d448d6272cb3b82c4051", "committedDate": "2020-01-31T18:11:34Z", "message": "Fixed checkstyle issues.\n\nSigned-off-by: Tomas Kraus <Tomas.Kraus@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNzI2MDI1", "url": "https://github.com/oracle/helidon/pull/1329#pullrequestreview-351726025", "createdAt": "2020-01-31T19:28:18Z", "commit": {"oid": "577ecc2cc0834c8e7eb7d448d6272cb3b82c4051"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 892, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}