{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNDg1NjQ3", "number": 2379, "title": "Enable support for HTTP compression in the webserver", "bodyText": "Enable support for HTTP compression in the webserver. Netty provides support for gzip and deflate encodings. Some new tests for SE and MP.\nSigned-off-by: Santiago Pericasgeertsen santiago.pericasgeertsen@oracle.com", "createdAt": "2020-09-21T18:37:41Z", "url": "https://github.com/oracle/helidon/pull/2379", "merged": true, "mergeCommit": {"oid": "c31a3f07c59a9356d857cfa9ec36b8e3b83f5bfe"}, "closed": true, "closedAt": "2020-09-24T17:45:16Z", "author": {"login": "spericas"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLwf8OAFqTQ5NDkwNzY1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMDBOngFqTQ5NTcwMTQwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTA3NjU1", "url": "https://github.com/oracle/helidon/pull/2379#pullrequestreview-494907655", "createdAt": "2020-09-23T17:54:14Z", "commit": {"oid": "08fb8035198b7939e3c2ea4fd3e293c7d276e6e7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzo1NDoxNFrOHW6A6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODowMDoxOFrOHW6QXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MTIyNg==", "bodyText": "Main class/method is no longer needed for MP.\nYou can start the application using io.helidon.microprofile.cdi.Main", "url": "https://github.com/oracle/helidon/pull/2379#discussion_r493781226", "createdAt": "2020-09-23T17:54:14Z", "author": {"login": "tomas-langer"}, "path": "tests/functional/mp-compression/src/main/java/io/helidon/tests/functional/mpcompression/Main.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08fb8035198b7939e3c2ea4fd3e293c7d276e6e7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MjgxNQ==", "bodyText": "Please switch to @HelidonTest\n\nyou can inject WebTarget that will be configured to the port (that will be random) of the server\nthe test would automatically start and stop the CDI in the background for you\n\nDeclaration of fields:\n@Inject\nprivate WebTarget baseTarget;", "url": "https://github.com/oracle/helidon/pull/2379#discussion_r493782815", "createdAt": "2020-09-23T17:56:40Z", "author": {"login": "tomas-langer"}, "path": "tests/functional/mp-compression/src/test/java/io/helidon/tests/functional/mpcompression/MpCompressionTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.helidon.tests.functional.mpcompression;\n+\n+import java.io.IOException;\n+import java.util.logging.LogManager;\n+\n+import javax.ws.rs.client.Client;\n+import javax.ws.rs.client.ClientBuilder;\n+import javax.ws.rs.client.WebTarget;\n+import javax.ws.rs.core.Response;\n+\n+import io.helidon.microprofile.server.Server;\n+\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+\n+class MpCompressionTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08fb8035198b7939e3c2ea4fd3e293c7d276e6e7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MzExNQ==", "bodyText": "Unless you expect people to start this server as an example, server.port is not needed here", "url": "https://github.com/oracle/helidon/pull/2379#discussion_r493783115", "createdAt": "2020-09-23T17:57:08Z", "author": {"login": "tomas-langer"}, "path": "tests/functional/mp-compression/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,19 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates. All rights reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+server.port=7001", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08fb8035198b7939e3c2ea4fd3e293c7d276e6e7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MzQxOA==", "bodyText": "logging.properties is also automatically loaded by Helidon MP, so no need to add it manually", "url": "https://github.com/oracle/helidon/pull/2379#discussion_r493783418", "createdAt": "2020-09-23T17:57:35Z", "author": {"login": "tomas-langer"}, "path": "tests/functional/mp-compression/src/test/java/io/helidon/tests/functional/mpcompression/MpCompressionTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.helidon.tests.functional.mpcompression;\n+\n+import java.io.IOException;\n+import java.util.logging.LogManager;\n+\n+import javax.ws.rs.client.Client;\n+import javax.ws.rs.client.ClientBuilder;\n+import javax.ws.rs.client.WebTarget;\n+import javax.ws.rs.core.Response;\n+\n+import io.helidon.microprofile.server.Server;\n+\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+\n+class MpCompressionTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4MjgxNQ=="}, "originalCommit": {"oid": "08fb8035198b7939e3c2ea4fd3e293c7d276e6e7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4NDI2Nw==", "bodyText": "Please change such statements to use Hamcrest assertion.\nThis should be assertThat(new String(...), is(\"{...\") - that is the common approach we have accros Helidon tests", "url": "https://github.com/oracle/helidon/pull/2379#discussion_r493784267", "createdAt": "2020-09-23T17:58:48Z", "author": {"login": "tomas-langer"}, "path": "webserver/jersey/src/test/java/io/helidon/webserver/jersey/JerseySupportTest.java", "diffHunk": "@@ -311,8 +311,8 @@ public void streamingOutput() throws IOException {\n         try (InputStream is = response.readEntity(InputStream.class)) {\n             byte[] buffer = new byte[32];\n             int n = is.read(buffer);        // should read only first chunk\n-            assertEquals(new String(buffer, 0, n), \"{ value: \\\"first\\\" }\\n\");\n-            while ((n = is.read(buffer)) > 0) {\n+            assertEquals(\"{ value: \\\"first\\\" }\\n\", new String(buffer, 0, n));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08fb8035198b7939e3c2ea4fd3e293c7d276e6e7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc4NTE4MQ==", "bodyText": "This should maybe say \"for default socket\", as this is socket specific, if I understood this PR correctly", "url": "https://github.com/oracle/helidon/pull/2379#discussion_r493785181", "createdAt": "2020-09-23T18:00:18Z", "author": {"login": "tomas-langer"}, "path": "webserver/webserver/src/main/java/io/helidon/webserver/WebServer.java", "diffHunk": "@@ -751,6 +751,17 @@ public Builder workersCount(int workers) {\n             return this;\n         }\n \n+        /**\n+         * Configure whether to enable content negotiation for compression.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08fb8035198b7939e3c2ea4fd3e293c7d276e6e7"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04467bdfcc14b47ccd56090e1300818562a5ecd0", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/04467bdfcc14b47ccd56090e1300818562a5ecd0", "committedDate": "2020-09-23T18:44:49Z", "message": "Enable support for HTTP compression in the webserver. Netty provides support for gzip and deflate encodings. Some new tests to show how it works.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fbfbcfd703de4b1ea9ed444a90993ac44fa3ab2", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/8fbfbcfd703de4b1ea9ed444a90993ac44fa3ab2", "committedDate": "2020-09-23T18:44:49Z", "message": "Support for enable-compression flag, set to false by default. Test updated.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "416ebe8d496c3afd6d7cf0116130992e2a03c50b", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/416ebe8d496c3afd6d7cf0116130992e2a03c50b", "committedDate": "2020-09-23T18:44:49Z", "message": "New functional test for HTTP compression in MP. Restored old Jersey test.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41c5a2a27692617f1aedb4362f39bc75c5f7f81e", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/41c5a2a27692617f1aedb4362f39bc75c5f7f81e", "committedDate": "2020-09-23T18:44:49Z", "message": "Some cleanup of pom and test files.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08fb8035198b7939e3c2ea4fd3e293c7d276e6e7", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/08fb8035198b7939e3c2ea4fd3e293c7d276e6e7", "committedDate": "2020-09-23T14:13:41Z", "message": "Some cleanup of pom and test files.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}, "afterCommit": {"oid": "41c5a2a27692617f1aedb4362f39bc75c5f7f81e", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/41c5a2a27692617f1aedb4362f39bc75c5f7f81e", "committedDate": "2020-09-23T18:44:49Z", "message": "Some cleanup of pom and test files.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2fc3c7e4be1d05158bf1d01bd605138e91b9cfb", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/c2fc3c7e4be1d05158bf1d01bd605138e91b9cfb", "committedDate": "2020-09-23T18:52:35Z", "message": "2334 webserver compression (#2)\n\n* Enable support for HTTP compression in the webserver. Netty provides support for gzip and deflate encodings. Some new tests to show how it works.\r\n\r\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>\r\n\r\n* Support for enable-compression flag, set to false by default. Test updated.\r\n\r\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>\r\n\r\n* New functional test for HTTP compression in MP. Restored old Jersey test.\r\n\r\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>\r\n\r\n* Some cleanup of pom and test files.\r\n\r\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>\r\n\r\n* Changes for new test support.\r\n\r\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>\r\n\r\nCo-authored-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20a4edb9ce50df4baa751211b58974b4a0d833b7", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/20a4edb9ce50df4baa751211b58974b4a0d833b7", "committedDate": "2020-09-23T19:40:57Z", "message": "Fixing some problems after a merge.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "524d634ccea6388bfde67de9aa21cc28ab0c2fe6", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/524d634ccea6388bfde67de9aa21cc28ab0c2fe6", "committedDate": "2020-09-23T19:41:37Z", "message": "Fixing some problems after a merge.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NTg1MjU3", "url": "https://github.com/oracle/helidon/pull/2379#pullrequestreview-495585257", "createdAt": "2020-09-24T13:42:43Z", "commit": {"oid": "524d634ccea6388bfde67de9aa21cc28ab0c2fe6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo0Mjo0M1rOHXbVcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo0Mjo0M1rOHXbVcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMyNzE1Mw==", "bodyText": "This method should be annotated with @Override and the javadoc is not necessary. If the javadoc is there, please add \"negotiation for compression for the default socket\"", "url": "https://github.com/oracle/helidon/pull/2379#discussion_r494327153", "createdAt": "2020-09-24T13:42:43Z", "author": {"login": "tomas-langer"}, "path": "webserver/webserver/src/main/java/io/helidon/webserver/WebServer.java", "diffHunk": "@@ -751,6 +751,17 @@ public Builder workersCount(int workers) {\n             return this;\n         }\n \n+        /**\n+         * Configure whether to enable content negotiation for compression.\n+         *\n+         * @param value compression flag\n+         * @return updated builder instance\n+         */\n+        public Builder enableCompression(boolean value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "524d634ccea6388bfde67de9aa21cc28ab0c2fe6"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "673eb04d9a1d6da2443710dbe419b250d643c79b", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/673eb04d9a1d6da2443710dbe419b250d643c79b", "committedDate": "2020-09-24T13:51:40Z", "message": "Fixed location and annotations on enableCompression method in builder.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NzAxNDA2", "url": "https://github.com/oracle/helidon/pull/2379#pullrequestreview-495701406", "createdAt": "2020-09-24T15:35:23Z", "commit": {"oid": "673eb04d9a1d6da2443710dbe419b250d643c79b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 467, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}