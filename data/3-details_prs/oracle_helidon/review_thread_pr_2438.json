{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNjExMzE4", "number": 2438, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozOToxNFrOEtYL8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozOToxNFrOEtYL8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MDE3NjUwOnYy", "diffSide": "RIGHT", "path": "microprofile/cdi/src/main/java/io/helidon/microprofile/cdi/HelidonContainerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwODozOToxNFrOHhIZCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODoyNDoxMFrOHhfoWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwMjUzOA==", "bodyText": "Probably not worth it but can be performing better when avoiding Throwable.fillInStackTrace()\n    if (LOGGER.isLoggable(Level.FINEST)) {\n        LOGGER.log(Level.FINEST, \"Invocation of container method during shutdown\",\n                new IllegalStateException(\"Container not running\"));\n    }", "url": "https://github.com/oracle/helidon/pull/2438#discussion_r504502538", "createdAt": "2020-10-14T08:39:14Z", "author": {"login": "danielkec"}, "path": "microprofile/cdi/src/main/java/io/helidon/microprofile/cdi/HelidonContainerImpl.java", "diffHunk": "@@ -399,10 +399,15 @@ public boolean isRunning() {\n \n         @Override\n         public BeanManager getBeanManager() {\n-            if (isRunning.get()) {\n-                return new BeanManagerProxy(beanManager());\n+            if (!isRunning.get()) {\n+                LOGGER.warning(\"BeanManager requested during container shutdown. This may be caused by observer methods \"\n+                                       + \"that use CDI.current(). Switch to finest logging to see stack trace.\");\n+                LOGGER.log(Level.FINEST,\n+                           \"Invocation of container method during shutdown\",\n+                           new IllegalStateException(\"Container not running\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df4fcf0ccb60bd76f6b462d71c4c337a4a31c83f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4MzI5MQ==", "bodyText": "Fixed", "url": "https://github.com/oracle/helidon/pull/2438#discussion_r504883291", "createdAt": "2020-10-14T18:24:10Z", "author": {"login": "tomas-langer"}, "path": "microprofile/cdi/src/main/java/io/helidon/microprofile/cdi/HelidonContainerImpl.java", "diffHunk": "@@ -399,10 +399,15 @@ public boolean isRunning() {\n \n         @Override\n         public BeanManager getBeanManager() {\n-            if (isRunning.get()) {\n-                return new BeanManagerProxy(beanManager());\n+            if (!isRunning.get()) {\n+                LOGGER.warning(\"BeanManager requested during container shutdown. This may be caused by observer methods \"\n+                                       + \"that use CDI.current(). Switch to finest logging to see stack trace.\");\n+                LOGGER.log(Level.FINEST,\n+                           \"Invocation of container method during shutdown\",\n+                           new IllegalStateException(\"Container not running\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwMjUzOA=="}, "originalCommit": {"oid": "df4fcf0ccb60bd76f6b462d71c4c337a4a31c83f"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 433, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}