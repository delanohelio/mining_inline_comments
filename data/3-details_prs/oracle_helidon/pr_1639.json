{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTA3NDI3", "number": 1639, "title": "Docs: Add custom runtime image guide, maven guide, gradle guide, refactored native image guide. ", "bodyText": "Add a new guide for custom runtime image creation (MP and SE)\nAdd new Maven and Gradle build guides. A little sparse for now, but it's a start.\nRefactor native image guide to document both SE and MP\nShares content between MP and SE document by putting common content under common and using include and properties to generate edition specific document.\nFixed some typos in WebServer javadocs.", "createdAt": "2020-04-14T00:36:30Z", "url": "https://github.com/oracle/helidon/pull/1639", "merged": true, "mergeCommit": {"oid": "d273bc69264de713bcfafba0d90463b72fe8bac0"}, "closed": true, "closedAt": "2020-04-22T19:54:47Z", "author": {"login": "barchetta"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXYXv0AH2gAyNDAyOTA3NDI3OjNlMGY2ODY5NjZkYWJlODgyMTJlYmNhMzAzZmNjOGRjMzA1YjBjMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYRwyCAFqTM5NDkzMTY0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3e0f686966dabe88212ebca303fcc8dc305b0c09", "author": {"user": {"login": "barchetta", "name": "Joe DiPol"}}, "url": "https://github.com/oracle/helidon/commit/3e0f686966dabe88212ebca303fcc8dc305b0c09", "committedDate": "2020-04-14T00:30:00Z", "message": "Add customer runtime image guide, refactored native image guide. Fixed some typos in webserver javadocs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0", "author": {"user": {"login": "barchetta", "name": "Joe DiPol"}}, "url": "https://github.com/oracle/helidon/commit/c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0", "committedDate": "2020-04-14T00:51:09Z", "message": "Fix copyright"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNTM2Mzc1", "url": "https://github.com/oracle/helidon/pull/1639#pullrequestreview-392536375", "createdAt": "2020-04-14T01:04:01Z", "commit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTA2NTQy", "url": "https://github.com/oracle/helidon/pull/1639#pullrequestreview-393106542", "createdAt": "2020-04-14T16:40:27Z", "commit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0MDoyN1rOGFXcow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0MDoyN1rOGFXcow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4MDIyNw==", "bodyText": "typo: mave -> maven", "url": "https://github.com/oracle/helidon/pull/1639#discussion_r408280227", "createdAt": "2020-04-14T16:40:27Z", "author": {"login": "batsatt"}, "path": "docs/common/guides/jlink_image.adoc", "diffHunk": "@@ -0,0 +1,207 @@\n+///////////////////////////////////////////////////////////////////////////////\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+///////////////////////////////////////////////////////////////////////////////\n+\n+= Custom Runtime Images with `jlink`\n+\n+// :description: Helidon Custom Runtime Images\n+// :keywords: helidon, guide, jlink, image\n+// :helidon-uc-edition: MP-or-SE\n+// :helidon-lc-edition: mp-or-se\n+// :docker-image-size: some-number\n+// :docker-multi-stage-url: https://docs.docker.com/develop/develop-images/multistage-build/\n+\n+This guide describes how to build a custom runtime image for your Helidon application\n+using Helidon's support for the JDK's `jlink` tool.\n+\n+== Introduction\n+\n+JDK 9 introduced the https://docs.oracle.com/en/java/javase/11/tools/jlink.html[`jlink`]\n+command that supports assembling a set of modules and their dependencies into a custom\n+runtime image. The `helidon-mave-plugin` has support for easily creating a custom runtime image for your", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTA3NTI0", "url": "https://github.com/oracle/helidon/pull/1639#pullrequestreview-393107524", "createdAt": "2020-04-14T16:41:43Z", "commit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0MTo0M1rOGFXfuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0MTo0M1rOGFXfuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4MTAxNw==", "bodyText": "maybe \"as well as how to build it in a Docker image\" ?", "url": "https://github.com/oracle/helidon/pull/1639#discussion_r408281017", "createdAt": "2020-04-14T16:41:43Z", "author": {"login": "batsatt"}, "path": "docs/common/guides/jlink_image.adoc", "diffHunk": "@@ -0,0 +1,207 @@\n+///////////////////////////////////////////////////////////////////////////////\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+///////////////////////////////////////////////////////////////////////////////\n+\n+= Custom Runtime Images with `jlink`\n+\n+// :description: Helidon Custom Runtime Images\n+// :keywords: helidon, guide, jlink, image\n+// :helidon-uc-edition: MP-or-SE\n+// :helidon-lc-edition: mp-or-se\n+// :docker-image-size: some-number\n+// :docker-multi-stage-url: https://docs.docker.com/develop/develop-images/multistage-build/\n+\n+This guide describes how to build a custom runtime image for your Helidon application\n+using Helidon's support for the JDK's `jlink` tool.\n+\n+== Introduction\n+\n+JDK 9 introduced the https://docs.oracle.com/en/java/javase/11/tools/jlink.html[`jlink`]\n+command that supports assembling a set of modules and their dependencies into a custom\n+runtime image. The `helidon-mave-plugin` has support for easily creating a custom runtime image for your\n+Helidon application resulting in a smaller, better performing runtime.\n+\n+In this guide you will learn how to build a custom runtime image locally on your machine,\n+as well as using Docker.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTA5MDEx", "url": "https://github.com/oracle/helidon/pull/1639#pullrequestreview-393109011", "createdAt": "2020-04-14T16:43:36Z", "commit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0MzozNlrOGFXkkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0MzozNlrOGFXkkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4MjI1Ng==", "bodyText": "This might give the impression that we're going to use jlink directly; how about just java -version.", "url": "https://github.com/oracle/helidon/pull/1639#discussion_r408282256", "createdAt": "2020-04-14T16:43:36Z", "author": {"login": "batsatt"}, "path": "docs/common/guides/jlink_image.adoc", "diffHunk": "@@ -0,0 +1,207 @@\n+///////////////////////////////////////////////////////////////////////////////\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+///////////////////////////////////////////////////////////////////////////////\n+\n+= Custom Runtime Images with `jlink`\n+\n+// :description: Helidon Custom Runtime Images\n+// :keywords: helidon, guide, jlink, image\n+// :helidon-uc-edition: MP-or-SE\n+// :helidon-lc-edition: mp-or-se\n+// :docker-image-size: some-number\n+// :docker-multi-stage-url: https://docs.docker.com/develop/develop-images/multistage-build/\n+\n+This guide describes how to build a custom runtime image for your Helidon application\n+using Helidon's support for the JDK's `jlink` tool.\n+\n+== Introduction\n+\n+JDK 9 introduced the https://docs.oracle.com/en/java/javase/11/tools/jlink.html[`jlink`]\n+command that supports assembling a set of modules and their dependencies into a custom\n+runtime image. The `helidon-mave-plugin` has support for easily creating a custom runtime image for your\n+Helidon application resulting in a smaller, better performing runtime.\n+\n+In this guide you will learn how to build a custom runtime image locally on your machine,\n+as well as using Docker.\n+\n+== What You Need\n+\n+|===\n+|About 10 minutes\n+| <<about/03_prerequisites.adoc,Helidon Prerequisites>>\n+|===\n+\n+== Verify Java 11 or Newer\n+\n+[source,bash]\n+----\n+$JAVA_HOME/bin/jlink --version", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTEwMTg5", "url": "https://github.com/oracle/helidon/pull/1639#pullrequestreview-393110189", "createdAt": "2020-04-14T16:45:04Z", "commit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0NTowNFrOGFXoZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0NTowNFrOGFXoZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4MzIzNg==", "bodyText": "typo: you -> you'd", "url": "https://github.com/oracle/helidon/pull/1639#discussion_r408283236", "createdAt": "2020-04-14T16:45:04Z", "author": {"login": "batsatt"}, "path": "docs/common/guides/jlink_image.adoc", "diffHunk": "@@ -0,0 +1,207 @@\n+///////////////////////////////////////////////////////////////////////////////\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+///////////////////////////////////////////////////////////////////////////////\n+\n+= Custom Runtime Images with `jlink`\n+\n+// :description: Helidon Custom Runtime Images\n+// :keywords: helidon, guide, jlink, image\n+// :helidon-uc-edition: MP-or-SE\n+// :helidon-lc-edition: mp-or-se\n+// :docker-image-size: some-number\n+// :docker-multi-stage-url: https://docs.docker.com/develop/develop-images/multistage-build/\n+\n+This guide describes how to build a custom runtime image for your Helidon application\n+using Helidon's support for the JDK's `jlink` tool.\n+\n+== Introduction\n+\n+JDK 9 introduced the https://docs.oracle.com/en/java/javase/11/tools/jlink.html[`jlink`]\n+command that supports assembling a set of modules and their dependencies into a custom\n+runtime image. The `helidon-mave-plugin` has support for easily creating a custom runtime image for your\n+Helidon application resulting in a smaller, better performing runtime.\n+\n+In this guide you will learn how to build a custom runtime image locally on your machine,\n+as well as using Docker.\n+\n+== What You Need\n+\n+|===\n+|About 10 minutes\n+| <<about/03_prerequisites.adoc,Helidon Prerequisites>>\n+|===\n+\n+== Verify Java 11 or Newer\n+\n+[source,bash]\n+----\n+$JAVA_HOME/bin/jlink --version\n+----\n+\n+== Generate The Project\n+\n+Generate the project using the Helidon {helidon-uc-edition} Quickstart Maven archetype.\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+mvn archetype:generate -DinteractiveMode=false \\\n+    -DarchetypeGroupId=io.helidon.archetypes \\\n+    -DarchetypeArtifactId=helidon-quickstart-{helidon-lc-edition} \\\n+    -DarchetypeVersion={helidon-version} \\\n+    -DgroupId=io.helidon.examples \\\n+    -DartifactId=helidon-quickstart-{helidon-lc-edition} \\\n+    -Dpackage=io.helidon.examples.quickstart.{helidon-lc-edition}\n+----\n+\n+The archetype generates a Maven project in your current directory\n+(for example, `helidon-quickstart-{helidon-lc-edition}`). Change into this directory and build.\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+cd helidon-quickstart-{helidon-lc-edition}\n+mvn package\n+----\n+\n+At this point you can run the application using the JVM:\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+java -jar target/helidon-quickstart-{helidon-lc-edition}.jar\n+----\n+\n+In another shell test an endpoint:\n+\n+[source,bash]\n+----\n+curl -X GET http://localhost:8080/greet\n+----\n+\n+The application should respond with `{\"message\":\"Hello World!\"}`\n+\n+Now stop the running application (by pressing Ctrl+C).\n+\n+For more information about the Quickstart application and other enpoints it supports see the\n+<<{helidon-lc-edition}/guides/02_quickstart.adoc,Helidon {helidon-uc-edition} quickstart Guide>>.\n+\n+== Building a Custom Runtime Image\n+\n+You can build a custom runtime image in 2 different ways:\n+\n+* Locally, on your desktop\n+* Using Docker\n+\n+=== Local build\n+\n+Build the custom runtime image using the jlink image profile:\n+\n+[source,bash]\n+----\n+mvn package -Pjlink-image\n+----\n+\n+[TIP]\n+This uses the `helidon-maven-plugin` to perform the custom image generation.\n+\n+After the build completes it will report some statistics about the build including\n+the reduction in image size.\n+\n+The `target/helidon-quickstart-{helidon-lc-edition}` directory is a self contained\n+custom image of your application. It contains your application, its runtime\n+dependencies and the JDK modules it depends on. You can start your application\n+using the provide\n+`start` script:\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+./target/helidon-quickstart-{helidon-lc-edition}/bin/start\n+----\n+\n+=== Class Data Sharing (CDS) Archive\n+\n+Aslo included in the custom image is a Class Data Sharing (CDS) archive that\n+improves your application's startup performance and in-memory footprint.\n+You can learn more about Class Data Sharing in the\n+https://docs.oracle.com/en/java/javase/11/vm/class-data-sharing.html[JDK documentation].\n+\n+The CDS archive increases your image size to get these performance optimizations.\n+It can be of significant size (tens of MB). The size of the CDS archive is\n+reported at the end of the build output.\n+\n+If you rather have a smaller image size (with a slightly increased startup time) you", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "originalPosition": 144}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTEyNTY1", "url": "https://github.com/oracle/helidon/pull/1639#pullrequestreview-393112565", "createdAt": "2020-04-14T16:48:09Z", "commit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0ODowOVrOGFXv1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo0ODowOVrOGFXv1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4NTE0MQ==", "bodyText": "I think it would also be worth showing passing script arguments, e.g. --test or --help just so it is clear how it is done, (and maybe that the port mappings isn't required).", "url": "https://github.com/oracle/helidon/pull/1639#discussion_r408285141", "createdAt": "2020-04-14T16:48:09Z", "author": {"login": "batsatt"}, "path": "docs/common/guides/jlink_image.adoc", "diffHunk": "@@ -0,0 +1,207 @@\n+///////////////////////////////////////////////////////////////////////////////\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+///////////////////////////////////////////////////////////////////////////////\n+\n+= Custom Runtime Images with `jlink`\n+\n+// :description: Helidon Custom Runtime Images\n+// :keywords: helidon, guide, jlink, image\n+// :helidon-uc-edition: MP-or-SE\n+// :helidon-lc-edition: mp-or-se\n+// :docker-image-size: some-number\n+// :docker-multi-stage-url: https://docs.docker.com/develop/develop-images/multistage-build/\n+\n+This guide describes how to build a custom runtime image for your Helidon application\n+using Helidon's support for the JDK's `jlink` tool.\n+\n+== Introduction\n+\n+JDK 9 introduced the https://docs.oracle.com/en/java/javase/11/tools/jlink.html[`jlink`]\n+command that supports assembling a set of modules and their dependencies into a custom\n+runtime image. The `helidon-mave-plugin` has support for easily creating a custom runtime image for your\n+Helidon application resulting in a smaller, better performing runtime.\n+\n+In this guide you will learn how to build a custom runtime image locally on your machine,\n+as well as using Docker.\n+\n+== What You Need\n+\n+|===\n+|About 10 minutes\n+| <<about/03_prerequisites.adoc,Helidon Prerequisites>>\n+|===\n+\n+== Verify Java 11 or Newer\n+\n+[source,bash]\n+----\n+$JAVA_HOME/bin/jlink --version\n+----\n+\n+== Generate The Project\n+\n+Generate the project using the Helidon {helidon-uc-edition} Quickstart Maven archetype.\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+mvn archetype:generate -DinteractiveMode=false \\\n+    -DarchetypeGroupId=io.helidon.archetypes \\\n+    -DarchetypeArtifactId=helidon-quickstart-{helidon-lc-edition} \\\n+    -DarchetypeVersion={helidon-version} \\\n+    -DgroupId=io.helidon.examples \\\n+    -DartifactId=helidon-quickstart-{helidon-lc-edition} \\\n+    -Dpackage=io.helidon.examples.quickstart.{helidon-lc-edition}\n+----\n+\n+The archetype generates a Maven project in your current directory\n+(for example, `helidon-quickstart-{helidon-lc-edition}`). Change into this directory and build.\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+cd helidon-quickstart-{helidon-lc-edition}\n+mvn package\n+----\n+\n+At this point you can run the application using the JVM:\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+java -jar target/helidon-quickstart-{helidon-lc-edition}.jar\n+----\n+\n+In another shell test an endpoint:\n+\n+[source,bash]\n+----\n+curl -X GET http://localhost:8080/greet\n+----\n+\n+The application should respond with `{\"message\":\"Hello World!\"}`\n+\n+Now stop the running application (by pressing Ctrl+C).\n+\n+For more information about the Quickstart application and other enpoints it supports see the\n+<<{helidon-lc-edition}/guides/02_quickstart.adoc,Helidon {helidon-uc-edition} quickstart Guide>>.\n+\n+== Building a Custom Runtime Image\n+\n+You can build a custom runtime image in 2 different ways:\n+\n+* Locally, on your desktop\n+* Using Docker\n+\n+=== Local build\n+\n+Build the custom runtime image using the jlink image profile:\n+\n+[source,bash]\n+----\n+mvn package -Pjlink-image\n+----\n+\n+[TIP]\n+This uses the `helidon-maven-plugin` to perform the custom image generation.\n+\n+After the build completes it will report some statistics about the build including\n+the reduction in image size.\n+\n+The `target/helidon-quickstart-{helidon-lc-edition}` directory is a self contained\n+custom image of your application. It contains your application, its runtime\n+dependencies and the JDK modules it depends on. You can start your application\n+using the provide\n+`start` script:\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+./target/helidon-quickstart-{helidon-lc-edition}/bin/start\n+----\n+\n+=== Class Data Sharing (CDS) Archive\n+\n+Aslo included in the custom image is a Class Data Sharing (CDS) archive that\n+improves your application's startup performance and in-memory footprint.\n+You can learn more about Class Data Sharing in the\n+https://docs.oracle.com/en/java/javase/11/vm/class-data-sharing.html[JDK documentation].\n+\n+The CDS archive increases your image size to get these performance optimizations.\n+It can be of significant size (tens of MB). The size of the CDS archive is\n+reported at the end of the build output.\n+\n+If you rather have a smaller image size (with a slightly increased startup time) you\n+can skip the creation of the CDS archive by executing your build like this:\n+\n+[source,bash]\n+----\n+mvn package -Pjlink-image -Djlink.image.addClassDataSharingArchive=false\n+----\n+\n+For more information see the\n+https://github.com/oracle/helidon-build-tools/tree/master/helidon-maven-plugin[`helidon-maven-plugin` documentation].\n+\n+=== Multi-stage Docker build\n+\n+To build a Docker image with a custom Java runtime image use the jlink\n+Dockerfile included with the quickstart.\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+docker build -t helidon-quickstart-{helidon-lc-edition}-jlink -f Dockerfile.jlink .\n+----\n+\n+[TIP]\n+This does a full build inside the Docker container. The first\n+time you run it, it will take a while because it is downloading all\n+of the Maven dependencies and caching them in a Docker layer.\n+Subsequent builds will be much faster as long as you don't change\n+the `pom.xml` file. If the pom is modified then the dependencies\n+will be re-downloaded.\n+\n+Start the application:\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+docker run --rm -p 8080:8080 helidon-quickstart-{helidon-lc-edition}-jlink:latest\n+----\n+\n+You can exercise the application's endpoints as before.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "originalPosition": 180}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTE0OTI2", "url": "https://github.com/oracle/helidon/pull/1639#pullrequestreview-393114926", "createdAt": "2020-04-14T16:51:04Z", "commit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo1MTowNVrOGFX3bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjo1MTowNVrOGFX3bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4NzA4NA==", "bodyText": "Did you mean does include the CDS archive? If not, you should clarify that this isn't the image just built above.", "url": "https://github.com/oracle/helidon/pull/1639#discussion_r408287084", "createdAt": "2020-04-14T16:51:05Z", "author": {"login": "batsatt"}, "path": "docs/common/guides/jlink_image.adoc", "diffHunk": "@@ -0,0 +1,207 @@\n+///////////////////////////////////////////////////////////////////////////////\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+///////////////////////////////////////////////////////////////////////////////\n+\n+= Custom Runtime Images with `jlink`\n+\n+// :description: Helidon Custom Runtime Images\n+// :keywords: helidon, guide, jlink, image\n+// :helidon-uc-edition: MP-or-SE\n+// :helidon-lc-edition: mp-or-se\n+// :docker-image-size: some-number\n+// :docker-multi-stage-url: https://docs.docker.com/develop/develop-images/multistage-build/\n+\n+This guide describes how to build a custom runtime image for your Helidon application\n+using Helidon's support for the JDK's `jlink` tool.\n+\n+== Introduction\n+\n+JDK 9 introduced the https://docs.oracle.com/en/java/javase/11/tools/jlink.html[`jlink`]\n+command that supports assembling a set of modules and their dependencies into a custom\n+runtime image. The `helidon-mave-plugin` has support for easily creating a custom runtime image for your\n+Helidon application resulting in a smaller, better performing runtime.\n+\n+In this guide you will learn how to build a custom runtime image locally on your machine,\n+as well as using Docker.\n+\n+== What You Need\n+\n+|===\n+|About 10 minutes\n+| <<about/03_prerequisites.adoc,Helidon Prerequisites>>\n+|===\n+\n+== Verify Java 11 or Newer\n+\n+[source,bash]\n+----\n+$JAVA_HOME/bin/jlink --version\n+----\n+\n+== Generate The Project\n+\n+Generate the project using the Helidon {helidon-uc-edition} Quickstart Maven archetype.\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+mvn archetype:generate -DinteractiveMode=false \\\n+    -DarchetypeGroupId=io.helidon.archetypes \\\n+    -DarchetypeArtifactId=helidon-quickstart-{helidon-lc-edition} \\\n+    -DarchetypeVersion={helidon-version} \\\n+    -DgroupId=io.helidon.examples \\\n+    -DartifactId=helidon-quickstart-{helidon-lc-edition} \\\n+    -Dpackage=io.helidon.examples.quickstart.{helidon-lc-edition}\n+----\n+\n+The archetype generates a Maven project in your current directory\n+(for example, `helidon-quickstart-{helidon-lc-edition}`). Change into this directory and build.\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+cd helidon-quickstart-{helidon-lc-edition}\n+mvn package\n+----\n+\n+At this point you can run the application using the JVM:\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+java -jar target/helidon-quickstart-{helidon-lc-edition}.jar\n+----\n+\n+In another shell test an endpoint:\n+\n+[source,bash]\n+----\n+curl -X GET http://localhost:8080/greet\n+----\n+\n+The application should respond with `{\"message\":\"Hello World!\"}`\n+\n+Now stop the running application (by pressing Ctrl+C).\n+\n+For more information about the Quickstart application and other enpoints it supports see the\n+<<{helidon-lc-edition}/guides/02_quickstart.adoc,Helidon {helidon-uc-edition} quickstart Guide>>.\n+\n+== Building a Custom Runtime Image\n+\n+You can build a custom runtime image in 2 different ways:\n+\n+* Locally, on your desktop\n+* Using Docker\n+\n+=== Local build\n+\n+Build the custom runtime image using the jlink image profile:\n+\n+[source,bash]\n+----\n+mvn package -Pjlink-image\n+----\n+\n+[TIP]\n+This uses the `helidon-maven-plugin` to perform the custom image generation.\n+\n+After the build completes it will report some statistics about the build including\n+the reduction in image size.\n+\n+The `target/helidon-quickstart-{helidon-lc-edition}` directory is a self contained\n+custom image of your application. It contains your application, its runtime\n+dependencies and the JDK modules it depends on. You can start your application\n+using the provide\n+`start` script:\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+./target/helidon-quickstart-{helidon-lc-edition}/bin/start\n+----\n+\n+=== Class Data Sharing (CDS) Archive\n+\n+Aslo included in the custom image is a Class Data Sharing (CDS) archive that\n+improves your application's startup performance and in-memory footprint.\n+You can learn more about Class Data Sharing in the\n+https://docs.oracle.com/en/java/javase/11/vm/class-data-sharing.html[JDK documentation].\n+\n+The CDS archive increases your image size to get these performance optimizations.\n+It can be of significant size (tens of MB). The size of the CDS archive is\n+reported at the end of the build output.\n+\n+If you rather have a smaller image size (with a slightly increased startup time) you\n+can skip the creation of the CDS archive by executing your build like this:\n+\n+[source,bash]\n+----\n+mvn package -Pjlink-image -Djlink.image.addClassDataSharingArchive=false\n+----\n+\n+For more information see the\n+https://github.com/oracle/helidon-build-tools/tree/master/helidon-maven-plugin[`helidon-maven-plugin` documentation].\n+\n+=== Multi-stage Docker build\n+\n+To build a Docker image with a custom Java runtime image use the jlink\n+Dockerfile included with the quickstart.\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+docker build -t helidon-quickstart-{helidon-lc-edition}-jlink -f Dockerfile.jlink .\n+----\n+\n+[TIP]\n+This does a full build inside the Docker container. The first\n+time you run it, it will take a while because it is downloading all\n+of the Maven dependencies and caching them in a Docker layer.\n+Subsequent builds will be much faster as long as you don't change\n+the `pom.xml` file. If the pom is modified then the dependencies\n+will be re-downloaded.\n+\n+Start the application:\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+docker run --rm -p 8080:8080 helidon-quickstart-{helidon-lc-edition}-jlink:latest\n+----\n+\n+You can exercise the application's endpoints as before.\n+\n+== How small is this?\n+\n+Let's take a look at the Docker image for a custom runtime that does\n+not include the CDS archive:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "originalPosition": 185}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTIxMDY3", "url": "https://github.com/oracle/helidon/pull/1639#pullrequestreview-393121067", "createdAt": "2020-04-14T16:58:32Z", "commit": {"oid": "c7f85f5e8bad0084ad04b2db88c2d0c813a6b5a0"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ec64a3a716bd2b2eb0e4efd4a2edc977dcadc63", "author": {"user": {"login": "barchetta", "name": "Joe DiPol"}}, "url": "https://github.com/oracle/helidon/commit/8ec64a3a716bd2b2eb0e4efd4a2edc977dcadc63", "committedDate": "2020-04-14T20:00:17Z", "message": "Docs: change edition attributes to flavor. Tweak some wording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71dd51765a8b9267fd4751e2a0d01949da8d21f6", "author": {"user": {"login": "barchetta", "name": "Joe DiPol"}}, "url": "https://github.com/oracle/helidon/commit/71dd51765a8b9267fd4751e2a0d01949da8d21f6", "committedDate": "2020-04-15T16:52:24Z", "message": "Merge branch 'master' into jlink-docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05e0b9eeb61b26b733e45b9fa40864e9974a0a7e", "author": {"user": {"login": "barchetta", "name": "Joe DiPol"}}, "url": "https://github.com/oracle/helidon/commit/05e0b9eeb61b26b733e45b9fa40864e9974a0a7e", "committedDate": "2020-04-15T20:02:33Z", "message": "Add gradle and maven guides. Update jlink guide based on feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MjExNzQw", "url": "https://github.com/oracle/helidon/pull/1639#pullrequestreview-394211740", "createdAt": "2020-04-15T23:55:55Z", "commit": {"oid": "05e0b9eeb61b26b733e45b9fa40864e9974a0a7e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMzo1NTo1NVrOGGPpOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMzo1NTo1NVrOGGPpOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIwMDk1NQ==", "bodyText": "Since those docs also say to add a profile, which would be confusing here since it is already present, maybe say \"For more information on available configuration options see the\"", "url": "https://github.com/oracle/helidon/pull/1639#discussion_r409200955", "createdAt": "2020-04-15T23:55:55Z", "author": {"login": "batsatt"}, "path": "docs/common/guides/jlink_image.adoc", "diffHunk": "@@ -0,0 +1,188 @@\n+///////////////////////////////////////////////////////////////////////////////\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+///////////////////////////////////////////////////////////////////////////////\n+\n+= Custom Runtime Images with `jlink`\n+\n+// :description: Helidon Custom Runtime Images\n+// :keywords: helidon, guide, jlink, image\n+// :helidon-uc-flavor: MP-or-SE\n+// :helidon-lc-flavor: mp-or-se\n+// :docker-multi-stage-url: https://docs.docker.com/develop/develop-images/multistage-build/\n+\n+This guide describes how to build a custom runtime image for your Helidon application\n+using Helidon's support for the JDK's `jlink` tool.\n+\n+== Introduction\n+\n+JDK 9 introduced the https://docs.oracle.com/en/java/javase/11/tools/jlink.html[`jlink`]\n+command that supports assembling a set of modules and their dependencies into a custom\n+runtime image. The `helidon-maven-plugin` has support for easily creating a custom runtime image for your\n+Helidon application resulting in a smaller, better performing runtime.\n+\n+In this guide you will learn how to build a custom runtime image locally on your machine,\n+as well as how to build it in a Docker image.\n+\n+== What You Need\n+\n+|===\n+|About 10 minutes\n+| <<about/03_prerequisites.adoc,Helidon Prerequisites>>\n+|===\n+\n+== Verify Java 11 or Newer\n+\n+[source,bash]\n+----\n+$JAVA_HOME/bin/java --version\n+----\n+\n+== Generate The Project\n+\n+Generate the project using the Helidon {helidon-uc-flavor} Quickstart Maven archetype.\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+mvn archetype:generate -DinteractiveMode=false \\\n+    -DarchetypeGroupId=io.helidon.archetypes \\\n+    -DarchetypeArtifactId=helidon-quickstart-{helidon-lc-flavor} \\\n+    -DarchetypeVersion={helidon-version} \\\n+    -DgroupId=io.helidon.examples \\\n+    -DartifactId=helidon-quickstart-{helidon-lc-flavor} \\\n+    -Dpackage=io.helidon.examples.quickstart.{helidon-lc-flavor}\n+----\n+\n+The archetype generates a Maven project in your current directory\n+(for example, `helidon-quickstart-{helidon-lc-flavor}`). Change into this directory and build.\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+cd helidon-quickstart-{helidon-lc-flavor}\n+mvn package\n+----\n+\n+At this point you can run the application using the JVM:\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+java -jar target/helidon-quickstart-{helidon-lc-flavor}.jar\n+----\n+\n+In another shell test an endpoint:\n+\n+[source,bash]\n+----\n+curl -X GET http://localhost:8080/greet\n+----\n+\n+The application should respond with `{\"message\":\"Hello World!\"}`\n+\n+Now stop the running application (by pressing Ctrl+C).\n+\n+For more information about the Quickstart application and other enpoints it supports see the\n+<<{helidon-lc-flavor}/guides/02_quickstart.adoc,Helidon {helidon-uc-flavor} quickstart Guide>>.\n+\n+== Building a Custom Runtime Image\n+\n+You can build a custom runtime image in 2 different ways:\n+\n+* Locally, on your desktop\n+* Using Docker\n+\n+=== Local build\n+\n+Build the custom runtime image using the jlink image profile:\n+\n+[source,bash]\n+----\n+mvn package -Pjlink-image\n+----\n+\n+[TIP]\n+This uses the `helidon-maven-plugin` to perform the custom image generation.\n+\n+After the build completes it will report some statistics about the build including\n+the reduction in image size.\n+\n+The `target/helidon-quickstart-{helidon-lc-flavor}` directory is a self contained\n+custom image of your application. It contains your application, its runtime\n+dependencies and the JDK modules it depends on. You can start your application\n+using the provide\n+`start` script:\n+\n+[source,bash,subs=\"attributes+\"]\n+----\n+./target/helidon-quickstart-{helidon-lc-flavor}/bin/start\n+----\n+\n+=== Class Data Sharing (CDS) Archive\n+\n+Aslo included in the custom image is a Class Data Sharing (CDS) archive that\n+improves your application's startup performance and in-memory footprint.\n+You can learn more about Class Data Sharing in the\n+https://docs.oracle.com/en/java/javase/11/vm/class-data-sharing.html[JDK documentation].\n+\n+The CDS archive increases your image size to get these performance optimizations.\n+It can be of significant size (tens of MB). The size of the CDS archive is\n+reported at the end of the build output.\n+\n+If you'd rather have a smaller image size (with a slightly increased startup time) you\n+can skip the creation of the CDS archive by executing your build like this:\n+\n+[source,bash]\n+----\n+mvn package -Pjlink-image -Djlink.image.addClassDataSharingArchive=false\n+----\n+\n+For more information see the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05e0b9eeb61b26b733e45b9fa40864e9974a0a7e"}, "originalPosition": 151}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f65995830adc6e28cce981a9879f3110e24dc253", "author": {"user": {"login": "barchetta", "name": "Joe DiPol"}}, "url": "https://github.com/oracle/helidon/commit/f65995830adc6e28cce981a9879f3110e24dc253", "committedDate": "2020-04-16T00:28:44Z", "message": "Adjust wording"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MjczNDY5", "url": "https://github.com/oracle/helidon/pull/1639#pullrequestreview-394273469", "createdAt": "2020-04-16T03:24:01Z", "commit": {"oid": "f65995830adc6e28cce981a9879f3110e24dc253"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c583e0656a4a011a363906427504287dbe59fe49", "author": {"user": {"login": "barchetta", "name": "Joe DiPol"}}, "url": "https://github.com/oracle/helidon/commit/c583e0656a4a011a363906427504287dbe59fe49", "committedDate": "2020-04-16T19:13:52Z", "message": "Update maven build guid"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0OTMxNjQw", "url": "https://github.com/oracle/helidon/pull/1639#pullrequestreview-394931640", "createdAt": "2020-04-16T19:21:56Z", "commit": {"oid": "c583e0656a4a011a363906427504287dbe59fe49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 715, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}