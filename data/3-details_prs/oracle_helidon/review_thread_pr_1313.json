{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MTQxNjg2", "number": 1313, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMDoyMjozMFrODY_gvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMDozMTozNVrODY_hrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTMyOTkwOnYy", "diffSide": "RIGHT", "path": "examples/microprofile/idcs/src/main/java/io/helidon/examples/microprofile/security/idcs/IdcsMain.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMDoyMjozMFrOFfKVtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwOTo1NTozOVrOFfYzTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTU3NQ==", "bodyText": "shouldn't the string be rendered from the frontend URI in application.yaml?", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368219575", "createdAt": "2020-01-18T10:22:30Z", "author": {"login": "FWiesner"}, "path": "examples/microprofile/idcs/src/main/java/io/helidon/examples/microprofile/security/idcs/IdcsMain.java", "diffHunk": "@@ -35,13 +34,16 @@ private IdcsMain() {\n      * @throws IOException when logging configuration fails\n      */\n     public static void main(String[] args) throws IOException {\n-        LogManager.getLogManager().readConfiguration(IdcsMain.class.getResourceAsStream(\"/logging.properties\"));\n         Server.create().start();\n \n         System.out.println(\"Endpoints:\");\n         System.out.println(\"Login\");\n         System.out.println(\"  http://localhost:7987/rest/login\");\n         System.out.println(\"Full security with scopes and roles (see IdcsResource.java)\");\n         System.out.println(\"  http://localhost:7987/rest/scopes\");\n+        System.out.println(\"A protected reactive service (see application.yaml - security.web-server)\");\n+        System.out.println(\"  http://localhost:7987/reactive\");\n+        System.out.println(\"A protected static resource (see application.yaml - security.web-server\");\n+        System.out.println(\"  http://localhost:7987/web/resource.html\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c60358bfc2cbfe6705b9c97128174cc6723edb3"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1NjUyNg==", "bodyText": "That is a possibility, though these printouts are really for the sake of the example. In a real application sitting in a container, such messages are useless. So I expect them to be removed.", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368456526", "createdAt": "2020-01-20T09:55:39Z", "author": {"login": "tomas-langer"}, "path": "examples/microprofile/idcs/src/main/java/io/helidon/examples/microprofile/security/idcs/IdcsMain.java", "diffHunk": "@@ -35,13 +34,16 @@ private IdcsMain() {\n      * @throws IOException when logging configuration fails\n      */\n     public static void main(String[] args) throws IOException {\n-        LogManager.getLogManager().readConfiguration(IdcsMain.class.getResourceAsStream(\"/logging.properties\"));\n         Server.create().start();\n \n         System.out.println(\"Endpoints:\");\n         System.out.println(\"Login\");\n         System.out.println(\"  http://localhost:7987/rest/login\");\n         System.out.println(\"Full security with scopes and roles (see IdcsResource.java)\");\n         System.out.println(\"  http://localhost:7987/rest/scopes\");\n+        System.out.println(\"A protected reactive service (see application.yaml - security.web-server)\");\n+        System.out.println(\"  http://localhost:7987/reactive\");\n+        System.out.println(\"A protected static resource (see application.yaml - security.web-server\");\n+        System.out.println(\"  http://localhost:7987/web/resource.html\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTU3NQ=="}, "originalCommit": {"oid": "6c60358bfc2cbfe6705b9c97128174cc6723edb3"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTMzMjI5OnYy", "diffSide": "RIGHT", "path": "security/providers/oidc-common/src/main/java/io/helidon/security/providers/oidc/common/OidcConfig.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMDozMTozNVrOFfKW3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNzozMjowNVrOFflZVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA==", "bodyText": "I think the change in the defaults makes sense with Oracle-apps that use IDCS. Nevertheless I would add a textual warning on startup that the cookie policy is now Lax instead of Strict. The developer might then want to turn off the warning or change to Strict, if possible. I wouldn't do this as undocumented/unalerted change. Certainly this has to go into the release notes as well", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368219870", "createdAt": "2020-01-18T10:31:35Z", "author": {"login": "FWiesner"}, "path": "security/providers/oidc-common/src/main/java/io/helidon/security/providers/oidc/common/OidcConfig.java", "diffHunk": "@@ -260,7 +262,7 @@\n     static final String DEFAULT_COOKIE_PATH = \"/\";\n     static final boolean DEFAULT_COOKIE_HTTP_ONLY = true;\n     static final boolean DEFAULT_COOKIE_SECURE = false;\n-    static final String DEFAULT_COOKIE_SAME_SITE = \"Strict\";\n+    static final String DEFAULT_COOKIE_SAME_SITE = \"Lax\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c60358bfc2cbfe6705b9c97128174cc6723edb3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1NjgxOA==", "bodyText": "You are right", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368456818", "createdAt": "2020-01-20T09:56:10Z", "author": {"login": "tomas-langer"}, "path": "security/providers/oidc-common/src/main/java/io/helidon/security/providers/oidc/common/OidcConfig.java", "diffHunk": "@@ -260,7 +262,7 @@\n     static final String DEFAULT_COOKIE_PATH = \"/\";\n     static final boolean DEFAULT_COOKIE_HTTP_ONLY = true;\n     static final boolean DEFAULT_COOKIE_SECURE = false;\n-    static final String DEFAULT_COOKIE_SAME_SITE = \"Strict\";\n+    static final String DEFAULT_COOKIE_SAME_SITE = \"Lax\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA=="}, "originalCommit": {"oid": "6c60358bfc2cbfe6705b9c97128174cc6723edb3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ1NzIxMg==", "bodyText": "Although this problem is not specific to IDCS, it happens with any OIDC provider.", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368457212", "createdAt": "2020-01-20T09:56:48Z", "author": {"login": "tomas-langer"}, "path": "security/providers/oidc-common/src/main/java/io/helidon/security/providers/oidc/common/OidcConfig.java", "diffHunk": "@@ -260,7 +262,7 @@\n     static final String DEFAULT_COOKIE_PATH = \"/\";\n     static final boolean DEFAULT_COOKIE_HTTP_ONLY = true;\n     static final boolean DEFAULT_COOKIE_SECURE = false;\n-    static final String DEFAULT_COOKIE_SAME_SITE = \"Strict\";\n+    static final String DEFAULT_COOKIE_SAME_SITE = \"Lax\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA=="}, "originalCommit": {"oid": "6c60358bfc2cbfe6705b9c97128174cc6723edb3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ2MDY1Mw==", "bodyText": "For version 2.0 I will document this in changelog. For version 1.x I will add a warning message.", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368460653", "createdAt": "2020-01-20T10:03:26Z", "author": {"login": "tomas-langer"}, "path": "security/providers/oidc-common/src/main/java/io/helidon/security/providers/oidc/common/OidcConfig.java", "diffHunk": "@@ -260,7 +262,7 @@\n     static final String DEFAULT_COOKIE_PATH = \"/\";\n     static final boolean DEFAULT_COOKIE_HTTP_ONLY = true;\n     static final boolean DEFAULT_COOKIE_SECURE = false;\n-    static final String DEFAULT_COOKIE_SAME_SITE = \"Strict\";\n+    static final String DEFAULT_COOKIE_SAME_SITE = \"Lax\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA=="}, "originalCommit": {"oid": "6c60358bfc2cbfe6705b9c97128174cc6723edb3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ2NjE1Mg==", "bodyText": "Although this problem is not specific to IDCS, it happens with any OIDC provider.\n\nany OIDC provider that is on a separate domain", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368466152", "createdAt": "2020-01-20T10:14:18Z", "author": {"login": "FWiesner"}, "path": "security/providers/oidc-common/src/main/java/io/helidon/security/providers/oidc/common/OidcConfig.java", "diffHunk": "@@ -260,7 +262,7 @@\n     static final String DEFAULT_COOKIE_PATH = \"/\";\n     static final boolean DEFAULT_COOKIE_HTTP_ONLY = true;\n     static final boolean DEFAULT_COOKIE_SECURE = false;\n-    static final String DEFAULT_COOKIE_SAME_SITE = \"Strict\";\n+    static final String DEFAULT_COOKIE_SAME_SITE = \"Lax\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA=="}, "originalCommit": {"oid": "6c60358bfc2cbfe6705b9c97128174cc6723edb3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODU0MDQ0Ng==", "bodyText": "True. Maybe I should be more clever about it and just compare frontend host with the host of the OIDC provider?", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368540446", "createdAt": "2020-01-20T13:13:45Z", "author": {"login": "tomas-langer"}, "path": "security/providers/oidc-common/src/main/java/io/helidon/security/providers/oidc/common/OidcConfig.java", "diffHunk": "@@ -260,7 +262,7 @@\n     static final String DEFAULT_COOKIE_PATH = \"/\";\n     static final boolean DEFAULT_COOKIE_HTTP_ONLY = true;\n     static final boolean DEFAULT_COOKIE_SECURE = false;\n-    static final String DEFAULT_COOKIE_SAME_SITE = \"Strict\";\n+    static final String DEFAULT_COOKIE_SAME_SITE = \"Lax\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA=="}, "originalCommit": {"oid": "6c60358bfc2cbfe6705b9c97128174cc6723edb3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY2Mjg2OQ==", "bodyText": "Done and logging an info in case this is triggered.", "url": "https://github.com/oracle/helidon/pull/1313#discussion_r368662869", "createdAt": "2020-01-20T17:32:05Z", "author": {"login": "tomas-langer"}, "path": "security/providers/oidc-common/src/main/java/io/helidon/security/providers/oidc/common/OidcConfig.java", "diffHunk": "@@ -260,7 +262,7 @@\n     static final String DEFAULT_COOKIE_PATH = \"/\";\n     static final boolean DEFAULT_COOKIE_HTTP_ONLY = true;\n     static final boolean DEFAULT_COOKIE_SECURE = false;\n-    static final String DEFAULT_COOKIE_SAME_SITE = \"Strict\";\n+    static final String DEFAULT_COOKIE_SAME_SITE = \"Lax\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxOTg3MA=="}, "originalCommit": {"oid": "6c60358bfc2cbfe6705b9c97128174cc6723edb3"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 304, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}