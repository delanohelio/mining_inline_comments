{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTg3NDc4", "number": 1624, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODowNDozMVrODwGu6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODowNDozMVrODwGu6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzY4NTUyOnYy", "diffSide": "RIGHT", "path": "microprofile/websocket/src/test/java/io/helidon/microprofile/tyrus/WebSocketBaseTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODowNDozMVrOGC6z7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODoyMjo0OFrOGC7dnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcxMzkwMA==", "bodyText": "I know there have been discussions about avoiding fixed ports because of conflicts on shared systems or parallel tests. Is this opening us up to that problem?", "url": "https://github.com/oracle/helidon/pull/1624#discussion_r405713900", "createdAt": "2020-04-08T18:04:31Z", "author": {"login": "tjquinno"}, "path": "microprofile/websocket/src/test/java/io/helidon/microprofile/tyrus/WebSocketBaseTest.java", "diffHunk": "@@ -26,71 +30,33 @@\n import javax.websocket.OnMessage;\n import javax.websocket.OnOpen;\n import javax.websocket.Session;\n-import javax.websocket.server.ServerApplicationConfig;\n import javax.websocket.server.ServerEndpoint;\n-import javax.websocket.server.ServerEndpointConfig;\n-\n-import java.io.IOException;\n-import java.net.URI;\n-import java.util.Collections;\n-import java.util.Set;\n-import java.util.logging.Logger;\n \n-import io.helidon.microprofile.server.RoutingPath;\n-import io.helidon.microprofile.server.Server;\n import org.junit.jupiter.api.AfterAll;\n-import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n \n /**\n- * Class WebSocketAppTest.\n+ * Class WebSocketBaseTest.\n  */\n-public class WebSocketAppTest {\n-\n-    private static Server server;\n+public abstract class WebSocketBaseTest {\n \n-    @BeforeAll\n-    static void initClass() {\n-        Server.Builder builder = Server.builder();\n-        server = builder.build();\n-        server.start();\n-    }\n+    static final int DEFAULT_PORT = 7001;\n+    static SeContainer container;\n \n     @AfterAll\n     static void destroyClass() {\n-        server.stop();\n+        container.close();\n     }\n \n-    @Test\n-    public void testEchoAnnot() throws Exception {\n-        URI echoUri = URI.create(\"ws://localhost:\" + server.port() + \"/web/echoAnnot\");\n-        EchoClient echoClient = new EchoClient(echoUri);\n-        echoClient.echo(\"hi\", \"how are you?\");\n-    }\n+    public abstract String context();\n \n     @Test\n-    public void testEchoProg() throws Exception {\n-        URI echoUri = URI.create(\"ws://localhost:\" + server.port() + \"/web/echoProg\");\n+    public void testEchoAnnot() throws Exception {\n+        URI echoUri = URI.create(\"ws://localhost:\" + DEFAULT_PORT + context() + \"/echoAnnot\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e7fcd2239972180130f2e78c887732fcc997cd7"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyNDU3Mw==", "bodyText": "Possibly. I had to switch the startup code to use CDI so I can register beans directly and I don't have access to the server port anymore. The old test was always starting on the default port anyway. So it shouldn't be worse than before, but it does not mean is great.", "url": "https://github.com/oracle/helidon/pull/1624#discussion_r405724573", "createdAt": "2020-04-08T18:22:48Z", "author": {"login": "spericas"}, "path": "microprofile/websocket/src/test/java/io/helidon/microprofile/tyrus/WebSocketBaseTest.java", "diffHunk": "@@ -26,71 +30,33 @@\n import javax.websocket.OnMessage;\n import javax.websocket.OnOpen;\n import javax.websocket.Session;\n-import javax.websocket.server.ServerApplicationConfig;\n import javax.websocket.server.ServerEndpoint;\n-import javax.websocket.server.ServerEndpointConfig;\n-\n-import java.io.IOException;\n-import java.net.URI;\n-import java.util.Collections;\n-import java.util.Set;\n-import java.util.logging.Logger;\n \n-import io.helidon.microprofile.server.RoutingPath;\n-import io.helidon.microprofile.server.Server;\n import org.junit.jupiter.api.AfterAll;\n-import org.junit.jupiter.api.BeforeAll;\n import org.junit.jupiter.api.Test;\n \n /**\n- * Class WebSocketAppTest.\n+ * Class WebSocketBaseTest.\n  */\n-public class WebSocketAppTest {\n-\n-    private static Server server;\n+public abstract class WebSocketBaseTest {\n \n-    @BeforeAll\n-    static void initClass() {\n-        Server.Builder builder = Server.builder();\n-        server = builder.build();\n-        server.start();\n-    }\n+    static final int DEFAULT_PORT = 7001;\n+    static SeContainer container;\n \n     @AfterAll\n     static void destroyClass() {\n-        server.stop();\n+        container.close();\n     }\n \n-    @Test\n-    public void testEchoAnnot() throws Exception {\n-        URI echoUri = URI.create(\"ws://localhost:\" + server.port() + \"/web/echoAnnot\");\n-        EchoClient echoClient = new EchoClient(echoUri);\n-        echoClient.echo(\"hi\", \"how are you?\");\n-    }\n+    public abstract String context();\n \n     @Test\n-    public void testEchoProg() throws Exception {\n-        URI echoUri = URI.create(\"ws://localhost:\" + server.port() + \"/web/echoProg\");\n+    public void testEchoAnnot() throws Exception {\n+        URI echoUri = URI.create(\"ws://localhost:\" + DEFAULT_PORT + context() + \"/echoAnnot\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcxMzkwMA=="}, "originalCommit": {"oid": "3e7fcd2239972180130f2e78c887732fcc997cd7"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 622, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}