{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MDYyMzQ5", "number": 1933, "title": "WIP: New JPA example and archetype using Pokemons", "bodyText": "This PR includes:\n\nNew DB example using MP\nNew archetype based on the example\nRenaming of existing archetype directories bare-mp and bare-se\n\nSigned-off-by: Santiago Pericasgeertsen santiago.pericasgeertsen@oracle.com", "createdAt": "2020-06-04T20:10:49Z", "url": "https://github.com/oracle/helidon/pull/1933", "merged": true, "mergeCommit": {"oid": "e415a72d5c594afeee43641e5dd9d7ff9b46e7bb"}, "closed": true, "closedAt": "2020-06-11T18:45:30Z", "author": {"login": "spericas"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoD5glgBqjM0MDg1NTg4Nzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqSplkgFqTQyOTE4NDI0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "795d81a8367094ee7238c90dfe4821e984b66189", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/795d81a8367094ee7238c90dfe4821e984b66189", "committedDate": "2020-05-27T16:18:28Z", "message": "New JPA MP test using Pokemons. Will be used as starting point for new archetype.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}, "afterCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa", "committedDate": "2020-06-04T20:14:14Z", "message": "Fixed some copyright headers.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0Nzk4ODI2", "url": "https://github.com/oracle/helidon/pull/1933#pullrequestreview-424798826", "createdAt": "2020-06-04T20:21:39Z", "commit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDoyMTozOVrOGfWbEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDozMzo0MFrOGfWyeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNjQxNg==", "bodyText": "Is compile scope right?  I would have thought that Helidon's runtime would already bring this along.  Maybe not; worth a check I guess.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435526416", "createdAt": "2020-06-04T20:21:39Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,181 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n+                             http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+        <relativePath>../../../../applications/mp/pom.xml</relativePath>\n+    </parent>\n+    <groupId>io.helidon.examples.integrations.cdi</groupId>\n+    <artifactId>helidon-integrations-examples-pokemons</artifactId>\n+    <name>Helidon CDI Extensions Examples Pokemons JPA</name>\n+\n+    <dependencies>\n+        <!-- Test-scoped dependencies. -->\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.hamcrest</groupId>\n+            <artifactId>hamcrest-all</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- Runtime-scoped dependencies. -->\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jpa</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss</groupId>\n+            <artifactId>jandex</artifactId>\n+            <scope>runtime</scope>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.server</groupId>\n+            <artifactId>helidon-microprofile-server</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.media</groupId>\n+            <artifactId>jersey-media-json-binding</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.config</groupId>\n+            <artifactId>helidon-microprofile-config</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n+        <!-- Provided-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.persistence</groupId>\n+            <artifactId>jakarta.persistence-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.transaction</groupId>\n+            <artifactId>jakarta.transaction-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <!-- Compile-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.annotation</groupId>\n+            <artifactId>jakarta.annotation-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNjUxMw==", "bodyText": "Same as above", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435526513", "createdAt": "2020-06-04T20:21:49Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,181 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n+                             http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+        <relativePath>../../../../applications/mp/pom.xml</relativePath>\n+    </parent>\n+    <groupId>io.helidon.examples.integrations.cdi</groupId>\n+    <artifactId>helidon-integrations-examples-pokemons</artifactId>\n+    <name>Helidon CDI Extensions Examples Pokemons JPA</name>\n+\n+    <dependencies>\n+        <!-- Test-scoped dependencies. -->\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.hamcrest</groupId>\n+            <artifactId>hamcrest-all</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- Runtime-scoped dependencies. -->\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jpa</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss</groupId>\n+            <artifactId>jandex</artifactId>\n+            <scope>runtime</scope>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.server</groupId>\n+            <artifactId>helidon-microprofile-server</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.media</groupId>\n+            <artifactId>jersey-media-json-binding</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.config</groupId>\n+            <artifactId>helidon-microprofile-config</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n+        <!-- Provided-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.persistence</groupId>\n+            <artifactId>jakarta.persistence-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.transaction</groupId>\n+            <artifactId>jakarta.transaction-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <!-- Compile-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.annotation</groupId>\n+            <artifactId>jakarta.annotation-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.inject</groupId>\n+            <artifactId>jakarta.inject-api</artifactId>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNjYxMQ==", "bodyText": "Same as above", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435526611", "createdAt": "2020-06-04T20:22:01Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,181 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n+                             http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+        <relativePath>../../../../applications/mp/pom.xml</relativePath>\n+    </parent>\n+    <groupId>io.helidon.examples.integrations.cdi</groupId>\n+    <artifactId>helidon-integrations-examples-pokemons</artifactId>\n+    <name>Helidon CDI Extensions Examples Pokemons JPA</name>\n+\n+    <dependencies>\n+        <!-- Test-scoped dependencies. -->\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.hamcrest</groupId>\n+            <artifactId>hamcrest-all</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- Runtime-scoped dependencies. -->\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jpa</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss</groupId>\n+            <artifactId>jandex</artifactId>\n+            <scope>runtime</scope>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.server</groupId>\n+            <artifactId>helidon-microprofile-server</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.media</groupId>\n+            <artifactId>jersey-media-json-binding</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.config</groupId>\n+            <artifactId>helidon-microprofile-config</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n+        <!-- Provided-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.persistence</groupId>\n+            <artifactId>jakarta.persistence-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.transaction</groupId>\n+            <artifactId>jakarta.transaction-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <!-- Compile-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.annotation</groupId>\n+            <artifactId>jakarta.annotation-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.inject</groupId>\n+            <artifactId>jakarta.inject-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.ws.rs</groupId>\n+            <artifactId>jakarta.ws.rs-api</artifactId>\n+            <scope>compile</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNjgxOA==", "bodyText": "Same as above; also you've omitted the explicit <scope> element here; any reason?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435526818", "createdAt": "2020-06-04T20:22:25Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/pom.xml", "diffHunk": "@@ -0,0 +1,181 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\n+                             http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.applications</groupId>\n+        <artifactId>helidon-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+        <relativePath>../../../../applications/mp/pom.xml</relativePath>\n+    </parent>\n+    <groupId>io.helidon.examples.integrations.cdi</groupId>\n+    <artifactId>helidon-integrations-examples-pokemons</artifactId>\n+    <name>Helidon CDI Extensions Examples Pokemons JPA</name>\n+\n+    <dependencies>\n+        <!-- Test-scoped dependencies. -->\n+        <dependency>\n+            <groupId>org.junit.jupiter</groupId>\n+            <artifactId>junit-jupiter-api</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.hamcrest</groupId>\n+            <artifactId>hamcrest-all</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- Runtime-scoped dependencies. -->\n+        <dependency>\n+            <groupId>com.h2database</groupId>\n+            <artifactId>h2</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-eclipselink</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jta-weld</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-datasource-hikaricp</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.integrations.cdi</groupId>\n+            <artifactId>helidon-integrations-cdi-jpa</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.jboss</groupId>\n+            <artifactId>jandex</artifactId>\n+            <scope>runtime</scope>\n+            <optional>true</optional>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.server</groupId>\n+            <artifactId>helidon-microprofile-server</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.glassfish.jersey.media</groupId>\n+            <artifactId>jersey-media-json-binding</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.helidon.microprofile.config</groupId>\n+            <artifactId>helidon-microprofile-config</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.eclipse.microprofile.config</groupId>\n+            <artifactId>microprofile-config-api</artifactId>\n+            <scope>runtime</scope>\n+        </dependency>\n+\n+        <!-- Provided-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.persistence</groupId>\n+            <artifactId>jakarta.persistence-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.transaction</groupId>\n+            <artifactId>jakarta.transaction-api</artifactId>\n+            <scope>provided</scope>\n+        </dependency>\n+\n+        <!-- Compile-scoped dependencies. -->\n+        <dependency>\n+            <groupId>jakarta.annotation</groupId>\n+            <artifactId>jakarta.annotation-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.enterprise</groupId>\n+            <artifactId>jakarta.enterprise.cdi-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.inject</groupId>\n+            <artifactId>jakarta.inject-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.ws.rs</groupId>\n+            <artifactId>jakarta.ws.rs-api</artifactId>\n+            <scope>compile</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>jakarta.json.bind</groupId>\n+            <artifactId>jakarta.json.bind-api</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNzY1OQ==", "bodyText": "Name of the class is PokemonResource.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435527659", "createdAt": "2020-06-04T20:24:09Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyNzg4MQ==", "bodyText": "Double-checking that you mean for this to be in effectively @Dependent (per-lookup) scope and not, say, @Singleton or @ApplicationScoped.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435527881", "createdAt": "2020-06-04T20:24:40Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyODY5OA==", "bodyText": "Not needed, and not used.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435528698", "createdAt": "2020-06-04T20:26:17Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyOTU3MA==", "bodyText": "In the other resource methods, you don't use Response.  (Personally I like using Response for everything.)  Consider picking one way or the other, not mixing them?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435529570", "createdAt": "2020-06-04T20:28:04Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response getPokemons() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyOTc1Mw==", "bodyText": "Nit: list.isEmpty()", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435529753", "createdAt": "2020-06-04T20:28:24Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response getPokemons() {\n+        List<Pokemon> pokemons =  entityManager.createNamedQuery(\"getPokemons\", Pokemon.class).getResultList();\n+        return Response.ok(new GenericEntity<>(pokemons){}).build();\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonById(@PathParam(\"id\") String id) {\n+        try {\n+            return entityManager.find(Pokemon.class, Integer.valueOf(id));\n+        } catch (IllegalArgumentException e) {\n+            throw new NotFoundException(\"Unable to find pokemon with ID \" + id);\n+        }\n+    }\n+\n+    @DELETE\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Transactional(Transactional.TxType.REQUIRED)\n+    public void deletePokemon(@PathParam(\"id\") String id) {\n+        Pokemon pokemon = getPokemonById(id);\n+        entityManager.remove(pokemon);\n+    }\n+\n+    @GET\n+    @Path(\"name/{name}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonByName(@PathParam(\"name\") String name) {\n+        TypedQuery<Pokemon> query = entityManager.createNamedQuery(\"getPokemonByName\", Pokemon.class);\n+        List<Pokemon> list = query.setParameter(\"name\", name).getResultList();\n+        if (list.size() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMDE4NQ==", "bodyText": "Mm, not always a bad request, right?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435530185", "createdAt": "2020-06-04T20:29:16Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.inject.Inject;\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transaction;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class PokemonService.\n+ */\n+@Path(\"pokemon\")\n+public class PokemonResource {\n+\n+    @PersistenceContext(unitName = \"test\")\n+    private EntityManager entityManager;\n+\n+    @Inject\n+    private Transaction transaction;\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Response getPokemons() {\n+        List<Pokemon> pokemons =  entityManager.createNamedQuery(\"getPokemons\", Pokemon.class).getResultList();\n+        return Response.ok(new GenericEntity<>(pokemons){}).build();\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonById(@PathParam(\"id\") String id) {\n+        try {\n+            return entityManager.find(Pokemon.class, Integer.valueOf(id));\n+        } catch (IllegalArgumentException e) {\n+            throw new NotFoundException(\"Unable to find pokemon with ID \" + id);\n+        }\n+    }\n+\n+    @DELETE\n+    @Path(\"{id}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Transactional(Transactional.TxType.REQUIRED)\n+    public void deletePokemon(@PathParam(\"id\") String id) {\n+        Pokemon pokemon = getPokemonById(id);\n+        entityManager.remove(pokemon);\n+    }\n+\n+    @GET\n+    @Path(\"name/{name}\")\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Pokemon getPokemonByName(@PathParam(\"name\") String name) {\n+        TypedQuery<Pokemon> query = entityManager.createNamedQuery(\"getPokemonByName\", Pokemon.class);\n+        List<Pokemon> list = query.setParameter(\"name\", name).getResultList();\n+        if (list.size() == 0) {\n+            throw new NotFoundException(\"Unable to find pokemon with name \" + name);\n+        }\n+        return list.get(0);\n+    }\n+\n+    @POST\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Transactional(Transactional.TxType.REQUIRED)\n+    public void createPokemon(Pokemon pokemon) {\n+        try {\n+            PokemonType pokemonType = entityManager.createNamedQuery(\"getPokemonTypeById\", PokemonType.class)\n+                    .setParameter(\"id\", pokemon.getType()).getSingleResult();\n+            pokemon.setPokemonType(pokemonType);\n+            entityManager.persist(pokemon);\n+        } catch (Exception e) {\n+            throw new BadRequestException(\"Unable to create pokemon with ID \" + pokemon.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMDUwMw==", "bodyText": "Name of the class is actually PokemonTypeResource", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435530503", "createdAt": "2020-06-04T20:29:48Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonTypeResource.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.GenericEntity;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.List;\n+\n+/**\n+ * Class TypeResource.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMTQzNQ==", "bodyText": "Just a note: If you're using H2, remember to futz with the JDBC URL in the right way (can't remember what that is at the moment) such that closing all the connections in the pool doesn't nuke your in-memory database, rendering this DDL useless.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435531435", "createdAt": "2020-06-04T20:31:42Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/init_script.sql", "diffHunk": "@@ -0,0 +1,25 @@\n+INSERT INTO POKEMONTYPE VALUES (1, 'Normal');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUzMjQwOQ==", "bodyText": "See if you need to add ;DB_CLOSE_DELAY=-1 to this for your scenario.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435532409", "createdAt": "2020-06-04T20:33:40Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,23 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MTIxMTIy", "url": "https://github.com/oracle/helidon/pull/1933#pullrequestreview-425121122", "createdAt": "2020-06-05T08:59:47Z", "commit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwODo1OTo0OFrOGfmReg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwOTowMDowNlrOGfmSYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NjEwNg==", "bodyText": "If this should be an archetype that is built into native image, we cannot use in-memory database for it.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435786106", "createdAt": "2020-06-05T08:59:48Z", "author": {"login": "tomas-langer"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,23 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+javax.sql.DataSource.test.dataSource.url=jdbc:h2:mem:test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTc4NjMzOQ==", "bodyText": "If this should be an archetype that is built into native image, we cannot use eclipse link, we would need to use hibernate", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r435786339", "createdAt": "2020-06-05T09:00:06Z", "author": {"login": "tomas-langer"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/persistence.xml", "diffHunk": "@@ -0,0 +1,42 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<persistence version=\"2.2\"\n+             xmlns=\"http://xmlns.jcp.org/xml/ns/persistence\"\n+             xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+             xsi:schemaLocation=\"http://xmlns.jcp.org/xml/ns/persistence\n+                                 http://xmlns.jcp.org/xml/ns/persistence/persistence_2_2.xsd\">\n+  <persistence-unit name=\"test\" transaction-type=\"JTA\">\n+    <jta-data-source>test</jta-data-source>\n+    <class>io.helidon.examples.integrations.cdi.pokemon.Pokemon</class>\n+    <class>io.helidon.examples.integrations.cdi.pokemon.PokemonType</class>\n+    <properties>\n+      <property name=\"javax.persistence.schema-generation.database.action\" value=\"drop-and-create\"/>\n+      <property name=\"javax.persistence.sql-load-script-source\" value=\"META-INF/init_script.sql\"/>\n+      <property name=\"eclipselink.create-ddl-jdbc-file-name\" value=\"createDDL_ddlGeneration.jdbc\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7598d00564f5e8fd6f0f6bba4e309c3b9671c5aa"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc2dd6580cab937d07e4192061eb4ea6205a9f96", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/bc2dd6580cab937d07e4192061eb4ea6205a9f96", "committedDate": "2020-06-08T13:54:10Z", "message": "Move test dependencies into main pom.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5d18b40228e364aa7320d0f035197e23258fe58", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/b5d18b40228e364aa7320d0f035197e23258fe58", "committedDate": "2020-06-08T14:31:02Z", "message": "New JPA MP test using Pokemons. Will be used as starting point for new archetype.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d8ee3a5d42e3da00abbe60273fa2d15d44f5cbf", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/0d8ee3a5d42e3da00abbe60273fa2d15d44f5cbf", "committedDate": "2020-06-08T14:31:02Z", "message": "Implementation updates and a test class.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62788e207791d8c497baf9075361bb63f6499a0c", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/62788e207791d8c497baf9075361bb63f6499a0c", "committedDate": "2020-06-08T14:31:02Z", "message": "Fixed some copyright headers.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "139f686782edd8d96cff1345d1d8708e5521518b", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/139f686782edd8d96cff1345d1d8708e5521518b", "committedDate": "2020-06-08T14:31:02Z", "message": "Re-arranged pom dependencies. Improved Javadocs and a few other small changes.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46097adfcf086a33f72bd94dd3b06b8fada96e63", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/46097adfcf086a33f72bd94dd3b06b8fada96e63", "committedDate": "2020-06-08T14:31:02Z", "message": "Make return types consistent in resource classes.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9357aa0c2105641a1a6b8a41838ce97f0698fd7", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/a9357aa0c2105641a1a6b8a41838ce97f0698fd7", "committedDate": "2020-06-08T14:31:02Z", "message": "Some pom changes and use of Hibernate.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9733da95fad80ab54318bb81c2bb883a5eadd6a5", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/9733da95fad80ab54318bb81c2bb883a5eadd6a5", "committedDate": "2020-06-05T19:32:43Z", "message": "Some pom changes and use of Hibernate.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}, "afterCommit": {"oid": "a9357aa0c2105641a1a6b8a41838ce97f0698fd7", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/a9357aa0c2105641a1a6b8a41838ce97f0698fd7", "committedDate": "2020-06-08T14:31:02Z", "message": "Some pom changes and use of Hibernate.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e89d124eb8ea40195581883e95f59d252762154", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/1e89d124eb8ea40195581883e95f59d252762154", "committedDate": "2020-06-08T17:04:17Z", "message": "Property for external DB and H2 dialect.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51100cb7912a56a4cd8d06fcdbd01cb01ce92bec", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/51100cb7912a56a4cd8d06fcdbd01cb01ce92bec", "committedDate": "2020-06-09T14:23:52Z", "message": "New database-mp archetype. Renamed existing archetype directories by adding the 'bare-' prefix.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99931b4d1f98821f1a5f64c4f8fcfb796024c81a", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/99931b4d1f98821f1a5f64c4f8fcfb796024c81a", "committedDate": "2020-06-09T15:04:36Z", "message": "Fixed checkstyle problems.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31738d36a2d5d6588927fd172e1cd167bb18b1a6", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/31738d36a2d5d6588927fd172e1cd167bb18b1a6", "committedDate": "2020-06-09T15:14:16Z", "message": "Copyright header.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Mjc0Nzg0", "url": "https://github.com/oracle/helidon/pull/1933#pullrequestreview-428274784", "createdAt": "2020-06-10T17:24:37Z", "commit": {"oid": "31738d36a2d5d6588927fd172e1cd167bb18b1a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzoyNDozN1rOGh_FmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzoyNDozN1rOGh_FmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4OTgxNg==", "bodyText": "Nit: this list and all the other things in this doc comment will not be formatted in any javadoc output.  Normally I'd not say anything but this is an archetype, and so serves as an example to customers.", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438289816", "createdAt": "2020-06-10T17:24:37Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonResource.java", "diffHunk": "@@ -0,0 +1,133 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.persistence.TypedQuery;\n+import javax.transaction.Transactional;\n+import javax.ws.rs.BadRequestException;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.DELETE;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.NotFoundException;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+/**\n+ * This class implements REST endpoints to interact with Pokemons. The following\n+ * operations are supported:\n+ *\n+ * GET /pokemon: Retrieve list of all pokemons", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31738d36a2d5d6588927fd172e1cd167bb18b1a6"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Mjc1OTc2", "url": "https://github.com/oracle/helidon/pull/1933#pullrequestreview-428275976", "createdAt": "2020-06-10T17:26:06Z", "commit": {"oid": "31738d36a2d5d6588927fd172e1cd167bb18b1a6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478", "author": {"user": {"login": "spericas", "name": "Santiago Pericasgeertsen"}}, "url": "https://github.com/oracle/helidon/commit/d797e00df4ab0d39ce6656ee955f781c1d05f478", "committedDate": "2020-06-11T15:13:43Z", "message": "Better list formatting in Javadoc.\n\nSigned-off-by: Santiago Pericasgeertsen <santiago.pericasgeertsen@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTgyNDUw", "url": "https://github.com/oracle/helidon/pull/1933#pullrequestreview-429182450", "createdAt": "2020-06-11T18:31:51Z", "commit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozMTo1MVrOGip2Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozMTo1MVrOGip2Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MDM1MQ==", "bodyText": "Nit: eliminate this line?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438990351", "createdAt": "2020-06-11T18:31:51Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/resources/META-INF/microprofile-config.properties", "diffHunk": "@@ -0,0 +1,24 @@\n+#\n+# Copyright (c) 2020 Oracle and/or its affiliates.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+javax.sql.DataSource.test.dataSourceClassName=org.h2.jdbcx.JdbcDataSource\n+#javax.sql.DataSource.test.dataSource.url=jdbc:h2:tcp://localhost:1521/test;IFEXISTS=FALSE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTgyOTI0", "url": "https://github.com/oracle/helidon/pull/1933#pullrequestreview-429182924", "createdAt": "2020-06-11T18:32:35Z", "commit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozMjozNlrOGip3fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozMjozNlrOGip3fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MDcxOA==", "bodyText": "Nit: javadoc formatting again", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438990718", "createdAt": "2020-06-11T18:32:36Z", "author": {"login": "ljnelson"}, "path": "examples/integrations/cdi/pokemons/src/main/java/io/helidon/examples/integrations/cdi/pokemon/PokemonTypeResource.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.examples.integrations.cdi.pokemon;\n+\n+import java.util.List;\n+\n+import javax.persistence.EntityManager;\n+import javax.persistence.PersistenceContext;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+/**\n+ * This class implements a REST endpoint to retrieve Pokemon types.\n+ *\n+ * GET /type: Retrieve list of all pokemon types", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTgzODg5", "url": "https://github.com/oracle/helidon/pull/1933#pullrequestreview-429183889", "createdAt": "2020-06-11T18:34:04Z", "commit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozNDowNFrOGip6Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozNDowNFrOGip6Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MTQ1MA==", "bodyText": "I don't know what this file does; if it's OK then\u2026good and carry on!", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438991450", "createdAt": "2020-06-11T18:34:04Z", "author": {"login": "ljnelson"}, "path": "archetypes/database-mp/src/test/resources/projects/it1/goal.txt", "diffHunk": "@@ -0,0 +1 @@\n+package", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTg0MTQx", "url": "https://github.com/oracle/helidon/pull/1933#pullrequestreview-429184141", "createdAt": "2020-06-11T18:34:25Z", "commit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozNDoyNlrOGip7Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozNDoyNlrOGip7Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MTYzOQ==", "bodyText": "Intentional?", "url": "https://github.com/oracle/helidon/pull/1933#discussion_r438991639", "createdAt": "2020-06-11T18:34:26Z", "author": {"login": "ljnelson"}, "path": "archetypes/database-mp/src/main/resources/src/main/resources/native-image/reflect-config.json", "diffHunk": "@@ -0,0 +1 @@\n+[]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTg0MjQy", "url": "https://github.com/oracle/helidon/pull/1933#pullrequestreview-429184242", "createdAt": "2020-06-11T18:34:37Z", "commit": {"oid": "d797e00df4ab0d39ce6656ee955f781c1d05f478"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 682, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}