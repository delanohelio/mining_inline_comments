{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NjgwNTM2", "number": 1491, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjoxNjoxNlrODnRY2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMjo0NDo0OFrODn0aNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTA1OTQ2OnYy", "diffSide": "RIGHT", "path": "security/abac/policy-el/src/main/java/io/helidon/security/abac/policy/el/JavaxElPolicyExecutor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjoxNjoxNlrOF1LGUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMToyMzoxMlrOF1arZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwMDY5MQ==", "bodyText": "Consider wrapping e so it isn't lost.", "url": "https://github.com/oracle/helidon/pull/1491#discussion_r391300691", "createdAt": "2020-03-11T22:16:16Z", "author": {"login": "ljnelson"}, "path": "security/abac/policy-el/src/main/java/io/helidon/security/abac/policy/el/JavaxElPolicyExecutor.java", "diffHunk": "@@ -164,9 +161,8 @@ public JavaxElPolicyExecutor build() {\n                 try {\n                     expressionFactory = ExpressionFactory.newInstance();\n                 } catch (ELException e) {\n-                    LOGGER.fine(\n-                            \"Expression language factory not available. To support policy expressions, you need to add some \"\n-                                    + \"implementation to class/module path\");\n+                    throw new SecurityException(\"Failed to configure ABAC Policy support for Jakarta Expression Language,\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1559c14f461f99b6348b6a5ef5c4f462bce6dcc4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ3NjkyMA==", "bodyText": "Good catch, will fix", "url": "https://github.com/oracle/helidon/pull/1491#discussion_r391476920", "createdAt": "2020-03-12T08:55:54Z", "author": {"login": "tomas-langer"}, "path": "security/abac/policy-el/src/main/java/io/helidon/security/abac/policy/el/JavaxElPolicyExecutor.java", "diffHunk": "@@ -164,9 +161,8 @@ public JavaxElPolicyExecutor build() {\n                 try {\n                     expressionFactory = ExpressionFactory.newInstance();\n                 } catch (ELException e) {\n-                    LOGGER.fine(\n-                            \"Expression language factory not available. To support policy expressions, you need to add some \"\n-                                    + \"implementation to class/module path\");\n+                    throw new SecurityException(\"Failed to configure ABAC Policy support for Jakarta Expression Language,\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwMDY5MQ=="}, "originalCommit": {"oid": "1559c14f461f99b6348b6a5ef5c4f462bce6dcc4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTU1NTk0Mg==", "bodyText": "Fixed.", "url": "https://github.com/oracle/helidon/pull/1491#discussion_r391555942", "createdAt": "2020-03-12T11:23:12Z", "author": {"login": "tomas-langer"}, "path": "security/abac/policy-el/src/main/java/io/helidon/security/abac/policy/el/JavaxElPolicyExecutor.java", "diffHunk": "@@ -164,9 +161,8 @@ public JavaxElPolicyExecutor build() {\n                 try {\n                     expressionFactory = ExpressionFactory.newInstance();\n                 } catch (ELException e) {\n-                    LOGGER.fine(\n-                            \"Expression language factory not available. To support policy expressions, you need to add some \"\n-                                    + \"implementation to class/module path\");\n+                    throw new SecurityException(\"Failed to configure ABAC Policy support for Jakarta Expression Language,\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwMDY5MQ=="}, "originalCommit": {"oid": "1559c14f461f99b6348b6a5ef5c4f462bce6dcc4"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDc5NzMyOnYy", "diffSide": "RIGHT", "path": "security/abac/policy-el/src/main/java/io/helidon/security/abac/policy/el/JavaxElPolicyExecutor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMjo0NDo0OFrOF2CRgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDozMToyOVrOF2F4og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIwNDY3Mw==", "bodyText": "Is logging still needed here?", "url": "https://github.com/oracle/helidon/pull/1491#discussion_r392204673", "createdAt": "2020-03-13T12:44:48Z", "author": {"login": "danielkec"}, "path": "security/abac/policy-el/src/main/java/io/helidon/security/abac/policy/el/JavaxElPolicyExecutor.java", "diffHunk": "@@ -116,11 +116,8 @@ public void executePolicy(String policyStatement, Errors.Collector collector, Pr\n                 collector.fatal(this, \"Policy statement \\\"\" + policyStatement + \"\\\" evaluated to false\");\n             }\n         } catch (Exception e) {\n-            collector.fatal(this,\n-                            \"Policy statement \\\"\" + policyStatement + \"\\\" evaluated to an exception \" + e.getClass()\n-                                    .getName() + \" with message: \" + e.getMessage());\n-\n             LOGGER.log(Level.FINEST, e, () -> \"Statement \" + policyStatement + \" evaluation failed\");\n+            throw new SecurityException(\"Policy statement \\\"\" + policyStatement + \"\\\" evaluated to an exception\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f645ab23d1202bb91342429dcec63b0e50e7a32a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI2Mzg0Mg==", "bodyText": "The security exception is propagated outside of security (and outside of Helidon code), so yes, I think it is reasonable to log it (that is why it is in FINEST level)", "url": "https://github.com/oracle/helidon/pull/1491#discussion_r392263842", "createdAt": "2020-03-13T14:31:29Z", "author": {"login": "tomas-langer"}, "path": "security/abac/policy-el/src/main/java/io/helidon/security/abac/policy/el/JavaxElPolicyExecutor.java", "diffHunk": "@@ -116,11 +116,8 @@ public void executePolicy(String policyStatement, Errors.Collector collector, Pr\n                 collector.fatal(this, \"Policy statement \\\"\" + policyStatement + \"\\\" evaluated to false\");\n             }\n         } catch (Exception e) {\n-            collector.fatal(this,\n-                            \"Policy statement \\\"\" + policyStatement + \"\\\" evaluated to an exception \" + e.getClass()\n-                                    .getName() + \" with message: \" + e.getMessage());\n-\n             LOGGER.log(Level.FINEST, e, () -> \"Statement \" + policyStatement + \" evaluation failed\");\n+            throw new SecurityException(\"Policy statement \\\"\" + policyStatement + \"\\\" evaluated to an exception\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIwNDY3Mw=="}, "originalCommit": {"oid": "f645ab23d1202bb91342429dcec63b0e50e7a32a"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 270, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}