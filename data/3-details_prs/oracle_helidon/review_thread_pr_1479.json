{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NzE3MTA2", "number": 1479, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTo1NTo0N1rODpztsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjozMDo1MlrODrurWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MTY1NDg5OnYy", "diffSide": "RIGHT", "path": "examples/microprofile/messaging-sse/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwOTo1NTo0N1rOF5NcUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDoyMjozNVrOF7UfXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzMzM5NQ==", "bodyText": "JDK11+", "url": "https://github.com/oracle/helidon/pull/1479#discussion_r395533395", "createdAt": "2020-03-20T09:55:47Z", "author": {"login": "tomas-langer"}, "path": "examples/microprofile/messaging-sse/README.md", "diffHunk": "@@ -0,0 +1,18 @@\n+# Helidon Reactive Messaging Example\n+\n+ Example showing\n+ * [Microprofile Reactive Messaging](https://github.com/eclipse/microprofile-reactive-messaging) \n+ with [Microprofile Reactive Stream Operators](https://github.com/eclipse/microprofile-reactive-streams-operators) \n+ connected to [Server-Sent Events](https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest/sse.html).\n+\n+## Build and run\n+\n+With JDK8+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5ae594bc356ecd1283e487a7e7f85e26355ee9"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc0NjAxMg==", "bodyText": "thx fixed", "url": "https://github.com/oracle/helidon/pull/1479#discussion_r397746012", "createdAt": "2020-03-25T10:22:35Z", "author": {"login": "danielkec"}, "path": "examples/microprofile/messaging-sse/README.md", "diffHunk": "@@ -0,0 +1,18 @@\n+# Helidon Reactive Messaging Example\n+\n+ Example showing\n+ * [Microprofile Reactive Messaging](https://github.com/eclipse/microprofile-reactive-messaging) \n+ with [Microprofile Reactive Stream Operators](https://github.com/eclipse/microprofile-reactive-streams-operators) \n+ connected to [Server-Sent Events](https://eclipse-ee4j.github.io/jersey.github.io/documentation/latest/sse.html).\n+\n+## Build and run\n+\n+With JDK8+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTUzMzM5NQ=="}, "originalCommit": {"oid": "1e5ae594bc356ecd1283e487a7e7f85e26355ee9"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTgwMTIzOnYy", "diffSide": "RIGHT", "path": "examples/microprofile/messaging-sse/src/main/java/io/helidon/microprofile/example/messaging/sse/Main.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjozMDo1MlrOF8Pk5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDoxMjoyM1rOF8YkQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcxNDA4NQ==", "bodyText": "Just do Server.create().start()", "url": "https://github.com/oracle/helidon/pull/1479#discussion_r398714085", "createdAt": "2020-03-26T16:30:52Z", "author": {"login": "tomas-langer"}, "path": "examples/microprofile/messaging-sse/src/main/java/io/helidon/microprofile/example/messaging/sse/Main.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.helidon.microprofile.example.messaging.sse;\n+\n+import io.helidon.microprofile.server.Server;\n+\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+\n+/**\n+ * Explicit example.\n+ */\n+public class Main {\n+    private Main() {\n+    }\n+\n+    /**\n+     * Starts server and initializes CDI container manually.\n+     *\n+     * @param args command line arguments (ignored)\n+     */\n+    public static void main(String[] args) {\n+        Server server = Server.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dba6ba93f2d09538820e72eb8b4ff494b39c63c6"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2MTM3OA==", "bodyText": "Fixed thx", "url": "https://github.com/oracle/helidon/pull/1479#discussion_r398861378", "createdAt": "2020-03-26T20:12:23Z", "author": {"login": "danielkec"}, "path": "examples/microprofile/messaging-sse/src/main/java/io/helidon/microprofile/example/messaging/sse/Main.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package io.helidon.microprofile.example.messaging.sse;\n+\n+import io.helidon.microprofile.server.Server;\n+\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+\n+/**\n+ * Explicit example.\n+ */\n+public class Main {\n+    private Main() {\n+    }\n+\n+    /**\n+     * Starts server and initializes CDI container manually.\n+     *\n+     * @param args command line arguments (ignored)\n+     */\n+    public static void main(String[] args) {\n+        Server server = Server.builder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcxNDA4NQ=="}, "originalCommit": {"oid": "dba6ba93f2d09538820e72eb8b4ff494b39c63c6"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 262, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}