{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNzI5ODA2", "number": 2441, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOToxMzoyMVrOEsv6Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOToxMzoyMVrOEsv6Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzU3Nzc5OnYy", "diffSide": "RIGHT", "path": "webserver/webserver/src/main/java/io/helidon/webserver/ServerRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOToxMzoyMVrOHgKP9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODoyMjowNlrOHhfjrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4NDQwNw==", "bodyText": "Maybe this could be a lazily initialized field on the implementation, wdyt ?", "url": "https://github.com/oracle/helidon/pull/2441#discussion_r503484407", "createdAt": "2020-10-12T19:13:21Z", "author": {"login": "romain-grecourt"}, "path": "webserver/webserver/src/main/java/io/helidon/webserver/ServerRequest.java", "diffHunk": "@@ -136,4 +141,35 @@\n      * @return the tracer associated, or {@link io.opentracing.util.GlobalTracer#get()}\n      */\n     Tracer tracer();\n+\n+    /**\n+     * Absolute URI of the incoming request, including query parameters and fragment.\n+     * The host and port are obtained from the interface this server listens on ({@code host} header is not used).\n+     *\n+     * @return the URI of incoming request\n+     */\n+    default URI absoluteUri() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896f3b613b16532ad7bd982f32818111435f4a49"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4MjA5Mw==", "bodyText": "Updated to use Lazy and added a test.", "url": "https://github.com/oracle/helidon/pull/2441#discussion_r504882093", "createdAt": "2020-10-14T18:22:06Z", "author": {"login": "tomas-langer"}, "path": "webserver/webserver/src/main/java/io/helidon/webserver/ServerRequest.java", "diffHunk": "@@ -136,4 +141,35 @@\n      * @return the tracer associated, or {@link io.opentracing.util.GlobalTracer#get()}\n      */\n     Tracer tracer();\n+\n+    /**\n+     * Absolute URI of the incoming request, including query parameters and fragment.\n+     * The host and port are obtained from the interface this server listens on ({@code host} header is not used).\n+     *\n+     * @return the URI of incoming request\n+     */\n+    default URI absoluteUri() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4NDQwNw=="}, "originalCommit": {"oid": "896f3b613b16532ad7bd982f32818111435f4a49"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 435, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}