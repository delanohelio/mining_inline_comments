{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MDQ3MDQ1", "number": 1796, "title": "JSON-P Streaming support", "bodyText": "Resolves #1790\nResolves #1793", "createdAt": "2020-05-14T14:48:21Z", "url": "https://github.com/oracle/helidon/pull/1796", "merged": true, "mergeCommit": {"oid": "cb662ba4b34b1cb642e5b3d1e8cb2d794e6e422d"}, "closed": true, "closedAt": "2020-05-18T09:00:09Z", "author": {"login": "tomas-langer"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchRjy4AFqTQxMjAyMDAyMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABciM3ligFqTQxMzE3MjQ3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDIwMDIx", "url": "https://github.com/oracle/helidon/pull/1796#pullrequestreview-412020021", "createdAt": "2020-05-14T17:13:17Z", "commit": {"oid": "c41fdca1b88098ef8ee49f274c990001c8c1b30a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzoxMzoxN1rOGVmUUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODowOTo0NlrOGVoctg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMwMTA3Mg==", "bodyText": "Is this actually required ?", "url": "https://github.com/oracle/helidon/pull/1796#discussion_r425301072", "createdAt": "2020-05-14T17:13:17Z", "author": {"login": "romain-grecourt"}, "path": "media/jsonb/common/src/main/java/io/helidon/media/jsonb/common/JsonbBodyWriter.java", "diffHunk": "@@ -48,6 +49,13 @@ private JsonbBodyWriter(Jsonb jsonb) {\n     public boolean accept(GenericType<?> type,\n             MessageBodyWriterContext context) {\n \n+        // We are excluding the following types from support:\n+        // 1. any char sequence\n+        // 2. Flow.Publisher - that can only be supported by streaming media\n+        if (Flow.Publisher.class.isAssignableFrom(type.rawType())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41fdca1b88098ef8ee49f274c990001c8c1b30a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMzI3MQ==", "bodyText": "@danielkec FYI. Can this be done better ? Is there something we can add in Multi to support this ?", "url": "https://github.com/oracle/helidon/pull/1796#discussion_r425333271", "createdAt": "2020-05-14T18:04:59Z", "author": {"login": "romain-grecourt"}, "path": "media/jsonp/common/src/main/java/io/helidon/media/jsonp/common/JsonpBodyStreamWriter.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.media.jsonp.common;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.Flow.Publisher;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import javax.json.JsonStructure;\n+import javax.json.JsonWriterFactory;\n+\n+import io.helidon.common.GenericType;\n+import io.helidon.common.http.DataChunk;\n+import io.helidon.common.http.MediaType;\n+import io.helidon.common.reactive.Multi;\n+import io.helidon.common.reactive.Single;\n+import io.helidon.media.common.MessageBodyStreamWriter;\n+import io.helidon.media.common.MessageBodyWriterContext;\n+import io.helidon.media.jsonp.common.JsonpBodyWriter.JsonStructureToChunks;\n+\n+/**\n+ * Message body writer for {@link javax.json.JsonStructure} sub-classes (JSON-P).\n+ */\n+public class JsonpBodyStreamWriter implements MessageBodyStreamWriter<JsonStructure> {\n+    private static final byte[] ARRAY_JSON_END_BYTES = \"]\".getBytes(StandardCharsets.UTF_8);\n+    private static final byte[] ARRAY_JSON_BEGIN_BYTES = \"[\".getBytes(StandardCharsets.UTF_8);\n+    private static final byte[] COMMA_BYTES = \",\".getBytes(StandardCharsets.UTF_8);\n+\n+    private final JsonWriterFactory jsonWriterFactory;\n+\n+    JsonpBodyStreamWriter(JsonWriterFactory jsonWriterFactory) {\n+        this.jsonWriterFactory = jsonWriterFactory;\n+    }\n+\n+    @Override\n+    public boolean accept(GenericType<?> type, MessageBodyWriterContext context) {\n+        return JsonStructure.class.isAssignableFrom(type.rawType());\n+    }\n+\n+    @Override\n+    public Publisher<DataChunk> write(Publisher<JsonStructure> publisher,\n+                                      GenericType<? extends JsonStructure> type,\n+                                      MessageBodyWriterContext context) {\n+\n+        MediaType contentType = context.findAccepted(MediaType.JSON_PREDICATE, MediaType.APPLICATION_JSON);\n+        context.contentType(contentType);\n+\n+        // we do not have join operator\n+        AtomicBoolean first = new AtomicBoolean(true);\n+\n+        JsonStructureToChunks jsonToChunks = new JsonStructureToChunks(jsonWriterFactory,\n+                                                                       context.charset());\n+\n+        // we also do not have an append operator\n+        Multi<DataChunk> stream = Multi.concat(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41fdca1b88098ef8ee49f274c990001c8c1b30a"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNTIwNw==", "bodyText": "I under what you are doing here, but if we do this we need to do this for all the places where there is similar code. i.e  jsonb, jackson.", "url": "https://github.com/oracle/helidon/pull/1796#discussion_r425335207", "createdAt": "2020-05-14T18:08:16Z", "author": {"login": "romain-grecourt"}, "path": "media/jsonp/common/src/main/java/io/helidon/media/jsonp/common/JsonpBodyWriter.java", "diffHunk": "@@ -50,15 +49,14 @@ public boolean accept(GenericType<?> type, MessageBodyWriterContext context) {\n \n     @Override\n     public Publisher<DataChunk> write(Single<JsonStructure> content, GenericType<? extends JsonStructure> type,\n-            MessageBodyWriterContext context) {\n+                                      MessageBodyWriterContext context) {\n \n         MediaType contentType = context.findAccepted(MediaType.JSON_PREDICATE, MediaType.APPLICATION_JSON);\n         context.contentType(contentType);\n-        return content.flatMap(new JsonStructureToChunks(jsonWriterFactory, context.charset()));\n+        return content.map(new JsonStructureToChunks(jsonWriterFactory, context.charset()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41fdca1b88098ef8ee49f274c990001c8c1b30a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzNTk5MA==", "bodyText": "The newXXX static methods have been removed. Let's remove it.", "url": "https://github.com/oracle/helidon/pull/1796#discussion_r425335990", "createdAt": "2020-05-14T18:09:46Z", "author": {"login": "romain-grecourt"}, "path": "media/jsonp/common/src/main/java/io/helidon/media/jsonp/common/JsonpSupport.java", "diffHunk": "@@ -61,6 +62,19 @@ public JsonpBodyWriter newWriter() {\n         return new JsonpBodyWriter(jsonWriterFactory);\n     }\n \n+    /**\n+     * Create a new JSON-P stream writer.\n+     * <p>\n+     * This stream writer supports {@link java.util.concurrent.Flow.Publisher publishers}\n+     * of {@link javax.json.JsonStructure} (such as {@link javax.json.JsonObject})\n+     * , writing them as an array of JSONs.\n+     *\n+     * @return JSON processing stream writer.\n+     */\n+    public JsonpBodyStreamWriter newStreamWriter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41fdca1b88098ef8ee49f274c990001c8c1b30a"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c41fdca1b88098ef8ee49f274c990001c8c1b30a", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/c41fdca1b88098ef8ee49f274c990001c8c1b30a", "committedDate": "2020-05-14T14:47:06Z", "message": "Reuse code between JSON-P writers, simplified processing.\nFixed a few copyrights in non-production code.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}, "afterCommit": {"oid": "96ce3141976d24dbf04f17211bfd1f2c2c60dc45", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/96ce3141976d24dbf04f17211bfd1f2c2c60dc45", "committedDate": "2020-05-15T08:40:23Z", "message": "JSON-P stream writer and related changes.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96ce3141976d24dbf04f17211bfd1f2c2c60dc45", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/96ce3141976d24dbf04f17211bfd1f2c2c60dc45", "committedDate": "2020-05-15T08:40:23Z", "message": "JSON-P stream writer and related changes.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}, "afterCommit": {"oid": "a8ac088efb21c19dbecb7b84ce3f40ba01499218", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/a8ac088efb21c19dbecb7b84ce3f40ba01499218", "committedDate": "2020-05-15T09:19:34Z", "message": "JSON-P stream writer and related changes.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNzY4MTI1", "url": "https://github.com/oracle/helidon/pull/1796#pullrequestreview-412768125", "createdAt": "2020-05-15T15:51:51Z", "commit": {"oid": "a8ac088efb21c19dbecb7b84ce3f40ba01499218"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyOTc4Nzgy", "url": "https://github.com/oracle/helidon/pull/1796#pullrequestreview-412978782", "createdAt": "2020-05-15T21:28:33Z", "commit": {"oid": "a8ac088efb21c19dbecb7b84ce3f40ba01499218"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToyODozNFrOGWUXDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMToyODozNFrOGWUXDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA1NTQzNg==", "bodyText": "Add a unit test.", "url": "https://github.com/oracle/helidon/pull/1796#discussion_r426055436", "createdAt": "2020-05-15T21:28:34Z", "author": {"login": "tomas-langer"}, "path": "media/jsonp/common/src/main/java/io/helidon/media/jsonp/common/JsonpBodyStreamWriter.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.media.jsonp.common;\n+\n+import java.nio.charset.StandardCharsets;\n+import java.util.concurrent.Flow.Publisher;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import javax.json.JsonStructure;\n+import javax.json.JsonWriterFactory;\n+\n+import io.helidon.common.GenericType;\n+import io.helidon.common.http.DataChunk;\n+import io.helidon.common.http.MediaType;\n+import io.helidon.common.reactive.Multi;\n+import io.helidon.common.reactive.Single;\n+import io.helidon.media.common.MessageBodyStreamWriter;\n+import io.helidon.media.common.MessageBodyWriterContext;\n+import io.helidon.media.jsonp.common.JsonpBodyWriter.JsonStructureToChunks;\n+\n+/**\n+ * Message body writer for {@link javax.json.JsonStructure} sub-classes (JSON-P).\n+ */\n+public class JsonpBodyStreamWriter implements MessageBodyStreamWriter<JsonStructure> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8ac088efb21c19dbecb7b84ce3f40ba01499218"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d187478dd1a38146640e14bdc85d2c85cefe302", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/6d187478dd1a38146640e14bdc85d2c85cefe302", "committedDate": "2020-05-16T10:01:18Z", "message": "JSON-P stream writer and related changes.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "845fba7ab41f7e6953784ee86a4554d79f690d8e", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/845fba7ab41f7e6953784ee86a4554d79f690d8e", "committedDate": "2020-05-17T12:15:13Z", "message": "Updated according to changes in #1806.\nChanged generic declaration in API to be more open for users.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8ac088efb21c19dbecb7b84ce3f40ba01499218", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/a8ac088efb21c19dbecb7b84ce3f40ba01499218", "committedDate": "2020-05-15T09:19:34Z", "message": "JSON-P stream writer and related changes.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}, "afterCommit": {"oid": "845fba7ab41f7e6953784ee86a4554d79f690d8e", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/845fba7ab41f7e6953784ee86a4554d79f690d8e", "committedDate": "2020-05-17T12:15:13Z", "message": "Updated according to changes in #1806.\nChanged generic declaration in API to be more open for users.\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f82c033d61a34ec76e5dcee7346535a3b542081f", "author": {"user": {"login": "tomas-langer", "name": "Tomas Langer"}}, "url": "https://github.com/oracle/helidon/commit/f82c033d61a34ec76e5dcee7346535a3b542081f", "committedDate": "2020-05-17T12:46:58Z", "message": "Fix of new API for Jackson Writer\n\nSigned-off-by: Tomas Langer <tomas.langer@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTcyNDcz", "url": "https://github.com/oracle/helidon/pull/1796#pullrequestreview-413172473", "createdAt": "2020-05-17T15:19:05Z", "commit": {"oid": "f82c033d61a34ec76e5dcee7346535a3b542081f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 787, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}