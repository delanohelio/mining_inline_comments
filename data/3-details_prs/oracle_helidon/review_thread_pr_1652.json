{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MDAzMjY4", "number": 1652, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMDowNzoyMFrODybprA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTo1Njo1NFrOD8aF-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MjA4NDI4OnYy", "diffSide": "RIGHT", "path": "docs/se/dbclient/01_introduction.adoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMDowNzoyMFrOGGeI_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODoyNDo0M1rOGXtKdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzODQ2MQ==", "bodyText": "It should have a different title. :)", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r409438461", "createdAt": "2020-04-16T10:07:20Z", "author": {"login": "m0mus"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,92 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n == This page is Under Construction and will be available soon", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c57db5737af61c5554e28e76a62b8d26d61a09"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1NzM3Mw==", "bodyText": "All of the intro topics are \"About _____\" Do you want us to change that convention? Also, I don't have that heading on line 25. Not sure which version that is from?", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r424657373", "createdAt": "2020-05-13T18:48:34Z", "author": {"login": "ljamen"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,92 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n == This page is Under Construction and will be available soon", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzODQ2MQ=="}, "originalCommit": {"oid": "86c57db5737af61c5554e28e76a62b8d26d61a09"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUxMDM4OQ==", "bodyText": "Hi @m0mus - can you let me know what this should be? Thanks!", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r427510389", "createdAt": "2020-05-19T18:24:43Z", "author": {"login": "ljamen"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,92 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n == This page is Under Construction and will be available soon", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzODQ2MQ=="}, "originalCommit": {"oid": "86c57db5737af61c5554e28e76a62b8d26d61a09"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MjA4ODkwOnYy", "diffSide": "RIGHT", "path": "docs/se/dbclient/01_introduction.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMDowODozNVrOGGeMAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo0ODo0OVrOGU_CZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzOTIzMw==", "bodyText": "The table looks ugly. Consider representing this information as a bullet list.", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r409439233", "createdAt": "2020-04-16T10:08:35Z", "author": {"login": "m0mus"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,92 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n == This page is Under Construction and will be available soon\n+\n+\n+The Helidon SE DB Client provides a unified, reactive API for working with databases in non-blocking way. The DB Client simplfies how you work with databases and by allowing the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service. \n+\n+== Helidon DB Client Features Overview\n+\n+[width=\"75%\",options=\"header\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c57db5737af61c5554e28e76a62b8d26d61a09"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1NzUxMQ==", "bodyText": "There is no table anymore.", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r424657511", "createdAt": "2020-05-13T18:48:49Z", "author": {"login": "ljamen"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,92 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n == This page is Under Construction and will be available soon\n+\n+\n+The Helidon SE DB Client provides a unified, reactive API for working with databases in non-blocking way. The DB Client simplfies how you work with databases and by allowing the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service. \n+\n+== Helidon DB Client Features Overview\n+\n+[width=\"75%\",options=\"header\"]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzOTIzMw=="}, "originalCommit": {"oid": "86c57db5737af61c5554e28e76a62b8d26d61a09"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDA4MjQ3OnYy", "diffSide": "RIGHT", "path": "docs/se/dbclient/01_introduction.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzoxMToxOFrOGU7dhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo0OTowMVrOGU_C6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5ODkxNw==", "bodyText": "These are actually not headers. Please change it to bullet list.", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r424598917", "createdAt": "2020-05-13T17:11:18Z", "author": {"login": "m0mus"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,227 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n-== This page is Under Construction and will be available soon\n+\n+The Helidon SE DB Client provides a unified, reactive API for working with databases in non-blocking way. \n+\n+== Helidon DB Client Features Overview\n+\n+The DB Client simplfies how you work with databases by allowing the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service. Specifically, the Heldion DB Client provides the following:\n+\n+=== Unified API for data access and query +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "909c7f619ce27f8a008aea37488ce31d3d97bc90"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1NzY0Mw==", "bodyText": "It is a bulleted list now.", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r424657643", "createdAt": "2020-05-13T18:49:01Z", "author": {"login": "ljamen"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,227 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n-== This page is Under Construction and will be available soon\n+\n+The Helidon SE DB Client provides a unified, reactive API for working with databases in non-blocking way. \n+\n+== Helidon DB Client Features Overview\n+\n+The DB Client simplfies how you work with databases by allowing the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service. Specifically, the Heldion DB Client provides the following:\n+\n+=== Unified API for data access and query +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5ODkxNw=="}, "originalCommit": {"oid": "909c7f619ce27f8a008aea37488ce31d3d97bc90"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDA5MDk4OnYy", "diffSide": "RIGHT", "path": "docs/se/dbclient/01_introduction.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzoxMzozNlrOGU7jFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo0OToxMFrOGU_DNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwMDM0MA==", "bodyText": "It's called 'Observability' in microservices world.", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r424600340", "createdAt": "2020-05-13T17:13:36Z", "author": {"login": "m0mus"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,227 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n-== This page is Under Construction and will be available soon\n+\n+The Helidon SE DB Client provides a unified, reactive API for working with databases in non-blocking way. \n+\n+== Helidon DB Client Features Overview\n+\n+The DB Client simplfies how you work with databases by allowing the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service. Specifically, the Heldion DB Client provides the following:\n+\n+=== Unified API for data access and query +\n+The API was implemented as a layer above JDBC or MongoDB Reactive Streams Java Driver, so any relational databases with JDBC driver or MongoDB are supported.\n+\n+=== Reactive database access with non-reactive drivers +\n+Most JDBC drivers are blocking. Using them in a reactive application is problematic. Helidon DB Client allows the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service.\n+\n+=== System Monitoring +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "909c7f619ce27f8a008aea37488ce31d3d97bc90"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1NzcxOQ==", "bodyText": "Changed", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r424657719", "createdAt": "2020-05-13T18:49:10Z", "author": {"login": "ljamen"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,227 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n-== This page is Under Construction and will be available soon\n+\n+The Helidon SE DB Client provides a unified, reactive API for working with databases in non-blocking way. \n+\n+== Helidon DB Client Features Overview\n+\n+The DB Client simplfies how you work with databases by allowing the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service. Specifically, the Heldion DB Client provides the following:\n+\n+=== Unified API for data access and query +\n+The API was implemented as a layer above JDBC or MongoDB Reactive Streams Java Driver, so any relational databases with JDBC driver or MongoDB are supported.\n+\n+=== Reactive database access with non-reactive drivers +\n+Most JDBC drivers are blocking. Using them in a reactive application is problematic. Helidon DB Client allows the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service.\n+\n+=== System Monitoring +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwMDM0MA=="}, "originalCommit": {"oid": "909c7f619ce27f8a008aea37488ce31d3d97bc90"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDA5MzU0OnYy", "diffSide": "RIGHT", "path": "docs/se/dbclient/01_introduction.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzoxNDoyMFrOGU7ktQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo0OToxN1rOGU_DhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwMDc1Nw==", "bodyText": "remove 'relational'. The portability is between any drivers (relational or nosql).", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r424600757", "createdAt": "2020-05-13T17:14:20Z", "author": {"login": "m0mus"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,227 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n-== This page is Under Construction and will be available soon\n+\n+The Helidon SE DB Client provides a unified, reactive API for working with databases in non-blocking way. \n+\n+== Helidon DB Client Features Overview\n+\n+The DB Client simplfies how you work with databases by allowing the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service. Specifically, the Heldion DB Client provides the following:\n+\n+=== Unified API for data access and query +\n+The API was implemented as a layer above JDBC or MongoDB Reactive Streams Java Driver, so any relational databases with JDBC driver or MongoDB are supported.\n+\n+=== Reactive database access with non-reactive drivers +\n+Most JDBC drivers are blocking. Using them in a reactive application is problematic. Helidon DB Client allows the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service.\n+\n+=== System Monitoring +\n+The API offers support for health checks, metrics and tracing.\n+\n+=== Backpressure Management +\n+Helidon DB Client performs database operations only when it\u2019s requested by the consumer. This is propagated all the way to the TCP layer.\n+\n+=== Improved portability between relational database drivers +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "909c7f619ce27f8a008aea37488ce31d3d97bc90"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1Nzc5Ng==", "bodyText": "changed", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r424657796", "createdAt": "2020-05-13T18:49:17Z", "author": {"login": "ljamen"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,227 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n-== This page is Under Construction and will be available soon\n+\n+The Helidon SE DB Client provides a unified, reactive API for working with databases in non-blocking way. \n+\n+== Helidon DB Client Features Overview\n+\n+The DB Client simplfies how you work with databases by allowing the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service. Specifically, the Heldion DB Client provides the following:\n+\n+=== Unified API for data access and query +\n+The API was implemented as a layer above JDBC or MongoDB Reactive Streams Java Driver, so any relational databases with JDBC driver or MongoDB are supported.\n+\n+=== Reactive database access with non-reactive drivers +\n+Most JDBC drivers are blocking. Using them in a reactive application is problematic. Helidon DB Client allows the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service.\n+\n+=== System Monitoring +\n+The API offers support for health checks, metrics and tracing.\n+\n+=== Backpressure Management +\n+Helidon DB Client performs database operations only when it\u2019s requested by the consumer. This is propagated all the way to the TCP layer.\n+\n+=== Improved portability between relational database drivers +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwMDc1Nw=="}, "originalCommit": {"oid": "909c7f619ce27f8a008aea37488ce31d3d97bc90"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDEwMDY2OnYy", "diffSide": "RIGHT", "path": "docs/se/dbclient/01_introduction.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzoxNjoyNVrOGU7pSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo0OToyNVrOGU_D4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwMTkyOA==", "bodyText": "Dependencies tag is not closed. Suggesting adding\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ----\n          \n          \n            \n                 ...\n          \n          \n            \n            </dependencies>\n          \n          \n            \n            ----", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r424601928", "createdAt": "2020-05-13T17:16:25Z", "author": {"login": "m0mus"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,227 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n-== This page is Under Construction and will be available soon\n+\n+The Helidon SE DB Client provides a unified, reactive API for working with databases in non-blocking way. \n+\n+== Helidon DB Client Features Overview\n+\n+The DB Client simplfies how you work with databases by allowing the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service. Specifically, the Heldion DB Client provides the following:\n+\n+=== Unified API for data access and query +\n+The API was implemented as a layer above JDBC or MongoDB Reactive Streams Java Driver, so any relational databases with JDBC driver or MongoDB are supported.\n+\n+=== Reactive database access with non-reactive drivers +\n+Most JDBC drivers are blocking. Using them in a reactive application is problematic. Helidon DB Client allows the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service.\n+\n+=== System Monitoring +\n+The API offers support for health checks, metrics and tracing.\n+\n+=== Backpressure Management +\n+Helidon DB Client performs database operations only when it\u2019s requested by the consumer. This is propagated all the way to the TCP layer.\n+\n+=== Improved portability between relational database drivers +\n+The DB Client works with native database statements that can be used inline in the code or defined as named statements in database configuration. +\n+By moving the native query code to configuration files, the Helidon DB Client allows you to switch to another database by changing the configuration files, not the code.\n+\n+== Getting Started\n+\n+Before you begin you must:\n+\n+1. Add the DB Client dependencies to the Maven `pom.xml` file\n+2. Use Helidon Config to configure the client.\n+\n+The <<about/04_managing-dependencies.adoc, Managing Dependencies>> page describes how you\n+should declare dependency management for Helidon applications. For the DB Client you must include the following dependencies in your project:\n+----\n+<dependencies>\n+     <dependency>\n+         <groupId>io.helidon.dbclient</groupId><1>\n+         <artifactId>helidon-dbclient</artifactId>\n+     </dependency>\n+     <dependency>\n+         <groupId>io.helidon.dbclient</groupId><2>\n+         <artifactId>helidon-dbclient-jdbc</artifactId>\n+     </dependency>\n+     <dependency>\n+         <groupId>com.h2.database</groupId><3>\n+         <artifactId>h2</artifactId>\n+         <version>1.4.200</version>\n+     </dependency>\n+----", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "909c7f619ce27f8a008aea37488ce31d3d97bc90"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1Nzg5MQ==", "bodyText": "changed", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r424657891", "createdAt": "2020-05-13T18:49:25Z", "author": {"login": "ljamen"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,227 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n+= About Helidon DB Client\n :toc:\n :toc-placement: preamble\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n-== This page is Under Construction and will be available soon\n+\n+The Helidon SE DB Client provides a unified, reactive API for working with databases in non-blocking way. \n+\n+== Helidon DB Client Features Overview\n+\n+The DB Client simplfies how you work with databases by allowing the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service. Specifically, the Heldion DB Client provides the following:\n+\n+=== Unified API for data access and query +\n+The API was implemented as a layer above JDBC or MongoDB Reactive Streams Java Driver, so any relational databases with JDBC driver or MongoDB are supported.\n+\n+=== Reactive database access with non-reactive drivers +\n+Most JDBC drivers are blocking. Using them in a reactive application is problematic. Helidon DB Client allows the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service.\n+\n+=== System Monitoring +\n+The API offers support for health checks, metrics and tracing.\n+\n+=== Backpressure Management +\n+Helidon DB Client performs database operations only when it\u2019s requested by the consumer. This is propagated all the way to the TCP layer.\n+\n+=== Improved portability between relational database drivers +\n+The DB Client works with native database statements that can be used inline in the code or defined as named statements in database configuration. +\n+By moving the native query code to configuration files, the Helidon DB Client allows you to switch to another database by changing the configuration files, not the code.\n+\n+== Getting Started\n+\n+Before you begin you must:\n+\n+1. Add the DB Client dependencies to the Maven `pom.xml` file\n+2. Use Helidon Config to configure the client.\n+\n+The <<about/04_managing-dependencies.adoc, Managing Dependencies>> page describes how you\n+should declare dependency management for Helidon applications. For the DB Client you must include the following dependencies in your project:\n+----\n+<dependencies>\n+     <dependency>\n+         <groupId>io.helidon.dbclient</groupId><1>\n+         <artifactId>helidon-dbclient</artifactId>\n+     </dependency>\n+     <dependency>\n+         <groupId>io.helidon.dbclient</groupId><2>\n+         <artifactId>helidon-dbclient-jdbc</artifactId>\n+     </dependency>\n+     <dependency>\n+         <groupId>com.h2.database</groupId><3>\n+         <artifactId>h2</artifactId>\n+         <version>1.4.200</version>\n+     </dependency>\n+----", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYwMTkyOA=="}, "originalCommit": {"oid": "909c7f619ce27f8a008aea37488ce31d3d97bc90"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjY4NjY0OnYy", "diffSide": "RIGHT", "path": "docs/se/dbclient/01_introduction.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwOTo1Njo1NFrOGVU6zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjozMzoyNlrOGVkuSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxNjAxNA==", "bodyText": "Please remove second space after <1> tag.", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r425016014", "createdAt": "2020-05-14T09:56:54Z", "author": {"login": "Tomas-Kraus"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,230 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n-:toc:\n-:toc-placement: preamble\n+= About Helidon DB Client\n+\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n-== This page is Under Construction and will be available soon\n+\n+The Helidon SE DB Client provides a unified, reactive API for working with databases in non-blocking way. \n+\n+== Helidon DB Client Features Overview\n+\n+The DB Client simplfies how you work with databases by allowing the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service. Specifically, the Heldion DB Client provides the following:\n+\n+* Unified API for data access and query +\n+The API was implemented as a layer above JDBC or MongoDB Reactive Streams Java Driver, so any relational databases with JDBC driver or MongoDB are supported.\n+\n+* Reactive database access with non-reactive drivers +\n+Most JDBC drivers are blocking. Using them in a reactive application is problematic. Helidon DB Client allows the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service.\n+\n+* Observability +\n+The API offers support for health checks, metrics and tracing.\n+\n+* Backpressure Management +\n+Helidon DB Client performs database operations only when it\u2019s requested by the consumer. This is propagated all the way to the TCP layer.\n+\n+* Improved portability between database drivers +\n+The DB Client works with native database statements that can be used inline in the code or defined as named statements in database configuration. +\n+By moving the native query code to configuration files, the Helidon DB Client allows you to switch to another database by changing the configuration files, not the code.\n+\n+== Getting Started\n+\n+Before you begin you must:\n+\n+1. Add the DB Client dependencies to the Maven `pom.xml` file\n+2. Use Helidon Config to configure the client.\n+\n+The <<about/04_managing-dependencies.adoc, Managing Dependencies>> page describes how you\n+should declare dependency management for Helidon applications. For the DB Client you must include the following dependencies in your project:\n+\n+[source,java]\n+----\n+<dependencies>\n+     <dependency>\n+         <groupId>io.helidon.dbclient</groupId> // <1> \n+         <artifactId>helidon-dbclient</artifactId>\n+     </dependency>\n+     <dependency>\n+         <groupId>io.helidon.dbclient</groupId> // <2> \n+         <artifactId>helidon-dbclient-jdbc</artifactId>\n+     </dependency>\n+     <dependency>\n+         <groupId>com.h2.database</groupId> // <3> \n+         <artifactId>h2</artifactId>\n+         <version>1.4.200</version>\n+    </dependency>    \n+     ...\n+</dependencies>\n+\n+----\n+\n+<1>  Add the Helidon DB Client", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffd45d4acd76b232ae6fbfdadf317be04ecc7c52"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NDk1Mg==", "bodyText": "good catch, done.", "url": "https://github.com/oracle/helidon/pull/1652#discussion_r425274952", "createdAt": "2020-05-14T16:33:26Z", "author": {"login": "ljamen"}, "path": "docs/se/dbclient/01_introduction.adoc", "diffHunk": "@@ -16,10 +16,230 @@\n \n ///////////////////////////////////////////////////////////////////////////////\n \n-= Helidon DB Client\n-:toc:\n-:toc-placement: preamble\n+= About Helidon DB Client\n+\n :description: Helidon DB Client\n :keywords: helidon, se, database, dbclient\n \n-== This page is Under Construction and will be available soon\n+\n+The Helidon SE DB Client provides a unified, reactive API for working with databases in non-blocking way. \n+\n+== Helidon DB Client Features Overview\n+\n+The DB Client simplfies how you work with databases by allowing the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service. Specifically, the Heldion DB Client provides the following:\n+\n+* Unified API for data access and query +\n+The API was implemented as a layer above JDBC or MongoDB Reactive Streams Java Driver, so any relational databases with JDBC driver or MongoDB are supported.\n+\n+* Reactive database access with non-reactive drivers +\n+Most JDBC drivers are blocking. Using them in a reactive application is problematic. Helidon DB Client allows the use of blocking JDBC drivers in your reactive application by wrapping a blocking driver in an executor service.\n+\n+* Observability +\n+The API offers support for health checks, metrics and tracing.\n+\n+* Backpressure Management +\n+Helidon DB Client performs database operations only when it\u2019s requested by the consumer. This is propagated all the way to the TCP layer.\n+\n+* Improved portability between database drivers +\n+The DB Client works with native database statements that can be used inline in the code or defined as named statements in database configuration. +\n+By moving the native query code to configuration files, the Helidon DB Client allows you to switch to another database by changing the configuration files, not the code.\n+\n+== Getting Started\n+\n+Before you begin you must:\n+\n+1. Add the DB Client dependencies to the Maven `pom.xml` file\n+2. Use Helidon Config to configure the client.\n+\n+The <<about/04_managing-dependencies.adoc, Managing Dependencies>> page describes how you\n+should declare dependency management for Helidon applications. For the DB Client you must include the following dependencies in your project:\n+\n+[source,java]\n+----\n+<dependencies>\n+     <dependency>\n+         <groupId>io.helidon.dbclient</groupId> // <1> \n+         <artifactId>helidon-dbclient</artifactId>\n+     </dependency>\n+     <dependency>\n+         <groupId>io.helidon.dbclient</groupId> // <2> \n+         <artifactId>helidon-dbclient-jdbc</artifactId>\n+     </dependency>\n+     <dependency>\n+         <groupId>com.h2.database</groupId> // <3> \n+         <artifactId>h2</artifactId>\n+         <version>1.4.200</version>\n+    </dependency>    \n+     ...\n+</dependencies>\n+\n+----\n+\n+<1>  Add the Helidon DB Client", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTAxNjAxNA=="}, "originalCommit": {"oid": "ffd45d4acd76b232ae6fbfdadf317be04ecc7c52"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 637, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}