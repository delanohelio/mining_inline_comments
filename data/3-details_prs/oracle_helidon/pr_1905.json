{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1MjYxNzMy", "number": 1905, "title": "Media support methods", "bodyText": "", "createdAt": "2020-05-29T18:33:09Z", "url": "https://github.com/oracle/helidon/pull/1905", "merged": true, "mergeCommit": {"oid": "f7d90a8e3d4d9f83ca5ff8b196702bd1364b5810"}, "closed": true, "closedAt": "2020-06-01T16:43:36Z", "author": {"login": "Verdent"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmDsrNgH2gAyNDI1MjYxNzMyOmE4Y2ZiN2RiN2U5YjFiN2IyYzUzNDNjMTRkZTgxYmM2ZDRmNTU1NGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnBkxgAFqTQyMTkxNTE3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a8cfb7db7e9b1b7b2c5343c14de81bc6d4f5554b", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/a8cfb7db7e9b1b7b2c5343c14de81bc6d4f5554b", "committedDate": "2020-05-29T14:53:43Z", "message": "Get method removed from MessageBodyOperators\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06ed00c17b40487637cb7d308d93e02aa65c2d88", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/06ed00c17b40487637cb7d308d93e02aa65c2d88", "committedDate": "2020-05-29T18:29:57Z", "message": "JSON-P support changed\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b983e5c04d1839dcfc4d445b64fe2d93675391ae", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/b983e5c04d1839dcfc4d445b64fe2d93675391ae", "committedDate": "2020-05-29T18:30:18Z", "message": "JSON-B support changed\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "426a6d83c5ffa4e011de73e3d8da87153944fe4c", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/426a6d83c5ffa4e011de73e3d8da87153944fe4c", "committedDate": "2020-05-29T18:30:31Z", "message": "Jackson support changed\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16ea884f899660cc460c193f87c9567b4d4b8c91", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/16ea884f899660cc460c193f87c9567b4d4b8c91", "committedDate": "2020-05-29T19:00:28Z", "message": "naming changes and tests fixes\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72f0da1bb84617d134379d0c5db6f3b6004ef4a5", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/72f0da1bb84617d134379d0c5db6f3b6004ef4a5", "committedDate": "2020-05-29T19:23:35Z", "message": "writer fixes\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTMyNjk1", "url": "https://github.com/oracle/helidon/pull/1905#pullrequestreview-421532695", "createdAt": "2020-05-31T22:15:03Z", "commit": {"oid": "72f0da1bb84617d134379d0c5db6f3b6004ef4a5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQyMjoxNTowM1rOGc7nCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQyMjoxNTowM1rOGc7nCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk4OTk2MQ==", "bodyText": "Inconsistency:\nreaderInstance() against newWriter() methods\nThe readerInstance() method is worse, as it prescribes implementation - it is expected to return the same instance every time.\nThe newWriter() method clearly says that it may be a different instance each time (and yet if implementation wants, it can return the same one).\nI would stay with the newXXX methods", "url": "https://github.com/oracle/helidon/pull/1905#discussion_r432989961", "createdAt": "2020-05-31T22:15:03Z", "author": {"login": "tomas-langer"}, "path": "media/jackson/src/main/java/io/helidon/media/jackson/JacksonSupport.java", "diffHunk": "@@ -33,94 +34,114 @@\n /**\n  * Support for Jackson integration.\n  *\n- * For usage examples navigate to the {@link MediaSupport}\n+ * For usage examples navigate to the {@link MediaSupport}.\n  */\n public final class JacksonSupport implements MediaSupport {\n \n-    static {\n-        HelidonFeatures.register(HelidonFlavor.SE, \"Media\", \"Jackson\");\n-    }\n-\n     private static final ObjectMapper MAPPER = new ObjectMapper()\n             .registerModule(new ParameterNamesModule())\n             .registerModule(new Jdk8Module())\n             .registerModule(new JavaTimeModule());\n+    private static final LazyValue<JacksonSupport> DEFAULT = LazyValue.create(() -> new JacksonSupport(MAPPER));\n \n-    private static final JacksonSupport DEFAULT_JACKSON = new JacksonSupport(MAPPER);\n+    static {\n+        HelidonFeatures.register(HelidonFlavor.SE, \"Media\", \"Jackson\");\n+    }\n \n-    private final ObjectMapper objectMapper;\n+    private final JacksonBodyReader reader;\n+    private final JacksonBodyWriter writer;\n \n     private JacksonSupport(final ObjectMapper objectMapper) {\n-        this.objectMapper = objectMapper;\n+        this.reader = JacksonBodyReader.create(objectMapper);\n+        this.writer = JacksonBodyWriter.create(objectMapper);\n     }\n \n     /**\n-     * Creates new Jackson reader instance.\n+     * Creates a new {@link JacksonSupport}.\n      *\n-     * @return Jackson reader instance\n+     * @return a new {@link JacksonSupport}\n      */\n-    public static JacksonBodyReader reader() {\n-        return create().newReader();\n+    public static JacksonSupport create() {\n+        return DEFAULT.get();\n     }\n \n     /**\n-     * Creates new Jackson writer instance.\n+     * Creates a new {@link JacksonSupport}.\n      *\n-     * @return Jackson writer instance\n+     * @param objectMapper must not be {@code null}\n+     * @return a new {@link JacksonSupport}\n      */\n-    public static JacksonBodyWriter writer() {\n-        return create().newWriter();\n+    public static JacksonSupport create(ObjectMapper objectMapper) {\n+        Objects.requireNonNull(objectMapper);\n+        return new JacksonSupport(objectMapper);\n     }\n \n     /**\n-     * Creates new Jackson reader instance.\n+     * Return a default Jackson entity reader.\n      *\n-     * @return Jackson reader instance\n+     * @return default Jackson body writer instance\n      */\n-    public JacksonBodyReader newReader() {\n-        return JacksonBodyReader.create(objectMapper);\n+    public static MessageBodyReader<Object> reader() {\n+        return DEFAULT.get().reader;\n     }\n \n     /**\n-     * Creates new Jackson writer instance.\n+     * Create a new Jackson entity reader based on {@link ObjectMapper} instance.\n      *\n-     * @return Jackson writer instance\n+     * @param objectMapper object mapper instance\n+     * @return new Jackson body reader instance\n      */\n-    public JacksonBodyWriter newWriter() {\n-        return JacksonBodyWriter.create(objectMapper);\n+    public static MessageBodyReader<Object> reader(ObjectMapper objectMapper) {\n+        Objects.requireNonNull(objectMapper);\n+        return JacksonBodyReader.create(objectMapper);\n     }\n \n-    @Override\n-    public Collection<MessageBodyReader<?>> readers() {\n-        return List.of(newReader());\n+    /**\n+     * Return a default Jackson entity writer.\n+     *\n+     * @return default Jackson body writer instance\n+     */\n+    public static MessageBodyWriter<Object> writer() {\n+        return DEFAULT.get().writer;\n     }\n \n-    @Override\n-    public Collection<MessageBodyWriter<?>> writers() {\n-        return List.of(newWriter());\n+    /**\n+     * Create a new Jackson entity writer based on {@link ObjectMapper} instance.\n+     *\n+     * @param objectMapper object mapper instance\n+     * @return new Jackson body writer instance\n+     */\n+    public static MessageBodyWriter<Object> writer(ObjectMapper objectMapper) {\n+        Objects.requireNonNull(objectMapper);\n+        return JacksonBodyWriter.create(objectMapper);\n     }\n \n     /**\n-     * Creates a new {@link JacksonSupport}.\n+     * Return Jackson reader instance.\n      *\n-     * @param objectMapper must not be {@code null}\n-     * @return a new {@link JacksonSupport}\n-     *\n-     * @exception NullPointerException if {@code objectMapper}\n-     * is {@code null}\n+     * @return Jackson reader instance\n      */\n-    public static JacksonSupport create(ObjectMapper objectMapper) {\n-        Objects.requireNonNull(objectMapper);\n-        return new JacksonSupport(objectMapper);\n+    public MessageBodyReader<Object> readerInstance() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72f0da1bb84617d134379d0c5db6f3b6004ef4a5"}, "originalPosition": 138}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5be98be7ef388cb2e277f3c2a871b006c4f268f", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/c5be98be7ef388cb2e277f3c2a871b006c4f268f", "committedDate": "2020-06-01T09:45:15Z", "message": "JsonpSupport import fix\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNzc2MDM0", "url": "https://github.com/oracle/helidon/pull/1905#pullrequestreview-421776034", "createdAt": "2020-06-01T11:33:49Z", "commit": {"oid": "c5be98be7ef388cb2e277f3c2a871b006c4f268f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8eb9ed2967c5eba6ecc684278905d0f8904830e", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/c8eb9ed2967c5eba6ecc684278905d0f8904830e", "committedDate": "2020-06-01T12:10:54Z", "message": "Thomas suggestion implemented\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b3fe6c98f7d7aa7269dfd0722b273c1250a5899", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/6b3fe6c98f7d7aa7269dfd0722b273c1250a5899", "committedDate": "2020-06-01T12:16:10Z", "message": "Default operators made package private\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f824f2af5d24d8f8c835deba9446f798be1b806", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/4f824f2af5d24d8f8c835deba9446f798be1b806", "committedDate": "2020-06-01T12:19:11Z", "message": "DefaultsProvider fix\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eedfc151c40b65729077fc8b80b3bd535c947746", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/eedfc151c40b65729077fc8b80b3bd535c947746", "committedDate": "2020-06-01T12:23:36Z", "message": "checkstyle fix\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84c489dda009a375b535deef27d6451544a293e4", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/84c489dda009a375b535deef27d6451544a293e4", "committedDate": "2020-06-01T14:57:50Z", "message": "minor fixes\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTE1MTc1", "url": "https://github.com/oracle/helidon/pull/1905#pullrequestreview-421915175", "createdAt": "2020-06-01T14:59:12Z", "commit": {"oid": "84c489dda009a375b535deef27d6451544a293e4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 661, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}