{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5MDcxNjQ1", "number": 2325, "title": "Use CDI to instantiate Application classes to invoke getClasses", "bodyText": "Resolves #2324\nOriginally, the OpenAPI code instantiated Application classes directly so as to invoke their getClasses method.\nThis does not work if the Application injects a bean and uses the bean in the getClasses method.\nThis PR uses CDI's Unmanaged constructs to temporarily instantiate and inject each Application class, invoke getClasses, then dispose of the instance.\nThanks to @ljnelson for the idea of the solution.", "createdAt": "2020-09-03T22:55:57Z", "url": "https://github.com/oracle/helidon/pull/2325", "merged": true, "mergeCommit": {"oid": "721a1853ff935feef7872989fd36243e084cea68"}, "closed": true, "closedAt": "2020-09-04T17:07:23Z", "author": {"login": "tjquinno"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFYnBYAH2gAyNDc5MDcxNjQ1OjNiOTJjMzA3Y2EwOGVhYzFiNGI0NjFiZmZmN2VhMjNhMTYwZTAxNzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFnXnegFqTQ4Mjc3MzUyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3b92c307ca08eac1b4b461bfff7ea23a160e0170", "author": {"user": {"login": "tjquinno", "name": "Tim Quinn"}}, "url": "https://github.com/oracle/helidon/commit/3b92c307ca08eac1b4b461bfff7ea23a160e0170", "committedDate": "2020-09-03T22:47:12Z", "message": "Use CDI (instead of simple instantiation) to instantiate and inject Application instances during OpenAPI processing\n\nSigned-off-by: tim.quinn@oracle.com <tim.quinn@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08a4c740f7ccb74a8bbda44c884343753317ebd0", "author": {"user": {"login": "tjquinno", "name": "Tim Quinn"}}, "url": "https://github.com/oracle/helidon/commit/08a4c740f7ccb74a8bbda44c884343753317ebd0", "committedDate": "2020-09-03T22:50:50Z", "message": "Remove unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMjU2NzM0", "url": "https://github.com/oracle/helidon/pull/2325#pullrequestreview-482256734", "createdAt": "2020-09-03T23:01:45Z", "commit": {"oid": "08a4c740f7ccb74a8bbda44c884343753317ebd0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzowMTo0NVrOHM6IHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzowMTo0NVrOHM6IHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzI5NzMwOQ==", "bodyText": "Since disposal will do nothing, this is probably OK, but it looks weird.  I wonder if you can move this Unmanaged stuff elsewhere, like where you call something like getClasses() on the Application instance, and do the disposal afterwards.  Like up around line 123 or so for example.", "url": "https://github.com/oracle/helidon/pull/2325#discussion_r483297309", "createdAt": "2020-09-03T23:01:45Z", "author": {"login": "ljnelson"}, "path": "microprofile/openapi/src/main/java/io/helidon/microprofile/openapi/MPOpenAPIBuilder.java", "diffHunk": "@@ -172,14 +172,11 @@ MPOpenAPIBuilder config(Config mpConfig) {\n     }\n \n     private static Optional<? extends Application> instantiate(Class<? extends Application> appClass) {\n-        try {\n-            return Optional.of(appClass.getConstructor().newInstance());\n-        } catch (InstantiationException | IllegalAccessException | InvocationTargetException e) {\n-            throw new RuntimeException(e);\n-        } catch (NoSuchMethodException e) {\n-            // Wrapper app does not have a no-args constructor so we canont instantiate it.\n-            return Optional.empty();\n-        }\n+        Unmanaged<? extends Application> unmanagedApp = new Unmanaged<>(appClass);\n+        Unmanaged.UnmanagedInstance<? extends Application> unmanagedInstance = unmanagedApp.newInstance();\n+        Application app = unmanagedInstance.produce().inject().postConstruct().get();\n+        unmanagedInstance.preDestroy().dispose();\n+        return Optional.of(app);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08a4c740f7ccb74a8bbda44c884343753317ebd0"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57a4e022cc4b0b39c754320389392bf1aceb33a0", "author": {"user": {"login": "tjquinno", "name": "Tim Quinn"}}, "url": "https://github.com/oracle/helidon/commit/57a4e022cc4b0b39c754320389392bf1aceb33a0", "committedDate": "2020-09-04T15:49:43Z", "message": "Rearrange some code so, when we use Unmanaged to instantiate the Application class, we use the instance as much as we need and then dispose of it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyNzczNTI3", "url": "https://github.com/oracle/helidon/pull/2325#pullrequestreview-482773527", "createdAt": "2020-09-04T15:58:58Z", "commit": {"oid": "57a4e022cc4b0b39c754320389392bf1aceb33a0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 442, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}