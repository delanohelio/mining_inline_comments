{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2NzU3MjYz", "number": 2308, "title": "Update MediaType, lazy non known type, read-only parameters map", "bodyText": "Update MediaType.create\n\nreturn a known type only if there is no parameters\nchange MediaType.KNOWN_TYPES from Map<MediaType,MediaType> to Map<String, MediaType>\nbuild a key as a String of the form type/subtype,\nthis is a minor optimization for known types that avoids creating a MediaType instance as a key\nreplace use of Optional with plain if conditions\n\nUpdate MediaType static fields initialization\n\nreplace createContentType with a dedicated constructor to avoid the calls to createContentType/create/builder and the creation of an instance of Builder\nuse a static initializer to populate the KNOWN_TYPE map\n\nMake parameters a read-only map\n\nOptimize for empty parameters and use Map.of()\notherwise wrap it with Collections.unmodifiableMap()", "createdAt": "2020-09-01T01:59:53Z", "url": "https://github.com/oracle/helidon/pull/2308", "merged": true, "mergeCommit": {"oid": "b3ddfa9f755a3cd698dcc1ed4a00bf3f3725d2ba"}, "closed": true, "closedAt": "2020-09-01T22:23:48Z", "author": {"login": "romain-grecourt"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdEdhfzAH2gAyNDc2NzU3MjYzOjBjNjIwMGVjNjY4YWZiZDllMTE3ZmM2YjlkNWFlOWQ4MzE4MDliM2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEuGp3AFqTQ4MDEyMTQ5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0c6200ec668afbd9e117fc6b9d5ae9d831809b3f", "author": {"user": {"login": "romain-grecourt", "name": "Romain Grecourt"}}, "url": "https://github.com/oracle/helidon/commit/0c6200ec668afbd9e117fc6b9d5ae9d831809b3f", "committedDate": "2020-09-01T01:56:46Z", "message": "Update MediaType.create\n - create the non known type with a supplier, instead of always creating them\n - return a known type only if there is no parameters\n - change MediaType.KNOWN_TYPES from Map<MediaType,MediaType> to Map<String, MediaType>\n - build a key as a String of the form type/subtype,\n   this is a minor optimization for known types that avoids creating a MediaType instance as a key\n\nMake parameters a read-only map\n - Optimize for empty parameters and use Map.of()\n - otherwise wrap it with Collections.unmodifiableMap()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa2b7b77f14669a3a52a41d330450451acb820d0", "author": {"user": {"login": "romain-grecourt", "name": "Romain Grecourt"}}, "url": "https://github.com/oracle/helidon/commit/aa2b7b77f14669a3a52a41d330450451acb820d0", "committedDate": "2020-09-01T18:57:05Z", "message": "More micro optimizations to justify the first changes:\n - avoid creating too many objects in MediaType.create: replace Optional and Supplier with plain ifs.\n - update the code that creates the MediaType concstants for the known types: replace createContentType() with\n   a new constructor to avoid 3 static method calls (createContentType(), create(), builder()) and build object\n   creation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6177fd3a76254f102ac80a9de06d22fd2d5dbd2", "author": {"user": {"login": "romain-grecourt", "name": "Romain Grecourt"}}, "url": "https://github.com/oracle/helidon/commit/d6177fd3a76254f102ac80a9de06d22fd2d5dbd2", "committedDate": "2020-09-01T19:53:08Z", "message": "use a static initializer block to initialize all the MediaType constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0bbba5b1196377a55837107c2f6ff72bc143abf", "author": {"user": {"login": "romain-grecourt", "name": "Romain Grecourt"}}, "url": "https://github.com/oracle/helidon/commit/f0bbba5b1196377a55837107c2f6ff72bc143abf", "committedDate": "2020-09-01T20:11:20Z", "message": "use a local map while initializing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73d65bfaa97327cb27a0c7402550a91c77036f15", "author": {"user": {"login": "romain-grecourt", "name": "Romain Grecourt"}}, "url": "https://github.com/oracle/helidon/commit/73d65bfaa97327cb27a0c7402550a91c77036f15", "committedDate": "2020-09-01T20:15:51Z", "message": "make KNOWN_TYPES an unmodifiable map"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b42e1c3fb0cfb6fefe58bd02f5400abad5dadb9", "author": {"user": {"login": "romain-grecourt", "name": "Romain Grecourt"}}, "url": "https://github.com/oracle/helidon/commit/4b42e1c3fb0cfb6fefe58bd02f5400abad5dadb9", "committedDate": "2020-09-01T20:15:07Z", "message": "make KNOWN_TYPES an unmodifiable map"}, "afterCommit": {"oid": "73d65bfaa97327cb27a0c7402550a91c77036f15", "author": {"user": {"login": "romain-grecourt", "name": "Romain Grecourt"}}, "url": "https://github.com/oracle/helidon/commit/73d65bfaa97327cb27a0c7402550a91c77036f15", "committedDate": "2020-09-01T20:15:51Z", "message": "make KNOWN_TYPES an unmodifiable map"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMDg5NTE5", "url": "https://github.com/oracle/helidon/pull/2308#pullrequestreview-480089519", "createdAt": "2020-09-01T20:26:06Z", "commit": {"oid": "4b42e1c3fb0cfb6fefe58bd02f5400abad5dadb9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMDoyNzoyNlrOHLHAwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMDoyNzoyNlrOHLHAwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQxMTI2Ng==", "bodyText": "You can avoid the HashMap creation in probably the vast majority of cases by testing parameters.isEmpty() first.  Then, you can move line 363 up as well and simplify.  e.g.:\nif (parameters.isEmpty()) {\n  mediaType = KNOWN_TYPES.get(normalizedType + '/' + normalizedSubtype);\n} else {\n  Map<String, String> normalizedParameters = new HashMap<>();\n  for (Map.Entry<String, String> entry : parameters.entrySet()) {\n    String attribute = Tokenizer.normalize(TOKEN_MATCHER, entry.getKey());\n    normalizedParameters.put(attribute, normalizeParameterValue(attribute, entry.getValue()));\n  }\n}\nif (mediaType == null) {\n  mediaType = MediaType.builder()\n    .type(normalizedType)\n    .subtype(normalizedSubtype)\n    .parameters(normalizedParameters)\n    .build();\n}", "url": "https://github.com/oracle/helidon/pull/2308#discussion_r481411266", "createdAt": "2020-09-01T20:27:26Z", "author": {"login": "ljnelson"}, "path": "common/http/src/main/java/io/helidon/common/http/MediaType.java", "diffHunk": "@@ -268,21 +351,26 @@ private static MediaType create(String type, String subtype,\n             throw new IllegalStateException(\n                     \"A wildcard type cannot be used with a non-wildcard subtype\");\n         }\n-        Map<String, String> builder = new HashMap<>();\n+        Map<String, String> normalizedParameters = new HashMap<>();\n         for (Map.Entry<String, String> entry : parameters.entrySet()) {\n             String attribute = Tokenizer.normalize(TOKEN_MATCHER, entry.getKey());\n-            builder.put(attribute, normalizeParameterValue(attribute, entry.getValue()));\n+            normalizedParameters.put(attribute, normalizeParameterValue(attribute, entry.getValue()));\n         }\n \n-        MediaType mediaType = MediaType.builder()\n-                .type(normalizedType)\n-                .subtype(normalizedSubtype)\n-                .parameters(builder)\n-                .build();\n+        MediaType mediaType = null;\n \n         // Return one of the constants if the media type is a known type.\n-        //TODO or else get?\n-        return Optional.ofNullable(KNOWN_TYPES.get(mediaType)).orElse(mediaType);\n+        if (normalizedParameters.isEmpty()) {\n+            mediaType = KNOWN_TYPES.get(normalizedType + '/' + normalizedSubtype);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73d65bfaa97327cb27a0c7402550a91c77036f15"}, "originalPosition": 289}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0539663a35b19e39abdb5918130d7e8e15cc1b4c", "author": {"user": {"login": "romain-grecourt", "name": "Romain Grecourt"}}, "url": "https://github.com/oracle/helidon/commit/0539663a35b19e39abdb5918130d7e8e15cc1b4c", "committedDate": "2020-09-01T21:07:28Z", "message": "incorporate review feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMTIxNDk5", "url": "https://github.com/oracle/helidon/pull/2308#pullrequestreview-480121499", "createdAt": "2020-09-01T21:15:50Z", "commit": {"oid": "0539663a35b19e39abdb5918130d7e8e15cc1b4c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 430, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}