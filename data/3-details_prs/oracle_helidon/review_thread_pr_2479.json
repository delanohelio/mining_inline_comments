{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MTIyNjE3", "number": 2479, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoyMjo0NFrOE21_Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozMjowNVrOE22QDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTQzMDUxOnYy", "diffSide": "RIGHT", "path": "logging/common/src/main/java/io/helidon/logging/package-info.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoyMjo0NFrOHv2niQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoyMjo0NFrOHv2niQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTkzOTk3Nw==", "bodyText": "Duplicate javadoc.", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519939977", "createdAt": "2020-11-09T16:22:44Z", "author": {"login": "tomas-langer"}, "path": "logging/common/src/main/java/io/helidon/logging/package-info.java", "diffHunk": "@@ -0,0 +1,23 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**\n+ * Helidon MDC support for delegation of the MDC values to all of the logging frameworks.\n+ */\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7186e2d4f8f5552fc4f7bc9126c222996727d93"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTQzMjk3OnYy", "diffSide": "RIGHT", "path": "logging/common/src/main/java/io/helidon/logging/HelidonMdc.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoyMzoyMFrOHv2pIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoyMzoyMFrOHv2pIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0MDM4NA==", "bodyText": "Wrong constant name - this is not a loader, it is a list of providers", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519940384", "createdAt": "2020-11-09T16:23:20Z", "author": {"login": "tomas-langer"}, "path": "logging/common/src/main/java/io/helidon/logging/HelidonMdc.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.ServiceLoader;\n+\n+import io.helidon.common.serviceloader.HelidonServiceLoader;\n+import io.helidon.logging.spi.MdcProvider;\n+\n+/**\n+ * Helidon MDC delegates values across all of the supported logging frameworks on the classpath.\n+ */\n+public class HelidonMdc {\n+\n+    private static final List<MdcProvider> SERVICE_LOADER = HelidonServiceLoader", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7186e2d4f8f5552fc4f7bc9126c222996727d93"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTQ0NjI0OnYy", "diffSide": "RIGHT", "path": "logging/common/src/main/java/io/helidon/logging/HelidonMdc.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoyNTo1OFrOHv2xLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoyNTo1OFrOHv2xLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0MjQ0NA==", "bodyText": "Inconsistency between set and get operations - set uses Object, get returns String. Seems to me all implementations use String values.\nEither document that the value is coerced into a String, or change the signature.", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519942444", "createdAt": "2020-11-09T16:25:58Z", "author": {"login": "tomas-langer"}, "path": "logging/common/src/main/java/io/helidon/logging/HelidonMdc.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.ServiceLoader;\n+\n+import io.helidon.common.serviceloader.HelidonServiceLoader;\n+import io.helidon.logging.spi.MdcProvider;\n+\n+/**\n+ * Helidon MDC delegates values across all of the supported logging frameworks on the classpath.\n+ */\n+public class HelidonMdc {\n+\n+    private static final List<MdcProvider> SERVICE_LOADER = HelidonServiceLoader\n+            .builder(ServiceLoader.load(MdcProvider.class)).build().asList();\n+\n+    private HelidonMdc() {\n+        throw new UnsupportedOperationException(\"This class cannot be instantiated\");\n+    }\n+\n+    /**\n+     * Propagate value to all of the {@link MdcProvider} registered via SPI.\n+     *\n+     * @param key entry key\n+     * @param value entry value\n+     */\n+    public static void set(String key, Object value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7186e2d4f8f5552fc4f7bc9126c222996727d93"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTQ1MjM2OnYy", "diffSide": "RIGHT", "path": "logging/common/src/main/java/io/helidon/logging/HelidonMdc.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoyNzoxN1rOHv21Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoyNzoxN1rOHv21Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0MzQyNg==", "bodyText": "Shouldn't this return an Optional? If there is no value, it should be clear (as empty string is a valid value, and null should never be returned in Helidon APIs)", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519943426", "createdAt": "2020-11-09T16:27:17Z", "author": {"login": "tomas-langer"}, "path": "logging/common/src/main/java/io/helidon/logging/HelidonMdc.java", "diffHunk": "@@ -0,0 +1,77 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging;\n+\n+import java.util.List;\n+import java.util.Objects;\n+import java.util.ServiceLoader;\n+\n+import io.helidon.common.serviceloader.HelidonServiceLoader;\n+import io.helidon.logging.spi.MdcProvider;\n+\n+/**\n+ * Helidon MDC delegates values across all of the supported logging frameworks on the classpath.\n+ */\n+public class HelidonMdc {\n+\n+    private static final List<MdcProvider> SERVICE_LOADER = HelidonServiceLoader\n+            .builder(ServiceLoader.load(MdcProvider.class)).build().asList();\n+\n+    private HelidonMdc() {\n+        throw new UnsupportedOperationException(\"This class cannot be instantiated\");\n+    }\n+\n+    /**\n+     * Propagate value to all of the {@link MdcProvider} registered via SPI.\n+     *\n+     * @param key entry key\n+     * @param value entry value\n+     */\n+    public static void set(String key, Object value) {\n+        SERVICE_LOADER.forEach(provider -> provider.put(key, value));\n+    }\n+\n+    /**\n+     * Remove value with the specific key from all of the instances of {@link MdcProvider}.\n+     *\n+     * @param key key\n+     */\n+    public static void remove(String key) {\n+        SERVICE_LOADER.forEach(provider -> provider.remove(key));\n+    }\n+\n+    /**\n+     * Remove all of the entries bound to the current thread from the instances of {@link MdcProvider}.\n+     */\n+    public static void clear() {\n+        SERVICE_LOADER.forEach(MdcProvider::clear);\n+    }\n+\n+    /**\n+     * Return the first value found to the specific key.\n+     *\n+     * @param key key\n+     * @return found value bound to key\n+     */\n+    public static String get(String key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7186e2d4f8f5552fc4f7bc9126c222996727d93"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTQ1NjM0OnYy", "diffSide": "RIGHT", "path": "logging/common/src/main/java/module-info.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoyODoxMFrOHv23fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjoyODoxMFrOHv23fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0NDA2MA==", "bodyText": "Module name should be io.helidon.logging.common", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519944060", "createdAt": "2020-11-09T16:28:10Z", "author": {"login": "tomas-langer"}, "path": "logging/common/src/main/java/module-info.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/**\n+ * Helidon logging.\n+ */\n+module io.helidon.logging {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7186e2d4f8f5552fc4f7bc9126c222996727d93"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTQ2NTE5OnYy", "diffSide": "RIGHT", "path": "logging/jul/src/main/java/io/helidon/logging/jul/JulMdcPropagator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozMDoxMFrOHv29Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozMDoxMFrOHv29Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0NTQ4Mg==", "bodyText": "Javadoc should mark it as a service loader service, so people do not try to use it directly", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519945482", "createdAt": "2020-11-09T16:30:10Z", "author": {"login": "tomas-langer"}, "path": "logging/jul/src/main/java/io/helidon/logging/jul/JulMdcPropagator.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging.jul;\n+\n+import java.util.Map;\n+\n+import io.helidon.common.context.spi.DataPropagationProvider;\n+\n+/**\n+ * This is propagator of JUL MDC values between different threads.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7186e2d4f8f5552fc4f7bc9126c222996727d93"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTQ2NjA3OnYy", "diffSide": "RIGHT", "path": "logging/jul/src/main/java/io/helidon/logging/jul/JulMdcProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozMDoxOFrOHv29iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozMDoxOFrOHv29iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0NTYwOQ==", "bodyText": "Javadoc should mark it as a service loader service, so people do not try to use it directly", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519945609", "createdAt": "2020-11-09T16:30:18Z", "author": {"login": "tomas-langer"}, "path": "logging/jul/src/main/java/io/helidon/logging/jul/JulMdcProvider.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging.jul;\n+\n+import io.helidon.logging.spi.MdcProvider;\n+\n+/**\n+ * Provider for setting MDC values to the Java Util Logging MDC support.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7186e2d4f8f5552fc4f7bc9126c222996727d93"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTQ3MzU5OnYy", "diffSide": "RIGHT", "path": "logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcPropagator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozMTo1OVrOHv3CQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozMTo1OVrOHv3CQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0NjgxNw==", "bodyText": "Javadoc should mark it as a service loader service, so people do not try to use it directly", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519946817", "createdAt": "2020-11-09T16:31:59Z", "author": {"login": "tomas-langer"}, "path": "logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcPropagator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging.slf4j;\n+\n+import java.util.Map;\n+\n+import io.helidon.common.context.spi.DataPropagationProvider;\n+\n+import org.slf4j.MDC;\n+\n+/**\n+ * This is propagator of Slf4j MDC values between different threads.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7186e2d4f8f5552fc4f7bc9126c222996727d93"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1OTQ3NDA3OnYy", "diffSide": "RIGHT", "path": "logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozMjowNVrOHv3CjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxNjozMjowNVrOHv3CjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTk0Njg5Mg==", "bodyText": "Javadoc should mark it as a service loader service, so people do not try to use it directly", "url": "https://github.com/oracle/helidon/pull/2479#discussion_r519946892", "createdAt": "2020-11-09T16:32:05Z", "author": {"login": "tomas-langer"}, "path": "logging/slf4j/src/main/java/io/helidon/logging/slf4j/Slf4jMdcProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Copyright (c) 2020 Oracle and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.helidon.logging.slf4j;\n+\n+\n+import io.helidon.logging.spi.MdcProvider;\n+\n+import org.slf4j.MDC;\n+\n+/**\n+ * Provider for setting MDC values to the Slf4j MDC support.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7186e2d4f8f5552fc4f7bc9126c222996727d93"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 328, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}