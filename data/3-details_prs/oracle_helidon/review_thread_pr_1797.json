{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MDU4OTg0", "number": 1797, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjozMDo0N1rOD8ju1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTo0OTo0MFrOD87MOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODI2NTgxOnYy", "diffSide": "RIGHT", "path": "apptypes/mp/basic/src/main/resources/META-INF/helidon-archetype-resources.txt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjozMDo0N1rOGVknyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjozMDo0N1rOGVknyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3MzI4OA==", "bodyText": "Can you remove this file? This should be generated by the plugin.", "url": "https://github.com/oracle/helidon/pull/1797#discussion_r425273288", "createdAt": "2020-05-14T16:30:47Z", "author": {"login": "romain-grecourt"}, "path": "apptypes/mp/basic/src/main/resources/META-INF/helidon-archetype-resources.txt", "diffHunk": "@@ -0,0 +1,8 @@\n+pom.xml.mustache", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0095db768980365a5c6541573f2e05685422f932"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODI4MTA1OnYy", "diffSide": "RIGHT", "path": "apptypes/mp/basic/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjozNDo0M1rOGVkxng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzozOTo1MFrOGVnSGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NTgwNg==", "bodyText": "This should not be ${project.version}. This should be moved in the parent pom as plugin with extension=true and use the build-tools version property.", "url": "https://github.com/oracle/helidon/pull/1797#discussion_r425275806", "createdAt": "2020-05-14T16:34:43Z", "author": {"login": "romain-grecourt"}, "path": "apptypes/mp/basic/pom.xml", "diffHunk": "@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.apptypes</groupId>\n+        <artifactId>helidon-apptypes-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+    </parent>\n+    <artifactId>helidon-apptypes-mp-basic</artifactId>\n+    <name>Helidon Template Application MP basic</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+\n+    <build>\n+        <extensions>\n+            <extension>\n+                <groupId>io.helidon.build-tools.archetype</groupId>\n+                <artifactId>helidon-archetype-maven-plugin</artifactId>\n+                <version>${project.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0095db768980365a5c6541573f2e05685422f932"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMxNjg4OA==", "bodyText": "Right, not the correct version. Will fix.", "url": "https://github.com/oracle/helidon/pull/1797#discussion_r425316888", "createdAt": "2020-05-14T17:39:50Z", "author": {"login": "spericas"}, "path": "apptypes/mp/basic/pom.xml", "diffHunk": "@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.apptypes</groupId>\n+        <artifactId>helidon-apptypes-mp</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+    </parent>\n+    <artifactId>helidon-apptypes-mp-basic</artifactId>\n+    <name>Helidon Template Application MP basic</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+\n+    <build>\n+        <extensions>\n+            <extension>\n+                <groupId>io.helidon.build-tools.archetype</groupId>\n+                <artifactId>helidon-archetype-maven-plugin</artifactId>\n+                <version>${project.version}</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3NTgwNg=="}, "originalCommit": {"oid": "0095db768980365a5c6541573f2e05685422f932"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODI5MzUwOnYy", "diffSide": "RIGHT", "path": "apptypes/se/basic/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjozNzo1NVrOGVk5rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjozNzo1NVrOGVk5rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3Nzg3MA==", "bodyText": "Same comment as above, this should be moved to the parent pom and use the build-tools version property.", "url": "https://github.com/oracle/helidon/pull/1797#discussion_r425277870", "createdAt": "2020-05-14T16:37:55Z", "author": {"login": "romain-grecourt"}, "path": "apptypes/se/basic/pom.xml", "diffHunk": "@@ -0,0 +1,44 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Copyright (c) 2020 Oracle and/or its affiliates.\n+\n+    Licensed under the Apache License, Version 2.0 (the \"License\");\n+    you may not use this file except in compliance with the License.\n+    You may obtain a copy of the License at\n+\n+        http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>io.helidon.apptypes</groupId>\n+        <artifactId>helidon-apptypes-se</artifactId>\n+        <version>2.0.0-SNAPSHOT</version>\n+    </parent>\n+    <artifactId>helidon-apptypes-se-basic</artifactId>\n+    <name>Helidon Template Application SE basic</name>\n+\n+    <properties>\n+        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n+    </properties>\n+\n+    <build>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0095db768980365a5c6541573f2e05685422f932"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODI5NDUxOnYy", "diffSide": "RIGHT", "path": "apptypes/se/basic/src/main/resources/META-INF/helidon-archetype-resources.txt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjozODoxMFrOGVk6RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjozODoxMFrOGVk6RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI3ODAyMQ==", "bodyText": "Same comment as above, this should be generated by the maven plugin.", "url": "https://github.com/oracle/helidon/pull/1797#discussion_r425278021", "createdAt": "2020-05-14T16:38:10Z", "author": {"login": "romain-grecourt"}, "path": "apptypes/se/basic/src/main/resources/META-INF/helidon-archetype-resources.txt", "diffHunk": "@@ -0,0 +1,8 @@\n+pom.xml.mustache", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0095db768980365a5c6541573f2e05685422f932"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjA4OTc5OnYy", "diffSide": "RIGHT", "path": "archetypes/mp/basic/src/main/resources/src/main/java/__pkg__/GreetResource.java.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTo0Mzo1OFrOGWKLrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTo0Mzo1OFrOGWKLrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg4ODY4NA==", "bodyText": "This annotation is no longer required.", "url": "https://github.com/oracle/helidon/pull/1797#discussion_r425888684", "createdAt": "2020-05-15T15:43:58Z", "author": {"login": "tomas-langer"}, "path": "archetypes/mp/basic/src/main/resources/src/main/java/__pkg__/GreetResource.java.mustache", "diffHunk": "@@ -0,0 +1,52 @@\n+\n+package {{package}};\n+\n+import java.util.Collections;\n+\n+import javax.enterprise.context.RequestScoped;\n+import javax.inject.Inject;\n+import javax.json.Json;\n+import javax.json.JsonBuilderFactory;\n+import javax.json.JsonObject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+\n+/**\n+ * A simple JAX-RS resource to greet you. Examples:\n+ *\n+ * Get default greeting message:\n+ * curl -X GET http://localhost:8080/greet\n+ *\n+ * The message is returned as a JSON object.\n+ */\n+@Path(\"/greet\")\n+@RequestScoped", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15574e5528f87c25f0726a06070854104f42387"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjA5MTM4OnYy", "diffSide": "RIGHT", "path": "archetypes/mp/basic/src/main/resources/src/main/java/__pkg__/GreetResource.java.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTo0NDoyN1rOGWKMuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTo0NDoyN1rOGWKMuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg4ODk1Mw==", "bodyText": "Please remove these @SuppressWarnings annotations. They are not relevant.", "url": "https://github.com/oracle/helidon/pull/1797#discussion_r425888953", "createdAt": "2020-05-15T15:44:27Z", "author": {"login": "tomas-langer"}, "path": "archetypes/mp/basic/src/main/resources/src/main/java/__pkg__/GreetResource.java.mustache", "diffHunk": "@@ -0,0 +1,52 @@\n+\n+package {{package}};\n+\n+import java.util.Collections;\n+\n+import javax.enterprise.context.RequestScoped;\n+import javax.inject.Inject;\n+import javax.json.Json;\n+import javax.json.JsonBuilderFactory;\n+import javax.json.JsonObject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+\n+/**\n+ * A simple JAX-RS resource to greet you. Examples:\n+ *\n+ * Get default greeting message:\n+ * curl -X GET http://localhost:8080/greet\n+ *\n+ * The message is returned as a JSON object.\n+ */\n+@Path(\"/greet\")\n+@RequestScoped\n+public class GreetResource {\n+    private static final JsonBuilderFactory JSON = Json.createBuilderFactory(Collections.emptyMap());\n+\n+    private final String message;\n+\n+    @Inject\n+    public GreetResource(@ConfigProperty(name = \"app.greeting\") String message) {\n+        this.message = message;\n+    }\n+\n+    /**\n+     * Return a wordly greeting message.\n+     *\n+     * @return {@link JsonObject}\n+     */\n+    @SuppressWarnings(\"checkstyle:designforextension\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15574e5528f87c25f0726a06070854104f42387"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjEwMjkyOnYy", "diffSide": "RIGHT", "path": "archetypes/se/basic/src/main/resources/pom.xml.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTo0Nzo0NVrOGWKURw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTo0Nzo0NVrOGWKURw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg5MDg4Nw==", "bodyText": "Please stop using this bundle.\nI think it is confusing - it just adds support for JSON-P.", "url": "https://github.com/oracle/helidon/pull/1797#discussion_r425890887", "createdAt": "2020-05-15T15:47:45Z", "author": {"login": "tomas-langer"}, "path": "archetypes/se/basic/src/main/resources/pom.xml.mustache", "diffHunk": "@@ -7,36 +6,26 @@\n     <parent>\n         <groupId>io.helidon.applications</groupId>\n         <artifactId>helidon-se</artifactId>\n-        <version>@project.version@</version>\n-        <relativePath/>\n+        <version>{{helidonVersion}}</version>\n     </parent>\n-    <groupId>${groupId}</groupId>\n-    <artifactId>${artifactId}</artifactId>\n-    <version>${version}</version>\n-    <name>${artifactId}</name>\n+    <groupId>{{groupId}}</groupId>\n+    <artifactId>{{artifactId}}</artifactId>\n+    <version>{{version}}</version>\n+    <name>{{name}}</name>\n \n     <properties>\n-        <mainClass>${package}.Main</mainClass>\n+        <mainClass>{{package}}.Main</mainClass>\n     </properties>\n \n     <dependencies>\n         <dependency>\n-            <groupId>io.helidon.webserver</groupId>\n-            <artifactId>helidon-webserver</artifactId>\n+            <groupId>io.helidon.bundles</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15574e5528f87c25f0726a06070854104f42387"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjEwNjU0OnYy", "diffSide": "RIGHT", "path": "archetypes/se/basic/src/main/resources/src/main/java/__pkg__/Main.java.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTo0ODo1MVrOGWKWng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTo0ODo1MVrOGWKWng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg5MTQ4Ng==", "bodyText": "This is now deprecated. Please switch to new API (as was in old template in master).", "url": "https://github.com/oracle/helidon/pull/1797#discussion_r425891486", "createdAt": "2020-05-15T15:48:51Z", "author": {"login": "tomas-langer"}, "path": "archetypes/se/basic/src/main/resources/src/main/java/__pkg__/Main.java.mustache", "diffHunk": "@@ -49,83 +40,58 @@ public final class Main {\n      * @throws IOException if there are problems reading logging properties\n      */\n     static WebServer startServer() throws IOException {\n-#if( $loggingConfig.matches(\"y|yes|true\") )\n         // load logging configuration\n         setupLogging();\n-#end\n \n-#if( $applicationYaml.matches(\"y|yes|true\") )\n         // By default this will pick up application.yaml from the classpath\n         Config config = Config.create();\n-#end\n-\n-        WebServer server = WebServer.builder()\n-#if( $applicationYaml.matches(\"y|yes|true\") )\n-            .routing(createRouting(config))\n-            .config(config.get(\"server\"))\n-#else\n-            .routing(createRouting())\n-#end\n-#if( $jsonSupport.matches(\"y|yes|true\") )\n-            .addMediaSupport(JsonpSupport.create())\n-#end\n-            .build();\n+\n+        // Get webserver config from the \"server\" section of application.yaml\n+        ServerConfiguration serverConfig =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15574e5528f87c25f0726a06070854104f42387"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MjEwOTM5OnYy", "diffSide": "RIGHT", "path": "archetypes/se/basic/src/main/resources/src/main/java/__pkg__/Main.java.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTo0OTo0MFrOGWKYbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNTo0OTo0MFrOGWKYbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg5MTk0OA==", "bodyText": "This is wrong place to register this.\nPlease switch to new media support\nShould be registered on Server.builder().addMediaSupport(JsonpSupport.create())", "url": "https://github.com/oracle/helidon/pull/1797#discussion_r425891948", "createdAt": "2020-05-15T15:49:40Z", "author": {"login": "tomas-langer"}, "path": "archetypes/se/basic/src/main/resources/src/main/java/__pkg__/Main.java.mustache", "diffHunk": "@@ -49,83 +40,58 @@ public final class Main {\n      * @throws IOException if there are problems reading logging properties\n      */\n     static WebServer startServer() throws IOException {\n-#if( $loggingConfig.matches(\"y|yes|true\") )\n         // load logging configuration\n         setupLogging();\n-#end\n \n-#if( $applicationYaml.matches(\"y|yes|true\") )\n         // By default this will pick up application.yaml from the classpath\n         Config config = Config.create();\n-#end\n-\n-        WebServer server = WebServer.builder()\n-#if( $applicationYaml.matches(\"y|yes|true\") )\n-            .routing(createRouting(config))\n-            .config(config.get(\"server\"))\n-#else\n-            .routing(createRouting())\n-#end\n-#if( $jsonSupport.matches(\"y|yes|true\") )\n-            .addMediaSupport(JsonpSupport.create())\n-#end\n-            .build();\n+\n+        // Get webserver config from the \"server\" section of application.yaml\n+        ServerConfiguration serverConfig =\n+                ServerConfiguration.create(config.get(\"server\"));\n+\n+        WebServer server = WebServer.create(serverConfig, createRouting(config));\n \n         // Try to start the server. If successful, print some info and arrange to\n         // print a message at shutdown. If unsuccessful, print the exception.\n         server.start()\n-            .thenAccept(ws -> {\n-#if( $restService.matches(\"y|yes|true\") )\n-                System.out.println(\"WEB server is up! http://localhost:\" + ws.port() + \"${restServicePath}\");\n-#else\n-                System.out.println(\"WEB server is up! http://localhost:\" + ws.port());\n-#end\n-                ws.whenShutdown().thenRun(()\n-                    -> System.out.println(\"WEB server is DOWN. Good bye!\"));\n+                .thenAccept(ws -> {\n+                    System.out.println(\n+                            \"WEB server is up! http://localhost:\" + ws.port() + \"/greet\");\n+                    ws.whenShutdown().thenRun(()\n+                            -> System.out.println(\"WEB server is DOWN. Good bye!\"));\n                 })\n-            .exceptionally(t -> {\n-                System.err.println(\"Startup failed: \" + t.getMessage());\n-                t.printStackTrace(System.err);\n-                return null;\n-            });\n+                .exceptionally(t -> {\n+                    System.err.println(\"Startup failed: \" + t.getMessage());\n+                    t.printStackTrace(System.err);\n+                    return null;\n+                });\n \n         // Server threads are not daemon. No need to block. Just react.\n+\n         return server;\n     }\n \n     /**\n      * Creates new {@link Routing}.\n      *\n-     * @return configured routing\n+     * @return routing configured with JSON support, a health check, and a service\n      * @param config configuration of this server\n      */\n-#if( $applicationYaml.matches(\"y|yes|true\") )\n     private static Routing createRouting(Config config) {\n-#else\n-    private static Routing createRouting() {\n-#end\n-#if( $metricsSupport.matches(\"y|yes|true\") )\n         MetricsSupport metrics = MetricsSupport.create();\n-#end\n-#if( $healthSupport.matches(\"y|yes|true\") )\n+        GreetService greetService = new GreetService(config);\n         HealthSupport health = HealthSupport.builder()\n-                .add(HealthChecks.healthChecks())   // Adds a convenient set of checks\n+                .addLiveness(HealthChecks.healthChecks())   // Adds a convenient set of checks\n                 .build();\n-#end\n \n         return Routing.builder()\n-#if( $healthSupport.matches(\"y|yes|true\") )\n+                .register(JsonSupport.create())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15574e5528f87c25f0726a06070854104f42387"}, "originalPosition": 133}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 555, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}