{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNzM1OTY5", "number": 1646, "title": "WebClient used in SE examples and tests", "bodyText": "Signed-off-by: David Kral david.k.kral@oracle.com", "createdAt": "2020-04-15T12:42:07Z", "url": "https://github.com/oracle/helidon/pull/1646", "merged": true, "mergeCommit": {"oid": "4df31fdde81dd3a8e74f9c56c6e6bacf9794425d"}, "closed": true, "closedAt": "2020-05-07T16:14:45Z", "author": {"login": "Verdent"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcX-MIHAFqTM5NDExMzU4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABce_g_kAFqTQwNzYxOTI3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MTEzNTg3", "url": "https://github.com/oracle/helidon/pull/1646#pullrequestreview-394113587", "createdAt": "2020-04-15T20:33:02Z", "commit": {"oid": "9a08ddcce2e42e083122a91a2addf3a48b30ac10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDozMzowMlrOGGKe3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMDozMzowMlrOGGKe3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTExNjM4MQ==", "bodyText": "Maybe these could be changed to just throws Exception ? Or maybe like Tomas said we need to come-up with a small utility and wrap the exceptions.", "url": "https://github.com/oracle/helidon/pull/1646#discussion_r409116381", "createdAt": "2020-04-15T20:33:02Z", "author": {"login": "romain-grecourt"}, "path": "security/integration/webserver/src/test/java/io/helidon/security/integration/webserver/WebSecurityTests.java", "diffHunk": "@@ -50,28 +51,31 @@\n     static final String AUDIT_MESSAGE_FORMAT = \"Unit test message format\";\n     static UnitTestAuditProvider myAuditProvider;\n     static WebServer server;\n-    private static Client authFeatureClient;\n-    private static Client client;\n+    private static WebClient securitySetup;\n+    private static WebClient webClient;\n \n     @BeforeAll\n     static void buildClients() {\n-        authFeatureClient = ClientBuilder.newClient()\n-                .register(HttpAuthenticationFeature.universalBuilder().build());\n-        client = ClientBuilder.newClient();\n+        Security security = Security.builder()\n+                .addProvider(HttpBasicAuthProvider.builder().build())\n+                .build();\n+\n+        securitySetup = WebClient.builder()\n+                .register(WebClientSecurity.create(security))\n+                .build();\n+\n+        webClient = WebClient.create();\n     }\n \n     @AfterAll\n     static void stopIt() throws InterruptedException {\n-        authFeatureClient.close();\n-        client.close();\n-\n         WebSecurityTestUtil.stopServer(server);\n     }\n \n     abstract String serverBaseUri();\n \n     @Test\n-    void basicTestJohn() {\n+    void basicTestJohn() throws ExecutionException, InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a08ddcce2e42e083122a91a2addf3a48b30ac10"}, "originalPosition": 75}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a08ddcce2e42e083122a91a2addf3a48b30ac10", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/9a08ddcce2e42e083122a91a2addf3a48b30ac10", "committedDate": "2020-04-15T12:40:20Z", "message": "WebClient used in SE examples and tests\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}, "afterCommit": {"oid": "f8d10b96ccbce13144840c2903b601f3a00094f4", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/f8d10b96ccbce13144840c2903b601f3a00094f4", "committedDate": "2020-04-27T11:27:21Z", "message": "WebClient used in SE examples and tests\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NDg2NDY2", "url": "https://github.com/oracle/helidon/pull/1646#pullrequestreview-406486466", "createdAt": "2020-05-06T10:31:23Z", "commit": {"oid": "9ecc5d3a4d2056241d074edeed45c6f7c9858d41"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMDozMToyNFrOGRM75A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxMTowNToyNVrOGRN-2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5MDkxNg==", "bodyText": "Assertions must be in the test method.\nIf the assertion fails, the test is reported as failed with exception.\nIf the assertion is in test method and fails, the test is reported as failed assertion.", "url": "https://github.com/oracle/helidon/pull/1646#discussion_r420690916", "createdAt": "2020-05-06T10:31:24Z", "author": {"login": "tomas-langer"}, "path": "examples/employee-app/src/test/java/io/helidon/service/employee/MainTest.java", "diffHunk": "@@ -57,24 +64,35 @@ public static void stopServer() throws Exception {\n \n     @Test\n     public void testHelloWorld() throws Exception {\n-        HttpURLConnection conn;\n-\n-        conn = getURLConnection(\"GET\", \"/employees\");\n-        Assertions.assertEquals(200, conn.getResponseCode(), \"HTTP response2\");\n+        webClient.get()\n+                .path(\"/employees\")\n+                .request()\n+                .thenAccept(response -> {\n+                    response.close();\n+                    Assertions.assertEquals(Http.Status.OK_200, response.status(), \"HTTP response2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecc5d3a4d2056241d074edeed45c6f7c9858d41"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5MTE5OA==", "bodyText": "May be more readable to hide complexity in a helper method, e.g. WebClientResponse invokeSync(\"/employee\")", "url": "https://github.com/oracle/helidon/pull/1646#discussion_r420691198", "createdAt": "2020-05-06T10:32:01Z", "author": {"login": "tomas-langer"}, "path": "examples/employee-app/src/test/java/io/helidon/service/employee/MainTest.java", "diffHunk": "@@ -57,24 +64,35 @@ public static void stopServer() throws Exception {\n \n     @Test\n     public void testHelloWorld() throws Exception {\n-        HttpURLConnection conn;\n-\n-        conn = getURLConnection(\"GET\", \"/employees\");\n-        Assertions.assertEquals(200, conn.getResponseCode(), \"HTTP response2\");\n+        webClient.get()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecc5d3a4d2056241d074edeed45c6f7c9858d41"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY5OTY1MQ==", "bodyText": ".uri should be on a separate line", "url": "https://github.com/oracle/helidon/pull/1646#discussion_r420699651", "createdAt": "2020-05-06T10:48:29Z", "author": {"login": "tomas-langer"}, "path": "examples/grpc/security-outbound/src/main/java/io/helidon/grpc/examples/security/outbound/SecureServer.java", "diffHunk": "@@ -220,34 +214,47 @@ private void setGreeting(Greet.SetGreetingRequest request, StreamObserver<Greet.\n \n             // Obtain the security context from the current gRPC context\n             SecurityContext securityContext = GrpcSecurity.SECURITY_CONTEXT.get();\n+            Context context = Context.builder().id(\"example\").build();\n+            context.register(securityContext);\n \n             // Use the admin user's credentials call the \"upper\" ReST endpoint which will call\n             // the \"Upper\" method on the secure gRPC StringService.\n-            Response response = client.target(\"http://127.0.0.1:\" + webServer.port())\n-                                      .path(\"upper\")\n-                                      .queryParam(\"value\", name)\n-                                      .request()\n-                                      .property(ClientSecurity.PROPERTY_CONTEXT, securityContext)\n-                                      .property(HttpBasicAuthProvider.EP_PROPERTY_OUTBOUND_USER, \"Ted\")\n-                                      .property(HttpBasicAuthProvider.EP_PROPERTY_OUTBOUND_PASSWORD, \"secret\")\n-                                      .get();\n-\n-            if (response.getStatus() == 200) {\n-                greeting = response.readEntity(String.class);\n-                complete(observer, Greet.SetGreetingResponse.newBuilder().setGreeting(greeting).build());\n+            client.get().uri(\"http://127.0.0.1:\" + webServer.port())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecc5d3a4d2056241d074edeed45c6f7c9858d41"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDcwODA1OQ==", "bodyText": "use flow all the way, when client is not reused.", "url": "https://github.com/oracle/helidon/pull/1646#discussion_r420708059", "createdAt": "2020-05-06T11:05:25Z", "author": {"login": "tomas-langer"}, "path": "webserver/webserver/src/test/java/io/helidon/webserver/Status204Test.java", "diffHunk": "@@ -59,12 +52,18 @@ public void stopServer() throws Exception {\n     }\n \n     @Test\n-    public void callPutAndGet() {\n-        WebTarget target = ClientBuilder.newClient()\n-                                        .target(\"http://localhost:\" + server.port());\n-        Response response = target.request().put(Entity.entity(\"test call\", MediaType.TEXT_PLAIN));\n-        assertThat(response.getStatus(), is(204));\n-        String s = target.request().get(String.class);\n-        assertThat(s, is(\"test\"));\n+    public void callPutAndGet() throws Exception {\n+        WebClient webClient = WebClient.builder()\n+                .baseUri(\"http://localhost:\" + server.port())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ecc5d3a4d2056241d074edeed45c6f7c9858d41"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ecc5d3a4d2056241d074edeed45c6f7c9858d41", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/9ecc5d3a4d2056241d074edeed45c6f7c9858d41", "committedDate": "2020-04-29T17:53:34Z", "message": "MessageQueueService fix\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}, "afterCommit": {"oid": "440372f0da62902c3ed3bbcb7fb3a5ad0a52f7b4", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/440372f0da62902c3ed3bbcb7fb3a5ad0a52f7b4", "committedDate": "2020-05-06T17:39:36Z", "message": "Tomas suggestions implemented\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36eba3e94a7e0e9891c0f3327564b44c6f687083", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/36eba3e94a7e0e9891c0f3327564b44c6f687083", "committedDate": "2020-05-07T11:03:57Z", "message": "WebClient used in SE examples and tests\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2296f38198fc02c7d405fc07e63b8ab046f552c3", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/2296f38198fc02c7d405fc07e63b8ab046f552c3", "committedDate": "2020-05-07T11:03:59Z", "message": "MessageQueueService fix\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bf80711cec2d2e07602f19a4b833e666eaa863a", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/8bf80711cec2d2e07602f19a4b833e666eaa863a", "committedDate": "2020-05-07T11:03:59Z", "message": "Tomas suggestions implemented\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f6c8129c770562c4e1a329f95ecce451a924055", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/1f6c8129c770562c4e1a329f95ecce451a924055", "committedDate": "2020-05-07T11:28:10Z", "message": "rebased on the master with media support changes\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "440372f0da62902c3ed3bbcb7fb3a5ad0a52f7b4", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/440372f0da62902c3ed3bbcb7fb3a5ad0a52f7b4", "committedDate": "2020-05-06T17:39:36Z", "message": "Tomas suggestions implemented\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}, "afterCommit": {"oid": "1f6c8129c770562c4e1a329f95ecce451a924055", "author": {"user": {"login": "Verdent", "name": "David Kr\u00e1l"}}, "url": "https://github.com/oracle/helidon/commit/1f6c8129c770562c4e1a329f95ecce451a924055", "committedDate": "2020-05-07T11:28:10Z", "message": "rebased on the master with media support changes\n\nSigned-off-by: David Kral <david.k.kral@oracle.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NjE5Mjcz", "url": "https://github.com/oracle/helidon/pull/1646#pullrequestreview-407619273", "createdAt": "2020-05-07T16:03:52Z", "commit": {"oid": "1f6c8129c770562c4e1a329f95ecce451a924055"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 718, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}