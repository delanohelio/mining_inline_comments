{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MTY1MzYw", "number": 1912, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDoyMDo1OVrOEBgFiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDoyMDo1OVrOEBgFiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMDA5NzM3OnYy", "diffSide": "RIGHT", "path": "microprofile/server/src/main/java/io/helidon/microprofile/server/ServerCdiExtension.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDoyMDo1OVrOGdYw4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzowMDozOVrOGdcxeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2NzYxNw==", "bodyText": "This logic sets IN_PROGRESS_OR_RUNNING to false only if it was true at the start of the method. Could there be a race condition here in which an (incorrect) second attempt to start the server concurrently occurred after isRunning is assigned false (and that parallel start-up would set IN_PROGRESS_OR_RUNNING to true), the doStop actually does the shutdown, but because isRunning is not true then IN_PROGRESS_OR_RUNNING is not set to false? So the server would be stopped but IN_PROGRESS_OR_RUNNING incorrectly says true.\nMaybe this cannot happen in practice because of other reasons?", "url": "https://github.com/oracle/helidon/pull/1912#discussion_r433467617", "createdAt": "2020-06-01T20:20:59Z", "author": {"login": "tjquinno"}, "path": "microprofile/server/src/main/java/io/helidon/microprofile/server/ServerCdiExtension.java", "diffHunk": "@@ -216,6 +228,17 @@ private void registerClasspathStaticContent(Config config) {\n     }\n \n     private void stopServer(@Observes @Priority(PLATFORM_BEFORE) @BeforeDestroyed(ApplicationScoped.class) Object event) {\n+        boolean isRunning = IN_PROGRESS_OR_RUNNING.get();\n+        try {\n+            doStop(event);\n+        } finally {\n+            if (isRunning) {\n+                IN_PROGRESS_OR_RUNNING.set(false);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8123066538c7e5d8752e5314c334c3ab21663da"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzMTcxMw==", "bodyText": "There was a problem with this. Fixing.", "url": "https://github.com/oracle/helidon/pull/1912#discussion_r433531713", "createdAt": "2020-06-01T22:55:25Z", "author": {"login": "tomas-langer"}, "path": "microprofile/server/src/main/java/io/helidon/microprofile/server/ServerCdiExtension.java", "diffHunk": "@@ -216,6 +228,17 @@ private void registerClasspathStaticContent(Config config) {\n     }\n \n     private void stopServer(@Observes @Priority(PLATFORM_BEFORE) @BeforeDestroyed(ApplicationScoped.class) Object event) {\n+        boolean isRunning = IN_PROGRESS_OR_RUNNING.get();\n+        try {\n+            doStop(event);\n+        } finally {\n+            if (isRunning) {\n+                IN_PROGRESS_OR_RUNNING.set(false);\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2NzYxNw=="}, "originalCommit": {"oid": "f8123066538c7e5d8752e5314c334c3ab21663da"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzUzMzMwNA==", "bodyText": "Fixing this uncovered other issues with correct shutdown. Fixed them as well.", "url": "https://github.com/oracle/helidon/pull/1912#discussion_r433533304", "createdAt": "2020-06-01T23:00:39Z", "author": {"login": "tomas-langer"}, "path": "microprofile/server/src/main/java/io/helidon/microprofile/server/ServerCdiExtension.java", "diffHunk": "@@ -216,6 +228,17 @@ private void registerClasspathStaticContent(Config config) {\n     }\n \n     private void stopServer(@Observes @Priority(PLATFORM_BEFORE) @BeforeDestroyed(ApplicationScoped.class) Object event) {\n+        boolean isRunning = IN_PROGRESS_OR_RUNNING.get();\n+        try {\n+            doStop(event);\n+        } finally {\n+            if (isRunning) {\n+                IN_PROGRESS_OR_RUNNING.set(false);\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2NzYxNw=="}, "originalCommit": {"oid": "f8123066538c7e5d8752e5314c334c3ab21663da"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 589, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}