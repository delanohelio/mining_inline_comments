{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMTc0NDAx", "number": 719, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDoyNzo0NVrODYhUfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDoyNzo0NVrODYhUfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDM4MzMzOnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/test/java/datawave/query/iterator/QueryIteratorIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDoyNzo0NVrOFebKKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNjoxMTo0MVrOFhD_og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ0NjU2OQ==", "bodyText": "Would it make sense for us to test that we can successfully match against an index-only term frequency field as well? This goes a little beyond the scope of what you're trying to fix here, but it appears that this test did not evaluate any conditions on index-only TF fields previously based on your additions to the tf_test() configuration method below.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/719#discussion_r367446569", "createdAt": "2020-01-16T14:27:45Z", "author": {"login": "drewfarris"}, "path": "warehouse/query-core/src/test/java/datawave/query/iterator/QueryIteratorIT.java", "diffHunk": "@@ -759,6 +763,20 @@ public void tf_exceededValue_negated_leadingWildcard_shardRange_test() throws IO\n         tf_test(seekRange, query, getBaseExpectedEvent(\"123.345.456\"), Collections.EMPTY_LIST, Collections.EMPTY_LIST);\n     }\n     \n+    @Test\n+    public void tf_exceededValue_negated_leadingWildcardMissIndexOnly_documentSpecific_test() throws IOException {\n+        Range seekRange = getDocumentRange(\"123.345.456\");\n+        String query = \"EVENT_FIELD1 =='a' && !((ExceededValueThresholdMarkerJexlNode = true) && (TF_FIELD4 =~ '.*z'))\";\n+        tf_test(seekRange, query, getBaseExpectedEvent(\"123.345.456\"), Collections.EMPTY_LIST, Collections.EMPTY_LIST);\n+    }\n+    \n+    @Test\n+    public void tf_exceededValue_negated_leadingWildcardMissIndexOnly_shardRange_test() throws IOException {\n+        Range seekRange = getShardRange();\n+        String query = \"EVENT_FIELD1 =='a' && !((ExceededValueThresholdMarkerJexlNode = true) && (TF_FIELD4 =~ '.*z'))\";\n+        tf_test(seekRange, query, getBaseExpectedEvent(\"123.345.456\"), Collections.EMPTY_LIST, Collections.EMPTY_LIST);\n+    }\n+    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6489b862824606e89777873e96bc2b6ab929daf9"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIxMjc3MA==", "bodyText": "I will create a ticket to expand tests here", "url": "https://github.com/NationalSecurityAgency/datawave/pull/719#discussion_r370212770", "createdAt": "2020-01-23T16:11:41Z", "author": {"login": "FineAndDandy"}, "path": "warehouse/query-core/src/test/java/datawave/query/iterator/QueryIteratorIT.java", "diffHunk": "@@ -759,6 +763,20 @@ public void tf_exceededValue_negated_leadingWildcard_shardRange_test() throws IO\n         tf_test(seekRange, query, getBaseExpectedEvent(\"123.345.456\"), Collections.EMPTY_LIST, Collections.EMPTY_LIST);\n     }\n     \n+    @Test\n+    public void tf_exceededValue_negated_leadingWildcardMissIndexOnly_documentSpecific_test() throws IOException {\n+        Range seekRange = getDocumentRange(\"123.345.456\");\n+        String query = \"EVENT_FIELD1 =='a' && !((ExceededValueThresholdMarkerJexlNode = true) && (TF_FIELD4 =~ '.*z'))\";\n+        tf_test(seekRange, query, getBaseExpectedEvent(\"123.345.456\"), Collections.EMPTY_LIST, Collections.EMPTY_LIST);\n+    }\n+    \n+    @Test\n+    public void tf_exceededValue_negated_leadingWildcardMissIndexOnly_shardRange_test() throws IOException {\n+        Range seekRange = getShardRange();\n+        String query = \"EVENT_FIELD1 =='a' && !((ExceededValueThresholdMarkerJexlNode = true) && (TF_FIELD4 =~ '.*z'))\";\n+        tf_test(seekRange, query, getBaseExpectedEvent(\"123.345.456\"), Collections.EMPTY_LIST, Collections.EMPTY_LIST);\n+    }\n+    ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ0NjU2OQ=="}, "originalCommit": {"oid": "6489b862824606e89777873e96bc2b6ab929daf9"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4477, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}