{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3MDUwMTI2", "number": 1002, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMDoxOTo0MFrOE9KKkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMDoxOTo0MFrOE9KKkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNTY1MTM3OnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/test/java/datawave/query/jexl/nodes/ExceededOrThresholdMarkerJexlNodeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMDoxOTo0MFrOH5sgRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNDo0MDo0MlrOIOZxPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI2MDAzOQ==", "bodyText": "Won't hold up an approval, but it might be nice to see a non-geo case that exercises this code path.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1002#discussion_r530260039", "createdAt": "2020-11-25T10:19:40Z", "author": {"login": "apmoriarty"}, "path": "warehouse/query-core/src/test/java/datawave/query/jexl/nodes/ExceededOrThresholdMarkerJexlNodeTest.java", "diffHunk": "@@ -424,15 +431,49 @@ public void valueListTest() throws Exception {\n         pointList.addAll(Arrays.asList(POINT_1, POINT_2, POINT_3, POINT_5, POINT_6, POINT_7, POINT_9, POINT_10, POINT_11));\n         \n         for (DefaultEvent event : events) {\n-            String wkt = null;\n+            List<String> wkt = new ArrayList<>();\n             \n             for (DefaultField field : event.getFields()) {\n                 if (field.getName().equals(GEO_FIELD))\n-                    wkt = field.getValueString();\n+                    wkt.add(field.getValueString());\n             }\n             \n             // ensure that this is one of the ingested events\n-            Assert.assertTrue(pointList.remove(wkt));\n+            Assert.assertTrue(pointList.removeAll(wkt));\n+        }\n+        \n+        Assert.assertEquals(0, pointList.size());\n+    }\n+    \n+    @Test\n+    public void docSpecificValueListTest() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fab0240884fe58793a2e03aeab4c8f9a6bf90dbc"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk3MzE4MA==", "bodyText": "Aside from the fact that these values happen to be geohashes, this isn't really a geo-specific test.  We aren't using any geo functions, so it's just a simple term equality evaluation being performed here.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1002#discussion_r551973180", "createdAt": "2021-01-05T14:40:42Z", "author": {"login": "jwomeara"}, "path": "warehouse/query-core/src/test/java/datawave/query/jexl/nodes/ExceededOrThresholdMarkerJexlNodeTest.java", "diffHunk": "@@ -424,15 +431,49 @@ public void valueListTest() throws Exception {\n         pointList.addAll(Arrays.asList(POINT_1, POINT_2, POINT_3, POINT_5, POINT_6, POINT_7, POINT_9, POINT_10, POINT_11));\n         \n         for (DefaultEvent event : events) {\n-            String wkt = null;\n+            List<String> wkt = new ArrayList<>();\n             \n             for (DefaultField field : event.getFields()) {\n                 if (field.getName().equals(GEO_FIELD))\n-                    wkt = field.getValueString();\n+                    wkt.add(field.getValueString());\n             }\n             \n             // ensure that this is one of the ingested events\n-            Assert.assertTrue(pointList.remove(wkt));\n+            Assert.assertTrue(pointList.removeAll(wkt));\n+        }\n+        \n+        Assert.assertEquals(0, pointList.size());\n+    }\n+    \n+    @Test\n+    public void docSpecificValueListTest() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDI2MDAzOQ=="}, "originalCommit": {"oid": "fab0240884fe58793a2e03aeab4c8f9a6bf90dbc"}, "originalPosition": 130}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4351, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}