{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwODQyNzU0", "number": 842, "title": "Add support for multiple ActiveQueryLog instances", "bodyText": "Currently an ActiveQueryLog singleton is used for logging events from\nall active queries. It can be difficult to easily search the logs for\nqueries that are running on specific tables.\nAdd support to be able to retrieve a new ActiveQueryLog instance\nassociated with a configurable name, and include this name in log\nmessages generated by the ActiveQueryLog. Keep support for a default\nActiveQueryLog instance that can be shared by queries when additional\nsearch details is not needed.\nIn addition, add the ability to specifiy a source for the active query\nlog name for ShardQueryLogic.\nFixes #817", "createdAt": "2020-06-27T01:33:30Z", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842", "merged": true, "mergeCommit": {"oid": "74d3bea89047350047b51bd0bfa1c334657c03c5"}, "closed": true, "closedAt": "2021-03-03T13:43:31Z", "author": {"login": "lbschanno"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcvNsfWgBqjM0ODg1NDY5MzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd_hTHwgFqTYwMjkwMzU3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1fd932f6cbb19b7beff67281ded4fd20cb66ff5c", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/1fd932f6cbb19b7beff67281ded4fd20cb66ff5c", "committedDate": "2020-06-27T01:31:20Z", "message": "Add support for multiple ActiveQueryLog instances\n\nCurrently an ActiveQueryLog singleton is used for logging events from\nall active queries. It can be difficult to easily search the logs for\nqueries that are running on specific tables.\n\nAdd support to be able to retrieve a new ActiveQueryLog instance\nassociated with a configurable name, and include this name in log\nmessages generated by the ActiveQueryLog. Keep support for a default\nActiveQueryLog instance that can be shared by queries when additional\nsearch details is not needed.\n\nIn addition, add the ability to specifiy a source for the active query\nlog name for ShardQueryLogic.\n\nFixes #817"}, "afterCommit": {"oid": "db0167f3dcc7672360631094314f08b6951e79ab", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/db0167f3dcc7672360631094314f08b6951e79ab", "committedDate": "2020-06-27T01:37:42Z", "message": "Add support for multiple ActiveQueryLog instances\n\nCurrently an ActiveQueryLog singleton is used for logging events from\nall active queries. It can be difficult to easily search the logs for\nqueries that are running on specific tables.\n\nAdd support to be able to retrieve a new ActiveQueryLog instance\nassociated with a configurable name, and include this name in log\nmessages generated by the ActiveQueryLog. Keep support for a default\nActiveQueryLog instance that can be shared by queries when additional\nsearch details is not needed.\n\nIn addition, add the ability to specifiy a source for the active query\nlog name for ShardQueryLogic.\n\nFixes #817"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjA2ODg0", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#pullrequestreview-441606884", "createdAt": "2020-07-02T11:56:07Z", "commit": {"oid": "db0167f3dcc7672360631094314f08b6951e79ab"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMTo1NjowN1rOGsJmQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjowNDoyNVrOGsJ3JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk0Nzc3OQ==", "bodyText": "But how can we be sure these are set if we don't set them multiple times?  ;)", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#discussion_r448947779", "createdAt": "2020-07-02T11:56:07Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/iterator/QueryOptions.java", "diffHunk": "@@ -465,21 +477,6 @@ public void deepCopy(QueryOptions other) {\n         \n         this.sortedUIDs = other.sortedUIDs;\n         \n-        this.compressedMappings = other.compressedMappings;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0167f3dcc7672360631094314f08b6951e79ab"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1MTMxMg==", "bodyText": "ouch!  How about a shorter name and some comments above it.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#discussion_r448951312", "createdAt": "2020-07-02T12:02:54Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/test/java/datawave/query/config/ShardQueryConfigurationTest.java", "diffHunk": "@@ -434,17 +436,46 @@ public void testIsTldQuery() {\n      */\n     @Test\n     public void testCheckForNewAdditions() throws IOException {\n-        int expectedObjectCount = 172;\n+        int expectedObjectCount = 173;\n         ShardQueryConfiguration config = ShardQueryConfiguration.create();\n         ObjectMapper mapper = new ObjectMapper();\n         JsonNode root = mapper.readTree(mapper.writeValueAsString(config));\n         Iterator<JsonNode> rootIter = root.elements();\n         int objectCount = 0;\n         while (rootIter.hasNext()) {\n-            rootIter.next();\n+            JsonNode next = rootIter.next();\n+            \n             objectCount++;\n         }\n         \n-        Assert.assertEquals(\"New variable was added to or removed from the ShardQueryConfiguration\", expectedObjectCount, objectCount);\n+        assertEquals(\"New variable was added to or removed from the ShardQueryConfiguration\", expectedObjectCount, objectCount);\n+    }\n+    \n+    @Test\n+    public void whenRetrievingActiveQueryLogName_givenTableNameSource_thenReturnsTableName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0167f3dcc7672360631094314f08b6951e79ab"}, "originalPosition": 481}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1MjEwMA==", "bodyText": "ouch! How about a shorter name and some comments above it.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#discussion_r448952100", "createdAt": "2020-07-02T12:04:25Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/test/java/datawave/query/tracking/ActiveQueryLogTest.java", "diffHunk": "@@ -90,6 +95,33 @@ public void run() {\n         }\n     }\n     \n+    @Test\n+    public void whenRetrievingInstance_givenNullName_shouldReturnsDefaultInstance() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db0167f3dcc7672360631094314f08b6951e79ab"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyODgwNzE3", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#pullrequestreview-492880717", "createdAt": "2020-09-21T18:36:39Z", "commit": {"oid": "ea07e68356d9eb773fe403da80d5d468bc397e73"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0NzUyNDkx", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#pullrequestreview-514752491", "createdAt": "2020-10-22T13:54:51Z", "commit": {"oid": "ea07e68356d9eb773fe403da80d5d468bc397e73"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f4d4ed968fce18411815a6fff8f92d29ae9074f", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/7f4d4ed968fce18411815a6fff8f92d29ae9074f", "committedDate": "2020-12-15T18:16:35Z", "message": "Add support for multiple ActiveQueryLog instances\n\nCurrently an ActiveQueryLog singleton is used for logging events from\nall active queries. It can be difficult to easily search the logs for\nqueries that are running on specific tables.\n\nAdd support to be able to retrieve a new ActiveQueryLog instance\nassociated with a configurable name, and include this name in log\nmessages generated by the ActiveQueryLog. Keep support for a default\nActiveQueryLog instance that can be shared by queries when additional\nsearch details is not needed.\n\nIn addition, add the ability to specifiy a source for the active query\nlog name for ShardQueryLogic.\n\nFixes #817"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "536f503c662c1cd52678167069bbc33436c3ddc4", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/536f503c662c1cd52678167069bbc33436c3ddc4", "committedDate": "2020-12-15T18:16:40Z", "message": "Remove duplicate definition for METADATA_TABLE_NAME"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3a98be678bfed276692cb51d372eb117c60eae9", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/e3a98be678bfed276692cb51d372eb117c60eae9", "committedDate": "2020-12-15T18:16:40Z", "message": "Update maxIdle in setMaxIdle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a113e86ee72ba1b7fc17c9d284320a7297af329f", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/a113e86ee72ba1b7fc17c9d284320a7297af329f", "committedDate": "2020-12-15T18:16:40Z", "message": "Shorten test case names"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a80d75f7fe68b7d9ae287335f0acb0bd4f7f04f2", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/a80d75f7fe68b7d9ae287335f0acb0bd4f7f04f2", "committedDate": "2020-12-08T05:10:32Z", "message": "Merge branch 'master' into active-query-log"}, "afterCommit": {"oid": "a113e86ee72ba1b7fc17c9d284320a7297af329f", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/a113e86ee72ba1b7fc17c9d284320a7297af329f", "committedDate": "2020-12-15T18:16:40Z", "message": "Shorten test case names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55e4b1785869c33e1e0bbe5ecbab46dd73af238d", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/55e4b1785869c33e1e0bbe5ecbab46dd73af238d", "committedDate": "2021-01-30T00:30:06Z", "message": "Merge branch 'release/version3.1' into active-query-log"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "698d0216fa91e4bcce749f7904440fa4f8ae2a97", "author": {"user": {"login": "ivakegg", "name": "Ivan Bella"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/698d0216fa91e4bcce749f7904440fa4f8ae2a97", "committedDate": "2021-02-23T17:16:50Z", "message": "Merge branch 'release/version3.2' into active-query-log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk3NDg4MjUz", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#pullrequestreview-597488253", "createdAt": "2021-02-24T13:41:37Z", "commit": {"oid": "698d0216fa91e4bcce749f7904440fa4f8ae2a97"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNFQxMzo0MTozOFrOIrAdoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNFQxNTozNjowMlrOIrGSAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTk2NzI2NQ==", "bodyText": "delete unused import", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#discussion_r581967265", "createdAt": "2021-02-24T13:41:38Z", "author": {"login": "billoley"}, "path": "warehouse/query-core/src/main/java/datawave/query/tracking/ActiveQueryLog.java", "diffHunk": "@@ -2,85 +2,139 @@\n \n import com.github.benmanes.caffeine.cache.Cache;\n import com.github.benmanes.caffeine.cache.Caffeine;\n+import com.google.common.annotations.VisibleForTesting;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "698d0216fa91e4bcce749f7904440fa4f8ae2a97"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTk2ODE3MA==", "bodyText": "use ActiveQueryLog.logCacheLock and ActiveQueryLog.logCache to make the static access obvious\nmove null check outside the synchronized to prevent unnecessary syncronization (I understand that this only happens for a very short time)", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#discussion_r581968170", "createdAt": "2021-02-24T13:42:51Z", "author": {"login": "billoley"}, "path": "warehouse/query-core/src/main/java/datawave/query/tracking/ActiveQueryLog.java", "diffHunk": "@@ -2,85 +2,139 @@\n \n import com.github.benmanes.caffeine.cache.Cache;\n import com.github.benmanes.caffeine.cache.Caffeine;\n+import com.google.common.annotations.VisibleForTesting;\n import org.apache.accumulo.core.conf.AccumuloConfiguration;\n import org.apache.accumulo.core.data.Range;\n+import org.apache.commons.lang.StringUtils;\n import org.apache.log4j.Logger;\n \n import java.util.ArrayList;\n import java.util.List;\n import java.util.Timer;\n import java.util.TimerTask;\n import java.util.UUID;\n+import java.util.concurrent.ConcurrentMap;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicLong;\n import java.util.concurrent.locks.ReentrantReadWriteLock;\n \n public class ActiveQueryLog {\n     \n+    public static final String DEFAULT_NAME = \"default_log\";\n     private static final String DEFAULT_EMPTY_QUERY_ID = new UUID(0, 0).toString();\n-    private static Logger log = Logger.getLogger(ActiveQueryLog.class);\n-    private static ActiveQueryLog instance = null;\n+    private static final Logger log = Logger.getLogger(ActiveQueryLog.class);\n+    private static Cache<String,ActiveQueryLog> logCache = null;\n+    private static final Object logCacheLock = new Object();\n     private static AccumuloConfiguration conf = null;\n     \n     // Accumulo properties\n     public static final String MAX_IDLE = \"datawave.query.active.maxIdleMs\";\n     public static final String LOG_PERIOD = \"datawave.query.active.logPeriodMs\";\n     public static final String LOG_MAX_QUERIES = \"datawave.query.active.logMaxQueries\";\n     public static final String WINDOW_SIZE = \"datawave.query.active.windowSize\";\n-    private static long HOURS_24_MS = TimeUnit.MILLISECONDS.convert(24, TimeUnit.HOURS);\n-    private static long MINUTES_15_MS = TimeUnit.MILLISECONDS.convert(15, TimeUnit.MINUTES);\n-    private static long MINUTES_1_MS = TimeUnit.MILLISECONDS.convert(1, TimeUnit.MINUTES);\n+    private static final long HOURS_24_MS = TimeUnit.MILLISECONDS.convert(24, TimeUnit.HOURS);\n+    private static final long MINUTES_15_MS = TimeUnit.MILLISECONDS.convert(15, TimeUnit.MINUTES);\n+    private static final long MINUTES_1_MS = TimeUnit.MILLISECONDS.convert(1, TimeUnit.MINUTES);\n     \n     // Changeable via Accumulo properties\n     volatile private long maxIdle = MINUTES_15_MS;\n     volatile private long logPeriod = MINUTES_1_MS;\n     volatile private int logMaxQueries = 5;\n     volatile private int windowSize = 10;\n-    private AtomicLong lastAccess = new AtomicLong(System.currentTimeMillis());\n+    private final AtomicLong lastAccess = new AtomicLong(System.currentTimeMillis());\n     \n     private Cache<String,ActiveQuery> CACHE = null;\n-    private ReentrantReadWriteLock cacheLock = new ReentrantReadWriteLock();\n+    private final ReentrantReadWriteLock cacheLock = new ReentrantReadWriteLock();\n     private Timer timer = null;\n     private TimerTask timerTask = null;\n     \n-    synchronized public static void setConfig(AccumuloConfiguration conf) {\n+    private final String name;\n+    \n+    synchronized public static void setConfig(final AccumuloConfiguration conf) {\n         if (conf != null) {\n             if (ActiveQueryLog.conf == null || conf.getUpdateCount() > ActiveQueryLog.conf.getUpdateCount()) {\n                 ActiveQueryLog.conf = conf;\n-                ActiveQueryLog.getInstance().checkSettings(conf, false);\n+            }\n+            // Do not allow access to the cache while updating each log's settings.\n+            synchronized (logCacheLock) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "698d0216fa91e4bcce749f7904440fa4f8ae2a97"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MTk4NjAzNw==", "bodyText": "Shouldn't this be:  synchronized (ActiveQueryLog.logCacheLock) now so that the logCache is protected by syncronizing on the same object if it's being assigned here?\nAlso -- use ActiveQueryLog.logCacheLock and ActiveQueryLog.logCache below", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#discussion_r581986037", "createdAt": "2021-02-24T14:06:23Z", "author": {"login": "billoley"}, "path": "warehouse/query-core/src/main/java/datawave/query/tracking/ActiveQueryLog.java", "diffHunk": "@@ -2,85 +2,139 @@\n \n import com.github.benmanes.caffeine.cache.Cache;\n import com.github.benmanes.caffeine.cache.Caffeine;\n+import com.google.common.annotations.VisibleForTesting;\n import org.apache.accumulo.core.conf.AccumuloConfiguration;\n import org.apache.accumulo.core.data.Range;\n+import org.apache.commons.lang.StringUtils;\n import org.apache.log4j.Logger;\n \n import java.util.ArrayList;\n import java.util.List;\n import java.util.Timer;\n import java.util.TimerTask;\n import java.util.UUID;\n+import java.util.concurrent.ConcurrentMap;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicLong;\n import java.util.concurrent.locks.ReentrantReadWriteLock;\n \n public class ActiveQueryLog {\n     \n+    public static final String DEFAULT_NAME = \"default_log\";\n     private static final String DEFAULT_EMPTY_QUERY_ID = new UUID(0, 0).toString();\n-    private static Logger log = Logger.getLogger(ActiveQueryLog.class);\n-    private static ActiveQueryLog instance = null;\n+    private static final Logger log = Logger.getLogger(ActiveQueryLog.class);\n+    private static Cache<String,ActiveQueryLog> logCache = null;\n+    private static final Object logCacheLock = new Object();\n     private static AccumuloConfiguration conf = null;\n     \n     // Accumulo properties\n     public static final String MAX_IDLE = \"datawave.query.active.maxIdleMs\";\n     public static final String LOG_PERIOD = \"datawave.query.active.logPeriodMs\";\n     public static final String LOG_MAX_QUERIES = \"datawave.query.active.logMaxQueries\";\n     public static final String WINDOW_SIZE = \"datawave.query.active.windowSize\";\n-    private static long HOURS_24_MS = TimeUnit.MILLISECONDS.convert(24, TimeUnit.HOURS);\n-    private static long MINUTES_15_MS = TimeUnit.MILLISECONDS.convert(15, TimeUnit.MINUTES);\n-    private static long MINUTES_1_MS = TimeUnit.MILLISECONDS.convert(1, TimeUnit.MINUTES);\n+    private static final long HOURS_24_MS = TimeUnit.MILLISECONDS.convert(24, TimeUnit.HOURS);\n+    private static final long MINUTES_15_MS = TimeUnit.MILLISECONDS.convert(15, TimeUnit.MINUTES);\n+    private static final long MINUTES_1_MS = TimeUnit.MILLISECONDS.convert(1, TimeUnit.MINUTES);\n     \n     // Changeable via Accumulo properties\n     volatile private long maxIdle = MINUTES_15_MS;\n     volatile private long logPeriod = MINUTES_1_MS;\n     volatile private int logMaxQueries = 5;\n     volatile private int windowSize = 10;\n-    private AtomicLong lastAccess = new AtomicLong(System.currentTimeMillis());\n+    private final AtomicLong lastAccess = new AtomicLong(System.currentTimeMillis());\n     \n     private Cache<String,ActiveQuery> CACHE = null;\n-    private ReentrantReadWriteLock cacheLock = new ReentrantReadWriteLock();\n+    private final ReentrantReadWriteLock cacheLock = new ReentrantReadWriteLock();\n     private Timer timer = null;\n     private TimerTask timerTask = null;\n     \n-    synchronized public static void setConfig(AccumuloConfiguration conf) {\n+    private final String name;\n+    \n+    synchronized public static void setConfig(final AccumuloConfiguration conf) {\n         if (conf != null) {\n             if (ActiveQueryLog.conf == null || conf.getUpdateCount() > ActiveQueryLog.conf.getUpdateCount()) {\n                 ActiveQueryLog.conf = conf;\n-                ActiveQueryLog.getInstance().checkSettings(conf, false);\n+            }\n+            // Do not allow access to the cache while updating each log's settings.\n+            synchronized (logCacheLock) {\n+                if (logCache != null) {\n+                    ConcurrentMap<String,ActiveQueryLog> logMap = logCache.asMap();\n+                    logMap.values().forEach(log -> log.checkSettings(conf, false));\n+                }\n             }\n         }\n     }\n     \n+    /**\n+     * Return the default {@link ActiveQueryLog} instance. The time the instance was last accessed will be updated to the current time in milliseconds, and if\n+     * the instance's timer was cancelled, it will be restarted.\n+     * \n+     * @return the default {@link ActiveQueryLog} instance\n+     */\n     public static ActiveQueryLog getInstance() {\n+        return getInstance(DEFAULT_NAME);\n+    }\n+    \n+    /**\n+     * Return the {@link ActiveQueryLog} instance associated with the specified name. If one does not exist, it will be created.\n+     *\n+     * If the specified name is null or blank, the default instance with the name '{@value #DEFAULT_NAME}' will be returned. Additionally, the time the log was\n+     * last accessed will be updated to the current time in milliseconds, and if the log's timer was cancelled, it will be restarted.\n+     * \n+     * @param name\n+     *            the associated name by which to look up the desired {@link ActiveQueryLog}. This will typically be the name of a table or query logic.\n+     * @return the existing or new {@link ActiveQueryLog} for the name\n+     */\n+    public static ActiveQueryLog getInstance(String name) {\n+        // Return the default instance if the name is blank.\n+        if (StringUtils.isBlank(name)) {\n+            name = DEFAULT_NAME;\n+        }\n         \n-        if (ActiveQueryLog.instance == null) {\n+        // Initialize the log cache if necessary.\n+        if (logCache == null) {\n             synchronized (ActiveQueryLog.class) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "698d0216fa91e4bcce749f7904440fa4f8ae2a97"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjA0NzQ0MA==", "bodyText": "In describeOptions, this:\noptions.put(METADATA_TABLE_NAME, \"The name of the metadata table\");\nis the correct line to leave in and should remain\noptions.put(METADATA_TABLE_NAME, this.metadataTableName);\nbelow is not descriptive and should be deleted", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#discussion_r582047440", "createdAt": "2021-02-24T15:18:57Z", "author": {"login": "billoley"}, "path": "warehouse/query-core/src/main/java/datawave/query/iterator/QueryOptions.java", "diffHunk": "@@ -1013,7 +1030,6 @@ public IteratorOptions describeOptions() {\n         options.put(QUERY, \"The JEXL query to evaluate documents against\");\n         options.put(QUERY_ID, \"The UUID of the query\");\n         options.put(TYPE_METADATA, \"A mapping of field name to a set of DataType class names\");\n-        options.put(METADATA_TABLE_NAME, \"The name of the metadata table\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "698d0216fa91e4bcce749f7904440fa4f8ae2a97"}, "originalPosition": 162}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjA1MTkzMg==", "bodyText": "can be converted into a switch/case structure for readability", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#discussion_r582051932", "createdAt": "2021-02-24T15:24:11Z", "author": {"login": "billoley"}, "path": "warehouse/query-core/src/main/java/datawave/query/config/ShardQueryConfiguration.java", "diffHunk": "@@ -2061,6 +2073,35 @@ public void setEvaluationOnlyFields(Set<String> evaluationOnlyFields) {\n         return this.evaluationOnlyFields;\n     }\n     \n+    public String getActiveQueryLogNameSource() {\n+        return activeQueryLogNameSource;\n+    }\n+    \n+    public void setActiveQueryLogNameSource(String activeQueryLogNameSource) {\n+        this.activeQueryLogNameSource = activeQueryLogNameSource;\n+    }\n+    \n+    /**\n+     * Returns the name to use for the active query log for query iterators, derived from the value {@link #activeQueryLogNameSource}. Cases:\n+     * <ul>\n+     * <li>{@value TABLE_NAME_SOURCE}: returns the shard table name</li>\n+     * <li>{@value QUERY_LOGIC_NAME_SOURCE}: returns the name of the shard query logic class</li>\n+     * <li>otherwise returns a blank value</li>\n+     * </ul>\n+     *\n+     * @return the custom active query name to use, or a blank value if the default active query log should be used\n+     */\n+    @JsonIgnore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "698d0216fa91e4bcce749f7904440fa4f8ae2a97"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjA2MjA2OQ==", "bodyText": "We should reduce unnecessary calls and cache accesses by declaring\nfinal ActiveQueryLog activeQueryLog = ActiveQueryLog.getInstance(getActiveQueryLogName());\nand using  activeQueryLog in place of ActiveQueryLog.getInstance(getActiveQueryLogName()) in this method", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#discussion_r582062069", "createdAt": "2021-02-24T15:35:26Z", "author": {"login": "billoley"}, "path": "warehouse/query-core/src/main/java/datawave/query/iterator/QueryIterator.java", "diffHunk": "@@ -314,7 +314,7 @@ public void enableYielding(YieldCallback<Key> yieldCallback) {\n     \n     @Override\n     public void next() throws IOException {\n-        ActiveQueryLog.getInstance().get(getQueryId()).beginCall(this.originalRange, ActiveQuery.CallType.NEXT);\n+        ActiveQueryLog.getInstance(getActiveQueryLogName()).get(getQueryId()).beginCall(this.originalRange, ActiveQuery.CallType.NEXT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "698d0216fa91e4bcce749f7904440fa4f8ae2a97"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjA2MjU5Mg==", "bodyText": "We should reduce unnecessary calls and cache accesses by declaring\nfinal ActiveQueryLog activeQueryLog = ActiveQueryLog.getInstance(getActiveQueryLogName());\nand using  activeQueryLog in place of ActiveQueryLog.getInstance(getActiveQueryLogName()) in this method", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#discussion_r582062592", "createdAt": "2021-02-24T15:36:02Z", "author": {"login": "billoley"}, "path": "warehouse/query-core/src/main/java/datawave/query/iterator/QueryIterator.java", "diffHunk": "@@ -345,10 +345,10 @@ public void seek(Range range, Collection<ByteSequence> columnFamilies, boolean i\n         // preserve the original range for use with the Final Document tracking iterator because it is placed after the ResultCountingIterator\n         // so the FinalDocumentTracking iterator needs the start key with the count already appended\n         originalRange = range;\n-        ActiveQueryLog.getInstance().get(getQueryId()).beginCall(this.originalRange, ActiveQuery.CallType.SEEK);\n+        ActiveQueryLog.getInstance(getActiveQueryLogName()).get(getQueryId()).beginCall(this.originalRange, ActiveQuery.CallType.SEEK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "698d0216fa91e4bcce749f7904440fa4f8ae2a97"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "449048c5aefc4d357660b4face22caf584d1aae4", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/449048c5aefc4d357660b4face22caf584d1aae4", "committedDate": "2021-02-24T17:11:48Z", "message": "Delete unused import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d686721dcb32da584b2cd4f97f6ed8bbb9125b0f", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/d686721dcb32da584b2cd4f97f6ed8bbb9125b0f", "committedDate": "2021-02-24T17:18:40Z", "message": "Make static access obvious"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5828d402429abd2519cc6bfc9539418e0e3d7680", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/5828d402429abd2519cc6bfc9539418e0e3d7680", "committedDate": "2021-02-24T17:23:09Z", "message": "Prevent unnecessary synchronization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c989d405cac1035e2eb9fd3f534429b1866b580", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/2c989d405cac1035e2eb9fd3f534429b1866b580", "committedDate": "2021-02-24T17:24:53Z", "message": "Synchronize on logCacheLock instead of ActiveQueryLog.class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9d69796d07a4f44b64fd5cc27c9567c3d9f9e79", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/e9d69796d07a4f44b64fd5cc27c9567c3d9f9e79", "committedDate": "2021-02-24T17:28:14Z", "message": "Use switch/case structure for readability"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "678479a6cbacc50a7603c53be5d47a0a7276a2af", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/678479a6cbacc50a7603c53be5d47a0a7276a2af", "committedDate": "2021-02-24T17:45:40Z", "message": "Reduce unecessary calls to ActiveQueryLog.getInstance()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f13cd10a8f84ab5c99b630dddf58383eee08df0", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/6f13cd10a8f84ab5c99b630dddf58383eee08df0", "committedDate": "2021-02-24T17:45:48Z", "message": "Shorten test names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ef3ffb7b68b56716da7a53090780cb365606219", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/2ef3ffb7b68b56716da7a53090780cb365606219", "committedDate": "2021-02-24T18:47:11Z", "message": "Fix NPEs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk4MDAyOTg5", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#pullrequestreview-598002989", "createdAt": "2021-02-24T22:43:23Z", "commit": {"oid": "5828d402429abd2519cc6bfc9539418e0e3d7680"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNFQyMjo0MzoyNFrOIrYXlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yNFQyMjo0NjoxMlrOIrYdMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjM1ODkzMg==", "bodyText": "This should go back to the way it was before the last commit so that we check for the named AQL in the logCache and add it if necessary all inside the synchronized block", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#discussion_r582358932", "createdAt": "2021-02-24T22:43:24Z", "author": {"login": "billoley"}, "path": "warehouse/query-core/src/main/java/datawave/query/tracking/ActiveQueryLog.java", "diffHunk": "@@ -100,10 +100,9 @@ public static ActiveQueryLog getInstance(String name) {\n         }\n         \n         // If no log currently exists for the name, create one.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5828d402429abd2519cc6bfc9539418e0e3d7680"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MjM2MDM3MA==", "bodyText": "This is where I thought the  if (logCache != null) check could be outside of the synchronized", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#discussion_r582360370", "createdAt": "2021-02-24T22:46:12Z", "author": {"login": "billoley"}, "path": "warehouse/query-core/src/main/java/datawave/query/tracking/ActiveQueryLog.java", "diffHunk": "@@ -4,83 +4,139 @@\n import com.github.benmanes.caffeine.cache.Caffeine;\n import org.apache.accumulo.core.conf.AccumuloConfiguration;\n import org.apache.accumulo.core.data.Range;\n+import org.apache.commons.lang.StringUtils;\n import org.apache.log4j.Logger;\n \n import java.util.ArrayList;\n import java.util.List;\n import java.util.Timer;\n import java.util.TimerTask;\n import java.util.UUID;\n+import java.util.concurrent.ConcurrentMap;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicLong;\n import java.util.concurrent.locks.ReentrantReadWriteLock;\n \n public class ActiveQueryLog {\n     \n+    public static final String DEFAULT_NAME = \"default_log\";\n     private static final String DEFAULT_EMPTY_QUERY_ID = new UUID(0, 0).toString();\n-    private static Logger log = Logger.getLogger(ActiveQueryLog.class);\n-    private static ActiveQueryLog instance = null;\n+    private static final Logger log = Logger.getLogger(ActiveQueryLog.class);\n+    private static Cache<String,ActiveQueryLog> logCache = null;\n+    private static final Object logCacheLock = new Object();\n     private static AccumuloConfiguration conf = null;\n     \n     // Accumulo properties\n     public static final String MAX_IDLE = \"datawave.query.active.maxIdleMs\";\n     public static final String LOG_PERIOD = \"datawave.query.active.logPeriodMs\";\n     public static final String LOG_MAX_QUERIES = \"datawave.query.active.logMaxQueries\";\n     public static final String WINDOW_SIZE = \"datawave.query.active.windowSize\";\n-    private static long HOURS_24_MS = TimeUnit.MILLISECONDS.convert(24, TimeUnit.HOURS);\n-    private static long MINUTES_15_MS = TimeUnit.MILLISECONDS.convert(15, TimeUnit.MINUTES);\n-    private static long MINUTES_1_MS = TimeUnit.MILLISECONDS.convert(1, TimeUnit.MINUTES);\n+    private static final long HOURS_24_MS = TimeUnit.MILLISECONDS.convert(24, TimeUnit.HOURS);\n+    private static final long MINUTES_15_MS = TimeUnit.MILLISECONDS.convert(15, TimeUnit.MINUTES);\n+    private static final long MINUTES_1_MS = TimeUnit.MILLISECONDS.convert(1, TimeUnit.MINUTES);\n     \n     // Changeable via Accumulo properties\n     volatile private long maxIdle = MINUTES_15_MS;\n     volatile private long logPeriod = MINUTES_1_MS;\n     volatile private int logMaxQueries = 5;\n     volatile private int windowSize = 10;\n-    private AtomicLong lastAccess = new AtomicLong(System.currentTimeMillis());\n+    private final AtomicLong lastAccess = new AtomicLong(System.currentTimeMillis());\n     \n     private Cache<String,ActiveQuery> CACHE = null;\n-    private ReentrantReadWriteLock cacheLock = new ReentrantReadWriteLock();\n+    private final ReentrantReadWriteLock cacheLock = new ReentrantReadWriteLock();\n     private Timer timer = null;\n     private TimerTask timerTask = null;\n     \n-    synchronized public static void setConfig(AccumuloConfiguration conf) {\n+    private final String name;\n+    \n+    synchronized public static void setConfig(final AccumuloConfiguration conf) {\n         if (conf != null) {\n             if (ActiveQueryLog.conf == null || conf.getUpdateCount() > ActiveQueryLog.conf.getUpdateCount()) {\n                 ActiveQueryLog.conf = conf;\n-                ActiveQueryLog.getInstance().checkSettings(conf, false);\n+            }\n+            // Do not allow access to the cache while updating each log's settings.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ef3ffb7b68b56716da7a53090780cb365606219"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7682aaaa31433383d7ef143f9602e2e2d906bbb7", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/7682aaaa31433383d7ef143f9602e2e2d906bbb7", "committedDate": "2021-02-25T23:30:55Z", "message": "Revert changes to null check placement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "593a049a6918f4f7d9757ce554a631240bb2ba0d", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/593a049a6918f4f7d9757ce554a631240bb2ba0d", "committedDate": "2021-02-25T23:32:08Z", "message": "Move null check outside synchonization block"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "400ce45943df176353fca6aabb583ea2087f2fc7", "author": {"user": {"login": "keith-ratcliffe", "name": null}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/400ce45943df176353fca6aabb583ea2087f2fc7", "committedDate": "2021-03-02T21:39:52Z", "message": "Merge branch 'release/version3.2' into active-query-log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAyODkxNjUx", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#pullrequestreview-602891651", "createdAt": "2021-03-03T13:29:21Z", "commit": {"oid": "400ce45943df176353fca6aabb583ea2087f2fc7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAyOTAzNTc3", "url": "https://github.com/NationalSecurityAgency/datawave/pull/842#pullrequestreview-602903577", "createdAt": "2021-03-03T13:42:13Z", "commit": {"oid": "400ce45943df176353fca6aabb583ea2087f2fc7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1011, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}