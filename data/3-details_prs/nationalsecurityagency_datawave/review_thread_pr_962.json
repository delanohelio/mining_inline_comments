{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MTE2NDc5", "number": 962, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzo1ODoyNVrOEzhjIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzo1ODoyNVrOEzhjIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNDYyNDk3OnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/main/java/datawave/query/jexl/visitors/QueryModelVisitor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzo1ODoyNVrOHqyvUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMjoyNjo1OVrOHq4DOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYzMzU1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Set<List<Object>> newSet = product.stream().map(new ProductTransformer()::apply).collect(Collectors.toSet());\n          \n          \n            \n                    Set<List<JexlNode>> newSet = product.stream().map(list -> list.stream().map(RebuildingVisitor::copy).collect(Collectors.toList()))\n          \n          \n            \n                                    .collect(Collectors.toSet());\n          \n      \n    \n    \n  \n\nI like this change, but it had me wondering if we actually still needed the ProductTransformer.  After playing around with this a little, I settled on this implementation (which causes a ripple-effect of changes in a few places).\nThe transformer handled the case where one of the elements in the list is NOT a JexlNode.  However, after looking at all the ways we populate the 'left' and 'right' sets, we are only ever populating them with JexlNodes, so instead of typing everything as 'object', I typed everything as JexlNode, which simplified the ProductTransformer logic down to straight 'copy' on each sublist.  That's what is reflected here.\nThis change led to a few method signature changes in JexlNodeFactory, namely:\n\ncreateNodeTreeFromPairs - the pairs argument changed to Set<List> pairs\nbuildUntypedBinaryNode - the left and right arguments changed to JexlNode\n\nBoth of those methods accept simple objects as inputs, but they don't actually work for anything that doesn't extend JexlNode, so it makes sense to me to be more specific with our typing.  I know that this isn't your code, and it may be a little outside the scope of this PR, but I think this would be a good change if you're up for it.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/962#discussion_r514633553", "createdAt": "2020-10-29T23:58:25Z", "author": {"login": "jwomeara"}, "path": "warehouse/query-core/src/main/java/datawave/query/jexl/visitors/QueryModelVisitor.java", "diffHunk": "@@ -395,20 +388,18 @@ protected JexlNode expandBinaryNodeFromModel(JexlNode node, Object data) {\n          * need to ensure that if we create a logical structure ( such as an or ) -- each literal references a unique identifier from the right. Otherwise,\n          * subsequent visitors will reference incorrection sub trees, and potentially negate the activity of the query model visitor\n          */\n-        Set<List<Object>> newSet = Sets.newHashSet(FluentIterable.from(product).transform(new ProductTransformer()));\n+        Set<List<Object>> newSet = product.stream().map(new ProductTransformer()::apply).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad8fc694681e6d791675c18e06794352fe7ab750"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDcyMDU2OA==", "bodyText": "@jwomeara I made the changes necessary to remove ProductTransformer.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/962#discussion_r514720568", "createdAt": "2020-10-30T02:26:59Z", "author": {"login": "lbschanno"}, "path": "warehouse/query-core/src/main/java/datawave/query/jexl/visitors/QueryModelVisitor.java", "diffHunk": "@@ -395,20 +388,18 @@ protected JexlNode expandBinaryNodeFromModel(JexlNode node, Object data) {\n          * need to ensure that if we create a logical structure ( such as an or ) -- each literal references a unique identifier from the right. Otherwise,\n          * subsequent visitors will reference incorrection sub trees, and potentially negate the activity of the query model visitor\n          */\n-        Set<List<Object>> newSet = Sets.newHashSet(FluentIterable.from(product).transform(new ProductTransformer()));\n+        Set<List<Object>> newSet = product.stream().map(new ProductTransformer()::apply).collect(Collectors.toSet());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYzMzU1Mw=="}, "originalCommit": {"oid": "ad8fc694681e6d791675c18e06794352fe7ab750"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4457, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}