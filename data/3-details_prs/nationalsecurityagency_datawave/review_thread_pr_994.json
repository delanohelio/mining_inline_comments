{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1ODkxODE2", "number": 994, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzoyNzowMFrOE8UjNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzoyNzowMFrOE8UjNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNjg2NzA4OnYy", "diffSide": "LEFT", "path": "warehouse/query-core/src/test/java/datawave/query/jexl/visitors/UniqueExpressionTermsVisitorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzoyNzowMFrOH4X-ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTo0OTozOFrOH5IOAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg3NTEzMQ==", "bodyText": "This check should be left in. There have been cases were the tree equality visitor said trees were equal but the queries parsed into different strings.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/994#discussion_r528875131", "createdAt": "2020-11-23T17:27:00Z", "author": {"login": "apmoriarty"}, "path": "warehouse/query-core/src/test/java/datawave/query/jexl/visitors/UniqueExpressionTermsVisitorTest.java", "diffHunk": "@@ -236,21 +239,31 @@ public void testDuplicateSubTreeDisjunction() throws ParseException {\n     \n     private void visitAndValidate(String original, String expected) throws ParseException {\n         ASTJexlScript originalScript = JexlASTHelper.parseJexlQuery(original);\n-        ASTJexlScript expectedScript = JexlASTHelper.parseJexlQuery(expected);\n-        \n-        // Flatten scripts\n-        originalScript = TreeFlatteningRebuildingVisitor.flatten(originalScript);\n-        expectedScript = TreeFlatteningRebuildingVisitor.flatten(expectedScript);\n-        \n-        // Assert that both original and expected query strings parse as expected\n-        assertEquals(\"Original query did not parse cleanly\" + original, original, JexlStringBuildingVisitor.buildQuery(originalScript));\n-        assertEquals(\"Expected query did not parse cleanly\" + expected, expected, JexlStringBuildingVisitor.buildQuery(expectedScript));\n         \n         // Remove duplicate terms from within expressions.\n         ASTJexlScript visitedScript = UniqueExpressionTermsVisitor.enforce(originalScript);\n         \n-        // De-duped query should match expected\n-        assertEquals(expected, JexlStringBuildingVisitor.buildQuery(visitedScript));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80cf3587996655910fe4e7ede240dc636b5705e6"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY2NTUzOQ==", "bodyText": "No problem, it's been added back in.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/994#discussion_r529665539", "createdAt": "2020-11-24T15:49:38Z", "author": {"login": "lbschanno"}, "path": "warehouse/query-core/src/test/java/datawave/query/jexl/visitors/UniqueExpressionTermsVisitorTest.java", "diffHunk": "@@ -236,21 +239,31 @@ public void testDuplicateSubTreeDisjunction() throws ParseException {\n     \n     private void visitAndValidate(String original, String expected) throws ParseException {\n         ASTJexlScript originalScript = JexlASTHelper.parseJexlQuery(original);\n-        ASTJexlScript expectedScript = JexlASTHelper.parseJexlQuery(expected);\n-        \n-        // Flatten scripts\n-        originalScript = TreeFlatteningRebuildingVisitor.flatten(originalScript);\n-        expectedScript = TreeFlatteningRebuildingVisitor.flatten(expectedScript);\n-        \n-        // Assert that both original and expected query strings parse as expected\n-        assertEquals(\"Original query did not parse cleanly\" + original, original, JexlStringBuildingVisitor.buildQuery(originalScript));\n-        assertEquals(\"Expected query did not parse cleanly\" + expected, expected, JexlStringBuildingVisitor.buildQuery(expectedScript));\n         \n         // Remove duplicate terms from within expressions.\n         ASTJexlScript visitedScript = UniqueExpressionTermsVisitor.enforce(originalScript);\n         \n-        // De-duped query should match expected\n-        assertEquals(expected, JexlStringBuildingVisitor.buildQuery(visitedScript));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg3NTEzMQ=="}, "originalCommit": {"oid": "80cf3587996655910fe4e7ede240dc636b5705e6"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4348, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}