{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNDEzNjUx", "number": 789, "title": "fixes #750 Re-enable AuditBean in Embedded, Filter out shaded guava c\u2026", "bodyText": "fixes #750 Re-enable AuditBean in Embedded, Filter out shaded guava classes from jboss-client.jar while writing to job distributed cache", "createdAt": "2020-03-23T14:17:31Z", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789", "merged": true, "mergeCommit": {"oid": "03d133b680cc224687eda007e0dbaf9762927ce9"}, "closed": true, "closedAt": "2020-03-23T21:23:50Z", "author": {"login": "billoley"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPm_8dgH2gAyMzkyNDEzNjUxOjFkYzQyNDUwNjQ5OGNkZGMzY2NkYmJhODQxMDRlNTAyZmRiM2RhNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQlHYMgFqTM3OTgzMzE2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1dc424506498cddc3ccdbba84104e502fdb3da79", "author": {"user": {"login": "billoley", "name": "Bill Oley"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/1dc424506498cddc3ccdbba84104e502fdb3da79", "committedDate": "2020-03-20T21:01:11Z", "message": "fixes #750 Re-enable AuditBean in Embedded, Filter out shaded guava classes from jboss-client.jar while writing to job distributed cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTE4MDUy", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#pullrequestreview-379518052", "createdAt": "2020-03-23T15:04:53Z", "commit": {"oid": "1dc424506498cddc3ccdbba84104e502fdb3da79"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTowNDo1M1rOF6JpJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTowODowM1rOF6JyDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUxOTcxNw==", "bodyText": "Not required, but you can simplify this quite a bit with streams...\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    boolean include = true;\n          \n          \n            \n                                    Iterator<Pattern> patternItr = patterns.iterator();\n          \n          \n            \n                                    while (patternItr.hasNext() && include == true) {\n          \n          \n            \n                                        Pattern p = patternItr.next();\n          \n          \n            \n                                        if (p.matcher(zipEntry.getName()).matches()) {\n          \n          \n            \n                                            include = false;\n          \n          \n            \n                                        }\n          \n          \n            \n                                    }\n          \n          \n            \n                                    if (include) {\n          \n          \n            \n                                    final String entryName = zipEntry.getName();\n          \n          \n            \n                                    if (patterns.stream().noneMatch(p -> p.matcher(entryName).matches())) {", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#discussion_r396519717", "createdAt": "2020-03-23T15:04:53Z", "author": {"login": "brianloss"}, "path": "web-services/map-reduce/src/main/java/datawave/webservice/mr/configuration/MapReduceJobConfiguration.java", "diffHunk": "@@ -302,6 +316,40 @@ protected void prepareClasspath(String jobId, Job job, Path jobDir) throws Excep\n         exportSystemProperties(jobId, job, fs, classpath);\n     }\n     \n+    private File filterJar(File source, List<Pattern> patterns) {\n+        File f = null;\n+        try {\n+            f = File.createTempFile(source.getName() + \".\", \"\");\n+            try (FileOutputStream fos = new FileOutputStream(f); ZipOutputStream zipOutputStream = new ZipOutputStream(fos)) {\n+                try (ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(source))) {\n+                    for (ZipEntry zipEntry = zipInputStream.getNextEntry(); zipEntry != null; zipEntry = zipInputStream.getNextEntry()) {\n+                        boolean include = true;\n+                        Iterator<Pattern> patternItr = patterns.iterator();\n+                        while (patternItr.hasNext() && include == true) {\n+                            Pattern p = patternItr.next();\n+                            if (p.matcher(zipEntry.getName()).matches()) {\n+                                include = false;\n+                            }\n+                        }\n+                        if (include) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dc424506498cddc3ccdbba84104e502fdb3da79"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjUyMTk5OQ==", "bodyText": "Another way...\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        byte[] buffer = new byte[2048];\n          \n          \n            \n                                        int len;\n          \n          \n            \n                                        while ((len = zipInputStream.read(buffer)) > 0) {\n          \n          \n            \n                                            zipOutputStream.write(buffer, 0, len);\n          \n          \n            \n                                        }\n          \n          \n            \n                                        ByteStreams.copy(zipInputStream, zipOutputStream);", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#discussion_r396521999", "createdAt": "2020-03-23T15:08:03Z", "author": {"login": "brianloss"}, "path": "web-services/map-reduce/src/main/java/datawave/webservice/mr/configuration/MapReduceJobConfiguration.java", "diffHunk": "@@ -302,6 +316,40 @@ protected void prepareClasspath(String jobId, Job job, Path jobDir) throws Excep\n         exportSystemProperties(jobId, job, fs, classpath);\n     }\n     \n+    private File filterJar(File source, List<Pattern> patterns) {\n+        File f = null;\n+        try {\n+            f = File.createTempFile(source.getName() + \".\", \"\");\n+            try (FileOutputStream fos = new FileOutputStream(f); ZipOutputStream zipOutputStream = new ZipOutputStream(fos)) {\n+                try (ZipInputStream zipInputStream = new ZipInputStream(new FileInputStream(source))) {\n+                    for (ZipEntry zipEntry = zipInputStream.getNextEntry(); zipEntry != null; zipEntry = zipInputStream.getNextEntry()) {\n+                        boolean include = true;\n+                        Iterator<Pattern> patternItr = patterns.iterator();\n+                        while (patternItr.hasNext() && include == true) {\n+                            Pattern p = patternItr.next();\n+                            if (p.matcher(zipEntry.getName()).matches()) {\n+                                include = false;\n+                            }\n+                        }\n+                        if (include) {\n+                            zipOutputStream.putNextEntry(zipEntry);\n+                            byte[] buffer = new byte[2048];\n+                            int len;\n+                            while ((len = zipInputStream.read(buffer)) > 0) {\n+                                zipOutputStream.write(buffer, 0, len);\n+                            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1dc424506498cddc3ccdbba84104e502fdb3da79"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53bee4e8e0291ab1394996861c420d318244fde7", "author": {"user": {"login": "billoley", "name": "Bill Oley"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/53bee4e8e0291ab1394996861c420d318244fde7", "committedDate": "2020-03-23T16:11:12Z", "message": "fixes #750 Simplify pattern interation and stream copy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NTg1NDIz", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#pullrequestreview-379585423", "createdAt": "2020-03-23T16:13:01Z", "commit": {"oid": "53bee4e8e0291ab1394996861c420d318244fde7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5ODMyODg1", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#pullrequestreview-379832885", "createdAt": "2020-03-23T21:22:57Z", "commit": {"oid": "53bee4e8e0291ab1394996861c420d318244fde7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMToyMjo1N1rOF6YniA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMToyMjo1N1rOF6YniA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2NTA2NA==", "bodyText": "ugh, but ok for now I guess....", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#discussion_r396765064", "createdAt": "2020-03-23T21:22:57Z", "author": {"login": "ivakegg"}, "path": "web-services/map-reduce/src/main/java/datawave/webservice/mr/configuration/MapReduceJobConfiguration.java", "diffHunk": "@@ -284,7 +288,17 @@ protected void prepareClasspath(String jobId, Job job, Path jobDir) throws Excep\n         File[] jarFiles = libDir.listFiles(jarFilter);\n         if (jarFiles != null) {\n             for (File jar : jarFiles) {\n-                addSingleFile(jar, new Path(classpath, jar.getName()), jobId, job, fs);\n+                // remove guava classes from jboss-client.jar\n+                if (jar.getName().equals(\"jboss-client.jar\")) {\n+                    List<Pattern> patterns = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53bee4e8e0291ab1394996861c420d318244fde7"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5ODMzMTYx", "url": "https://github.com/NationalSecurityAgency/datawave/pull/789#pullrequestreview-379833161", "createdAt": "2020-03-23T21:23:25Z", "commit": {"oid": "53bee4e8e0291ab1394996861c420d318244fde7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1177, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}