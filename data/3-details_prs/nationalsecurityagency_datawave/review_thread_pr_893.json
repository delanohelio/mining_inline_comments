{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MjMyNDY0", "number": 893, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODoxMToxNlrOEXUzFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODoxMToxNlrOEXUzFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyODkzNDYwOnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/test/java/datawave/query/jexl/visitors/ExecutableDeterminationVisitorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODoxMToxNlrOG_DfSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxODoxMToxNlrOG_DfSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODc3MDYzMw==", "bodyText": "Ew...  easymock...", "url": "https://github.com/NationalSecurityAgency/datawave/pull/893#discussion_r468770633", "createdAt": "2020-08-11T18:11:16Z", "author": {"login": "jwomeara"}, "path": "warehouse/query-core/src/test/java/datawave/query/jexl/visitors/ExecutableDeterminationVisitorTest.java", "diffHunk": "@@ -413,4 +421,143 @@ public void testNegationEvaluation() {\n         Assert.assertTrue(ExecutableDeterminationVisitor.isNegated(\"!           !   !  !    !            !    !\"));\n         Assert.assertTrue(ExecutableDeterminationVisitor.isNegated(\"!           !   !  !    !            !    !             \"));\n     }\n+    \n+    /**\n+     * Copied from JexlNodeFactory without the AND/OR restrictions\n+     * \n+     * @param toWrap\n+     * @return\n+     */\n+    private JexlNode wrap(JexlNode toWrap) {\n+        ASTReference reference = new ASTReference(ParserTreeConstants.JJTREFERENCE);\n+        ASTReferenceExpression parens = new ASTReferenceExpression(ParserTreeConstants.JJTREFERENCEEXPRESSION);\n+        \n+        parens.jjtAddChild(toWrap, 0);\n+        toWrap.jjtSetParent(parens);\n+        \n+        reference.jjtAddChild(parens, 0);\n+        parens.jjtSetParent(reference);\n+        \n+        return reference;\n+    }\n+    \n+    @Test\n+    public void testAllOrSomeEmpty() throws TableNotFoundException {\n+        List<JexlNode> children = new ArrayList<>();\n+        JexlNode eqNode = JexlNodeFactory.buildEQNode(\"INDEXEDFIELD\", \"v3\");\n+        JexlNode wrappedNode = wrap(eqNode);\n+        children.add(wrappedNode);\n+        \n+        // remove the eq node\n+        JexlNodes.removeFromParent(eqNode.jjtGetParent(), eqNode);\n+        \n+        JexlNode andNode = JexlNodeFactory.createAndNode(children);\n+        \n+        HashSet indexedFields = new HashSet();\n+        indexedFields.add(\"INDEXONLYFIELD\");\n+        indexedFields.add(\"INDEXEDFIELD\");\n+        \n+        HashSet<String> indexOnlyFields = new HashSet<>();\n+        indexOnlyFields.add(\"INDEXONLYFIELD\");\n+        \n+        EasyMock.expect(config.getIndexedFields()).andReturn(indexedFields).anyTimes();\n+        EasyMock.expect(helper.getIndexOnlyFields(null)).andReturn(indexOnlyFields).anyTimes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f27e335870d9c8b272614d405a4d18f0ec53211"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4407, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}