{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MTE5OTcw", "number": 963, "title": "Fix lineage for RangeCoalescingVisitor", "bodyText": "RangeCoalescingVisitor does not return a query tree with a valid\nlineage. Ensure that lineage is properly established, and modify unit\ntests to assert this.\nPart of #880.", "createdAt": "2020-10-20T21:57:17Z", "url": "https://github.com/NationalSecurityAgency/datawave/pull/963", "merged": true, "mergeCommit": {"oid": "e2ade333fdb31f1df57186a233f802ef9fdd4573"}, "closed": true, "closedAt": "2020-10-30T17:55:53Z", "author": {"login": "lbschanno"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUgC6kAH2gAyNTA3MTE5OTcwOjU3MmYyMDQ1OTUwODIxZDIzOTkyY2RjMGYzMGIyOTMxMDNmODkzZmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXqc1WAFqTUyMDkwMDA5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "572f2045950821d23992cdc0f30b293103f893fc", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/572f2045950821d23992cdc0f30b293103f893fc", "committedDate": "2020-10-20T21:55:52Z", "message": "Fix lineage for RangeCoalescingVisitor\n\nRangeCoalescingVisitor does not return a query tree with a valid\nlineage. Ensure that lineage is properly established, and modify unit\ntests to assert this.\n\nPart of #880."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MDE0Njc5", "url": "https://github.com/NationalSecurityAgency/datawave/pull/963#pullrequestreview-514014679", "createdAt": "2020-10-21T17:42:36Z", "commit": {"oid": "572f2045950821d23992cdc0f30b293103f893fc"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MTE2NzU1", "url": "https://github.com/NationalSecurityAgency/datawave/pull/963#pullrequestreview-514116755", "createdAt": "2020-10-21T19:37:29Z", "commit": {"oid": "572f2045950821d23992cdc0f30b293103f893fc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxOTozNzoyOVrOHmAdyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDoxNToxMFrOHmC1qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTYxNTU2MA==", "bodyText": "I don't think you need this call.  When the parent node is visited by this visitor (which extends RebuildingVisitor) it will be 'rebuilt' and any children will be reparented to the rebuilt node.  Short answer is that this functionality should already be handled by the parent RebuildingVisitor class.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/963#discussion_r509615560", "createdAt": "2020-10-21T19:37:29Z", "author": {"login": "jwomeara"}, "path": "warehouse/query-core/src/main/java/datawave/query/jexl/visitors/RangeCoalescingVisitor.java", "diffHunk": "@@ -90,12 +50,12 @@ public Object visit(ASTAndNode node, Object data) {\n             JexlNodes.ensureCapacity(andNode, node.jjtGetNumChildren());\n             for (int i = 0; i < node.jjtGetNumChildren(); i++) {\n                 JexlNode newChild = (JexlNode) node.jjtGetChild(i).jjtAccept(this, data);\n-                \n                 andNode.jjtAddChild(newChild, i);\n                 newChild.jjtSetParent(andNode);\n             }\n         }\n         \n+        JexlNodes.replaceChild(node.jjtGetParent(), node, andNode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "572f2045950821d23992cdc0f30b293103f893fc"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY1NDQ0MQ==", "bodyText": "This is 100% not required for this PR, but I would LOVE to see us validate the lineage of the originalScript after running the visitor as well.  In my opinion, a rebuilding visitor should not be destructive.  That is to say that the originalScript that's passed in should not be modified in any way by any of our rebuilding visitors.  The changes should be evident in the rebuilt actualScript only.\nI will also add that this is definitely NOT the case with many of our rebuilding visitors.  They are certainly destructive (I know, because I've written a few that way, d'oh!).  I'm hoping that this is something that we can move away from.  If you're not feeling up to that for this PR, please do me a favor and make a separate issue so that we can track that as well.\nBTW, I loaded up your PR and added the validateLineage step against the originalScript...  This is definitely a destructive rebuilding visitor.  FYI.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/963#discussion_r509654441", "createdAt": "2020-10-21T20:15:10Z", "author": {"login": "jwomeara"}, "path": "warehouse/query-core/src/test/java/datawave/query/jexl/visitors/RangeCoalescingVisitorTest.java", "diffHunk": "@@ -113,11 +85,48 @@ public void testCoalesceManyNestedAndUnorderedTermsWithAnchorTerm() throws Parse\n         String expectedQuery1 = \"TACO == 'tacocat' && NUM3 == '+aE3' && (NUM2 >= '+aE2' && NUM2 <= '+aE4') && (NUM >= '+aE1' && NUM <= '+aE5')\";\n         String expectedQuery2 = \"TACO == 'tacocat' && NUM3 == '+aE3' && (NUM >= '+aE1' && NUM <= '+aE5') && (NUM2 >= '+aE2' && NUM2 <= '+aE4')\";\n         \n-        ASTJexlScript script = JexlASTHelper.parseJexlQuery(originalQuery);\n-        ASTJexlScript newScript = RangeCoalescingVisitor.coalesceRanges(script);\n+        assertVisitorResult(originalQuery, expectedQuery1, expectedQuery2);\n+    }\n+    \n+    private void assertVisitorResult(String original, String expected) throws ParseException {\n+        ASTJexlScript originalScript = JexlASTHelper.parseJexlQuery(original);\n+        ASTJexlScript expectedScript = JexlASTHelper.parseJexlQuery(expected);\n+        ASTJexlScript actualScript = RangeCoalescingVisitor.coalesceRanges(originalScript);\n         \n-        String newQuery = JexlStringBuildingVisitor.buildQuery(newScript);\n-        assertTrue(\"Expected [\" + expectedQuery1 + \"] or [\" + expectedQuery2 + \"] but was \" + newQuery,\n-                        (expectedQuery1.equals(newQuery) || expectedQuery2.equalsIgnoreCase(newQuery)));\n+        assertScriptEquality(actualScript, expectedScript);\n+        assertTrue(JexlASTHelper.validateLineage(actualScript, true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "572f2045950821d23992cdc0f30b293103f893fc"}, "originalPosition": 129}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MTUyMzg5", "url": "https://github.com/NationalSecurityAgency/datawave/pull/963#pullrequestreview-514152389", "createdAt": "2020-10-21T20:18:16Z", "commit": {"oid": "572f2045950821d23992cdc0f30b293103f893fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDoxODoxNlrOHmDHdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQyMDoxODoxNlrOHmDHdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTY1ODk5OA==", "bodyText": "This reparenting is also not needed as reparenting is handled by the base RebuildingVisitor.\nI tested this change locally as well, and tests still pass perfectly if you simply return newNode.jjtGetChild(0).", "url": "https://github.com/NationalSecurityAgency/datawave/pull/963#discussion_r509658998", "createdAt": "2020-10-21T20:18:16Z", "author": {"login": "jwomeara"}, "path": "warehouse/query-core/src/main/java/datawave/query/jexl/visitors/RangeCoalescingVisitor.java", "diffHunk": "@@ -137,8 +99,9 @@ protected JexlNode coalesceBoundedRanges(Map<LiteralRange<?>,List<JexlNode>> ran\n         \n         // If we had no other nodes than this bounded range, we can strip out the original parent\n         if (newNode.jjtGetNumChildren() == 1) {\n-            newNode.jjtGetChild(0).jjtSetParent(newNode.jjtGetParent());\n-            return newNode.jjtGetChild(0);\n+            JexlNode child = newNode.jjtGetChild(0);\n+            JexlNodes.replaceChild(newNode.jjtGetParent(), newNode, child);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "572f2045950821d23992cdc0f30b293103f893fc"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e76aa6be7564c8b947972d79506ea56638a29e2", "author": {"user": {"login": "jwomeara", "name": "Whitney O'Meara"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/7e76aa6be7564c8b947972d79506ea56638a29e2", "committedDate": "2020-10-21T20:18:39Z", "message": "Merge branch 'master' into 880-RangeCoalescingVisitor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "daecddc0006c67e204f688ed6945a1ee3a29bb7f", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/daecddc0006c67e204f688ed6945a1ee3a29bb7f", "committedDate": "2020-10-21T20:31:15Z", "message": "Remove unecessary reparenting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MTkxODk0", "url": "https://github.com/NationalSecurityAgency/datawave/pull/963#pullrequestreview-514191894", "createdAt": "2020-10-21T21:15:40Z", "commit": {"oid": "daecddc0006c67e204f688ed6945a1ee3a29bb7f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NjI1ODIx", "url": "https://github.com/NationalSecurityAgency/datawave/pull/963#pullrequestreview-519625821", "createdAt": "2020-10-29T12:46:12Z", "commit": {"oid": "daecddc0006c67e204f688ed6945a1ee3a29bb7f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "271733bbb98994b6e249b45cfdd313c8ccb0478c", "author": {"user": {"login": "ivakegg", "name": "Ivan Bella"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/271733bbb98994b6e249b45cfdd313c8ccb0478c", "committedDate": "2020-10-29T12:46:20Z", "message": "Merge branch 'master' into 880-RangeCoalescingVisitor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMDk2ODAz", "url": "https://github.com/NationalSecurityAgency/datawave/pull/963#pullrequestreview-520096803", "createdAt": "2020-10-29T21:21:06Z", "commit": {"oid": "271733bbb98994b6e249b45cfdd313c8ccb0478c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb2cad2dc07b36d888ce10e7a2a780a19ddbf7af", "author": {"user": {"login": "lbschanno", "name": "Laura Schanno"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/bb2cad2dc07b36d888ce10e7a2a780a19ddbf7af", "committedDate": "2020-10-30T01:52:35Z", "message": "Remove superfluous line"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNjgxMzYz", "url": "https://github.com/NationalSecurityAgency/datawave/pull/963#pullrequestreview-520681363", "createdAt": "2020-10-30T13:45:42Z", "commit": {"oid": "bb2cad2dc07b36d888ce10e7a2a780a19ddbf7af"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6fb540626b24f7ee4d579c350a9bacd047b17e17", "author": {"user": {"login": "jwomeara", "name": "Whitney O'Meara"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/6fb540626b24f7ee4d579c350a9bacd047b17e17", "committedDate": "2020-10-30T14:04:53Z", "message": "Merge branch 'master' into 880-RangeCoalescingVisitor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwOTAwMDk4", "url": "https://github.com/NationalSecurityAgency/datawave/pull/963#pullrequestreview-520900098", "createdAt": "2020-10-30T17:45:00Z", "commit": {"oid": "6fb540626b24f7ee4d579c350a9bacd047b17e17"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1088, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}