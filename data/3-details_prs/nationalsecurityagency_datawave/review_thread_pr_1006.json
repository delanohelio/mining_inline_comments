{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NzA0NDky", "number": 1006, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzowNzowOFrOFIo7qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxNDozMjoxOVrOFkuo6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NjAzNTYzOnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzowNzowOFrOIKqv4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwNDoxNTowMVrOIRxPIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA1NzA1Ng==", "bodyText": "Given #926 has been merged in, we can now detect bounded ranges precisely.  Update the node counter to also count the different types of QueryPropertyMarkers.  This can then be if (nodeCount.asBoundedRange()).", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r548057056", "createdAt": "2020-12-23T17:07:08Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1177,22 +1178,33 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n             \n             // Expand any bounded ranges into a conjunction of discrete terms\n             try {\n-                innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand regex\");\n+                // Count each type of node in the query.\n+                NodeTypeCountVisitor nodeCount = NodeTypeCountVisitor.countNodes(queryTree);\n+                \n                 ParallelIndexExpansion regexExpansion = new ParallelIndexExpansion(config, scannerFactory, metadataHelper, expansionFields,\n                                 config.isExpandFields(), config.isExpandValues(), config.isExpandUnfieldedNegations());\n-                queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                if (log.isDebugEnabled()) {\n-                    logQuery(queryTree, \"Query after expanding regex:\");\n+                if (nodeCount.hasRegexNodes()) {\n+                    innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand regex\");\n+                    queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n+                    if (log.isDebugEnabled()) {\n+                        logQuery(queryTree, \"Query after expanding regex:\");\n+                    }\n+                    innerStopwatch.stop();\n+                } else {\n+                    log.debug(\"No regex to expand\");\n                 }\n-                innerStopwatch.stop();\n                 \n-                innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand ranges\");\n-                queryTree = RangeConjunctionRebuildingVisitor.expandRanges(config, scannerFactory, metadataHelper, queryTree, config.isExpandFields(),\n-                                config.isExpandValues());\n-                if (log.isDebugEnabled()) {\n-                    logQuery(queryTree, \"Query after expanding ranges:\");\n+                if (nodeCount.hasPossibleBoundedRange()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "309138ae7258c9ecf5499d913ed6bddb9df57a85"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTUwMzM5NA==", "bodyText": "Done.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r555503394", "createdAt": "2021-01-12T04:15:01Z", "author": {"login": "lbschanno"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1177,22 +1178,33 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n             \n             // Expand any bounded ranges into a conjunction of discrete terms\n             try {\n-                innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand regex\");\n+                // Count each type of node in the query.\n+                NodeTypeCountVisitor nodeCount = NodeTypeCountVisitor.countNodes(queryTree);\n+                \n                 ParallelIndexExpansion regexExpansion = new ParallelIndexExpansion(config, scannerFactory, metadataHelper, expansionFields,\n                                 config.isExpandFields(), config.isExpandValues(), config.isExpandUnfieldedNegations());\n-                queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                if (log.isDebugEnabled()) {\n-                    logQuery(queryTree, \"Query after expanding regex:\");\n+                if (nodeCount.hasRegexNodes()) {\n+                    innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand regex\");\n+                    queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n+                    if (log.isDebugEnabled()) {\n+                        logQuery(queryTree, \"Query after expanding regex:\");\n+                    }\n+                    innerStopwatch.stop();\n+                } else {\n+                    log.debug(\"No regex to expand\");\n                 }\n-                innerStopwatch.stop();\n                 \n-                innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand ranges\");\n-                queryTree = RangeConjunctionRebuildingVisitor.expandRanges(config, scannerFactory, metadataHelper, queryTree, config.isExpandFields(),\n-                                config.isExpandValues());\n-                if (log.isDebugEnabled()) {\n-                    logQuery(queryTree, \"Query after expanding ranges:\");\n+                if (nodeCount.hasPossibleBoundedRange()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA1NzA1Ng=="}, "originalCommit": {"oid": "309138ae7258c9ecf5499d913ed6bddb9df57a85"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NjAzNjkzOnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNzowNzozN1rOIKqwqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwNDoxNTowNlrOIRxPOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA1NzI1OA==", "bodyText": "see comment above", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r548057258", "createdAt": "2020-12-23T17:07:37Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1235,19 +1251,30 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n                     // predicates based on cost...\n                     config.setExpandAllTerms(true);\n                     \n-                    queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                    if (log.isDebugEnabled()) {\n-                        logQuery(queryTree, \"Query after expanding regex again:\");\n+                    // Recount the nodes of each type.\n+                    nodeCount = NodeTypeCountVisitor.countNodes(queryTree);\n+                    \n+                    if (nodeCount.hasRegexNodes()) {\n+                        queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n+                        if (log.isDebugEnabled()) {\n+                            logQuery(queryTree, \"Query after expanding regex again:\");\n+                        }\n                     }\n-                    queryTree = RangeConjunctionRebuildingVisitor.expandRanges(config, scannerFactory, metadataHelper, queryTree, config.isExpandFields(),\n-                                    config.isExpandValues());\n-                    if (log.isDebugEnabled()) {\n-                        logQuery(queryTree, \"Query after expanding ranges again:\");\n+                    \n+                    if (nodeCount.hasPossibleBoundedRange()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "309138ae7258c9ecf5499d913ed6bddb9df57a85"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTUwMzQxOA==", "bodyText": "Done.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r555503418", "createdAt": "2021-01-12T04:15:06Z", "author": {"login": "lbschanno"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1235,19 +1251,30 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n                     // predicates based on cost...\n                     config.setExpandAllTerms(true);\n                     \n-                    queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                    if (log.isDebugEnabled()) {\n-                        logQuery(queryTree, \"Query after expanding regex again:\");\n+                    // Recount the nodes of each type.\n+                    nodeCount = NodeTypeCountVisitor.countNodes(queryTree);\n+                    \n+                    if (nodeCount.hasRegexNodes()) {\n+                        queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n+                        if (log.isDebugEnabled()) {\n+                            logQuery(queryTree, \"Query after expanding regex again:\");\n+                        }\n                     }\n-                    queryTree = RangeConjunctionRebuildingVisitor.expandRanges(config, scannerFactory, metadataHelper, queryTree, config.isExpandFields(),\n-                                    config.isExpandValues());\n-                    if (log.isDebugEnabled()) {\n-                        logQuery(queryTree, \"Query after expanding ranges again:\");\n+                    \n+                    if (nodeCount.hasPossibleBoundedRange()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODA1NzI1OA=="}, "originalCommit": {"oid": "309138ae7258c9ecf5499d913ed6bddb9df57a85"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzcxMzk5MzE5OnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wNVQxNzozMjoxMlrOIxPdnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQyMjowNjoyMFrOI1S7sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODUwNDQ3Nw==", "bodyText": "Do we have to call the visitor every time or can we count the nodes once?  There may be places where we need to recount but certainly not at line 1211", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r588504477", "createdAt": "2021-03-05T17:32:12Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1188,22 +1194,29 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n             \n             // Expand any bounded ranges into a conjunction of discrete terms\n             try {\n-                innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand regex\");\n                 ParallelIndexExpansion regexExpansion = new ParallelIndexExpansion(config, scannerFactory, metadataHelper, expansionFields,\n                                 config.isExpandFields(), config.isExpandValues(), config.isExpandUnfieldedNegations());\n-                queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                if (log.isDebugEnabled()) {\n-                    logQuery(queryTree, \"Query after expanding regex:\");\n+                \n+                // Check if there is any regex to expand.\n+                if (NodeTypeCountVisitor.countNodes(queryTree).hasAny(ASTNRNode.class, ASTERNode.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0324169a576bfdd378001f479ccb073987f5319"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MTk4MDE2OA==", "bodyText": "@ivakegg I made a modification so that the nodes are recounted only when we know the query tree has been modified. Let me know if this works for you.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r591980168", "createdAt": "2021-03-11T00:32:53Z", "author": {"login": "lbschanno"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1188,22 +1194,29 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n             \n             // Expand any bounded ranges into a conjunction of discrete terms\n             try {\n-                innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand regex\");\n                 ParallelIndexExpansion regexExpansion = new ParallelIndexExpansion(config, scannerFactory, metadataHelper, expansionFields,\n                                 config.isExpandFields(), config.isExpandValues(), config.isExpandUnfieldedNegations());\n-                queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                if (log.isDebugEnabled()) {\n-                    logQuery(queryTree, \"Query after expanding regex:\");\n+                \n+                // Check if there is any regex to expand.\n+                if (NodeTypeCountVisitor.countNodes(queryTree).hasAny(ASTNRNode.class, ASTERNode.class)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODUwNDQ3Nw=="}, "originalCommit": {"oid": "d0324169a576bfdd378001f479ccb073987f5319"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjQxMDQ0Mw==", "bodyText": "I believe we are still calling it too often.  If we expand regexs and ranges, that will only produce more equality nodes and maybe ExceededValue markers.  I don't think any of the subsequent calls actually depend on those counts so why recount?", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r592410443", "createdAt": "2021-03-11T14:34:13Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1188,22 +1194,29 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n             \n             // Expand any bounded ranges into a conjunction of discrete terms\n             try {\n-                innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand regex\");\n                 ParallelIndexExpansion regexExpansion = new ParallelIndexExpansion(config, scannerFactory, metadataHelper, expansionFields,\n                                 config.isExpandFields(), config.isExpandValues(), config.isExpandUnfieldedNegations());\n-                queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                if (log.isDebugEnabled()) {\n-                    logQuery(queryTree, \"Query after expanding regex:\");\n+                \n+                // Check if there is any regex to expand.\n+                if (NodeTypeCountVisitor.countNodes(queryTree).hasAny(ASTNRNode.class, ASTERNode.class)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODUwNDQ3Nw=="}, "originalCommit": {"oid": "d0324169a576bfdd378001f479ccb073987f5319"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mjc1NTYzNQ==", "bodyText": "Edited the code to only count the nodes twice, once before the first round of expanding regex and ranges, and once before the second round of expanding regex and ranges after pulling up delayed predicates.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r592755635", "createdAt": "2021-03-11T22:06:20Z", "author": {"login": "lbschanno"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1188,22 +1194,29 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n             \n             // Expand any bounded ranges into a conjunction of discrete terms\n             try {\n-                innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand regex\");\n                 ParallelIndexExpansion regexExpansion = new ParallelIndexExpansion(config, scannerFactory, metadataHelper, expansionFields,\n                                 config.isExpandFields(), config.isExpandValues(), config.isExpandUnfieldedNegations());\n-                queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                if (log.isDebugEnabled()) {\n-                    logQuery(queryTree, \"Query after expanding regex:\");\n+                \n+                // Check if there is any regex to expand.\n+                if (NodeTypeCountVisitor.countNodes(queryTree).hasAny(ASTNRNode.class, ASTERNode.class)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODUwNDQ3Nw=="}, "originalCommit": {"oid": "d0324169a576bfdd378001f479ccb073987f5319"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc0MDU0MjcwOnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxNDoyNjo1OFrOI09fNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQyMjowNToyN1rOI1S5mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjQwNDI3OQ==", "bodyText": "I don't think we need to do this here.  Just do it once after expanding regexes and ranges.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r592404279", "createdAt": "2021-03-11T14:26:58Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1236,22 +1243,34 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n             \n             // Expand any bounded ranges into a conjunction of discrete terms\n             try {\n-                innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand regex\");\n                 ParallelIndexExpansion regexExpansion = new ParallelIndexExpansion(config, scannerFactory, metadataHelper, expansionFields,\n                                 config.isExpandFields(), config.isExpandValues(), config.isExpandUnfieldedNegations());\n-                queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                if (log.isDebugEnabled()) {\n-                    logQuery(queryTree, \"Query after expanding regex:\");\n+                \n+                // Check if there is any regex to expand.\n+                NodeTypeCount nodeCount = NodeTypeCountVisitor.countNodes(queryTree);\n+                if (nodeCount.hasAny(ASTNRNode.class, ASTERNode.class)) {\n+                    innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand regex\");\n+                    queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n+                    if (log.isDebugEnabled()) {\n+                        logQuery(queryTree, \"Query after expanding regex:\");\n+                    }\n+                    innerStopwatch.stop();\n+                    \n+                    // The query tree was modified. Recount nodes.\n+                    nodeCount = NodeTypeCountVisitor.countNodes(queryTree);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "922a2715f8c06e3f417f0963e0a2d122ecec43bf"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mjc1NTA5Nw==", "bodyText": "Removed.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r592755097", "createdAt": "2021-03-11T22:05:27Z", "author": {"login": "lbschanno"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1236,22 +1243,34 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n             \n             // Expand any bounded ranges into a conjunction of discrete terms\n             try {\n-                innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand regex\");\n                 ParallelIndexExpansion regexExpansion = new ParallelIndexExpansion(config, scannerFactory, metadataHelper, expansionFields,\n                                 config.isExpandFields(), config.isExpandValues(), config.isExpandUnfieldedNegations());\n-                queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                if (log.isDebugEnabled()) {\n-                    logQuery(queryTree, \"Query after expanding regex:\");\n+                \n+                // Check if there is any regex to expand.\n+                NodeTypeCount nodeCount = NodeTypeCountVisitor.countNodes(queryTree);\n+                if (nodeCount.hasAny(ASTNRNode.class, ASTERNode.class)) {\n+                    innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand regex\");\n+                    queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n+                    if (log.isDebugEnabled()) {\n+                        logQuery(queryTree, \"Query after expanding regex:\");\n+                    }\n+                    innerStopwatch.stop();\n+                    \n+                    // The query tree was modified. Recount nodes.\n+                    nodeCount = NodeTypeCountVisitor.countNodes(queryTree);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjQwNDI3OQ=="}, "originalCommit": {"oid": "922a2715f8c06e3f417f0963e0a2d122ecec43bf"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc0MDU2MTM4OnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxNDozMDoxNFrOI09qXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQyMjowNToxOVrOI1S5PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjQwNzEzNA==", "bodyText": "may not need this call as this would not affect the call at 1301.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r592407134", "createdAt": "2021-03-11T14:30:14Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1275,12 +1294,18 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n                 }\n                 innerStopwatch.stop();\n                 \n-                innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand pushing functions into exceeded value ranges\");\n-                queryTree = PushFunctionsIntoExceededValueRanges.pushFunctions(queryTree, metadataHelper, config.getDatatypeFilter());\n-                if (log.isDebugEnabled()) {\n-                    logQuery(queryTree, \"Query after expanding pushing functions into exceeded value ranges:\");\n+                // The query tree was modified. Recount nodes.\n+                nodeCount = NodeTypeCountVisitor.countNodes(queryTree);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "922a2715f8c06e3f417f0963e0a2d122ecec43bf"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mjc1NTAwNQ==", "bodyText": "Removed.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r592755005", "createdAt": "2021-03-11T22:05:19Z", "author": {"login": "lbschanno"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1275,12 +1294,18 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n                 }\n                 innerStopwatch.stop();\n                 \n-                innerStopwatch = timers.newStartedStopwatch(\"DefaultQueryPlanner - Expand pushing functions into exceeded value ranges\");\n-                queryTree = PushFunctionsIntoExceededValueRanges.pushFunctions(queryTree, metadataHelper, config.getDatatypeFilter());\n-                if (log.isDebugEnabled()) {\n-                    logQuery(queryTree, \"Query after expanding pushing functions into exceeded value ranges:\");\n+                // The query tree was modified. Recount nodes.\n+                nodeCount = NodeTypeCountVisitor.countNodes(queryTree);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjQwNzEzNA=="}, "originalCommit": {"oid": "922a2715f8c06e3f417f0963e0a2d122ecec43bf"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc0MDU2NTgzOnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxNDozMTowNFrOI09tJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQyMjowNToxM1rOI1S5Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjQwNzg0NQ==", "bodyText": "Don't need this call.  Just call once after expanding regexes and ranges", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r592407845", "createdAt": "2021-03-11T14:31:04Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1307,30 +1332,49 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n                     // predicates based on cost...\n                     config.setExpandAllTerms(true);\n                     \n-                    queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                    if (log.isDebugEnabled()) {\n-                        logQuery(queryTree, \"Query after expanding regex again:\");\n+                    nodeCount = NodeTypeCountVisitor.countNodes(queryTree);\n+                    // Check if there is any regex to expand.\n+                    if (nodeCount.hasAny(ASTNRNode.class, ASTERNode.class)) {\n+                        queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n+                        if (log.isDebugEnabled()) {\n+                            logQuery(queryTree, \"Query after expanding regex again:\");\n+                        }\n+                        // The query tree was modified. Recount nodes.\n+                        nodeCount = NodeTypeCountVisitor.countNodes(queryTree);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "922a2715f8c06e3f417f0963e0a2d122ecec43bf"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mjc1NDk0Ng==", "bodyText": "Removed.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r592754946", "createdAt": "2021-03-11T22:05:13Z", "author": {"login": "lbschanno"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1307,30 +1332,49 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n                     // predicates based on cost...\n                     config.setExpandAllTerms(true);\n                     \n-                    queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                    if (log.isDebugEnabled()) {\n-                        logQuery(queryTree, \"Query after expanding regex again:\");\n+                    nodeCount = NodeTypeCountVisitor.countNodes(queryTree);\n+                    // Check if there is any regex to expand.\n+                    if (nodeCount.hasAny(ASTNRNode.class, ASTERNode.class)) {\n+                        queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n+                        if (log.isDebugEnabled()) {\n+                            logQuery(queryTree, \"Query after expanding regex again:\");\n+                        }\n+                        // The query tree was modified. Recount nodes.\n+                        nodeCount = NodeTypeCountVisitor.countNodes(queryTree);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjQwNzg0NQ=="}, "originalCommit": {"oid": "922a2715f8c06e3f417f0963e0a2d122ecec43bf"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc0MDU3MTk0OnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQxNDozMjoxOVrOI09w_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xMVQyMjowNTowNlrOI1S4yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjQwODgzMQ==", "bodyText": "probably dont' need to do this here.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r592408831", "createdAt": "2021-03-11T14:32:19Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1307,30 +1332,49 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n                     // predicates based on cost...\n                     config.setExpandAllTerms(true);\n                     \n-                    queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                    if (log.isDebugEnabled()) {\n-                        logQuery(queryTree, \"Query after expanding regex again:\");\n+                    nodeCount = NodeTypeCountVisitor.countNodes(queryTree);\n+                    // Check if there is any regex to expand.\n+                    if (nodeCount.hasAny(ASTNRNode.class, ASTERNode.class)) {\n+                        queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n+                        if (log.isDebugEnabled()) {\n+                            logQuery(queryTree, \"Query after expanding regex again:\");\n+                        }\n+                        // The query tree was modified. Recount nodes.\n+                        nodeCount = NodeTypeCountVisitor.countNodes(queryTree);\n                     }\n-                    queryTree = RangeConjunctionRebuildingVisitor.expandRanges(config, scannerFactory, metadataHelper, queryTree, config.isExpandFields(),\n-                                    config.isExpandValues());\n-                    if (log.isDebugEnabled()) {\n-                        logQuery(queryTree, \"Query after expanding ranges again:\");\n+                    \n+                    // Check if there are any bounded ranges to expand.\n+                    if (nodeCount.isPresent(BoundedRange.class)) {\n+                        queryTree = RangeConjunctionRebuildingVisitor.expandRanges(config, scannerFactory, metadataHelper, queryTree, config.isExpandFields(),\n+                                        config.isExpandValues());\n+                        if (log.isDebugEnabled()) {\n+                            logQuery(queryTree, \"Query after expanding ranges again:\");\n+                        }\n+                        // The query tree was modified. Recount nodes.\n+                        nodeCount = NodeTypeCountVisitor.countNodes(queryTree);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "922a2715f8c06e3f417f0963e0a2d122ecec43bf"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5Mjc1NDg4OQ==", "bodyText": "Removed.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/1006#discussion_r592754889", "createdAt": "2021-03-11T22:05:06Z", "author": {"login": "lbschanno"}, "path": "warehouse/query-core/src/main/java/datawave/query/planner/DefaultQueryPlanner.java", "diffHunk": "@@ -1307,30 +1332,49 @@ protected ASTJexlScript processTree(final ASTJexlScript originalQueryTree, Shard\n                     // predicates based on cost...\n                     config.setExpandAllTerms(true);\n                     \n-                    queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n-                    if (log.isDebugEnabled()) {\n-                        logQuery(queryTree, \"Query after expanding regex again:\");\n+                    nodeCount = NodeTypeCountVisitor.countNodes(queryTree);\n+                    // Check if there is any regex to expand.\n+                    if (nodeCount.hasAny(ASTNRNode.class, ASTERNode.class)) {\n+                        queryTree = (ASTJexlScript) regexExpansion.visit(queryTree, null);\n+                        if (log.isDebugEnabled()) {\n+                            logQuery(queryTree, \"Query after expanding regex again:\");\n+                        }\n+                        // The query tree was modified. Recount nodes.\n+                        nodeCount = NodeTypeCountVisitor.countNodes(queryTree);\n                     }\n-                    queryTree = RangeConjunctionRebuildingVisitor.expandRanges(config, scannerFactory, metadataHelper, queryTree, config.isExpandFields(),\n-                                    config.isExpandValues());\n-                    if (log.isDebugEnabled()) {\n-                        logQuery(queryTree, \"Query after expanding ranges again:\");\n+                    \n+                    // Check if there are any bounded ranges to expand.\n+                    if (nodeCount.isPresent(BoundedRange.class)) {\n+                        queryTree = RangeConjunctionRebuildingVisitor.expandRanges(config, scannerFactory, metadataHelper, queryTree, config.isExpandFields(),\n+                                        config.isExpandValues());\n+                        if (log.isDebugEnabled()) {\n+                            logQuery(queryTree, \"Query after expanding ranges again:\");\n+                        }\n+                        // The query tree was modified. Recount nodes.\n+                        nodeCount = NodeTypeCountVisitor.countNodes(queryTree);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MjQwODgzMQ=="}, "originalCommit": {"oid": "922a2715f8c06e3f417f0963e0a2d122ecec43bf"}, "originalPosition": 150}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4356, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}