{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NDMxMzcy", "number": 808, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMjo0MjoxMFrODzHZPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTowNjoyMFrOD8biKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0OTI1MTE5OnYy", "diffSide": "RIGHT", "path": ".gitignore", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMjo0MjoxMFrOGHjNsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwMjo0MjoxMFrOGHjNsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDU3MDE2Mg==", "bodyText": "should have been in another commit. will remove.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/808#discussion_r410570162", "createdAt": "2020-04-18T02:42:10Z", "author": {"login": "drewfarris"}, "path": ".gitignore", "diffHunk": "@@ -41,6 +41,9 @@ target/\n **/target/\n **/logs/\n \n+**/.factorypath\n+.vscode\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "203232796a3e9a056b4dd71ef02e803d1c804009"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjkyMjY0OnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/main/java/datawave/query/table/parser/TermFrequencyKeyValueFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTowNjoyMFrOGVXQgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTowNjoyMFrOGVXQgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA1NDMzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new IllegalArgumentException(\"Cannot pss null key to TermFrequencyKeyValueFactory\");\n          \n          \n            \n                        throw new IllegalArgumentException(\"Cannot pass null key to TermFrequencyKeyValueFactory\");", "url": "https://github.com/NationalSecurityAgency/datawave/pull/808#discussion_r425054336", "createdAt": "2020-05-14T11:06:20Z", "author": {"login": "apmoriarty"}, "path": "warehouse/query-core/src/main/java/datawave/query/table/parser/TermFrequencyKeyValueFactory.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package datawave.query.table.parser;\n+\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+import com.google.protobuf.InvalidProtocolBufferException;\n+\n+import org.apache.accumulo.core.data.Key;\n+import org.apache.accumulo.core.data.Value;\n+import org.apache.accumulo.core.security.Authorizations;\n+import org.apache.commons.lang3.StringUtils;\n+\n+import datawave.ingest.protobuf.TermWeight;\n+import datawave.marking.MarkingFunctions;\n+import datawave.query.table.parser.EventKeyValueFactory.EventKeyValue;\n+\n+public class TermFrequencyKeyValueFactory {\n+    \n+    public static TermFrequencyKeyValue parse(Key key, Value value, Authorizations auths, MarkingFunctions markingFunctions) throws MarkingFunctions.Exception {\n+        if (null == key) {\n+            throw new IllegalArgumentException(\"Cannot pss null key to TermFrequencyKeyValueFactory\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "051add9cd9ae8eca0d8bd72caf7db1dfdeb42124"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4374, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}