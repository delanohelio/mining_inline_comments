{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1ODgwMjYy", "number": 832, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDoxNjoxNVrOEGXrdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDoxNjoxNVrOEGXrdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTE0ODY4OnYy", "diffSide": "RIGHT", "path": "warehouse/query-core/src/test/java/datawave/query/tables/ScannerSessionTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDoxNjoxNVrOGlH4ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjoyNjoyNlrOGl3BAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU3OTY1OA==", "bodyText": "simplifications?", "url": "https://github.com/NationalSecurityAgency/datawave/pull/832#discussion_r441579658", "createdAt": "2020-06-17T14:16:15Z", "author": {"login": "apmoriarty"}, "path": "warehouse/query-core/src/test/java/datawave/query/tables/ScannerSessionTest.java", "diffHunk": "@@ -0,0 +1,231 @@\n+package datawave.query.tables;\n+\n+import com.google.common.io.Files;\n+import datawave.mr.bulk.RfileResource;\n+import org.apache.accumulo.core.client.AccumuloException;\n+import org.apache.accumulo.core.client.AccumuloSecurityException;\n+import org.apache.accumulo.core.client.BatchScanner;\n+import org.apache.accumulo.core.client.BatchWriter;\n+import org.apache.accumulo.core.client.BatchWriterConfig;\n+import org.apache.accumulo.core.client.Connector;\n+import org.apache.accumulo.core.client.MutationsRejectedException;\n+import org.apache.accumulo.core.client.TableExistsException;\n+import org.apache.accumulo.core.client.TableNotFoundException;\n+import org.apache.accumulo.core.data.Key;\n+import org.apache.accumulo.core.data.Mutation;\n+import org.apache.accumulo.core.data.Range;\n+import org.apache.accumulo.core.data.Value;\n+import org.apache.accumulo.core.security.Authorizations;\n+import org.apache.accumulo.minicluster.MiniAccumuloCluster;\n+import org.apache.hadoop.io.Text;\n+import org.junit.AfterClass;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * This test spins up a mini accumulo to accurately test the effect of underlying Scanner/Batch scanners against the ScannerSession. InMemoryAccumulo makes some\n+ * simplications that in the past have masked bugs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "008f067f3e7bb209451a707debddc64db8dad3c3"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1MTg3Mg==", "bodyText": "fixed", "url": "https://github.com/NationalSecurityAgency/datawave/pull/832#discussion_r442351872", "createdAt": "2020-06-18T16:26:26Z", "author": {"login": "FineAndDandy"}, "path": "warehouse/query-core/src/test/java/datawave/query/tables/ScannerSessionTest.java", "diffHunk": "@@ -0,0 +1,231 @@\n+package datawave.query.tables;\n+\n+import com.google.common.io.Files;\n+import datawave.mr.bulk.RfileResource;\n+import org.apache.accumulo.core.client.AccumuloException;\n+import org.apache.accumulo.core.client.AccumuloSecurityException;\n+import org.apache.accumulo.core.client.BatchScanner;\n+import org.apache.accumulo.core.client.BatchWriter;\n+import org.apache.accumulo.core.client.BatchWriterConfig;\n+import org.apache.accumulo.core.client.Connector;\n+import org.apache.accumulo.core.client.MutationsRejectedException;\n+import org.apache.accumulo.core.client.TableExistsException;\n+import org.apache.accumulo.core.client.TableNotFoundException;\n+import org.apache.accumulo.core.data.Key;\n+import org.apache.accumulo.core.data.Mutation;\n+import org.apache.accumulo.core.data.Range;\n+import org.apache.accumulo.core.data.Value;\n+import org.apache.accumulo.core.security.Authorizations;\n+import org.apache.accumulo.minicluster.MiniAccumuloCluster;\n+import org.apache.hadoop.io.Text;\n+import org.junit.AfterClass;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+\n+import java.io.IOException;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Iterator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.SortedSet;\n+import java.util.TreeSet;\n+\n+/**\n+ * This test spins up a mini accumulo to accurately test the effect of underlying Scanner/Batch scanners against the ScannerSession. InMemoryAccumulo makes some\n+ * simplications that in the past have masked bugs", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU3OTY1OA=="}, "originalCommit": {"oid": "008f067f3e7bb209451a707debddc64db8dad3c3"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4388, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}