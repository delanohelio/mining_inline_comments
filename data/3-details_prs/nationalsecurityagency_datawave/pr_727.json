{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDI3NTI0", "number": 727, "title": "Updated the ivarators to wait to add runnables to the ivarator execut\u2026", "bodyText": "\u2026or until those runnables have a valid source.", "createdAt": "2020-01-24T21:42:52Z", "url": "https://github.com/NationalSecurityAgency/datawave/pull/727", "merged": true, "mergeCommit": {"oid": "4f68b17bef29a7f6c233d41a5242250c6b7cb2a8"}, "closed": true, "closedAt": "2020-01-29T19:38:26Z", "author": {"login": "jwomeara"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9l_GRgH2gAyMzY3MDI3NTI0OjYwYmNhYzE5MDU5OTA1YmU1M2MwZTI4MTkxNzczOTMxYTA4OGJhN2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_LNhagFqTM1MDM3MTQwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "60bcac19059905be53c0e28191773931a088ba7d", "author": {"user": {"login": "jwomeara", "name": "Whitney O'Meara"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/60bcac19059905be53c0e28191773931a088ba7d", "committedDate": "2020-01-24T21:39:43Z", "message": "Updated the ivarators to wait to add runnables to the ivarator executor until those runnables have a valid source."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4ODMyNTM0", "url": "https://github.com/NationalSecurityAgency/datawave/pull/727#pullrequestreview-348832534", "createdAt": "2020-01-27T17:13:34Z", "commit": {"oid": "60bcac19059905be53c0e28191773931a088ba7d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzoxMzozNVrOFiKpSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzoyNjoxNFrOFiLDKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM3MDMxMw==", "bodyText": "fix comment", "url": "https://github.com/NationalSecurityAgency/datawave/pull/727#discussion_r371370313", "createdAt": "2020-01-27T17:13:35Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/core/iterators/DatawaveFieldIndexCachingIteratorJexl.java", "diffHunk": "@@ -888,20 +902,38 @@ protected boolean isTimedOut() {\n     /**\n      * Get a source copy. If the source is setup as a ThreadLocalPooledSource, then no copy is needed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60bcac19059905be53c0e28191773931a088ba7d"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM3MDUxNQ==", "bodyText": "perhaps add comment that this should only be used for the unsorted case", "url": "https://github.com/NationalSecurityAgency/datawave/pull/727#discussion_r371370515", "createdAt": "2020-01-27T17:13:56Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/core/iterators/DatawaveFieldIndexCachingIteratorJexl.java", "diffHunk": "@@ -888,20 +902,38 @@ protected boolean isTimedOut() {\n     /**\n      * Get a source copy. If the source is setup as a ThreadLocalPooledSource, then no copy is needed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM3MDMxMw=="}, "originalCommit": {"oid": "60bcac19059905be53c0e28191773931a088ba7d"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM3MjYzNg==", "bodyText": "Does the QueryIterator still need to implement SourceFactory after these changes?", "url": "https://github.com/NationalSecurityAgency/datawave/pull/727#discussion_r371372636", "createdAt": "2020-01-27T17:18:07Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/iterator/QueryIterator.java", "diffHunk": "@@ -1328,7 +1329,8 @@ protected IteratorBuildingVisitor createIteratorBuildingVisitor(Class<? extends\n                         .setIvaratorCacheBufferSize(this.getIvaratorCacheBufferSize())\n                         .setIvaratorCacheScanPersistThreshold(this.getIvaratorCacheScanPersistThreshold())\n                         .setIvaratorCacheScanTimeout(this.getIvaratorCacheScanTimeout()).setMaxRangeSplit(this.getMaxIndexRangeSplit())\n-                        .setIvaratorMaxOpenFiles(this.getIvaratorMaxOpenFiles()).setIvaratorSources(this, this.getMaxIvaratorSources())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60bcac19059905be53c0e28191773931a088ba7d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM3MzI2NQ==", "bodyText": "maybe setIvaratorSource should be setUnsortedIvaratorSource", "url": "https://github.com/NationalSecurityAgency/datawave/pull/727#discussion_r371373265", "createdAt": "2020-01-27T17:19:20Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/iterator/QueryIterator.java", "diffHunk": "@@ -1328,7 +1329,8 @@ protected IteratorBuildingVisitor createIteratorBuildingVisitor(Class<? extends\n                         .setIvaratorCacheBufferSize(this.getIvaratorCacheBufferSize())\n                         .setIvaratorCacheScanPersistThreshold(this.getIvaratorCacheScanPersistThreshold())\n                         .setIvaratorCacheScanTimeout(this.getIvaratorCacheScanTimeout()).setMaxRangeSplit(this.getMaxIndexRangeSplit())\n-                        .setIvaratorMaxOpenFiles(this.getIvaratorMaxOpenFiles()).setIvaratorSources(this, this.getMaxIvaratorSources())\n+                        .setIvaratorMaxOpenFiles(this.getIvaratorMaxOpenFiles()).setIvaratorSource(this.sourceForDeepCopies)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60bcac19059905be53c0e28191773931a088ba7d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM3Mzk4Ng==", "bodyText": "does this deepCopy do the opening of the RFiles, or is that lazy and not done until the first seek?  Just curious if we need to create these lazily.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/727#discussion_r371373986", "createdAt": "2020-01-27T17:20:41Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/iterator/QueryIterator.java", "diffHunk": "@@ -1337,6 +1339,14 @@ protected IteratorBuildingVisitor createIteratorBuildingVisitor(Class<? extends\n         // TODO: .setStatsPort(this.statsdHostAndPort);\n     }\n     \n+    protected ArrayBlockingQueue<SortedKeyValueIterator<Key,Value>> createIvaratorSourcePool(SortedKeyValueIterator<Key,Value> sourceForDeepCopies,\n+                    int maxIvaratorSources, IteratorEnvironment env) {\n+        ArrayBlockingQueue<SortedKeyValueIterator<Key,Value>> ivaratorSourcePool = new ArrayBlockingQueue<>(maxIvaratorSources, true);\n+        for (int i = 0; i < maxIvaratorSources; i++)\n+            ivaratorSourcePool.add(sourceForDeepCopies.deepCopy(env));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60bcac19059905be53c0e28191773931a088ba7d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM3NjkzNg==", "bodyText": "I think the fst check needs to be first the way we were doing before.  If we are favoring the fst too much then the fst threshold needs to be set larger.", "url": "https://github.com/NationalSecurityAgency/datawave/pull/727#discussion_r371376936", "createdAt": "2020-01-27T17:26:14Z", "author": {"login": "ivakegg"}, "path": "warehouse/query-core/src/main/java/datawave/query/jexl/visitors/PushdownLargeFieldedListsVisitor.java", "diffHunk": "@@ -127,14 +127,14 @@ public Object visit(ASTOrNode node, Object data) {\n                 List<JexlNode> markers = new ArrayList<>();\n                 \n                 try {\n-                    // if we have an hdfs cache directory and if past the fst threshold, then create the fst and replace the list with an assignment\n-                    if (fstHdfsUri != null && (eqNodes.size() >= config.getMaxOrExpansionFstThreshold())) {\n+                    // if we have an hdfs cache directory and if past the fst/list threshold, then create the fst/list and replace the list with an assignment\n+                    if (eqNodes.size() >= config.getMaxOrExpansionThreshold()) {\n+                        markers.add(ExceededOrThresholdMarkerJexlNode.createFromValues(field, values));\n+                        eqNodes = null;\n+                    } else if (fstHdfsUri != null && (eqNodes.size() >= config.getMaxOrExpansionFstThreshold())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60bcac19059905be53c0e28191773931a088ba7d"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8571f91738b768a47968eaae157a12ffbea9b1d2", "author": {"user": {"login": "jwomeara", "name": "Whitney O'Meara"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/8571f91738b768a47968eaae157a12ffbea9b1d2", "committedDate": "2020-01-27T20:47:32Z", "message": "PR Feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61e514f1992b96ab1652ddd3f1af09bf743bdf9b", "author": {"user": {"login": "jwomeara", "name": "Whitney O'Meara"}}, "url": "https://github.com/NationalSecurityAgency/datawave/commit/61e514f1992b96ab1652ddd3f1af09bf743bdf9b", "committedDate": "2020-01-28T15:20:05Z", "message": "Updated to use pool artifact which is already part of the assembly."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMjU2NTM4", "url": "https://github.com/NationalSecurityAgency/datawave/pull/727#pullrequestreview-350256538", "createdAt": "2020-01-29T16:42:02Z", "commit": {"oid": "61e514f1992b96ab1652ddd3f1af09bf743bdf9b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwMzcxNDA4", "url": "https://github.com/NationalSecurityAgency/datawave/pull/727#pullrequestreview-350371408", "createdAt": "2020-01-29T19:35:53Z", "commit": {"oid": "61e514f1992b96ab1652ddd3f1af09bf743bdf9b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1116, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}