{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMTM4NTg0", "number": 9840, "title": "Don't acquire exclusive vm access with waiting xdump", "bodyText": "Fixes: #8552\nPending xdump threads are waiting in such a way that blocks other threads from acquiring exclusive vm access. The threads wait to acquire a key until the running xdump thread finishes and hold shared vm access while spinning.\nSolution:\n\nrelease vm access while waiting for dumpKey so other threads can acquire exclusive vm access\nmoved dumpKey acquire first in prepareForDump so no differentiation between J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS and J9RAS_DUMP_DO_EXCLUSIVE_VM_ACCESS is needed\nre-order events in unwindAfterDump to match the reverse order of prepareForDump\n\nSigned-off-by: Theresa Mammarella Theresa.T.Mammarella@ibm.com", "createdAt": "2020-06-10T00:53:46Z", "url": "https://github.com/eclipse-openj9/openj9/pull/9840", "merged": true, "mergeCommit": {"oid": "f04be1be1c3b59ae512e8e124e870a5d3960c35b"}, "closed": true, "closedAt": "2020-06-15T18:51:28Z", "author": {"login": "theresa-m"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp9qLDgFqTQyODI4OTYyNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcriOHcgFqTQzMDc0NDk3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Mjg5NjI3", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#pullrequestreview-428289627", "createdAt": "2020-06-10T17:44:30Z", "commit": {"oid": "c7b4ec673c57999d4bc1a72c07980365685a904f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzo0NDozMFrOGh_0Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzo0OToxN1rOGh__Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMwMTc1OA==", "bodyText": "nit: comment closer should be on a line by itself.", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#discussion_r438301758", "createdAt": "2020-06-10T17:44:30Z", "author": {"login": "keithc-ca"}, "path": "runtime/rasdump/trigger.c", "diffHunk": "@@ -555,6 +555,46 @@ prepareForDump(struct J9JavaVM *vm, struct J9RASdumpAgent *agent, struct J9RASdu\n \t\tnewState |= J9RAS_DUMP_TRACE_DISABLED;\n \t}\n \n+\t/* Release vm access until this thread has the dumpKey and is ready to run. This will allow \n+\t * other threads to obtain exclusiveVMAccess in the meantime. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7b4ec673c57999d4bc1a72c07980365685a904f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMwMjQ0Nw==", "bodyText": "It isn't clear to me what is meant by 'out-time' here: please elaborate.", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#discussion_r438302447", "createdAt": "2020-06-10T17:45:37Z", "author": {"login": "keithc-ca"}, "path": "runtime/rasdump/trigger.c", "diffHunk": "@@ -555,6 +555,46 @@ prepareForDump(struct J9JavaVM *vm, struct J9RASdumpAgent *agent, struct J9RASdu\n \t\tnewState |= J9RAS_DUMP_TRACE_DISABLED;\n \t}\n \n+\t/* Release vm access until this thread has the dumpKey and is ready to run. This will allow \n+\t * other threads to obtain exclusiveVMAccess in the meantime. */\n+\tvm->internalVMFunctions->internalReleaseVMAccess(vmThread);\n+\n+\t/*\n+\t * The following actions are considered safe to call during a crash situation...\n+\t */\n+\n+\t/* For fatal events, the first failing thread sets the global rasDumpFirstThread. It then gets higher priority on the\n+\t * serial dump lock, see below. This allows the first failing thread to complete its dumps and exit the VM, reducing\n+\t * the number of dumps written and out-time if multiple threads crash.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7b4ec673c57999d4bc1a72c07980365685a904f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMwMzcyMw==", "bodyText": "This should use J9_ARE_ANY_BITS_SET().", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#discussion_r438303723", "createdAt": "2020-06-10T17:47:47Z", "author": {"login": "keithc-ca"}, "path": "runtime/rasdump/trigger.c", "diffHunk": "@@ -555,6 +555,46 @@ prepareForDump(struct J9JavaVM *vm, struct J9RASdumpAgent *agent, struct J9RASdu\n \t\tnewState |= J9RAS_DUMP_TRACE_DISABLED;\n \t}\n \n+\t/* Release vm access until this thread has the dumpKey and is ready to run. This will allow \n+\t * other threads to obtain exclusiveVMAccess in the meantime. */\n+\tvm->internalVMFunctions->internalReleaseVMAccess(vmThread);\n+\n+\t/*\n+\t * The following actions are considered safe to call during a crash situation...\n+\t */\n+\n+\t/* For fatal events, the first failing thread sets the global rasDumpFirstThread. It then gets higher priority on the\n+\t * serial dump lock, see below. This allows the first failing thread to complete its dumps and exit the VM, reducing\n+\t * the number of dumps written and out-time if multiple threads crash.\n+\t */\n+\tif (0 != (context->eventFlags & (J9RAS_DUMP_ON_GP_FAULT | J9RAS_DUMP_ON_ABORT_SIGNAL | J9RAS_DUMP_ON_TRACE_ASSERT))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7b4ec673c57999d4bc1a72c07980365685a904f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMwNDA5MQ==", "bodyText": "This should use J9_ARE_ANY_BITS_SET().", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#discussion_r438304091", "createdAt": "2020-06-10T17:48:24Z", "author": {"login": "keithc-ca"}, "path": "runtime/rasdump/trigger.c", "diffHunk": "@@ -555,6 +555,46 @@ prepareForDump(struct J9JavaVM *vm, struct J9RASdumpAgent *agent, struct J9RASdu\n \t\tnewState |= J9RAS_DUMP_TRACE_DISABLED;\n \t}\n \n+\t/* Release vm access until this thread has the dumpKey and is ready to run. This will allow \n+\t * other threads to obtain exclusiveVMAccess in the meantime. */\n+\tvm->internalVMFunctions->internalReleaseVMAccess(vmThread);\n+\n+\t/*\n+\t * The following actions are considered safe to call during a crash situation...\n+\t */\n+\n+\t/* For fatal events, the first failing thread sets the global rasDumpFirstThread. It then gets higher priority on the\n+\t * serial dump lock, see below. This allows the first failing thread to complete its dumps and exit the VM, reducing\n+\t * the number of dumps written and out-time if multiple threads crash.\n+\t */\n+\tif (0 != (context->eventFlags & (J9RAS_DUMP_ON_GP_FAULT | J9RAS_DUMP_ON_ABORT_SIGNAL | J9RAS_DUMP_ON_TRACE_ASSERT))) {\n+\t\tcompareAndSwapUDATA(&rasDumpFirstThread, 0, dumpKey);\n+\t}\n+\n+\tif (rasDumpSuspendKey == dumpKey) {\n+\t\t/* We already have the lock */\n+\t} else {\n+\t\tUDATA newKey = 0;\n+\n+\t\t/* Grab the dump lock? */\n+\t\tif (agent->requestMask & J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7b4ec673c57999d4bc1a72c07980365685a904f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMwNDU5NQ==", "bodyText": "This should use J9_ARE_NO_BITS_SET().", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#discussion_r438304595", "createdAt": "2020-06-10T17:49:17Z", "author": {"login": "keithc-ca"}, "path": "runtime/rasdump/trigger.c", "diffHunk": "@@ -555,6 +555,46 @@ prepareForDump(struct J9JavaVM *vm, struct J9RASdumpAgent *agent, struct J9RASdu\n \t\tnewState |= J9RAS_DUMP_TRACE_DISABLED;\n \t}\n \n+\t/* Release vm access until this thread has the dumpKey and is ready to run. This will allow \n+\t * other threads to obtain exclusiveVMAccess in the meantime. */\n+\tvm->internalVMFunctions->internalReleaseVMAccess(vmThread);\n+\n+\t/*\n+\t * The following actions are considered safe to call during a crash situation...\n+\t */\n+\n+\t/* For fatal events, the first failing thread sets the global rasDumpFirstThread. It then gets higher priority on the\n+\t * serial dump lock, see below. This allows the first failing thread to complete its dumps and exit the VM, reducing\n+\t * the number of dumps written and out-time if multiple threads crash.\n+\t */\n+\tif (0 != (context->eventFlags & (J9RAS_DUMP_ON_GP_FAULT | J9RAS_DUMP_ON_ABORT_SIGNAL | J9RAS_DUMP_ON_TRACE_ASSERT))) {\n+\t\tcompareAndSwapUDATA(&rasDumpFirstThread, 0, dumpKey);\n+\t}\n+\n+\tif (rasDumpSuspendKey == dumpKey) {\n+\t\t/* We already have the lock */\n+\t} else {\n+\t\tUDATA newKey = 0;\n+\n+\t\t/* Grab the dump lock? */\n+\t\tif (agent->requestMask & J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS) {\n+\t\t\tnewState |= J9RAS_DUMP_GOT_LOCK;\n+\t\t\tnewKey = dumpKey;\n+\t\t}\n+\n+\t\t/* Always wait for the lock, but only grab it when requested */\n+\t\twhile (compareAndSwapUDATA(&rasDumpSuspendKey, 0, newKey) != 0) {\n+\t\t\tif (rasDumpFirstThread == dumpKey) {\n+\t\t\t\t/* First failing thread gets a simple priority boost over other threads waiting for lock */\n+\t\t\t\tomrthread_sleep(20);\n+\t\t\t} else {\n+\t\t\t\tomrthread_sleep(200);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tvm->internalVMFunctions->internalAcquireVMAccess(vmThread);\n+\n \tif ((context->eventFlags & (J9RAS_DUMP_ON_GP_FAULT | J9RAS_DUMP_ON_ABORT_SIGNAL | J9RAS_DUMP_ON_TRACE_ASSERT)) == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7b4ec673c57999d4bc1a72c07980365685a904f"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzYyOTcx", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#pullrequestreview-428362971", "createdAt": "2020-06-10T19:27:17Z", "commit": {"oid": "c7b4ec673c57999d4bc1a72c07980365685a904f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOToyNzoxN1rOGiDQRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOToyNzoxN1rOGiDQRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM1ODA4NA==", "bodyText": "We can't release vmaccess here as we don't know what state we're in.  The code below is setup to handle:\n\nunattached threads needing to attach (won't have vmaccess at this point)\nthreads that are \"inNative\"\nthreads that don't already have access\n\nThat code needs to run first to get to a stable state before we can modify the current thread's access", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#discussion_r438358084", "createdAt": "2020-06-10T19:27:17Z", "author": {"login": "DanHeidinga"}, "path": "runtime/rasdump/trigger.c", "diffHunk": "@@ -555,6 +555,46 @@ prepareForDump(struct J9JavaVM *vm, struct J9RASdumpAgent *agent, struct J9RASdu\n \t\tnewState |= J9RAS_DUMP_TRACE_DISABLED;\n \t}\n \n+\t/* Release vm access until this thread has the dumpKey and is ready to run. This will allow \n+\t * other threads to obtain exclusiveVMAccess in the meantime. */\n+\tvm->internalVMFunctions->internalReleaseVMAccess(vmThread);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7b4ec673c57999d4bc1a72c07980365685a904f"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7b4ec673c57999d4bc1a72c07980365685a904f", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c7b4ec673c57999d4bc1a72c07980365685a904f", "committedDate": "2020-06-09T22:25:14Z", "message": "Can't acquire exclusive vm access with waiting xdump\n\nPending xdump threads are waiting in such a way that blocks other threads from acquiring exclusive vm access. The threads wait to acquire a key until the running xdump thread finishes and hold shared vm access while spinning.\n\nSolution:\n- release vm access while waiting for dumpKey so other threads can acquire exclusive vm access\n- moved dumpKey acquire first in prepareForDump so no differentiation between J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS and J9RAS_DUMP_DO_EXCLUSIVE_VM_ACCESS is needed\n- re-order events in unwindAfterDump to match the reverse order of prepareForDump\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}, "afterCommit": {"oid": "7ea280e00050e08ceaed599bf44e55e8b700f2f6", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7ea280e00050e08ceaed599bf44e55e8b700f2f6", "committedDate": "2020-06-10T23:29:28Z", "message": "Can't acquire exclusive vm access with waiting xdump\n\nPending xdump threads are waiting in such a way that blocks other threads from acquiring exclusive vm access. The threads wait to acquire a key until the running xdump thread finishes and hold shared vm access while spinning.\n\nSolution:\n- release vm access while waiting for dumpKey so other threads can acquire exclusive vm access\n- moved dumpKey acquire first in prepareForDump so no differentiation between J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS and J9RAS_DUMP_DO_EXCLUSIVE_VM_ACCESS is needed\n- re-order events in unwindAfterDump to match the reverse order of prepareForDump\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTM1OTYy", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#pullrequestreview-428535962", "createdAt": "2020-06-11T01:39:01Z", "commit": {"oid": "7ea280e00050e08ceaed599bf44e55e8b700f2f6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMTozOTowMVrOGiLqkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMTozOTowMVrOGiLqkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODQ5NTg5MQ==", "bodyText": "This is closer but we still need to take isNative into account as I believe we have vmaccess but be in native.  @gacholio", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#discussion_r438495891", "createdAt": "2020-06-11T01:39:01Z", "author": {"login": "DanHeidinga"}, "path": "runtime/rasdump/trigger.c", "diffHunk": "@@ -555,7 +556,53 @@ prepareForDump(struct J9JavaVM *vm, struct J9RASdumpAgent *agent, struct J9RASdu\n \t\tnewState |= J9RAS_DUMP_TRACE_DISABLED;\n \t}\n \n-\tif ((context->eventFlags & (J9RAS_DUMP_ON_GP_FAULT | J9RAS_DUMP_ON_ABORT_SIGNAL | J9RAS_DUMP_ON_TRACE_ASSERT)) == 0) {\n+\t/* Release vm access until this thread has the dumpKey and is ready to run. This will allow other threads to obtain exclusiveVMAccess in the meantime. */\n+\tif (vmThread) {\n+\t\tif (vmThread->publicFlags & J9_PUBLIC_FLAGS_VM_ACCESS) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ea280e00050e08ceaed599bf44e55e8b700f2f6"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ea280e00050e08ceaed599bf44e55e8b700f2f6", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7ea280e00050e08ceaed599bf44e55e8b700f2f6", "committedDate": "2020-06-10T23:29:28Z", "message": "Can't acquire exclusive vm access with waiting xdump\n\nPending xdump threads are waiting in such a way that blocks other threads from acquiring exclusive vm access. The threads wait to acquire a key until the running xdump thread finishes and hold shared vm access while spinning.\n\nSolution:\n- release vm access while waiting for dumpKey so other threads can acquire exclusive vm access\n- moved dumpKey acquire first in prepareForDump so no differentiation between J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS and J9RAS_DUMP_DO_EXCLUSIVE_VM_ACCESS is needed\n- re-order events in unwindAfterDump to match the reverse order of prepareForDump\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}, "afterCommit": {"oid": "83a5c0476055905276ab3279be17c0117f960bf4", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/83a5c0476055905276ab3279be17c0117f960bf4", "committedDate": "2020-06-11T21:59:59Z", "message": "Can't acquire exclusive vm access with waiting xdump\n\nPending xdump threads are waiting in such a way that blocks other threads from acquiring exclusive vm access. The threads wait to acquire a key until the running xdump thread finishes and hold shared vm access while spinning.\n\nSolution:\n- release vm access while waiting for dumpKey so other threads can acquire exclusive vm access\n- moved dumpKey acquire first in prepareForDump so no differentiation between J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS and J9RAS_DUMP_DO_EXCLUSIVE_VM_ACCESS is needed\n- re-order events in unwindAfterDump to match the reverse order of prepareForDump\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NjY5ODYz", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#pullrequestreview-429669863", "createdAt": "2020-06-12T11:33:40Z", "commit": {"oid": "83a5c0476055905276ab3279be17c0117f960bf4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMTozMzo0MFrOGjAx4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMTozMzo0MFrOGjAx4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM2NjExMg==", "bodyText": "This is still not correct - please follow the pattern below.", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#discussion_r439366112", "createdAt": "2020-06-12T11:33:40Z", "author": {"login": "gacholio"}, "path": "runtime/rasdump/trigger.c", "diffHunk": "@@ -555,7 +556,61 @@ prepareForDump(struct J9JavaVM *vm, struct J9RASdumpAgent *agent, struct J9RASdu\n \t\tnewState |= J9RAS_DUMP_TRACE_DISABLED;\n \t}\n \n-\tif ((context->eventFlags & (J9RAS_DUMP_ON_GP_FAULT | J9RAS_DUMP_ON_ABORT_SIGNAL | J9RAS_DUMP_ON_TRACE_ASSERT)) == 0) {\n+\t/* Release vm access until this thread has the dumpKey and is ready to run. This will allow other threads to obtain exclusiveVMAccess in the meantime. */\n+\tif (vmThread) {\n+\t\tif (J9_ARE_ANY_BITS_SET(vmThread->publicFlags, J9_PUBLIC_FLAGS_VM_ACCESS)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83a5c0476055905276ab3279be17c0117f960bf4"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5Nzk2Njcy", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#pullrequestreview-429796672", "createdAt": "2020-06-12T14:39:30Z", "commit": {"oid": "83a5c0476055905276ab3279be17c0117f960bf4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDozOTozMFrOGjGgAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDozOTozMFrOGjGgAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ1OTg0MQ==", "bodyText": "Should be 0 !=", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#discussion_r439459841", "createdAt": "2020-06-12T14:39:30Z", "author": {"login": "gacholio"}, "path": "runtime/rasdump/trigger.c", "diffHunk": "@@ -555,7 +556,61 @@ prepareForDump(struct J9JavaVM *vm, struct J9RASdumpAgent *agent, struct J9RASdu\n \t\tnewState |= J9RAS_DUMP_TRACE_DISABLED;\n \t}\n \n-\tif ((context->eventFlags & (J9RAS_DUMP_ON_GP_FAULT | J9RAS_DUMP_ON_ABORT_SIGNAL | J9RAS_DUMP_ON_TRACE_ASSERT)) == 0) {\n+\t/* Release vm access until this thread has the dumpKey and is ready to run. This will allow other threads to obtain exclusiveVMAccess in the meantime. */\n+\tif (vmThread) {\n+\t\tif (J9_ARE_ANY_BITS_SET(vmThread->publicFlags, J9_PUBLIC_FLAGS_VM_ACCESS)) {\n+\t\t\tif (vmThread->inNative) {\n+\t\t\t\tvm->internalVMFunctions->internalExitVMToJNI(vmThread);\n+\t\t\t} else {\n+\t\t\t\tvm->internalVMFunctions->internalReleaseVMAccess(vmThread);\n+\t\t\t}\n+\t\t\tacquireVMAccessAfterWait = TRUE;\n+\t\t}\n+\t}\n+\n+\t/*\n+\t * The following actions are considered safe to call during a crash situation...\n+\t */\n+\n+\t/* For fatal events, the first failing thread sets the global rasDumpFirstThread. It then gets higher priority on the\n+\t * serial dump lock, see below. This allows the first failing thread to complete its dumps and exit the VM, reducing\n+\t * the number of dumps written and out-time if multiple threads crash.\n+\t */\n+\tif (J9_ARE_ANY_BITS_SET(context->eventFlags, J9RAS_DUMP_ON_GP_FAULT | J9RAS_DUMP_ON_ABORT_SIGNAL | J9RAS_DUMP_ON_TRACE_ASSERT)) {\n+\t\tcompareAndSwapUDATA(&rasDumpFirstThread, 0, dumpKey);\n+\t}\n+\n+\tif (rasDumpSuspendKey == dumpKey) {\n+\t\t/* We already have the lock */\n+\t} else {\n+\t\tUDATA newKey = 0;\n+\n+\t\t/* Grab the dump lock? */\n+\t\tif (J9_ARE_ANY_BITS_SET(agent->requestMask, J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS)) {\n+\t\t\tnewState |= J9RAS_DUMP_GOT_LOCK;\n+\t\t\tnewKey = dumpKey;\n+\t\t}\n+\n+\t\t/* Always wait for the lock, but only grab it when requested */\n+\t\twhile (compareAndSwapUDATA(&rasDumpSuspendKey, 0, newKey) != 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83a5c0476055905276ab3279be17c0117f960bf4"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83a5c0476055905276ab3279be17c0117f960bf4", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/83a5c0476055905276ab3279be17c0117f960bf4", "committedDate": "2020-06-11T21:59:59Z", "message": "Can't acquire exclusive vm access with waiting xdump\n\nPending xdump threads are waiting in such a way that blocks other threads from acquiring exclusive vm access. The threads wait to acquire a key until the running xdump thread finishes and hold shared vm access while spinning.\n\nSolution:\n- release vm access while waiting for dumpKey so other threads can acquire exclusive vm access\n- moved dumpKey acquire first in prepareForDump so no differentiation between J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS and J9RAS_DUMP_DO_EXCLUSIVE_VM_ACCESS is needed\n- re-order events in unwindAfterDump to match the reverse order of prepareForDump\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}, "afterCommit": {"oid": "3164fc98a7e32cbcac6849c53c991d51e8a0661d", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3164fc98a7e32cbcac6849c53c991d51e8a0661d", "committedDate": "2020-06-12T16:49:28Z", "message": "Can't acquire exclusive vm access with waiting xdump\n\nPending xdump threads are waiting in such a way that blocks other threads from acquiring exclusive vm access. The threads wait to acquire a key until the running xdump thread finishes and hold shared vm access while spinning.\n\nSolution:\n- release vm access while waiting for dumpKey so other threads can acquire exclusive vm access\n- moved dumpKey acquire first in prepareForDump so no differentiation between J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS and J9RAS_DUMP_DO_EXCLUSIVE_VM_ACCESS is needed\n- re-order events in unwindAfterDump to match the reverse order of prepareForDump\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5OTAzOTk1", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#pullrequestreview-429903995", "createdAt": "2020-06-12T17:05:41Z", "commit": {"oid": "3164fc98a7e32cbcac6849c53c991d51e8a0661d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5OTA0NzMz", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#pullrequestreview-429904733", "createdAt": "2020-06-12T17:06:51Z", "commit": {"oid": "3164fc98a7e32cbcac6849c53c991d51e8a0661d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNzowNjo1MVrOGjLeSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNzowNjo1MVrOGjLeSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTU0MTMyMw==", "bodyText": "I would prefer NULL != vmThread here, but the old-style is used throughout the file, so I won't insist.", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#discussion_r439541323", "createdAt": "2020-06-12T17:06:51Z", "author": {"login": "gacholio"}, "path": "runtime/rasdump/trigger.c", "diffHunk": "@@ -555,7 +556,53 @@ prepareForDump(struct J9JavaVM *vm, struct J9RASdumpAgent *agent, struct J9RASdu\n \t\tnewState |= J9RAS_DUMP_TRACE_DISABLED;\n \t}\n \n-\tif ((context->eventFlags & (J9RAS_DUMP_ON_GP_FAULT | J9RAS_DUMP_ON_ABORT_SIGNAL | J9RAS_DUMP_ON_TRACE_ASSERT)) == 0) {\n+\t/* Release vm access until this thread has the dumpKey and is ready to run. This will allow other threads to obtain exclusiveVMAccess in the meantime. */\n+\tif (vmThread && !vmThread->inNative) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3164fc98a7e32cbcac6849c53c991d51e8a0661d"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5OTA5Mzk5", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#pullrequestreview-429909399", "createdAt": "2020-06-12T17:14:25Z", "commit": {"oid": "3164fc98a7e32cbcac6849c53c991d51e8a0661d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79aa969364a019c82ed375b71bffbf945746bb94", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/79aa969364a019c82ed375b71bffbf945746bb94", "committedDate": "2020-06-12T17:20:57Z", "message": "Can't acquire exclusive vm access with waiting xdump\n\nPending xdump threads are waiting in such a way that blocks other threads from acquiring exclusive vm access. The threads wait to acquire a key until the running xdump thread finishes and hold shared vm access while spinning.\n\nSolution:\n- release vm access while waiting for dumpKey so other threads can acquire exclusive vm access\n- moved dumpKey acquire first in prepareForDump so no differentiation between J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS and J9RAS_DUMP_DO_EXCLUSIVE_VM_ACCESS is needed\n- re-order events in unwindAfterDump to match the reverse order of prepareForDump\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3164fc98a7e32cbcac6849c53c991d51e8a0661d", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3164fc98a7e32cbcac6849c53c991d51e8a0661d", "committedDate": "2020-06-12T16:49:28Z", "message": "Can't acquire exclusive vm access with waiting xdump\n\nPending xdump threads are waiting in such a way that blocks other threads from acquiring exclusive vm access. The threads wait to acquire a key until the running xdump thread finishes and hold shared vm access while spinning.\n\nSolution:\n- release vm access while waiting for dumpKey so other threads can acquire exclusive vm access\n- moved dumpKey acquire first in prepareForDump so no differentiation between J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS and J9RAS_DUMP_DO_EXCLUSIVE_VM_ACCESS is needed\n- re-order events in unwindAfterDump to match the reverse order of prepareForDump\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}, "afterCommit": {"oid": "79aa969364a019c82ed375b71bffbf945746bb94", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/79aa969364a019c82ed375b71bffbf945746bb94", "committedDate": "2020-06-12T17:20:57Z", "message": "Can't acquire exclusive vm access with waiting xdump\n\nPending xdump threads are waiting in such a way that blocks other threads from acquiring exclusive vm access. The threads wait to acquire a key until the running xdump thread finishes and hold shared vm access while spinning.\n\nSolution:\n- release vm access while waiting for dumpKey so other threads can acquire exclusive vm access\n- moved dumpKey acquire first in prepareForDump so no differentiation between J9RAS_DUMP_DO_SUSPEND_OTHER_DUMPS and J9RAS_DUMP_DO_EXCLUSIVE_VM_ACCESS is needed\n- re-order events in unwindAfterDump to match the reverse order of prepareForDump\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwNzQ0OTcy", "url": "https://github.com/eclipse-openj9/openj9/pull/9840#pullrequestreview-430744972", "createdAt": "2020-06-15T15:17:01Z", "commit": {"oid": "79aa969364a019c82ed375b71bffbf945746bb94"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 644, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}