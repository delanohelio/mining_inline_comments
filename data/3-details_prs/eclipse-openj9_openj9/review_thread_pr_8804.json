{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NjgyNDg3", "number": 8804, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzoyODoyNFrODnLONw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoyMTozOFrODsPmgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDA0OTE5OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/CardListFlushTask.cpp", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzoyODoyNFrOF1BVbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzo0MjoxN1rOF1B7IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE0MDcxOA==", "bodyText": "this needs to go to MarkMap class, a helper like:\nbool anyLiveObjectInCard(void *heapAddress);", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r391140718", "createdAt": "2020-03-11T17:28:24Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/CardListFlushTask.cpp", "diffHunk": "@@ -119,8 +122,16 @@ MM_CardListFlushTask::run(MM_EnvironmentBase *envBase)\n \t\t\t\t\t\t/* For Marking purposes we do not need to track references within Collection Set */\n \t\t\t\t\t\tMM_HeapRegionDescriptorVLHGC *referencingRegion = interRegionRememberedSet->tableDescriptorForRememberedSetCard(card);\n \t\t\t\t\t\tif (referencingRegion->containsObjects() && !referencingRegion->_markData._shouldMark) {\n-\t\t\t\t\t\t\tCard *cardAddress = interRegionRememberedSet->rememberedSetCardToCardAddr(env, card);\n-\t\t\t\t\t\t\twriteFlushToCardState(cardAddress, gmpIsActive);\n+\t\t\t\t\t\t\tbool needToFlush = true;\n+\t\t\t\t\t\t\tif (needToCheckMarkMap) {\n+\t\t\t\t\t\t\t\tvoid* heapAddress = convertHeapAddressFromRememberedSetCard(envBase, card);\n+\t\t\t\t\t\t\t\tuint64_t* map4Card = (uint64_t*) &((uintptr_t *)(markMap->getMarkBits()))[markMap->getSlotIndex((omrobjectptr_t) heapAddress)];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b3c5eb457bbc56786403f5703c09d1d863ad9de"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE0MzE2OQ==", "bodyText": "and state in a comment that implementation assumes that card covers exactly 512 bytes, 1 mark bit is 8 bytes of heap and heap address is card size aligned.", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r391143169", "createdAt": "2020-03-11T17:31:44Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/CardListFlushTask.cpp", "diffHunk": "@@ -119,8 +122,16 @@ MM_CardListFlushTask::run(MM_EnvironmentBase *envBase)\n \t\t\t\t\t\t/* For Marking purposes we do not need to track references within Collection Set */\n \t\t\t\t\t\tMM_HeapRegionDescriptorVLHGC *referencingRegion = interRegionRememberedSet->tableDescriptorForRememberedSetCard(card);\n \t\t\t\t\t\tif (referencingRegion->containsObjects() && !referencingRegion->_markData._shouldMark) {\n-\t\t\t\t\t\t\tCard *cardAddress = interRegionRememberedSet->rememberedSetCardToCardAddr(env, card);\n-\t\t\t\t\t\t\twriteFlushToCardState(cardAddress, gmpIsActive);\n+\t\t\t\t\t\t\tbool needToFlush = true;\n+\t\t\t\t\t\t\tif (needToCheckMarkMap) {\n+\t\t\t\t\t\t\t\tvoid* heapAddress = convertHeapAddressFromRememberedSetCard(envBase, card);\n+\t\t\t\t\t\t\t\tuint64_t* map4Card = (uint64_t*) &((uintptr_t *)(markMap->getMarkBits()))[markMap->getSlotIndex((omrobjectptr_t) heapAddress)];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE0MDcxOA=="}, "originalCommit": {"oid": "7b3c5eb457bbc56786403f5703c09d1d863ad9de"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE1MDM2OQ==", "bodyText": "you can add compile time assert that BITS_PER_BYTE is 8 and CARD_SIZE_SHIFT is 9", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r391150369", "createdAt": "2020-03-11T17:42:17Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/CardListFlushTask.cpp", "diffHunk": "@@ -119,8 +122,16 @@ MM_CardListFlushTask::run(MM_EnvironmentBase *envBase)\n \t\t\t\t\t\t/* For Marking purposes we do not need to track references within Collection Set */\n \t\t\t\t\t\tMM_HeapRegionDescriptorVLHGC *referencingRegion = interRegionRememberedSet->tableDescriptorForRememberedSetCard(card);\n \t\t\t\t\t\tif (referencingRegion->containsObjects() && !referencingRegion->_markData._shouldMark) {\n-\t\t\t\t\t\t\tCard *cardAddress = interRegionRememberedSet->rememberedSetCardToCardAddr(env, card);\n-\t\t\t\t\t\t\twriteFlushToCardState(cardAddress, gmpIsActive);\n+\t\t\t\t\t\t\tbool needToFlush = true;\n+\t\t\t\t\t\t\tif (needToCheckMarkMap) {\n+\t\t\t\t\t\t\t\tvoid* heapAddress = convertHeapAddressFromRememberedSetCard(envBase, card);\n+\t\t\t\t\t\t\t\tuint64_t* map4Card = (uint64_t*) &((uintptr_t *)(markMap->getMarkBits()))[markMap->getSlotIndex((omrobjectptr_t) heapAddress)];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE0MDcxOA=="}, "originalCommit": {"oid": "7b3c5eb457bbc56786403f5703c09d1d863ad9de"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDA5MTg1OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/CardListFlushTask.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzozNzo1NFrOF1BvVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzozNzo1NFrOF1BvVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE0NzM0OQ==", "bodyText": "interRegionRememberedSet is available. you can use its  convertHeapAddressFromRememberedSetCard(), and no need to clone it in this class", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r391147349", "createdAt": "2020-03-11T17:37:54Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/CardListFlushTask.cpp", "diffHunk": "@@ -119,8 +122,16 @@ MM_CardListFlushTask::run(MM_EnvironmentBase *envBase)\n \t\t\t\t\t\t/* For Marking purposes we do not need to track references within Collection Set */\n \t\t\t\t\t\tMM_HeapRegionDescriptorVLHGC *referencingRegion = interRegionRememberedSet->tableDescriptorForRememberedSetCard(card);\n \t\t\t\t\t\tif (referencingRegion->containsObjects() && !referencingRegion->_markData._shouldMark) {\n-\t\t\t\t\t\t\tCard *cardAddress = interRegionRememberedSet->rememberedSetCardToCardAddr(env, card);\n-\t\t\t\t\t\t\twriteFlushToCardState(cardAddress, gmpIsActive);\n+\t\t\t\t\t\t\tbool needToFlush = true;\n+\t\t\t\t\t\t\tif (needToCheckMarkMap) {\n+\t\t\t\t\t\t\t\tvoid* heapAddress = convertHeapAddressFromRememberedSetCard(envBase, card);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b3c5eb457bbc56786403f5703c09d1d863ad9de"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDYwMDUwOnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOTo1OToyNlrOF1GuLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzo1Nzo0MFrOF8Tdlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIyODk3NQ==", "bodyText": "The new check is just more generic variant of fromRegion->containsObjects().\nSo I recommend you introduce a helper that will replace that containsObjects() check:\ninline bool IRRS::cardContainsObjects(card, fromRegion,  needToCheckMarkMap) {\nif needToCheckMarkMap\nreturn markMap->anyLiveObjectInCard(card)\nelse\nreturn !fromRegion->containsObjects()\n}", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r391228975", "createdAt": "2020-03-11T19:59:26Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "diffHunk": "@@ -935,6 +941,17 @@ MM_InterRegionRememberedSet::clearFromRegionReferencesForMarkDirect(MM_Environme\n \t\t\t\t\tCard * cardAddress = rememberedSetCardToCardAddr(env, card);\n \t\t\t\t\t/* Regions that are completely swept after a GMP, might still have outgoing references (thus we consider empty regions too) */\n \t\t\t\t\tif (fromRegion->_markData._shouldMark  || !fromRegion->containsObjects() || isDirtyCardForPartialCollect(env, cardTable, cardAddress)) {\n+\t\t\t\t\t\tneedToRemove = true;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (!needToRemove && needToCheckMarkMap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b3c5eb457bbc56786403f5703c09d1d863ad9de"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIzMTIyNQ==", "bodyText": "We can later consider checking against MarkMap all the time (not just after GMP), if it's not much slower. But that might be tricky since for evacuated regions clearing of mark map might be done late(r).", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r391231225", "createdAt": "2020-03-11T20:02:10Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "diffHunk": "@@ -935,6 +941,17 @@ MM_InterRegionRememberedSet::clearFromRegionReferencesForMarkDirect(MM_Environme\n \t\t\t\t\tCard * cardAddress = rememberedSetCardToCardAddr(env, card);\n \t\t\t\t\t/* Regions that are completely swept after a GMP, might still have outgoing references (thus we consider empty regions too) */\n \t\t\t\t\tif (fromRegion->_markData._shouldMark  || !fromRegion->containsObjects() || isDirtyCardForPartialCollect(env, cardTable, cardAddress)) {\n+\t\t\t\t\t\tneedToRemove = true;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (!needToRemove && needToCheckMarkMap) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIyODk3NQ=="}, "originalCommit": {"oid": "7b3c5eb457bbc56786403f5703c09d1d863ad9de"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyNDE4Mg==", "bodyText": "The new check is just more generic variant of fromRegion->containsObjects().\nSo I recommend you introduce a helper that will replace that containsObjects() check:\ninline bool IRRS::cardContainsObjects(card, fromRegion, needToCheckMarkMap) {\nif needToCheckMarkMap\nreturn markMap->anyLiveObjectInCard(card)\nelse\nreturn !fromRegion->containsObjects()\n}\n\ngood idea! it is good for clearFromRegionReferencesForMarkDirect(), but for clearFromRegionReferencesForMarkOptimized() (it is default, using compressed card table ), it is little bit tricky, partial logic for checking empty region is in rebuildCompressedCardTableForMark(), we can add CheckMarkMap in rebuildCompressedCardTableForMark, but it need to check every card in the regions, it might be expensive?", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r391724182", "createdAt": "2020-03-12T16:02:43Z", "author": {"login": "LinHu2016"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "diffHunk": "@@ -935,6 +941,17 @@ MM_InterRegionRememberedSet::clearFromRegionReferencesForMarkDirect(MM_Environme\n \t\t\t\t\tCard * cardAddress = rememberedSetCardToCardAddr(env, card);\n \t\t\t\t\t/* Regions that are completely swept after a GMP, might still have outgoing references (thus we consider empty regions too) */\n \t\t\t\t\tif (fromRegion->_markData._shouldMark  || !fromRegion->containsObjects() || isDirtyCardForPartialCollect(env, cardTable, cardAddress)) {\n+\t\t\t\t\t\tneedToRemove = true;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (!needToRemove && needToCheckMarkMap) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIyODk3NQ=="}, "originalCommit": {"oid": "7b3c5eb457bbc56786403f5703c09d1d863ad9de"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc2MDQwMA==", "bodyText": "I see. Actually, I think it is CompressedCardTable::rebuildCompressedCardTableForPartialCollect that would be more impacted. We could try that later and see if it will slow it down.\nStill I think you can introduce the helper and use it here, and in 'else' clause of 'if (compressedCardTable->isReady()) {', while the existing areAnyLiveObjectsInCard() check you can move up in 'then' clause of 'if (compressedCardTable->isReady()) {'", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r398760400", "createdAt": "2020-03-26T17:32:51Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "diffHunk": "@@ -935,6 +941,17 @@ MM_InterRegionRememberedSet::clearFromRegionReferencesForMarkDirect(MM_Environme\n \t\t\t\t\tCard * cardAddress = rememberedSetCardToCardAddr(env, card);\n \t\t\t\t\t/* Regions that are completely swept after a GMP, might still have outgoing references (thus we consider empty regions too) */\n \t\t\t\t\tif (fromRegion->_markData._shouldMark  || !fromRegion->containsObjects() || isDirtyCardForPartialCollect(env, cardTable, cardAddress)) {\n+\t\t\t\t\t\tneedToRemove = true;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (!needToRemove && needToCheckMarkMap) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIyODk3NQ=="}, "originalCommit": {"oid": "7b3c5eb457bbc56786403f5703c09d1d863ad9de"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc3Nzc1MA==", "bodyText": "if we use the helper in  \"else\" clause, so we have to add the logic in rebuildCompressedCardTableForPartialCollect(), otherwise if compressedCardTable->isReady() case, we would miss to check markMap.\nif (compressedCardTable->isReady()) {\n   ....\n} else {\n\n}", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r398777750", "createdAt": "2020-03-26T17:57:40Z", "author": {"login": "LinHu2016"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "diffHunk": "@@ -935,6 +941,17 @@ MM_InterRegionRememberedSet::clearFromRegionReferencesForMarkDirect(MM_Environme\n \t\t\t\t\tCard * cardAddress = rememberedSetCardToCardAddr(env, card);\n \t\t\t\t\t/* Regions that are completely swept after a GMP, might still have outgoing references (thus we consider empty regions too) */\n \t\t\t\t\tif (fromRegion->_markData._shouldMark  || !fromRegion->containsObjects() || isDirtyCardForPartialCollect(env, cardTable, cardAddress)) {\n+\t\t\t\t\t\tneedToRemove = true;\n+\t\t\t\t\t}\n+\n+\t\t\t\t\tif (!needToRemove && needToCheckMarkMap) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIyODk3NQ=="}, "originalCommit": {"oid": "7b3c5eb457bbc56786403f5703c09d1d863ad9de"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjczMjIzOnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/CardListFlushTask.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOToyMzoyMFrOF8-_Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOToyMzoyMFrOF8-_Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ5MDkwNw==", "bodyText": "no need for needToFlush flag, any more. here, and at a couple of other similar spots.", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399490907", "createdAt": "2020-03-27T19:23:20Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/CardListFlushTask.cpp", "diffHunk": "@@ -118,9 +121,12 @@ MM_CardListFlushTask::run(MM_EnvironmentBase *envBase)\n \t\t\t\t\twhile(0 != (card = rsclCardIterator.nextReferencingCard(env))) {\n \t\t\t\t\t\t/* For Marking purposes we do not need to track references within Collection Set */\n \t\t\t\t\t\tMM_HeapRegionDescriptorVLHGC *referencingRegion = interRegionRememberedSet->tableDescriptorForRememberedSetCard(card);\n-\t\t\t\t\t\tif (referencingRegion->containsObjects() && !referencingRegion->_markData._shouldMark) {\n-\t\t\t\t\t\t\tCard *cardAddress = interRegionRememberedSet->rememberedSetCardToCardAddr(env, card);\n-\t\t\t\t\t\t\twriteFlushToCardState(cardAddress, gmpIsActive);\n+\t\t\t\t\t\tif (interRegionRememberedSet->cardMayContainObjects(card, referencingRegion, needToCheckMarkMap, markMap) && !referencingRegion->_markData._shouldMark) {\n+\t\t\t\t\t\t\tbool needToFlush = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47aa9c2b8206c236bc0ae6a33163304151c38295"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NjczNDA2OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOToyMzo1MFrOF8_AZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOToyMzo1MFrOF8_AZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ5MTE3NQ==", "bodyText": "no need for needToRemove", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399491175", "createdAt": "2020-03-27T19:23:50Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "diffHunk": "@@ -933,8 +936,13 @@ MM_InterRegionRememberedSet::clearFromRegionReferencesForMarkDirect(MM_Environme\n \t\t\t\twhile(0 != (card = rsclCardIterator.nextReferencingCard(env))) {\n \t\t\t\t\tMM_HeapRegionDescriptorVLHGC *fromRegion = tableDescriptorForRememberedSetCard(card);\n \t\t\t\t\tCard * cardAddress = rememberedSetCardToCardAddr(env, card);\n-\t\t\t\t\t/* Regions that are completely swept after a GMP, might still have outgoing references (thus we consider empty regions too) */\n-\t\t\t\t\tif (fromRegion->_markData._shouldMark  || !fromRegion->containsObjects() || isDirtyCardForPartialCollect(env, cardTable, cardAddress)) {\n+\t\t\t\t\t/* Regions that are completely swept after a GMP, might still have outgoing references (thus we consider cardContainsNoObjects) */\n+\t\t\t\t\tif (fromRegion->_markData._shouldMark  || !cardMayContainObjects(card, fromRegion, needToCheckMarkMap, markMap) || isDirtyCardForPartialCollect(env, cardTable, cardAddress)) {\n+\t\t\t\t\t\tneedToRemove = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47aa9c2b8206c236bc0ae6a33163304151c38295"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Njc0MjQ2OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/InterRegionRememberedSet.hpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOToyNjoyMFrOF8_FeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOToyNjoyMFrOF8_FeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ5MjQ3Mw==", "bodyText": "pass compressedCardTable and mark map", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399492473", "createdAt": "2020-03-27T19:26:20Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.hpp", "diffHunk": "@@ -185,8 +189,39 @@ class MM_InterRegionRememberedSet : public MM_BaseVirtual\n \tvoid clearFromRegionReferencesForCompactOptimized(MM_EnvironmentVLHGC* env);\n \tMM_InterRegionRememberedSet(MM_HeapRegionManager *heapRegionManager);\n \t\n+\n+\t/**\n+\t * Helper function isCompressedCardDirtyForPartialCollect\n+\t * extended from compressedCardTable->isCompressedCardDirtyForPartialCollect(), only in case first PGC after GMP, also dirty card if card Contains No Object.\n+\t */\n+\tMMINLINE bool isCompressedCardDirtyForPartialCollect(MM_EnvironmentVLHGC* env, UDATA card, bool needToCheckMarkMap)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47aa9c2b8206c236bc0ae6a33163304151c38295"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Njc3MDc0OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOTozNTowM1rOF8_W3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxOTozNTowM1rOF8_W3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTQ5NjkyNA==", "bodyText": "This whole comment should be updated:\nRegions that are completely swept or parts of regions that are partially swept after a GMP might still have outgoing references. If they are (if they may not contain objects), cards should be removed.", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399496924", "createdAt": "2020-03-27T19:35:03Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "diffHunk": "@@ -933,11 +935,12 @@ MM_InterRegionRememberedSet::clearFromRegionReferencesForMarkDirect(MM_Environme\n \t\t\t\twhile(0 != (card = rsclCardIterator.nextReferencingCard(env))) {\n \t\t\t\t\tMM_HeapRegionDescriptorVLHGC *fromRegion = tableDescriptorForRememberedSetCard(card);\n \t\t\t\t\tCard * cardAddress = rememberedSetCardToCardAddr(env, card);\n-\t\t\t\t\t/* Regions that are completely swept after a GMP, might still have outgoing references (thus we consider empty regions too) */\n-\t\t\t\t\tif (fromRegion->_markData._shouldMark  || !fromRegion->containsObjects() || isDirtyCardForPartialCollect(env, cardTable, cardAddress)) {\n+\t\t\t\t\t/* Regions that are completely swept after a GMP, might still have outgoing references (thus we consider cardContainsNoObjects) */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b850c12f0da0158fae7ee8d3272a435c8aef27e9"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Njk1NzAxOnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/InterRegionRememberedSet.hpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo0MDo1NlrOF9BLmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo0MDo1NlrOF9BLmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUyNjgwOQ==", "bodyText": "both helpers could be static (hence saving by not passing implicit 'this' pointer)", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399526809", "createdAt": "2020-03-27T20:40:56Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.hpp", "diffHunk": "@@ -185,8 +189,39 @@ class MM_InterRegionRememberedSet : public MM_BaseVirtual\n \tvoid clearFromRegionReferencesForCompactOptimized(MM_EnvironmentVLHGC* env);\n \tMM_InterRegionRememberedSet(MM_HeapRegionManager *heapRegionManager);\n \t\n+\n+\t/**\n+\t * Helper function isCompressedCardDirtyForPartialCollect\n+\t * extended from compressedCardTable->isCompressedCardDirtyForPartialCollect(), only in case first PGC after GMP, also dirty card if card Contains No Object.\n+\t */\n+\tMMINLINE bool isCompressedCardDirtyForPartialCollect(MM_EnvironmentVLHGC* env, UDATA card, MM_CompressedCardTable *compressedCardTable, bool needToCheckMarkMap, MM_MarkMap *markMap)\n+\t{\n+\t\tvoid* heapAddress = convertHeapAddressFromRememberedSetCard(card);\n+\t\tbool ret = compressedCardTable->isCompressedCardDirtyForPartialCollect(env, heapAddress);\n+\t\tif (!ret && needToCheckMarkMap) {\n+\t\t\tret = markMap->areAnyLiveObjectsInCard(heapAddress);\n+\t\t}\n+\t\treturn ret;\n+\n+\t}\n protected:\n public:\n+\t/**\n+\t * Helper function cardMayContainObjects\n+\t * if this is first PGC after GMP, check if markMap->areAnyLiveObjectsInCard()\n+\t * otherwise check if region->containsObjects()\n+\t */\n+\tMMINLINE bool cardMayContainObjects(UDATA card, MM_HeapRegionDescriptorVLHGC *fromRegion, bool needToCheckMarkMap, MM_MarkMap *markMap)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d321a7c16be5275a8f745a6f623d8febcfa4ea8"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Njk4MTYzOnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/CardListFlushTask.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo0OTo1M1rOF9BbWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTo0MDoxOVrOF9Cptg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzMDg0MQ==", "bodyText": "move open bracket to previous line", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399530841", "createdAt": "2020-03-27T20:49:53Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/CardListFlushTask.cpp", "diffHunk": "@@ -96,6 +97,11 @@ MM_CardListFlushTask::run(MM_EnvironmentBase *envBase)\n {\n \tMM_EnvironmentVLHGC *env = MM_EnvironmentVLHGC::getEnvironment(envBase);\n \tMM_GCExtensions *extensions = MM_GCExtensions::getExtensions(env);\n+\tMM_MarkMap *markMap = NULL;\n+\tif (static_cast<MM_CycleStateVLHGC*>(envBase->_cycleState)->_schedulingDelegate->isFirstPGCAfterGMP())\n+\t{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e27f867158b68f49d761a544c6ec71897193faa8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU1MDkwMg==", "bodyText": "your fixed the other two, but not this one :)", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399550902", "createdAt": "2020-03-27T21:40:19Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/CardListFlushTask.cpp", "diffHunk": "@@ -96,6 +97,11 @@ MM_CardListFlushTask::run(MM_EnvironmentBase *envBase)\n {\n \tMM_EnvironmentVLHGC *env = MM_EnvironmentVLHGC::getEnvironment(envBase);\n \tMM_GCExtensions *extensions = MM_GCExtensions::getExtensions(env);\n+\tMM_MarkMap *markMap = NULL;\n+\tif (static_cast<MM_CycleStateVLHGC*>(envBase->_cycleState)->_schedulingDelegate->isFirstPGCAfterGMP())\n+\t{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzMDg0MQ=="}, "originalCommit": {"oid": "e27f867158b68f49d761a544c6ec71897193faa8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Njk4Mjg0OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo1MDoyMVrOF9BcIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo1MDoyMVrOF9BcIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzMTA0MA==", "bodyText": "move bracket", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399531040", "createdAt": "2020-03-27T20:50:21Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "diffHunk": "@@ -914,7 +913,13 @@ void\n MM_InterRegionRememberedSet::clearFromRegionReferencesForMarkDirect(MM_EnvironmentVLHGC* env)\n {\n \tPORT_ACCESS_FROM_ENVIRONMENT(env);\n-\tMM_CardTable *cardTable = MM_GCExtensions::getExtensions(env)->cardTable;\n+\tMM_GCExtensions *extensions = MM_GCExtensions::getExtensions(env);\n+\tMM_CardTable *cardTable = extensions->cardTable;\n+\tMM_MarkMap *markMap = NULL;\n+\tif (static_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_schedulingDelegate->isFirstPGCAfterGMP())\n+\t{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e27f867158b68f49d761a544c6ec71897193faa8"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3Njk4MzU4OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo1MDozOFrOF9Bcng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo1MDozOFrOF9Bcng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzMTE2Ng==", "bodyText": "bracket", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399531166", "createdAt": "2020-03-27T20:50:38Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.cpp", "diffHunk": "@@ -969,8 +975,14 @@ void\n MM_InterRegionRememberedSet::clearFromRegionReferencesForMarkOptimized(MM_EnvironmentVLHGC* env)\n {\n \tPORT_ACCESS_FROM_ENVIRONMENT(env);\n-\tMM_CardTable *cardTable = MM_GCExtensions::getExtensions(env)->cardTable;\n-\tMM_CompressedCardTable *compressedCardTable = MM_GCExtensions::getExtensions(env)->compressedCardTable;\n+\tMM_GCExtensions *extensions = MM_GCExtensions::getExtensions(env);\n+\tMM_CardTable *cardTable = extensions->cardTable;\n+\tMM_CompressedCardTable *compressedCardTable = extensions->compressedCardTable;\n+\tMM_MarkMap *markMap = NULL;\n+\tif (static_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_schedulingDelegate->isFirstPGCAfterGMP())\n+\t{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e27f867158b68f49d761a544c6ec71897193faa8"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzAwMjg3OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/InterRegionRememberedSet.hpp", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo1Nzo1OVrOF9Borw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTozNzoxNFrOF9ClEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNDI1NQ==", "bodyText": "comment says 'also dirty card'\ndid you mean 'also remove card'?", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399534255", "createdAt": "2020-03-27T20:57:59Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.hpp", "diffHunk": "@@ -185,8 +189,39 @@ class MM_InterRegionRememberedSet : public MM_BaseVirtual\n \tvoid clearFromRegionReferencesForCompactOptimized(MM_EnvironmentVLHGC* env);\n \tMM_InterRegionRememberedSet(MM_HeapRegionManager *heapRegionManager);\n \t\n+\n+\t/**\n+\t * Helper function isCompressedCardDirtyForPartialCollect\n+\t * extended from compressedCardTable->isCompressedCardDirtyForPartialCollect(), only in case first PGC after GMP, also dirty card if card Contains No Object.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e27f867158b68f49d761a544c6ec71897193faa8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU0MzczMw==", "bodyText": "compressedCardTable->isCompressedCardDirtyForPartialCollect() return true if the card is dirty, extra condition if the card Contains No Object return true (the card is dirty)", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399543733", "createdAt": "2020-03-27T21:21:00Z", "author": {"login": "LinHu2016"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.hpp", "diffHunk": "@@ -185,8 +189,39 @@ class MM_InterRegionRememberedSet : public MM_BaseVirtual\n \tvoid clearFromRegionReferencesForCompactOptimized(MM_EnvironmentVLHGC* env);\n \tMM_InterRegionRememberedSet(MM_HeapRegionManager *heapRegionManager);\n \t\n+\n+\t/**\n+\t * Helper function isCompressedCardDirtyForPartialCollect\n+\t * extended from compressedCardTable->isCompressedCardDirtyForPartialCollect(), only in case first PGC after GMP, also dirty card if card Contains No Object.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNDI1NQ=="}, "originalCommit": {"oid": "e27f867158b68f49d761a544c6ec71897193faa8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU0OTcxNQ==", "bodyText": "Ah, then it should say 'also return as dirty'. As-is I understood you imply an action of dirtying the card.", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399549715", "createdAt": "2020-03-27T21:37:14Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.hpp", "diffHunk": "@@ -185,8 +189,39 @@ class MM_InterRegionRememberedSet : public MM_BaseVirtual\n \tvoid clearFromRegionReferencesForCompactOptimized(MM_EnvironmentVLHGC* env);\n \tMM_InterRegionRememberedSet(MM_HeapRegionManager *heapRegionManager);\n \t\n+\n+\t/**\n+\t * Helper function isCompressedCardDirtyForPartialCollect\n+\t * extended from compressedCardTable->isCompressedCardDirtyForPartialCollect(), only in case first PGC after GMP, also dirty card if card Contains No Object.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzNDI1NQ=="}, "originalCommit": {"oid": "e27f867158b68f49d761a544c6ec71897193faa8"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzEwNjU3OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/InterRegionRememberedSet.hpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTozOToxNFrOF9CoFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTozOToxNFrOF9CoFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU1MDQ4NA==", "bodyText": "add comment:\nTODO: consider incorporating areAnyLiveObjectsInCard info when building Compressed Card Table", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399550484", "createdAt": "2020-03-27T21:39:14Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.hpp", "diffHunk": "@@ -185,8 +189,39 @@ class MM_InterRegionRememberedSet : public MM_BaseVirtual\n \tvoid clearFromRegionReferencesForCompactOptimized(MM_EnvironmentVLHGC* env);\n \tMM_InterRegionRememberedSet(MM_HeapRegionManager *heapRegionManager);\n \t\n+\n+\t/**\n+\t * Helper function isCompressedCardDirtyForPartialCollect\n+\t * extended from compressedCardTable->isCompressedCardDirtyForPartialCollect(), only in case first PGC after GMP, also dirty card if card Contains No Object.\n+\t */\n+\tMMINLINE static bool isCompressedCardDirtyForPartialCollect(MM_EnvironmentVLHGC* env, UDATA card, MM_CompressedCardTable *compressedCardTable, MM_MarkMap *markMap)\n+\t{\n+\t\tvoid* heapAddress = convertHeapAddressFromRememberedSetCard(card);\n+\t\tbool ret = compressedCardTable->isCompressedCardDirtyForPartialCollect(env, heapAddress);\n+\t\tif (!ret && (NULL != markMap)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f047a6939cee98a11905417ca1d4912632995c8"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NzE5NTUyOnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/InterRegionRememberedSet.hpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoyMTozOFrOF9DeeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjoyMTozOFrOF9DeeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU2NDQwOQ==", "bodyText": "These helpers won't be able to be static, afterall :( . It may work now, but once OMR_GC_FULL_POINTERS is enabled, they will indirectly rely on class member _compressObjectReferences", "url": "https://github.com/eclipse-openj9/openj9/pull/8804#discussion_r399564409", "createdAt": "2020-03-27T22:21:38Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/InterRegionRememberedSet.hpp", "diffHunk": "@@ -185,14 +189,46 @@ class MM_InterRegionRememberedSet : public MM_BaseVirtual\n \tvoid clearFromRegionReferencesForCompactOptimized(MM_EnvironmentVLHGC* env);\n \tMM_InterRegionRememberedSet(MM_HeapRegionManager *heapRegionManager);\n \t\n+\n+\t/**\n+\t * Helper function isCompressedCardDirtyForPartialCollect\n+\t * extended from compressedCardTable->isCompressedCardDirtyForPartialCollect(), only in case first PGC after GMP, also return as dirty if card Contains No Object.\n+\t */\n+\tMMINLINE static bool isCompressedCardDirtyForPartialCollect(MM_EnvironmentVLHGC* env, UDATA card, MM_CompressedCardTable *compressedCardTable, MM_MarkMap *markMap)\n+\t{\n+\t\tvoid* heapAddress = convertHeapAddressFromRememberedSetCard(card);\n+\t\tbool ret = compressedCardTable->isCompressedCardDirtyForPartialCollect(env, heapAddress);\n+\t\tif (!ret && (NULL != markMap)) {\n+\t\t\t/* TODO: consider incorporating areAnyLiveObjectsInCard info when building CompressedCard */\n+\t\t\tret = !markMap->areAnyLiveObjectsInCard(heapAddress);\n+\t\t}\n+\t\treturn ret;\n+\n+\t}\n protected:\n public:\n+\t/**\n+\t * Helper function cardMayContainObjects\n+\t * if this is first PGC after GMP, check if markMap->areAnyLiveObjectsInCard()\n+\t * otherwise check if region->containsObjects()\n+\t */\n+\tMMINLINE static bool cardMayContainObjects(UDATA card, MM_HeapRegionDescriptorVLHGC *fromRegion, MM_MarkMap *markMap)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81ae862e37e11c6385e18f4fa0c4b65a0186d3f6"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 502, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}