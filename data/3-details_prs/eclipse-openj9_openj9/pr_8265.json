{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMTQ2ODY0", "number": 8265, "title": "Add new omrsysinfo_get_CPU_load API", "bodyText": "Makes use of eclipse/omr#4702 to implement the getSystemCpuLoad OperatingSystemMXBean. The existing logic (removed code in this PR) was effectively sunk down into OMR and z/OS support was subsequently added. There should be no change in behavior for existing platforms, and the test coverage proves this is the case.", "createdAt": "2020-01-09T20:35:33Z", "url": "https://github.com/eclipse-openj9/openj9/pull/8265", "merged": true, "mergeCommit": {"oid": "305e49f88f387ba67eca83eb4c95787ada83069a"}, "closed": true, "closedAt": "2020-02-25T02:38:29Z", "author": {"login": "fjeremic"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4wBYBAH2gAyMzYxMTQ2ODY0OjI1MjllMTEwZTA3MGFmN2IwMGUzOWJkOWE0NTYxN2M0MjgzYmI2ZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHo1giAFqTM2MzgzNjQ2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2529e110e070af7b00e39bd9a45617c4283bb6fa", "author": {"user": {"login": "fjeremic", "name": "Filip Jeremic"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2529e110e070af7b00e39bd9a45617c4283bb6fa", "committedDate": "2020-01-09T20:31:38Z", "message": "Use new OMR API to implement getSystemCpuLoad\n\nA new OMR port library API `omrsysinfo_get_CPU_load` has been\nimplemented which calculates the CPU load for us. The OMR API is a\nreplica of how we currently calculate the CPU load (the logic from\nOpenJ9 has been sunk down into OMR).\n\nIn this commit we make use of the new API as it provides support for\nall operating systems we build OpenJ9 on.\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e67cdd1a478188846483e480c1b0595a49a8b7d", "author": {"user": {"login": "fjeremic", "name": "Filip Jeremic"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2e67cdd1a478188846483e480c1b0595a49a8b7d", "committedDate": "2020-01-09T20:31:38Z", "message": "Enable z/OS testing in TestGetSystemCpuLoad\n\nNow that we support obtaining system CPU load on z/OS we can safely\nenable testing of the MXBean API.\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "272278a9774960b885334e4efd596576a15ed03b", "author": {"user": {"login": "fjeremic", "name": "Filip Jeremic"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/272278a9774960b885334e4efd596576a15ed03b", "committedDate": "2020-01-09T20:31:38Z", "message": "Reduce code duplication in TestGetSystemCpuLoad\n\nThere are two tests in this test suite which both basically do the same\nthing. We take the union of both tests and extract the logic into a\nfunction which we can then call from both tests.\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNDY5Mzk4", "url": "https://github.com/eclipse-openj9/openj9/pull/8265#pullrequestreview-361469398", "createdAt": "2020-02-19T21:59:30Z", "commit": {"oid": "1748d2fab82fd236c71ab5785cb520e1cfc59fb9"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMTo1OTozMFrOFr5MAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQyMjowODoyMlrOFr5b7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU3MDA1MA==", "bodyText": "This variable should be initialized.", "url": "https://github.com/eclipse-openj9/openj9/pull/8265#discussion_r381570050", "createdAt": "2020-02-19T21:59:30Z", "author": {"login": "pshipton"}, "path": "runtime/jcl/common/mgmtosext.c", "diffHunk": "@@ -79,6 +79,32 @@ Java_com_ibm_lang_management_internal_ExtendedOperatingSystemMXBeanImpl_getProce\n \treturn (0 == rc)? (jlong) size: (jlong) -1;\n }\n \n+jdouble JNICALL\n+Java_com_ibm_lang_management_internal_ExtendedOperatingSystemMXBeanImpl_getSystemCpuLoadImpl(JNIEnv *env, jobject instance) {\n+\tPORT_ACCESS_FROM_ENV(env);\n+\tdouble cpuLoad;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1748d2fab82fd236c71ab5785cb520e1cfc59fb9"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTU3NDEyNA==", "bodyText": "I don't see why this is needed, the code could call omrsysinfo directly. I assume the existing macros were added to avoid having to change all the OpenJ9 code to call omr. Perhaps subsequent changes have followed the same pattern for no reason, but it would be clearer to call omr directly for anything new.", "url": "https://github.com/eclipse-openj9/openj9/pull/8265#discussion_r381574124", "createdAt": "2020-02-19T22:08:22Z", "author": {"login": "pshipton"}, "path": "runtime/oti/j9port_generated.h", "diffHunk": "@@ -620,6 +620,7 @@ extern J9_CFUNC int32_t j9port_isCompatible(struct J9PortLibraryVersion *expecte\n #define j9sysinfo_get_groupname(param1,param2) OMRPORT_FROM_J9PORT(privatePortLibrary)->sysinfo_get_groupname(OMRPORT_FROM_J9PORT(privatePortLibrary),param1,param2)\n #define j9sysinfo_get_load_average(param1) OMRPORT_FROM_J9PORT(privatePortLibrary)->sysinfo_get_load_average(OMRPORT_FROM_J9PORT(privatePortLibrary),param1)\n #define j9sysinfo_get_CPU_utilization(param1) OMRPORT_FROM_J9PORT(privatePortLibrary)->sysinfo_get_CPU_utilization(OMRPORT_FROM_J9PORT(privatePortLibrary),param1)\n+#define j9sysinfo_get_CPU_load(param1) OMRPORT_FROM_J9PORT(privatePortLibrary)->sysinfo_get_CPU_load(OMRPORT_FROM_J9PORT(privatePortLibrary),param1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1748d2fab82fd236c71ab5785cb520e1cfc59fb9"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1748d2fab82fd236c71ab5785cb520e1cfc59fb9", "author": {"user": {"login": "fjeremic", "name": "Filip Jeremic"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1748d2fab82fd236c71ab5785cb520e1cfc59fb9", "committedDate": "2020-01-09T20:47:48Z", "message": "Update copyrights to 2020\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>"}, "afterCommit": {"oid": "1f3ba304581f234f0b6126a69f2d0f674dfbdb5d", "author": {"user": {"login": "fjeremic", "name": "Filip Jeremic"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1f3ba304581f234f0b6126a69f2d0f674dfbdb5d", "committedDate": "2020-02-20T15:02:40Z", "message": "Deprecate j9sysinfo_get_CPU_load and use omrsysinfo_get_CPU_load\n\nIn addition:\n\n- Update copyrights to 2020\n- Initialize uninitialized local variables\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f3ba304581f234f0b6126a69f2d0f674dfbdb5d", "author": {"user": {"login": "fjeremic", "name": "Filip Jeremic"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1f3ba304581f234f0b6126a69f2d0f674dfbdb5d", "committedDate": "2020-02-20T15:02:40Z", "message": "Deprecate j9sysinfo_get_CPU_load and use omrsysinfo_get_CPU_load\n\nIn addition:\n\n- Update copyrights to 2020\n- Initialize uninitialized local variables\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>"}, "afterCommit": {"oid": "65fb41926e591fa183c419a8e3e09fcaa56b5140", "author": {"user": {"login": "fjeremic", "name": "Filip Jeremic"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/65fb41926e591fa183c419a8e3e09fcaa56b5140", "committedDate": "2020-02-20T16:41:45Z", "message": "Deprecate j9sysinfo_get_CPU_load and use omrsysinfo_get_CPU_load\n\nIn addition:\n\n- Update copyrights to 2020\n- Initialize uninitialized local variables\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDcyNDkw", "url": "https://github.com/eclipse-openj9/openj9/pull/8265#pullrequestreview-362072490", "createdAt": "2020-02-20T16:59:20Z", "commit": {"oid": "65fb41926e591fa183c419a8e3e09fcaa56b5140"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjo1OToyMFrOFsbeEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNjo1OToyMFrOFsbeEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzMTczMA==", "bodyText": "should be PORTLIB, I think portLibrary won't be defined.", "url": "https://github.com/eclipse-openj9/openj9/pull/8265#discussion_r382131730", "createdAt": "2020-02-20T16:59:20Z", "author": {"login": "rwy0717"}, "path": "runtime/jcl/common/mgmtosext.c", "diffHunk": "@@ -79,6 +79,33 @@ Java_com_ibm_lang_management_internal_ExtendedOperatingSystemMXBeanImpl_getProce\n \treturn (0 == rc)? (jlong) size: (jlong) -1;\n }\n \n+jdouble JNICALL\n+Java_com_ibm_lang_management_internal_ExtendedOperatingSystemMXBeanImpl_getSystemCpuLoadImpl(JNIEnv *env, jobject instance) {\n+\tPORT_ACCESS_FROM_ENV(env);\n+   OMRPORT_ACCESS_FROM_J9PORT(portLibrary);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65fb41926e591fa183c419a8e3e09fcaa56b5140"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65fb41926e591fa183c419a8e3e09fcaa56b5140", "author": {"user": {"login": "fjeremic", "name": "Filip Jeremic"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/65fb41926e591fa183c419a8e3e09fcaa56b5140", "committedDate": "2020-02-20T16:41:45Z", "message": "Deprecate j9sysinfo_get_CPU_load and use omrsysinfo_get_CPU_load\n\nIn addition:\n\n- Update copyrights to 2020\n- Initialize uninitialized local variables\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>"}, "afterCommit": {"oid": "e200fcd0089727bb8c11ffa2d51bc48880865951", "author": {"user": {"login": "fjeremic", "name": "Filip Jeremic"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e200fcd0089727bb8c11ffa2d51bc48880865951", "committedDate": "2020-02-20T17:06:45Z", "message": "Deprecate j9sysinfo_get_CPU_load and use omrsysinfo_get_CPU_load\n\nIn addition:\n\n- Update copyrights to 2020\n- Initialize uninitialized local variables\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDc4NDE5", "url": "https://github.com/eclipse-openj9/openj9/pull/8265#pullrequestreview-362078419", "createdAt": "2020-02-20T17:07:19Z", "commit": {"oid": "65fb41926e591fa183c419a8e3e09fcaa56b5140"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzowODoxNlrOFsbyLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNzoxMzowMVrOFsb8Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzNjg3OA==", "bodyText": "This method can be static.", "url": "https://github.com/eclipse-openj9/openj9/pull/8265#discussion_r382136878", "createdAt": "2020-02-20T17:08:16Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/jdk.management/share/classes/com/ibm/lang/management/internal/ExtendedOperatingSystemMXBeanImpl.java", "diffHunk": "@@ -426,9 +424,11 @@ public final long getProcessVirtualMemorySize() {\n \t */\n \t@Override\n \tpublic final double getSystemCpuLoad() {\n-\t\treturn cpuUtilizationHelper.getSystemCpuLoad();\n+\t\treturn this.getSystemCpuLoadImpl();\n \t}\n \n+\tprivate native double getSystemCpuLoadImpl();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e200fcd0089727bb8c11ffa2d51bc48880865951"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzNzA2Mw==", "bodyText": "Inconsistent indentation.", "url": "https://github.com/eclipse-openj9/openj9/pull/8265#discussion_r382137063", "createdAt": "2020-02-20T17:08:38Z", "author": {"login": "keithc-ca"}, "path": "runtime/jcl/common/mgmtosext.c", "diffHunk": "@@ -79,6 +79,33 @@ Java_com_ibm_lang_management_internal_ExtendedOperatingSystemMXBeanImpl_getProce\n \treturn (0 == rc)? (jlong) size: (jlong) -1;\n }\n \n+jdouble JNICALL\n+Java_com_ibm_lang_management_internal_ExtendedOperatingSystemMXBeanImpl_getSystemCpuLoadImpl(JNIEnv *env, jobject instance) {\n+\tPORT_ACCESS_FROM_ENV(env);\n+   OMRPORT_ACCESS_FROM_J9PORT(PORTLIB);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e200fcd0089727bb8c11ffa2d51bc48880865951"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzNzkwMw==", "bodyText": "Please undo this change - the file is otherwise unmodified.", "url": "https://github.com/eclipse-openj9/openj9/pull/8265#discussion_r382137903", "createdAt": "2020-02-20T17:10:16Z", "author": {"login": "keithc-ca"}, "path": "runtime/oti/j9port_generated.h", "diffHunk": "@@ -1,5 +1,5 @@\n /*******************************************************************************\n- * Copyright (c) 1991, 2019 IBM Corp. and others\n+ * Copyright (c) 1991, 2020 IBM Corp. and others", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e200fcd0089727bb8c11ffa2d51bc48880865951"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzODE4NQ==", "bodyText": "The signature will need to be updated if made static.", "url": "https://github.com/eclipse-openj9/openj9/pull/8265#discussion_r382138185", "createdAt": "2020-02-20T17:10:50Z", "author": {"login": "keithc-ca"}, "path": "runtime/oti/jclprots.h", "diffHunk": "@@ -140,8 +140,8 @@ extern J9_CFUNC jlong JNICALL\n Java_com_ibm_lang_management_internal_ExtendedOperatingSystemMXBeanImpl_getProcessPrivateMemorySizeImpl (JNIEnv *env, jobject instance);\n extern J9_CFUNC jlong JNICALL\n Java_com_ibm_lang_management_internal_ExtendedOperatingSystemMXBeanImpl_getProcessPhysicalMemorySizeImpl (JNIEnv *env, jobject instance);\n-extern J9_CFUNC jobject JNICALL\n-Java_com_ibm_lang_management_internal_SysinfoCpuTime_getCpuUtilizationImpl (JNIEnv *env, jclass clazz);\n+extern J9_CFUNC jdouble JNICALL\n+Java_com_ibm_lang_management_internal_ExtendedOperatingSystemMXBeanImpl_getSystemCpuLoadImpl (JNIEnv *env, jobject instance);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e200fcd0089727bb8c11ffa2d51bc48880865951"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjEzOTQwMw==", "bodyText": "Why is this public and not private?", "url": "https://github.com/eclipse-openj9/openj9/pull/8265#discussion_r382139403", "createdAt": "2020-02-20T17:13:01Z", "author": {"login": "keithc-ca"}, "path": "test/functional/JLM_Tests/src/org/openj9/test/management/TestGetSystemCpuLoad.java", "diffHunk": "@@ -38,97 +38,63 @@\n \n \t/* convert ns to ms and round up */\n \tprivate static final long MINIMUM_INTERVAL = (long) Math.ceil(CpuLoadCalculationConstants.MINIMUM_INTERVAL / 1e6);\n-\tprivate boolean supported;\n-\tprivate final double MIN_LOAD = 0.0;\n-\tprivate final double MAX_LOAD = 1.0;\n-\tprivate final double NO_ERROR = -100; /* should never get this */\n-\n-\t@BeforeMethod\n-\tprotected void setUp() throws Exception {\n-\t\tString osName = System.getProperty(\"os.name\");\n-\t\tif ((null == osName) || osName.equalsIgnoreCase(\"z/OS\")) {\n-\t\t\tsupported = false;\n-\t\t} else {\n-\t\t\tsupported = true;\n-\t\t}\n-\t}\n+\tprivate static final double MIN_LOAD = 0.0;\n+\tprivate static final double MAX_LOAD = 1.0;\n+\tprivate static final double NO_ERROR = -100; /* should never get this */\n \n \t@Test\n \tpublic void testSingleCpuLoadObject() {\n \t\tlogger.debug(\"Starting testSingleCpuLoadObject\");\n-\t\tcom.ibm.lang.management.OperatingSystemMXBean ibmBean;\n \t\ttry {\n-\t\t\tibmBean = ManagementFactory.getPlatformMXBean(com.ibm.lang.management.OperatingSystemMXBean.class);\n+\t\t\tcom.ibm.lang.management.OperatingSystemMXBean ibmBean = ManagementFactory.getPlatformMXBean(com.ibm.lang.management.OperatingSystemMXBean.class);\n+\t\t\ttestMxBeanImpl(ibmBean);\n \t\t} catch (IllegalArgumentException e) {\n \t\t\tAssert.fail(\"com.ibm.lang.management.OperatingSystemMXBean is not available\" + e, e);\n-\t\t\treturn;\n \t\t}\n-\t\tdouble load = ibmBean.getSystemCpuLoad();\n-\t\tif (!supported) {\n-\t\t\tvalidateLoad(load, true, CpuLoadCalculationConstants.UNSUPPORTED_VALUE, \"initial call\");\n-\t\t\treturn;\n-\t\t} else {\n-\t\t\tvalidateLoad(load, true, CpuLoadCalculationConstants.ERROR_VALUE, \"initial call\");\n-\t\t}\n-\t\tload = ibmBean.getSystemCpuLoad();\n-\t\tif (load < 0.0) { /* normal case (insufficient time since last call) */\n-\t\t\tvalidateLoad(load, true, CpuLoadCalculationConstants.ERROR_VALUE, \"call getSystemCpuLoad immediately after the previous call\");\n-\t\t} else { /* possible but unlikely: test stalled for an extended time */\n-\t\t\tvalidateLoad(load, false, NO_ERROR, \"call getSystemCpuLoad immediately after the previous call\");\n-\t\t}\n-\n-\t\tdelayMillis(MINIMUM_INTERVAL);\n-\t\tload = ibmBean.getSystemCpuLoad();\n-\t\tvalidateLoad(load, false, NO_ERROR, \"call getSystemCpuLoad after the minumum interval\");\n-\n-\t\tdelayMillis(1000);\n-\t\tload = ibmBean.getSystemCpuLoad();\n-\t\tvalidateLoad(load, false, NO_ERROR, \"call getSystemCpuLoad 1 second after previous call\");\n-\n-\t\tdelayMillis(1);\n-\t\tload = ibmBean.getSystemCpuLoad();\n-\t\tvalidateLoad(load, false, NO_ERROR, \"call getSystemCpuLoad 1 millisecond after previous call\");\n \t}\n \n \t@Test\n \tpublic void testMxBean() {\n \t\tlogger.debug(\"Starting testMxBean\");\n \t\tjava.lang.management.OperatingSystemMXBean osBean = ManagementFactory.getOperatingSystemMXBean();\n \t\tString beanClass = osBean.getClass().getName();\n-\t\tlogger.debug(\"osBean class=\" + beanClass);\n+\t\tlogger.debug(\"osBean class = \" + beanClass);\n \t\tClass<?> ibmBeanClass = com.ibm.lang.management.OperatingSystemMXBean.class;\n \n \t\tif (ibmBeanClass.isInstance(osBean)) {\n-\t\t\tcom.ibm.lang.management.OperatingSystemMXBean ibmBean1 =\n-\t\t\t\t\t(com.ibm.lang.management.OperatingSystemMXBean) osBean;\n-\t\t\tdouble load = ibmBean1.getSystemCpuLoad();\n-\t\t\tif (!supported) {\n-\t\t\t\tvalidateLoad(load, true, CpuLoadCalculationConstants.UNSUPPORTED_VALUE, \"initial getSystemCpuLoad\");\n-\t\t\t\treturn;\n-\t\t\t} else if (load < 0.0) { /* normal case (insufficient time since last call) */\n-\t\t\t\tvalidateLoad(load, true, CpuLoadCalculationConstants.ERROR_VALUE, \"initial getSystemCpuLoad\");\n-\t\t\t} else {\n-\t\t\t\tvalidateLoad(load, false, NO_ERROR, \"initial getSystemCpuLoad\");\n-\t\t\t}\n-\t\t\tdelayMillis(MINIMUM_INTERVAL);\n-\t\t\tload = ibmBean1.getSystemCpuLoad();\n-\t\t\tvalidateLoad(load, false, NO_ERROR, \"getSystemCpuLoad after the minumum interval\");\n-\n-\t\t\tload = ibmBean1.getSystemCpuLoad();\n-\t\t\tvalidateLoad(load, false, NO_ERROR, \"getSystemCpuLoad again\");\n-\n-\t\t\tdelayMillis(MINIMUM_INTERVAL);\n-\t\t\tload = ibmBean1.getSystemCpuLoad();\n-\t\t\tvalidateLoad(load, false, NO_ERROR, \"getSystemCpuLoad again\");\n-\n-\t\t\tdelayMillis(1000);\n-\t\t\tload = ibmBean1.getSystemCpuLoad();\n-\t\t\tvalidateLoad(load, false, NO_ERROR, \"getSystemCpuLoad after 1 second\");\n+\t\t\ttestMxBeanImpl((com.ibm.lang.management.OperatingSystemMXBean)osBean);\n \t\t} else {\n \t\t\tAssert.fail(\"OperatingSystemMXBean is wrong type: \" + osBean.getClass().getName());\n \t\t}\n \t}\n \n+\tpublic static void testMxBeanImpl(com.ibm.lang.management.OperatingSystemMXBean ibmBean) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e200fcd0089727bb8c11ffa2d51bc48880865951"}, "originalPosition": 109}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a15fd0a5f1583c638085002e198a4ef9732245cf", "author": {"user": {"login": "fjeremic", "name": "Filip Jeremic"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a15fd0a5f1583c638085002e198a4ef9732245cf", "committedDate": "2020-02-20T17:43:29Z", "message": "Deprecate j9sysinfo_get_CPU_load and use omrsysinfo_get_CPU_load\n\nIn addition:\n\n- Update copyrights to 2020\n- Initialize uninitialized local variables\n- Make `testMxBeanImpl` a private method\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e200fcd0089727bb8c11ffa2d51bc48880865951", "author": {"user": {"login": "fjeremic", "name": "Filip Jeremic"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e200fcd0089727bb8c11ffa2d51bc48880865951", "committedDate": "2020-02-20T17:06:45Z", "message": "Deprecate j9sysinfo_get_CPU_load and use omrsysinfo_get_CPU_load\n\nIn addition:\n\n- Update copyrights to 2020\n- Initialize uninitialized local variables\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>"}, "afterCommit": {"oid": "a15fd0a5f1583c638085002e198a4ef9732245cf", "author": {"user": {"login": "fjeremic", "name": "Filip Jeremic"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a15fd0a5f1583c638085002e198a4ef9732245cf", "committedDate": "2020-02-20T17:43:29Z", "message": "Deprecate j9sysinfo_get_CPU_load and use omrsysinfo_get_CPU_load\n\nIn addition:\n\n- Update copyrights to 2020\n- Initialize uninitialized local variables\n- Make `testMxBeanImpl` a private method\n\nSigned-off-by: Filip Jeremic <fjeremic@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzODM2NDYx", "url": "https://github.com/eclipse-openj9/openj9/pull/8265#pullrequestreview-363836461", "createdAt": "2020-02-25T02:38:12Z", "commit": {"oid": "a15fd0a5f1583c638085002e198a4ef9732245cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 830, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}