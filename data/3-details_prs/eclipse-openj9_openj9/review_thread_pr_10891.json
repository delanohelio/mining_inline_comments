{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNTkxODYx", "number": 10891, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjoyOTowNlrOE3TsPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzozNzo1NlrOE3zlWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDI5NzU3OnYy", "diffSide": "RIGHT", "path": "test/functional/cmdLineTests/CDSAdaptorTest/build.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjoyOTowNlrOHwk6Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjoxOTo0NFrOHxmpUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY5ODQ2Mg==", "bodyText": "Please fix the indentation.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r520698462", "createdAt": "2020-11-10T16:29:06Z", "author": {"login": "llxia"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/build.xml", "diffHunk": "@@ -0,0 +1,111 @@\n+<?xml version=\"1.0\"?>\n+\n+<!--\n+  Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+  This program and the accompanying materials are made available under\n+  the terms of the Eclipse Public License 2.0 which accompanies this\n+  distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+  or the Apache License, Version 2.0 which accompanies this distribution and\n+  is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+  This Source Code may also be made available under the following\n+  Secondary Licenses when the conditions for such availability set\n+  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+  General Public License, version 2 with the GNU Classpath\n+  Exception [1] and GNU General Public License, version 2 with the\n+  OpenJDK Assembly Exception [2].\n+\n+  [1] https://www.gnu.org/software/classpath/license.html\n+  [2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+\n+<project name=\"CDS Adaptor Tests\" default=\"clean\" basedir=\".\">\n+\t<taskdef resource='net/sf/antcontrib/antlib.xml'/>\n+    <description>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a575ac2a5e99544a61aca03b3de7d56c69e699"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc3NTQ0Mg==", "bodyText": "Indentations have been fixed. Thanks.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521775442", "createdAt": "2020-11-12T02:19:44Z", "author": {"login": "LongyuZhang"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/build.xml", "diffHunk": "@@ -0,0 +1,111 @@\n+<?xml version=\"1.0\"?>\n+\n+<!--\n+  Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+  This program and the accompanying materials are made available under\n+  the terms of the Eclipse Public License 2.0 which accompanies this\n+  distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+  or the Apache License, Version 2.0 which accompanies this distribution and\n+  is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+  This Source Code may also be made available under the following\n+  Secondary Licenses when the conditions for such availability set\n+  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+  General Public License, version 2 with the GNU Classpath\n+  Exception [1] and GNU General Public License, version 2 with the\n+  OpenJDK Assembly Exception [2].\n+\n+  [1] https://www.gnu.org/software/classpath/license.html\n+  [2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+\n+<project name=\"CDS Adaptor Tests\" default=\"clean\" basedir=\".\">\n+\t<taskdef resource='net/sf/antcontrib/antlib.xml'/>\n+    <description>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY5ODQ2Mg=="}, "originalCommit": {"oid": "46a575ac2a5e99544a61aca03b3de7d56c69e699"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDMwMDI0OnYy", "diffSide": "RIGHT", "path": "test/functional/cmdLineTests/CDSAdaptorTest/build.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjoyOTozNFrOHwk76w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjoyMDowMFrOHxmppA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY5ODg1OQ==", "bodyText": "Please remove above lines", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r520698859", "createdAt": "2020-11-10T16:29:34Z", "author": {"login": "llxia"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/build.xml", "diffHunk": "@@ -0,0 +1,111 @@\n+<?xml version=\"1.0\"?>\n+\n+<!--\n+  Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+  This program and the accompanying materials are made available under\n+  the terms of the Eclipse Public License 2.0 which accompanies this\n+  distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+  or the Apache License, Version 2.0 which accompanies this distribution and\n+  is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+  This Source Code may also be made available under the following\n+  Secondary Licenses when the conditions for such availability set\n+  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+  General Public License, version 2 with the GNU Classpath\n+  Exception [1] and GNU General Public License, version 2 with the\n+  OpenJDK Assembly Exception [2].\n+\n+  [1] https://www.gnu.org/software/classpath/license.html\n+  [2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+\n+<project name=\"CDS Adaptor Tests\" default=\"clean\" basedir=\".\">\n+\t<taskdef resource='net/sf/antcontrib/antlib.xml'/>\n+    <description>\n+       Build CDSAdaptorTest \n+    </description>\n+\t\n+\t<!-- set global properties for this build -->\n+\t<property name=\"DEST\" value=\"${BUILD_ROOT}/functional/cmdLineTests/CDSAdaptorTest\" />\n+\t<property name=\"dist\" location=\"${DEST}\"/>\n+\t<!--Properties for this particular build-->\n+\t<property name=\"src\" location=\"./src\"/>\n+\t<property name=\"src_resources_testBundle\" location=\"./resources/TestBundle/src\"/>\n+\t<property name=\"src_resources_weavinghookTest\" location=\"./resources/WeavinghookTest/src\"/>\n+\t<property name=\"build\" location=\"./bin\"/>\n+\t<property name=\"build_resource_testBundle\" location=\"./bin_resource_testBundle\"/>\n+\t<property name=\"build_resource_weavinghookTest\" location=\"./bin_resource_weavinghookTest\"/>\n+\t<property name=\"resources\" location=\"./resources\"/>\n+\t<!-- <property name=\"src.level\" value=\"1.5\"/>\n+\t<property name=\"target.level\" value=\"1.5\"/> -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a575ac2a5e99544a61aca03b3de7d56c69e699"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc3NTUyNA==", "bodyText": "Comment lines have been removed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521775524", "createdAt": "2020-11-12T02:20:00Z", "author": {"login": "LongyuZhang"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/build.xml", "diffHunk": "@@ -0,0 +1,111 @@\n+<?xml version=\"1.0\"?>\n+\n+<!--\n+  Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+  This program and the accompanying materials are made available under\n+  the terms of the Eclipse Public License 2.0 which accompanies this\n+  distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+  or the Apache License, Version 2.0 which accompanies this distribution and\n+  is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+  This Source Code may also be made available under the following\n+  Secondary Licenses when the conditions for such availability set\n+  forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+  General Public License, version 2 with the GNU Classpath\n+  Exception [1] and GNU General Public License, version 2 with the\n+  OpenJDK Assembly Exception [2].\n+\n+  [1] https://www.gnu.org/software/classpath/license.html\n+  [2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+  SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+\n+<project name=\"CDS Adaptor Tests\" default=\"clean\" basedir=\".\">\n+\t<taskdef resource='net/sf/antcontrib/antlib.xml'/>\n+    <description>\n+       Build CDSAdaptorTest \n+    </description>\n+\t\n+\t<!-- set global properties for this build -->\n+\t<property name=\"DEST\" value=\"${BUILD_ROOT}/functional/cmdLineTests/CDSAdaptorTest\" />\n+\t<property name=\"dist\" location=\"${DEST}\"/>\n+\t<!--Properties for this particular build-->\n+\t<property name=\"src\" location=\"./src\"/>\n+\t<property name=\"src_resources_testBundle\" location=\"./resources/TestBundle/src\"/>\n+\t<property name=\"src_resources_weavinghookTest\" location=\"./resources/WeavinghookTest/src\"/>\n+\t<property name=\"build\" location=\"./bin\"/>\n+\t<property name=\"build_resource_testBundle\" location=\"./bin_resource_testBundle\"/>\n+\t<property name=\"build_resource_weavinghookTest\" location=\"./bin_resource_weavinghookTest\"/>\n+\t<property name=\"resources\" location=\"./resources\"/>\n+\t<!-- <property name=\"src.level\" value=\"1.5\"/>\n+\t<property name=\"target.level\" value=\"1.5\"/> -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDY5ODg1OQ=="}, "originalCommit": {"oid": "46a575ac2a5e99544a61aca03b3de7d56c69e699"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDMxNzMzOnYy", "diffSide": "RIGHT", "path": "test/functional/cmdLineTests/CDSAdaptorTest/playlist.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjozMzoyM1rOHwlGlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjoyMDo0NlrOHxmqYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwMTU5MA==", "bodyText": "Does this test only work for java8?", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r520701590", "createdAt": "2020-11-10T16:33:23Z", "author": {"login": "llxia"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/playlist.xml", "diffHunk": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+This program and the accompanying materials are made available under\n+the terms of the Eclipse Public License 2.0 which accompanies this\n+distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+or the Apache License, Version 2.0 which accompanies this distribution and\n+is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+This Source Code may also be made available under the following\n+Secondary Licenses when the conditions for such availability set\n+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+General Public License, version 2 with the GNU Classpath\n+Exception [1] and GNU General Public License, version 2 with the\n+OpenJDK Assembly Exception [2].\n+\n+[1] https://www.gnu.org/software/classpath/license.html\n+[2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+<playlist xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"../../../TKG/playlist.xsd\">\n+\t<test>\n+\t\t<testCaseName>CDSAdaptorTest</testCaseName>\n+\t\t<variations>\n+\t\t\t<variation>NoOptions</variation>\n+\t\t</variations>\n+\t\t<command>cp $(Q)$(TEST_RESROOT)$(D)cdsadaptortest.jar$(Q) .; \\\n+\t\tcp $(Q)$(LIB_DIR)$(D)org.eclipse.osgi_3.16.100.v20200904-1304.jar$(Q) .; \\\n+\t\ttrue CacheManagement.jar ; \\\n+\t\t$(Q)$(TEST_JDK_HOME)$(D)bin$(D)jar$(EXECUTABLE_SUFFIX)$(Q) xf cdsadaptortest.jar; \\\n+\t\t$(CONVERT_TO_EBCDIC_CMD) \\\n+\t\t$(JAVA_COMMAND) $(JVM_OPTIONS) \\\n+\t\t-DJARPATH=$(Q)$(TEST_RESROOT)$(D)cdsadaptortest.jar$(Q) \\\n+\t\t-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) $(SQ) \\\n+\t\t-DCPDL=$(Q)$(P)$(Q) -DPATHSEP=$(Q)$(D)$(Q) \\\n+\t\t-jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)cdsadaptortest.xml$(Q) \\\n+\t\t-verbose -nonZeroExitWhenError; \\\n+\t\t$(TEST_STATUS)</command>\n+\t\t<subsets>\n+\t\t\t<subset>8</subset>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a575ac2a5e99544a61aca03b3de7d56c69e699"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc3NTcxMg==", "bodyText": "Tested on jdk11 j9 and ibm, jdk13 j9, and jdk14 j9, all passed, so enabled it for all jdk versions.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521775712", "createdAt": "2020-11-12T02:20:46Z", "author": {"login": "LongyuZhang"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/playlist.xml", "diffHunk": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+This program and the accompanying materials are made available under\n+the terms of the Eclipse Public License 2.0 which accompanies this\n+distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+or the Apache License, Version 2.0 which accompanies this distribution and\n+is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+This Source Code may also be made available under the following\n+Secondary Licenses when the conditions for such availability set\n+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+General Public License, version 2 with the GNU Classpath\n+Exception [1] and GNU General Public License, version 2 with the\n+OpenJDK Assembly Exception [2].\n+\n+[1] https://www.gnu.org/software/classpath/license.html\n+[2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+<playlist xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"../../../TKG/playlist.xsd\">\n+\t<test>\n+\t\t<testCaseName>CDSAdaptorTest</testCaseName>\n+\t\t<variations>\n+\t\t\t<variation>NoOptions</variation>\n+\t\t</variations>\n+\t\t<command>cp $(Q)$(TEST_RESROOT)$(D)cdsadaptortest.jar$(Q) .; \\\n+\t\tcp $(Q)$(LIB_DIR)$(D)org.eclipse.osgi_3.16.100.v20200904-1304.jar$(Q) .; \\\n+\t\ttrue CacheManagement.jar ; \\\n+\t\t$(Q)$(TEST_JDK_HOME)$(D)bin$(D)jar$(EXECUTABLE_SUFFIX)$(Q) xf cdsadaptortest.jar; \\\n+\t\t$(CONVERT_TO_EBCDIC_CMD) \\\n+\t\t$(JAVA_COMMAND) $(JVM_OPTIONS) \\\n+\t\t-DJARPATH=$(Q)$(TEST_RESROOT)$(D)cdsadaptortest.jar$(Q) \\\n+\t\t-DEXE=$(SQ)$(JAVA_COMMAND) $(JVM_OPTIONS) $(SQ) \\\n+\t\t-DCPDL=$(Q)$(P)$(Q) -DPATHSEP=$(Q)$(D)$(Q) \\\n+\t\t-jar $(CMDLINETESTER_JAR) -config $(Q)$(TEST_RESROOT)$(D)cdsadaptortest.xml$(Q) \\\n+\t\t-verbose -nonZeroExitWhenError; \\\n+\t\t$(TEST_STATUS)</command>\n+\t\t<subsets>\n+\t\t\t<subset>8</subset>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwMTU5MA=="}, "originalCommit": {"oid": "46a575ac2a5e99544a61aca03b3de7d56c69e699"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDM0MDYwOnYy", "diffSide": "RIGHT", "path": "test/functional/cmdLineTests/CDSAdaptorTest/playlist.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjozODoyMlrOHwlU5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjoyMzowN1rOHxms5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwNTI1Mw==", "bodyText": "Instead of coping the jar into current dir, can we just directly point to the jar under $(LIB_DIR) in cdsadaptortest.xml?\nIs it possible to do the same for jars in cdsadaptortest.jar? It seems that we jar it in build.xml and unjar it in playlist.xml. It would be nice if we can avoid this by not jarring it at all.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r520705253", "createdAt": "2020-11-10T16:38:22Z", "author": {"login": "llxia"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/playlist.xml", "diffHunk": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+This program and the accompanying materials are made available under\n+the terms of the Eclipse Public License 2.0 which accompanies this\n+distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+or the Apache License, Version 2.0 which accompanies this distribution and\n+is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+This Source Code may also be made available under the following\n+Secondary Licenses when the conditions for such availability set\n+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+General Public License, version 2 with the GNU Classpath\n+Exception [1] and GNU General Public License, version 2 with the\n+OpenJDK Assembly Exception [2].\n+\n+[1] https://www.gnu.org/software/classpath/license.html\n+[2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+<playlist xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"../../../TKG/playlist.xsd\">\n+\t<test>\n+\t\t<testCaseName>CDSAdaptorTest</testCaseName>\n+\t\t<variations>\n+\t\t\t<variation>NoOptions</variation>\n+\t\t</variations>\n+\t\t<command>cp $(Q)$(TEST_RESROOT)$(D)cdsadaptortest.jar$(Q) .; \\\n+\t\tcp $(Q)$(LIB_DIR)$(D)org.eclipse.osgi_3.16.100.v20200904-1304.jar$(Q) .; \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a575ac2a5e99544a61aca03b3de7d56c69e699"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc3NjM1Nw==", "bodyText": "Optimized the process as suggested, used ${LIB_DIR} for jar, and run test without copying into output folder through cdsadaptortest.jar.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521776357", "createdAt": "2020-11-12T02:23:07Z", "author": {"login": "LongyuZhang"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/playlist.xml", "diffHunk": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+This program and the accompanying materials are made available under\n+the terms of the Eclipse Public License 2.0 which accompanies this\n+distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+or the Apache License, Version 2.0 which accompanies this distribution and\n+is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+This Source Code may also be made available under the following\n+Secondary Licenses when the conditions for such availability set\n+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+General Public License, version 2 with the GNU Classpath\n+Exception [1] and GNU General Public License, version 2 with the\n+OpenJDK Assembly Exception [2].\n+\n+[1] https://www.gnu.org/software/classpath/license.html\n+[2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+<playlist xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"../../../TKG/playlist.xsd\">\n+\t<test>\n+\t\t<testCaseName>CDSAdaptorTest</testCaseName>\n+\t\t<variations>\n+\t\t\t<variation>NoOptions</variation>\n+\t\t</variations>\n+\t\t<command>cp $(Q)$(TEST_RESROOT)$(D)cdsadaptortest.jar$(Q) .; \\\n+\t\tcp $(Q)$(LIB_DIR)$(D)org.eclipse.osgi_3.16.100.v20200904-1304.jar$(Q) .; \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwNTI1Mw=="}, "originalCommit": {"oid": "46a575ac2a5e99544a61aca03b3de7d56c69e699"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NDM2Njc0OnYy", "diffSide": "RIGHT", "path": "test/functional/cmdLineTests/CDSAdaptorTest/playlist.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxNjo0NDowM1rOHwlkvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjoyMzozNVrOHxmtWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwOTMxMA==", "bodyText": "Did the JARPATH get used?", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r520709310", "createdAt": "2020-11-10T16:44:03Z", "author": {"login": "llxia"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/playlist.xml", "diffHunk": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+This program and the accompanying materials are made available under\n+the terms of the Eclipse Public License 2.0 which accompanies this\n+distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+or the Apache License, Version 2.0 which accompanies this distribution and\n+is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+This Source Code may also be made available under the following\n+Secondary Licenses when the conditions for such availability set\n+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+General Public License, version 2 with the GNU Classpath\n+Exception [1] and GNU General Public License, version 2 with the\n+OpenJDK Assembly Exception [2].\n+\n+[1] https://www.gnu.org/software/classpath/license.html\n+[2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+<playlist xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"../../../TKG/playlist.xsd\">\n+\t<test>\n+\t\t<testCaseName>CDSAdaptorTest</testCaseName>\n+\t\t<variations>\n+\t\t\t<variation>NoOptions</variation>\n+\t\t</variations>\n+\t\t<command>cp $(Q)$(TEST_RESROOT)$(D)cdsadaptortest.jar$(Q) .; \\\n+\t\tcp $(Q)$(LIB_DIR)$(D)org.eclipse.osgi_3.16.100.v20200904-1304.jar$(Q) .; \\\n+\t\ttrue CacheManagement.jar ; \\\n+\t\t$(Q)$(TEST_JDK_HOME)$(D)bin$(D)jar$(EXECUTABLE_SUFFIX)$(Q) xf cdsadaptortest.jar; \\\n+\t\t$(CONVERT_TO_EBCDIC_CMD) \\\n+\t\t$(JAVA_COMMAND) $(JVM_OPTIONS) \\\n+\t\t-DJARPATH=$(Q)$(TEST_RESROOT)$(D)cdsadaptortest.jar$(Q) \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a575ac2a5e99544a61aca03b3de7d56c69e699"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc3NjQ3Mg==", "bodyText": "removed JARPATH. Thanks.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521776472", "createdAt": "2020-11-12T02:23:35Z", "author": {"login": "LongyuZhang"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/playlist.xml", "diffHunk": "@@ -0,0 +1,55 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+Copyright (c) 2020, 2020 IBM Corp. and others\n+\n+This program and the accompanying materials are made available under\n+the terms of the Eclipse Public License 2.0 which accompanies this\n+distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+or the Apache License, Version 2.0 which accompanies this distribution and\n+is available at https://www.apache.org/licenses/LICENSE-2.0.\n+\n+This Source Code may also be made available under the following\n+Secondary Licenses when the conditions for such availability set\n+forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+General Public License, version 2 with the GNU Classpath\n+Exception [1] and GNU General Public License, version 2 with the\n+OpenJDK Assembly Exception [2].\n+\n+[1] https://www.gnu.org/software/classpath/license.html\n+[2] http://openjdk.java.net/legal/assembly-exception.html\n+\n+SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+-->\n+<playlist xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:noNamespaceSchemaLocation=\"../../../TKG/playlist.xsd\">\n+\t<test>\n+\t\t<testCaseName>CDSAdaptorTest</testCaseName>\n+\t\t<variations>\n+\t\t\t<variation>NoOptions</variation>\n+\t\t</variations>\n+\t\t<command>cp $(Q)$(TEST_RESROOT)$(D)cdsadaptortest.jar$(Q) .; \\\n+\t\tcp $(Q)$(LIB_DIR)$(D)org.eclipse.osgi_3.16.100.v20200904-1304.jar$(Q) .; \\\n+\t\ttrue CacheManagement.jar ; \\\n+\t\t$(Q)$(TEST_JDK_HOME)$(D)bin$(D)jar$(EXECUTABLE_SUFFIX)$(Q) xf cdsadaptortest.jar; \\\n+\t\t$(CONVERT_TO_EBCDIC_CMD) \\\n+\t\t$(JAVA_COMMAND) $(JVM_OPTIONS) \\\n+\t\t-DJARPATH=$(Q)$(TEST_RESROOT)$(D)cdsadaptortest.jar$(Q) \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDcwOTMxMA=="}, "originalCommit": {"oid": "46a575ac2a5e99544a61aca03b3de7d56c69e699"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTQ4ODk1OnYy", "diffSide": "RIGHT", "path": "test/functional/cmdLineTests/CDSAdaptorTest/resources/TestBundle/src/com/ibm/testbundle/SomeMessageV1.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzozMDowOFrOHxXISQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjoyNDoxOVrOHxmuHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyMTIyNQ==", "bodyText": "This author annotation can be removed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521521225", "createdAt": "2020-11-11T17:30:08Z", "author": {"login": "hangshao0"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/resources/TestBundle/src/com/ibm/testbundle/SomeMessageV1.java", "diffHunk": "@@ -1,17 +1,39 @@\n-package com.ibm.testbundle;\r\n-\r\n-/**\r\n- * A dummy program to print some message\r\n- *  \r\n- * @author administrator\r\n- *\r\n- */\r\n-public class SomeMessageV1 {\r\n-\r\n-\t/* If weaving hook bundle (com.ibm.weavinghooktest) is installed and running, \r\n-\t * it will replace the class bytes of this class with that of SomeMessageV2.\r\n-\t */\r\n-\tpublic void printMessage() {\r\n-\t\tSystem.out.println(\"A message from original class\");\r\n-\t}\r\n-}\r\n+/*******************************************************************************\n+ * Copyright (c) 2001, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+\n+package com.ibm.testbundle;\n+\n+/**\n+ * A dummy program to print some message\n+ *  \n+ * @author administrator", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbe2d977aa8d45cb28d0d2d3e7e77ebf670928a3"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc3NjY3MQ==", "bodyText": "Author annotation have been removed. Thanks.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521776671", "createdAt": "2020-11-12T02:24:19Z", "author": {"login": "LongyuZhang"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/resources/TestBundle/src/com/ibm/testbundle/SomeMessageV1.java", "diffHunk": "@@ -1,17 +1,39 @@\n-package com.ibm.testbundle;\r\n-\r\n-/**\r\n- * A dummy program to print some message\r\n- *  \r\n- * @author administrator\r\n- *\r\n- */\r\n-public class SomeMessageV1 {\r\n-\r\n-\t/* If weaving hook bundle (com.ibm.weavinghooktest) is installed and running, \r\n-\t * it will replace the class bytes of this class with that of SomeMessageV2.\r\n-\t */\r\n-\tpublic void printMessage() {\r\n-\t\tSystem.out.println(\"A message from original class\");\r\n-\t}\r\n-}\r\n+/*******************************************************************************\n+ * Copyright (c) 2001, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+\n+package com.ibm.testbundle;\n+\n+/**\n+ * A dummy program to print some message\n+ *  \n+ * @author administrator", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyMTIyNQ=="}, "originalCommit": {"oid": "bbe2d977aa8d45cb28d0d2d3e7e77ebf670928a3"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTQ5MDU1OnYy", "diffSide": "RIGHT", "path": "test/functional/cmdLineTests/CDSAdaptorTest/resources/WeavinghookTest/src/com/ibm/weavinghooktest/Util.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzozMDo0MFrOHxXJUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjoyNDoyOFrOHxmuYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyMTQ5MQ==", "bodyText": "This author annotation can be removed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521521491", "createdAt": "2020-11-11T17:30:40Z", "author": {"login": "hangshao0"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/resources/WeavinghookTest/src/com/ibm/weavinghooktest/Util.java", "diffHunk": "@@ -1,100 +1,122 @@\n-package com.ibm.weavinghooktest;\r\n-\r\n-import java.io.ByteArrayOutputStream;\r\n-import java.io.IOException;\r\n-import java.io.InputStream;\r\n-import java.io.UnsupportedEncodingException;\r\n-import java.net.URL;\r\n-\r\n-import org.osgi.framework.Bundle;\r\n-\r\n-/**\r\n- * A utility class used by Weaving Hook to redefine class bytes of a given class\r\n- * \r\n- * @author administrator\r\n- */\r\n-public class Util {\r\n-\t\r\n-\t/*\r\n-\t * Returns class bytes of a specified class present in the specified bundle.\r\n-\t */\r\n-\tpublic static byte[] getClassBytes(Bundle bundle, String className) {\r\n-\t\tbyte classBytes[];\r\n-\t\t\r\n-\t\ttry {\r\n-\t\t\tString qualifiedClassName = className.replace('.', '/') + \".class\";\r\n-\t\t\tURL url = bundle.getEntry(qualifiedClassName);\r\n-\t\t\tif (url != null) {\r\n-\t\t\t\tInputStream in = url.openStream();\r\n-\t\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\r\n-\t\t\t\tint b;\r\n-\t\t\t\twhile ((b = in.read()) != -1) {\r\n-\t\t\t\t\tout.write(b);\r\n-\t\t\t\t}\r\n-\t\t\t\tin.close();\r\n-\t\t\t\tclassBytes = out.toByteArray();\r\n-\t\t\t} else {\r\n-\t\t\t\tclassBytes = null;\r\n-\t\t\t}\r\n-\t\t} catch (IOException e) {\t\t\t\r\n-\t\t\te.printStackTrace();\r\n-\t\t\treturn null;\r\n-\t\t}\r\n-\t\t\r\n-\t\treturn classBytes;\r\n-\t}\r\n-\t\r\n-\t// returns the index >= offset of the first occurrence of sequence in buffer\r\n-\tpublic static int indexOf(byte[] buffer, int offset, byte[] sequence)\r\n-\t{\r\n-\t\twhile (buffer.length - offset >= sequence.length) {\r\n-\t\t\tfor (int i = 0; i < sequence.length; i++) {\r\n-\t\t\t\tif (buffer[offset + i] != sequence[i]) {\r\n-\t\t\t\t\tbreak;\r\n-\t\t\t\t}\r\n-\t\t\t\tif (i == sequence.length - 1) {\r\n-\t\t\t\t\treturn offset;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t\toffset++;\r\n-\t\t}\r\n-\t\treturn -1;\r\n-\t}\r\n-\r\n-\t// replaces all occurrences of seq1 in original buffer with seq2\r\n-\tpublic static byte[] replaceAll(byte[] buffer, byte[] seq1, byte[] seq2) {\r\n-\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\r\n-\t\tint index, offset = 0;\r\n-\t\twhile ((index = indexOf(buffer, offset, seq1)) != -1) {\r\n-\t\t\tif (index - offset != 0) {\r\n-\t\t\t\tout.write(buffer, offset, index - offset);\r\n-\t\t\t}\r\n-\t\t\tout.write(seq2, 0, seq2.length);\r\n-\t\t\toffset = index + seq1.length;\r\n-\t\t}\r\n-\t\tif (offset < buffer.length) {\r\n-\t\t\tout.write(buffer, offset, buffer.length - offset);\r\n-\t\t}\r\n-\t\treturn out.toByteArray();\r\n-\t}\r\n-\t\r\n-\tpublic static byte[] replaceClassNames(byte[] classBytes, String originalClassName, String redefinedClassName) {\r\n-\t\t// replace all occurrences of the redefined class name with the original class name\r\n-\t\ttry {\r\n-\t\t\tbyte[] r = redefinedClassName.getBytes(\"UTF-8\");\r\n-\t\t\tbyte[] o = originalClassName.getBytes(\"UTF-8\");\r\n-\t\t\t// since this is a naive search and replace that doesn't\r\n-\t\t\t// take into account the structure of the class file, and\r\n-\t\t\t// hence would not update length fields, the two names must\r\n-\t\t\t// be of the same length\r\n-\t\t\tif (r.length != o.length) {\r\n-\t\t\t\treturn null;\r\n-\t\t\t}\r\n-\t\t\tclassBytes = Util.replaceAll(classBytes, r, o);\r\n-\t\t} catch (UnsupportedEncodingException e) {\r\n-\t\t\te.printStackTrace();\r\n-\t\t\treturn null;\r\n-\t\t}\r\n-\t\treturn classBytes;\r\n-\t}\r\n-}\r\n+/*******************************************************************************\n+ * Copyright (c) 2001, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+\n+package com.ibm.weavinghooktest;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.UnsupportedEncodingException;\n+import java.net.URL;\n+\n+import org.osgi.framework.Bundle;\n+\n+/**\n+ * A utility class used by Weaving Hook to redefine class bytes of a given class\n+ * \n+ * @author administrator", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbe2d977aa8d45cb28d0d2d3e7e77ebf670928a3"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc3NjczOQ==", "bodyText": "Author annotation have been removed. Thanks.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521776739", "createdAt": "2020-11-12T02:24:28Z", "author": {"login": "LongyuZhang"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/resources/WeavinghookTest/src/com/ibm/weavinghooktest/Util.java", "diffHunk": "@@ -1,100 +1,122 @@\n-package com.ibm.weavinghooktest;\r\n-\r\n-import java.io.ByteArrayOutputStream;\r\n-import java.io.IOException;\r\n-import java.io.InputStream;\r\n-import java.io.UnsupportedEncodingException;\r\n-import java.net.URL;\r\n-\r\n-import org.osgi.framework.Bundle;\r\n-\r\n-/**\r\n- * A utility class used by Weaving Hook to redefine class bytes of a given class\r\n- * \r\n- * @author administrator\r\n- */\r\n-public class Util {\r\n-\t\r\n-\t/*\r\n-\t * Returns class bytes of a specified class present in the specified bundle.\r\n-\t */\r\n-\tpublic static byte[] getClassBytes(Bundle bundle, String className) {\r\n-\t\tbyte classBytes[];\r\n-\t\t\r\n-\t\ttry {\r\n-\t\t\tString qualifiedClassName = className.replace('.', '/') + \".class\";\r\n-\t\t\tURL url = bundle.getEntry(qualifiedClassName);\r\n-\t\t\tif (url != null) {\r\n-\t\t\t\tInputStream in = url.openStream();\r\n-\t\t\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\r\n-\t\t\t\tint b;\r\n-\t\t\t\twhile ((b = in.read()) != -1) {\r\n-\t\t\t\t\tout.write(b);\r\n-\t\t\t\t}\r\n-\t\t\t\tin.close();\r\n-\t\t\t\tclassBytes = out.toByteArray();\r\n-\t\t\t} else {\r\n-\t\t\t\tclassBytes = null;\r\n-\t\t\t}\r\n-\t\t} catch (IOException e) {\t\t\t\r\n-\t\t\te.printStackTrace();\r\n-\t\t\treturn null;\r\n-\t\t}\r\n-\t\t\r\n-\t\treturn classBytes;\r\n-\t}\r\n-\t\r\n-\t// returns the index >= offset of the first occurrence of sequence in buffer\r\n-\tpublic static int indexOf(byte[] buffer, int offset, byte[] sequence)\r\n-\t{\r\n-\t\twhile (buffer.length - offset >= sequence.length) {\r\n-\t\t\tfor (int i = 0; i < sequence.length; i++) {\r\n-\t\t\t\tif (buffer[offset + i] != sequence[i]) {\r\n-\t\t\t\t\tbreak;\r\n-\t\t\t\t}\r\n-\t\t\t\tif (i == sequence.length - 1) {\r\n-\t\t\t\t\treturn offset;\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t\toffset++;\r\n-\t\t}\r\n-\t\treturn -1;\r\n-\t}\r\n-\r\n-\t// replaces all occurrences of seq1 in original buffer with seq2\r\n-\tpublic static byte[] replaceAll(byte[] buffer, byte[] seq1, byte[] seq2) {\r\n-\t\tByteArrayOutputStream out = new ByteArrayOutputStream();\r\n-\t\tint index, offset = 0;\r\n-\t\twhile ((index = indexOf(buffer, offset, seq1)) != -1) {\r\n-\t\t\tif (index - offset != 0) {\r\n-\t\t\t\tout.write(buffer, offset, index - offset);\r\n-\t\t\t}\r\n-\t\t\tout.write(seq2, 0, seq2.length);\r\n-\t\t\toffset = index + seq1.length;\r\n-\t\t}\r\n-\t\tif (offset < buffer.length) {\r\n-\t\t\tout.write(buffer, offset, buffer.length - offset);\r\n-\t\t}\r\n-\t\treturn out.toByteArray();\r\n-\t}\r\n-\t\r\n-\tpublic static byte[] replaceClassNames(byte[] classBytes, String originalClassName, String redefinedClassName) {\r\n-\t\t// replace all occurrences of the redefined class name with the original class name\r\n-\t\ttry {\r\n-\t\t\tbyte[] r = redefinedClassName.getBytes(\"UTF-8\");\r\n-\t\t\tbyte[] o = originalClassName.getBytes(\"UTF-8\");\r\n-\t\t\t// since this is a naive search and replace that doesn't\r\n-\t\t\t// take into account the structure of the class file, and\r\n-\t\t\t// hence would not update length fields, the two names must\r\n-\t\t\t// be of the same length\r\n-\t\t\tif (r.length != o.length) {\r\n-\t\t\t\treturn null;\r\n-\t\t\t}\r\n-\t\t\tclassBytes = Util.replaceAll(classBytes, r, o);\r\n-\t\t} catch (UnsupportedEncodingException e) {\r\n-\t\t\te.printStackTrace();\r\n-\t\t\treturn null;\r\n-\t\t}\r\n-\t\treturn classBytes;\r\n-\t}\r\n-}\r\n+/*******************************************************************************\n+ * Copyright (c) 2001, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+\n+package com.ibm.weavinghooktest;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.UnsupportedEncodingException;\n+import java.net.URL;\n+\n+import org.osgi.framework.Bundle;\n+\n+/**\n+ * A utility class used by Weaving Hook to redefine class bytes of a given class\n+ * \n+ * @author administrator", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyMTQ5MQ=="}, "originalCommit": {"oid": "bbe2d977aa8d45cb28d0d2d3e7e77ebf670928a3"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTQ5ODMwOnYy", "diffSide": "RIGHT", "path": "test/functional/cmdLineTests/CDSAdaptorTest/readme.txt", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzozMjo1OFrOHxXOYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjoyNDo1OFrOHxmu8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyMjc4NQ==", "bodyText": "In line 48, org.eclipse.osgi_<version>.jar: ......, probably you can mention cds adaptor is inside this jar.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521522785", "createdAt": "2020-11-11T17:32:58Z", "author": {"login": "hangshao0"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/readme.txt", "diffHunk": "@@ -25,11 +47,11 @@ Few guidelines/assumptions when writing/updating tests placed in this project:\n \t|\n \t|--org.eclipse.osgi_<version>.jar: this is Equinox jar file, an OSGi framework implementation.\n \t|\n-\t|--Test1Bundles: this directory contains bundles required by java class Test1.\n+\t|--TestBundle: this directory contains bundle source code required by java class TestBundle.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbe2d977aa8d45cb28d0d2d3e7e77ebf670928a3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc3Njg4MA==", "bodyText": "Added the information that this jar contains cds adaptor.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521776880", "createdAt": "2020-11-12T02:24:58Z", "author": {"login": "LongyuZhang"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/readme.txt", "diffHunk": "@@ -25,11 +47,11 @@ Few guidelines/assumptions when writing/updating tests placed in this project:\n \t|\n \t|--org.eclipse.osgi_<version>.jar: this is Equinox jar file, an OSGi framework implementation.\n \t|\n-\t|--Test1Bundles: this directory contains bundles required by java class Test1.\n+\t|--TestBundle: this directory contains bundle source code required by java class TestBundle.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyMjc4NQ=="}, "originalCommit": {"oid": "bbe2d977aa8d45cb28d0d2d3e7e77ebf670928a3"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTUyMjgzOnYy", "diffSide": "RIGHT", "path": "test/functional/cmdLineTests/CDSAdaptorTest/resources/TestBundle/src/com/ibm/testbundle/Activator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNzozNzo1NlrOHxXc4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwMjoyNTozMVrOHxmvmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyNjQ5OA==", "bodyText": "I see the package name is com.ibm.*, do we want to change that to something like org.openj9.* ? @llxia", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521526498", "createdAt": "2020-11-11T17:37:56Z", "author": {"login": "hangshao0"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/resources/TestBundle/src/com/ibm/testbundle/Activator.java", "diffHunk": "@@ -1,52 +1,74 @@\n-package com.ibm.testbundle;\r\n-\r\n-import org.osgi.framework.Bundle;\r\n-import org.osgi.framework.BundleActivator;\r\n-import org.osgi.framework.BundleContext;\r\n-\r\n-public class Activator implements BundleActivator {\r\n-\r\n-\tpublic static final String WEAVING_HOOK_BUNDLE_SYMBOLIC_NAME = \"com.ibm.weavinghooktest\";\r\n-\t\r\n-\tprivate static BundleContext context;\r\n-\t\r\n-\tstatic BundleContext getContext() {\r\n-\t\treturn context;\r\n-\t}\r\n-\r\n-\t/*\r\n-\t * (non-Javadoc)\r\n-\t * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)\r\n-\t */\r\n-\tpublic void start(BundleContext bundleContext) throws Exception {\r\n-\t\tActivator.context = bundleContext;\r\n-\t\t\r\n-\t\tBundle[] bundleList = bundleContext.getBundles();\r\n-\t\tBundle weavingHookBundle = null;\r\n-\t\t/* If weaving hook bundle is installed and not yet started, \r\n-\t\t * start it now before accessing SomeMessageV1 class \r\n-\t\t */ \r\n-\t\tfor (int i = 0; i < bundleList.length; i++) {\r\n-\t\t\tString symbolicName = bundleList[i].getSymbolicName();\r\n-\t\t\tif (symbolicName.equals(WEAVING_HOOK_BUNDLE_SYMBOLIC_NAME)) {\r\n-\t\t\t\tweavingHookBundle = bundleList[i];\r\n-\t\t\t\tbreak;\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\tif ((weavingHookBundle != null) && (weavingHookBundle.getState() == Bundle.RESOLVED)) {\r\n-\t\t\tweavingHookBundle.start();\r\n-\t\t}\r\n-\t\t\r\n-\t\tSomeMessageV1 obj = new SomeMessageV1();\r\n-\t\tobj.printMessage();\r\n-\t}\r\n-\r\n-\t/*\r\n-\t * (non-Javadoc)\r\n-\t * @see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)\r\n-\t */\r\n-\tpublic void stop(BundleContext bundleContext) throws Exception {\r\n-\t\tActivator.context = null;\r\n-\t}\r\n-\r\n-}\r\n+/*******************************************************************************\n+ * Copyright (c) 2001, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+\n+package com.ibm.testbundle;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbe2d977aa8d45cb28d0d2d3e7e77ebf670928a3"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU1ODkwMQ==", "bodyText": "yes, it is better to use org.openj9.*", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521558901", "createdAt": "2020-11-11T18:32:45Z", "author": {"login": "llxia"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/resources/TestBundle/src/com/ibm/testbundle/Activator.java", "diffHunk": "@@ -1,52 +1,74 @@\n-package com.ibm.testbundle;\r\n-\r\n-import org.osgi.framework.Bundle;\r\n-import org.osgi.framework.BundleActivator;\r\n-import org.osgi.framework.BundleContext;\r\n-\r\n-public class Activator implements BundleActivator {\r\n-\r\n-\tpublic static final String WEAVING_HOOK_BUNDLE_SYMBOLIC_NAME = \"com.ibm.weavinghooktest\";\r\n-\t\r\n-\tprivate static BundleContext context;\r\n-\t\r\n-\tstatic BundleContext getContext() {\r\n-\t\treturn context;\r\n-\t}\r\n-\r\n-\t/*\r\n-\t * (non-Javadoc)\r\n-\t * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)\r\n-\t */\r\n-\tpublic void start(BundleContext bundleContext) throws Exception {\r\n-\t\tActivator.context = bundleContext;\r\n-\t\t\r\n-\t\tBundle[] bundleList = bundleContext.getBundles();\r\n-\t\tBundle weavingHookBundle = null;\r\n-\t\t/* If weaving hook bundle is installed and not yet started, \r\n-\t\t * start it now before accessing SomeMessageV1 class \r\n-\t\t */ \r\n-\t\tfor (int i = 0; i < bundleList.length; i++) {\r\n-\t\t\tString symbolicName = bundleList[i].getSymbolicName();\r\n-\t\t\tif (symbolicName.equals(WEAVING_HOOK_BUNDLE_SYMBOLIC_NAME)) {\r\n-\t\t\t\tweavingHookBundle = bundleList[i];\r\n-\t\t\t\tbreak;\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\tif ((weavingHookBundle != null) && (weavingHookBundle.getState() == Bundle.RESOLVED)) {\r\n-\t\t\tweavingHookBundle.start();\r\n-\t\t}\r\n-\t\t\r\n-\t\tSomeMessageV1 obj = new SomeMessageV1();\r\n-\t\tobj.printMessage();\r\n-\t}\r\n-\r\n-\t/*\r\n-\t * (non-Javadoc)\r\n-\t * @see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)\r\n-\t */\r\n-\tpublic void stop(BundleContext bundleContext) throws Exception {\r\n-\t\tActivator.context = null;\r\n-\t}\r\n-\r\n-}\r\n+/*******************************************************************************\n+ * Copyright (c) 2001, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+\n+package com.ibm.testbundle;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyNjQ5OA=="}, "originalCommit": {"oid": "bbe2d977aa8d45cb28d0d2d3e7e77ebf670928a3"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU3Nzg0OQ==", "bodyText": "Probably org.openj9.test.*", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521577849", "createdAt": "2020-11-11T19:08:19Z", "author": {"login": "hangshao0"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/resources/TestBundle/src/com/ibm/testbundle/Activator.java", "diffHunk": "@@ -1,52 +1,74 @@\n-package com.ibm.testbundle;\r\n-\r\n-import org.osgi.framework.Bundle;\r\n-import org.osgi.framework.BundleActivator;\r\n-import org.osgi.framework.BundleContext;\r\n-\r\n-public class Activator implements BundleActivator {\r\n-\r\n-\tpublic static final String WEAVING_HOOK_BUNDLE_SYMBOLIC_NAME = \"com.ibm.weavinghooktest\";\r\n-\t\r\n-\tprivate static BundleContext context;\r\n-\t\r\n-\tstatic BundleContext getContext() {\r\n-\t\treturn context;\r\n-\t}\r\n-\r\n-\t/*\r\n-\t * (non-Javadoc)\r\n-\t * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)\r\n-\t */\r\n-\tpublic void start(BundleContext bundleContext) throws Exception {\r\n-\t\tActivator.context = bundleContext;\r\n-\t\t\r\n-\t\tBundle[] bundleList = bundleContext.getBundles();\r\n-\t\tBundle weavingHookBundle = null;\r\n-\t\t/* If weaving hook bundle is installed and not yet started, \r\n-\t\t * start it now before accessing SomeMessageV1 class \r\n-\t\t */ \r\n-\t\tfor (int i = 0; i < bundleList.length; i++) {\r\n-\t\t\tString symbolicName = bundleList[i].getSymbolicName();\r\n-\t\t\tif (symbolicName.equals(WEAVING_HOOK_BUNDLE_SYMBOLIC_NAME)) {\r\n-\t\t\t\tweavingHookBundle = bundleList[i];\r\n-\t\t\t\tbreak;\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\tif ((weavingHookBundle != null) && (weavingHookBundle.getState() == Bundle.RESOLVED)) {\r\n-\t\t\tweavingHookBundle.start();\r\n-\t\t}\r\n-\t\t\r\n-\t\tSomeMessageV1 obj = new SomeMessageV1();\r\n-\t\tobj.printMessage();\r\n-\t}\r\n-\r\n-\t/*\r\n-\t * (non-Javadoc)\r\n-\t * @see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)\r\n-\t */\r\n-\tpublic void stop(BundleContext bundleContext) throws Exception {\r\n-\t\tActivator.context = null;\r\n-\t}\r\n-\r\n-}\r\n+/*******************************************************************************\n+ * Copyright (c) 2001, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+\n+package com.ibm.testbundle;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyNjQ5OA=="}, "originalCommit": {"oid": "bbe2d977aa8d45cb28d0d2d3e7e77ebf670928a3"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTc3NzA1MQ==", "bodyText": "Package name changed to org.openj9.test as suggested. Thanks.", "url": "https://github.com/eclipse-openj9/openj9/pull/10891#discussion_r521777051", "createdAt": "2020-11-12T02:25:31Z", "author": {"login": "LongyuZhang"}, "path": "test/functional/cmdLineTests/CDSAdaptorTest/resources/TestBundle/src/com/ibm/testbundle/Activator.java", "diffHunk": "@@ -1,52 +1,74 @@\n-package com.ibm.testbundle;\r\n-\r\n-import org.osgi.framework.Bundle;\r\n-import org.osgi.framework.BundleActivator;\r\n-import org.osgi.framework.BundleContext;\r\n-\r\n-public class Activator implements BundleActivator {\r\n-\r\n-\tpublic static final String WEAVING_HOOK_BUNDLE_SYMBOLIC_NAME = \"com.ibm.weavinghooktest\";\r\n-\t\r\n-\tprivate static BundleContext context;\r\n-\t\r\n-\tstatic BundleContext getContext() {\r\n-\t\treturn context;\r\n-\t}\r\n-\r\n-\t/*\r\n-\t * (non-Javadoc)\r\n-\t * @see org.osgi.framework.BundleActivator#start(org.osgi.framework.BundleContext)\r\n-\t */\r\n-\tpublic void start(BundleContext bundleContext) throws Exception {\r\n-\t\tActivator.context = bundleContext;\r\n-\t\t\r\n-\t\tBundle[] bundleList = bundleContext.getBundles();\r\n-\t\tBundle weavingHookBundle = null;\r\n-\t\t/* If weaving hook bundle is installed and not yet started, \r\n-\t\t * start it now before accessing SomeMessageV1 class \r\n-\t\t */ \r\n-\t\tfor (int i = 0; i < bundleList.length; i++) {\r\n-\t\t\tString symbolicName = bundleList[i].getSymbolicName();\r\n-\t\t\tif (symbolicName.equals(WEAVING_HOOK_BUNDLE_SYMBOLIC_NAME)) {\r\n-\t\t\t\tweavingHookBundle = bundleList[i];\r\n-\t\t\t\tbreak;\r\n-\t\t\t}\r\n-\t\t}\r\n-\t\tif ((weavingHookBundle != null) && (weavingHookBundle.getState() == Bundle.RESOLVED)) {\r\n-\t\t\tweavingHookBundle.start();\r\n-\t\t}\r\n-\t\t\r\n-\t\tSomeMessageV1 obj = new SomeMessageV1();\r\n-\t\tobj.printMessage();\r\n-\t}\r\n-\r\n-\t/*\r\n-\t * (non-Javadoc)\r\n-\t * @see org.osgi.framework.BundleActivator#stop(org.osgi.framework.BundleContext)\r\n-\t */\r\n-\tpublic void stop(BundleContext bundleContext) throws Exception {\r\n-\t\tActivator.context = null;\r\n-\t}\r\n-\r\n-}\r\n+/*******************************************************************************\n+ * Copyright (c) 2001, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+\n+package com.ibm.testbundle;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTUyNjQ5OA=="}, "originalCommit": {"oid": "bbe2d977aa8d45cb28d0d2d3e7e77ebf670928a3"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1145, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}