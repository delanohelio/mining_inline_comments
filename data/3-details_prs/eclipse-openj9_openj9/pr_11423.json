{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1Mzk1OTE0", "number": 11423, "title": "Fix implementation of String equalsIgnoreCase() and regionMatches()", "bodyText": "Fixes: #11399\nAccording to the javadoc, equalsIgnoreCase() and regionMatches() both involve calling Character.toLowerCase(Character.toUpperCase(character)) on each character in the string. This PR matches that expected behaviour.\nAdded tests with Turkish characters for equalsIgnoreCase(), regionMatches() and compareToIgnoreCase().\nUses new helper charValuesEqualIgnoreCase() to compare if two characters are equal (case insensitive).", "createdAt": "2020-12-09T19:00:06Z", "url": "https://github.com/eclipse-openj9/openj9/pull/11423", "merged": true, "mergeCommit": {"oid": "8a09d26dbd5caeda37718369e6e591c5e7302be6"}, "closed": true, "closedAt": "2020-12-16T22:21:40Z", "author": {"login": "sharon-wang"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkls4SgFqTU0ODYyNTM1Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdm2k6cgFqTU1NDEzMjExMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjI1MzUy", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#pullrequestreview-548625352", "createdAt": "2020-12-09T21:29:39Z", "commit": {"oid": "a2d453c7d5ec2bf1c712af69ac78546fee9f8446"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMToyOTozOVrOICqWBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMTozMzo0MFrOICqflw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2MTgzMA==", "bodyText": "As per https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/String.html#equalsIgnoreCase(java.lang.String),\nTwo characters c1 and c2 are considered the same ignoring case if at least one of the following is true:\n\nThe two characters are the same (as compared by the == operator)\nCalling Character.toLowerCase(Character.toUpperCase(char)) on each character produces the same result\n\nCharacter.toLowerCase(Character.toUpperCase(char)) can be used instead of String. toUpperCase().", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r539661830", "createdAt": "2020-12-09T21:29:39Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1815,8 +1815,8 @@ public boolean equalsIgnoreCase(String string) {\n \t\t\tchar charAtO2Last = s2.charAtInternal(s1len - 1, s2Value);\n \n \t\t\tif (charAtO1Last != charAtO2Last\n-\t\t\t\t\t&& toUpperCase(charAtO1Last) != toUpperCase(charAtO2Last)\n-\t\t\t\t\t&& ((charAtO1Last <= 255 && charAtO2Last <= 255) || Character.toLowerCase(charAtO1Last) != Character.toLowerCase(charAtO2Last))\n+\t\t\t\t\t&& (Character.toLowerCase(toUpperCase(charAtO1Last)) != Character.toLowerCase(toUpperCase(charAtO2Last)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2d453c7d5ec2bf1c712af69ac78546fee9f8446"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2MzA1MQ==", "bodyText": "There are two public boolean equalsIgnoreCase(String string) within String.java, Java 8 version seems missing the fix.", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r539663051", "createdAt": "2020-12-09T21:31:39Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1844,9 +1844,10 @@ public boolean equalsIgnoreCase(String string) {\n \t\t\t\t}\n \t\t\t\t/*[ENDIF] JAVA_SPEC_VERSION >= 16 */\n \n-\t\t\t\tif (charAtO1 != charAtO2 &&\n-\t\t\t\t\t\ttoUpperCase(charAtO1) != toUpperCase(charAtO2) &&\n-\t\t\t\t\t\t((charAtO1 <= 255 && charAtO2 <= 255) || Character.toLowerCase(charAtO1) != Character.toLowerCase(charAtO2))) {\n+\t\t\t\tif (charAtO1 != charAtO2\n+\t\t\t\t\t\t&& (Character.toLowerCase(toUpperCase(charAtO1)) != Character.toLowerCase(toUpperCase(charAtO2)))\n+\t\t\t\t\t\t&& (charAtO1 <= 255 && charAtO2 <= 255)\n+\t\t\t\t) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2d453c7d5ec2bf1c712af69ac78546fee9f8446"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2NDI3OQ==", "bodyText": "Please add the testcase supplied within the issue to Test_String.java.", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r539664279", "createdAt": "2020-12-09T21:33:40Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1844,9 +1844,10 @@ public boolean equalsIgnoreCase(String string) {\n \t\t\t\t}\n \t\t\t\t/*[ENDIF] JAVA_SPEC_VERSION >= 16 */\n \n-\t\t\t\tif (charAtO1 != charAtO2 &&\n-\t\t\t\t\t\ttoUpperCase(charAtO1) != toUpperCase(charAtO2) &&\n-\t\t\t\t\t\t((charAtO1 <= 255 && charAtO2 <= 255) || Character.toLowerCase(charAtO1) != Character.toLowerCase(charAtO2))) {\n+\t\t\t\tif (charAtO1 != charAtO2\n+\t\t\t\t\t\t&& (Character.toLowerCase(toUpperCase(charAtO1)) != Character.toLowerCase(toUpperCase(charAtO2)))\n+\t\t\t\t\t\t&& (charAtO1 <= 255 && charAtO2 <= 255)\n+\t\t\t\t) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTY2MzA1MQ=="}, "originalCommit": {"oid": "a2d453c7d5ec2bf1c712af69ac78546fee9f8446"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2d453c7d5ec2bf1c712af69ac78546fee9f8446", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a2d453c7d5ec2bf1c712af69ac78546fee9f8446", "committedDate": "2020-12-09T18:57:27Z", "message": "Fix implementation of String.equalsIgnoreCase()\n\nAccording to the javadoc, compareToIgnoreCase() involves calling\nCharacter.toLowerCase(Character.toUpperCase(character)) on each\ncharacter in the string.\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "a3b46a4f8fddf03a378e9e3b65466eda0e74f3be", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a3b46a4f8fddf03a378e9e3b65466eda0e74f3be", "committedDate": "2020-12-09T22:23:57Z", "message": "Fix implementation of String.equalsIgnoreCase()\n\nAccording to the javadoc, compareToIgnoreCase() involves calling\nCharacter.toLowerCase(Character.toUpperCase(character)) on each\ncharacter in the string.\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3b46a4f8fddf03a378e9e3b65466eda0e74f3be", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a3b46a4f8fddf03a378e9e3b65466eda0e74f3be", "committedDate": "2020-12-09T22:23:57Z", "message": "Fix implementation of String.equalsIgnoreCase()\n\nAccording to the javadoc, compareToIgnoreCase() involves calling\nCharacter.toLowerCase(Character.toUpperCase(character)) on each\ncharacter in the string.\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "027813231a0044009f45064633c2f8337b007c77", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/027813231a0044009f45064633c2f8337b007c77", "committedDate": "2020-12-09T22:57:41Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, compareToIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4Njk4NzE2", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#pullrequestreview-548698716", "createdAt": "2020-12-09T23:27:15Z", "commit": {"oid": "027813231a0044009f45064633c2f8337b007c77"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzoyNzoxNVrOICuMGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzoyOTo0MFrOICuQKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcyNDgyNw==", "bodyText": "Please add a few more testcases such as \\u0131 & \\u0130 are at middle or end of a string instead of just a single character string.\nIn addition, could you verify all test cases also pass with -XX:+CompactStrings?", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r539724827", "createdAt": "2020-12-09T23:27:15Z", "author": {"login": "JasonFengJ9"}, "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_String.java", "diffHunk": "@@ -585,6 +585,8 @@ public void test_equals() {\n \t@Test\n \tpublic void test_equalsIgnoreCase() {\n \t\tAssertJUnit.assertTrue(\"lc version returned unequal to uc\", hwlc.equalsIgnoreCase(hwuc));\n+\t\tAssertJUnit.assertTrue(\"Turkish '\u0131' lc version returned unequal to '\u0130' uc\", \"\\u0131\".equalsIgnoreCase(\"\\u0130\"));\n+\t\tAssertJUnit.assertTrue(\"Turkish 'i's with 'j' lc version returned unequal to uc\", \"\\u0131\\u0049j\".equalsIgnoreCase(\"\\u0069\\u0049J\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "027813231a0044009f45064633c2f8337b007c77"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcyNTg2NA==", "bodyText": "nitpick: please add parentheses for this condition, same for following similar conditions.", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r539725864", "createdAt": "2020-12-09T23:29:40Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1794,29 +1794,33 @@ public boolean equalsIgnoreCase(String string) {\n \t\t\tbyte byteAtO1Last = helpers.getByteFromArrayByIndex(s1Value, s1len - 1);\n \t\t\tbyte byteAtO2Last = helpers.getByteFromArrayByIndex(s2Value, s1len - 1);\n \n-\t\t\tif (byteAtO1Last != byteAtO2Last &&\n-\t\t\t\t\ttoUpperCase(helpers.byteToCharUnsigned(byteAtO1Last)) != toUpperCase(helpers.byteToCharUnsigned(byteAtO2Last))) {\n+\t\t\tif (byteAtO1Last != byteAtO2Last", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "027813231a0044009f45064633c2f8337b007c77"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "027813231a0044009f45064633c2f8337b007c77", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/027813231a0044009f45064633c2f8337b007c77", "committedDate": "2020-12-09T22:57:41Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, compareToIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "fcbd73d4ae572d517af458bce687cf807eef3ccc", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/fcbd73d4ae572d517af458bce687cf807eef3ccc", "committedDate": "2020-12-10T00:07:18Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, compareToIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fcbd73d4ae572d517af458bce687cf807eef3ccc", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/fcbd73d4ae572d517af458bce687cf807eef3ccc", "committedDate": "2020-12-10T00:07:18Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, compareToIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "4899053081b5b91862a366ced60576e426efdb08", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4899053081b5b91862a366ced60576e426efdb08", "committedDate": "2020-12-10T00:07:40Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, compareToIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4899053081b5b91862a366ced60576e426efdb08", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4899053081b5b91862a366ced60576e426efdb08", "committedDate": "2020-12-10T00:07:40Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, compareToIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "0d017f1e95cd7a5bd2eee0930686e46f0e19efa6", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0d017f1e95cd7a5bd2eee0930686e46f0e19efa6", "committedDate": "2020-12-10T00:13:47Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, compareToIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MTk0MDMz", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#pullrequestreview-549194033", "createdAt": "2020-12-10T13:28:27Z", "commit": {"oid": "0d017f1e95cd7a5bd2eee0930686e46f0e19efa6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMzoyODoyOFrOIDJO3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxMzo0Mzo1N1rOIDJ4oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE2NzkwMQ==", "bodyText": "Is this change introduced to fix an existing equalsIgnoreCase problem?\nprivate static int toUpperCase(int codePoint) invokes Character.toUpperCase() internally but avoid it for case codePoint < 128 apparently for performance reason.", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r540167901", "createdAt": "2020-12-10T13:28:28Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1794,29 +1794,33 @@ public boolean equalsIgnoreCase(String string) {\n \t\t\tbyte byteAtO1Last = helpers.getByteFromArrayByIndex(s1Value, s1len - 1);\n \t\t\tbyte byteAtO2Last = helpers.getByteFromArrayByIndex(s2Value, s1len - 1);\n \n-\t\t\tif (byteAtO1Last != byteAtO2Last &&\n-\t\t\t\t\ttoUpperCase(helpers.byteToCharUnsigned(byteAtO1Last)) != toUpperCase(helpers.byteToCharUnsigned(byteAtO2Last))) {\n+\t\t\tif ((byteAtO1Last != byteAtO2Last)\n+\t\t\t\t\t&& (Character.toUpperCase(helpers.byteToCharUnsigned(byteAtO1Last)) != Character.toUpperCase(helpers.byteToCharUnsigned(byteAtO2Last)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d017f1e95cd7a5bd2eee0930686e46f0e19efa6"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE3ODU5Mw==", "bodyText": "Existing code checks (charAtO1Last <= 255 && charAtO2Last <= 255) along with || Character.toLowerCase(charAtO1Last) != Character.toLowerCase(charAtO2Last)), now it is required alone as one of conditions, it doesn't seem right.\nDoes this change pass a personal build test suite like sanity.functional?", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r540178593", "createdAt": "2020-12-10T13:43:57Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1794,29 +1794,33 @@ public boolean equalsIgnoreCase(String string) {\n \t\t\tbyte byteAtO1Last = helpers.getByteFromArrayByIndex(s1Value, s1len - 1);\n \t\t\tbyte byteAtO2Last = helpers.getByteFromArrayByIndex(s2Value, s1len - 1);\n \n-\t\t\tif (byteAtO1Last != byteAtO2Last &&\n-\t\t\t\t\ttoUpperCase(helpers.byteToCharUnsigned(byteAtO1Last)) != toUpperCase(helpers.byteToCharUnsigned(byteAtO2Last))) {\n+\t\t\tif ((byteAtO1Last != byteAtO2Last)\n+\t\t\t\t\t&& (Character.toUpperCase(helpers.byteToCharUnsigned(byteAtO1Last)) != Character.toUpperCase(helpers.byteToCharUnsigned(byteAtO2Last)))\n+\t\t\t) {\n \t\t\t\treturn false;\n \t\t\t}\n \n \t\t\twhile (o1 < end - 1) {\n \t\t\t\tbyte byteAtO1 = helpers.getByteFromArrayByIndex(s1Value, o1++);\n \t\t\t\tbyte byteAtO2 = helpers.getByteFromArrayByIndex(s2Value, o2++);\n \n-\t\t\t\tif (byteAtO1 != byteAtO2 &&\n-\t\t\t\t\t\ttoUpperCase(helpers.byteToCharUnsigned(byteAtO1)) != toUpperCase(helpers.byteToCharUnsigned(byteAtO2))) {\n+\t\t\t\tif ((byteAtO1 != byteAtO2)\n+\t\t\t\t\t\t&& (Character.toUpperCase(helpers.byteToCharUnsigned(byteAtO1)) != Character.toUpperCase(helpers.byteToCharUnsigned(byteAtO2)))\n+\t\t\t\t) {\n \t\t\t\t\treturn false;\n \t\t\t\t}\n \t\t\t}\n \t\t} else {\n-\t\t\t// Compare the last chars. Under string compression, the compressible char set obeys 1-1 mapping for upper/lower\n-\t\t\t// case, converting to lower cases then compare should be sufficient.\n+\t\t\t// Compare the last chars.\n+\t\t\t// In order to tell 2 chars are different:\n+\t\t\t// If at least one char is ASCII, converting to upper cases then compare should be sufficient.\n+\t\t\t// If both chars are not in ASCII char set, need to convert to lower case and compare as well.\n \t\t\tchar charAtO1Last = s1.charAtInternal(s1len - 1, s1Value);\n \t\t\tchar charAtO2Last = s2.charAtInternal(s1len - 1, s2Value);\n \n-\t\t\tif (charAtO1Last != charAtO2Last\n-\t\t\t\t\t&& toUpperCase(charAtO1Last) != toUpperCase(charAtO2Last)\n-\t\t\t\t\t&& ((charAtO1Last <= 255 && charAtO2Last <= 255) || Character.toLowerCase(charAtO1Last) != Character.toLowerCase(charAtO2Last))\n+\t\t\tif ((charAtO1Last != charAtO2Last)\n+\t\t\t\t\t&& (Character.toLowerCase(Character.toUpperCase(charAtO1Last)) != Character.toLowerCase(Character.toUpperCase(charAtO2Last)))\n+\t\t\t\t\t&& (charAtO1Last <= 255 && charAtO2Last <= 255)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d017f1e95cd7a5bd2eee0930686e46f0e19efa6"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0d017f1e95cd7a5bd2eee0930686e46f0e19efa6", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0d017f1e95cd7a5bd2eee0930686e46f0e19efa6", "committedDate": "2020-12-10T00:13:47Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, compareToIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "8f905c41037187db1169c4bac2d609ce1f17051e", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8f905c41037187db1169c4bac2d609ce1f17051e", "committedDate": "2020-12-10T21:32:05Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, compareToIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for compareToIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>\n\nUse compareValue and add test for compareToIgnoreCase\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f905c41037187db1169c4bac2d609ce1f17051e", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8f905c41037187db1169c4bac2d609ce1f17051e", "committedDate": "2020-12-10T21:32:05Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, compareToIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for compareToIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>\n\nUse compareValue and add test for compareToIgnoreCase\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "84407042cb3ff41759de3ad4278dcca19db4d14f", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/84407042cb3ff41759de3ad4278dcca19db4d14f", "committedDate": "2020-12-10T21:36:41Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>\n\nUse compareValue and add test for compareToIgnoreCase\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84407042cb3ff41759de3ad4278dcca19db4d14f", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/84407042cb3ff41759de3ad4278dcca19db4d14f", "committedDate": "2020-12-10T21:36:41Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>\n\nUse compareValue and add test for compareToIgnoreCase\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "e3cbba5afe91a074cb47dfa42102600facd7b82d", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e3cbba5afe91a074cb47dfa42102600facd7b82d", "committedDate": "2020-12-10T21:40:01Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>\n\nUse compareValue and add test for compareToIgnoreCase\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NzY1Njg3", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#pullrequestreview-549765687", "createdAt": "2020-12-11T02:52:10Z", "commit": {"oid": "e3cbba5afe91a074cb47dfa42102600facd7b82d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMjo1MjoxMFrOIDmw8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwMzowNzozN1rOIDnFNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY1MTc2MQ==", "bodyText": "Pls fix the comment, which mentions lower case although the code uses upper case.", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r540651761", "createdAt": "2020-12-11T02:52:10Z", "author": {"login": "pshipton"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1794,29 +1794,32 @@ public boolean equalsIgnoreCase(String string) {\n \t\t\tbyte byteAtO1Last = helpers.getByteFromArrayByIndex(s1Value, s1len - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3cbba5afe91a074cb47dfa42102600facd7b82d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY1MjkwMA==", "bodyText": "Pls fix comment here as well.", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r540652900", "createdAt": "2020-12-11T02:55:34Z", "author": {"login": "pshipton"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -5811,17 +5818,19 @@ public boolean equalsIgnoreCase(String string) {\n \t\t\tbyte byteAtO1Last = helpers.getByteFromArrayByIndex(s1Value, s1len - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3cbba5afe91a074cb47dfa42102600facd7b82d"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDY1Njk0OA==", "bodyText": "@fjeremic fyi. We're losing the <= 256 optimization here, do you think it's worth putting this into compareValue()?", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r540656948", "createdAt": "2020-12-11T03:07:37Z", "author": {"login": "pshipton"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1794,29 +1794,32 @@ public boolean equalsIgnoreCase(String string) {\n \t\t\tbyte byteAtO1Last = helpers.getByteFromArrayByIndex(s1Value, s1len - 1);\n \t\t\tbyte byteAtO2Last = helpers.getByteFromArrayByIndex(s2Value, s1len - 1);\n \n-\t\t\tif (byteAtO1Last != byteAtO2Last &&\n-\t\t\t\t\ttoUpperCase(helpers.byteToCharUnsigned(byteAtO1Last)) != toUpperCase(helpers.byteToCharUnsigned(byteAtO2Last))) {\n+\t\t\tif ((byteAtO1Last != byteAtO2Last)\n+\t\t\t\t\t&& (toUpperCase(helpers.byteToCharUnsigned(byteAtO1Last)) != toUpperCase(helpers.byteToCharUnsigned(byteAtO2Last)))\n+\t\t\t) {\n \t\t\t\treturn false;\n \t\t\t}\n \n \t\t\twhile (o1 < end - 1) {\n \t\t\t\tbyte byteAtO1 = helpers.getByteFromArrayByIndex(s1Value, o1++);\n \t\t\t\tbyte byteAtO2 = helpers.getByteFromArrayByIndex(s2Value, o2++);\n \n-\t\t\t\tif (byteAtO1 != byteAtO2 &&\n-\t\t\t\t\t\ttoUpperCase(helpers.byteToCharUnsigned(byteAtO1)) != toUpperCase(helpers.byteToCharUnsigned(byteAtO2))) {\n+\t\t\t\tif ((byteAtO1 != byteAtO2)\n+\t\t\t\t\t\t&& (toUpperCase(helpers.byteToCharUnsigned(byteAtO1)) != toUpperCase(helpers.byteToCharUnsigned(byteAtO2)))\n+\t\t\t\t) {\n \t\t\t\t\treturn false;\n \t\t\t\t}\n \t\t\t}\n \t\t} else {\n-\t\t\t// Compare the last chars. Under string compression, the compressible char set obeys 1-1 mapping for upper/lower\n-\t\t\t// case, converting to lower cases then compare should be sufficient.\n+\t\t\t// Compare the last chars.\n+\t\t\t// In order to tell 2 chars are different:\n+\t\t\t// If at least one char is ASCII, converting to upper cases then compare should be sufficient.\n+\t\t\t// If both chars are not in ASCII char set, need to convert to lower case and compare as well.\n \t\t\tchar charAtO1Last = s1.charAtInternal(s1len - 1, s1Value);\n \t\t\tchar charAtO2Last = s2.charAtInternal(s1len - 1, s2Value);\n \n-\t\t\tif (charAtO1Last != charAtO2Last\n-\t\t\t\t\t&& toUpperCase(charAtO1Last) != toUpperCase(charAtO2Last)\n-\t\t\t\t\t&& ((charAtO1Last <= 255 && charAtO2Last <= 255) || Character.toLowerCase(charAtO1Last) != Character.toLowerCase(charAtO2Last))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3cbba5afe91a074cb47dfa42102600facd7b82d"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3cbba5afe91a074cb47dfa42102600facd7b82d", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e3cbba5afe91a074cb47dfa42102600facd7b82d", "committedDate": "2020-12-10T21:40:01Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>\n\nUse compareValue and add test for compareToIgnoreCase\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "91c9e0a2a8f3271695dd804980641ba26d1316f6", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/91c9e0a2a8f3271695dd804980641ba26d1316f6", "committedDate": "2020-12-11T04:59:24Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>\n\nUse compareValue and add test for compareToIgnoreCase\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91c9e0a2a8f3271695dd804980641ba26d1316f6", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/91c9e0a2a8f3271695dd804980641ba26d1316f6", "committedDate": "2020-12-11T04:59:24Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>\n\nUse compareValue and add test for compareToIgnoreCase\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "c51e721bbb40290fd647a0da64a22d05a26aec49", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c51e721bbb40290fd647a0da64a22d05a26aec49", "committedDate": "2020-12-11T07:15:04Z", "message": "Use new helper charValuesEqual() for case insensitive char compare\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5ODUxOTYz", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#pullrequestreview-549851963", "createdAt": "2020-12-11T07:20:42Z", "commit": {"oid": "c51e721bbb40290fd647a0da64a22d05a26aec49"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNzoyMDo0MlrOIDsIOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwNzoyMDo0MlrOIDsIOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDczOTY0Mg==", "bodyText": "@pshipton Here's the new helper. This is now being used anytime we are checking equality for two chars in equalsIgnoreCase() and regionMatches().\nI've locally tested against the test cases in this PR (expected results are seen), but can run a sanity.functional test build if preferred.", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r540739642", "createdAt": "2020-12-11T07:20:42Z", "author": {"login": "sharon-wang"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1477,6 +1477,27 @@ private char compareValue(byte b) {\n \t\treturn Character.toLowerCase(Character.toUpperCase(helpers.byteToCharUnsigned(b)));\n \t}\n \n+\tprivate boolean charValuesEqual(char c1, char c2) {\n+\t\tboolean charValuesEqual = false;\n+\n+\t\tif (c1 == c2) {\n+\t\t\tcharValuesEqual = true;\n+\t\t} else {\n+\t\t\t// If at least one char is ASCII, converting to upper cases then compare should be sufficient.\n+\t\t\t// If both chars are not in ASCII char set, need to convert to lower case and compare as well.\n+\t\t\tchar c1upper = (char) toUpperCase(c1);\n+\t\t\tchar c2upper = (char) toUpperCase(c2);\n+\n+\t\t\tif (((c1 <= 255 || c2 <= 255) && (c1upper == c2upper))\n+\t\t\t\t\t|| (toLowerCase(c1upper) == toLowerCase(c2upper))\n+\t\t\t) {\n+\t\t\t\tcharValuesEqual = true;\n+\t\t\t}\n+\t\t}\n+\n+\t\treturn charValuesEqual;\n+\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51e721bbb40290fd647a0da64a22d05a26aec49"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMjA2NDM0", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#pullrequestreview-550206434", "createdAt": "2020-12-11T15:37:15Z", "commit": {"oid": "c51e721bbb40290fd647a0da64a22d05a26aec49"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNTozNzoxNlrOID-Hvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNTo0NTozMVrOID-fkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAzNDQzMA==", "bodyText": "Is this change required for functional correctness at enableCompression cases? i.e., does the testcase failed with -XX:+CompactStrings as well? Otherwise, additional toLowerCase() checking is being introduced here.", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r541034430", "createdAt": "2020-12-11T15:37:16Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1789,34 +1810,38 @@ public boolean equalsIgnoreCase(String string) {\n \t\tbyte[] s2Value = s2.value;\n \n \t\tif (enableCompression && (null == compressionFlag || (s1.coder | s2.coder) == LATIN1)) {\n-\t\t\t// Compare the last chars. Under string compression, the compressible char set obeys 1-1 mapping for upper/lower\n-\t\t\t// case, converting to lower cases then compare should be sufficient.\n+\t\t\t// Compare the last chars.\n+\t\t\t// In order to tell 2 chars are different:\n+\t\t\t// Under string compression, the compressible char set obeys 1-1 mapping for upper/lower case,\n+\t\t\t// converting to upper cases then compare should be sufficient.\n \t\t\tbyte byteAtO1Last = helpers.getByteFromArrayByIndex(s1Value, s1len - 1);\n \t\t\tbyte byteAtO2Last = helpers.getByteFromArrayByIndex(s2Value, s1len - 1);\n \n-\t\t\tif (byteAtO1Last != byteAtO2Last &&\n-\t\t\t\t\ttoUpperCase(helpers.byteToCharUnsigned(byteAtO1Last)) != toUpperCase(helpers.byteToCharUnsigned(byteAtO2Last))) {\n+\t\t\tif ((byteAtO1Last != byteAtO2Last)\n+\t\t\t\t\t&& (!charValuesEqual(helpers.byteToCharUnsigned(byteAtO1Last), helpers.byteToCharUnsigned(byteAtO2Last)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51e721bbb40290fd647a0da64a22d05a26aec49"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTAzNTM1MA==", "bodyText": "Similar question here and also for later enableCompression cases.", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r541035350", "createdAt": "2020-12-11T15:38:28Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1789,34 +1810,38 @@ public boolean equalsIgnoreCase(String string) {\n \t\tbyte[] s2Value = s2.value;\n \n \t\tif (enableCompression && (null == compressionFlag || (s1.coder | s2.coder) == LATIN1)) {\n-\t\t\t// Compare the last chars. Under string compression, the compressible char set obeys 1-1 mapping for upper/lower\n-\t\t\t// case, converting to lower cases then compare should be sufficient.\n+\t\t\t// Compare the last chars.\n+\t\t\t// In order to tell 2 chars are different:\n+\t\t\t// Under string compression, the compressible char set obeys 1-1 mapping for upper/lower case,\n+\t\t\t// converting to upper cases then compare should be sufficient.\n \t\t\tbyte byteAtO1Last = helpers.getByteFromArrayByIndex(s1Value, s1len - 1);\n \t\t\tbyte byteAtO2Last = helpers.getByteFromArrayByIndex(s2Value, s1len - 1);\n \n-\t\t\tif (byteAtO1Last != byteAtO2Last &&\n-\t\t\t\t\ttoUpperCase(helpers.byteToCharUnsigned(byteAtO1Last)) != toUpperCase(helpers.byteToCharUnsigned(byteAtO2Last))) {\n+\t\t\tif ((byteAtO1Last != byteAtO2Last)\n+\t\t\t\t\t&& (!charValuesEqual(helpers.byteToCharUnsigned(byteAtO1Last), helpers.byteToCharUnsigned(byteAtO2Last)))\n+\t\t\t) {\n \t\t\t\treturn false;\n \t\t\t}\n \n \t\t\twhile (o1 < end - 1) {\n \t\t\t\tbyte byteAtO1 = helpers.getByteFromArrayByIndex(s1Value, o1++);\n \t\t\t\tbyte byteAtO2 = helpers.getByteFromArrayByIndex(s2Value, o2++);\n \n-\t\t\t\tif (byteAtO1 != byteAtO2 &&\n-\t\t\t\t\t\ttoUpperCase(helpers.byteToCharUnsigned(byteAtO1)) != toUpperCase(helpers.byteToCharUnsigned(byteAtO2))) {\n+\t\t\t\tif ((byteAtO1 != byteAtO2)\n+\t\t\t\t\t\t&& (!charValuesEqual(helpers.byteToCharUnsigned(byteAtO1), helpers.byteToCharUnsigned(byteAtO2)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51e721bbb40290fd647a0da64a22d05a26aec49"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA0MDUzMQ==", "bodyText": "This method name might be mis-leading, it really means charValuesEqualIgnoreCase, right?", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r541040531", "createdAt": "2020-12-11T15:45:31Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1477,6 +1477,27 @@ private char compareValue(byte b) {\n \t\treturn Character.toLowerCase(Character.toUpperCase(helpers.byteToCharUnsigned(b)));\n \t}\n \n+\tprivate boolean charValuesEqual(char c1, char c2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c51e721bbb40290fd647a0da64a22d05a26aec49"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c51e721bbb40290fd647a0da64a22d05a26aec49", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c51e721bbb40290fd647a0da64a22d05a26aec49", "committedDate": "2020-12-11T07:15:04Z", "message": "Use new helper charValuesEqual() for case insensitive char compare\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "823e1c6296b9aca33f215c2e088c37d502ecc6da", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/823e1c6296b9aca33f215c2e088c37d502ecc6da", "committedDate": "2020-12-11T16:46:45Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\nUse new helper charValuesEqualIgnoreCase() to compare if two\ncharacters are equal (case insensitive).\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMjg1ODYy", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#pullrequestreview-550285862", "createdAt": "2020-12-11T16:55:31Z", "commit": {"oid": "823e1c6296b9aca33f215c2e088c37d502ecc6da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo1NTozMVrOIEBZhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo1NTozMVrOIEBZhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA4ODEzMg==", "bodyText": "Is it possible to change this to static?", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r541088132", "createdAt": "2020-12-11T16:55:31Z", "author": {"login": "fjeremic"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -1477,6 +1477,27 @@ private char compareValue(byte b) {\n \t\treturn Character.toLowerCase(Character.toUpperCase(helpers.byteToCharUnsigned(b)));\n \t}\n \n+\tprivate boolean charValuesEqualIgnoreCase(char c1, char c2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "823e1c6296b9aca33f215c2e088c37d502ecc6da"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMjkxNjQ4", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#pullrequestreview-550291648", "createdAt": "2020-12-11T16:59:42Z", "commit": {"oid": "823e1c6296b9aca33f215c2e088c37d502ecc6da"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo1OTo0MlrOIEBkug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo1OTo0MlrOIEBkug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5MTAwMg==", "bodyText": "I think we may be missing the charAtO1 != charAtO2 check here. I see the check is duplicated in charValuesEqualIgnoreCase which seems suboptimal. I think we should take the check out of charValuesEqualIgnoreCase and always perform it upfront before calling charValuesEqualIgnoreCase, otherwise performance will suck.", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#discussion_r541091002", "createdAt": "2020-12-11T16:59:42Z", "author": {"login": "fjeremic"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -2485,15 +2510,15 @@ public boolean regionMatches(boolean ignoreCase, int thisStart, String string, i\n \t\t\t\tif (Character.isHighSurrogate(charAtO1) && Character.isHighSurrogate(charAtO2) && (o1 < end)) {\n \t\t\t\t\tint codepointAtO1 = Character.toCodePoint(charAtO1, s1.charAtInternal(o1++, s1Value));\n \t\t\t\t\tint codepointAtO2 = Character.toCodePoint(charAtO2, s2.charAtInternal(o2++, s2Value));\n-\t\t\t\t\tif ((codepointAtO1 != codepointAtO2) && (compareValue(codepointAtO1) != compareValue(codepointAtO2))) {\n+\t\t\t\t\tif ((codepointAtO1 != codepointAtO2)\n+\t\t\t\t\t\t\t&& (compareValue(codepointAtO1) != compareValue(codepointAtO2))\n+\t\t\t\t\t) {\n \t\t\t\t\t\treturn false;\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t\t/*[ENDIF] JAVA_SPEC_VERSION >= 16 */\n \n-\t\t\t\tif (charAtO1 != charAtO2 &&\n-\t\t\t\t\t\ttoUpperCase(charAtO1) != toUpperCase(charAtO2) &&\n-\t\t\t\t\t\ttoLowerCase(charAtO1) != toLowerCase(charAtO2)) {\n+\t\t\t\tif (!charValuesEqualIgnoreCase(charAtO1, charAtO2)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "823e1c6296b9aca33f215c2e088c37d502ecc6da"}, "originalPosition": 129}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "823e1c6296b9aca33f215c2e088c37d502ecc6da", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/823e1c6296b9aca33f215c2e088c37d502ecc6da", "committedDate": "2020-12-11T16:46:45Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\nUse new helper charValuesEqualIgnoreCase() to compare if two\ncharacters are equal (case insensitive).\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "7a3bd0284c8488baf64703647b57ec5572c78a5e", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7a3bd0284c8488baf64703647b57ec5572c78a5e", "committedDate": "2020-12-11T20:39:41Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\nUse new helper charValuesEqualIgnoreCase() to compare if two\ncharacters are equal (case insensitive).\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a3bd0284c8488baf64703647b57ec5572c78a5e", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7a3bd0284c8488baf64703647b57ec5572c78a5e", "committedDate": "2020-12-11T20:39:41Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\nUse new helper charValuesEqualIgnoreCase() to compare if two\ncharacters are equal (case insensitive).\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "ce0fa8c09f6673df8afe67deab9ec223df74f726", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ce0fa8c09f6673df8afe67deab9ec223df74f726", "committedDate": "2020-12-11T21:53:07Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\nUse new helper charValuesEqualIgnoreCase() to compare if two\ncharacters are equal (case insensitive).\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "093e96f2a37564b2cf261d9df40d98b5fe468d42", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/093e96f2a37564b2cf261d9df40d98b5fe468d42", "committedDate": "2020-12-14T16:47:14Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\nUse new helper charValuesEqualIgnoreCase() to compare if two\ncharacters are equal (case insensitive).\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce0fa8c09f6673df8afe67deab9ec223df74f726", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ce0fa8c09f6673df8afe67deab9ec223df74f726", "committedDate": "2020-12-11T21:53:07Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\nUse new helper charValuesEqualIgnoreCase() to compare if two\ncharacters are equal (case insensitive).\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}, "afterCommit": {"oid": "093e96f2a37564b2cf261d9df40d98b5fe468d42", "author": {"user": {"login": "sharon-wang", "name": "Sharon Wang"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/093e96f2a37564b2cf261d9df40d98b5fe468d42", "committedDate": "2020-12-14T16:47:14Z", "message": "Fix String equalsIgnoreCase() and regionMatches() implementations\n\nAccording to the javadoc, equalsIgnoreCase() and regionMatches()\nboth involve calling\n    `Character.toLowerCase(Character.toUpperCase(character))`\non each character in the string.\n\nAdd tests with Turkish characters for equalsIgnoreCase(),\nregionMatches() and compareToIgnoreCase().\n\nUse new helper charValuesEqualIgnoreCase() to compare if two\ncharacters are equal (case insensitive).\n\n[skip ci]\n\nSigned-off-by: Sharon Wang <sharon-wang-cpsc@outlook.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzODI3OTQ2", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#pullrequestreview-553827946", "createdAt": "2020-12-16T15:53:43Z", "commit": {"oid": "093e96f2a37564b2cf261d9df40d98b5fe468d42"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MDYwOTE0", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#pullrequestreview-554060914", "createdAt": "2020-12-16T20:32:40Z", "commit": {"oid": "093e96f2a37564b2cf261d9df40d98b5fe468d42"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MTMyMTEw", "url": "https://github.com/eclipse-openj9/openj9/pull/11423#pullrequestreview-554132110", "createdAt": "2020-12-16T22:21:33Z", "commit": {"oid": "093e96f2a37564b2cf261d9df40d98b5fe468d42"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1486, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}