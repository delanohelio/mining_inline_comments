{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NzM4NjM1", "number": 10469, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjo1MjowMVrOEdTokg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjo1OTozMVrOEdTzHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTY1ODQyOnYy", "diffSide": "RIGHT", "path": "buildenv/jenkins/common/variables-functions.groovy", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjo1MjowMVrOHIY_3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjo1NToxMFrOHIZG4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2MDIyMA==", "bodyText": "This only gets executed on the nodes themselves correct, not on master?", "url": "https://github.com/eclipse-openj9/openj9/pull/10469#discussion_r478560220", "createdAt": "2020-08-27T16:52:01Z", "author": {"login": "jdekonin"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1436,4 +1433,31 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n         3, 120)\n }\n \n+def set_build_variables_per_node() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0f6fe7111922b6a8403e494c668a5dfdb8e26c8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2MTkxMg==", "bodyText": "To answer my own question based on a review of your PR build, yes it only executes on the node in the build job, not the higher level pipeline jobs.", "url": "https://github.com/eclipse-openj9/openj9/pull/10469#discussion_r478561912", "createdAt": "2020-08-27T16:55:00Z", "author": {"login": "jdekonin"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1436,4 +1433,31 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n         3, 120)\n }\n \n+def set_build_variables_per_node() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2MDIyMA=="}, "originalCommit": {"oid": "d0f6fe7111922b6a8403e494c668a5dfdb8e26c8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2MjAxNg==", "bodyText": "correct, see: https://github.com/eclipse/openj9/blob/d0f6fe7111922b6a8403e494c668a5dfdb8e26c8/buildenv/jenkins/common/build.groovy#L582", "url": "https://github.com/eclipse-openj9/openj9/pull/10469#discussion_r478562016", "createdAt": "2020-08-27T16:55:10Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1436,4 +1433,31 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n         3, 120)\n }\n \n+def set_build_variables_per_node() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2MDIyMA=="}, "originalCommit": {"oid": "d0f6fe7111922b6a8403e494c668a5dfdb8e26c8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTY4NTQwOnYy", "diffSide": "RIGHT", "path": "buildenv/jenkins/common/variables-functions.groovy", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjo1OTozMVrOHIZQ-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODozNzozNlrOHIcmkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2NDYwMA==", "bodyText": "Do we want to have a slightly more detailed message here instead of just blank?  Maybe a 'not configured for this node' to be more meaningful if its not present?", "url": "https://github.com/eclipse-openj9/openj9/pull/10469#discussion_r478564600", "createdAt": "2020-08-27T16:59:31Z", "author": {"login": "jdekonin"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1436,4 +1433,31 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n         3, 120)\n }\n \n+def set_build_variables_per_node() {\n+    BOOT_JDK = check_path(buildspec.getScalarField('boot_jdk', SDK_VERSION), true)\n+    println(\"BOOT_JDK: ${BOOT_JDK}\")\n+    if (!BOOT_JDK) {\n+        error(\"BOOT_JDK: ${BOOT_JDK} does not exist!\")\n+    }\n+\n+    def freemarkerPath = buildspec.getScalarField('freemarker', SDK_VERSION)\n+    FREEMARKER = check_path(buildspec.getScalarField('freemarker', SDK_VERSION), false)\n+    println(\"FREEMARKER: ${FREEMARKER}\")\n+    if (!FREEMARKER) {\n+        error(\"FREEMARKER: ${FREEMARKER} does not exist!\")\n+    }\n+\n+    OPENJDK_REFERENCE_REPO = check_path(buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION), true)\n+    println(\"OPENJDK_REFERENCE_REPO: ${OPENJDK_REFERENCE_REPO}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0f6fe7111922b6a8403e494c668a5dfdb8e26c8"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU4MTIyMA==", "bodyText": "We could add a warning, but should not stop the build.", "url": "https://github.com/eclipse-openj9/openj9/pull/10469#discussion_r478581220", "createdAt": "2020-08-27T17:28:47Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1436,4 +1433,31 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n         3, 120)\n }\n \n+def set_build_variables_per_node() {\n+    BOOT_JDK = check_path(buildspec.getScalarField('boot_jdk', SDK_VERSION), true)\n+    println(\"BOOT_JDK: ${BOOT_JDK}\")\n+    if (!BOOT_JDK) {\n+        error(\"BOOT_JDK: ${BOOT_JDK} does not exist!\")\n+    }\n+\n+    def freemarkerPath = buildspec.getScalarField('freemarker', SDK_VERSION)\n+    FREEMARKER = check_path(buildspec.getScalarField('freemarker', SDK_VERSION), false)\n+    println(\"FREEMARKER: ${FREEMARKER}\")\n+    if (!FREEMARKER) {\n+        error(\"FREEMARKER: ${FREEMARKER} does not exist!\")\n+    }\n+\n+    OPENJDK_REFERENCE_REPO = check_path(buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION), true)\n+    println(\"OPENJDK_REFERENCE_REPO: ${OPENJDK_REFERENCE_REPO}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2NDYwMA=="}, "originalCommit": {"oid": "d0f6fe7111922b6a8403e494c668a5dfdb8e26c8"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxNzcyNw==", "bodyText": "Agreed.  I like this change, 99% of the time nobody will notice, but for those few of us that debug to figure out why jobs (or clone) are slow this will be important information.", "url": "https://github.com/eclipse-openj9/openj9/pull/10469#discussion_r478617727", "createdAt": "2020-08-27T18:34:41Z", "author": {"login": "jdekonin"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1436,4 +1433,31 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n         3, 120)\n }\n \n+def set_build_variables_per_node() {\n+    BOOT_JDK = check_path(buildspec.getScalarField('boot_jdk', SDK_VERSION), true)\n+    println(\"BOOT_JDK: ${BOOT_JDK}\")\n+    if (!BOOT_JDK) {\n+        error(\"BOOT_JDK: ${BOOT_JDK} does not exist!\")\n+    }\n+\n+    def freemarkerPath = buildspec.getScalarField('freemarker', SDK_VERSION)\n+    FREEMARKER = check_path(buildspec.getScalarField('freemarker', SDK_VERSION), false)\n+    println(\"FREEMARKER: ${FREEMARKER}\")\n+    if (!FREEMARKER) {\n+        error(\"FREEMARKER: ${FREEMARKER} does not exist!\")\n+    }\n+\n+    OPENJDK_REFERENCE_REPO = check_path(buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION), true)\n+    println(\"OPENJDK_REFERENCE_REPO: ${OPENJDK_REFERENCE_REPO}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2NDYwMA=="}, "originalCommit": {"oid": "d0f6fe7111922b6a8403e494c668a5dfdb8e26c8"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYxOTI4MQ==", "bodyText": "I added a message The git cache OPENJDK_REFERENCE_REPO: <path or null> does not exist on <node name>! (see L1453 below).\nIt will output:\n\npath does not exist\n\n14:19:29  OPENJDK_REFERENCE_REPO: \n[Pipeline] echo\n14:19:29  The git cache OPENJDK_REFERENCE_REPO: ${HOME}/openjdk_cache_x does not exist on fyrec51l!\n\n\npath not set (openjdk_reference_repo not set in variables file)\n\n14:27:31  OPENJDK_REFERENCE_REPO: null\n[Pipeline] echo\n14:27:31  The git cache OPENJDK_REFERENCE_REPO: null does not exist on fyrec51g!", "url": "https://github.com/eclipse-openj9/openj9/pull/10469#discussion_r478619281", "createdAt": "2020-08-27T18:37:36Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1436,4 +1433,31 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n         3, 120)\n }\n \n+def set_build_variables_per_node() {\n+    BOOT_JDK = check_path(buildspec.getScalarField('boot_jdk', SDK_VERSION), true)\n+    println(\"BOOT_JDK: ${BOOT_JDK}\")\n+    if (!BOOT_JDK) {\n+        error(\"BOOT_JDK: ${BOOT_JDK} does not exist!\")\n+    }\n+\n+    def freemarkerPath = buildspec.getScalarField('freemarker', SDK_VERSION)\n+    FREEMARKER = check_path(buildspec.getScalarField('freemarker', SDK_VERSION), false)\n+    println(\"FREEMARKER: ${FREEMARKER}\")\n+    if (!FREEMARKER) {\n+        error(\"FREEMARKER: ${FREEMARKER} does not exist!\")\n+    }\n+\n+    OPENJDK_REFERENCE_REPO = check_path(buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION), true)\n+    println(\"OPENJDK_REFERENCE_REPO: ${OPENJDK_REFERENCE_REPO}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU2NDYwMA=="}, "originalCommit": {"oid": "d0f6fe7111922b6a8403e494c668a5dfdb8e26c8"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4746, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}