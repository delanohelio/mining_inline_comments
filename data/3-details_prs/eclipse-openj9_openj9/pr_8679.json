{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTE1MTYy", "number": 8679, "title": "Check if SCC is valid at startup", "bodyText": "Currently the check to see if the SCC is valid is done at the first\ncompilation. This is done on the load run to see if it is ok to load a\nmethod that was stored to the SCC. However, other parts of the compiler,\nsuch as the IProfiler, don't use this check.\nThis PR checks the validity of the SCC at startup and updates the\nglobal flag that all parts of the compiler check.\nFixes #7890\nFixes #8404\nFixes #8517", "createdAt": "2020-02-27T22:57:32Z", "url": "https://github.com/eclipse-openj9/openj9/pull/8679", "merged": true, "mergeCommit": {"oid": "ab9aab6ba27fbb84452aec9e186850c59f63a424"}, "closed": true, "closedAt": "2020-03-05T13:28:39Z", "author": {"login": "dsouzai"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIm3uSAFqTM2NjEzMjU3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKriEHgFqTM2OTU2NTU3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTMyNTcy", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#pullrequestreview-366132572", "createdAt": "2020-02-28T02:47:49Z", "commit": {"oid": "b1ab0cb009edb6a2eb4f5bd6231c8a91f15d12b5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMjo0Nzo0OVrOFvoAYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMjo1NDozNlrOFvoFxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4Mjg1MA==", "bodyText": "Do we actually need a TR_J9SharedCacheVM frontend? As far as I can tell we only need the frontend to ask if it asynchronous compilation is disabled.", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#discussion_r385482850", "createdAt": "2020-02-28T02:47:49Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/rossa.cpp", "diffHunk": "@@ -1868,13 +1868,24 @@ aboutToBootstrap(J9JavaVM * javaVM, J9JITConfig * jitConfig)\n #if defined(J9VM_OPT_SHARED_CLASSES)\n    if (isSharedAOT)\n       {\n-      /* If AOT Shared Classes is turned ON, perform compatibility checks for AOT Shared Classes */\n-      if (0) //!validateSharedClassAOTHeader(javaVM, curThread, compInfo))\n+      /* If AOT Shared Classes is turned ON, perform compatibility checks for AOT Shared Classes\n+       *\n+       * This check has to be done after latePostProcessJIT so that all the necessary JIT options\n+       * can be set\n+       */\n+      TR_J9SharedCacheVM *fe = (TR_J9SharedCacheVM *) TR_J9VMBase::get(jitConfig, curThread, TR_J9VMBase::AOT_VM);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1ab0cb009edb6a2eb4f5bd6231c8a91f15d12b5"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ4NDIzMQ==", "bodyText": "I wonder is there is any problem when there is no header, but the SCC has been created by another JVM, maybe because that JVM didn't have the time to generate any AOT compilations. Could IProfiler be present in such an SCC and therefore defeat the check here?", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#discussion_r385484231", "createdAt": "2020-02-28T02:54:36Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/rossa.cpp", "diffHunk": "@@ -1868,13 +1868,24 @@ aboutToBootstrap(J9JavaVM * javaVM, J9JITConfig * jitConfig)\n #if defined(J9VM_OPT_SHARED_CLASSES)\n    if (isSharedAOT)\n       {\n-      /* If AOT Shared Classes is turned ON, perform compatibility checks for AOT Shared Classes */\n-      if (0) //!validateSharedClassAOTHeader(javaVM, curThread, compInfo))\n+      /* If AOT Shared Classes is turned ON, perform compatibility checks for AOT Shared Classes\n+       *\n+       * This check has to be done after latePostProcessJIT so that all the necessary JIT options\n+       * can be set\n+       */\n+      TR_J9SharedCacheVM *fe = (TR_J9SharedCacheVM *) TR_J9VMBase::get(jitConfig, curThread, TR_J9VMBase::AOT_VM);\n+      if (!compInfo->reloRuntime()->validateAOTHeader(fe, curThread))\n          {\n-         TR::Options::getAOTCmdLineOptions()->setOption(TR_NoLoadAOT);\n-         TR::Options::getAOTCmdLineOptions()->setOption(TR_NoStoreAOT);\n-         TR::Options::setSharedClassCache(false);\n-         TR_J9SharedCache::setSharedCacheDisabledReason(TR_J9SharedCache::AOT_DISABLED);\n+         /* This could be the first run, in which case validateAOTHeader might return false because", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1ab0cb009edb6a2eb4f5bd6231c8a91f15d12b5"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1ab0cb009edb6a2eb4f5bd6231c8a91f15d12b5", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b1ab0cb009edb6a2eb4f5bd6231c8a91f15d12b5", "committedDate": "2020-02-27T22:53:27Z", "message": "Check if SCC is valid at startup\n\nCurrently the check to see if the SCC is valid is done at the first\ncompilation. This is done on the load run to see if it is ok to load a\nmethod that was stored to the SCC. However, other parts of the compiler,\nsuch as the IProfiler, don't use this check.\n\nThis commit checks the validity of the SCC at startup and updates the\nglobal flag that all parts of the compiler check.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}, "afterCommit": {"oid": "e6d98543cd4958d72b4ca77d27117e58fd45e830", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e6d98543cd4958d72b4ca77d27117e58fd45e830", "committedDate": "2020-03-03T16:36:46Z", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6d98543cd4958d72b4ca77d27117e58fd45e830", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e6d98543cd4958d72b4ca77d27117e58fd45e830", "committedDate": "2020-03-03T16:36:46Z", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}, "afterCommit": {"oid": "241d21257ae800c571244e6737bf65b6de8fab7b", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/241d21257ae800c571244e6737bf65b6de8fab7b", "committedDate": "2020-03-03T16:38:39Z", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MTY5MjQz", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#pullrequestreview-368169243", "createdAt": "2020-03-03T17:15:12Z", "commit": {"oid": "241d21257ae800c571244e6737bf65b6de8fab7b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "241d21257ae800c571244e6737bf65b6de8fab7b", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/241d21257ae800c571244e6737bf65b6de8fab7b", "committedDate": "2020-03-03T16:38:39Z", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}, "afterCommit": {"oid": "9ce1ba640409ad4434bc52f23251eb941b7451db", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9ce1ba640409ad4434bc52f23251eb941b7451db", "committedDate": "2020-03-04T15:16:34Z", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4ODY2Njgw", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#pullrequestreview-368866680", "createdAt": "2020-03-04T15:19:10Z", "commit": {"oid": "9ce1ba640409ad4434bc52f23251eb941b7451db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc821e43edd2ca39621c52fd232a07147b8a51ed", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/fc821e43edd2ca39621c52fd232a07147b8a51ed", "committedDate": "2020-03-04T21:20:45Z", "message": "Check if SCC is valid at startup\n\nCurrently the check to see if the SCC is valid is done at the first\ncompilation. This is done on the load run to see if it is ok to load a\nmethod that was stored to the SCC. However, other parts of the compiler,\nsuch as the IProfiler, don't use this check.\n\nThis commit checks the validity of the SCC at startup and updates the\nglobal flag that all parts of the compiler check. If a AOT header does\nnot exist at this point, a header will be created.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e928b741a1d16cf7637c142d0356092b7bd7b998", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e928b741a1d16cf7637c142d0356092b7bd7b998", "committedDate": "2020-03-04T21:20:47Z", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ce1ba640409ad4434bc52f23251eb941b7451db", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9ce1ba640409ad4434bc52f23251eb941b7451db", "committedDate": "2020-03-04T15:16:34Z", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}, "afterCommit": {"oid": "e928b741a1d16cf7637c142d0356092b7bd7b998", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e928b741a1d16cf7637c142d0356092b7bd7b998", "committedDate": "2020-03-04T21:20:47Z", "message": "Clean up AOT Validation creation/validation\n\nWith the AOT Header being validated/create at JVM Startup, there is no\nneed to validate/create it at first compilation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NTY1NTcx", "url": "https://github.com/eclipse-openj9/openj9/pull/8679#pullrequestreview-369565571", "createdAt": "2020-03-05T13:28:27Z", "commit": {"oid": "e928b741a1d16cf7637c142d0356092b7bd7b998"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 615, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}