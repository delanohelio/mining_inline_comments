{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMzM5NzM1", "number": 11491, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNToyNDowOFrOFLJgLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNjo1MjoxMVrOFLW4UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjM0MzUxOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/p/codegen/J9TreeEvaluator.cpp", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwNToyNDowOFrOIOKgwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNTozOTo1N1rOIOcGvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTcyMzIwMA==", "bodyText": "The fact that the new flag is outside of the immediate value range for Power is a bit concerning but I guess we ran out of smaller flags? @tajila", "url": "https://github.com/eclipse-openj9/openj9/pull/11491#discussion_r551723200", "createdAt": "2021-01-05T05:24:08Z", "author": {"login": "gita-omr"}, "path": "runtime/compiler/p/codegen/J9TreeEvaluator.cpp", "diffHunk": "@@ -7727,11 +7729,13 @@ void J9::Power::TreeEvaluator::generateCheckForValueTypeMonitorEnterOrExit(TR::N\n    TR_J9VMBase *fej9 = (TR_J9VMBase *)(cg->fe());\n    TR::MemoryReference *classFlagsMemRef = TR::MemoryReference::createWithDisplacement(cg, objectClassReg, static_cast<uintptr_t>(fej9->getOffsetOfClassFlags()), 4);\n \n-   //check J9ClassIsValueType flag\n-   generateTrg1MemInstruction(cg,TR::InstOpCode::lwz, node, tempReg, classFlagsMemRef);\n-   generateTrg1Src1ImmInstruction(cg, TR::InstOpCode::andi_r, node, tempReg, tempReg, condReg, J9ClassIsValueType);\n+   //check J9_CLASS_DISALLOWS_LOCKING_FLAGS (J9ClassIsValueType | J9ClassIsValueBased)\n+   generateTrg1MemInstruction(cg, TR::InstOpCode::lwz, node, temp1Reg, classFlagsMemRef);\n \n-   //If obj is value type, call VM helper and throw IllegalMonitorState exception, else continue as usual\n+   loadConstant(cg, node, classFlag, temp2Reg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81af61afe36347640325a04c0084d4873624aae6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk0NzUxMQ==", "bodyText": "Yes, the smaller flags are all used up. How large is the immediate range on power?", "url": "https://github.com/eclipse-openj9/openj9/pull/11491#discussion_r551947511", "createdAt": "2021-01-05T13:58:19Z", "author": {"login": "tajila"}, "path": "runtime/compiler/p/codegen/J9TreeEvaluator.cpp", "diffHunk": "@@ -7727,11 +7729,13 @@ void J9::Power::TreeEvaluator::generateCheckForValueTypeMonitorEnterOrExit(TR::N\n    TR_J9VMBase *fej9 = (TR_J9VMBase *)(cg->fe());\n    TR::MemoryReference *classFlagsMemRef = TR::MemoryReference::createWithDisplacement(cg, objectClassReg, static_cast<uintptr_t>(fej9->getOffsetOfClassFlags()), 4);\n \n-   //check J9ClassIsValueType flag\n-   generateTrg1MemInstruction(cg,TR::InstOpCode::lwz, node, tempReg, classFlagsMemRef);\n-   generateTrg1Src1ImmInstruction(cg, TR::InstOpCode::andi_r, node, tempReg, tempReg, condReg, J9ClassIsValueType);\n+   //check J9_CLASS_DISALLOWS_LOCKING_FLAGS (J9ClassIsValueType | J9ClassIsValueBased)\n+   generateTrg1MemInstruction(cg, TR::InstOpCode::lwz, node, temp1Reg, classFlagsMemRef);\n \n-   //If obj is value type, call VM helper and throw IllegalMonitorState exception, else continue as usual\n+   loadConstant(cg, node, classFlag, temp2Reg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTcyMzIwMA=="}, "originalCommit": {"oid": "81af61afe36347640325a04c0084d4873624aae6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjAxMTQ1Mw==", "bodyText": "@tajila it\u2019s 16 bits.", "url": "https://github.com/eclipse-openj9/openj9/pull/11491#discussion_r552011453", "createdAt": "2021-01-05T15:39:57Z", "author": {"login": "gita-omr"}, "path": "runtime/compiler/p/codegen/J9TreeEvaluator.cpp", "diffHunk": "@@ -7727,11 +7729,13 @@ void J9::Power::TreeEvaluator::generateCheckForValueTypeMonitorEnterOrExit(TR::N\n    TR_J9VMBase *fej9 = (TR_J9VMBase *)(cg->fe());\n    TR::MemoryReference *classFlagsMemRef = TR::MemoryReference::createWithDisplacement(cg, objectClassReg, static_cast<uintptr_t>(fej9->getOffsetOfClassFlags()), 4);\n \n-   //check J9ClassIsValueType flag\n-   generateTrg1MemInstruction(cg,TR::InstOpCode::lwz, node, tempReg, classFlagsMemRef);\n-   generateTrg1Src1ImmInstruction(cg, TR::InstOpCode::andi_r, node, tempReg, tempReg, condReg, J9ClassIsValueType);\n+   //check J9_CLASS_DISALLOWS_LOCKING_FLAGS (J9ClassIsValueType | J9ClassIsValueBased)\n+   generateTrg1MemInstruction(cg, TR::InstOpCode::lwz, node, temp1Reg, classFlagsMemRef);\n \n-   //If obj is value type, call VM helper and throw IllegalMonitorState exception, else continue as usual\n+   loadConstant(cg, node, classFlag, temp2Reg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTcyMzIwMA=="}, "originalCommit": {"oid": "81af61afe36347640325a04c0084d4873624aae6"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NDUzNTIxOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/p/codegen/J9TreeEvaluator.cpp", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxNjo1MjoxMVrOIOe-8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMDowNzoyNFrOIOliZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA1ODYwOQ==", "bodyText": "Was there a reason for adding the int32_t classFlag parameter? It looks like the constant J9_CLASS_DISALLOWS_LOCKING_FLAGS is the only value that is ever passed in.", "url": "https://github.com/eclipse-openj9/openj9/pull/11491#discussion_r552058609", "createdAt": "2021-01-05T16:52:11Z", "author": {"login": "IBMJimmyk"}, "path": "runtime/compiler/p/codegen/J9TreeEvaluator.cpp", "diffHunk": "@@ -7718,7 +7720,7 @@ static bool simpleReadMonitor(TR::Node *node, TR::CodeGenerator *cg, TR::Node *o\n    return true;\n    }\n \n-void J9::Power::TreeEvaluator::generateCheckForValueTypeMonitorEnterOrExit(TR::Node *node, TR::LabelSymbol *helperCallLabel, TR::Register *objReg, TR::Register *objectClassReg, TR::Register *tempReg, TR::Register *condReg, TR::CodeGenerator *cg)\n+void J9::Power::TreeEvaluator::generateCheckForValueMonitorEnterOrExit(TR::Node *node, TR::LabelSymbol *helperCallLabel, TR::Register *objReg, TR::Register *objectClassReg, TR::Register *temp1Reg, TR::Register *temp2Reg, TR::Register *condReg, TR::CodeGenerator *cg, int32_t classFlag)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81af61afe36347640325a04c0084d4873624aae6"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA5NTg4Mw==", "bodyText": "The purpose of adding a classFlag parameter is to make generateCheckForValueTypeMonitorEnterOrExit() more generic for future flag changes, although at the moment only  J9_CLASS_DISALLOWS_LOCKING_FLAGS is used.", "url": "https://github.com/eclipse-openj9/openj9/pull/11491#discussion_r552095883", "createdAt": "2021-01-05T17:54:46Z", "author": {"login": "a7ehuo"}, "path": "runtime/compiler/p/codegen/J9TreeEvaluator.cpp", "diffHunk": "@@ -7718,7 +7720,7 @@ static bool simpleReadMonitor(TR::Node *node, TR::CodeGenerator *cg, TR::Node *o\n    return true;\n    }\n \n-void J9::Power::TreeEvaluator::generateCheckForValueTypeMonitorEnterOrExit(TR::Node *node, TR::LabelSymbol *helperCallLabel, TR::Register *objReg, TR::Register *objectClassReg, TR::Register *tempReg, TR::Register *condReg, TR::CodeGenerator *cg)\n+void J9::Power::TreeEvaluator::generateCheckForValueMonitorEnterOrExit(TR::Node *node, TR::LabelSymbol *helperCallLabel, TR::Register *objReg, TR::Register *objectClassReg, TR::Register *temp1Reg, TR::Register *temp2Reg, TR::Register *condReg, TR::CodeGenerator *cg, int32_t classFlag)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA1ODYwOQ=="}, "originalCommit": {"oid": "81af61afe36347640325a04c0084d4873624aae6"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjE2NTk5MQ==", "bodyText": "Okay, that makes sense.", "url": "https://github.com/eclipse-openj9/openj9/pull/11491#discussion_r552165991", "createdAt": "2021-01-05T20:07:24Z", "author": {"login": "IBMJimmyk"}, "path": "runtime/compiler/p/codegen/J9TreeEvaluator.cpp", "diffHunk": "@@ -7718,7 +7720,7 @@ static bool simpleReadMonitor(TR::Node *node, TR::CodeGenerator *cg, TR::Node *o\n    return true;\n    }\n \n-void J9::Power::TreeEvaluator::generateCheckForValueTypeMonitorEnterOrExit(TR::Node *node, TR::LabelSymbol *helperCallLabel, TR::Register *objReg, TR::Register *objectClassReg, TR::Register *tempReg, TR::Register *condReg, TR::CodeGenerator *cg)\n+void J9::Power::TreeEvaluator::generateCheckForValueMonitorEnterOrExit(TR::Node *node, TR::LabelSymbol *helperCallLabel, TR::Register *objReg, TR::Register *objectClassReg, TR::Register *temp1Reg, TR::Register *temp2Reg, TR::Register *condReg, TR::CodeGenerator *cg, int32_t classFlag)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjA1ODYwOQ=="}, "originalCommit": {"oid": "81af61afe36347640325a04c0084d4873624aae6"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 882, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}