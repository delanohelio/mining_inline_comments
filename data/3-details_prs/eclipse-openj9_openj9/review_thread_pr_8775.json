{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0OTExMDgw", "number": 8775, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzozMjoyN1rODl4YDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzozMjoyN1rODl4YDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDQ3NTY0OnYy", "diffSide": "RIGHT", "path": "test/functional/JIT_Test/src/jit/test/jar/ZipTester.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxNzozMjoyN1rOFzBPvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxODoyODo0OVrOFzC5qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0MjExMA==", "bodyText": "If the process runs forever, who shuts it down? Timeout?", "url": "https://github.com/eclipse-openj9/openj9/pull/8775#discussion_r389042110", "createdAt": "2020-03-06T17:32:27Z", "author": {"login": "mpirvu"}, "path": "test/functional/JIT_Test/src/jit/test/jar/ZipTester.java", "diffHunk": "@@ -53,23 +58,31 @@\n \tpublic static void main(String args[]) {\n \t\tnew ZipTester().run(args);\n \t}\n-\t\n+\n \tpublic void run(String args[]) {\n \t\tif (args.length < 1 || args[0].isEmpty()) {\n \t\t\tprintUsageText();\n \t\t\tAssert.fail();\n \t\t}\n \n-\t\tString classFilter = args[0];\n+\t\tString classFilter = \"\";\n+\t\tboolean loopForever = false;\n \t\tint zipFilenameIndex = 0;\n-\t\tif (!classFilter.startsWith(CLASS_FILTER_TAG))\n-\t\t\tclassFilter = \"\";\n-\t\telse {\n-\t\t\tclassFilter = classFilter.substring(CLASS_FILTER_TAG.length());\n-\t\t\tzipFilenameIndex = 1;\n+\n+\t\twhile (args[zipFilenameIndex].startsWith(TAG_PREFIX)) {\n+\t\t\tif (args[zipFilenameIndex].startsWith(CLASS_FILTER_TAG))\n+\t\t\t\tclassFilter = classFilter.substring(CLASS_FILTER_TAG.length());\n+\t\t\telse if (args[zipFilenameIndex].equals(LOOP_FOREVER_TAG))\n+\t\t\t\tloopForever = true;\n+\t\t\tzipFilenameIndex++;\n \t\t}\n \n-\t\tprocess(classFilter, args, zipFilenameIndex);\n+\t\tif (loopForever)\n+\t\t\tlogger.info(LOOP_FOREVER_TAG + \" was specified; test will run continuously until the JVM is terminated.\");\n+\n+\t\tdo {\n+\t\t\tprocess(classFilter, args, zipFilenameIndex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16d31df29fa6d7460cdadff40d7d19231a12f8c3"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2OTIyNg==", "bodyText": "The harness which starts/stops the clients/servers sends a SIGTERM to stop them. The timing is driven by the harness not the client; the harness assumes the client is running some repetitive task that keeps generating compilation activity and runs clients and servers for various time periods, i.e. \"think time\".\nBy looping forever we just ensure that compilation activity is happening for the entire duration of the think time rather than the client finishing really quickly on a fast machine and leaving an idle server sitting around for the rest of the test time period.", "url": "https://github.com/eclipse-openj9/openj9/pull/8775#discussion_r389069226", "createdAt": "2020-03-06T18:28:49Z", "author": {"login": "ymanton"}, "path": "test/functional/JIT_Test/src/jit/test/jar/ZipTester.java", "diffHunk": "@@ -53,23 +58,31 @@\n \tpublic static void main(String args[]) {\n \t\tnew ZipTester().run(args);\n \t}\n-\t\n+\n \tpublic void run(String args[]) {\n \t\tif (args.length < 1 || args[0].isEmpty()) {\n \t\t\tprintUsageText();\n \t\t\tAssert.fail();\n \t\t}\n \n-\t\tString classFilter = args[0];\n+\t\tString classFilter = \"\";\n+\t\tboolean loopForever = false;\n \t\tint zipFilenameIndex = 0;\n-\t\tif (!classFilter.startsWith(CLASS_FILTER_TAG))\n-\t\t\tclassFilter = \"\";\n-\t\telse {\n-\t\t\tclassFilter = classFilter.substring(CLASS_FILTER_TAG.length());\n-\t\t\tzipFilenameIndex = 1;\n+\n+\t\twhile (args[zipFilenameIndex].startsWith(TAG_PREFIX)) {\n+\t\t\tif (args[zipFilenameIndex].startsWith(CLASS_FILTER_TAG))\n+\t\t\t\tclassFilter = classFilter.substring(CLASS_FILTER_TAG.length());\n+\t\t\telse if (args[zipFilenameIndex].equals(LOOP_FOREVER_TAG))\n+\t\t\t\tloopForever = true;\n+\t\t\tzipFilenameIndex++;\n \t\t}\n \n-\t\tprocess(classFilter, args, zipFilenameIndex);\n+\t\tif (loopForever)\n+\t\t\tlogger.info(LOOP_FOREVER_TAG + \" was specified; test will run continuously until the JVM is terminated.\");\n+\n+\t\tdo {\n+\t\t\tprocess(classFilter, args, zipFilenameIndex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA0MjExMA=="}, "originalCommit": {"oid": "16d31df29fa6d7460cdadff40d7d19231a12f8c3"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 488, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}