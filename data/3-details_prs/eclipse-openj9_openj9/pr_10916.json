{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MDgzMTQ2", "number": 10916, "title": "Consolidate AOT Relocation Records", "bodyText": "#4803\nThis one seems relatively big compared to the previous such PRs. However,\n\nit involves records where the header info is gathered differently on some platforms\nit is the last of the consolidation efforts; this should be the penultimate PR as the next PR is just miscellaneous cleanup (such as moving the binary template definitions back to the .cpp file, and so on).", "createdAt": "2020-10-16T20:19:59Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10916", "merged": true, "mergeCommit": {"oid": "2981dcb4c0f5a07b750a63683cc91dcd0ba7148f"}, "closed": true, "closedAt": "2020-11-19T16:44:35Z", "author": {"login": "dsouzai"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUIzRlAFqTUxMjA2NDAxMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABddPdZ8ABqjQwMDMxNTU5MzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMDY0MDEx", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#pullrequestreview-512064011", "createdAt": "2020-10-19T18:50:58Z", "commit": {"oid": "211b73a5ee22b4d99daa7a56d3b7f86443260a6d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1MDo1OFrOHkdEKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1MDo1OFrOHkdEKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4Njk4NQ==", "bodyText": "The reason for this is because of an ordering issue, namely:\n\nDo platform specific way of gathering data for the relocation header, if it exists\nOtherwse, do common way of gathering data for the relocation header\n\nIf a relo type has both a platform specific implementation and a common implementation, the platform specific implementation must be done. This means that even though this deleted code is common regardless of the relotype, we cannot move it into the code that does the common way of gathering data, because we might not call into it. Therefore, this code is moved into each of the platform specific versions of initializeAOTRelocationHeader", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#discussion_r507986985", "createdAt": "2020-10-19T18:50:58Z", "author": {"login": "dsouzai"}, "path": "runtime/compiler/codegen/J9AheadOfTimeCompile.cpp", "diffHunk": "@@ -994,12 +994,6 @@ J9::AheadOfTimeCompile::initializeCommonAOTRelocationHeader(TR::IteratedExternal\n          return cursor;\n       }\n \n-   reloRecord->setSize(reloTarget, relocation->getSizeOfRelocationData());\n-   reloRecord->setType(reloTarget, kind);\n-\n-   uint8_t wideOffsets = relocation->needsWideOffsets() ? RELOCATION_TYPE_WIDE_OFFSET : 0;\n-   reloRecord->setFlag(reloTarget, wideOffsets);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211b73a5ee22b4d99daa7a56d3b7f86443260a6d"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMDY1NjI0", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#pullrequestreview-512065624", "createdAt": "2020-10-19T18:53:07Z", "commit": {"oid": "211b73a5ee22b4d99daa7a56d3b7f86443260a6d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1MzowN1rOHkdJRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1MzowN1rOHkdJRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4ODI5NA==", "bodyText": "This is extremely necessary. Prior to this change, the flags were written in via a pointer. Now, it is written in using the setFlag API, which masks it in. Therefore, we need to make sure that buffer does not contain random data or it could result in that random data being interpreted as valid bits in the flag field.", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#discussion_r507988294", "createdAt": "2020-10-19T18:53:07Z", "author": {"login": "dsouzai"}, "path": "runtime/compiler/aarch64/codegen/J9AheadOfTimeCompile.cpp", "diffHunk": "@@ -96,43 +96,27 @@ uint8_t *J9::ARM64::AheadOfTimeCompile::initializeAOTRelocationHeader(TR::Iterat\n    TR::Compilation* comp = TR::comp();\n    TR_J9VMBase *fej9 = (TR_J9VMBase *)(_cg->fe());\n    TR_SharedCache *sharedCache = fej9->sharedCache();\n-   TR::SymbolValidationManager *symValManager = comp->getSymbolValidationManager();\n-\n-   TR_VirtualGuard *guard;\n-   uint8_t flags = 0;\n-   TR_ResolvedMethod *resolvedMethod;\n-\n-   uint8_t *cursor = relocation->getRelocationData();\n-\n    TR_RelocationRuntime *reloRuntime = comp->reloRuntime();\n    TR_RelocationTarget *reloTarget = reloRuntime->reloTarget();\n \n-   uint8_t * aotMethodCodeStart = (uint8_t *) comp->getRelocatableMethodCodeStart();\n-   // size of relocation goes first in all types\n-   *(uint16_t *) cursor = relocation->getSizeOfRelocationData();\n+   uint8_t flags = 0;\n \n-   cursor += 2;\n+   uint8_t *cursor         = relocation->getRelocationData();\n+   uint8_t targetKind      = relocation->getTargetKind();\n+   uint16_t sizeOfReloData = relocation->getSizeOfRelocationData();\n \n-   uint8_t modifier = 0;\n-   uint8_t *relativeBitCursor = cursor;\n-   TR::LabelSymbol *table;\n-   uint8_t *codeLocation;\n+   // Zero-initialize header\n+   memset(cursor, 0, sizeOfReloData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211b73a5ee22b4d99daa7a56d3b7f86443260a6d"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMDY3NDA3", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#pullrequestreview-512067407", "createdAt": "2020-10-19T18:55:16Z", "commit": {"oid": "211b73a5ee22b4d99daa7a56d3b7f86443260a6d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1NToxNlrOHkdOqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1NToxNlrOHkdOqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4OTY3NQ==", "bodyText": "Temporary in this commit, this is removed in the last commit in this PR. It was needed because the yet to be consolidated relocation records assume the position of the cursor is past the TR_RelocationRecordBinaryTemplate portion of the header.", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#discussion_r507989675", "createdAt": "2020-10-19T18:55:16Z", "author": {"login": "dsouzai"}, "path": "runtime/compiler/aarch64/codegen/J9AheadOfTimeCompile.cpp", "diffHunk": "@@ -96,43 +96,27 @@ uint8_t *J9::ARM64::AheadOfTimeCompile::initializeAOTRelocationHeader(TR::Iterat\n    TR::Compilation* comp = TR::comp();\n    TR_J9VMBase *fej9 = (TR_J9VMBase *)(_cg->fe());\n    TR_SharedCache *sharedCache = fej9->sharedCache();\n-   TR::SymbolValidationManager *symValManager = comp->getSymbolValidationManager();\n-\n-   TR_VirtualGuard *guard;\n-   uint8_t flags = 0;\n-   TR_ResolvedMethod *resolvedMethod;\n-\n-   uint8_t *cursor = relocation->getRelocationData();\n-\n    TR_RelocationRuntime *reloRuntime = comp->reloRuntime();\n    TR_RelocationTarget *reloTarget = reloRuntime->reloTarget();\n \n-   uint8_t * aotMethodCodeStart = (uint8_t *) comp->getRelocatableMethodCodeStart();\n-   // size of relocation goes first in all types\n-   *(uint16_t *) cursor = relocation->getSizeOfRelocationData();\n+   uint8_t flags = 0;\n \n-   cursor += 2;\n+   uint8_t *cursor         = relocation->getRelocationData();\n+   uint8_t targetKind      = relocation->getTargetKind();\n+   uint16_t sizeOfReloData = relocation->getSizeOfRelocationData();\n \n-   uint8_t modifier = 0;\n-   uint8_t *relativeBitCursor = cursor;\n-   TR::LabelSymbol *table;\n-   uint8_t *codeLocation;\n+   // Zero-initialize header\n+   memset(cursor, 0, sizeOfReloData);\n \n-   if (relocation->needsWideOffsets())\n-      modifier |= RELOCATION_TYPE_WIDE_OFFSET;\n+   TR_RelocationRecord storage;\n+   TR_RelocationRecord *reloRecord = TR_RelocationRecord::create(&storage, reloRuntime, targetKind, reinterpret_cast<TR_RelocationRecordBinaryTemplate *>(cursor));\n \n-   uint8_t targetKind = relocation->getTargetKind();\n-   *cursor++ = targetKind;\n-   uint8_t *flagsCursor = cursor++;\n-   *flagsCursor = modifier;\n-   uint32_t *wordAfterHeader = (uint32_t*)cursor;\n-#if defined(TR_HOST_64BIT)\n-   cursor += 4; // padding\n-#endif\n+   uint8_t wideOffsets = relocation->needsWideOffsets() ? RELOCATION_TYPE_WIDE_OFFSET : 0;\n+   reloRecord->setSize(reloTarget, sizeOfReloData);\n+   reloRecord->setType(reloTarget, static_cast<TR_RelocationRecordType>(targetKind));\n+   reloRecord->setFlag(reloTarget, wideOffsets);\n \n-   // This has to be created after the kind has been written into the header\n-   TR_RelocationRecord storage;\n-   TR_RelocationRecord *reloRecord = TR_RelocationRecord::create(&storage, reloRuntime, reloTarget, reinterpret_cast<TR_RelocationRecordBinaryTemplate *>(relocation->getRelocationData()));\n+   cursor += sizeof(TR_RelocationRecordBinaryTemplate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211b73a5ee22b4d99daa7a56d3b7f86443260a6d"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMDY4NDgy", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#pullrequestreview-512068482", "createdAt": "2020-10-19T18:56:34Z", "commit": {"oid": "211b73a5ee22b4d99daa7a56d3b7f86443260a6d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1NjozNFrOHkdSGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1NjozNFrOHkdSGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk5MDU1Mg==", "bodyText": "Temporary, this is removed by the end of the PR. Consequence of the hacky\n#if defined(TR_HOST_64BIT)\n   uint32_t _extra;\n#endif\n\nfield in TR_RelocationRecordBinaryTemplate", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#discussion_r507990552", "createdAt": "2020-10-19T18:56:34Z", "author": {"login": "dsouzai"}, "path": "runtime/compiler/x/codegen/J9AheadOfTimeCompile.cpp", "diffHunk": "@@ -123,34 +123,30 @@ uint8_t *J9::X86::AheadOfTimeCompile::initializeAOTRelocationHeader(TR::Iterated\n    TR_J9VMBase *fej9 = (TR_J9VMBase *)(_cg->fe());\n    TR_SharedCache *sharedCache = fej9->sharedCache();\n    TR::Compilation *comp = _cg->comp();\n-   TR::SymbolValidationManager *symValManager = comp->getSymbolValidationManager();\n-   uintptr_t numTrampolines;\n-   TR::LabelSymbol *label;\n-   TR_ResolvedMethod *resolvedMethod;\n-   TR_VirtualGuard *guard;\n-   uint8_t flags = 0;\n-   uint8_t *cursor = relocation->getRelocationData();\n-\n    TR_RelocationRuntime *reloRuntime = comp->reloRuntime();\n    TR_RelocationTarget *reloTarget = reloRuntime->reloTarget();\n+   uintptr_t numTrampolines;\n \n-   // size of relocation goes first in all types\n-   *(uint16_t *)cursor = relocation->getSizeOfRelocationData();\n-   cursor += 2;\n-   uint8_t  wideOffsets = relocation->needsWideOffsets() ? RELOCATION_TYPE_WIDE_OFFSET : 0;\n-   *cursor++ = (uint8_t)relocation->getTargetKind();\n-   uint8_t *flagsCursor = cursor++;\n-   *flagsCursor = wideOffsets;\n-   uint32_t *wordAfterHeader = (uint32_t*)cursor;\n-#if defined(TR_HOST_64BIT)\n-   cursor += 4; // padding\n-#endif\n+   uint8_t *cursor         = relocation->getRelocationData();\n+   uint8_t targetKind      = relocation->getTargetKind();\n+   uint16_t sizeOfReloData = relocation->getSizeOfRelocationData();\n+\n+   // Zero-initialize header\n+   memset(cursor, 0, sizeOfReloData);\n \n-   // This has to be created after the kind has been written into the header\n    TR_RelocationRecord storage;\n-   TR_RelocationRecord *reloRecord = TR_RelocationRecord::create(&storage, reloRuntime, reloTarget, reinterpret_cast<TR_RelocationRecordBinaryTemplate *>(relocation->getRelocationData()));\n+   TR_RelocationRecord *reloRecord = TR_RelocationRecord::create(&storage, reloRuntime, targetKind, reinterpret_cast<TR_RelocationRecordBinaryTemplate *>(cursor));\n+\n+   uint8_t wideOffsets = relocation->needsWideOffsets() ? RELOCATION_TYPE_WIDE_OFFSET : 0;\n+   uint32_t *wordAfterHeader = &reinterpret_cast<TR_RelocationRecordPicTrampolineBinaryTemplate *>(cursor)->_numTrampolines;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "211b73a5ee22b4d99daa7a56d3b7f86443260a6d"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMTk5NTg3", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#pullrequestreview-530199587", "createdAt": "2020-11-13T16:18:09Z", "commit": {"oid": "9d64e269fcd2a6c8330224488a9c23a8e8dc3463"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMjA0ODEz", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#pullrequestreview-530204813", "createdAt": "2020-11-13T16:24:37Z", "commit": {"oid": "1e552771d1b2728862c96b69b61387ee137b0c4f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjoyNDozN1rOHy1AVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNjoyNDozN1rOHy1AVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA1OTI4NQ==", "bodyText": "the fact that this relocation is implemented differently for this platform should probably be fixed at some point. Would you please create an issue for someone to bring these two implementations in line?", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#discussion_r523059285", "createdAt": "2020-11-13T16:24:37Z", "author": {"login": "mstoodle"}, "path": "runtime/compiler/arm/codegen/J9AheadOfTimeCompile.cpp", "diffHunk": "@@ -133,18 +133,20 @@ uint8_t *J9::ARM::AheadOfTimeCompile::initializeAOTRelocationHeader(TR::Iterated\n       {\n       case TR_MethodObject:\n          {\n+         TR_RelocationRecordMethodObject *moRecord = reinterpret_cast<TR_RelocationRecordMethodObject *>(reloRecord);\n          TR_RelocationRecordInformation *recordInfo = (TR_RelocationRecordInformation*) relocation->getTargetAddress();\n-         TR::SymbolReference *tempSR = (TR::SymbolReference *) recordInfo->data1;\n-         uintptr_t inlinedSiteIndex = self()->findCorrectInlinedSiteIndex(tempSR->getOwningMethod(comp)->constantPool(), recordInfo->data2);\n-         uint8_t flags = (uint8_t) recordInfo->data3;//Sequence ID\n-         //TODO\n-         *(uintptr_t *)cursor = inlinedSiteIndex;\n-         cursor += SIZEPOINTER;\n-         // next word is the address of the constant pool to\n-         // which the index refers\n-         *(uintptr_t *)cursor =\n-            (uintptr_t)tempSR->getOwningMethod(TR::comp())->constantPool();\n-         cursor += SIZEPOINTER;\n+\n+         TR::SymbolReference *symRef = reinterpret_cast<TR::SymbolReference *>(recordInfo->data1);\n+         uintptr_t inlinedSiteIndex = self()->findCorrectInlinedSiteIndex(symRef->getOwningMethod(comp)->constantPool(), recordInfo->data2);\n+         uint8_t flags = static_cast<uint8_t>(reinterpret_cast<uintptr_t>(recordInfo->data3));\n+\n+         TR_ASSERT((flags & RELOCATION_CROSS_PLATFORM_FLAGS_MASK) == 0,  \"reloFlags bits overlap cross-platform flags bits\\n\");\n+\n+         moRecord->setInlinedSiteIndex(reloTarget, reinterpret_cast<uintptr_t>(inlinedSiteIndex));\n+         moRecord->setConstantPool(reloTarget, reinterpret_cast<uintptr_t>(symRef->getOwningMethod(comp)->constantPool()));\n+         moRecord->setReloFlags(reloTarget, flags);\n+\n+         cursor = relocation->getRelocationData() + TR_RelocationRecord::getSizeOfAOTRelocationHeader(static_cast<TR_RelocationRecordType>(targetKind));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e552771d1b2728862c96b69b61387ee137b0c4f"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMjQ4MDQ1", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#pullrequestreview-530248045", "createdAt": "2020-11-13T17:11:12Z", "commit": {"oid": "2d555e4015c383576b4b9157f0f917e58f9145ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzoxMToxMlrOHy3Q8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzoxMToxMlrOHy3Q8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA5NjMwNA==", "bodyText": "similar comment here for the ARM and P implementations, which only seem to differ in the requirement for flags? Seems like it could be folded into the common implementation. Another issue or maybe combine into one issue?", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#discussion_r523096304", "createdAt": "2020-11-13T17:11:12Z", "author": {"login": "mstoodle"}, "path": "runtime/compiler/arm/codegen/J9AheadOfTimeCompile.cpp", "diffHunk": "@@ -149,28 +149,29 @@ uint8_t *J9::ARM::AheadOfTimeCompile::initializeAOTRelocationHeader(TR::Iterated\n          cursor = relocation->getRelocationData() + TR_RelocationRecord::getSizeOfAOTRelocationHeader(static_cast<TR_RelocationRecordType>(targetKind));\n          }\n          break;\n+\n       case TR_ClassAddress:\n          {\n+         TR_RelocationRecordClassAddress *caRecord = reinterpret_cast<TR_RelocationRecordClassAddress *>(reloRecord);\n          TR_RelocationRecordInformation *recordInfo = (TR_RelocationRecordInformation*) relocation->getTargetAddress();\n-         TR::SymbolReference *tempSR = (TR::SymbolReference *) recordInfo->data1;\n-\n-         // These flags are unused at the moment. If they're needed later,\n-         // they'll be needed for TR_ArbitraryClassAddress as well\n-         uint8_t flags = (uint8_t) recordInfo->data3;\n \n-         uintptr_t inlinedSiteIndex = self()->findCorrectInlinedSiteIndex(tempSR->getOwningMethod(comp)->constantPool(), recordInfo->data2);\n+         TR::SymbolReference *symRef = reinterpret_cast<TR::SymbolReference *>(recordInfo->data1);\n+         uintptr_t inlinedSiteIndex = reinterpret_cast<uintptr_t>(recordInfo->data2);\n+         uint8_t flags = static_cast<uint8_t>(recordInfo->data3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d555e4015c383576b4b9157f0f917e58f9145ab"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMjQ5ODEy", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#pullrequestreview-530249812", "createdAt": "2020-11-13T17:13:31Z", "commit": {"oid": "d991e85850e808e2c2e774df2fe89f97227f59ca"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzoxMzozMVrOHy3aag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNzoxMzozMVrOHy3aag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzA5ODczMA==", "bodyText": "Shouldn't the flags also be printed by this code? Same comment for the MethodObject and ClassAddress relocations, I think.", "url": "https://github.com/eclipse-openj9/openj9/pull/10916#discussion_r523098730", "createdAt": "2020-11-13T17:13:31Z", "author": {"login": "mstoodle"}, "path": "runtime/compiler/codegen/J9AheadOfTimeCompile.cpp", "diffHunk": "@@ -1706,6 +1723,22 @@ J9::AheadOfTimeCompile::dumpRelocationHeaderData(uint8_t *cursor, bool isVerbose\n          }\n          break;\n \n+      case TR_DataAddress:\n+         {\n+         TR_RelocationRecordDataAddress *daRecord = reinterpret_cast<TR_RelocationRecordDataAddress *>(reloRecord);\n+\n+         self()->traceRelocationOffsets(cursor, offsetSize, endOfCurrentRecord, orderedPair);\n+         if (isVerbose)\n+            {\n+            traceMsg(self()->comp(), \"\\nTR_DataAddress: InlinedCallSite index = %d, Constant pool = %x, cpIndex = %d, offset = %x\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d991e85850e808e2c2e774df2fe89f97227f59ca"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ded8020196312120cae738a9e45fd6825225fb63", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ded8020196312120cae738a9e45fd6825225fb63", "committedDate": "2020-11-16T21:09:24Z", "message": "Add new TR_RelocationRecord::create API\n\nAdd a new API that does not require the relocation record binary\ntemplate header to already exist in order to determine the kind of the\nrelocation record when creating it. This is necessary because the\nTR_RelocationRecord and subclasses are an API class that are used to\nboth read and write data to and from, respectively, the binary template\nheader.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f5a13f0a9049a80b424a5c2c98855bb1e70bf2b", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0f5a13f0a9049a80b424a5c2c98855bb1e70bf2b", "committedDate": "2020-11-16T21:09:24Z", "message": "Clean up writing of common header\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90edafa964b65b566f838fe7ebf9ce651bc21630", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/90edafa964b65b566f838fe7ebf9ce651bc21630", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_DiscontiguousSymbolFromManager\n\nRemove the duplicated code that writes the\nTR_DiscontiguousSymbolFromManager relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "328867c1dc5b358f1cb49eed2c7c35dea3ceffbd", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/328867c1dc5b358f1cb49eed2c7c35dea3ceffbd", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_MethodObject\n\nRemove the duplicated code that writes the\nTR_MethodObject relocation header\ninformation, and consolidate it in one canonical location.\n\nNote: TR_MethodObject is not used anywhere on P; in fact that code that\nwrote out the header data was incorrect as it wrote in the fields in the\nwrong order.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9df6049b27ca59509709ac4ef9ed51d7283218b", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a9df6049b27ca59509709ac4ef9ed51d7283218b", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_ClassAddress\n\nRemove the duplicated code that writes the\nTR_ClassAddress relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1772dd24990e24fb548efe3b7b9b01a9ca52bfb", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a1772dd24990e24fb548efe3b7b9b01a9ca52bfb", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_DataAddress\n\nRemove the duplicated code that writes the\nTR_DataAddress relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94103d0b5b84a647b291e52d7d968ef95dd796f1", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/94103d0b5b84a647b291e52d7d968ef95dd796f1", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_AbsoluteMethodAddressOrderedPair\n\nRemove the duplicated code that writes the\nTR_AbsoluteMethodAddressOrderedPair relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2a862c9b000a5baa3cf11dd696b7f4fa9941070", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f2a862c9b000a5baa3cf11dd696b7f4fa9941070", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_FixedSequenceAddress\n\nRemove the duplicated code that writes the\nTR_FixedSequenceAddress relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd24720fcbece1b0a8f6bc64f1973c29bd949e2d", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/dd24720fcbece1b0a8f6bc64f1973c29bd949e2d", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_FixedSequenceAddress2\n\nRemove the duplicated code that writes the\nTR_FixedSequenceAddress2 relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df8ffd398add1682cccacaf57d002ac46ae5e21b", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/df8ffd398add1682cccacaf57d002ac46ae5e21b", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_ArrayCopyToc & TR_ArrayCopyHelper\n\nRemove the duplicated code that writes the\nTR_ArrayCopyToc & TR_ArrayCopyHelper relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50cfd610aac858e0a8b907224bc4554d50782098", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/50cfd610aac858e0a8b907224bc4554d50782098", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_BodyInfoAddressLoad\n\nRemove the duplicated code that writes the\nTR_BodyInfoAddressLoad relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b191914ded7ea449222d8320d94c289df86a07c6", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b191914ded7ea449222d8320d94c289df86a07c6", "committedDate": "2020-11-16T21:09:24Z", "message": "Delete TR_ConstantPoolOrderedPair\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75fd666c6fbaef83e4998f6a9d8857a9804d5889", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/75fd666c6fbaef83e4998f6a9d8857a9804d5889", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_RamMethodSequence & delete TR_RamMethodSequenceReg\n\nRemove the duplicated code that writes the\nTR_RamMethodSequence relocation header\ninformation, and consolidate it in one canonical location.\nAlso, delete the unused TR_RamMethodSequenceReg relocation.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc9e8f698bfcc9807544160b9c8d4b049958d57c", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/cc9e8f698bfcc9807544160b9c8d4b049958d57c", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_ArbitraryClassAddress\n\nRemove the duplicated code that writes the\nTR_ArbitraryClassAddress relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52fdd2d72259366144e8b7beadda0c4db2f1cdbe", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/52fdd2d72259366144e8b7beadda0c4db2f1cdbe", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_GlobalValue\n\nRemove the duplicated code that writes the\nTR_GlobalValue relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "152a6c804660f95d9e290100477054792aeee252", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/152a6c804660f95d9e290100477054792aeee252", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_HCR\n\nRemove the duplicated code that writes the\nTR_HCR relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01a87a43ed4e0d566f73a2410f20d29216cafe8c", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/01a87a43ed4e0d566f73a2410f20d29216cafe8c", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_EmitClass\n\nRemove the duplicated code that writes the\nTR_EmitClass relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e64a0d46c6db43c351b3e38f5ef38f54f4f1f697", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e64a0d46c6db43c351b3e38f5ef38f54f4f1f697", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_PicTrampolines\n\nRemove the duplicated code that writes the\nTR_PicTrampolines relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29c2c98bda08f4cc4721784c50bfc7570ee7624c", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/29c2c98bda08f4cc4721784c50bfc7570ee7624c", "committedDate": "2020-11-16T21:09:24Z", "message": "Delete TR_J2IThunks\n\nThis relocation type is added in needsInvokeExactJ2IThunk. However,\ninvokeExact isn't supported in AOT. Additionally, the code to actually\ndo the relocation is missing, meaning this relo type is essentially dead\ncode.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e34f52a14203a651fe6428d52a0b3f67b66af2bc", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e34f52a14203a651fe6428d52a0b3f67b66af2bc", "committedDate": "2020-11-16T21:09:24Z", "message": "Consolidate TR_DebugCounter\n\nRemove the duplicated code that writes the\nTR_DebugCounter relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd619b59a102dc8505ade3df977fd5a068e1943d", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/dd619b59a102dc8505ade3df977fd5a068e1943d", "committedDate": "2020-11-16T21:09:25Z", "message": "Print flags for relo records that may set it\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d64e269fcd2a6c8330224488a9c23a8e8dc3463", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9d64e269fcd2a6c8330224488a9c23a8e8dc3463", "committedDate": "2020-10-16T20:10:32Z", "message": "Consolidate TR_DebugCounter\n\nRemove the duplicated code that writes the\nTR_DebugCounter relocation header\ninformation, and consolidate it in one canonical location.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}, "afterCommit": {"oid": "dd619b59a102dc8505ade3df977fd5a068e1943d", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/dd619b59a102dc8505ade3df977fd5a068e1943d", "committedDate": "2020-11-16T21:09:25Z", "message": "Print flags for relo records that may set it\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 206, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}