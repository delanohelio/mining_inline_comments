{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzOTM4NDE0", "number": 8752, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjo1NzoyM1rODlO6fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjo1NzoyM1rODlO6fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzY4MjU0OnYy", "diffSide": "RIGHT", "path": "runtime/stackmap/stackmap.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMjo1NzoyM1rOFyAtYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQyMzowMTozM1rOFyAzZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4NDczNw==", "bodyText": "Do not use implicit zero comparisons. Also, strictly speaking the constant should be on the left of the comparison.", "url": "https://github.com/eclipse-openj9/openj9/pull/8752#discussion_r387984737", "createdAt": "2020-03-04T22:57:23Z", "author": {"login": "gacholio"}, "path": "runtime/stackmap/stackmap.c", "diffHunk": "@@ -350,7 +350,14 @@ mapStack(UDATA *scratch, UDATA totalStack, U_8 * map, J9ROMClass * romClass, J9R\n \t\t\t\t}\n \n \t\t\t\tif (pool[index].slot2) {\n-\t\t\t\t\tPUSH(OBJ);\n+\t\t\t\t\t/* Check for primitive values resolved from ConstantDynamic */\n+\t\t\t\t\tif (((pool[index].slot2 & J9DescriptionCpTypeMask) == J9DescriptionCpTypeConstantDynamic)\n+\t\t\t\t\t&& (pool[index].slot2 >> J9DescriptionReturnTypeShift)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cdffa99129e5a20a53953ac0f6fac38e0210919"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4NjI3OQ==", "bodyText": "fixed", "url": "https://github.com/eclipse-openj9/openj9/pull/8752#discussion_r387986279", "createdAt": "2020-03-04T23:01:33Z", "author": {"login": "fengxue-IS"}, "path": "runtime/stackmap/stackmap.c", "diffHunk": "@@ -350,7 +350,14 @@ mapStack(UDATA *scratch, UDATA totalStack, U_8 * map, J9ROMClass * romClass, J9R\n \t\t\t\t}\n \n \t\t\t\tif (pool[index].slot2) {\n-\t\t\t\t\tPUSH(OBJ);\n+\t\t\t\t\t/* Check for primitive values resolved from ConstantDynamic */\n+\t\t\t\t\tif (((pool[index].slot2 & J9DescriptionCpTypeMask) == J9DescriptionCpTypeConstantDynamic)\n+\t\t\t\t\t&& (pool[index].slot2 >> J9DescriptionReturnTypeShift)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzk4NDczNw=="}, "originalCommit": {"oid": "5cdffa99129e5a20a53953ac0f6fac38e0210919"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 652, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}