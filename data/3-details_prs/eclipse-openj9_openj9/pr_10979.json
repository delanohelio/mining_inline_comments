{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MTUwNDM4", "number": 10979, "title": "Use valueOf instead of primitive wrapper constructors", "bodyText": "Search and replace of new PrimitiveType( with PrimitiveType.valueOf(\nFix the vich test so that it continues to ensure 32 unique objects.\nFixes: #10937\n[ci skip]\nSigned-off-by: Graham Chapman graham_chapman@ca.ibm.com", "createdAt": "2020-10-23T18:42:47Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10979", "merged": true, "mergeCommit": {"oid": "fb67a8f23ab3579efeea860a3996dad1399002a0"}, "closed": true, "closedAt": "2020-10-26T15:30:28Z", "author": {"login": "gacholio"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVbKJhABqjM5MTUyNTQyNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWWgcVgFqTUxNjkyNjgxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "60f6f6d14f27dedfe913943a74ff584a9ae36dd2", "author": {"user": {"login": "gacholio", "name": "Graham Chapman"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/60f6f6d14f27dedfe913943a74ff584a9ae36dd2", "committedDate": "2020-10-23T18:37:41Z", "message": "Use valueOf instead of primitive wrapper constructors\n\nSearch and replace of `new PrimitiveType(` with `PrimitiveType.valueOf(`\n\nFixes: #10937\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>"}, "afterCommit": {"oid": "7c6f4f5869f8831588afc36bd943fd934fd92adc", "author": {"user": {"login": "gacholio", "name": "Graham Chapman"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7c6f4f5869f8831588afc36bd943fd934fd92adc", "committedDate": "2020-10-23T18:47:50Z", "message": "Use valueOf instead of primitive wrapper constructors\n\nSearch and replace of `new PrimitiveType(` with `PrimitiveType.valueOf(`\n\nFixes: #10937\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1OTM5MTU5", "url": "https://github.com/eclipse-openj9/openj9/pull/10979#pullrequestreview-515939159", "createdAt": "2020-10-23T19:11:49Z", "commit": {"oid": "7c6f4f5869f8831588afc36bd943fd934fd92adc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToxMTo0OVrOHnan2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToxMTo0OVrOHnan2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5MjY5OA==", "bodyText": "Any requirement for these to be unique objects?  valueOf will use the Integer cache where new Integer wouldn't", "url": "https://github.com/eclipse-openj9/openj9/pull/10979#discussion_r511092698", "createdAt": "2020-10-23T19:11:49Z", "author": {"login": "DanHeidinga"}, "path": "test/functional/JIT_Test/src/jit/test/vich/JNILocalRef.java", "diffHunk": "@@ -53,38 +53,38 @@ public JNILocalRef() {\n \t@Test(groups = { \"level.sanity\",\"component.jit\" })\n \tpublic void testJNILocalRef()\n \t{\n-\t\tObject o1 = new Integer(0);\n-\t\tObject o2 = new Integer(0);\n-\t\tObject o3 = new Integer(0);\n-\t\tObject o4 = new Integer(0);\n-\t\tObject o5 = new Integer(0);\n-\t\tObject o6 = new Integer(0);\n-\t\tObject o7 = new Integer(0);\n-\t\tObject o8 = new Integer(0);\n-\t\tObject o9 = new Integer(0);\n-\t\tObject o10 = new Integer(0);\n-\t\tObject o11 = new Integer(0);\n-\t\tObject o12 = new Integer(0);\n-\t\tObject o13 = new Integer(0);\n-\t\tObject o14 = new Integer(0);\n-\t\tObject o15 = new Integer(0);\n-\t\tObject o16 = new Integer(0);\n-\t\tObject o17 = new Integer(0);\n-\t\tObject o18 = new Integer(0);\n-\t\tObject o19 = new Integer(0);\n-\t\tObject o20 = new Integer(0);\n-\t\tObject o21 = new Integer(0);\n-\t\tObject o22 = new Integer(0);\n-\t\tObject o23 = new Integer(0);\n-\t\tObject o24 = new Integer(0);\n-\t\tObject o25 = new Integer(0);\n-\t\tObject o26 = new Integer(0);\n-\t\tObject o27 = new Integer(0);\n-\t\tObject o28 = new Integer(0);\n-\t\tObject o29 = new Integer(0);\n-\t\tObject o30 = new Integer(0);\n-\t\tObject o31 = new Integer(0);\n-\t\tObject o32 = new Integer(0);\n+\t\tObject o1 = Integer.valueOf(0);\n+\t\tObject o2 = Integer.valueOf(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c6f4f5869f8831588afc36bd943fd934fd92adc"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1OTQxNzAw", "url": "https://github.com/eclipse-openj9/openj9/pull/10979#pullrequestreview-515941700", "createdAt": "2020-10-23T19:16:18Z", "commit": {"oid": "7c6f4f5869f8831588afc36bd943fd934fd92adc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToxNjoxOFrOHna2zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToxNjoxOFrOHna2zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5NjUyNg==", "bodyText": "Similar concern about caching of Boolean.valueOf() and changing the test as the lifetime of the Boolean is now much longer", "url": "https://github.com/eclipse-openj9/openj9/pull/10979#discussion_r511096526", "createdAt": "2020-10-23T19:16:18Z", "author": {"login": "DanHeidinga"}, "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/ref/Test_PhantomReference.java", "diffHunk": "@@ -42,7 +42,7 @@ protected void doneSuite() {\n \t@Test\n \tpublic void test_get() {\n \t\tReferenceQueue rq = new ReferenceQueue();\n-\t\tbool = new Boolean(false);\n+\t\tbool = Boolean.valueOf(false);\n \t\tPhantomReference pr = new PhantomReference(bool, rq);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c6f4f5869f8831588afc36bd943fd934fd92adc"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1OTQxOTU5", "url": "https://github.com/eclipse-openj9/openj9/pull/10979#pullrequestreview-515941959", "createdAt": "2020-10-23T19:16:45Z", "commit": {"oid": "7c6f4f5869f8831588afc36bd943fd934fd92adc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToxNjo0NVrOHna4Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToxNjo0NVrOHna4Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5NjkxMQ==", "bodyText": "Same concern about extended life time here", "url": "https://github.com/eclipse-openj9/openj9/pull/10979#discussion_r511096911", "createdAt": "2020-10-23T19:16:45Z", "author": {"login": "DanHeidinga"}, "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/ref/Test_PhantomReference.java", "diffHunk": "@@ -53,7 +53,7 @@ public void test_get() {\n \t@Test\n \tpublic void test_Constructor() {\n \t\tReferenceQueue rq = new ReferenceQueue();\n-\t\tbool = new Boolean(true);\n+\t\tbool = Boolean.valueOf(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c6f4f5869f8831588afc36bd943fd934fd92adc"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1OTQyMzEw", "url": "https://github.com/eclipse-openj9/openj9/pull/10979#pullrequestreview-515942310", "createdAt": "2020-10-23T19:17:22Z", "commit": {"oid": "7c6f4f5869f8831588afc36bd943fd934fd92adc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToxNzoyMlrOHna6ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxOToxNzoyMlrOHna6ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTA5NzQ0NQ==", "bodyText": "Similar concerns with this test", "url": "https://github.com/eclipse-openj9/openj9/pull/10979#discussion_r511097445", "createdAt": "2020-10-23T19:17:22Z", "author": {"login": "DanHeidinga"}, "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/ref/Test_ReferenceQueue.java", "diffHunk": "@@ -55,7 +55,7 @@ public void run() {\n \t\t\tsynchronized (rq) {\n \t\t\t\t// store in a static so it won't be gc'ed because the jit\n \t\t\t\t// optimized it out\n-\t\t\t\tinteger = new Integer(667);\n+\t\t\t\tinteger = Integer.valueOf(667);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c6f4f5869f8831588afc36bd943fd934fd92adc"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c6f4f5869f8831588afc36bd943fd934fd92adc", "author": {"user": {"login": "gacholio", "name": "Graham Chapman"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7c6f4f5869f8831588afc36bd943fd934fd92adc", "committedDate": "2020-10-23T18:47:50Z", "message": "Use valueOf instead of primitive wrapper constructors\n\nSearch and replace of `new PrimitiveType(` with `PrimitiveType.valueOf(`\n\nFixes: #10937\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>"}, "afterCommit": {"oid": "a67c53f3b30a0c16f68921720bdb9868bf1bd0cb", "author": {"user": {"login": "gacholio", "name": "Graham Chapman"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a67c53f3b30a0c16f68921720bdb9868bf1bd0cb", "committedDate": "2020-10-23T20:28:14Z", "message": "Use valueOf instead of primitive wrapper constructors\n\nSearch and replace of `new PrimitiveType(` with `PrimitiveType.valueOf(`\n\nFix the vich test so that it continues to ensure 32 unique objects.\n\nFixes: #10937\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a67c53f3b30a0c16f68921720bdb9868bf1bd0cb", "author": {"user": {"login": "gacholio", "name": "Graham Chapman"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a67c53f3b30a0c16f68921720bdb9868bf1bd0cb", "committedDate": "2020-10-23T20:28:14Z", "message": "Use valueOf instead of primitive wrapper constructors\n\nSearch and replace of `new PrimitiveType(` with `PrimitiveType.valueOf(`\n\nFix the vich test so that it continues to ensure 32 unique objects.\n\nFixes: #10937\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>"}, "afterCommit": {"oid": "a4d2db2a95a5bc20bf6d2d4754ee0426ea6aade4", "author": {"user": {"login": "gacholio", "name": "Graham Chapman"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a4d2db2a95a5bc20bf6d2d4754ee0426ea6aade4", "committedDate": "2020-10-23T20:49:21Z", "message": "Use valueOf instead of primitive wrapper constructors\n\nSearch and replace of `new PrimitiveType(` with `PrimitiveType.valueOf(`\n\nFix the vich test so that it continues to ensure 32 unique objects.\n\nFixes: #10937\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4d2db2a95a5bc20bf6d2d4754ee0426ea6aade4", "author": {"user": {"login": "gacholio", "name": "Graham Chapman"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a4d2db2a95a5bc20bf6d2d4754ee0426ea6aade4", "committedDate": "2020-10-23T20:49:21Z", "message": "Use valueOf instead of primitive wrapper constructors\n\nSearch and replace of `new PrimitiveType(` with `PrimitiveType.valueOf(`\n\nFix the vich test so that it continues to ensure 32 unique objects.\n\nFixes: #10937\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>"}, "afterCommit": {"oid": "1604c280c1b68b03e19b6d53d37bb5cd1adad99a", "author": {"user": {"login": "gacholio", "name": "Graham Chapman"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1604c280c1b68b03e19b6d53d37bb5cd1adad99a", "committedDate": "2020-10-23T21:04:02Z", "message": "Use valueOf instead of primitive wrapper constructors\n\nSearch and replace of `new PrimitiveType(` with `PrimitiveType.valueOf(`\n\nFix the vich test so that it continues to ensure 32 unique objects.\n\nFixes: #10937\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "829ba91478ff41bec309392f260e5290e3882a20", "author": {"user": {"login": "gacholio", "name": "Graham Chapman"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/829ba91478ff41bec309392f260e5290e3882a20", "committedDate": "2020-10-23T21:16:46Z", "message": "Use valueOf instead of primitive wrapper constructors\n\nSearch and replace of `new PrimitiveType(` with `PrimitiveType.valueOf(`\n\nFix the vich test so that it continues to ensure 32 unique objects.\n\nFixes: #10937\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1604c280c1b68b03e19b6d53d37bb5cd1adad99a", "author": {"user": {"login": "gacholio", "name": "Graham Chapman"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1604c280c1b68b03e19b6d53d37bb5cd1adad99a", "committedDate": "2020-10-23T21:04:02Z", "message": "Use valueOf instead of primitive wrapper constructors\n\nSearch and replace of `new PrimitiveType(` with `PrimitiveType.valueOf(`\n\nFix the vich test so that it continues to ensure 32 unique objects.\n\nFixes: #10937\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>"}, "afterCommit": {"oid": "829ba91478ff41bec309392f260e5290e3882a20", "author": {"user": {"login": "gacholio", "name": "Graham Chapman"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/829ba91478ff41bec309392f260e5290e3882a20", "committedDate": "2020-10-23T21:16:46Z", "message": "Use valueOf instead of primitive wrapper constructors\n\nSearch and replace of `new PrimitiveType(` with `PrimitiveType.valueOf(`\n\nFix the vich test so that it continues to ensure 32 unique objects.\n\nFixes: #10937\n\n[ci skip]\n\nSigned-off-by: Graham Chapman <graham_chapman@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2ODM3NjU3", "url": "https://github.com/eclipse-openj9/openj9/pull/10979#pullrequestreview-516837657", "createdAt": "2020-10-26T14:32:10Z", "commit": {"oid": "829ba91478ff41bec309392f260e5290e3882a20"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2OTI2ODE1", "url": "https://github.com/eclipse-openj9/openj9/pull/10979#pullrequestreview-516926815", "createdAt": "2020-10-26T15:56:54Z", "commit": {"oid": "829ba91478ff41bec309392f260e5290e3882a20"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNTo1Njo1NVrOHoWdcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNTo1Njo1NVrOHoWdcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA3MzA3NQ==", "bodyText": "Hopefully this comment is no longer true: Perhaps it should be deleted?", "url": "https://github.com/eclipse-openj9/openj9/pull/10979#discussion_r512073075", "createdAt": "2020-10-26T15:56:55Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/java/lang/reflect/Array.java", "diffHunk": "@@ -71,7 +71,7 @@ public static Object get(Object array, int index) throws IllegalArgumentExceptio\n \t\treturn ((short[])array)[index];\n \t} else if (arrayClass == byte[].class) {\n \t\t/* Avoiding Byte cache yields 5x performance improvement. */\n-\t\treturn new Byte(((byte[])array)[index]);\n+\t\treturn Byte.valueOf(((byte[])array)[index]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "829ba91478ff41bec309392f260e5290e3882a20"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1726, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}