{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4ODIyMjY1", "number": 10637, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNTowNjoyNVrOElAkPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNTowNjoyNVrOElAkPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjQyMDQ2OnYy", "diffSide": "RIGHT", "path": "runtime/oti/vmconstantpool.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNTowNjoyNVrOHUREGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNDo0Mjo0OVrOHVTm0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAxMzE0NA==", "bodyText": "Another alternative is to add an opt_methodHandleCommon flag that is required by both opt_methodHandle and opt_openjdkMethodhandle.\nThis comment can be moved to the description of that flag and it makes it clear (and enforced) the dependency between them", "url": "https://github.com/eclipse-openj9/openj9/pull/10637#discussion_r491013144", "createdAt": "2020-09-18T15:06:25Z", "author": {"login": "DanHeidinga"}, "path": "runtime/oti/vmconstantpool.xml", "diffHunk": "@@ -340,6 +348,30 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n \n \t<fieldref class=\"com/ibm/oti/util/WeakReferenceNode\" name=\"next\" signature=\"Lcom/ibm/oti/util/WeakReferenceNode;\" flags=\"opt_methodHandle\"/>\n \n+\t<!-- OpenJDK MethodHandles: field references. -->\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"clazz\" signature=\"Ljava/lang/Class;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"name\" signature=\"Ljava/lang/String;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"type\" signature=\"Ljava/lang/Object;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"flags\" signature=\"I\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"resolution\" signature=\"Ljava/lang/Object;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodType\" name=\"ptypes\" signature=\"[Ljava/lang/Class;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodType\" name=\"rtype\" signature=\"Ljava/lang/Class;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodType\" name=\"form\" signature=\"Ljava/lang/invoke/MethodTypeForm;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodTypeForm\" name=\"parameterSlotCount\" signature=\"S\" versions=\"14-\" flags=\"opt_openjdkMethodhandle\">\n+\t\t<fieldalias name=\"argCounts\" signature=\"J\" versions=\"8-11\"  flags=\"opt_openjdkMethodhandle\"/>\n+\t</fieldref>\n+\t<fieldref class=\"java/lang/invoke/LambdaForm\" name=\"vmentry\" signature=\"Ljava/lang/invoke/MemberName;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodHandle\" name=\"form\" signature=\"Ljava/lang/invoke/LambdaForm;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t\t\n+\t<!--\n+\tField references used by both OpenJ9 and OpenJDK MethodHandles are mentioned below.\n+\tMultiple flags or multiple definitions under different flags are unsupported for field references.\n+\tSo, the below field references are defined without a flag field.\n+\tThese field references are only needed for opt_methodHandle and opt_openjdkMethodhandle flags.\n+\t-->\n+\t<fieldref class=\"java/lang/invoke/MethodType\" name=\"methodDescriptor\" signature=\"Ljava/lang/String;\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "062f7e0dd6d5ab51be0a0ad1c90c4c888103b035"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAxNDM1OQ==", "bodyText": "This should work. I will add another flag for common dependencies between OpenJ9 and OpenJDK MethodHandles.", "url": "https://github.com/eclipse-openj9/openj9/pull/10637#discussion_r491014359", "createdAt": "2020-09-18T15:08:19Z", "author": {"login": "babsingh"}, "path": "runtime/oti/vmconstantpool.xml", "diffHunk": "@@ -340,6 +348,30 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n \n \t<fieldref class=\"com/ibm/oti/util/WeakReferenceNode\" name=\"next\" signature=\"Lcom/ibm/oti/util/WeakReferenceNode;\" flags=\"opt_methodHandle\"/>\n \n+\t<!-- OpenJDK MethodHandles: field references. -->\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"clazz\" signature=\"Ljava/lang/Class;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"name\" signature=\"Ljava/lang/String;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"type\" signature=\"Ljava/lang/Object;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"flags\" signature=\"I\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"resolution\" signature=\"Ljava/lang/Object;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodType\" name=\"ptypes\" signature=\"[Ljava/lang/Class;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodType\" name=\"rtype\" signature=\"Ljava/lang/Class;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodType\" name=\"form\" signature=\"Ljava/lang/invoke/MethodTypeForm;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodTypeForm\" name=\"parameterSlotCount\" signature=\"S\" versions=\"14-\" flags=\"opt_openjdkMethodhandle\">\n+\t\t<fieldalias name=\"argCounts\" signature=\"J\" versions=\"8-11\"  flags=\"opt_openjdkMethodhandle\"/>\n+\t</fieldref>\n+\t<fieldref class=\"java/lang/invoke/LambdaForm\" name=\"vmentry\" signature=\"Ljava/lang/invoke/MemberName;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodHandle\" name=\"form\" signature=\"Ljava/lang/invoke/LambdaForm;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t\t\n+\t<!--\n+\tField references used by both OpenJ9 and OpenJDK MethodHandles are mentioned below.\n+\tMultiple flags or multiple definitions under different flags are unsupported for field references.\n+\tSo, the below field references are defined without a flag field.\n+\tThese field references are only needed for opt_methodHandle and opt_openjdkMethodhandle flags.\n+\t-->\n+\t<fieldref class=\"java/lang/invoke/MethodType\" name=\"methodDescriptor\" signature=\"Ljava/lang/String;\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAxMzE0NA=="}, "originalCommit": {"oid": "062f7e0dd6d5ab51be0a0ad1c90c4c888103b035"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjEwMzM3OA==", "bodyText": "Added the opt_methodHandleCommon flag.", "url": "https://github.com/eclipse-openj9/openj9/pull/10637#discussion_r492103378", "createdAt": "2020-09-21T14:42:49Z", "author": {"login": "babsingh"}, "path": "runtime/oti/vmconstantpool.xml", "diffHunk": "@@ -340,6 +348,30 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n \n \t<fieldref class=\"com/ibm/oti/util/WeakReferenceNode\" name=\"next\" signature=\"Lcom/ibm/oti/util/WeakReferenceNode;\" flags=\"opt_methodHandle\"/>\n \n+\t<!-- OpenJDK MethodHandles: field references. -->\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"clazz\" signature=\"Ljava/lang/Class;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"name\" signature=\"Ljava/lang/String;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"type\" signature=\"Ljava/lang/Object;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"flags\" signature=\"I\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MemberName\" name=\"resolution\" signature=\"Ljava/lang/Object;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodType\" name=\"ptypes\" signature=\"[Ljava/lang/Class;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodType\" name=\"rtype\" signature=\"Ljava/lang/Class;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodType\" name=\"form\" signature=\"Ljava/lang/invoke/MethodTypeForm;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodTypeForm\" name=\"parameterSlotCount\" signature=\"S\" versions=\"14-\" flags=\"opt_openjdkMethodhandle\">\n+\t\t<fieldalias name=\"argCounts\" signature=\"J\" versions=\"8-11\"  flags=\"opt_openjdkMethodhandle\"/>\n+\t</fieldref>\n+\t<fieldref class=\"java/lang/invoke/LambdaForm\" name=\"vmentry\" signature=\"Ljava/lang/invoke/MemberName;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t<fieldref class=\"java/lang/invoke/MethodHandle\" name=\"form\" signature=\"Ljava/lang/invoke/LambdaForm;\" flags=\"opt_openjdkMethodhandle\"/>\n+\t\t\n+\t<!--\n+\tField references used by both OpenJ9 and OpenJDK MethodHandles are mentioned below.\n+\tMultiple flags or multiple definitions under different flags are unsupported for field references.\n+\tSo, the below field references are defined without a flag field.\n+\tThese field references are only needed for opt_methodHandle and opt_openjdkMethodhandle flags.\n+\t-->\n+\t<fieldref class=\"java/lang/invoke/MethodType\" name=\"methodDescriptor\" signature=\"Ljava/lang/String;\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAxMzE0NA=="}, "originalCommit": {"oid": "062f7e0dd6d5ab51be0a0ad1c90c4c888103b035"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4629, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}