{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5Mzk4MzU3", "number": 10006, "title": "Fix Class Chain Validation Caching", "bodyText": "Prior to this PR, if Class Chain Validation Caching was enabled, the result was cached using the offset of the ROM Class of the RAM Class to be validated. However, this is not functionally correct as outlined in [1]. It is possible for two J9Classes to have completely different class hierarchies and yet have the same ROM Class; that is, even though two J9Classes have the same J9ROMClass, one or more of their super classes may not have the same J9ROMClass as the other. Thus, the class chains of these two classes would be completely different. If the result of the class chain validation is cached using the J9ROMClass, the validation may incorrectly succeed.\nAdditionally, if a class gets redefined for any reason, the cached CCV result for it AND all of its subclasses must be reset.\nFor these two reasons, the CCV Result is cached in the Persistent CH Table. This allows the result to be keyed against the J9Class, and also provides the means to reset the cached value should the hierarchy change. The consequence of doing so, however, is that CCV Caching is now dependant on the CHTable not being disabled.\n[1] #9403 (comment)", "createdAt": "2020-06-24T18:58:30Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10006", "merged": true, "mergeCommit": {"oid": "0d0be4d25af99f9e771f4c4b1a7f0fd998249ed5"}, "closed": true, "closedAt": "2020-07-09T15:40:00Z", "author": {"login": "dsouzai"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcue1qjAH2gAyNDM5Mzk4MzU3OjMwMDM4MjNiNzBkMjg4MDUzNzVkZmM0MTJkNzJiOGQxM2MyODcxNGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcy8ZCkgFqTQ0NDg5NTY4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3003823b70d28805375dfc412d72b8d13c28714c", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3003823b70d28805375dfc412d72b8d13c28714c", "committedDate": "2020-06-24T19:02:22Z", "message": "Add automatic conversion\n\nAdd automatic conversion operator to TR::PersistentAllocator in order to\nallow it to be used with STL Containers.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "819f3f1c9fe1ceeb77412d7d1acd365f35611808", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/819f3f1c9fe1ceeb77412d7d1acd365f35611808", "committedDate": "2020-06-24T19:02:41Z", "message": "Add ability to collect subclasses\n\nExisting code can only vist and collect subclasses during a compilation\nbecause the structures require a TR_Memory. This commit provides the\nability to colect subclasses using STL Containers as well as Persistent\nMemory.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38d85d0877c88283e9d138fb07874f95149a8422", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/38d85d0877c88283e9d138fb07874f95149a8422", "committedDate": "2020-06-24T18:46:11Z", "message": "Reset cached CCV Result on class redefinition\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}, "afterCommit": {"oid": "cf5065d17d6880cd4bd988d23d91ca6490008e07", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/cf5065d17d6880cd4bd988d23d91ca6490008e07", "committedDate": "2020-06-24T19:03:24Z", "message": "Reset cached CCV Result on class redefinition\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTM2MDIw", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#pullrequestreview-440136020", "createdAt": "2020-06-30T15:30:12Z", "commit": {"oid": "cf5065d17d6880cd4bd988d23d91ca6490008e07"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNTozMDoxM1rOGrCEHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNjo0Mzo1M1rOGrFUmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc3NTc3Mg==", "bodyText": "Why is the test on allowRecompilation needed? Since the test is on the global options object we could do one test during bootstrap and disable CCV completely if it depends on recompilation being enabled.", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#discussion_r447775772", "createdAt": "2020-06-30T15:30:13Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9SharedCache.cpp", "diffHunk": "@@ -100,47 +100,33 @@ TR_YesNoMaybe TR_J9SharedCache::isSharedCacheDisabledBecauseFull(TR::Compilation\n    return _sharedCacheDisabledBecauseFull;\n    }\n \n-bool\n-TR_J9SharedCache::initCCVCaching()\n+CCVResult\n+TR_J9SharedCache::getCachedCCVResult(TR_J9VMBase *fej9, TR::CompilationInfo *compInfo, TR_OpaqueClassBlock *clazz)\n    {\n-   if (!_classChainValidationMutex)\n+   if (TR::Options::getCmdLineOptions()->allowRecompilation()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5065d17d6880cd4bd988d23d91ca6490008e07"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc3ODk3MA==", "bodyText": "Is there something to be gained from making these methods static?\nfej9 and compInfo are cached inside the J9SharedCache object so you could avoid passing these parameters.", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#discussion_r447778970", "createdAt": "2020-06-30T15:34:45Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9SharedCache.hpp", "diffHunk": "@@ -256,18 +243,26 @@ class TR_J9SharedCache : public TR_SharedCache\n \n    /**\n     * @brief Gets the cached result of a prior class chain validation\n-    * @param classOffsetInCache Offset into the SCC of the class to be validated\n-    * @return The CCVResult stored in the map; CCVResult::notYetValidated if result does not exist.\n+    *\n+    * @param fej9 TR_J9VMBase object\n+    * @param compInfo TR::CompilationInfo object\n+    * @param clazz The class to be validated\n+    *\n+    * @return The cached CCVResult; CCVResult::notYetValidated if result does not exist.\n     */\n-   static CCVResult getCachedCCVResult(uintptr_t classOffsetInCache);\n+   static CCVResult getCachedCCVResult(TR_J9VMBase *fej9, TR::CompilationInfo *compInfo, TR_OpaqueClassBlock *clazz);\n \n    /**\n     * @brief Caches the result of a class chain validation\n-    * @param classOffsetInCache Offset into the SCC of the class to be validated\n+    *\n+    * @param fej9 TR_J9VMBase object\n+    * @param compInfo TR::CompilationInfo object\n+    * @param clazz The class to be validated\n     * @param result The result represented as a CCVResult\n-    * @return The result of the insertion.\n+    *\n+    * @return The result of the insertion\n     */\n-   static bool cacheCCVResult(uintptr_t classOffsetInCache, CCVResult result);\n+   static bool cacheCCVResult(TR_J9VMBase *fej9, TR::CompilationInfo *compInfo, TR_OpaqueClassBlock *clazz, CCVResult result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5065d17d6880cd4bd988d23d91ca6490008e07"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc4MDk2OQ==", "bodyText": "Is classInfo guaranteed to exist here?", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#discussion_r447780969", "createdAt": "2020-06-30T15:37:31Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9SharedCache.cpp", "diffHunk": "@@ -100,47 +100,33 @@ TR_YesNoMaybe TR_J9SharedCache::isSharedCacheDisabledBecauseFull(TR::Compilation\n    return _sharedCacheDisabledBecauseFull;\n    }\n \n-bool\n-TR_J9SharedCache::initCCVCaching()\n+CCVResult\n+TR_J9SharedCache::getCachedCCVResult(TR_J9VMBase *fej9, TR::CompilationInfo *compInfo, TR_OpaqueClassBlock *clazz)\n    {\n-   if (!_classChainValidationMutex)\n+   if (TR::Options::getCmdLineOptions()->allowRecompilation()\n+       && !TR::Options::getCmdLineOptions()->getOption(TR_DisableCHOpts))\n       {\n-      if (!(_classChainValidationMutex = TR::Monitor::create(\"JIT-ClassChainValidationMutex\")))\n-         return false;\n+      TR::ClassTableCriticalSection cacheResult(fej9);\n+      TR_PersistentCHTable *table = compInfo->getPersistentInfo()->getPersistentCHTable();\n+      TR_PersistentClassInfo *classInfo = table->findClassInfo(clazz);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5065d17d6880cd4bd988d23d91ca6490008e07"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzc4MTE2NQ==", "bodyText": "Is classInfo guaranteed to exist here?", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#discussion_r447781165", "createdAt": "2020-06-30T15:37:48Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9SharedCache.cpp", "diffHunk": "@@ -100,47 +100,33 @@ TR_YesNoMaybe TR_J9SharedCache::isSharedCacheDisabledBecauseFull(TR::Compilation\n    return _sharedCacheDisabledBecauseFull;\n    }\n \n-bool\n-TR_J9SharedCache::initCCVCaching()\n+CCVResult\n+TR_J9SharedCache::getCachedCCVResult(TR_J9VMBase *fej9, TR::CompilationInfo *compInfo, TR_OpaqueClassBlock *clazz)\n    {\n-   if (!_classChainValidationMutex)\n+   if (TR::Options::getCmdLineOptions()->allowRecompilation()\n+       && !TR::Options::getCmdLineOptions()->getOption(TR_DisableCHOpts))\n       {\n-      if (!(_classChainValidationMutex = TR::Monitor::create(\"JIT-ClassChainValidationMutex\")))\n-         return false;\n+      TR::ClassTableCriticalSection cacheResult(fej9);\n+      TR_PersistentCHTable *table = compInfo->getPersistentInfo()->getPersistentCHTable();\n+      TR_PersistentClassInfo *classInfo = table->findClassInfo(clazz);\n+      return classInfo->getCCVResult();\n       }\n-\n-   if (!_ccvMap)\n-      {\n-      void *storage = jitPersistentAlloc(sizeof(CCVMap));\n-      if (!storage)\n-         return false;\n-\n-      _ccvMap = new (storage) CCVMap(CCVComparator(), getPersistentAllocator());\n-      }\n-\n-   return true;\n-   }\n-\n-TR_J9SharedCache::CCVResult\n-TR_J9SharedCache::getCachedCCVResult(uintptr_t classOffsetInCache)\n-   {\n-   OMR::CriticalSection getCachedResult(_classChainValidationMutex);\n-\n-   auto iter = _ccvMap->find(classOffsetInCache);\n-   if (iter == _ccvMap->end())\n-      return CCVResult::notYetValidated;\n-   else\n-      return iter->second;\n+   return CCVResult::notYetValidated;\n    }\n \n bool\n-TR_J9SharedCache::cacheCCVResult(uintptr_t classOffsetInCache, CCVResult result)\n+TR_J9SharedCache::cacheCCVResult(TR_J9VMBase *fej9, TR::CompilationInfo *compInfo, TR_OpaqueClassBlock *clazz, CCVResult result)\n    {\n-   OMR::CriticalSection cacheResult(_classChainValidationMutex);\n-\n-   auto res = _ccvMap->insert(std::make_pair(classOffsetInCache, result));\n-\n-   return res.second;\n+   if (TR::Options::getCmdLineOptions()->allowRecompilation()\n+       && !TR::Options::getCmdLineOptions()->getOption(TR_DisableCHOpts))\n+      {\n+      TR::ClassTableCriticalSection cacheResult(fej9);\n+      TR_PersistentCHTable *table = compInfo->getPersistentInfo()->getPersistentCHTable();\n+      TR_PersistentClassInfo *classInfo = table->findClassInfo(clazz);\n+      classInfo->setCCVResult(result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5065d17d6880cd4bd988d23d91ca6490008e07"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyNjQzNw==", "bodyText": "This is going to increase the size of each entry in the CHTable. We should encode it on 8-bits.\nAlso, maybe a add an inline comment for this field. CCV is not very descriptive.", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#discussion_r447826437", "createdAt": "2020-06-30T16:39:50Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/RuntimeAssumptions.hpp", "diffHunk": "@@ -180,6 +193,7 @@ class TR_PersistentClassInfo : public TR_Link0<TR_PersistentClassInfo>\n    int32_t                             _nameLength;\n    flags8_t                            _flags;\n    flags8_t                            _shouldNotBeNewlyExtended; // one bit for each possible compilation thread\n+   CCVResult                           _ccvResult;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5065d17d6880cd4bd988d23d91ca6490008e07"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyNjU5Ng==", "bodyText": "This could me marked as const", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#discussion_r447826596", "createdAt": "2020-06-30T16:40:05Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/RuntimeAssumptions.hpp", "diffHunk": "@@ -147,6 +157,9 @@ class TR_PersistentClassInfo : public TR_Link0<TR_PersistentClassInfo>\n    int32_t getNameLength()                       { return _nameLength; }\n    virtual void setNameLength(int32_t length)            { _nameLength = length; }\n \n+   void setCCVResult(CCVResult result) { _ccvResult = result; }\n+   CCVResult getCCVResult() { return _ccvResult; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5065d17d6880cd4bd988d23d91ca6490008e07"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzgyOTE0Ng==", "bodyText": "Could we use scratch memory instead of persistent for this temporary?", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#discussion_r447829146", "createdAt": "2020-06-30T16:43:53Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/PersistentCHTable.cpp", "diffHunk": "@@ -713,3 +713,45 @@ TR_PersistentCHTable::classGotLoaded(\n       }\n    return clazz;\n    }\n+\n+void\n+TR_PersistentCHTable::collectAllSubClasses(TR_PersistentClassInfo *clazz, ClassList &classList, TR_J9VMBase *fej9, bool locked)\n+   {\n+   TR::ClassTableCriticalSection collectSubClasses(fej9, locked);\n+\n+   VisitTracker<> marked(TR::Compiler->persistentAllocator());\n+\n+   collectAllSubClassesLocked(clazz, classList, marked);\n+   }\n+\n+void\n+TR_PersistentCHTable::collectAllSubClassesLocked(TR_PersistentClassInfo *clazz, ClassList &classList, VisitTracker<> &marked)\n+   {\n+   for (auto subClass = clazz->getFirstSubclass(); subClass; subClass = subClass->getNext())\n+      {\n+      if (!subClass->getClassInfo()->hasBeenVisited())\n+         {\n+         TR_PersistentClassInfo *sc = subClass->getClassInfo();\n+         classList.push_front(sc);\n+         marked.visit(sc);\n+         collectAllSubClassesLocked(sc, classList, marked);\n+         }\n+      }\n+   }\n+\n+void\n+TR_PersistentCHTable::resetCachedCCVResult(TR_J9VMBase *fej9, TR_OpaqueClassBlock *clazz)\n+   {\n+   TR::ClassTableCriticalSection collectSubClasses(fej9);\n+\n+   ClassList classList(TR::Compiler->persistentAllocator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf5065d17d6880cd4bd988d23d91ca6490008e07"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf5065d17d6880cd4bd988d23d91ca6490008e07", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/cf5065d17d6880cd4bd988d23d91ca6490008e07", "committedDate": "2020-06-24T19:03:24Z", "message": "Reset cached CCV Result on class redefinition\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}, "afterCommit": {"oid": "34fe2f57f167d0a9fcc07b033f966145d26bf6eb", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/34fe2f57f167d0a9fcc07b033f966145d26bf6eb", "committedDate": "2020-07-02T18:21:15Z", "message": "Reset cached CCV Result on class redefinition\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MDEwOTU3", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#pullrequestreview-444010957", "createdAt": "2020-07-07T15:34:35Z", "commit": {"oid": "34fe2f57f167d0a9fcc07b033f966145d26bf6eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNTozNDozNlrOGuEPeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNTozNDozNlrOGuEPeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk1NzE3Nw==", "bodyText": "Does something like this work on all platforms: enum CCVResults : uint8_t\nThis would eliminate the need for casting.", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#discussion_r450957177", "createdAt": "2020-07-07T15:34:36Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/RuntimeAssumptions.hpp", "diffHunk": "@@ -45,6 +45,16 @@ class TR_PreXRecompile;\n class TR_RedefinedClassPicSite;\n class TR_UnloadedClassPicSite;\n \n+/**\n+ * @brief Enum to describe the result of a Class Chain Validation (CCV).\n+ */\n+enum CCVResult", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34fe2f57f167d0a9fcc07b033f966145d26bf6eb"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MDE0NjE2", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#pullrequestreview-444014616", "createdAt": "2020-07-07T15:38:38Z", "commit": {"oid": "34fe2f57f167d0a9fcc07b033f966145d26bf6eb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNTozODozOFrOGuEZyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNTozODozOFrOGuEZyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk1OTgxOA==", "bodyText": "const should stay after the name of the function to indicate that the function does not change the object it operates on.", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#discussion_r450959818", "createdAt": "2020-07-07T15:38:38Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/RuntimeAssumptions.hpp", "diffHunk": "@@ -147,6 +160,9 @@ class TR_PersistentClassInfo : public TR_Link0<TR_PersistentClassInfo>\n    int32_t getNameLength()                       { return _nameLength; }\n    virtual void setNameLength(int32_t length)            { _nameLength = length; }\n \n+   void setCCVResult(CCVResult result) { _ccvResult = static_cast<uint8_t>(result); }\n+   const CCVResult getCCVResult() { return static_cast<CCVResult>(_ccvResult); }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34fe2f57f167d0a9fcc07b033f966145d26bf6eb"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34fe2f57f167d0a9fcc07b033f966145d26bf6eb", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/34fe2f57f167d0a9fcc07b033f966145d26bf6eb", "committedDate": "2020-07-02T18:21:15Z", "message": "Reset cached CCV Result on class redefinition\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}, "afterCommit": {"oid": "f49710a67b42d774938a9bf98b709baa56021bca", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f49710a67b42d774938a9bf98b709baa56021bca", "committedDate": "2020-07-07T18:57:31Z", "message": "Reset cached CCV Result on class redefinition\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTgxNjYx", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#pullrequestreview-444181661", "createdAt": "2020-07-07T19:20:39Z", "commit": {"oid": "f49710a67b42d774938a9bf98b709baa56021bca"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "423cb8bfdc22b358b5392f8994919272aed0c5b8", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/423cb8bfdc22b358b5392f8994919272aed0c5b8", "committedDate": "2020-07-08T14:57:47Z", "message": "Use Persistent CH Table for CCV Caching\n\nPrior to this commit, if Class Chain Validation Caching was enabled, the\nresult was cached using the offset of the ROM Class of the RAM Class to\nbe validated. However, this is not functionally correct. It is possible\nfor two J9Classes to have completely different class hierarchies and yet\nhave the same ROM Class; that is, even though two J9Classes have the\nsame J9ROMClass, one or more of their super classes may not have the\nsame J9ROMClass as the other. Thus, the class chains of these two\nclasses would be completely different. If the result of the class chain\nvalidation is cached using the J9ROMClass, the validation may\nincorrectly succeed.\n\nAdditionally, if a class gets redefined for any reason, the cached CCV\nresult for it AND all of its subclasses must be reset.\n\nFor these two reasons, the CCV Result is cached in the Persistent CH\nTable. This allows the result to be keyed against the J9Class, and also\nprovides the means to reset the cached value should the hierarchy\nchange. The consequence of doing so, however, is that CCV Caching is now\ndependant on the CHTable not being disabled.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6e29552433971ce2c026b069beb3ed4d8a708f6", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d6e29552433971ce2c026b069beb3ed4d8a708f6", "committedDate": "2020-07-08T14:57:51Z", "message": "Disable CCV Sharing if CHTable is not used\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18f5bbd7a6437506eae233fe2edf82647a60b945", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/18f5bbd7a6437506eae233fe2edf82647a60b945", "committedDate": "2020-07-08T14:57:51Z", "message": "Reset cached CCV Result on class redefinition\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f49710a67b42d774938a9bf98b709baa56021bca", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f49710a67b42d774938a9bf98b709baa56021bca", "committedDate": "2020-07-07T18:57:31Z", "message": "Reset cached CCV Result on class redefinition\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}, "afterCommit": {"oid": "18f5bbd7a6437506eae233fe2edf82647a60b945", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/18f5bbd7a6437506eae233fe2edf82647a60b945", "committedDate": "2020-07-08T14:57:51Z", "message": "Reset cached CCV Result on class redefinition\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0ODk1Njg4", "url": "https://github.com/eclipse-openj9/openj9/pull/10006#pullrequestreview-444895688", "createdAt": "2020-07-08T15:43:57Z", "commit": {"oid": "18f5bbd7a6437506eae233fe2edf82647a60b945"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 439, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}