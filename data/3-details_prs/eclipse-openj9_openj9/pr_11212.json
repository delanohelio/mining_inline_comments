{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNzAwMzQw", "number": 11212, "title": "Improve JITServer ROMClass packing", "bodyText": "Pad J9UTF8 strings appended at the end of the packed ROMClass such that their length fields are properly aligned (on the size of the length field, which is 2 bytes).\nDo not append copies of strings that are not interned to reduce the size of the packed ROMClass and avoid unnecessary copying.\nUpdate the romSize field in the packed ROMClass so that the appended strings are always used afterwards.\n\nNote: this change doesn't require incrementing the JITServer protocol version. A newer server will still work correctly with ROMClasses packed by an older client, and vice versa.\nCloses: #11211", "createdAt": "2020-11-17T20:53:55Z", "url": "https://github.com/eclipse-openj9/openj9/pull/11212", "merged": true, "mergeCommit": {"oid": "c58fe5a3886b5985636bd084176ee89edea5025c"}, "closed": true, "closedAt": "2020-11-19T16:18:17Z", "author": {"login": "AlexeyKhrabrov"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdde59hAH2gAyNTIyNzAwMzQwOjIwYzQzM2U1YjEzYzBjZWU3MjdlMTVkNmZmNWEwMTBkOTcyMGI4MDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdduOjVAFqTUzMzQ0NzYzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "20c433e5b13c0cee727e15d6ff5a010d9720b807", "author": {"user": {"login": "AlexeyKhrabrov", "name": "Alexey Khrabrov"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/20c433e5b13c0cee727e15d6ff5a010d9720b807", "committedDate": "2020-11-17T19:41:30Z", "message": "Update romSize field in packed ROMClass\n\nIf romSize stays the same as in the original ROMClass, the strings\nappended at the can only be accessed directly, but not via the\ngetROMString() methods.\n\nSigned-off-by: Alexey Khrabrov <khrabrov@cs.toronto.edu>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMDgzNjU2", "url": "https://github.com/eclipse-openj9/openj9/pull/11212#pullrequestreview-533083656", "createdAt": "2020-11-18T03:46:43Z", "commit": {"oid": "a6963c120cd7521140c381564dc2fbeafa601944"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMzo0Njo0NFrOH1ZO4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNDoxMTozNVrOH1ap-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc0OTk4NA==", "bodyText": "Here, size is the padded size. Is there a risk to copy past the end of the string and risk a crash?\nUnlikely though because the padding is at most 1.", "url": "https://github.com/eclipse-openj9/openj9/pull/11212#discussion_r525749984", "createdAt": "2020-11-18T03:46:44Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/JITServerHelpers.cpp", "diffHunk": "@@ -37,63 +37,88 @@ bool         JITServerHelpers::_serverAvailable = true;\n uint64_t     JITServerHelpers::_nextConnectionRetryTime = 0;\n TR::Monitor *JITServerHelpers::_clientStreamMonitor = NULL;\n \n+\n+// To ensure that the length fields in UTF8 strings appended at the end of the\n+// packed ROMClass are properly aligned, we must pad the strings accordingly.\n+// This function returns the total size of a UTF8 string with the padding.\n static size_t\n-methodStringsLength(J9ROMMethod *method)\n+getUTF8Size(const J9UTF8 *str)\n    {\n-   J9UTF8 *name = J9ROMMETHOD_NAME(method);\n-   J9UTF8 *sig = J9ROMMETHOD_SIGNATURE(method);\n-   return (name->length + sig->length + (2 * sizeof(U_16)));\n+   return OMR::alignNoCheck(str->length, sizeof(str->length)) + sizeof(str->length);\n+   }\n+\n+static size_t\n+getPackedUTF8Size(const J9UTF8 *str, const J9ROMClass *romClass)\n+   {\n+   return JITServerHelpers::isAddressInROMClass(str, romClass) ? 0 : getUTF8Size(str);\n+   }\n+\n+// If the string points outside of the contiguous part of origRomClass, appends\n+// it (with padding) at curPos and updates the SRP to the string in the packed\n+// ROMClass. Returns the new value of curPos.\n+static uint8_t *\n+packUTF8(uint8_t *curPos, const J9UTF8 *origStr, const J9ROMClass *origRomClass, J9SRP &srp)\n+   {\n+   if (JITServerHelpers::isAddressInROMClass(origStr, origRomClass))\n+      return curPos;\n+\n+   size_t size = getUTF8Size(origStr);\n+   memcpy(curPos, origStr, size);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6963c120cd7521140c381564dc2fbeafa601944"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc2MTgwOA==", "bodyText": "Is this the right comparison? alignedNoCheck can return 0 only when the length is 0.", "url": "https://github.com/eclipse-openj9/openj9/pull/11212#discussion_r525761808", "createdAt": "2020-11-18T03:59:09Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/JITServerHelpers.cpp", "diffHunk": "@@ -37,63 +37,88 @@ bool         JITServerHelpers::_serverAvailable = true;\n uint64_t     JITServerHelpers::_nextConnectionRetryTime = 0;\n TR::Monitor *JITServerHelpers::_clientStreamMonitor = NULL;\n \n+\n+// To ensure that the length fields in UTF8 strings appended at the end of the\n+// packed ROMClass are properly aligned, we must pad the strings accordingly.\n+// This function returns the total size of a UTF8 string with the padding.\n static size_t\n-methodStringsLength(J9ROMMethod *method)\n+getUTF8Size(const J9UTF8 *str)\n    {\n-   J9UTF8 *name = J9ROMMETHOD_NAME(method);\n-   J9UTF8 *sig = J9ROMMETHOD_SIGNATURE(method);\n-   return (name->length + sig->length + (2 * sizeof(U_16)));\n+   return OMR::alignNoCheck(str->length, sizeof(str->length)) + sizeof(str->length);\n+   }\n+\n+static size_t\n+getPackedUTF8Size(const J9UTF8 *str, const J9ROMClass *romClass)\n+   {\n+   return JITServerHelpers::isAddressInROMClass(str, romClass) ? 0 : getUTF8Size(str);\n+   }\n+\n+// If the string points outside of the contiguous part of origRomClass, appends\n+// it (with padding) at curPos and updates the SRP to the string in the packed\n+// ROMClass. Returns the new value of curPos.\n+static uint8_t *\n+packUTF8(uint8_t *curPos, const J9UTF8 *origStr, const J9ROMClass *origRomClass, J9SRP &srp)\n+   {\n+   if (JITServerHelpers::isAddressInROMClass(origStr, origRomClass))\n+      return curPos;\n+\n+   size_t size = getUTF8Size(origStr);\n+   memcpy(curPos, origStr, size);\n+   static_assert(sizeof(origStr->length) == 2, \"UTF8 length field is not 2 bytes large\");\n+   if (!OMR::alignedNoCheck(origStr->length, sizeof(origStr->length)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6963c120cd7521140c381564dc2fbeafa601944"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc3MzMwNQ==", "bodyText": "We didn't do this before. Was this a bug?", "url": "https://github.com/eclipse-openj9/openj9/pull/11212#discussion_r525773305", "createdAt": "2020-11-18T04:11:35Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/JITServerHelpers.cpp", "diffHunk": "@@ -37,63 +37,88 @@ bool         JITServerHelpers::_serverAvailable = true;\n uint64_t     JITServerHelpers::_nextConnectionRetryTime = 0;\n TR::Monitor *JITServerHelpers::_clientStreamMonitor = NULL;\n \n+\n+// To ensure that the length fields in UTF8 strings appended at the end of the\n+// packed ROMClass are properly aligned, we must pad the strings accordingly.\n+// This function returns the total size of a UTF8 string with the padding.\n static size_t\n-methodStringsLength(J9ROMMethod *method)\n+getUTF8Size(const J9UTF8 *str)\n    {\n-   J9UTF8 *name = J9ROMMETHOD_NAME(method);\n-   J9UTF8 *sig = J9ROMMETHOD_SIGNATURE(method);\n-   return (name->length + sig->length + (2 * sizeof(U_16)));\n+   return OMR::alignNoCheck(str->length, sizeof(str->length)) + sizeof(str->length);\n+   }\n+\n+static size_t\n+getPackedUTF8Size(const J9UTF8 *str, const J9ROMClass *romClass)\n+   {\n+   return JITServerHelpers::isAddressInROMClass(str, romClass) ? 0 : getUTF8Size(str);\n+   }\n+\n+// If the string points outside of the contiguous part of origRomClass, appends\n+// it (with padding) at curPos and updates the SRP to the string in the packed\n+// ROMClass. Returns the new value of curPos.\n+static uint8_t *\n+packUTF8(uint8_t *curPos, const J9UTF8 *origStr, const J9ROMClass *origRomClass, J9SRP &srp)\n+   {\n+   if (JITServerHelpers::isAddressInROMClass(origStr, origRomClass))\n+      return curPos;\n+\n+   size_t size = getUTF8Size(origStr);\n+   memcpy(curPos, origStr, size);\n+   static_assert(sizeof(origStr->length) == 2, \"UTF8 length field is not 2 bytes large\");\n+   if (!OMR::alignedNoCheck(origStr->length, sizeof(origStr->length)))\n+      curPos[size - 1] = '\\0';\n+   NNSRP_SET(srp, curPos);\n+   return curPos + size;\n    }\n \n // Packs a ROMClass into a std::string to be transferred to the server.\n-// The name and signature of all methods are appended to the end of the cloned class body and the\n-// self referential pointers to them are updated to deal with possible interning. The method names\n-// and signature are needed on the server but may be interned globally on the client.\n+// Some of the name and signature strings are interned and stored outside\n+// of the ROMClass body. Such strings are appended to the end of the cloned\n+// ROMClass body and the self referential pointers to them are updated.\n static std::string\n packROMClass(J9ROMClass *origRomClass, TR_Memory *trMemory)\n    {\n+   size_t totalSize = origRomClass->romSize;\n    J9UTF8 *className = J9ROMCLASS_CLASSNAME(origRomClass);\n-   size_t classNameSize = className->length + sizeof(U_16);\n+   totalSize += getPackedUTF8Size(className, origRomClass);\n \n    J9ROMMethod *romMethod = J9ROMCLASS_ROMMETHODS(origRomClass);\n-   size_t totalSize = origRomClass->romSize + classNameSize;\n    for (size_t i = 0; i < origRomClass->romMethodCount; ++i)\n       {\n-      totalSize += methodStringsLength(romMethod);\n+      totalSize += getPackedUTF8Size(J9ROMMETHOD_NAME(romMethod), origRomClass);\n+      totalSize += getPackedUTF8Size(J9ROMMETHOD_SIGNATURE(romMethod), origRomClass);\n       romMethod = nextROMMethod(romMethod);\n       }\n \n+   // Check if the contiguous part of the ROMClass already contains all the strings visited above\n+   if (totalSize == origRomClass->romSize)\n+      return std::string((char *)origRomClass, origRomClass->romSize);\n+\n    J9ROMClass *romClass = (J9ROMClass *)trMemory->allocateHeapMemory(totalSize);\n    if (!romClass)\n       throw std::bad_alloc();\n    memcpy(romClass, origRomClass, origRomClass->romSize);\n+   // Update the size to include the strings that will be appended at the end\n+   romClass->romSize = totalSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6963c120cd7521140c381564dc2fbeafa601944"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cb9c6ed911e3dca50038902c16590ac3f4cbb6c", "author": {"user": {"login": "AlexeyKhrabrov", "name": "Alexey Khrabrov"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7cb9c6ed911e3dca50038902c16590ac3f4cbb6c", "committedDate": "2020-11-18T04:43:31Z", "message": "Align J9UTF8 strings in packed ROMClass\n\nThe length field of the J9UTF8 structure must be aligned on its size\n(2 bytes). Strings in ROMClasses already satisfy this requirement. To\nenforce it in a packed ROMClass, we pad each appended string so that\nthe next one is always aligned on the size of the length field.\n\nSigned-off-by: Alexey Khrabrov <khrabrov@cs.toronto.edu>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e52aab4a853bf5d562fa5f5deb16233fd42cd07", "author": {"user": {"login": "AlexeyKhrabrov", "name": "Alexey Khrabrov"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3e52aab4a853bf5d562fa5f5deb16233fd42cd07", "committedDate": "2020-11-18T04:43:36Z", "message": "Do not append non-interned strings at the end of packed ROMClass\n\nSkip appending copies of strings that are already stored within the\ncontiguous portion of the ROMClass to avoid unnecessary copying and\nreduce the size of the packed ROMClass.\n\nSigned-off-by: Alexey Khrabrov <khrabrov@cs.toronto.edu>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6963c120cd7521140c381564dc2fbeafa601944", "author": {"user": {"login": "AlexeyKhrabrov", "name": "Alexey Khrabrov"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a6963c120cd7521140c381564dc2fbeafa601944", "committedDate": "2020-11-17T20:17:58Z", "message": "Do not append non-interned strings at the end of packed ROMClass\n\nSkip appending copies of strings that are already stored within the\ncontiguous portion of the ROMClass to avoid unnecessary copying and\nreduce the size of the packed ROMClass.\n\nSigned-off-by: Alexey Khrabrov <khrabrov@cs.toronto.edu>"}, "afterCommit": {"oid": "3e52aab4a853bf5d562fa5f5deb16233fd42cd07", "author": {"user": {"login": "AlexeyKhrabrov", "name": "Alexey Khrabrov"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3e52aab4a853bf5d562fa5f5deb16233fd42cd07", "committedDate": "2020-11-18T04:43:36Z", "message": "Do not append non-interned strings at the end of packed ROMClass\n\nSkip appending copies of strings that are already stored within the\ncontiguous portion of the ROMClass to avoid unnecessary copying and\nreduce the size of the packed ROMClass.\n\nSigned-off-by: Alexey Khrabrov <khrabrov@cs.toronto.edu>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTA5MjQ0", "url": "https://github.com/eclipse-openj9/openj9/pull/11212#pullrequestreview-533109244", "createdAt": "2020-11-18T05:13:06Z", "commit": {"oid": "3e52aab4a853bf5d562fa5f5deb16233fd42cd07"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNToxMzowNlrOH1ddxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNToxMzowNlrOH1ddxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgxOTMzMg==", "bodyText": "Don't we add too much now? sizeof(*str) is 4 so we pad payload to be a multiple of 4 and then add another 4 bytes", "url": "https://github.com/eclipse-openj9/openj9/pull/11212#discussion_r525819332", "createdAt": "2020-11-18T05:13:06Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/JITServerHelpers.cpp", "diffHunk": "@@ -37,63 +37,88 @@ bool         JITServerHelpers::_serverAvailable = true;\n uint64_t     JITServerHelpers::_nextConnectionRetryTime = 0;\n TR::Monitor *JITServerHelpers::_clientStreamMonitor = NULL;\n \n+\n+// To ensure that the length fields in UTF8 strings appended at the end of the\n+// packed ROMClass are properly aligned, we must pad the strings accordingly.\n+// This function returns the total size of a UTF8 string with the padding.\n static size_t\n-methodStringsLength(J9ROMMethod *method)\n+getUTF8Size(const J9UTF8 *str)\n    {\n-   J9UTF8 *name = J9ROMMETHOD_NAME(method);\n-   J9UTF8 *sig = J9ROMMETHOD_SIGNATURE(method);\n-   return (name->length + sig->length + (2 * sizeof(U_16)));\n+   return OMR::alignNoCheck(str->length, sizeof(*str)) + sizeof(*str);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e52aab4a853bf5d562fa5f5deb16233fd42cd07"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNDQ3NjM4", "url": "https://github.com/eclipse-openj9/openj9/pull/11212#pullrequestreview-533447638", "createdAt": "2020-11-18T13:32:34Z", "commit": {"oid": "3e52aab4a853bf5d562fa5f5deb16233fd42cd07"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1595, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}