{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MTUyNzM3", "number": 9564, "title": "Convert long to float on Windows-32 bit", "bodyText": "Work around a problem with float cast in VS2017 15.9\nSigned-off-by: Peter Shipton Peter_Shipton@ca.ibm.com", "createdAt": "2020-05-14T17:44:54Z", "url": "https://github.com/eclipse-openj9/openj9/pull/9564", "merged": true, "mergeCommit": {"oid": "d779b737ad297692767e0bd44bd754abe1aa8986"}, "closed": true, "closedAt": "2020-05-19T15:18:15Z", "author": {"login": "pshipton"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchSPkogFqTQxMjA2ODYzMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABci2DDdgFqTQxNDU1NTU5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMDY4NjMw", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#pullrequestreview-412068630", "createdAt": "2020-05-14T18:17:21Z", "commit": {"oid": "8a65d2d0e577107ea4ec28f256d511cd824ccffd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODoxNzoyMVrOGVotYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo0Nzo1OFrOGVpwuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0MDI1OQ==", "bodyText": "One declaration at a time, each with an initializer.", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#discussion_r425340259", "createdAt": "2020-05-14T18:17:21Z", "author": {"login": "keithc-ca"}, "path": "runtime/util/fltconv.c", "diffHunk": "@@ -386,8 +387,75 @@ helperCConvertLongToFloat(I_64 src)\n {\n \tjfloat tmpDst;\n \n+/* Every platform but 32-bit Windows can use the cast.\n+ * Using VS2017 15.9 the cast doesn't give the expected result.\n+ */\n+#if !defined(WIN32) || defined(WIN64)\n \ttmpDst = (jfloat)src;\n-\n+#else /* !defined(WIN32) || defined(WIN64) */\n+\t{\n+\t\tint idl1, sign;\n+\t\tU_64 spfInt, overflow;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a65d2d0e577107ea4ec28f256d511cd824ccffd"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM0NDY5NA==", "bodyText": "This test must be >= else it yields the wrong answer for u64val = (1 << 32).", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#discussion_r425344694", "createdAt": "2020-05-14T18:25:25Z", "author": {"login": "keithc-ca"}, "path": "runtime/util/fltconv.c", "diffHunk": "@@ -440,4 +508,21 @@ fltconv_indexLeadingOne32(U_32 u32val)\n }\n \n \n+static int \n+fltconv_indexLeadingOne64(U_64 u64val)\n+{\n+\tint leading;\n+\t\n+\tif (0 == u64val) {\n+\t\treturn -1;\n+\t}\n+\n+\tleading = fltconv_indexLeadingOne32((U_32)(u64val >> 32));\n+\tif (leading > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a65d2d0e577107ea4ec28f256d511cd824ccffd"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1NzQ5Ng==", "bodyText": "I suggest (((U_64)1) << 63) is a better way to say 0x8000000000000000 and the first two conditions can be tested in a single operation with <:\n    if ((((U_64)1) << 63) < overflow) {\n        spfInt + = 1;\n    } else if ((((U_64)1) << 63) == overflow) {\n        if (0 != (spfInt & 1)) {\n            spfInt + = 1;\n        }\n    }", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#discussion_r425357496", "createdAt": "2020-05-14T18:47:58Z", "author": {"login": "keithc-ca"}, "path": "runtime/util/fltconv.c", "diffHunk": "@@ -386,8 +387,75 @@ helperCConvertLongToFloat(I_64 src)\n {\n \tjfloat tmpDst;\n \n+/* Every platform but 32-bit Windows can use the cast.\n+ * Using VS2017 15.9 the cast doesn't give the expected result.\n+ */\n+#if !defined(WIN32) || defined(WIN64)\n \ttmpDst = (jfloat)src;\n-\n+#else /* !defined(WIN32) || defined(WIN64) */\n+\t{\n+\t\tint idl1, sign;\n+\t\tU_64 spfInt, overflow;\n+\t\n+\t\tif (0 == src) {\n+\t\t\treturn 0.0f;\n+\t\t}\n+\t\n+\t\tif (src < 0) {\n+\t\t\tspfInt = (U_64)0 - (U_64)src;\n+\t\t\tsign = 1;\n+\t\t} else {\n+\t\t\tspfInt = (U_64)src;\n+\t\t\tsign = 0;\n+\t\t}\n+\t\t\n+\t\t/* Find out where the most significant bit is in the integer value.\n+\t\t * We are only interested in keeping 24 of those bits. \n+\t\t */\n+\t\tidl1 = fltconv_indexLeadingOne64(spfInt);\n+\t\tif (idl1 >= 24) {\n+\t\t\t\n+\t\t\t/* If it's more than 24 bits, we shift right and keep track of\n+\t\t\t * the overflow for some possible rounding. \n+\t\t\t */\n+\t\t\toverflow = spfInt << (64 - (idl1 - 23));\n+\t\t\tspfInt >>= (idl1 - 23);\n+\t\t\tspfInt &= 0x007FFFFF;\n+\t\t\tspfInt |= ((idl1+SPEXPONENT_BIAS) << 23);\n+\t\t\tif (0 != (overflow & 0x8000000000000000)) {\n+\t\t\t\tif (0 != (overflow & 0x7FFFFFFFFFF00000)) {\n+\t\t\t\t\tspfInt++;\n+\t\t\t\t} else {\n+\t\t\t\t\tif (0 != (spfInt & 1)) {\n+\t\t\t\t\t\tspfInt++;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a65d2d0e577107ea4ec28f256d511cd824ccffd"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMTIzNzUw", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#pullrequestreview-412123750", "createdAt": "2020-05-14T19:35:37Z", "commit": {"oid": "8a65d2d0e577107ea4ec28f256d511cd824ccffd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTozNTozN1rOGVrT9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTozNTozN1rOGVrT9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4MjkwMA==", "bodyText": "I'm not sure WIN64 is reliable: this should use defined(J9VM_ENV_DATA64) instead.", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#discussion_r425382900", "createdAt": "2020-05-14T19:35:37Z", "author": {"login": "keithc-ca"}, "path": "runtime/util/fltconv.c", "diffHunk": "@@ -386,8 +387,75 @@ helperCConvertLongToFloat(I_64 src)\n {\n \tjfloat tmpDst;\n \n+/* Every platform but 32-bit Windows can use the cast.\n+ * Using VS2017 15.9 the cast doesn't give the expected result.\n+ */\n+#if !defined(WIN32) || defined(WIN64)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a65d2d0e577107ea4ec28f256d511cd824ccffd"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a65d2d0e577107ea4ec28f256d511cd824ccffd", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8a65d2d0e577107ea4ec28f256d511cd824ccffd", "committedDate": "2020-05-14T17:22:35Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "49d6037e21def901c72f3b53d99da949c9204249", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/49d6037e21def901c72f3b53d99da949c9204249", "committedDate": "2020-05-14T21:00:09Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "49d6037e21def901c72f3b53d99da949c9204249", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/49d6037e21def901c72f3b53d99da949c9204249", "committedDate": "2020-05-14T21:00:09Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "2c92b5fec6f3cd69ca306e62c72a5673e133223b", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2c92b5fec6f3cd69ca306e62c72a5673e133223b", "committedDate": "2020-05-14T21:05:18Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMTg3NzY4", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#pullrequestreview-412187768", "createdAt": "2020-05-14T21:11:21Z", "commit": {"oid": "2c92b5fec6f3cd69ca306e62c72a5673e133223b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMToxMToyMlrOGVuYEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMToxMToyMlrOGVuYEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQzMzEwNw==", "bodyText": "This is dead code: the function is only called if u64val != 0 (and the code below handles that case anyway).", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#discussion_r425433107", "createdAt": "2020-05-14T21:11:22Z", "author": {"login": "keithc-ca"}, "path": "runtime/util/fltconv.c", "diffHunk": "@@ -440,4 +509,21 @@ fltconv_indexLeadingOne32(U_32 u32val)\n }\n \n \n+static int \n+fltconv_indexLeadingOne64(U_64 u64val)\n+{\n+\tint leading = 0;\n+\t\n+\tif (0 == u64val) {\n+\t\treturn -1;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c92b5fec6f3cd69ca306e62c72a5673e133223b"}, "originalPosition": 104}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c92b5fec6f3cd69ca306e62c72a5673e133223b", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2c92b5fec6f3cd69ca306e62c72a5673e133223b", "committedDate": "2020-05-14T21:05:18Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "9bf217a123964ca18b356d483dac99b164fd4258", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9bf217a123964ca18b356d483dac99b164fd4258", "committedDate": "2020-05-14T21:30:01Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9bf217a123964ca18b356d483dac99b164fd4258", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9bf217a123964ca18b356d483dac99b164fd4258", "committedDate": "2020-05-14T21:30:01Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "ecd78b343a4d06e92d0cab0503aa8fb12eaa3824", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ecd78b343a4d06e92d0cab0503aa8fb12eaa3824", "committedDate": "2020-05-14T21:32:29Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecd78b343a4d06e92d0cab0503aa8fb12eaa3824", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ecd78b343a4d06e92d0cab0503aa8fb12eaa3824", "committedDate": "2020-05-14T21:32:29Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "ce7ca27ab3817e82d6d9553dd1b68f622edc5699", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ce7ca27ab3817e82d6d9553dd1b68f622edc5699", "committedDate": "2020-05-14T21:34:47Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjA1ODE4", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#pullrequestreview-412205818", "createdAt": "2020-05-14T21:41:31Z", "commit": {"oid": "ce7ca27ab3817e82d6d9553dd1b68f622edc5699"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMTo0MTozMVrOGVvPmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMTo0MTozMVrOGVvPmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ0NzMyMw==", "bodyText": "The comment here and on the #endif no longer match the #if.", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#discussion_r425447323", "createdAt": "2020-05-14T21:41:31Z", "author": {"login": "keithc-ca"}, "path": "runtime/util/fltconv.c", "diffHunk": "@@ -386,8 +387,72 @@ helperCConvertLongToFloat(I_64 src)\n {\n \tjfloat tmpDst;\n \n+/* Every platform but 32-bit Windows can use the cast.\n+ * Using VS2017 15.9 the cast doesn't give the expected result.\n+ */\n+#if !defined(WIN32) || defined(J9VM_ENV_DATA64)\n \ttmpDst = (jfloat)src;\n-\n+#else /* !defined(WIN32) || defined(WIN64) */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce7ca27ab3817e82d6d9553dd1b68f622edc5699"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5928d9fde9a1c090b24acb3caa88fa7844e4045b", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/5928d9fde9a1c090b24acb3caa88fa7844e4045b", "committedDate": "2020-05-14T21:43:38Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce7ca27ab3817e82d6d9553dd1b68f622edc5699", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ce7ca27ab3817e82d6d9553dd1b68f622edc5699", "committedDate": "2020-05-14T21:34:47Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "5928d9fde9a1c090b24acb3caa88fa7844e4045b", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/5928d9fde9a1c090b24acb3caa88fa7844e4045b", "committedDate": "2020-05-14T21:43:38Z", "message": "Convert long to float on Windows-32 bit\n\nWork around a problem with float cast in VS2017 15.9\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjA5ODY2", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#pullrequestreview-412209866", "createdAt": "2020-05-14T21:48:48Z", "commit": {"oid": "5928d9fde9a1c090b24acb3caa88fa7844e4045b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMTo0ODo0OFrOGVvcHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMTo0ODo0OFrOGVvcHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ1MDUyNg==", "bodyText": "Shouldn't this say 19.16 (I don't know where 15.9 came from)?", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#discussion_r425450526", "createdAt": "2020-05-14T21:48:48Z", "author": {"login": "keithc-ca"}, "path": "runtime/util/fltconv.c", "diffHunk": "@@ -386,8 +387,72 @@ helperCConvertLongToFloat(I_64 src)\n {\n \tjfloat tmpDst;\n \n+/* Every platform but 32-bit Windows can use the cast.\n+ * Using VS2017 15.9 the cast doesn't give the expected result.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5928d9fde9a1c090b24acb3caa88fa7844e4045b"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTU1NTk3", "url": "https://github.com/eclipse-openj9/openj9/pull/9564#pullrequestreview-414555597", "createdAt": "2020-05-19T15:17:43Z", "commit": {"oid": "5928d9fde9a1c090b24acb3caa88fa7844e4045b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 921, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}