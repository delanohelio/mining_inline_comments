{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MjE0MTgx", "number": 9107, "title": "Rework test pipeline variables", "bodyText": "There was recently another bug with the test variables being\nbeing passes as null. We've seen this issue repeated a few\ntimes now. Rather than another band-aid solution, I have\nreworked how the test variables are defined.\nStore all test variables together in 1 map of maps.\nSetup all test variables at the start of the build including\ntarget names, excludes, flags, extra labels, keep reportdir,\nand build lists.\nSimplifies code that interacts with test variables and prevents\nhaving to further process certain values. Everything can\nnow be accessed directly. Eliminated confusion around what is\nprocessed where and when.\n\n[skip ci]\nSigned-off-by: Adam Brousseau adam.brousseau88@gmail.com", "createdAt": "2020-04-03T14:41:44Z", "url": "https://github.com/eclipse-openj9/openj9/pull/9107", "merged": true, "mergeCommit": {"oid": "12e64d21d70bbfa83720da9e8c7b515be58ccf20"}, "closed": true, "closedAt": "2020-04-23T16:57:26Z", "author": {"login": "AdamBrousseau"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVKiFHABqjMyMDgwMTAzMjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaf47WgFqTM5OTI5NjEwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b6db887d207b2674871c85cba8b94f4a3a7cfd0", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1b6db887d207b2674871c85cba8b94f4a3a7cfd0", "committedDate": "2020-04-03T14:37:13Z", "message": "Rework test pipeline variables\n\n- There was recently another bug with the test variables being\n  being passes as null. We've seen this issue repeated a few\n  times now. Rather than another band-aid solution, I have\n  reworked how the test variables are defined.\n- Store all test variables together in 1 map of maps.\n- Setup all test variables at the start of the build including\n  target names, excludes, flags, extra labels, keep reportdir,\n  and build lists.\n- Simplifies code that interacts with test variables and prevents\n  having to further process certain values. Everything can\n  now be accessed directly. Eliminated confusion around what is\n  processed where and when.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "afcdcf2ddb42ff3a9edf023ceb1466b9ea440e0a", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/afcdcf2ddb42ff3a9edf023ceb1466b9ea440e0a", "committedDate": "2020-04-07T03:14:33Z", "message": "Rework test pipeline variables\n\n- There was recently another bug with the test variables being\n  being passes as null. We've seen this issue repeated a few\n  times now. Rather than another band-aid solution, I have\n  reworked how the test variables are defined.\n- Store all test variables together in 1 map of maps.\n- Setup all test variables at the start of the build including\n  target names, excludes, flags, extra labels, keep reportdir,\n  and build lists.\n- Simplifies code that interacts with test variables and prevents\n  having to further process certain values. Everything can\n  now be accessed directly. Eliminated confusion around what is\n  processed where and when.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0Nzk1MTUy", "url": "https://github.com/eclipse-openj9/openj9/pull/9107#pullrequestreview-394795152", "createdAt": "2020-04-16T16:19:27Z", "commit": {"oid": "afcdcf2ddb42ff3a9edf023ceb1466b9ea440e0a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjoxOToyN1rOGGtIMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNjo1MzoxNVrOGGueMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4NDAxNg==", "bodyText": "excludedTestsArray is not required since it contains excludedTests  collection only and is used only in this block.", "url": "https://github.com/eclipse-openj9/openj9/pull/9107#discussion_r409684016", "createdAt": "2020-04-16T16:19:27Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -664,39 +671,45 @@ def set_test_targets() {\n * Set EXTRA_TEST_LABELS map if defined in variable file.\n */\n def set_test_misc() {\n-    EXTRA_TEST_LABELS = [:]\n     if (!params.TEST_NODE) {\n         // Only add extra test labels if the user has not specified a specific TEST_NODE\n-        TARGET_NAMES.each { target ->\n-            EXTRA_TEST_LABELS[target] = buildspec.getVectorField(\"extra_test_labels\", target).join('&&') ?: ''\n+        TESTS.each { id, target ->\n+            target['extraTestLabels'] = buildspec.getVectorField(\"extra_test_labels\", target).join('&&') ?: ''\n         }\n     }\n \n-    EXCLUDED_TESTS = []\n     def buildspec = buildspec_manager.getSpec(SPEC)\n     def excludedTests = buildspec.getVectorField(\"excluded_tests\", SDK_VERSION)\n     if (excludedTests) {\n-        EXCLUDED_TESTS.addAll(excludedTests)\n+        excludedTestsArray = []", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afcdcf2ddb42ff3a9edf023ceb1466b9ea440e0a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY4NDQ1Mg==", "bodyText": "use excludedTests", "url": "https://github.com/eclipse-openj9/openj9/pull/9107#discussion_r409684452", "createdAt": "2020-04-16T16:20:05Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -664,39 +671,45 @@ def set_test_targets() {\n * Set EXTRA_TEST_LABELS map if defined in variable file.\n */\n def set_test_misc() {\n-    EXTRA_TEST_LABELS = [:]\n     if (!params.TEST_NODE) {\n         // Only add extra test labels if the user has not specified a specific TEST_NODE\n-        TARGET_NAMES.each { target ->\n-            EXTRA_TEST_LABELS[target] = buildspec.getVectorField(\"extra_test_labels\", target).join('&&') ?: ''\n+        TESTS.each { id, target ->\n+            target['extraTestLabels'] = buildspec.getVectorField(\"extra_test_labels\", target).join('&&') ?: ''\n         }\n     }\n \n-    EXCLUDED_TESTS = []\n     def buildspec = buildspec_manager.getSpec(SPEC)\n     def excludedTests = buildspec.getVectorField(\"excluded_tests\", SDK_VERSION)\n     if (excludedTests) {\n-        EXCLUDED_TESTS.addAll(excludedTests)\n+        excludedTestsArray = []\n+        excludedTestsArray.addAll(excludedTests)\n+        TESTS.each { id, target ->\n+            if (excludedTestsArray.contains(id)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afcdcf2ddb42ff3a9edf023ceb1466b9ea440e0a"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcwMzQyMQ==", "bodyText": "Please rework this if statement:\nif (!target['testFlag']) {\n    target['testFlag'] = flag\n} else if (flag) {\n    error(\"Cannot set more than 1 TEST_FLAG\")\n}", "url": "https://github.com/eclipse-openj9/openj9/pull/9107#discussion_r409703421", "createdAt": "2020-04-16T16:49:03Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -664,39 +671,45 @@ def set_test_targets() {\n * Set EXTRA_TEST_LABELS map if defined in variable file.\n */\n def set_test_misc() {\n-    EXTRA_TEST_LABELS = [:]\n     if (!params.TEST_NODE) {\n         // Only add extra test labels if the user has not specified a specific TEST_NODE\n-        TARGET_NAMES.each { target ->\n-            EXTRA_TEST_LABELS[target] = buildspec.getVectorField(\"extra_test_labels\", target).join('&&') ?: ''\n+        TESTS.each { id, target ->\n+            target['extraTestLabels'] = buildspec.getVectorField(\"extra_test_labels\", target).join('&&') ?: ''\n         }\n     }\n \n-    EXCLUDED_TESTS = []\n     def buildspec = buildspec_manager.getSpec(SPEC)\n     def excludedTests = buildspec.getVectorField(\"excluded_tests\", SDK_VERSION)\n     if (excludedTests) {\n-        EXCLUDED_TESTS.addAll(excludedTests)\n+        excludedTestsArray = []\n+        excludedTestsArray.addAll(excludedTests)\n+        TESTS.each { id, target ->\n+            if (excludedTestsArray.contains(id)) {\n+                echo \"Excluding test target:'${id}'\"\n+                TESTS.remove(id)\n+            }\n+        }\n     }\n \n-    TEST_FLAG = buildspec.getScalarField(\"test_flags\", SDK_VERSION) ?: ''\n+    TESTS.each { id, target ->\n+        flag = buildspec.getScalarField(\"test_flags\", id) ?: ''\n+        if (flag) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afcdcf2ddb42ff3a9edf023ceb1466b9ea440e0a"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcwNDk5NQ==", "bodyText": "Why another loop here for keepReportDir? Set target['keepReportDir'] in the above loop.", "url": "https://github.com/eclipse-openj9/openj9/pull/9107#discussion_r409704995", "createdAt": "2020-04-16T16:51:31Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -664,39 +671,45 @@ def set_test_targets() {\n * Set EXTRA_TEST_LABELS map if defined in variable file.\n */\n def set_test_misc() {\n-    EXTRA_TEST_LABELS = [:]\n     if (!params.TEST_NODE) {\n         // Only add extra test labels if the user has not specified a specific TEST_NODE\n-        TARGET_NAMES.each { target ->\n-            EXTRA_TEST_LABELS[target] = buildspec.getVectorField(\"extra_test_labels\", target).join('&&') ?: ''\n+        TESTS.each { id, target ->\n+            target['extraTestLabels'] = buildspec.getVectorField(\"extra_test_labels\", target).join('&&') ?: ''\n         }\n     }\n \n-    EXCLUDED_TESTS = []\n     def buildspec = buildspec_manager.getSpec(SPEC)\n     def excludedTests = buildspec.getVectorField(\"excluded_tests\", SDK_VERSION)\n     if (excludedTests) {\n-        EXCLUDED_TESTS.addAll(excludedTests)\n+        excludedTestsArray = []\n+        excludedTestsArray.addAll(excludedTests)\n+        TESTS.each { id, target ->\n+            if (excludedTestsArray.contains(id)) {\n+                echo \"Excluding test target:'${id}'\"\n+                TESTS.remove(id)\n+            }\n+        }\n     }\n \n-    TEST_FLAG = buildspec.getScalarField(\"test_flags\", SDK_VERSION) ?: ''\n+    TESTS.each { id, target ->\n+        flag = buildspec.getScalarField(\"test_flags\", id) ?: ''\n+        if (flag) {\n+            target['testFlag'] = (target['testFlag']) ? error(\"Cannot set more than 1 TEST_FLAG\") : flag\n+        } else {\n+            target['testFlag'] = (target['testFlag']) ? target['testFlag'] : ''\n+        }\n+    }\n \n     // Set test param KEEP_REPORTDIR to false unless set true in variable file.\n-    TEST_KEEP_REPORTDIR = [:]\n-    TARGET_NAMES.each { target ->\n-        TEST_KEEP_REPORTDIR[target] = buildspec_manager.getSpec('misc').getScalarField(\"test_keep_reportdir\", target) ?: 'false'\n+    TESTS.each { id, target ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afcdcf2ddb42ff3a9edf023ceb1466b9ea440e0a"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTcwNjAzNQ==", "bodyText": "Why another loop here? Set target['buildList'] in the loop at L694.", "url": "https://github.com/eclipse-openj9/openj9/pull/9107#discussion_r409706035", "createdAt": "2020-04-16T16:53:15Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -664,39 +671,45 @@ def set_test_targets() {\n * Set EXTRA_TEST_LABELS map if defined in variable file.\n */\n def set_test_misc() {\n-    EXTRA_TEST_LABELS = [:]\n     if (!params.TEST_NODE) {\n         // Only add extra test labels if the user has not specified a specific TEST_NODE\n-        TARGET_NAMES.each { target ->\n-            EXTRA_TEST_LABELS[target] = buildspec.getVectorField(\"extra_test_labels\", target).join('&&') ?: ''\n+        TESTS.each { id, target ->\n+            target['extraTestLabels'] = buildspec.getVectorField(\"extra_test_labels\", target).join('&&') ?: ''\n         }\n     }\n \n-    EXCLUDED_TESTS = []\n     def buildspec = buildspec_manager.getSpec(SPEC)\n     def excludedTests = buildspec.getVectorField(\"excluded_tests\", SDK_VERSION)\n     if (excludedTests) {\n-        EXCLUDED_TESTS.addAll(excludedTests)\n+        excludedTestsArray = []\n+        excludedTestsArray.addAll(excludedTests)\n+        TESTS.each { id, target ->\n+            if (excludedTestsArray.contains(id)) {\n+                echo \"Excluding test target:'${id}'\"\n+                TESTS.remove(id)\n+            }\n+        }\n     }\n \n-    TEST_FLAG = buildspec.getScalarField(\"test_flags\", SDK_VERSION) ?: ''\n+    TESTS.each { id, target ->\n+        flag = buildspec.getScalarField(\"test_flags\", id) ?: ''\n+        if (flag) {\n+            target['testFlag'] = (target['testFlag']) ? error(\"Cannot set more than 1 TEST_FLAG\") : flag\n+        } else {\n+            target['testFlag'] = (target['testFlag']) ? target['testFlag'] : ''\n+        }\n+    }\n \n     // Set test param KEEP_REPORTDIR to false unless set true in variable file.\n-    TEST_KEEP_REPORTDIR = [:]\n-    TARGET_NAMES.each { target ->\n-        TEST_KEEP_REPORTDIR[target] = buildspec_manager.getSpec('misc').getScalarField(\"test_keep_reportdir\", target) ?: 'false'\n+    TESTS.each { id, target ->\n+        target['keepReportDir'] = buildspec_manager.getSpec('misc').getScalarField(\"test_keep_reportdir\", id) ?: 'false'\n     }\n \n-    TEST_BUILD_LIST = [:]\n-    TARGET_NAMES.each { target ->\n-        TEST_BUILD_LIST[target] = buildspec.getScalarField(\"test_build_list\", target) ?: ''\n+    TESTS.each { id, target ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "afcdcf2ddb42ff3a9edf023ceb1466b9ea440e0a"}, "originalPosition": 83}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "afcdcf2ddb42ff3a9edf023ceb1466b9ea440e0a", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/afcdcf2ddb42ff3a9edf023ceb1466b9ea440e0a", "committedDate": "2020-04-07T03:14:33Z", "message": "Rework test pipeline variables\n\n- There was recently another bug with the test variables being\n  being passes as null. We've seen this issue repeated a few\n  times now. Rather than another band-aid solution, I have\n  reworked how the test variables are defined.\n- Store all test variables together in 1 map of maps.\n- Setup all test variables at the start of the build including\n  target names, excludes, flags, extra labels, keep reportdir,\n  and build lists.\n- Simplifies code that interacts with test variables and prevents\n  having to further process certain values. Everything can\n  now be accessed directly. Eliminated confusion around what is\n  processed where and when.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "230903610a5906da73089ff2b22038efdf57f0c4", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/230903610a5906da73089ff2b22038efdf57f0c4", "committedDate": "2020-04-17T03:04:04Z", "message": "Rework test pipeline variables\n\n- There was recently another bug with the test variables being\n  being passes as null. We've seen this issue repeated a few\n  times now. Rather than another band-aid solution, I have\n  reworked how the test variables are defined.\n- Store all test variables together in 1 map of maps.\n- Setup all test variables at the start of the build including\n  target names, excludes, flags, extra labels, keep reportdir,\n  and build lists.\n- Simplifies code that interacts with test variables and prevents\n  having to further process certain values. Everything can\n  now be accessed directly. Eliminated confusion around what is\n  processed where and when.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NjgzMTQ5", "url": "https://github.com/eclipse-openj9/openj9/pull/9107#pullrequestreview-395683149", "createdAt": "2020-04-17T18:31:08Z", "commit": {"oid": "230903610a5906da73089ff2b22038efdf57f0c4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94204eb23d9f92782cef23eae9e1f32c10644b17", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/94204eb23d9f92782cef23eae9e1f32c10644b17", "committedDate": "2020-04-22T05:17:25Z", "message": "Rework test pipeline variables\n\n- There was recently another bug with the test variables being\n  being passes as null. We've seen this issue repeated a few\n  times now. Rather than another band-aid solution, I have\n  reworked how the test variables are defined.\n- Store all test variables together in 1 map of maps.\n- Setup all test variables at the start of the build including\n  target names, excludes, flags, extra labels, keep reportdir,\n  and build lists.\n- Simplifies code that interacts with test variables and prevents\n  having to further process certain values. Everything can\n  now be accessed directly. Eliminated confusion around what is\n  processed where and when.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "230903610a5906da73089ff2b22038efdf57f0c4", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/230903610a5906da73089ff2b22038efdf57f0c4", "committedDate": "2020-04-17T03:04:04Z", "message": "Rework test pipeline variables\n\n- There was recently another bug with the test variables being\n  being passes as null. We've seen this issue repeated a few\n  times now. Rather than another band-aid solution, I have\n  reworked how the test variables are defined.\n- Store all test variables together in 1 map of maps.\n- Setup all test variables at the start of the build including\n  target names, excludes, flags, extra labels, keep reportdir,\n  and build lists.\n- Simplifies code that interacts with test variables and prevents\n  having to further process certain values. Everything can\n  now be accessed directly. Eliminated confusion around what is\n  processed where and when.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "94204eb23d9f92782cef23eae9e1f32c10644b17", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/94204eb23d9f92782cef23eae9e1f32c10644b17", "committedDate": "2020-04-22T05:17:25Z", "message": "Rework test pipeline variables\n\n- There was recently another bug with the test variables being\n  being passes as null. We've seen this issue repeated a few\n  times now. Rather than another band-aid solution, I have\n  reworked how the test variables are defined.\n- Store all test variables together in 1 map of maps.\n- Setup all test variables at the start of the build including\n  target names, excludes, flags, extra labels, keep reportdir,\n  and build lists.\n- Simplifies code that interacts with test variables and prevents\n  having to further process certain values. Everything can\n  now be accessed directly. Eliminated confusion around what is\n  processed where and when.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Mjk2MTAx", "url": "https://github.com/eclipse-openj9/openj9/pull/9107#pullrequestreview-399296101", "createdAt": "2020-04-23T16:57:21Z", "commit": {"oid": "94204eb23d9f92782cef23eae9e1f32c10644b17"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1175, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}