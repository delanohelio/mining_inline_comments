{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MTI0Nzg0", "number": 10946, "title": "Fix array size offset for inlined zero sized arrays in x86", "bodyText": "Fix array size offset for inline allocated zero sized arrays in x86 systems. The fix adds 2 extra instructions to the path of array allocations and 3 instructions in case of zero sized arrays.\nTests were conducted and the proposed fix does not impact throughput and performance\nThe fix adds 2 instructions to the critical path of array allocations, and 3 instructions in case of zero sized arrays. The 2 added instructions are a compare and a jump, and the third is a store to properly initialize the size field in case of zero sized array.\nThis is x86 assembly before the change:\n############# Before change ############\n\u2026\nrep stosb                        # SAME 1\nmov rax, rdx                     # SAME 2\nmov dword ptr [rax], 0x0010b300  # SAME 3\nmov dword ptr [rax+0x4], r12d    # SAME 4\nLabel L0049:    \n\u2026             \n\nAnd this is the x86 assembly after the change (Change labelled as # EXTRA), where EXTRA1/2 are the ones that would always be executed and # EXTRA 3 only executed in case of zero sized arrays:\n############# After change #############\n\u2026\nrep stosb                       # SAME 1\nmov rax, rdx                    # SAME 2\nmov dword ptr [rax], 0x0010b300 # SAME 3\ncmp r12d, 0x00000000            # EXTRA 1\njne Label L0080                 # EXTRA 2\nmov dword ptr [rax+0x8], r12d   # EXTRA 3* : Executed only if is zero sized array\nLabel L0080:\nmov dword ptr [rax+0x4], r12d   # SAME 4\nLabel L0049:  \n\u2026\n\nMore detailed information can be found in the issue linked below.\nFixes: #9683\nSigned-off-by: Igor Braga higorb1@gmail.com", "createdAt": "2020-10-20T22:08:42Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10946", "merged": true, "mergeCommit": {"oid": "7f60d24dc908ef66eaa546bb1636e047c07b1fa5"}, "closed": true, "closedAt": "2020-11-05T17:09:09Z", "author": {"login": "bragaigor"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUidlAAH2gAyNTA3MTI0Nzg0OjBiZmJmOTg0ZmVkOWUxNGY4YTFjNTdhOWJlOWNjMjJiNmFkNzgzYjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdY-rF6AFqTUyMjgyODE1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0bfbf984fed9e14f8a1c57a9be9cc22b6ad783b2", "author": {"user": {"login": "bragaigor", "name": "Igor Braga"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0bfbf984fed9e14f8a1c57a9be9cc22b6ad783b2", "committedDate": "2020-10-21T00:44:48Z", "message": "Fix array size offset for inlined zero sized arrays in x86\n\nFix array size offset for inline allocated zero sized\narrays in x86 systems. The fix adds 2 extra instructions\nto the path of array allocations and 3 instructions in\ncase of zero sized arrays.\n\nTests were conducted and the proposed fix does not\nimpact throughput and performance\n\nFixes: https://github.com/eclipse/openj9/issues/9683\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a5a0aacc613aec27257de8ae427dc8078560ffa", "author": {"user": {"login": "bragaigor", "name": "Igor Braga"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2a5a0aacc613aec27257de8ae427dc8078560ffa", "committedDate": "2020-10-20T22:00:34Z", "message": "Fix array size offset for inlined zero sized arrays in x86\n\nFix array size offset for inline allocated zero sized\narrays in x86 systems. The fix adds 2 extra instructions\nto the path of array allocations and 3 instructions in\ncase of zero sized arrays.\n\nTests were conducted and the proposed fix does not\nimpact throughput and performance\n\nFixes: https://github.com/eclipse/openj9/issues/9683\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>"}, "afterCommit": {"oid": "0bfbf984fed9e14f8a1c57a9be9cc22b6ad783b2", "author": {"user": {"login": "bragaigor", "name": "Igor Braga"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0bfbf984fed9e14f8a1c57a9be9cc22b6ad783b2", "committedDate": "2020-10-21T00:44:48Z", "message": "Fix array size offset for inlined zero sized arrays in x86\n\nFix array size offset for inline allocated zero sized\narrays in x86 systems. The fix adds 2 extra instructions\nto the path of array allocations and 3 instructions in\ncase of zero sized arrays.\n\nTests were conducted and the proposed fix does not\nimpact throughput and performance\n\nFixes: https://github.com/eclipse/openj9/issues/9683\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37753b8fc75ba883c6ce28d1f09e65e499c723c5", "author": {"user": {"login": "bragaigor", "name": "Igor Braga"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/37753b8fc75ba883c6ce28d1f09e65e499c723c5", "committedDate": "2020-10-26T15:04:16Z", "message": "Add confition to initialize zero sized array\n\nZero sized arrays are only initialized if genZeroInitObject2 is\nnot called. In which case an extra store instruction is added to\ngenInitArrayHeader() to initialize the zero sized array header\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2ODg0MDYx", "url": "https://github.com/eclipse-openj9/openj9/pull/10946#pullrequestreview-516884061", "createdAt": "2020-10-26T15:15:47Z", "commit": {"oid": "37753b8fc75ba883c6ce28d1f09e65e499c723c5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNToxNTo0OFrOHoUd_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNToxNTo0OFrOHoUd_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjA0MDQ0NA==", "bodyText": "Fix tab/spaces", "url": "https://github.com/eclipse-openj9/openj9/pull/10946#discussion_r512040444", "createdAt": "2020-10-26T15:15:48Z", "author": {"login": "bragaigor"}, "path": "runtime/compiler/x/codegen/J9TreeEvaluator.cpp", "diffHunk": "@@ -7840,6 +7873,7 @@ J9::X86::TreeEvaluator::VMnewEvaluator(\n          if (canUseFastInlineAllocation)\n             {\n             useRepInstruction = genZeroInitObject2(node, objectSize, elementSize, sizeReg, targetReg, tempReg, segmentReg, scratchReg, cg);\n+\t    shouldInitZeroSizedArrayHeader = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37753b8fc75ba883c6ce28d1f09e65e499c723c5"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyODI4MTUw", "url": "https://github.com/eclipse-openj9/openj9/pull/10946#pullrequestreview-522828150", "createdAt": "2020-11-03T19:52:36Z", "commit": {"oid": "37753b8fc75ba883c6ce28d1f09e65e499c723c5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 242, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}