{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NDk3NDk5", "number": 10282, "reviewThreads": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDoyMjoxNFrOEwR0mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQxNToyMzozOVrOFdHIdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MDU5MDk5OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.hpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDoyMjoxNFrOHlvGRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDozNzowM1rOHlv4Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzMTAxNQ==", "bodyText": "@tajila\nShould I add a boolean to represent injection, or is it fine to continue to check if injection is needed by doing _injectionInfo->numOfInterfaces > 0?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r509331015", "createdAt": "2020-10-21T14:22:14Z", "author": {"login": "OussamaSaoudi"}, "path": "runtime/bcutil/ROMClassBuilder.hpp", "diffHunk": "@@ -37,6 +37,12 @@\n #include \"ClassFileParser.hpp\"  /* included to obtain definition of VerifyClassFunction */\n #include \"StringInternTable.hpp\"\n \n+#define MAX_INTERFACE_INJECTION 2\n+typedef struct InjectionInfo{\n+\tJ9UTF8 *interfaces[MAX_INTERFACE_INJECTION];\n+\tU_16 numOfInterfaces;\n+} InjectionInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3fe2b0a117deca8e45f54358e2fca94e441b362"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM0Mzc4Mg==", "bodyText": "_injectionInfo->numOfInterfaces > 0 is fine", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r509343782", "createdAt": "2020-10-21T14:37:03Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.hpp", "diffHunk": "@@ -37,6 +37,12 @@\n #include \"ClassFileParser.hpp\"  /* included to obtain definition of VerifyClassFunction */\n #include \"StringInternTable.hpp\"\n \n+#define MAX_INTERFACE_INJECTION 2\n+typedef struct InjectionInfo{\n+\tJ9UTF8 *interfaces[MAX_INTERFACE_INJECTION];\n+\tU_16 numOfInterfaces;\n+} InjectionInfo;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzMTAxNQ=="}, "originalCommit": {"oid": "f3fe2b0a117deca8e45f54358e2fca94e441b362"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5MDY0MzE5OnYy", "diffSide": "RIGHT", "path": "runtime/oti/vmconstantpool.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDozMTo0N1rOHlvm1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDozNjozMVrOHlv2cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzOTM1MA==", "bodyText": "Would this cause an issue if J9VM_OPT_VALHALLA_VALUE_TYPES is not defined?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r509339350", "createdAt": "2020-10-21T14:31:47Z", "author": {"login": "OussamaSaoudi"}, "path": "runtime/oti/vmconstantpool.xml", "diffHunk": "@@ -31,6 +31,8 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n \t<classref name=\"java/lang/InstantiationError\"/>\n \t<classref name=\"java/lang/UnsatisfiedLinkError\"/>\n \t<classref name=\"java/lang/InternalError\"/>\n+\t<classref name=\"java/lang/IdentityObject\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3fe2b0a117deca8e45f54358e2fca94e441b362"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTM0MzM0Ng==", "bodyText": "yes, you can add flags see \t<classref name=\"java/lang/invoke/FilterArgumentsHandle\" flags=\"opt_methodHandle\"/>", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r509343346", "createdAt": "2020-10-21T14:36:31Z", "author": {"login": "tajila"}, "path": "runtime/oti/vmconstantpool.xml", "diffHunk": "@@ -31,6 +31,8 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n \t<classref name=\"java/lang/InstantiationError\"/>\n \t<classref name=\"java/lang/UnsatisfiedLinkError\"/>\n \t<classref name=\"java/lang/InternalError\"/>\n+\t<classref name=\"java/lang/IdentityObject\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzOTM1MA=="}, "originalCommit": {"oid": "f3fe2b0a117deca8e45f54358e2fca94e441b362"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzUxMTY3OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileOracle.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjowNjoxMVrOH08uLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjoxMTozM1rOH08_BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4Mjg2Mg==", "bodyText": "for consistency please change all IdentityObject -> IdentityInterface", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525282862", "createdAt": "2020-11-17T16:06:11Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.cpp", "diffHunk": "@@ -656,6 +660,9 @@ class ClassFileOracle::InterfaceVisitor : public ClassFileOracle::ConstantPoolIn\n \tInterfaceVisitor(ClassFileOracle *classFileOracle, ConstantPoolMap *constantPoolMap) :\n \t\t_classFileOracle(classFileOracle),\n \t\t_constantPoolMap(constantPoolMap),\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t\t_wasIdentityObjectSeen(false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4NzE3Mg==", "bodyText": "the actual name hasn't been determined yet", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525287172", "createdAt": "2020-11-17T16:11:33Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.cpp", "diffHunk": "@@ -656,6 +660,9 @@ class ClassFileOracle::InterfaceVisitor : public ClassFileOracle::ConstantPoolIn\n \tInterfaceVisitor(ClassFileOracle *classFileOracle, ConstantPoolMap *constantPoolMap) :\n \t\t_classFileOracle(classFileOracle),\n \t\t_constantPoolMap(constantPoolMap),\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t\t_wasIdentityObjectSeen(false),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4Mjg2Mg=="}, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzUxODc2OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileOracle.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjowNzo0MVrOH08yzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjowNzo0MVrOH08yzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4NDA0NA==", "bodyText": "No longer true, InlineObject is not in the current plans", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525284044", "createdAt": "2020-11-17T16:07:41Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.cpp", "diffHunk": "@@ -693,9 +714,24 @@ ClassFileOracle::walkInterfaces()\n \tROMClassVerbosePhase v(_context, ClassFileInterfacesAnalysis);\n \n \tInterfaceVisitor interfaceVisitor(this, _constantPoolMap);\n-\tinterfacesDo(&interfaceVisitor);\n+\tinterfacesDo(&interfaceVisitor, 0);\n \t_isCloneable = interfaceVisitor.wasCloneableSeen();\n \t_isSerializable = interfaceVisitor.wasSerializableSeen();\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t/* TODO current prototype still uses the flag, this will be updated to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzUyNjEwOnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileOracle.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjowOToxM1rOH083bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjowOToxM1rOH083bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4NTIzMA==", "bodyText": "Update the comment to describe how numOfInjectedInterfaces is being used", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525285230", "createdAt": "2020-11-17T16:09:13Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.hpp", "diffHunk": "@@ -813,13 +813,16 @@ class RecordComponentIterator\n \t/*\n \t * Iterate over the constant pool indices corresponding to interface names (UTF8s).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzU0NDg1OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileWriter.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjoxMzowNVrOH09DMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjoxMzowNVrOH09DMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4ODI0Mw==", "bodyText": "there is no need for both _injectedInterfaces and _numOfInjectedInterfaces", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525288243", "createdAt": "2020-11-17T16:13:05Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileWriter.hpp", "diffHunk": "@@ -74,6 +74,8 @@ class ClassFileWriter {\n \tbool _isAnon;\n \tJ9UTF8* _anonClassName;\n \tJ9UTF8* _originalClassName;\n+\tbool _injectedInterfaces;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzU2MzU4OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ComparingCursor.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjoxNjo1N1rOH09O-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMToyNDo0MFrOH2Cwkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5MTI1Ng==", "bodyText": "instead of doings you could just check if (cpIndex > classFileMaxCPIndex), if so then skip the check", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525291256", "createdAt": "2020-11-17T16:16:57Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,16 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n-\n-\t\t\t\t\tif ( J9UTF8_LENGTH(utf8) != _classFileOracle->getUTF8Length(cpIndex) ) {\n+\t\t\t\t\tbool isInjected = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQzMDM1NA==", "bodyText": "Just to confirm, is classFileMaxCPIndex == ConstantPoolCount?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r526430354", "createdAt": "2020-11-18T21:24:40Z", "author": {"login": "OussamaSaoudi"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,16 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n-\n-\t\t\t\t\tif ( J9UTF8_LENGTH(utf8) != _classFileOracle->getUTF8Length(cpIndex) ) {\n+\t\t\t\t\tbool isInjected = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5MTI1Ng=="}, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzU2ODk1OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjoxODowMFrOH09SRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjoxODowMFrOH09SRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5MjEwMQ==", "bodyText": "rename to InterfaceInjectionInfo *_interfaceInjectionInfo; for clarity", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525292101", "createdAt": "2020-11-17T16:18:00Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.hpp", "diffHunk": "@@ -121,8 +127,10 @@ class ROMClassBuilder\n \tUDATA _anonClassNameBufferSize;\n \tU_8 *_bufferManagerBuffer;\n \tStringInternTable _stringInternTable;\n+\tInjectionInfo *_injectionInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzY4MzkxOnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjozOTozOVrOH0-X4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjozOTozOVrOH0-X4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMwOTkyMg==", "bodyText": "formatting InjectionInfo {", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525309922", "createdAt": "2020-11-17T16:39:39Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.hpp", "diffHunk": "@@ -37,6 +37,12 @@\n #include \"ClassFileParser.hpp\"  /* included to obtain definition of VerifyClassFunction */\n #include \"StringInternTable.hpp\"\n \n+#define MAX_INTERFACE_INJECTION 1\n+typedef struct InjectionInfo{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzY5Mjk4OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjo0MTowNFrOH0-dUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjo0MTowNFrOH0-dUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMxMTMxMw==", "bodyText": "i think you can avaoid the allocation all together by just declaring it as an inline struct", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525311313", "createdAt": "2020-11-17T16:41:04Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -248,7 +252,31 @@ ROMClassBuilder::buildROMClass(ROMClassCreationContext *context)\n \tcontext->recordLoadEnd(result);\n \treturn result;\n }\n+BuildResult\n+ROMClassBuilder::injectInterfaces(ClassFileOracle *classFileOracle)\n+{\n+\tPORT_ACCESS_FROM_PORT(_portLibrary);\n+\tif (NULL == _injectionInfo) {\n+\t\t_injectionInfo = (InjectionInfo *) j9mem_allocate_memory(sizeof(InjectionInfo), J9MEM_CATEGORY_CLASSES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAxMTU2OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileWriter.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNDowNlrOIOHkDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNDowNlrOIOHkDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NDg5Mg==", "bodyText": "needs ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551674892", "createdAt": "2021-01-05T02:04:06Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileWriter.cpp", "diffHunk": "@@ -78,6 +78,10 @@ ClassFileWriter::analyzeROMClass()\n \t\treturn;\n \t}\n \n+\tif (J9_ARE_ALL_BITS_SET(_romClass->optionalFlags,J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAxMjA5OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileOracle.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNDoyNlrOIOHkXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNDoyNlrOIOHkXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NDk3NQ==", "bodyText": "needs ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551674975", "createdAt": "2021-01-05T02:04:26Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.hpp", "diffHunk": "@@ -812,14 +812,19 @@ class RecordComponentIterator\n \n \t/*\n \t * Iterate over the constant pool indices corresponding to interface names (UTF8s).\n+\t * Also iterates over the injected interface names (UTF8s) in the \"extra\" cp slots.\n+\t * numOfInjectedInterfaces represents the number of extra slots containing the UTF8s.\n \t */\n-\tvoid interfacesDo(ConstantPoolIndexVisitor *visitor)\n+\tvoid interfacesDo(ConstantPoolIndexVisitor *visitor, U_16 numOfInjectedInterfaces)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAxMjM2OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileOracle.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNDozMlrOIOHkfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNDozMlrOIOHkfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTAwNw==", "bodyText": "same here", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675007", "createdAt": "2021-01-05T02:04:32Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.hpp", "diffHunk": "@@ -812,14 +812,19 @@ class RecordComponentIterator\n \n \t/*\n \t * Iterate over the constant pool indices corresponding to interface names (UTF8s).\n+\t * Also iterates over the injected interface names (UTF8s) in the \"extra\" cp slots.\n+\t * numOfInjectedInterfaces represents the number of extra slots containing the UTF8s.\n \t */\n-\tvoid interfacesDo(ConstantPoolIndexVisitor *visitor)\n+\tvoid interfacesDo(ConstantPoolIndexVisitor *visitor, U_16 numOfInjectedInterfaces)\n \t{\n \t\tU_16 *end = _classFile->interfaces + getInterfacesCount();\n \t\tfor (U_16 *interface = _classFile->interfaces; interface != end; ++interface) {\n \t\t\t/* Each interface is a constantClass, use slot1 to get at the underlying UTF8 */\n \t\t\tvisitor->visitConstantPoolIndex(U_16(_classFile->constantPool[ *interface ].slot1));\n \t\t}\n+\t\tfor (int i = 0; i < numOfInjectedInterfaces; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAxMjc4OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileWriter.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNDo1NlrOIOHkzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNDo1NlrOIOHkzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTA4NA==", "bodyText": "same in this file", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675084", "createdAt": "2021-01-05T02:04:56Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileWriter.cpp", "diffHunk": "@@ -340,7 +344,7 @@ void\n ClassFileWriter::analyzeInterfaces()\n {\n \tJ9SRP * interfaceNames = J9ROMCLASS_INTERFACES(_romClass);\n-\tUDATA interfaceCount = _romClass->interfaceCount;\n+\tUDATA interfaceCount = _romClass->interfaceCount - _numOfInjectedInterfaces;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAxMzgxOnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileWriter.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNToxOFrOIOHlSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNToxOFrOIOHlSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTIwOA==", "bodyText": "put a space after _romClass->optionalFlags,", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675208", "createdAt": "2021-01-05T02:05:18Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileWriter.cpp", "diffHunk": "@@ -78,6 +78,10 @@ ClassFileWriter::analyzeROMClass()\n \t\treturn;\n \t}\n \n+\tif (J9_ARE_ALL_BITS_SET(_romClass->optionalFlags,J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAxNDU2OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileWriter.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNTo1MVrOIOHlxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNTo1MVrOIOHlxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTMzMw==", "bodyText": "ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675333", "createdAt": "2021-01-05T02:05:51Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileWriter.hpp", "diffHunk": "@@ -74,6 +74,7 @@ class ClassFileWriter {\n \tbool _isAnon;\n \tJ9UTF8* _anonClassName;\n \tJ9UTF8* _originalClassName;\n+\tU_32 _numOfInjectedInterfaces;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAxNTgwOnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ComparingCursor.cpp", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNjozMFrOIOHmcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNzoyN1rOIOHnhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTUwNg==", "bodyText": "space before 0 !=  is not needed", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675506", "createdAt": "2021-01-05T02:06:30Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,13 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n+\t\t\t\t\tif ( cpIndex > _classFileOracle->getConstantPoolCount() ) {\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n \n \t\t\t\t\tif ( J9UTF8_LENGTH(utf8) != _classFileOracle->getUTF8Length(cpIndex) ) {\n \t\t\t\t\t\tmarkUnEqual();\n-\t\t\t\t\t} else if (0 != memcmp(J9UTF8_DATA(utf8), _classFileOracle->getUTF8Data(cpIndex), J9UTF8_LENGTH(utf8))) {\n+\t\t\t\t\t} else if ( 0 != memcmp(J9UTF8_DATA(utf8), _classFileOracle->getUTF8Data(cpIndex), J9UTF8_LENGTH(utf8)) ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTU3Mw==", "bodyText": "space after  J9UTF8_LENGTH(utf8)) is not needed", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675573", "createdAt": "2021-01-05T02:06:43Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,13 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n+\t\t\t\t\tif ( cpIndex > _classFileOracle->getConstantPoolCount() ) {\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n \n \t\t\t\t\tif ( J9UTF8_LENGTH(utf8) != _classFileOracle->getUTF8Length(cpIndex) ) {\n \t\t\t\t\t\tmarkUnEqual();\n-\t\t\t\t\t} else if (0 != memcmp(J9UTF8_DATA(utf8), _classFileOracle->getUTF8Data(cpIndex), J9UTF8_LENGTH(utf8))) {\n+\t\t\t\t\t} else if ( 0 != memcmp(J9UTF8_DATA(utf8), _classFileOracle->getUTF8Data(cpIndex), J9UTF8_LENGTH(utf8)) ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTUwNg=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTc4Mw==", "bodyText": "ah I see the coding standard is different in this file", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675783", "createdAt": "2021-01-05T02:07:27Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,13 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n+\t\t\t\t\tif ( cpIndex > _classFileOracle->getConstantPoolCount() ) {\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n \n \t\t\t\t\tif ( J9UTF8_LENGTH(utf8) != _classFileOracle->getUTF8Length(cpIndex) ) {\n \t\t\t\t\t\tmarkUnEqual();\n-\t\t\t\t\t} else if (0 != memcmp(J9UTF8_DATA(utf8), _classFileOracle->getUTF8Data(cpIndex), J9UTF8_LENGTH(utf8))) {\n+\t\t\t\t\t} else if ( 0 != memcmp(J9UTF8_DATA(utf8), _classFileOracle->getUTF8Data(cpIndex), J9UTF8_LENGTH(utf8)) ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTUwNg=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAxNzk3OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ComparingCursor.cpp", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNzozNlrOIOHnqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowOTozM1rOIOHpqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTgxNg==", "bodyText": "needs ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675816", "createdAt": "2021-01-05T02:07:36Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,13 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n+\t\t\t\t\tif ( cpIndex > _classFileOracle->getConstantPoolCount() ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NjEyOQ==", "bodyText": "should this be >= ?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551676129", "createdAt": "2021-01-05T02:08:41Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,13 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n+\t\t\t\t\tif ( cpIndex > _classFileOracle->getConstantPoolCount() ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTgxNg=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NjMyOQ==", "bodyText": "also add a comment indicating that cp index's aboive the cpCount are injected interfaces which should not be written into the classfile bytes", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551676329", "createdAt": "2021-01-05T02:09:33Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,13 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n+\t\t\t\t\tif ( cpIndex > _classFileOracle->getConstantPoolCount() ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTgxNg=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAyMzE5OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxMDoyMFrOIOHqmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxMDoyMFrOIOHqmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NjU3MQ==", "bodyText": "the if check is not needed, j9mem_free_memory is going to do a NULL check", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551676571", "createdAt": "2021-01-05T02:10:20Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -84,6 +85,9 @@ ROMClassBuilder::~ROMClassBuilder()\n \tj9mem_free_memory(_classFileBuffer);\n \tj9mem_free_memory(_bufferManagerBuffer);\n \tj9mem_free_memory(_anonClassNameBuffer);\n+\tif (NULL != _interfaceInjectionInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAyMzM3OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxMDoyNVrOIOHqsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxMDoyNVrOIOHqsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NjU5NQ==", "bodyText": "ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551676595", "createdAt": "2021-01-05T02:10:25Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -66,7 +66,8 @@ ROMClassBuilder::ROMClassBuilder(J9JavaVM *javaVM, J9PortLibrary *portLibrary, U\n \t_bufferManagerBuffer(NULL),\n \t_anonClassNameBuffer(NULL),\n \t_anonClassNameBufferSize(0),\n-\t_stringInternTable(javaVM, portLibrary, maxStringInternTableSize)\n+\t_stringInternTable(javaVM, portLibrary, maxStringInternTableSize),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAyODM0OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxMzoyNFrOIOHtsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxMzoyNFrOIOHtsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NzM2MQ==", "bodyText": "this allocation can be avoided entirely since the number of interfaces is known statically", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551677361", "createdAt": "2021-01-05T02:13:24Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -248,7 +252,31 @@ ROMClassBuilder::buildROMClass(ROMClassCreationContext *context)\n \tcontext->recordLoadEnd(result);\n \treturn result;\n }\n+BuildResult\n+ROMClassBuilder::injectInterfaces(ClassFileOracle *classFileOracle)\n+{\n+\tPORT_ACCESS_FROM_PORT(_portLibrary);\n+\tif (NULL == _interfaceInjectionInfo) {\n+\t\t_interfaceInjectionInfo = (InterfaceInjectionInfo *) j9mem_allocate_memory(sizeof(InterfaceInjectionInfo), J9MEM_CATEGORY_CLASSES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAzMzc5OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxNTo1NFrOIOHwmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxNTo1NFrOIOHwmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODEwNQ==", "bodyText": "You can reuse the BuildResult result = OK above. In fact BuildResult res = handleAnonClassName is an error, there is no need to define multiple BuildResult", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551678105", "createdAt": "2021-01-05T02:15:54Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -457,13 +485,18 @@ ROMClassBuilder::prepareAndLaydown( BufferManager *bufferManager, ClassFileParse\n \t\treturn classFileOracle.getBuildResult();\n \t}\n \n-\tSRPKeyProducer srpKeyProducer(&classFileOracle);\n+\tBuildResult injectRes = injectInterfaces(&classFileOracle);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAzNDY4OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxNjoxOVrOIOHxHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxNjoxOVrOIOHxHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODIzNg==", "bodyText": "ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551678236", "createdAt": "2021-01-05T02:16:19Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -84,6 +85,9 @@ ROMClassBuilder::~ROMClassBuilder()\n \tj9mem_free_memory(_classFileBuffer);\n \tj9mem_free_memory(_bufferManagerBuffer);\n \tj9mem_free_memory(_anonClassNameBuffer);\n+\tif (NULL != _interfaceInjectionInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAzNDgzOnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxNjoyNVrOIOHxNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxNjoyNVrOIOHxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODI2MA==", "bodyText": "ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551678260", "createdAt": "2021-01-05T02:16:25Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -248,7 +252,31 @@ ROMClassBuilder::buildROMClass(ROMClassCreationContext *context)\n \tcontext->recordLoadEnd(result);\n \treturn result;\n }\n+BuildResult", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAzNTYxOnYy", "diffSide": "LEFT", "path": "runtime/bcutil/ROMClassBuilder.cpp", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxNjo0M1rOIOHxnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMjo0MjoxN1rOIPYhLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODM2NA==", "bodyText": "ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551678364", "createdAt": "2021-01-05T02:16:43Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -457,13 +485,18 @@ ROMClassBuilder::prepareAndLaydown( BufferManager *bufferManager, ClassFileParse\n \t\treturn classFileOracle.getBuildResult();\n \t}\n \n-\tSRPKeyProducer srpKeyProducer(&classFileOracle);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk2ODA2Nw==", "bodyText": "Should I create the ifdef for the SRPKeyProducer like the following:\n#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n\tSRPKeyProducer srpKeyProducer(&classFileOracle, &_interfaceInjectionInfo);\n#else\n\tSRPKeyProducer srpKeyProducer(&classFileOracle);\n#endif /* J9VM_OPT_VALHALLA_VALUE_TYPES */\n\nand similarly do ifdef and else for the constructor?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r552968067", "createdAt": "2021-01-06T21:24:28Z", "author": {"login": "OussamaSaoudi"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -457,13 +485,18 @@ ROMClassBuilder::prepareAndLaydown( BufferManager *bufferManager, ClassFileParse\n \t\treturn classFileOracle.getBuildResult();\n \t}\n \n-\tSRPKeyProducer srpKeyProducer(&classFileOracle);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODM2NA=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk3MTAzNQ==", "bodyText": "Yes, like that.\nthe else should also of the comment:\n#else /* J9VM_OPT_VALHALLA_VALUE_TYPES */", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r552971035", "createdAt": "2021-01-06T21:31:49Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -457,13 +485,18 @@ ROMClassBuilder::prepareAndLaydown( BufferManager *bufferManager, ClassFileParse\n \t\treturn classFileOracle.getBuildResult();\n \t}\n \n-\tSRPKeyProducer srpKeyProducer(&classFileOracle);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODM2NA=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk3MzM3Nw==", "bodyText": "Do I want to be doing this with RomClassWriter and the Helper private class?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r552973377", "createdAt": "2021-01-06T21:37:41Z", "author": {"login": "OussamaSaoudi"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -457,13 +485,18 @@ ROMClassBuilder::prepareAndLaydown( BufferManager *bufferManager, ClassFileParse\n \t\treturn classFileOracle.getBuildResult();\n \t}\n \n-\tSRPKeyProducer srpKeyProducer(&classFileOracle);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODM2NA=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAwMTI2MQ==", "bodyText": "Yes, for anything where you had to change the APIs", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r553001261", "createdAt": "2021-01-06T22:42:17Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -457,13 +485,18 @@ ROMClassBuilder::prepareAndLaydown( BufferManager *bufferManager, ClassFileParse\n \t\treturn classFileOracle.getBuildResult();\n \t}\n \n-\tSRPKeyProducer srpKeyProducer(&classFileOracle);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODM2NA=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjAzNjM3OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxNzowMVrOIOHyBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoxNzowMVrOIOHyBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODQ3MQ==", "bodyText": "ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551678471", "createdAt": "2021-01-05T02:17:01Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.hpp", "diffHunk": "@@ -121,8 +127,10 @@ class ROMClassBuilder\n \tUDATA _anonClassNameBufferSize;\n \tU_8 *_bufferManagerBuffer;\n \tStringInternTable _stringInternTable;\n+\tInterfaceInjectionInfo *_interfaceInjectionInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjA0MzI3OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileOracle.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoyMDozOFrOIOH14Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoyMDozOFrOIOH14Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3OTQ1Nw==", "bodyText": "use IDENTITY_OBJECT_NAME instead", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551679457", "createdAt": "2021-01-05T02:20:38Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.cpp", "diffHunk": "@@ -684,16 +691,30 @@ class ClassFileOracle::InterfaceVisitor : public ClassFileOracle::ConstantPoolIn\n \t\t\t_wasSerializableSeen = true;\n \t\t}\n #undef SERIALIZABLE_NAME\n+\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+#define JAVA_LANG_IDENTITYINTERFACE \"java/lang/IdentityInterface\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MjA0MzcwOnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoyMDo1NVrOIOH2JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMTozMDo0NlrOIPWpdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3OTUyNQ==", "bodyText": "use JAVA_LANG_IDENTITYINTERFACE instead", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551679525", "createdAt": "2021-01-05T02:20:55Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -248,7 +252,31 @@ ROMClassBuilder::buildROMClass(ROMClassCreationContext *context)\n \tcontext->recordLoadEnd(result);\n \treturn result;\n }\n+BuildResult\n+ROMClassBuilder::injectInterfaces(ClassFileOracle *classFileOracle)\n+{\n+\tPORT_ACCESS_FROM_PORT(_portLibrary);\n+\tif (NULL == _interfaceInjectionInfo) {\n+\t\t_interfaceInjectionInfo = (InterfaceInjectionInfo *) j9mem_allocate_memory(sizeof(InterfaceInjectionInfo), J9MEM_CATEGORY_CLASSES);\n+\t\tif (NULL == _interfaceInjectionInfo) {\n+\t\t\tBuildResult res = OutOfMemory;\n+\t\t\treturn res;\n+\t\t}\n+\t}\n+\tU_32 numOfInterfaces = 0;\n \n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\tif (classFileOracle->needsIdentityInterface()) {\n+#define JAVA_LANG_IDENTITYINTERFACE \"java/lang/IdentityInterface\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk3MDYxNQ==", "bodyText": "should be IDENTITY_OBJECT_NAME instead", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r552970615", "createdAt": "2021-01-06T21:30:46Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -248,7 +252,31 @@ ROMClassBuilder::buildROMClass(ROMClassCreationContext *context)\n \tcontext->recordLoadEnd(result);\n \treturn result;\n }\n+BuildResult\n+ROMClassBuilder::injectInterfaces(ClassFileOracle *classFileOracle)\n+{\n+\tPORT_ACCESS_FROM_PORT(_portLibrary);\n+\tif (NULL == _interfaceInjectionInfo) {\n+\t\t_interfaceInjectionInfo = (InterfaceInjectionInfo *) j9mem_allocate_memory(sizeof(InterfaceInjectionInfo), J9MEM_CATEGORY_CLASSES);\n+\t\tif (NULL == _interfaceInjectionInfo) {\n+\t\t\tBuildResult res = OutOfMemory;\n+\t\t\treturn res;\n+\t\t}\n+\t}\n+\tU_32 numOfInterfaces = 0;\n \n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\tif (classFileOracle->needsIdentityInterface()) {\n+#define JAVA_LANG_IDENTITYINTERFACE \"java/lang/IdentityInterface\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3OTUyNQ=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NzA5MjcxOnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNToxNjoyMlrOIQVrUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNToyOToxMFrOIQWJ_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwMzI4Mw==", "bodyText": "I dont think the preprocessor macros work for DDR code. @JasonFengJ9 can you confirm?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r554003283", "createdAt": "2021-01-08T15:16:22Z", "author": {"login": "tajila"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "diffHunk": "@@ -27,6 +27,9 @@\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_ENCLOSING_METHOD;\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_GENERIC_SIGNATURE;\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE;\n+/*[IF INLINE-TYPES]*/\n+import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwNDQxMQ==", "bodyText": "You can define the flag unconditionally in j9nonbuilder.h", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r554004411", "createdAt": "2021-01-08T15:18:09Z", "author": {"login": "tajila"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "diffHunk": "@@ -27,6 +27,9 @@\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_ENCLOSING_METHOD;\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_GENERIC_SIGNATURE;\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE;\n+/*[IF INLINE-TYPES]*/\n+import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwMzI4Mw=="}, "originalCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAxMTEzNA==", "bodyText": "@tajila That's correct, JPP doesn't work for DDR code within debugtools folder.", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r554011134", "createdAt": "2021-01-08T15:29:10Z", "author": {"login": "JasonFengJ9"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "diffHunk": "@@ -27,6 +27,9 @@\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_ENCLOSING_METHOD;\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_GENERIC_SIGNATURE;\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE;\n+/*[IF INLINE-TYPES]*/\n+import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwMzI4Mw=="}, "originalCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NzA5NjkyOnYy", "diffSide": "RIGHT", "path": "runtime/oti/cfr.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNToxNzoyOVrOIQVt9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNToxNzoyOVrOIQVt9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwMzk1OA==", "bodyText": "dont need ifdefs for flags", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r554003958", "createdAt": "2021-01-08T15:17:29Z", "author": {"login": "tajila"}, "path": "runtime/oti/cfr.h", "diffHunk": "@@ -948,6 +948,10 @@ typedef struct J9CfrClassFile {\n #define CFR_FOUND_CHARS_IN_EXTENDED_MUE_FORM 0x1\n #define CFR_FOUND_SEPARATOR_IN_MUE_FORM 0x2\n \n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NzA5NzgyOnYy", "diffSide": "RIGHT", "path": "runtime/oti/j9nonbuilder.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNToxNzo0MVrOIQVugg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNToxNzo0MVrOIQVugg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwNDA5OA==", "bodyText": "dont need ifdefs for flags", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r554004098", "createdAt": "2021-01-08T15:17:41Z", "author": {"login": "tajila"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -252,6 +252,9 @@\n #define J9_ROMCLASS_OPTINFO_TYPE_ANNOTATION_INFO 0x400000\n #define J9_ROMCLASS_OPTINFO_RECORD_ATTRIBUTE 0x800000\n #define J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE 0x1000000\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4NzEwMTYzOnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNToxODo0M1rOIQVxAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNToxODo0M1rOIQVxAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwNDczNg==", "bodyText": "look at openj9/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/ValueTypeHelper.java you can use areValueTypesSupported to determine if VT is enabled for the core file", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r554004736", "createdAt": "2021-01-08T15:18:43Z", "author": {"login": "tajila"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -702,7 +702,12 @@ void allSlotsInOptionalInfoDo() throws CorruptDataException\n \t\t\tpermittedSubclassAttributeDo(U32Pointer.cast(cursor.get()));\n \t\t\tcursor = cursor.add(1);\n \t\t}\n-\n+/*[IF INLINE-TYPES]*/\n+\t\tif (romClass.optionalFlags().allBitsIn(J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNDEyMjk4OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNDo0OTowMVrOISynXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNDo0OTowMVrOISynXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU3NDU1OQ==", "bodyText": "space between if and (, same with ){", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r556574559", "createdAt": "2021-01-13T14:49:01Z", "author": {"login": "tajila"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -702,7 +703,12 @@ void allSlotsInOptionalInfoDo() throws CorruptDataException\n \t\t\tpermittedSubclassAttributeDo(U32Pointer.cast(cursor.get()));\n \t\t\tcursor = cursor.add(1);\n \t\t}\n-\n+\t\tif(ValueTypeHelper.getValueTypeHelper().areValueTypesSupported()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63a850076dfbbf46e10a9c84c4027d1f205b5875"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNDE0OTA2OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileOracle.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNDo1Mzo1OVrOISy3Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNDo1Mzo1OVrOISy3Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU3ODYwMw==", "bodyText": "dont need to define this here since its defined in cfr.h", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r556578603", "createdAt": "2021-01-13T14:53:59Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.cpp", "diffHunk": "@@ -684,16 +691,30 @@ class ClassFileOracle::InterfaceVisitor : public ClassFileOracle::ConstantPoolIn\n \t\t\t_wasSerializableSeen = true;\n \t\t}\n #undef SERIALIZABLE_NAME\n+\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+#define IDENTITY_OBJECT_NAME \"java/lang/IdentityInterface\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63a850076dfbbf46e10a9c84c4027d1f205b5875"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNDE1MDk2OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNDo1NDoxOVrOISy4PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNDo1NDoxOVrOISy4PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU3ODg3Nw==", "bodyText": "same here", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r556578877", "createdAt": "2021-01-13T14:54:19Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -249,6 +249,21 @@ ROMClassBuilder::buildROMClass(ROMClassCreationContext *context)\n \treturn result;\n }\n \n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+BuildResult\n+ROMClassBuilder::injectInterfaces(ClassFileOracle *classFileOracle)\n+{\n+\tU_32 numOfInterfaces = 0;\n+\tif (classFileOracle->needsIdentityInterface()) {\n+#define IDENTITY_OBJECT_NAME \"java/lang/IdentityInterface\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63a850076dfbbf46e10a9c84c4027d1f205b5875"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNTU5OTE3OnYy", "diffSide": "RIGHT", "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDoyNDozMFrOITAxQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxMzo1OToyMFrOIX3ucQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgwNjQ2Nw==", "bodyText": "@tajila I created an abstract class here to check if it contains the IdentityInterface. Is there another way to test the abstract class, or is this fine? Would I want to populate the class with methods and fields, or simply leave it blank?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r556806467", "createdAt": "2021-01-13T20:24:30Z", "author": {"login": "OussamaSaoudi"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -3029,7 +3030,41 @@ static public void testUnresolvedPutFieldUse() throws Throwable {\n \t\t\t}\n \t\t}\n \t}\n-\t\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnValueType() throws Throwable {\n+\t\tString fields[] = {\"longField:J\"};\n+\t\tClass valueClass = ValueTypeGenerator.generateValueClass(\"testIdentityObjectOnValueType\", fields);\n+\t\tassertFalse(Arrays.asList(valueClass.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnAbstract() throws Throwable {\n+\t\tassertFalse(Arrays.asList(AbstractClass.class.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\tprivate static abstract class AbstractClass {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgwNjY2NA==", "bodyText": "I have also made them priority = 1 since they don't rely on any other methods. Lmk if that should change.", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r556806664", "createdAt": "2021-01-13T20:25:11Z", "author": {"login": "OussamaSaoudi"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -3029,7 +3030,41 @@ static public void testUnresolvedPutFieldUse() throws Throwable {\n \t\t\t}\n \t\t}\n \t}\n-\t\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnValueType() throws Throwable {\n+\t\tString fields[] = {\"longField:J\"};\n+\t\tClass valueClass = ValueTypeGenerator.generateValueClass(\"testIdentityObjectOnValueType\", fields);\n+\t\tassertFalse(Arrays.asList(valueClass.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnAbstract() throws Throwable {\n+\t\tassertFalse(Arrays.asList(AbstractClass.class.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\tprivate static abstract class AbstractClass {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgwNjQ2Nw=="}, "originalCommit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTIwNDQzNQ==", "bodyText": "@tajila", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r561204435", "createdAt": "2021-01-20T19:03:23Z", "author": {"login": "OussamaSaoudi"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -3029,7 +3030,41 @@ static public void testUnresolvedPutFieldUse() throws Throwable {\n \t\t\t}\n \t\t}\n \t}\n-\t\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnValueType() throws Throwable {\n+\t\tString fields[] = {\"longField:J\"};\n+\t\tClass valueClass = ValueTypeGenerator.generateValueClass(\"testIdentityObjectOnValueType\", fields);\n+\t\tassertFalse(Arrays.asList(valueClass.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnAbstract() throws Throwable {\n+\t\tassertFalse(Arrays.asList(AbstractClass.class.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\tprivate static abstract class AbstractClass {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgwNjQ2Nw=="}, "originalCommit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTkwMTE2OQ==", "bodyText": "thats fine", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r561901169", "createdAt": "2021-01-21T13:59:20Z", "author": {"login": "tajila"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -3029,7 +3030,41 @@ static public void testUnresolvedPutFieldUse() throws Throwable {\n \t\t\t}\n \t\t}\n \t}\n-\t\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnValueType() throws Throwable {\n+\t\tString fields[] = {\"longField:J\"};\n+\t\tClass valueClass = ValueTypeGenerator.generateValueClass(\"testIdentityObjectOnValueType\", fields);\n+\t\tassertFalse(Arrays.asList(valueClass.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnAbstract() throws Throwable {\n+\t\tassertFalse(Arrays.asList(AbstractClass.class.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\tprivate static abstract class AbstractClass {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgwNjQ2Nw=="}, "originalCommit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzODI3MjcyOnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxMzo1NToyNlrOIX3itw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxMzo1NToyNlrOIX3itw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTg5ODE2Nw==", "bodyText": "formatting with ){", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r561898167", "createdAt": "2021-01-21T13:55:26Z", "author": {"login": "tajila"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -702,7 +703,12 @@ void allSlotsInOptionalInfoDo() throws CorruptDataException\n \t\t\tpermittedSubclassAttributeDo(U32Pointer.cast(cursor.get()));\n \t\t\tcursor = cursor.add(1);\n \t\t}\n-\n+\t\tif (ValueTypeHelper.getValueTypeHelper().areValueTypesSupported()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzODI5MDI4OnYy", "diffSide": "RIGHT", "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxMzo1OTowMFrOIX3tjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxMzo1OTowMFrOIX3tjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTkwMDk0Mw==", "bodyText": "naming: call this refClass", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r561900943", "createdAt": "2021-01-21T13:59:00Z", "author": {"login": "tajila"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -3029,7 +3030,41 @@ static public void testUnresolvedPutFieldUse() throws Throwable {\n \t\t\t}\n \t\t}\n \t}\n-\t\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnValueType() throws Throwable {\n+\t\tString fields[] = {\"longField:J\"};\n+\t\tClass valueClass = ValueTypeGenerator.generateValueClass(\"testIdentityObjectOnValueType\", fields);\n+\t\tassertFalse(Arrays.asList(valueClass.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnAbstract() throws Throwable {\n+\t\tassertFalse(Arrays.asList(AbstractClass.class.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\tprivate static abstract class AbstractClass {\n+\t\tprivate int x;\n+\t\tprivate int y;\n+\t\tpublic int getX(){\n+\t\t\treturn x;\n+\t\t}\n+\t\tpublic int getY(){\n+\t\t\treturn y;\n+\t\t}\n+\t}\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnJLObject() throws Throwable {\n+\t\tassertFalse(Arrays.asList(Object.class.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnRef() throws Throwable {\n+\t\tString fields[] = {\"longField:J\"};\n+\t\tClass valueClass = ValueTypeGenerator.generateRefClass(\"testIdentityObjectOnRef\", fields);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU4MzQyNTQxOnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/jclcinit.c", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxNTo0OToxMVrOIeXW6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QwMzozNTo1M1rOIevo_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODcxMDg5MQ==", "bodyText": "Why is this being force loaded earlier than it would be by the default loading of the vmconstantpool classes?\nIt would be good to add a comment to describe why it's necessary this early (if it is)", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r568710891", "createdAt": "2021-02-02T15:49:11Z", "author": {"login": "DanHeidinga"}, "path": "runtime/jcl/common/jclcinit.c", "diffHunk": "@@ -632,6 +635,12 @@ initializeRequiredClasses(J9VMThread *vmThread, char* dllName)\n \tif (NULL == objectClass) {\n \t\treturn 1;\n \t}\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\tidentityInterfaceClass = vmFuncs->internalFindKnownClass(vmThread, J9VMCONSTANTPOOL_JAVALANGIDENTITYINTERFACE, J9_FINDKNOWNCLASS_FLAG_NON_FATAL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "796263508b2ea9425c9ea4ef09bbf45076fba781"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODcxNTE2MA==", "bodyText": "@tajila Could you give some input?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r568715160", "createdAt": "2021-02-02T15:54:21Z", "author": {"login": "OussamaSaoudi"}, "path": "runtime/jcl/common/jclcinit.c", "diffHunk": "@@ -632,6 +635,12 @@ initializeRequiredClasses(J9VMThread *vmThread, char* dllName)\n \tif (NULL == objectClass) {\n \t\treturn 1;\n \t}\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\tidentityInterfaceClass = vmFuncs->internalFindKnownClass(vmThread, J9VMCONSTANTPOOL_JAVALANGIDENTITYINTERFACE, J9_FINDKNOWNCLASS_FLAG_NON_FATAL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODcxMDg5MQ=="}, "originalCommit": {"oid": "796263508b2ea9425c9ea4ef09bbf45076fba781"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODc0MDY2MQ==", "bodyText": "The class needs to be loaded before the first non j.l.Object|interface|value type (JAVALANGJ9VMINTERNALS the second class) is loaded. The vmconstantpool classes are loaded later, after a few core classes have already be loaded.\nThe reason to do it explicitly is report a JVM internal failure should there be a problem loading the class, similar to j.l.Object", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r568740661", "createdAt": "2021-02-02T16:25:59Z", "author": {"login": "tajila"}, "path": "runtime/jcl/common/jclcinit.c", "diffHunk": "@@ -632,6 +635,12 @@ initializeRequiredClasses(J9VMThread *vmThread, char* dllName)\n \tif (NULL == objectClass) {\n \t\treturn 1;\n \t}\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\tidentityInterfaceClass = vmFuncs->internalFindKnownClass(vmThread, J9VMCONSTANTPOOL_JAVALANGIDENTITYINTERFACE, J9_FINDKNOWNCLASS_FLAG_NON_FATAL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODcxMDg5MQ=="}, "originalCommit": {"oid": "796263508b2ea9425c9ea4ef09bbf45076fba781"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODc0NDkzNw==", "bodyText": "The loading of this class should be triggered by J9VMINTERNALS, so perhaps the explicit classload is not needed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r568744937", "createdAt": "2021-02-02T16:31:10Z", "author": {"login": "tajila"}, "path": "runtime/jcl/common/jclcinit.c", "diffHunk": "@@ -632,6 +635,12 @@ initializeRequiredClasses(J9VMThread *vmThread, char* dllName)\n \tif (NULL == objectClass) {\n \t\treturn 1;\n \t}\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\tidentityInterfaceClass = vmFuncs->internalFindKnownClass(vmThread, J9VMCONSTANTPOOL_JAVALANGIDENTITYINTERFACE, J9_FINDKNOWNCLASS_FLAG_NON_FATAL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODcxMDg5MQ=="}, "originalCommit": {"oid": "796263508b2ea9425c9ea4ef09bbf45076fba781"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTEwODczMg==", "bodyText": "@OussamaSaoudi  can you make that change", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r569108732", "createdAt": "2021-02-03T03:35:53Z", "author": {"login": "tajila"}, "path": "runtime/jcl/common/jclcinit.c", "diffHunk": "@@ -632,6 +635,12 @@ initializeRequiredClasses(J9VMThread *vmThread, char* dllName)\n \tif (NULL == objectClass) {\n \t\treturn 1;\n \t}\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\tidentityInterfaceClass = vmFuncs->internalFindKnownClass(vmThread, J9VMCONSTANTPOOL_JAVALANGIDENTITYINTERFACE, J9_FINDKNOWNCLASS_FLAG_NON_FATAL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODcxMDg5MQ=="}, "originalCommit": {"oid": "796263508b2ea9425c9ea4ef09bbf45076fba781"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU4ODU4NTQwOnYy", "diffSide": "RIGHT", "path": "runtime/oti/vmconstantpool.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QxNToyNzoxNFrOIfH6ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QxNToyNzoxNFrOIfH6ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTUwNjQ0Mg==", "bodyText": "we dont need this anymore, since we arent explicitly loading it", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r569506442", "createdAt": "2021-02-03T15:27:14Z", "author": {"login": "tajila"}, "path": "runtime/oti/vmconstantpool.xml", "diffHunk": "@@ -31,6 +31,7 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n \t<classref name=\"java/lang/InstantiationError\"/>\n \t<classref name=\"java/lang/UnsatisfiedLinkError\"/>\n \t<classref name=\"java/lang/InternalError\"/>\n+\t<classref name=\"java/lang/IdentityInterface\" flags=\"opt_valhallaValueTypes\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "375cc6c4676290ea9f98b4092b425b59704ac5b3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzY2MDY5ODc3OnYy", "diffSide": "RIGHT", "path": "test/functional/Java8andUp/src_110_up/org/openj9/test/java/lang/Test_Class.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQxNToyMzozOVrOIpc-Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQxNToyMzozOVrOIpc-Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDMzNzIwMw==", "bodyText": "@tajila", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r580337203", "createdAt": "2021-02-22T15:23:39Z", "author": {"login": "OussamaSaoudi"}, "path": "test/functional/Java8andUp/src_110_up/org/openj9/test/java/lang/Test_Class.java", "diffHunk": "@@ -446,6 +446,7 @@ public void test_getMethods_subtest6() throws Exception {\n \tClzImpl clzImpl = new ClzImpl();\n \tfor (Method method : clzImpl.getClass().getMethods()) {\n \t\tfor (Class<?> anInterface : method.getDeclaringClass().getInterfaces()) {\n+\t\t\tif (anInterface == IdentityInterface.class) continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b86a0ab100c4af324a9cef553ee6be42762cd7bf"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4838, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}