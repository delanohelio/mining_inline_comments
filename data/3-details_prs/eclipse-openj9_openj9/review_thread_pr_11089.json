{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0Nzk1MzA0", "number": 11089, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjo0Mzo0M1rOE05BdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzozMToxOFrOE06PpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODk1NjY5OnYy", "diffSide": "RIGHT", "path": "runtime/bcverify/bcverify.c", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjo0Mzo0M1rOHs3bqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODoxNDowNlrOHs666Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNzU5Mg==", "bodyText": "Actually, while we're here, let's remove the extra blank. Do it after testing passes and I'll merge.", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516807592", "createdAt": "2020-11-03T16:43:43Z", "author": {"login": "gacholio"}, "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -867,16 +867,16 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \tUDATA maxIndex = J9_ARG_COUNT_FROM_ROM_METHOD(romMethod) + J9_TEMP_COUNT_FROM_ROM_METHOD(romMethod);\n \tU_32 *bytecodeMap = verifyData->bytecodeMap;\n \tUDATA i = 0;\n-\tUDATA stackIndex;\n+\tUDATA stackIndex = bytecodeMap[target] >> BRANCH_INDEX_SHIFT;\n \tIDATA rewalk = FALSE;\n \tIDATA rc = BCV_SUCCESS;\n-\tUDATA *targetStackPtr, *targetStackTop, *sourceStackPtr, *sourceStackTop, *sourceStackTemps;\n+\tUDATA *targetStackPtr = NULL;\n+\tUDATA *targetStackTop = NULL;\n+\tUDATA *sourceStackPtr = NULL;\n+\tUDATA *sourceStackTop = NULL;\n+\tUDATA *sourceStackTemps = NULL;\n \tJ9BranchTargetStack *liveStack = (J9BranchTargetStack *) verifyData->liveStack;\n-\tJ9BranchTargetStack *targetStack;\n-\n-\n-\tstackIndex = bytecodeMap[target] >> BRANCH_INDEX_SHIFT;\n-\ttargetStack = BCV_INDEX_STACK (stackIndex);\n+\tJ9BranchTargetStack *targetStack = BCV_INDEX_STACK (stackIndex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03075be7f069951e0bf0edba0d604e15693d8767"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MjQ5MA==", "bodyText": "which blank line do you want removed?  I only see one between the end of the variable declarations and the first tracepoint.", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516862490", "createdAt": "2020-11-03T18:09:51Z", "author": {"login": "DanHeidinga"}, "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -867,16 +867,16 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \tUDATA maxIndex = J9_ARG_COUNT_FROM_ROM_METHOD(romMethod) + J9_TEMP_COUNT_FROM_ROM_METHOD(romMethod);\n \tU_32 *bytecodeMap = verifyData->bytecodeMap;\n \tUDATA i = 0;\n-\tUDATA stackIndex;\n+\tUDATA stackIndex = bytecodeMap[target] >> BRANCH_INDEX_SHIFT;\n \tIDATA rewalk = FALSE;\n \tIDATA rc = BCV_SUCCESS;\n-\tUDATA *targetStackPtr, *targetStackTop, *sourceStackPtr, *sourceStackTop, *sourceStackTemps;\n+\tUDATA *targetStackPtr = NULL;\n+\tUDATA *targetStackTop = NULL;\n+\tUDATA *sourceStackPtr = NULL;\n+\tUDATA *sourceStackTop = NULL;\n+\tUDATA *sourceStackTemps = NULL;\n \tJ9BranchTargetStack *liveStack = (J9BranchTargetStack *) verifyData->liveStack;\n-\tJ9BranchTargetStack *targetStack;\n-\n-\n-\tstackIndex = bytecodeMap[target] >> BRANCH_INDEX_SHIFT;\n-\ttargetStack = BCV_INDEX_STACK (stackIndex);\n+\tJ9BranchTargetStack *targetStack = BCV_INDEX_STACK (stackIndex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNzU5Mg=="}, "originalCommit": {"oid": "03075be7f069951e0bf0edba0d604e15693d8767"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MzMwNg==", "bodyText": "The one between the macro and the bracketted arg.", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516863306", "createdAt": "2020-11-03T18:11:19Z", "author": {"login": "gacholio"}, "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -867,16 +867,16 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \tUDATA maxIndex = J9_ARG_COUNT_FROM_ROM_METHOD(romMethod) + J9_TEMP_COUNT_FROM_ROM_METHOD(romMethod);\n \tU_32 *bytecodeMap = verifyData->bytecodeMap;\n \tUDATA i = 0;\n-\tUDATA stackIndex;\n+\tUDATA stackIndex = bytecodeMap[target] >> BRANCH_INDEX_SHIFT;\n \tIDATA rewalk = FALSE;\n \tIDATA rc = BCV_SUCCESS;\n-\tUDATA *targetStackPtr, *targetStackTop, *sourceStackPtr, *sourceStackTop, *sourceStackTemps;\n+\tUDATA *targetStackPtr = NULL;\n+\tUDATA *targetStackTop = NULL;\n+\tUDATA *sourceStackPtr = NULL;\n+\tUDATA *sourceStackTop = NULL;\n+\tUDATA *sourceStackTemps = NULL;\n \tJ9BranchTargetStack *liveStack = (J9BranchTargetStack *) verifyData->liveStack;\n-\tJ9BranchTargetStack *targetStack;\n-\n-\n-\tstackIndex = bytecodeMap[target] >> BRANCH_INDEX_SHIFT;\n-\ttargetStack = BCV_INDEX_STACK (stackIndex);\n+\tJ9BranchTargetStack *targetStack = BCV_INDEX_STACK (stackIndex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNzU5Mg=="}, "originalCommit": {"oid": "03075be7f069951e0bf0edba0d604e15693d8767"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2NDc0NQ==", "bodyText": "Click.  I read that as \"blank line\".  Fixed now", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516864745", "createdAt": "2020-11-03T18:14:06Z", "author": {"login": "DanHeidinga"}, "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -867,16 +867,16 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \tUDATA maxIndex = J9_ARG_COUNT_FROM_ROM_METHOD(romMethod) + J9_TEMP_COUNT_FROM_ROM_METHOD(romMethod);\n \tU_32 *bytecodeMap = verifyData->bytecodeMap;\n \tUDATA i = 0;\n-\tUDATA stackIndex;\n+\tUDATA stackIndex = bytecodeMap[target] >> BRANCH_INDEX_SHIFT;\n \tIDATA rewalk = FALSE;\n \tIDATA rc = BCV_SUCCESS;\n-\tUDATA *targetStackPtr, *targetStackTop, *sourceStackPtr, *sourceStackTop, *sourceStackTemps;\n+\tUDATA *targetStackPtr = NULL;\n+\tUDATA *targetStackTop = NULL;\n+\tUDATA *sourceStackPtr = NULL;\n+\tUDATA *sourceStackTop = NULL;\n+\tUDATA *sourceStackTemps = NULL;\n \tJ9BranchTargetStack *liveStack = (J9BranchTargetStack *) verifyData->liveStack;\n-\tJ9BranchTargetStack *targetStack;\n-\n-\n-\tstackIndex = bytecodeMap[target] >> BRANCH_INDEX_SHIFT;\n-\ttargetStack = BCV_INDEX_STACK (stackIndex);\n+\tJ9BranchTargetStack *targetStack = BCV_INDEX_STACK (stackIndex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgwNzU5Mg=="}, "originalCommit": {"oid": "03075be7f069951e0bf0edba0d604e15693d8767"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTE1Njg1OnYy", "diffSide": "RIGHT", "path": "runtime/bcverify/bcverify.c", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzozMToxOFrOHs5YOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODoxMToxOVrOHs61UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA==", "bodyText": "verifyData->verificationFlags & J9_VERIFY_OPTIMIZE is the kind of thing I've seen cause compilation problems in the past on P. If these types of expressions are modified to use J9_ARE_ALL_BITS_SET() or J9_ARE_ANY_BITS_SET() which create proper boolean expressions, it might help #11086\n@ChengJin01 fyi", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516839480", "createdAt": "2020-11-03T17:31:18Z", "author": {"login": "pshipton"}, "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -979,11 +978,11 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \t\t\t\t\t\t\t\t*targetStackPtr = *sourceStackPtr;\n \t\t\t\t\t\t\t\trewalk = TRUE;\n \t\t\t\t\t\t\t} else {\n-\n \t\t\t\t\t\t\t\t/* Use local mapper to check merge necessity in locals */\n \t\t\t\t\t\t\t\tif ((verifyData->verificationFlags & J9_VERIFY_OPTIMIZE) && (maxIndex <= 32)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03075be7f069951e0bf0edba0d604e15693d8767"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg0MjEwNg==", "bodyText": "The code has been there for quite a long while prior to OpenJ9. If there is any change involved, extensive tests must be carried out on all platforms to ensure there is no issue introduced if anything.", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516842106", "createdAt": "2020-11-03T17:35:42Z", "author": {"login": "ChengJin01"}, "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -979,11 +978,11 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \t\t\t\t\t\t\t\t*targetStackPtr = *sourceStackPtr;\n \t\t\t\t\t\t\t\trewalk = TRUE;\n \t\t\t\t\t\t\t} else {\n-\n \t\t\t\t\t\t\t\t/* Use local mapper to check merge necessity in locals */\n \t\t\t\t\t\t\t\tif ((verifyData->verificationFlags & J9_VERIFY_OPTIMIZE) && (maxIndex <= 32)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, "originalCommit": {"oid": "03075be7f069951e0bf0edba0d604e15693d8767"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg0NTM2OA==", "bodyText": "I can go either way on this one - it has nothing to do with what's being changed in this PR, but I don't believe it would introduce any errors, even on our more deficient compilers.", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516845368", "createdAt": "2020-11-03T17:41:18Z", "author": {"login": "gacholio"}, "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -979,11 +978,11 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \t\t\t\t\t\t\t\t*targetStackPtr = *sourceStackPtr;\n \t\t\t\t\t\t\t\trewalk = TRUE;\n \t\t\t\t\t\t\t} else {\n-\n \t\t\t\t\t\t\t\t/* Use local mapper to check merge necessity in locals */\n \t\t\t\t\t\t\t\tif ((verifyData->verificationFlags & J9_VERIFY_OPTIMIZE) && (maxIndex <= 32)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, "originalCommit": {"oid": "03075be7f069951e0bf0edba0d604e15693d8767"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg1MTUxNg==", "bodyText": "I just double-checked J9_VERIFY_OPTIMIZE in the code involved. Given it is used by default, technically it should be fine if the code here is replaced with J9_ARE_ALL_BITS_SET() or J9_ARE_ANY_BITS_SET().", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516851516", "createdAt": "2020-11-03T17:51:16Z", "author": {"login": "ChengJin01"}, "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -979,11 +978,11 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \t\t\t\t\t\t\t\t*targetStackPtr = *sourceStackPtr;\n \t\t\t\t\t\t\t\trewalk = TRUE;\n \t\t\t\t\t\t\t} else {\n-\n \t\t\t\t\t\t\t\t/* Use local mapper to check merge necessity in locals */\n \t\t\t\t\t\t\t\tif ((verifyData->verificationFlags & J9_VERIFY_OPTIMIZE) && (maxIndex <= 32)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, "originalCommit": {"oid": "03075be7f069951e0bf0edba0d604e15693d8767"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg1ODk2OA==", "bodyText": "Note I'm not saying this particular check is causing #11086, it's just the first one like this I saw. If we were to make this type of change, all expressions similar to this one should be changed. i.e. a bit test that doesn't compare with anything.", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516858968", "createdAt": "2020-11-03T18:03:47Z", "author": {"login": "pshipton"}, "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -979,11 +978,11 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \t\t\t\t\t\t\t\t*targetStackPtr = *sourceStackPtr;\n \t\t\t\t\t\t\t\trewalk = TRUE;\n \t\t\t\t\t\t\t} else {\n-\n \t\t\t\t\t\t\t\t/* Use local mapper to check merge necessity in locals */\n \t\t\t\t\t\t\t\tif ((verifyData->verificationFlags & J9_VERIFY_OPTIMIZE) && (maxIndex <= 32)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, "originalCommit": {"oid": "03075be7f069951e0bf0edba0d604e15693d8767"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MDAzMA==", "bodyText": "I'm also not suggesting this PR needs to be updated, it was just a convenient place to point it out.", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516860030", "createdAt": "2020-11-03T18:05:32Z", "author": {"login": "pshipton"}, "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -979,11 +978,11 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \t\t\t\t\t\t\t\t*targetStackPtr = *sourceStackPtr;\n \t\t\t\t\t\t\t\trewalk = TRUE;\n \t\t\t\t\t\t\t} else {\n-\n \t\t\t\t\t\t\t\t/* Use local mapper to check merge necessity in locals */\n \t\t\t\t\t\t\t\tif ((verifyData->verificationFlags & J9_VERIFY_OPTIMIZE) && (maxIndex <= 32)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, "originalCommit": {"oid": "03075be7f069951e0bf0edba0d604e15693d8767"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MjE5MA==", "bodyText": "I find it hard to believe the implicit 0 check is causing any problem, ever, given that C code uses this extensively (including thousands of occurrences in our own code).", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516862190", "createdAt": "2020-11-03T18:09:22Z", "author": {"login": "gacholio"}, "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -979,11 +978,11 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \t\t\t\t\t\t\t\t*targetStackPtr = *sourceStackPtr;\n \t\t\t\t\t\t\t\trewalk = TRUE;\n \t\t\t\t\t\t\t} else {\n-\n \t\t\t\t\t\t\t\t/* Use local mapper to check merge necessity in locals */\n \t\t\t\t\t\t\t\tif ((verifyData->verificationFlags & J9_VERIFY_OPTIMIZE) && (maxIndex <= 32)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, "originalCommit": {"oid": "03075be7f069951e0bf0edba0d604e15693d8767"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2MzMxMw==", "bodyText": "There's also some odd code pulling things into locals and then continuing to deref the original pointers.  I'd like to see it cleaned up as well but it's less mechanical.  Look at\n\tUDATA sourceItem = *sourceStackPtr;\n\tUDATA targetItem = *targetStackPtr;", "url": "https://github.com/eclipse-openj9/openj9/pull/11089#discussion_r516863313", "createdAt": "2020-11-03T18:11:19Z", "author": {"login": "DanHeidinga"}, "path": "runtime/bcverify/bcverify.c", "diffHunk": "@@ -979,11 +978,11 @@ mergeStacks (J9BytecodeVerificationData * verifyData, UDATA target)\n \t\t\t\t\t\t\t\t*targetStackPtr = *sourceStackPtr;\n \t\t\t\t\t\t\t\trewalk = TRUE;\n \t\t\t\t\t\t\t} else {\n-\n \t\t\t\t\t\t\t\t/* Use local mapper to check merge necessity in locals */\n \t\t\t\t\t\t\t\tif ((verifyData->verificationFlags & J9_VERIFY_OPTIMIZE) && (maxIndex <= 32)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzOTQ4MA=="}, "originalCommit": {"oid": "03075be7f069951e0bf0edba0d604e15693d8767"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1079, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}