{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NDk5MjAy", "number": 8365, "title": "Print JITServer client UID in client JVM", "bodyText": "Add unique UID to client JVM verbose log, javacore, and compilation log.\nRelated to: #8346\nSigned-off-by: Chris Chong Zichun.Chong@ibm.com", "createdAt": "2020-01-21T20:34:42Z", "url": "https://github.com/eclipse-openj9/openj9/pull/8365", "merged": true, "mergeCommit": {"oid": "f63409e08543118758b1a0c24b83719616adaea1"}, "closed": true, "closedAt": "2020-02-05T22:03:52Z", "author": {"login": "chrisc66"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8nWM8ABqjI5Njc3MDExMjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBdhNyAFqTM1NDA3MzA5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "06899cbb76095deb9f91985c0ab848c47832e132", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/06899cbb76095deb9f91985c0ab848c47832e132", "committedDate": "2020-01-21T20:27:13Z", "message": "Print client UID in JITServer client verbose log\n\nAt the begining of each new client JVM connected to JITServer, client JVM\nprints UID in verbose log with -Xjit:verbose={JITServer} sepecified\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}, "afterCommit": {"oid": "59725091e8ca3d53f780396a8fe77234424729d3", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/59725091e8ca3d53f780396a8fe77234424729d3", "committedDate": "2020-01-21T20:40:19Z", "message": "Print client UID in JITServer client verbose log\n\nAt the beginning of each new client JVM connected to JITServer, client JVM\nprints UID in verbose log with -Xjit:verbose={JITServer} specified\n\nSigned-off-by: Chris Chong <Zichun.Chong@mail.utoronto.ca>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "443f8bb731c784215a2052cd989c3ebabe40fdb4", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/443f8bb731c784215a2052cd989c3ebabe40fdb4", "committedDate": "2020-01-23T22:03:37Z", "message": "Monor fix for previous client UID in verbose log commit\n\nAdding a bracket to ensure only client prints client UID in verbose log\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}, "afterCommit": {"oid": "43cecb9ce2a477186360d6d0dc9edf4ecce41e19", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/43cecb9ce2a477186360d6d0dc9edf4ecce41e19", "committedDate": "2020-01-23T22:05:49Z", "message": "Minor fix for previous client UID in verbose log commit\n\nAdding a bracket to ensure only client prints client UID in verbose log\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43cecb9ce2a477186360d6d0dc9edf4ecce41e19", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/43cecb9ce2a477186360d6d0dc9edf4ecce41e19", "committedDate": "2020-01-23T22:05:49Z", "message": "Minor fix for previous client UID in verbose log commit\n\nAdding a bracket to ensure only client prints client UID in verbose log\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}, "afterCommit": {"oid": "2d0c970512764c4bec0844129035058be8a99ec2", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2d0c970512764c4bec0844129035058be8a99ec2", "committedDate": "2020-01-24T13:14:42Z", "message": "Minor fix for previous commits\n\nAdding a bracket to ensure only client prints client UID in verbose log\nFix javadump copyright date\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "73aa180f88b93748576a2763a75b4e5faf0eaa9f", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/73aa180f88b93748576a2763a75b4e5faf0eaa9f", "committedDate": "2020-01-31T06:31:01Z", "message": "Add client UID in JITServer compilation log\n\nif jitserver is enabled, client UID is printed in conmpilation log\nunder <compile> </compile> block\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}, "afterCommit": {"oid": "10845220ec53c8569ffafa9e5fe7d00e61991722", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/10845220ec53c8569ffafa9e5fe7d00e61991722", "committedDate": "2020-01-31T14:43:08Z", "message": "Add client UID in JITServer compilation log\n\nif jitserver is enabled, client UID is printed in conmpilation log\nunder <compile> </compile> block\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3afba0b22cdf60608751f77e2f074e607ba65ed9", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3afba0b22cdf60608751f77e2f074e607ba65ed9", "committedDate": "2020-01-31T14:46:09Z", "message": "Print client UID in JITServer client verbose log\n\nAt the beginning of each new client JVM connected to JITServer, client JVM\nprints UID in verbose log with -Xjit:verbose={JITServer} specified\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f58a336930d6380453869f81285ec6beeaa0dc2", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2f58a336930d6380453869f81285ec6beeaa0dc2", "committedDate": "2020-01-31T14:46:21Z", "message": "Print JITServer client UID in javacore file\n\nIf the JITServer JVM crash, client JVM prints its UID in javacore file,\nline starting with \"1CICLIENTID\" in java core ENVINFO section.\nAdd clientUID and isClient in J9JITConfig struct that can be passed into javacore writter.\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11712899343bf6589597def6dd679669abb3f329", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/11712899343bf6589597def6dd679669abb3f329", "committedDate": "2020-01-31T14:46:22Z", "message": "Minor fix for previous commits\n\nAdding a bracket to ensure only client prints client UID in verbose log\nFix javadump copyright date\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee2d0578ce980c1b35c019145aeeda5e47a63846", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ee2d0578ce980c1b35c019145aeeda5e47a63846", "committedDate": "2020-01-31T14:46:22Z", "message": "Add client UID in JITServer compilation log\n\nif jitserver is enabled, client UID is printed in conmpilation log\nunder <compile> </compile> block\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10845220ec53c8569ffafa9e5fe7d00e61991722", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/10845220ec53c8569ffafa9e5fe7d00e61991722", "committedDate": "2020-01-31T14:43:08Z", "message": "Add client UID in JITServer compilation log\n\nif jitserver is enabled, client UID is printed in conmpilation log\nunder <compile> </compile> block\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}, "afterCommit": {"oid": "ee2d0578ce980c1b35c019145aeeda5e47a63846", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ee2d0578ce980c1b35c019145aeeda5e47a63846", "committedDate": "2020-01-31T14:46:22Z", "message": "Add client UID in JITServer compilation log\n\nif jitserver is enabled, client UID is printed in conmpilation log\nunder <compile> </compile> block\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNjU4ODE0", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#pullrequestreview-351658814", "createdAt": "2020-01-31T17:26:56Z", "commit": {"oid": "ee2d0578ce980c1b35c019145aeeda5e47a63846"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNzoyNjo1NlrOFkSa_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxNzo0NjowNVrOFkS6Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU5NDg3OQ==", "bodyText": "Maybe add another test in front: if (_compiler->isOutOfProcessCompilation())", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r373594879", "createdAt": "2020-01-31T17:26:56Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -8787,13 +8787,20 @@ TR::CompilationInfoPerThreadBase::compile(\n                {\n                TR_ASSERT(_compiler.getHotnessName(_compiler.getMethodHotness()), \"expected to have a hotness string\");\n                if (_compiler.getOutFile() != NULL && _compiler.getOption(TR_TraceAll))\n-                  traceMsg(&_compiler, \"<compile\\n\"\n-                          \"\\tmethod=\\\"%s\\\"\\n\"\n-                          \"\\thotness=\\\"%s\\\"\\n\"\n-                          \"\\tisProfilingCompile=%d>\\n\",\n-                          _compiler.signature(),\n-                          _compiler.getHotnessName(_compiler.getMethodHotness()),\n-                          _compiler.isProfilingCompilation());\n+                  {\n+                  traceMsg(&_compiler, \"<compile\\n\");\n+                  traceMsg(&_compiler, \"\\tmethod=\\\"%s\\\"\\n\", _compiler.signature());\n+                  traceMsg(&_compiler, \"\\thotness=\\\"%s\\\"\\n\", _compiler.getHotnessName(_compiler.getMethodHotness()));\n+                  traceMsg(&_compiler, \"\\tisProfilingCompile=%d\", _compiler.isProfilingCompilation());\n+#if defined(JITSERVER_SUPPORT)\n+                  if (TR::compInfoPT->getClientData()) // not NULL", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee2d0578ce980c1b35c019145aeeda5e47a63846"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU5NTI2MQ==", "bodyText": "What is printed if we don't have TR_TraceAll but have another type of tracing (like traceCG)", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r373595261", "createdAt": "2020-01-31T17:27:51Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -8787,13 +8787,20 @@ TR::CompilationInfoPerThreadBase::compile(\n                {\n                TR_ASSERT(_compiler.getHotnessName(_compiler.getMethodHotness()), \"expected to have a hotness string\");\n                if (_compiler.getOutFile() != NULL && _compiler.getOption(TR_TraceAll))\n-                  traceMsg(&_compiler, \"<compile\\n\"\n-                          \"\\tmethod=\\\"%s\\\"\\n\"\n-                          \"\\thotness=\\\"%s\\\"\\n\"\n-                          \"\\tisProfilingCompile=%d>\\n\",\n-                          _compiler.signature(),\n-                          _compiler.getHotnessName(_compiler.getMethodHotness()),\n-                          _compiler.isProfilingCompilation());\n+                  {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee2d0578ce980c1b35c019145aeeda5e47a63846"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU5NjEwOA==", "bodyText": "Please eliminate isClient", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r373596108", "createdAt": "2020-01-31T17:29:56Z", "author": {"login": "mpirvu"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -3763,6 +3763,8 @@ typedef struct J9JITConfig {\n #if defined(JITSERVER_SUPPORT)\n \tint32_t (*startJITServer)(struct J9JITConfig *jitConfig);\n \tint32_t (*waitJITServerTermination)(struct J9JITConfig *jitConfig);\n+\tint32_t isClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee2d0578ce980c1b35c019145aeeda5e47a63846"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU5NzEyMA==", "bodyText": "We can eliminate jitConfig->isClient if we use the convention that a client can never have UID==0. Thus in here we need another check when generating the clientUID. If the random number generator returned 0, we have to call it again.\nThis also means that we need to initialize jitConfig->clientUID with 0 somewhere very early.", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r373597120", "createdAt": "2020-01-31T17:32:35Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/J9Options.cpp", "diffHunk": "@@ -1989,11 +1989,15 @@ J9::Options::fePreProcess(void * base)\n          std::random_device rd;\n          std::mt19937_64 rng(rd());\n          std::uniform_int_distribution<uint64_t> dist;\n-         compInfo->getPersistentInfo()->setClientUID(dist(rng));\n+         uint64_t clientUID = dist(rng);\n+         compInfo->getPersistentInfo()->setClientUID(clientUID);\n+         jitConfig->clientUID = clientUID;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee2d0578ce980c1b35c019145aeeda5e47a63846"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU5ODg0Mg==", "bodyText": "Note that we could have JITSERVER_SUPPORT enabled and still be running as a regular JVM (when we don't specify options to run as a client or server)", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r373598842", "createdAt": "2020-01-31T17:36:44Z", "author": {"login": "mpirvu"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1052,14 +1052,31 @@ JavaCoreDumpWriter::writeEnvironmentSection(void)\n \t/* Write the running mode data */\n \t_OutputStream.writeCharacters(\"1CIRUNNINGAS   Running as \");\n \n+\t/* If JITServer enabled, print running mode as JITServer and client UID*/\n+#ifdef JITSERVER_SUPPORT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee2d0578ce980c1b35c019145aeeda5e47a63846"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzU5OTM3NQ==", "bodyText": "Here we could test if (0 != jitConfig->clientUID)", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r373599375", "createdAt": "2020-01-31T17:38:06Z", "author": {"login": "mpirvu"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1052,14 +1052,31 @@ JavaCoreDumpWriter::writeEnvironmentSection(void)\n \t/* Write the running mode data */\n \t_OutputStream.writeCharacters(\"1CIRUNNINGAS   Running as \");\n \n+\t/* If JITServer enabled, print running mode as JITServer and client UID*/\n+#ifdef JITSERVER_SUPPORT\n+\tif (jitConfig->isClient == 1) {\n+\t\t_OutputStream.writeCharacters(\"a JITServer Client\");\n+\t} else {\n+\t\t_OutputStream.writeCharacters(\"a JITServer Server\");\n+\t}\n \t/* NB : I can't find any code for making this decision in the existing implementation */\n-#ifdef J9VM_BUILD_J2SE\n+#elif J9VM_BUILD_J2SE\n \t_OutputStream.writeCharacters(\"a standalone\");\n #else\n \t_OutputStream.writeCharacters(\"an embedded\");\n #endif\n \t_OutputStream.writeCharacters(\" JVM\\n\");\n \n+#ifdef JITSERVER_SUPPORT\n+\tif (jitConfig->isClient == 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee2d0578ce980c1b35c019145aeeda5e47a63846"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzYwMjg4Nw==", "bodyText": "I looked at some other examples and this is how we write a 64-bit unsigned value:\n_OutputStream.writeInteger64(j9time_nano_time(), \"%llu\");", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r373602887", "createdAt": "2020-01-31T17:46:05Z", "author": {"login": "mpirvu"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1052,14 +1052,31 @@ JavaCoreDumpWriter::writeEnvironmentSection(void)\n \t/* Write the running mode data */\n \t_OutputStream.writeCharacters(\"1CIRUNNINGAS   Running as \");\n \n+\t/* If JITServer enabled, print running mode as JITServer and client UID*/\n+#ifdef JITSERVER_SUPPORT\n+\tif (jitConfig->isClient == 1) {\n+\t\t_OutputStream.writeCharacters(\"a JITServer Client\");\n+\t} else {\n+\t\t_OutputStream.writeCharacters(\"a JITServer Server\");\n+\t}\n \t/* NB : I can't find any code for making this decision in the existing implementation */\n-#ifdef J9VM_BUILD_J2SE\n+#elif J9VM_BUILD_J2SE\n \t_OutputStream.writeCharacters(\"a standalone\");\n #else\n \t_OutputStream.writeCharacters(\"an embedded\");\n #endif\n \t_OutputStream.writeCharacters(\" JVM\\n\");\n \n+#ifdef JITSERVER_SUPPORT\n+\tif (jitConfig->isClient == 1) {\n+\t\tchar valueString[_MaximumGPValueLength]; \n+\t\tsprintf(valueString, \"%llu\", (unsigned long long) jitConfig->clientUID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee2d0578ce980c1b35c019145aeeda5e47a63846"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNzgxOTY4", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#pullrequestreview-351781968", "createdAt": "2020-01-31T21:15:14Z", "commit": {"oid": "1aec2eaa764d8dba155932f180a6bd13a9a7c289"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToxNToxNVrOFkYJWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMToxNToxNVrOFkYJWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4ODY2Nw==", "bodyText": "If jitserver jvm is running in server mode, this section ensures client UID is non-zero and stores it to persistent info.\nUnder below else block, client UID is set to zero if running as server mode.", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r373688667", "createdAt": "2020-01-31T21:15:15Z", "author": {"login": "chrisc66"}, "path": "runtime/compiler/control/J9Options.cpp", "diffHunk": "@@ -1989,15 +1989,23 @@ J9::Options::fePreProcess(void * base)\n          std::random_device rd;\n          std::mt19937_64 rng(rd());\n          std::uniform_int_distribution<uint64_t> dist;\n+         // We want to generate a non-zero client UID for client mode", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aec2eaa764d8dba155932f180a6bd13a9a7c289"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNzk0NDIw", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#pullrequestreview-351794420", "createdAt": "2020-01-31T21:41:02Z", "commit": {"oid": "1aec2eaa764d8dba155932f180a6bd13a9a7c289"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTo0MTowM1rOFkYuWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTo0NjozM1rOFkY1PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5ODEzNg==", "bodyText": "We will need something similar for a JVM that has JITServer code compiled-in, but it's acting like a regular JVM (not server, not client)", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r373698136", "createdAt": "2020-01-31T21:41:03Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/J9Options.cpp", "diffHunk": "@@ -1989,11 +1989,23 @@ J9::Options::fePreProcess(void * base)\n          std::random_device rd;\n          std::mt19937_64 rng(rd());\n          std::uniform_int_distribution<uint64_t> dist;\n-         compInfo->getPersistentInfo()->setClientUID(dist(rng));\n+         // We want to generate a non-zero client UID for client mode\n+         uint64_t clientUID = dist(rng);\n+         while (0 == clientUID)\n+            clientUID = dist(rng);\n+         compInfo->getPersistentInfo()->setClientUID(clientUID);\n+         jitConfig->clientUID = clientUID;\n+\n          // _safeReservePhysicalMemoryValue is set as 0 for the JITClient because compilations\n          // are done remotely. The user can still override it with a command line option\n          J9::Options::_safeReservePhysicalMemoryValue = 0;\n          }\n+      else\n+         {\n+         // Client UID is zero in jitserver mode", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aec2eaa764d8dba155932f180a6bd13a9a7c289"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5ODczMQ==", "bodyText": "If you added curly brackets for the else part you need to add them for the if part as well. That's our coding convention.", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r373698731", "createdAt": "2020-01-31T21:42:59Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/J9Options.cpp", "diffHunk": "@@ -2075,9 +2087,13 @@ J9::Options::setupJITServerOptions()\n          TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"JITServer Server Mode. Port: %d. Connection Timeout %ums\",\n                persistentInfo->getJITServerPort(), persistentInfo->getSocketTimeout());\n       else if (persistentInfo->getRemoteCompilationMode() == JITServer::CLIENT)\n+         {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aec2eaa764d8dba155932f180a6bd13a9a7c289"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY5OTkwMQ==", "bodyText": "Note that the JVM could be built with JITSERVER_SUPPORT, but still used in regular JVM mode. Your code does not allow for that andf it will print \"Running as  JVM\"", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r373699901", "createdAt": "2020-01-31T21:46:33Z", "author": {"login": "mpirvu"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1052,14 +1052,31 @@ JavaCoreDumpWriter::writeEnvironmentSection(void)\n \t/* Write the running mode data */\n \t_OutputStream.writeCharacters(\"1CIRUNNINGAS   Running as \");\n \n+\t/* If JITServer enabled, print running mode as JITServer and client UID*/\n+#ifdef JITSERVER_SUPPORT\n+\tif (_VirtualMachine->internalVMFunctions->isJITServerEnabled(_VirtualMachine))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aec2eaa764d8dba155932f180a6bd13a9a7c289"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1aec2eaa764d8dba155932f180a6bd13a9a7c289", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1aec2eaa764d8dba155932f180a6bd13a9a7c289", "committedDate": "2020-01-31T21:06:45Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}, "afterCommit": {"oid": "b1f25645fc6f087d2fd2dc919664a1eda82e03de", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b1f25645fc6f087d2fd2dc919664a1eda82e03de", "committedDate": "2020-02-03T14:50:00Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMzQ3OTMy", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#pullrequestreview-352347932", "createdAt": "2020-02-03T15:39:15Z", "commit": {"oid": "b1f25645fc6f087d2fd2dc919664a1eda82e03de"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTozOToxNVrOFk1w1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTo1NToyM1rOFk2X1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE3MzkxMQ==", "bodyText": "Does this print anything in your tests? I thought that _VirtualMachine->internalVMFunctions->isJITServerEnabled(_VirtualMachine) returns true only for the server?", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r374173911", "createdAt": "2020-02-03T15:39:15Z", "author": {"login": "mpirvu"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1052,14 +1052,30 @@ JavaCoreDumpWriter::writeEnvironmentSection(void)\n \t/* Write the running mode data */\n \t_OutputStream.writeCharacters(\"1CIRUNNINGAS   Running as \");\n \n+\t/* If JITServer enabled, print running mode as JITServer and client UID*/\n+#ifdef JITSERVER_SUPPORT\n+\tif (_VirtualMachine->internalVMFunctions->isJITServerEnabled(_VirtualMachine)) // server\n+\t\t_OutputStream.writeCharacters(\"a JITServer Server\");\n+\telse if (0 == jitConfig->clientUID) // regular jvm\n+\t\t_OutputStream.writeCharacters(\"a standalone\");\n+\telse // client\n+\t\t_OutputStream.writeCharacters(\"a JITServer Client\");\n \t/* NB : I can't find any code for making this decision in the existing implementation */\n-#ifdef J9VM_BUILD_J2SE\n+#elif J9VM_BUILD_J2SE\n \t_OutputStream.writeCharacters(\"a standalone\");\n #else\n \t_OutputStream.writeCharacters(\"an embedded\");\n #endif\n \t_OutputStream.writeCharacters(\" JVM\\n\");\n \n+#ifdef JITSERVER_SUPPORT\n+\tif (_VirtualMachine->internalVMFunctions->isJITServerEnabled(_VirtualMachine) && 0 != jitConfig->clientUID) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1f25645fc6f087d2fd2dc919664a1eda82e03de"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE4Mzg5Mw==", "bodyText": "The way the code is structured right now, you cannot have an embedded JVM if we ever compile JITServer code in (i.e. if JITSSERVER_SUPPORT is enabled.\nI am thinking that we don't want to run the client in the embedded mode, but only as a standalone JVM. Thus, maybe it's better to do:\n#ifdef J9VM_BUILD_J2SE\n#ifdef JITSERVER_SUPPORT\n...\n#else /* !JITSERVER_SUPPORT */\n\t_OutputStream.writeCharacters(\"a standalone\");\n#endif \n#else /* !J9VM_BUILD_J2SE */\n       _OutputStream.writeCharacters(\"an embedded\");\n#endif", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r374183893", "createdAt": "2020-02-03T15:55:23Z", "author": {"login": "mpirvu"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1052,14 +1052,30 @@ JavaCoreDumpWriter::writeEnvironmentSection(void)\n \t/* Write the running mode data */\n \t_OutputStream.writeCharacters(\"1CIRUNNINGAS   Running as \");\n \n+\t/* If JITServer enabled, print running mode as JITServer and client UID*/\n+#ifdef JITSERVER_SUPPORT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1f25645fc6f087d2fd2dc919664a1eda82e03de"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1f25645fc6f087d2fd2dc919664a1eda82e03de", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b1f25645fc6f087d2fd2dc919664a1eda82e03de", "committedDate": "2020-02-03T14:50:00Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}, "afterCommit": {"oid": "7c5e92da16e5c36209cdec559080273165bbcbf0", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7c5e92da16e5c36209cdec559080273165bbcbf0", "committedDate": "2020-02-03T19:44:13Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTI4MDEy", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#pullrequestreview-352528012", "createdAt": "2020-02-03T20:07:27Z", "commit": {"oid": "7c5e92da16e5c36209cdec559080273165bbcbf0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTQ0MTU4", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#pullrequestreview-352544158", "createdAt": "2020-02-03T20:35:13Z", "commit": {"oid": "7c5e92da16e5c36209cdec559080273165bbcbf0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDozNToxNFrOFk_FJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMDo0MDowOFrOFk_NbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyNjU2Nw==", "bodyText": "We really ought to be using PRIu64 from <inttypes.h> instead of llu in places like this.", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r374326567", "createdAt": "2020-02-03T20:35:14Z", "author": {"login": "keithc-ca"}, "path": "runtime/compiler/control/J9Options.cpp", "diffHunk": "@@ -2072,12 +2084,18 @@ J9::Options::setupJITServerOptions()\n       {\n       TR::PersistentInfo *persistentInfo = compInfo->getPersistentInfo();\n       if (persistentInfo->getRemoteCompilationMode() == JITServer::SERVER)\n+         {\n          TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"JITServer Server Mode. Port: %d. Connection Timeout %ums\",\n                persistentInfo->getJITServerPort(), persistentInfo->getSocketTimeout());\n+         }\n       else if (persistentInfo->getRemoteCompilationMode() == JITServer::CLIENT)\n+         {\n          TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"JITServer Client Mode. Server address: %s port: %d. Connection Timeout %ums\",\n                persistentInfo->getJITServerAddress().c_str(), persistentInfo->getJITServerPort(),\n                persistentInfo->getSocketTimeout());\n+         TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer,\"Identifier for current client JVM: %llu\\n\", ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5e92da16e5c36209cdec559080273165bbcbf0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyNzMzOQ==", "bodyText": "The type here should match how it's used (i.e. uint64_t).", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r374327339", "createdAt": "2020-02-03T20:37:09Z", "author": {"login": "keithc-ca"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -3763,6 +3763,7 @@ typedef struct J9JITConfig {\n #if defined(JITSERVER_SUPPORT)\n \tint32_t (*startJITServer)(struct J9JITConfig *jitConfig);\n \tint32_t (*waitJITServerTermination)(struct J9JITConfig *jitConfig);\n+\tint64_t clientUID;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5e92da16e5c36209cdec559080273165bbcbf0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyODExNw==", "bodyText": "Please indent with a tab consistent with the rest of this file.", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r374328117", "createdAt": "2020-02-03T20:38:50Z", "author": {"login": "keithc-ca"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1054,12 +1054,30 @@ JavaCoreDumpWriter::writeEnvironmentSection(void)\n \n \t/* NB : I can't find any code for making this decision in the existing implementation */\n #ifdef J9VM_BUILD_J2SE\n+\t/* If JITServer enabled, print running mode as JITServer and client UID*/\n+#ifdef JITSERVER_SUPPORT\n+\tif (_VirtualMachine->internalVMFunctions->isJITServerEnabled(_VirtualMachine))\n+\t\t_OutputStream.writeCharacters(\"a JITServer Server\");\n+\telse if (0 != jitConfig->clientUID)\n+\t\t_OutputStream.writeCharacters(\"a JITServer Client\");\n+\telse\n+\t\t_OutputStream.writeCharacters(\"a standalone\");\n+#else /* !JITSERVER_SUPPORT */\n \t_OutputStream.writeCharacters(\"a standalone\");\n-#else\n-\t_OutputStream.writeCharacters(\"an embedded\");\n+#endif \n+#else /* !J9VM_BUILD_J2SE */\n+    _OutputStream.writeCharacters(\"an embedded\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5e92da16e5c36209cdec559080273165bbcbf0"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyODQwNw==", "bodyText": "Please use #if defined(JITSERVER_SUPPORT) instead of #ifdef.", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r374328407", "createdAt": "2020-02-03T20:39:31Z", "author": {"login": "keithc-ca"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1054,12 +1054,30 @@ JavaCoreDumpWriter::writeEnvironmentSection(void)\n \n \t/* NB : I can't find any code for making this decision in the existing implementation */\n #ifdef J9VM_BUILD_J2SE\n+\t/* If JITServer enabled, print running mode as JITServer and client UID*/\n+#ifdef JITSERVER_SUPPORT\n+\tif (_VirtualMachine->internalVMFunctions->isJITServerEnabled(_VirtualMachine))\n+\t\t_OutputStream.writeCharacters(\"a JITServer Server\");\n+\telse if (0 != jitConfig->clientUID)\n+\t\t_OutputStream.writeCharacters(\"a JITServer Client\");\n+\telse\n+\t\t_OutputStream.writeCharacters(\"a standalone\");\n+#else /* !JITSERVER_SUPPORT */\n \t_OutputStream.writeCharacters(\"a standalone\");\n-#else\n-\t_OutputStream.writeCharacters(\"an embedded\");\n+#endif \n+#else /* !J9VM_BUILD_J2SE */\n+    _OutputStream.writeCharacters(\"an embedded\");\n #endif\n \t_OutputStream.writeCharacters(\" JVM\\n\");\n \n+#ifdef JITSERVER_SUPPORT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5e92da16e5c36209cdec559080273165bbcbf0"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDMyODY4NA==", "bodyText": "This should have a comment indicating the matching #if (i.e. /* JITSERVER_SUPPORT */).", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r374328684", "createdAt": "2020-02-03T20:40:08Z", "author": {"login": "keithc-ca"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1054,12 +1054,30 @@ JavaCoreDumpWriter::writeEnvironmentSection(void)\n \n \t/* NB : I can't find any code for making this decision in the existing implementation */\n #ifdef J9VM_BUILD_J2SE\n+\t/* If JITServer enabled, print running mode as JITServer and client UID*/\n+#ifdef JITSERVER_SUPPORT\n+\tif (_VirtualMachine->internalVMFunctions->isJITServerEnabled(_VirtualMachine))\n+\t\t_OutputStream.writeCharacters(\"a JITServer Server\");\n+\telse if (0 != jitConfig->clientUID)\n+\t\t_OutputStream.writeCharacters(\"a JITServer Client\");\n+\telse\n+\t\t_OutputStream.writeCharacters(\"a standalone\");\n+#else /* !JITSERVER_SUPPORT */\n \t_OutputStream.writeCharacters(\"a standalone\");\n-#else\n-\t_OutputStream.writeCharacters(\"an embedded\");\n+#endif \n+#else /* !J9VM_BUILD_J2SE */\n+    _OutputStream.writeCharacters(\"an embedded\");\n #endif\n \t_OutputStream.writeCharacters(\" JVM\\n\");\n \n+#ifdef JITSERVER_SUPPORT\n+\tif (0 != jitConfig->clientUID) {\n+\t\t_OutputStream.writeCharacters(\"1CICLIENTID    Client UID \"); \n+\t\t_OutputStream.writeInteger64(jitConfig->clientUID, \"%llu\");\n+\t\t_OutputStream.writeCharacters(\"\\n\");\n+\t}\n+#endif", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c5e92da16e5c36209cdec559080273165bbcbf0"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c5e92da16e5c36209cdec559080273165bbcbf0", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7c5e92da16e5c36209cdec559080273165bbcbf0", "committedDate": "2020-02-03T19:44:13Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}, "afterCommit": {"oid": "27873b761a5e5857ec4205cca78567088dc335ae", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/27873b761a5e5857ec4205cca78567088dc335ae", "committedDate": "2020-02-03T21:22:55Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNTk1MzIy", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#pullrequestreview-352595322", "createdAt": "2020-02-03T22:03:10Z", "commit": {"oid": "27873b761a5e5857ec4205cca78567088dc335ae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjowMzoxMFrOFlBiqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMjowMzoxMFrOFlBiqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDM2Njg4OQ==", "bodyText": "No, that's not how PRIu64 is intended to be used; the format string should be expressed as:\n  \"Identifier for current client JVM: %\" PRIu64 \"\\n\"\n\nPRIu64 might expand to \"llu\" yielding a (more portable expression) version of what you had before.\nTake note of the (required) spaces either side of PRIu64.\nThis pattern should be applied to all printf format strings you're adding or changing in this PR.", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r374366889", "createdAt": "2020-02-03T22:03:10Z", "author": {"login": "keithc-ca"}, "path": "runtime/compiler/control/J9Options.cpp", "diffHunk": "@@ -2072,12 +2084,18 @@ J9::Options::setupJITServerOptions()\n       {\n       TR::PersistentInfo *persistentInfo = compInfo->getPersistentInfo();\n       if (persistentInfo->getRemoteCompilationMode() == JITServer::SERVER)\n+         {\n          TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"JITServer Server Mode. Port: %d. Connection Timeout %ums\",\n                persistentInfo->getJITServerPort(), persistentInfo->getSocketTimeout());\n+         }\n       else if (persistentInfo->getRemoteCompilationMode() == JITServer::CLIENT)\n+         {\n          TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"JITServer Client Mode. Server address: %s port: %d. Connection Timeout %ums\",\n                persistentInfo->getJITServerAddress().c_str(), persistentInfo->getJITServerPort(),\n                persistentInfo->getSocketTimeout());\n+         TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer,\"Identifier for current client JVM: %PRIu64\\n\", ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27873b761a5e5857ec4205cca78567088dc335ae"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "27873b761a5e5857ec4205cca78567088dc335ae", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/27873b761a5e5857ec4205cca78567088dc335ae", "committedDate": "2020-02-03T21:22:55Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}, "afterCommit": {"oid": "3b7b8be688fe42afa0c8b444e475ab16cab6922f", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3b7b8be688fe42afa0c8b444e475ab16cab6922f", "committedDate": "2020-02-03T22:43:31Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyNjU4OTkw", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#pullrequestreview-352658990", "createdAt": "2020-02-04T00:36:45Z", "commit": {"oid": "3b7b8be688fe42afa0c8b444e475ab16cab6922f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMDozNjo0NVrOFlEwvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMDozNjo0NVrOFlEwvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQxOTY0Nw==", "bodyText": "Concatenating the empty string isn't helpful; the format string should be just \"\\tclientID=\" PRIu64 (likewise in javadump.cpp).", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r374419647", "createdAt": "2020-02-04T00:36:45Z", "author": {"login": "keithc-ca"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -8787,13 +8788,20 @@ TR::CompilationInfoPerThreadBase::compile(\n                {\n                TR_ASSERT(_compiler.getHotnessName(_compiler.getMethodHotness()), \"expected to have a hotness string\");\n                if (_compiler.getOutFile() != NULL && _compiler.getOption(TR_TraceAll))\n-                  traceMsg(&_compiler, \"<compile\\n\"\n-                          \"\\tmethod=\\\"%s\\\"\\n\"\n-                          \"\\thotness=\\\"%s\\\"\\n\"\n-                          \"\\tisProfilingCompile=%d>\\n\",\n-                          _compiler.signature(),\n-                          _compiler.getHotnessName(_compiler.getMethodHotness()),\n-                          _compiler.isProfilingCompilation());\n+                  {\n+                  traceMsg(&_compiler, \"<compile\\n\");\n+                  traceMsg(&_compiler, \"\\tmethod=\\\"%s\\\"\\n\", _compiler.signature());\n+                  traceMsg(&_compiler, \"\\thotness=\\\"%s\\\"\\n\", _compiler.getHotnessName(_compiler.getMethodHotness()));\n+                  traceMsg(&_compiler, \"\\tisProfilingCompile=%d\", _compiler.isProfilingCompilation());\n+#if defined(JITSERVER_SUPPORT)\n+                  if (_compiler.isOutOfProcessCompilation() && TR::compInfoPT->getClientData()) // using jitserver && client JVM\n+                     {\n+                     traceMsg(&_compiler, \"\\n\");\n+                     traceMsg(&_compiler, \"\\tclientID=\" PRIu64 \"\", TR::compInfoPT->getClientData()->getClientUID());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b7b8be688fe42afa0c8b444e475ab16cab6922f"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b7b8be688fe42afa0c8b444e475ab16cab6922f", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3b7b8be688fe42afa0c8b444e475ab16cab6922f", "committedDate": "2020-02-03T22:43:31Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}, "afterCommit": {"oid": "1bb5f94ac775707e124f1df09462de66c138f4d3", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1bb5f94ac775707e124f1df09462de66c138f4d3", "committedDate": "2020-02-04T15:10:41Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1bb5f94ac775707e124f1df09462de66c138f4d3", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1bb5f94ac775707e124f1df09462de66c138f4d3", "committedDate": "2020-02-04T15:10:41Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}, "afterCommit": {"oid": "17c2d1996b7af3eccc92552ab44238255bd19b61", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/17c2d1996b7af3eccc92552ab44238255bd19b61", "committedDate": "2020-02-04T15:57:17Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTEwMzg2", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#pullrequestreview-353110386", "createdAt": "2020-02-04T16:18:24Z", "commit": {"oid": "17c2d1996b7af3eccc92552ab44238255bd19b61"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNjoxODoyNFrOFlaVcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNjoxODoyNFrOFlaVcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDc3MzEwNg==", "bodyText": "This line has the same issue: extra \"\" which can be removed", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#discussion_r374773106", "createdAt": "2020-02-04T16:18:24Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -8787,13 +8788,20 @@ TR::CompilationInfoPerThreadBase::compile(\n                {\n                TR_ASSERT(_compiler.getHotnessName(_compiler.getMethodHotness()), \"expected to have a hotness string\");\n                if (_compiler.getOutFile() != NULL && _compiler.getOption(TR_TraceAll))\n-                  traceMsg(&_compiler, \"<compile\\n\"\n-                          \"\\tmethod=\\\"%s\\\"\\n\"\n-                          \"\\thotness=\\\"%s\\\"\\n\"\n-                          \"\\tisProfilingCompile=%d>\\n\",\n-                          _compiler.signature(),\n-                          _compiler.getHotnessName(_compiler.getMethodHotness()),\n-                          _compiler.isProfilingCompilation());\n+                  {\n+                  traceMsg(&_compiler, \"<compile\\n\");\n+                  traceMsg(&_compiler, \"\\tmethod=\\\"%s\\\"\\n\", _compiler.signature());\n+                  traceMsg(&_compiler, \"\\thotness=\\\"%s\\\"\\n\", _compiler.getHotnessName(_compiler.getMethodHotness()));\n+                  traceMsg(&_compiler, \"\\tisProfilingCompile=%d\", _compiler.isProfilingCompilation());\n+#if defined(JITSERVER_SUPPORT)\n+                  if (_compiler.isOutOfProcessCompilation() && TR::compInfoPT->getClientData()) // using jitserver && client JVM\n+                     {\n+                     traceMsg(&_compiler, \"\\n\");\n+                     traceMsg(&_compiler, \"\\tclientID=%\" PRIu64 \"\", TR::compInfoPT->getClientData()->getClientUID());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17c2d1996b7af3eccc92552ab44238255bd19b61"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b8e7f87ab6ffd45ee959dbd83a784c7183ecb37", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3b8e7f87ab6ffd45ee959dbd83a784c7183ecb37", "committedDate": "2020-02-04T16:39:07Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "17c2d1996b7af3eccc92552ab44238255bd19b61", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/17c2d1996b7af3eccc92552ab44238255bd19b61", "committedDate": "2020-02-04T15:57:17Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}, "afterCommit": {"oid": "3b8e7f87ab6ffd45ee959dbd83a784c7183ecb37", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3b8e7f87ab6ffd45ee959dbd83a784c7183ecb37", "committedDate": "2020-02-04T16:39:07Z", "message": "Add clientUID convension & remove jitConfig isClient data member\n\nJITServer client UID is generated as a non-zero random number\nJITServer JVM has a Client ID = 0\nThis convension eliminates isClient data member from jitConfig class\nA few changes for PR review\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0a6e6d01c5c619d121a83e02aa5d957f3c62923", "author": {"user": {"login": "chrisc66", "name": "Zichun (Chris) Chong"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f0a6e6d01c5c619d121a83e02aa5d957f3c62923", "committedDate": "2020-02-05T18:48:39Z", "message": "Eliminate the use of PRIu64\n\nUse \" OMR_PRIu64\" defined in \"omrformatconsts.h\" instead of \"PRIu64\" defined in \"inttypes.h\"\nThis eliminates build failues on multiple platforms\nAdd protect \"#include omrformatconsts.h\" with ifdef statement since it is used by JITServer code only\n\nSigned-off-by: Chris Chong <Zichun.Chong@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MDczMDk4", "url": "https://github.com/eclipse-openj9/openj9/pull/8365#pullrequestreview-354073098", "createdAt": "2020-02-05T22:03:32Z", "commit": {"oid": "f0a6e6d01c5c619d121a83e02aa5d957f3c62923"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 905, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}