{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4ODQ0Njk5", "number": 9813, "title": "DDR Back compatible for TLH enable/disable change", "bodyText": "TLH enabling/disabling has been changed by using realHeapTop\ninstead of realHeapAlloc for faking TLH full, so old core file\nonly contains realHeapAlloc and new core file only contains\nrealHeapTop. Update DDR to support analyzing old core file too.\n\nrelate: #9745\nfix: #9810\nSigned-off-by: Lin Hu linhu@ca.ibm.com", "createdAt": "2020-06-05T23:27:39Z", "url": "https://github.com/eclipse-openj9/openj9/pull/9813", "merged": true, "mergeCommit": {"oid": "0d3dd30c6007deaa016435136f8419b9c63741a3"}, "closed": true, "closedAt": "2020-06-10T21:35:33Z", "author": {"login": "LinHu2016"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpWFJxgBqjM0MjE3OTkzNTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqAmY9AFqTQyODQ0Mzk2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c26c802ca71cdfff6b9c0d56b7d5826b6373d34", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8c26c802ca71cdfff6b9c0d56b7d5826b6373d34", "committedDate": "2020-06-05T23:25:30Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "cc658117b3a0f879cd002654bb3744c82137b04f", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/cc658117b3a0f879cd002654bb3744c82137b04f", "committedDate": "2020-06-08T19:58:36Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc658117b3a0f879cd002654bb3744c82137b04f", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/cc658117b3a0f879cd002654bb3744c82137b04f", "committedDate": "2020-06-08T19:58:36Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "71f3b340e61f9831696435d446c898d7bc0bb50e", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/71f3b340e61f9831696435d446c898d7bc0bb50e", "committedDate": "2020-06-08T20:01:45Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71f3b340e61f9831696435d446c898d7bc0bb50e", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/71f3b340e61f9831696435d446c898d7bc0bb50e", "committedDate": "2020-06-08T20:01:45Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "dcd1241ac373cd30ea7818a74fb98f1db7dd4da8", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/dcd1241ac373cd30ea7818a74fb98f1db7dd4da8", "committedDate": "2020-06-08T20:20:30Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NjMzMDIy", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#pullrequestreview-426633022", "createdAt": "2020-06-08T21:25:25Z", "commit": {"oid": "dcd1241ac373cd30ea7818a74fb98f1db7dd4da8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMToyNToyNVrOGgw_zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMToyOTo1NFrOGgxHjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAxMDM4MA==", "bodyText": "This won't compile: there's no (generated) method named realHeapAlloc in current builds.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437010380", "createdAt": "2020-06-08T21:25:25Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -137,7 +131,20 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n+\n+\tprotected void addExcludedRangeForDisablingTLHOrSamplingCase(boolean nonZeroTLH, J9VMThreadPointer vmThread, U8Pointer base, U8Pointer top, U8Pointer heapAlloc, U8Pointer heapTop, ArrayList<U8Pointer[]> excludedRangeList)\n+\t{\n+\t\tU8Pointer realHeapAlloc = null;\n+\t\tif (nonZeroTLH) {\n+\t\t\trealHeapAlloc = adjustedToRange(vmThread.nonZeroAllocateThreadLocalHeap().realHeapAlloc(), base, top);\n+\t\t} else {\n+\t\t\trealHeapAlloc = adjustedToRange(vmThread.allocateThreadLocalHeap().realHeapAlloc(), base, top);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd1241ac373cd30ea7818a74fb98f1db7dd4da8"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAxMTY2MQ==", "bodyText": "This must declare that it throws CorruptDataException.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437011661", "createdAt": "2020-06-08T21:28:13Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -137,7 +131,20 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n+\n+\tprotected void addExcludedRangeForDisablingTLHOrSamplingCase(boolean nonZeroTLH, J9VMThreadPointer vmThread, U8Pointer base, U8Pointer top, U8Pointer heapAlloc, U8Pointer heapTop, ArrayList<U8Pointer[]> excludedRangeList)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd1241ac373cd30ea7818a74fb98f1db7dd4da8"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAxMjM2NA==", "bodyText": "This must declare that it throws CorruptDataException.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437012364", "createdAt": "2020-06-08T21:29:54Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V2.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*******************************************************************************\n+ * Copyright (c) 1991, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+package com.ibm.j9ddr.vm29.j9.gc;\n+\n+import com.ibm.j9ddr.CorruptDataException;\n+import com.ibm.j9ddr.vm29.pointer.U8Pointer;\n+import com.ibm.j9ddr.vm29.pointer.generated.J9VMThreadPointer;\n+\n+import java.util.ArrayList;\n+\n+class GCObjectHeapIteratorAddressOrderedList_V2 extends GCObjectHeapIteratorAddressOrderedList_V1 {\n+\n+\tprotected GCObjectHeapIteratorAddressOrderedList_V2(U8Pointer base, U8Pointer top, boolean includeLiveObjects, boolean includeDeadObjects) throws CorruptDataException\n+\t{\n+\t\tsuper(base, top, includeLiveObjects, includeDeadObjects);\n+\t}\n+\n+\t@Override\n+\tprotected void addExcludedRangeForDisablingTLHOrSamplingCase(boolean nonZeroTLH, J9VMThreadPointer vmThread, U8Pointer base, U8Pointer top, U8Pointer heapAlloc, U8Pointer heapTop, ArrayList<U8Pointer[]> excludedRangeList)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd1241ac373cd30ea7818a74fb98f1db7dd4da8"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dcd1241ac373cd30ea7818a74fb98f1db7dd4da8", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/dcd1241ac373cd30ea7818a74fb98f1db7dd4da8", "committedDate": "2020-06-08T20:20:30Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "ab6a3c1a3e2e7e1e97e76e81d9d8883002376d7a", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ab6a3c1a3e2e7e1e97e76e81d9d8883002376d7a", "committedDate": "2020-06-08T22:31:37Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab6a3c1a3e2e7e1e97e76e81d9d8883002376d7a", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ab6a3c1a3e2e7e1e97e76e81d9d8883002376d7a", "committedDate": "2020-06-08T22:31:37Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "447d3598915f312d770dffea739c119bf4ad55cc", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/447d3598915f312d770dffea739c119bf4ad55cc", "committedDate": "2020-06-09T13:37:16Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "447d3598915f312d770dffea739c119bf4ad55cc", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/447d3598915f312d770dffea739c119bf4ad55cc", "committedDate": "2020-06-09T13:37:16Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "69163e412aec7b386c75577c3062ebde7991bc69", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/69163e412aec7b386c75577c3062ebde7991bc69", "committedDate": "2020-06-09T14:35:03Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzA4MTE2", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#pullrequestreview-427308116", "createdAt": "2020-06-09T15:53:58Z", "commit": {"oid": "69163e412aec7b386c75577c3062ebde7991bc69"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTo1Mzo1OFrOGhRV2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjoxMzoxMVrOGhSIVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU0MDMxMw==", "bodyText": "I suggest the first two parameters be replaced by J9ModronThreadLocalHeapPointer heap and the callers can\nprovide  vmThread.nonZeroAllocateThreadLocalHeap() or vmThread.allocateThreadLocalHeap() as appropriate.\nEven better, extract (and only override) a method that only accesses realHeapAlloc or realHeapTop as appropriate: the call to adjustedToRange and all that follows is common to both cases.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437540313", "createdAt": "2020-06-09T15:53:58Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -137,8 +133,31 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n-\tprivate U8Pointer adjustedToRange(U8Pointer ptr, U8Pointer base, U8Pointer top)\n+\n+\tprotected void addExcludedRangeForDisablingTLHOrSamplingCase(boolean nonZeroTLH, J9VMThreadPointer vmThread, U8Pointer base, U8Pointer top, U8Pointer heapAlloc, U8Pointer heapTop, ArrayList<U8Pointer[]> excludedRangeList) throws CorruptDataException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69163e412aec7b386c75577c3062ebde7991bc69"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU0MTAyNQ==", "bodyText": "This should cache the method rather than query for it each time.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437541025", "createdAt": "2020-06-09T15:55:02Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -137,8 +133,31 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n-\tprivate U8Pointer adjustedToRange(U8Pointer ptr, U8Pointer base, U8Pointer top)\n+\n+\tprotected void addExcludedRangeForDisablingTLHOrSamplingCase(boolean nonZeroTLH, J9VMThreadPointer vmThread, U8Pointer base, U8Pointer top, U8Pointer heapAlloc, U8Pointer heapTop, ArrayList<U8Pointer[]> excludedRangeList) throws CorruptDataException\n+\t{\n+\t\tU8Pointer realHeapAlloc = null;\n+\t\tMethod method = null;\n+\t\ttry {\n+\t\t\tif (nonZeroTLH) {\n+\t\t\t\tmethod = vmThread.nonZeroAllocateThreadLocalHeap().getClass().getMethod(\"realHeapAlloc\");\n+\t\t\t\trealHeapAlloc = adjustedToRange((U8Pointer)method.invoke(vmThread.nonZeroAllocateThreadLocalHeap()), base, top);\n+\t\t\t} else {\n+\t\t\t\tmethod = vmThread.allocateThreadLocalHeap().getClass().getMethod(\"realHeapAlloc\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69163e412aec7b386c75577c3062ebde7991bc69"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU0MjA5OQ==", "bodyText": "None of these exceptions should be ignored.\nCorruptDataException should not be caught.\nInvocationTargetException should be handled by throwing the target exception (which might be CorruptDataException).", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437542099", "createdAt": "2020-06-09T15:56:36Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -137,8 +133,31 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n-\tprivate U8Pointer adjustedToRange(U8Pointer ptr, U8Pointer base, U8Pointer top)\n+\n+\tprotected void addExcludedRangeForDisablingTLHOrSamplingCase(boolean nonZeroTLH, J9VMThreadPointer vmThread, U8Pointer base, U8Pointer top, U8Pointer heapAlloc, U8Pointer heapTop, ArrayList<U8Pointer[]> excludedRangeList) throws CorruptDataException\n+\t{\n+\t\tU8Pointer realHeapAlloc = null;\n+\t\tMethod method = null;\n+\t\ttry {\n+\t\t\tif (nonZeroTLH) {\n+\t\t\t\tmethod = vmThread.nonZeroAllocateThreadLocalHeap().getClass().getMethod(\"realHeapAlloc\");\n+\t\t\t\trealHeapAlloc = adjustedToRange((U8Pointer)method.invoke(vmThread.nonZeroAllocateThreadLocalHeap()), base, top);\n+\t\t\t} else {\n+\t\t\t\tmethod = vmThread.allocateThreadLocalHeap().getClass().getMethod(\"realHeapAlloc\");\n+\t\t\t\trealHeapAlloc = adjustedToRange((U8Pointer)method.invoke(vmThread.allocateThreadLocalHeap()), base, top);\n+\t\t\t}\n+\t\t\tif(realHeapAlloc.notNull() && isSomethingToAdd(realHeapAlloc, heapTop)) {\n+\t\t\t\texcludedRangeList.add(new U8Pointer[] {realHeapAlloc, heapTop});\n+\t\t\t}\n+\t\t} catch (NoSuchMethodException e1) {\n+\t\t} catch (IllegalAccessException e2) {\n+\t\t} catch (IllegalArgumentException e3) {\n+\t\t} catch (InvocationTargetException e4) {\n+\t\t} catch (CorruptDataException e5) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69163e412aec7b386c75577c3062ebde7991bc69"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU0NDUyMQ==", "bodyText": "This change is not needed if the changes suggested above are implemented.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437544521", "createdAt": "2020-06-09T16:00:02Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -150,8 +169,8 @@ private U8Pointer adjustedToRange(U8Pointer ptr, U8Pointer base, U8Pointer top)\n \t\t}\n \t\treturn result;\n \t}\n-\n-\tprivate boolean isSomethingToAdd (U8Pointer start, U8Pointer end) throws CorruptDataException\n+\t\n+\tprotected boolean isSomethingToAdd (U8Pointer start, U8Pointer end) throws CorruptDataException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69163e412aec7b386c75577c3062ebde7991bc69"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU1MzIzNw==", "bodyText": "Based on the suggestions above, this should simplify to:\n\t@Override\n\tprotected U8Pointer getHeapTop(J9ModronThreadLocalHeapPointer heap) throws CorruptDataException\n\t{\n\t\treturn heap.realHeapTop();\n\t}", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437553237", "createdAt": "2020-06-09T16:13:11Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V2.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*******************************************************************************\n+ * Copyright (c) 1991, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+package com.ibm.j9ddr.vm29.j9.gc;\n+\n+import com.ibm.j9ddr.CorruptDataException;\n+import com.ibm.j9ddr.vm29.pointer.U8Pointer;\n+import com.ibm.j9ddr.vm29.pointer.generated.J9VMThreadPointer;\n+\n+import java.util.ArrayList;\n+\n+class GCObjectHeapIteratorAddressOrderedList_V2 extends GCObjectHeapIteratorAddressOrderedList_V1 {\n+\n+\tprotected GCObjectHeapIteratorAddressOrderedList_V2(U8Pointer base, U8Pointer top, boolean includeLiveObjects, boolean includeDeadObjects) throws CorruptDataException\n+\t{\n+\t\tsuper(base, top, includeLiveObjects, includeDeadObjects);\n+\t}\n+\n+\t@Override\n+\tprotected void addExcludedRangeForDisablingTLHOrSamplingCase(boolean nonZeroTLH, J9VMThreadPointer vmThread, U8Pointer base, U8Pointer top, U8Pointer heapAlloc, U8Pointer heapTop, ArrayList<U8Pointer[]> excludedRangeList) throws CorruptDataException\n+\t{\n+\t\tU8Pointer realHeapTop = null;\n+\t\tif (nonZeroTLH) {\n+\t\t\trealHeapTop = adjustedToRange(vmThread.nonZeroAllocateThreadLocalHeap().realHeapTop(), base, top);\n+\t\t} else {\n+\t\t\trealHeapTop = adjustedToRange(vmThread.allocateThreadLocalHeap().realHeapTop(), base, top);\n+\t\t}\n+\t\tif(realHeapTop.notNull() && isSomethingToAdd(heapAlloc, realHeapTop)) {\n+\t\t\texcludedRangeList.add(new U8Pointer[] {heapAlloc, realHeapTop});\n+\t\t}\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69163e412aec7b386c75577c3062ebde7991bc69"}, "originalPosition": 49}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "69163e412aec7b386c75577c3062ebde7991bc69", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/69163e412aec7b386c75577c3062ebde7991bc69", "committedDate": "2020-06-09T14:35:03Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "0844cf54c4de5883c98814ccd2a605c4d8307477", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0844cf54c4de5883c98814ccd2a605c4d8307477", "committedDate": "2020-06-09T19:04:41Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0844cf54c4de5883c98814ccd2a605c4d8307477", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0844cf54c4de5883c98814ccd2a605c4d8307477", "committedDate": "2020-06-09T19:04:41Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "6be263e7c9b11260666ea6623ba2ba6f3a840bb6", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6be263e7c9b11260666ea6623ba2ba6f3a840bb6", "committedDate": "2020-06-09T19:25:01Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6be263e7c9b11260666ea6623ba2ba6f3a840bb6", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6be263e7c9b11260666ea6623ba2ba6f3a840bb6", "committedDate": "2020-06-09T19:25:01Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "b737875f5a2e00c90c316b23305666aa21231142", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b737875f5a2e00c90c316b23305666aa21231142", "committedDate": "2020-06-09T19:28:58Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NDg2NDY2", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#pullrequestreview-427486466", "createdAt": "2020-06-09T19:45:44Z", "commit": {"oid": "b737875f5a2e00c90c316b23305666aa21231142"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo0NTo0NFrOGhZoSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1MTo0MVrOGhZ0nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3NjEwNQ==", "bodyText": "Why does this need both realHeapAlloc and realHeapTop? Only one will be present except in a very small number of interim builds that I think we can safely ignore.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437676105", "createdAt": "2020-06-09T19:45:44Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -75,9 +80,10 @@ protected GCObjectHeapIteratorAddressOrderedList_V1(U8Pointer base, U8Pointer to\n \t\t\t\t\t\texcludedRangeList.add(new U8Pointer[] {heapAlloc, heapTop});\n \t\t\t\t\t} else {\n \t\t\t\t\t\t/* Might be an instrumented VM */\n-\t\t\t\t\t\tU8Pointer realHeapTop = adjustedToRange(vmThread.allocateThreadLocalHeap().realHeapTop(), base, top);\n-\t\t\t\t\t\tif(realHeapTop.notNull() && isSomethingToAdd(heapAlloc, realHeapTop)) {\n-\t\t\t\t\t\t\texcludedRangeList.add(new U8Pointer[] {heapAlloc, realHeapTop});\n+\t\t\t\t\t\tU8Pointer realHeapAlloc = getRealHeapAlloc(vmThread.allocateThreadLocalHeap(), heapAlloc, base, top);\n+\t\t\t\t\t\tU8Pointer realHeapTop = getRealHeapTop(vmThread.allocateThreadLocalHeap(), heapTop, base, top);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b737875f5a2e00c90c316b23305666aa21231142"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3NjgyOQ==", "bodyText": "The default should be U8Pointer.NULL (callers are not expecting null to be returned).", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437676829", "createdAt": "2020-06-09T19:47:09Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -133,12 +140,37 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\t\t\t\treturn o1[0].compare(o2[0]);\n \t\t\t\t}\n \t\t\t});\n-\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][2];\n+\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][];\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n-\tprivate U8Pointer adjustedToRange(U8Pointer ptr, U8Pointer base, U8Pointer top)\n+\n+\tprotected U8Pointer getRealHeapTop(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapTop, U8Pointer base, U8Pointer top) throws CorruptDataException\n+\t{\n+\t\treturn heapTop;\n+\t}\n+\n+\tprotected U8Pointer getRealHeapAlloc(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapAlloc, U8Pointer base, U8Pointer top) throws CorruptDataException\n+\t{\n+\t\tU8Pointer realHeapAlloc = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b737875f5a2e00c90c316b23305666aa21231142"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3NzQ0Mg==", "bodyText": "It's not reasonable to classify these as CorruptDataException.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437677442", "createdAt": "2020-06-09T19:48:21Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -133,12 +140,37 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\t\t\t\treturn o1[0].compare(o2[0]);\n \t\t\t\t}\n \t\t\t});\n-\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][2];\n+\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][];\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n-\tprivate U8Pointer adjustedToRange(U8Pointer ptr, U8Pointer base, U8Pointer top)\n+\n+\tprotected U8Pointer getRealHeapTop(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapTop, U8Pointer base, U8Pointer top) throws CorruptDataException\n+\t{\n+\t\treturn heapTop;\n+\t}\n+\n+\tprotected U8Pointer getRealHeapAlloc(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapAlloc, U8Pointer base, U8Pointer top) throws CorruptDataException\n+\t{\n+\t\tU8Pointer realHeapAlloc = null;\n+\t\ttry {\n+\t\t\tif (null == method) {\n+\t\t\t\tmethod = threadLocalHeap.getClass().getMethod(\"realHeapAlloc\");\n+\t\t\t}\n+\t\t\trealHeapAlloc = adjustedToRange((U8Pointer)method.invoke(threadLocalHeap), base, top);\n+\t\t} catch (NoSuchMethodException e1) {\n+\t\t\tthrow new CorruptDataException(\"caused by NoSuchMethodException: \" + e1.getMessage());\n+\t\t} catch (IllegalAccessException e2) {\n+\t\t\tthrow new CorruptDataException(\"caused by IllegalAccessException: \" + e2.getMessage());\n+\t\t} catch (IllegalArgumentException e3) {\n+\t\t\tthrow new CorruptDataException(\"caused by IllegalArgumentException: \" + e3.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b737875f5a2e00c90c316b23305666aa21231142"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3ODI1Mw==", "bodyText": "If e4.getTargetException() is a CorruptDataException or a RuntimeException, that should be thrown instead.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437678253", "createdAt": "2020-06-09T19:49:49Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -133,12 +140,37 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\t\t\t\treturn o1[0].compare(o2[0]);\n \t\t\t\t}\n \t\t\t});\n-\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][2];\n+\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][];\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n-\tprivate U8Pointer adjustedToRange(U8Pointer ptr, U8Pointer base, U8Pointer top)\n+\n+\tprotected U8Pointer getRealHeapTop(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapTop, U8Pointer base, U8Pointer top) throws CorruptDataException\n+\t{\n+\t\treturn heapTop;\n+\t}\n+\n+\tprotected U8Pointer getRealHeapAlloc(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapAlloc, U8Pointer base, U8Pointer top) throws CorruptDataException\n+\t{\n+\t\tU8Pointer realHeapAlloc = null;\n+\t\ttry {\n+\t\t\tif (null == method) {\n+\t\t\t\tmethod = threadLocalHeap.getClass().getMethod(\"realHeapAlloc\");\n+\t\t\t}\n+\t\t\trealHeapAlloc = adjustedToRange((U8Pointer)method.invoke(threadLocalHeap), base, top);\n+\t\t} catch (NoSuchMethodException e1) {\n+\t\t\tthrow new CorruptDataException(\"caused by NoSuchMethodException: \" + e1.getMessage());\n+\t\t} catch (IllegalAccessException e2) {\n+\t\t\tthrow new CorruptDataException(\"caused by IllegalAccessException: \" + e2.getMessage());\n+\t\t} catch (IllegalArgumentException e3) {\n+\t\t\tthrow new CorruptDataException(\"caused by IllegalArgumentException: \" + e3.getMessage());\n+\t\t} catch (InvocationTargetException e4) {\n+\t\t\tthrow new CorruptDataException(\"caused by InvocationTargetException: \" + e4.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b737875f5a2e00c90c316b23305666aa21231142"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3ODU1Mg==", "bodyText": "Please don't add trailing whitespace (in fact, I support removing it elsewhere).", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437678552", "createdAt": "2020-06-09T19:50:21Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -150,7 +182,7 @@ private U8Pointer adjustedToRange(U8Pointer ptr, U8Pointer base, U8Pointer top)\n \t\t}\n \t\treturn result;\n \t}\n-\n+\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b737875f5a2e00c90c316b23305666aa21231142"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY3OTI2Mw==", "bodyText": "I suggest the call to adjustedToRange should occur in the caller.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r437679263", "createdAt": "2020-06-09T19:51:41Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V2.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*******************************************************************************\n+ * Copyright (c) 1991, 2020 IBM Corp. and others\n+ *\n+ * This program and the accompanying materials are made available under\n+ * the terms of the Eclipse Public License 2.0 which accompanies this\n+ * distribution and is available at https://www.eclipse.org/legal/epl-2.0/\n+ * or the Apache License, Version 2.0 which accompanies this distribution and\n+ * is available at https://www.apache.org/licenses/LICENSE-2.0.\n+ *\n+ * This Source Code may also be made available under the following\n+ * Secondary Licenses when the conditions for such availability set\n+ * forth in the Eclipse Public License, v. 2.0 are satisfied: GNU\n+ * General Public License, version 2 with the GNU Classpath\n+ * Exception [1] and GNU General Public License, version 2 with the\n+ * OpenJDK Assembly Exception [2].\n+ *\n+ * [1] https://www.gnu.org/software/classpath/license.html\n+ * [2] http://openjdk.java.net/legal/assembly-exception.html\n+ *\n+ * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n+ *******************************************************************************/\n+package com.ibm.j9ddr.vm29.j9.gc;\n+\n+import com.ibm.j9ddr.CorruptDataException;\n+import com.ibm.j9ddr.vm29.pointer.U8Pointer;\n+import com.ibm.j9ddr.vm29.pointer.generated.J9ModronThreadLocalHeapPointer;\n+\n+import java.util.ArrayList;\n+\n+class GCObjectHeapIteratorAddressOrderedList_V2 extends GCObjectHeapIteratorAddressOrderedList_V1 {\n+\n+\tprotected GCObjectHeapIteratorAddressOrderedList_V2(U8Pointer base, U8Pointer top, boolean includeLiveObjects, boolean includeDeadObjects) throws CorruptDataException\n+\t{\n+\t\tsuper(base, top, includeLiveObjects, includeDeadObjects);\n+\t}\n+\n+\t@Override\n+\tprotected U8Pointer getRealHeapTop(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapTop, U8Pointer base, U8Pointer top) throws CorruptDataException\n+\t{\n+\t\treturn adjustedToRange(threadLocalHeap.realHeapTop(), base, top);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b737875f5a2e00c90c316b23305666aa21231142"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b737875f5a2e00c90c316b23305666aa21231142", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b737875f5a2e00c90c316b23305666aa21231142", "committedDate": "2020-06-09T19:28:58Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "d107cad5c8857680593a28f00bd82da65a9dfcfc", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d107cad5c8857680593a28f00bd82da65a9dfcfc", "committedDate": "2020-06-09T22:12:52Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d107cad5c8857680593a28f00bd82da65a9dfcfc", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d107cad5c8857680593a28f00bd82da65a9dfcfc", "committedDate": "2020-06-09T22:12:52Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "4d72a3e53a91bdb035278af8c168f4da1ad13803", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4d72a3e53a91bdb035278af8c168f4da1ad13803", "committedDate": "2020-06-09T22:16:07Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d72a3e53a91bdb035278af8c168f4da1ad13803", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4d72a3e53a91bdb035278af8c168f4da1ad13803", "committedDate": "2020-06-09T22:16:07Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "f5e3c399409fc035ff4880894043303dbf69e8a9", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f5e3c399409fc035ff4880894043303dbf69e8a9", "committedDate": "2020-06-10T12:47:09Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MjY0NTMw", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#pullrequestreview-428264530", "createdAt": "2020-06-10T17:11:00Z", "commit": {"oid": "f5e3c399409fc035ff4880894043303dbf69e8a9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzoxMTowMFrOGh-m4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNzozNTowMFrOGh_emg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4MTk1Mg==", "bodyText": "I think this deserves a better name: perhaps realHeapAllocMethod?", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r438281952", "createdAt": "2020-06-10T17:11:00Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -36,11 +38,14 @@\n import com.ibm.j9ddr.vm29.pointer.generated.J9VMThreadPointer;\n import com.ibm.j9ddr.vm29.pointer.generated.MM_CopyScanCachePointer;\n import com.ibm.j9ddr.vm29.pointer.generated.MM_EnvironmentStandardPointer;\n+import com.ibm.j9ddr.vm29.pointer.generated.J9ModronThreadLocalHeapPointer;\n import com.ibm.j9ddr.vm29.types.UDATA;\n \n \n class GCObjectHeapIteratorAddressOrderedList_V1 extends GCObjectHeapIterator\n {\n+\tprivate static Method method = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5e3c399409fc035ff4880894043303dbf69e8a9"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4MzExOA==", "bodyText": "If cause is a RuntimeException or an Error, it should be thrown instead.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r438283118", "createdAt": "2020-06-10T17:13:04Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -133,11 +140,47 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\t\t\t\treturn o1[0].compare(o2[0]);\n \t\t\t\t}\n \t\t\t});\n-\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][2];\n+\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][];\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n+\n+\tprotected U8Pointer getRealHeapTop(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapTop) throws CorruptDataException\n+\t{\n+\t\treturn heapTop;\n+\t}\n+\n+\tprotected U8Pointer getRealHeapAlloc(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapAlloc) throws CorruptDataException\n+\t{\n+\t\tU8Pointer realHeapAlloc = U8Pointer.NULL;\n+\t\tException exception;\n+\t\ttry {\n+\t\t\tif (null == method) {\n+\t\t\t\tmethod = threadLocalHeap.getClass().getMethod(\"realHeapAlloc\");\n+\t\t\t}\n+\t\t\trealHeapAlloc = (U8Pointer) method.invoke(threadLocalHeap);\n+\t\t\treturn realHeapAlloc;\n+\t\t} catch (NoSuchMethodException e1) {\n+\t\t\texception = e1;\n+\t\t} catch (IllegalAccessException e2) {\n+\t\t\texception = e2;\n+\t\t} catch (IllegalArgumentException e3) {\n+\t\t\texception = e3;\n+\t\t} catch (InvocationTargetException e4) {\n+\t\t\tThrowable cause = e4.getCause();\n+\t\t\tif (cause instanceof CorruptDataException) {\n+\t\t\t\tthrow (CorruptDataException) cause;\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5e3c399409fc035ff4880894043303dbf69e8a9"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI4NDQ0MA==", "bodyText": "These can be merged:\n    } catch (IllegalAccessException | IllegalArgumentException | NoSuchMethodException e) {\n        exception = e;", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r438284440", "createdAt": "2020-06-10T17:15:23Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -133,11 +140,47 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\t\t\t\treturn o1[0].compare(o2[0]);\n \t\t\t\t}\n \t\t\t});\n-\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][2];\n+\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][];\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n+\n+\tprotected U8Pointer getRealHeapTop(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapTop) throws CorruptDataException\n+\t{\n+\t\treturn heapTop;\n+\t}\n+\n+\tprotected U8Pointer getRealHeapAlloc(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapAlloc) throws CorruptDataException\n+\t{\n+\t\tU8Pointer realHeapAlloc = U8Pointer.NULL;\n+\t\tException exception;\n+\t\ttry {\n+\t\t\tif (null == method) {\n+\t\t\t\tmethod = threadLocalHeap.getClass().getMethod(\"realHeapAlloc\");\n+\t\t\t}\n+\t\t\trealHeapAlloc = (U8Pointer) method.invoke(threadLocalHeap);\n+\t\t\treturn realHeapAlloc;\n+\t\t} catch (NoSuchMethodException e1) {\n+\t\t\texception = e1;\n+\t\t} catch (IllegalAccessException e2) {\n+\t\t\texception = e2;\n+\t\t} catch (IllegalArgumentException e3) {\n+\t\t\texception = e3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5e3c399409fc035ff4880894043303dbf69e8a9"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI5NjIxOA==", "bodyText": "This should just throw cd; instead of calling raiseCorruptDataEvent().", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r438296218", "createdAt": "2020-06-10T17:35:00Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -133,11 +140,47 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\t\t\t\treturn o1[0].compare(o2[0]);\n \t\t\t\t}\n \t\t\t});\n-\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][2];\n+\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][];\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n+\n+\tprotected U8Pointer getRealHeapTop(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapTop) throws CorruptDataException\n+\t{\n+\t\treturn heapTop;\n+\t}\n+\n+\tprotected U8Pointer getRealHeapAlloc(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapAlloc) throws CorruptDataException\n+\t{\n+\t\tU8Pointer realHeapAlloc = U8Pointer.NULL;\n+\t\tException exception;\n+\t\ttry {\n+\t\t\tif (null == method) {\n+\t\t\t\tmethod = threadLocalHeap.getClass().getMethod(\"realHeapAlloc\");\n+\t\t\t}\n+\t\t\trealHeapAlloc = (U8Pointer) method.invoke(threadLocalHeap);\n+\t\t\treturn realHeapAlloc;\n+\t\t} catch (NoSuchMethodException e1) {\n+\t\t\texception = e1;\n+\t\t} catch (IllegalAccessException e2) {\n+\t\t\texception = e2;\n+\t\t} catch (IllegalArgumentException e3) {\n+\t\t\texception = e3;\n+\t\t} catch (InvocationTargetException e4) {\n+\t\t\tThrowable cause = e4.getCause();\n+\t\t\tif (cause instanceof CorruptDataException) {\n+\t\t\t\tthrow (CorruptDataException) cause;\n+\t\t\t}\n+\t\t\texception = e4;\n+\t\t}\n+\t\t\n+\t\t/* unexpected exception using reflection */\n+\t\tCorruptDataException cd = new CorruptDataException(exception.toString(), exception);\n+\t\traiseCorruptDataEvent(\"Error accessing J9ModronThreadLocalHeapPointer\", cd, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5e3c399409fc035ff4880894043303dbf69e8a9"}, "originalPosition": 94}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5e3c399409fc035ff4880894043303dbf69e8a9", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f5e3c399409fc035ff4880894043303dbf69e8a9", "committedDate": "2020-06-10T12:47:09Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "55f4a018c7f3c9bc5583dd6fe67ba777b714610c", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/55f4a018c7f3c9bc5583dd6fe67ba777b714610c", "committedDate": "2020-06-10T18:57:37Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55f4a018c7f3c9bc5583dd6fe67ba777b714610c", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/55f4a018c7f3c9bc5583dd6fe67ba777b714610c", "committedDate": "2020-06-10T18:57:37Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "3eed55880d18662d4c302f6502e5b403ffa906de", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3eed55880d18662d4c302f6502e5b403ffa906de", "committedDate": "2020-06-10T18:58:54Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzU5OTAy", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#pullrequestreview-428359902", "createdAt": "2020-06-10T19:22:40Z", "commit": {"oid": "3eed55880d18662d4c302f6502e5b403ffa906de"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOToyMjo0MFrOGiDHLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOTo1MTowNlrOGiEAxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM1NTc1OA==", "bodyText": "The added comments are helpful. I suggest this block be extracted to a method rather than be repeated below (without the comments).", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r438355758", "createdAt": "2020-06-10T19:22:40Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -75,9 +80,12 @@ protected GCObjectHeapIteratorAddressOrderedList_V1(U8Pointer base, U8Pointer to\n \t\t\t\t\t\texcludedRangeList.add(new U8Pointer[] {heapAlloc, heapTop});\n \t\t\t\t\t} else {\n \t\t\t\t\t\t/* Might be an instrumented VM */\n-\t\t\t\t\t\tU8Pointer realHeapTop = adjustedToRange(vmThread.allocateThreadLocalHeap().realHeapTop(), base, top);\n-\t\t\t\t\t\tif(realHeapTop.notNull() && isSomethingToAdd(heapAlloc, realHeapTop)) {\n-\t\t\t\t\t\t\texcludedRangeList.add(new U8Pointer[] {heapAlloc, realHeapTop});\n+\t\t\t\t\t\t/* realHeapAlloc = allocateThreadLocalHeap.realHeapAlloc in V1, = heapAlloc in V2 */\n+\t\t\t\t\t\tU8Pointer realHeapAlloc = adjustedToRange(getRealHeapAlloc(vmThread.allocateThreadLocalHeap(), heapAlloc), base, top);\n+\t\t\t\t\t\t/* realHeapTop = heapTop in V1, = allocateThreadLocalHeap.realHeapTop in V2 */\n+\t\t\t\t\t\tU8Pointer realHeapTop = adjustedToRange(getRealHeapTop(vmThread.allocateThreadLocalHeap(), heapTop), base, top);\n+\t\t\t\t\t\tif(realHeapAlloc.notNull() && realHeapTop.notNull() && isSomethingToAdd(realHeapAlloc, realHeapTop)) {\n+\t\t\t\t\t\t\texcludedRangeList.add(new U8Pointer[] {realHeapAlloc, realHeapTop});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eed55880d18662d4c302f6502e5b403ffa906de"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM3MDIzMw==", "bodyText": "This does not compile; it must be expressed as:\nif (cause instanceof CorruptDataException) {\n\tthrow (CorruptDataException) cause;\n} else if (cause instanceof RuntimeException) {\n\tthrow (RuntimeException) cause;\n} else if (cause instanceof Error) {\n\tthrow (Error) cause;\n}", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r438370233", "createdAt": "2020-06-10T19:50:37Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -133,11 +142,43 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\t\t\t\treturn o1[0].compare(o2[0]);\n \t\t\t\t}\n \t\t\t});\n-\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][2];\n+\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][];\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n+\n+\tprotected U8Pointer getRealHeapTop(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapTop) throws CorruptDataException\n+\t{\n+\t\treturn heapTop;\n+\t}\n+\n+\tprotected U8Pointer getRealHeapAlloc(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapAlloc) throws CorruptDataException\n+\t{\n+\t\tU8Pointer realHeapAlloc = U8Pointer.NULL;\n+\t\tException exception;\n+\t\ttry {\n+\t\t\tif (null == realHeapAllocMethod) {\n+\t\t\t\trealHeapAllocMethod = threadLocalHeap.getClass().getMethod(\"realHeapAlloc\");\n+\t\t\t}\n+\t\t\trealHeapAlloc = (U8Pointer) realHeapAllocMethod.invoke(threadLocalHeap);\n+\t\t\treturn realHeapAlloc;\n+\t\t} catch (NoSuchMethodException | IllegalAccessException | IllegalArgumentException e) {\n+\t\t\texception = e;\n+\t\t} catch (InvocationTargetException e1) {\n+\t\t\tThrowable cause = e1.getCause();\n+\t\t\tif ((cause instanceof CorruptDataException) || (cause instanceof RuntimeException) || (cause instanceof Error)) {\n+\t\t\t\tthrow cause;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eed55880d18662d4c302f6502e5b403ffa906de"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM3MDUwMw==", "bodyText": "This does not compile: the code is unreachable.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r438370503", "createdAt": "2020-06-10T19:51:06Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -133,11 +142,43 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\t\t\t\treturn o1[0].compare(o2[0]);\n \t\t\t\t}\n \t\t\t});\n-\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][2];\n+\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][];\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n+\n+\tprotected U8Pointer getRealHeapTop(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapTop) throws CorruptDataException\n+\t{\n+\t\treturn heapTop;\n+\t}\n+\n+\tprotected U8Pointer getRealHeapAlloc(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapAlloc) throws CorruptDataException\n+\t{\n+\t\tU8Pointer realHeapAlloc = U8Pointer.NULL;\n+\t\tException exception;\n+\t\ttry {\n+\t\t\tif (null == realHeapAllocMethod) {\n+\t\t\t\trealHeapAllocMethod = threadLocalHeap.getClass().getMethod(\"realHeapAlloc\");\n+\t\t\t}\n+\t\t\trealHeapAlloc = (U8Pointer) realHeapAllocMethod.invoke(threadLocalHeap);\n+\t\t\treturn realHeapAlloc;\n+\t\t} catch (NoSuchMethodException | IllegalAccessException | IllegalArgumentException e) {\n+\t\t\texception = e;\n+\t\t} catch (InvocationTargetException e1) {\n+\t\t\tThrowable cause = e1.getCause();\n+\t\t\tif ((cause instanceof CorruptDataException) || (cause instanceof RuntimeException) || (cause instanceof Error)) {\n+\t\t\t\tthrow cause;\n+\t\t\t}\n+\t\t\texception = e1;\n+\t\t}\n+\t\t\n+\t\t/* unexpected exception using reflection */\n+\t\tCorruptDataException cd = new CorruptDataException(exception.toString(), exception);\n+\t\tthrow cd;\n+\n+\t\treturn realHeapAlloc;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eed55880d18662d4c302f6502e5b403ffa906de"}, "originalPosition": 94}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3eed55880d18662d4c302f6502e5b403ffa906de", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3eed55880d18662d4c302f6502e5b403ffa906de", "committedDate": "2020-06-10T18:58:54Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "5143b84f65bea4bf89ad0dd80e4a8cdeb8de13f6", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/5143b84f65bea4bf89ad0dd80e4a8cdeb8de13f6", "committedDate": "2020-06-10T20:10:25Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NDAwNTA4", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#pullrequestreview-428400508", "createdAt": "2020-06-10T20:24:22Z", "commit": {"oid": "5143b84f65bea4bf89ad0dd80e4a8cdeb8de13f6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNDoyMlrOGiFCFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQyMDoyNjowNFrOGiFFag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4NzIyMg==", "bodyText": "Please move this up so imports remain sorted.", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r438387222", "createdAt": "2020-06-10T20:24:22Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -36,11 +38,14 @@\n import com.ibm.j9ddr.vm29.pointer.generated.J9VMThreadPointer;\n import com.ibm.j9ddr.vm29.pointer.generated.MM_CopyScanCachePointer;\n import com.ibm.j9ddr.vm29.pointer.generated.MM_EnvironmentStandardPointer;\n+import com.ibm.j9ddr.vm29.pointer.generated.J9ModronThreadLocalHeapPointer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5143b84f65bea4bf89ad0dd80e4a8cdeb8de13f6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM4ODA3NA==", "bodyText": "This local variable is no longer useful; please just inline into the return statement:\n  return (U8Pointer) realHeapAllocMethod.invoke(threadLocalHeap);", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#discussion_r438388074", "createdAt": "2020-06-10T20:26:04Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/gc/GCObjectHeapIteratorAddressOrderedList_V1.java", "diffHunk": "@@ -133,11 +142,45 @@ public int compare(U8Pointer[] o1, U8Pointer[] o2)\n \t\t\t\t\treturn o1[0].compare(o2[0]);\n \t\t\t\t}\n \t\t\t});\n-\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][2];\n+\t\texcludedRanges = new U8Pointer[excludedRangeList.size()][];\n \t\texcludedRangeList.toArray(excludedRanges);\n \t\tcurrentExcludedRange = 0;\n \t}\n-\t\n+\n+\tprotected U8Pointer getRealHeapTop(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapTop) throws CorruptDataException\n+\t{\n+\t\treturn heapTop;\n+\t}\n+\n+\tprotected U8Pointer getRealHeapAlloc(J9ModronThreadLocalHeapPointer threadLocalHeap, U8Pointer heapAlloc) throws CorruptDataException\n+\t{\n+\t\tU8Pointer realHeapAlloc = U8Pointer.NULL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5143b84f65bea4bf89ad0dd80e4a8cdeb8de13f6"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "268d21f3cee39d86e92ab1bdae83f0e75aae150a", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/268d21f3cee39d86e92ab1bdae83f0e75aae150a", "committedDate": "2020-06-10T20:42:59Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5143b84f65bea4bf89ad0dd80e4a8cdeb8de13f6", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/5143b84f65bea4bf89ad0dd80e4a8cdeb8de13f6", "committedDate": "2020-06-10T20:10:25Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "268d21f3cee39d86e92ab1bdae83f0e75aae150a", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/268d21f3cee39d86e92ab1bdae83f0e75aae150a", "committedDate": "2020-06-10T20:42:59Z", "message": "DDR Back compatible for TLH enable/disable change\n\n\tTLH enabling/disabling has been changed by using realHeapTop\n\tinstead of realHeapAlloc for faking TLH full, so old core file\n\tonly contains realHeapAlloc and new core file only contains\n\trealHeapTop. Update DDR to support analyzing old core file too.\n\n\tGCObjectHeapIteratorAddressOrderedList_V1 for old core support\n\tGCObjectHeapIteratorAddressOrderedList_V2 for the latest core support\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NDQzOTY1", "url": "https://github.com/eclipse-openj9/openj9/pull/9813#pullrequestreview-428443965", "createdAt": "2020-06-10T21:32:51Z", "commit": {"oid": "268d21f3cee39d86e92ab1bdae83f0e75aae150a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 620, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}