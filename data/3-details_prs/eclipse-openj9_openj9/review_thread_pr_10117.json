{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MzU5NDk1", "number": 10117, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzowOToyNlrOEMlICw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzowOToyNlrOEMlICw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjI2NjM1OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/MethodForNameCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzowOToyNlrOGuxhCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODo1NDo1MlrOGu1Ltw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5ODk1NA==", "bodyText": "Just curious why you split the declaration and the initialization.", "url": "https://github.com/eclipse-openj9/openj9/pull/10117#discussion_r451698954", "createdAt": "2020-07-08T17:09:26Z", "author": {"login": "pshipton"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/MethodForNameCommand.java", "diffHunk": "@@ -68,85 +68,74 @@ public void run(String command, String[] args, Context context, PrintStream out)\n \t}\n \n \tint dbgGetMethodsForName(PrintStream out, String pattern) throws CorruptDataException {\n-\t\tint matchCount = 0;\n-\t\t// J9ClassWalkState walkState;\n-\t\tString classNeedle, methodNeedle, sigNeedle;\n-\t\tlong classMatchFlags, methodMatchFlags, sigMatchFlags;\n-\t\tString classStart, nameStart, sigStart;\n-\n-\t\tif (pattern.indexOf('.') != -1) {\n-\t\t\tnameStart = pattern.substring(pattern.indexOf('.') + 1); // skip the .\n-\t\t\tclassStart = pattern.substring(0, pattern.indexOf('.'));\n-\t\t} else {\n-\t\t\tclassStart = \"*\";\n-\t\t\tnameStart = pattern;\n-\t\t}\n+\t\tint dot = pattern.indexOf('.');\n+\t\tString classStart = (dot == -1) ? \"*\" : pattern.substring(0, dot);\n+\t\tint paren = pattern.indexOf('(', dot + 1);\n+\t\tString nameStart = (paren == -1) ? pattern.substring(dot + 1) : pattern.substring(dot + 1, paren);\n+\t\tString sigStart = (paren == -1) ? \"*\" : pattern.substring(paren);\n+\t\tStringBuffer needleBuffer;\n \n-\t\tif (pattern.indexOf('(') != -1) {\n-\t\t\tsigStart = pattern.substring(pattern.indexOf('('));\n-\t\t} else {\n-\t\t\tsigStart = \"*\";\n-\t\t}\n-\n-\t\tStringBuffer needleBuffer = new StringBuffer();\n-\t\tclassMatchFlags = WildCard.parseWildcard(classStart, needleBuffer);\n-\t\tclassNeedle = needleBuffer.toString();\n+\t\tneedleBuffer = new StringBuffer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "575a9573d5fbf77075bd299c890328d3267b321a"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc1OTAzMQ==", "bodyText": "needleBuffer is reused several times: in my opinion, it's misleading to put the first assignment into the declaration.", "url": "https://github.com/eclipse-openj9/openj9/pull/10117#discussion_r451759031", "createdAt": "2020-07-08T18:54:52Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/MethodForNameCommand.java", "diffHunk": "@@ -68,85 +68,74 @@ public void run(String command, String[] args, Context context, PrintStream out)\n \t}\n \n \tint dbgGetMethodsForName(PrintStream out, String pattern) throws CorruptDataException {\n-\t\tint matchCount = 0;\n-\t\t// J9ClassWalkState walkState;\n-\t\tString classNeedle, methodNeedle, sigNeedle;\n-\t\tlong classMatchFlags, methodMatchFlags, sigMatchFlags;\n-\t\tString classStart, nameStart, sigStart;\n-\n-\t\tif (pattern.indexOf('.') != -1) {\n-\t\t\tnameStart = pattern.substring(pattern.indexOf('.') + 1); // skip the .\n-\t\t\tclassStart = pattern.substring(0, pattern.indexOf('.'));\n-\t\t} else {\n-\t\t\tclassStart = \"*\";\n-\t\t\tnameStart = pattern;\n-\t\t}\n+\t\tint dot = pattern.indexOf('.');\n+\t\tString classStart = (dot == -1) ? \"*\" : pattern.substring(0, dot);\n+\t\tint paren = pattern.indexOf('(', dot + 1);\n+\t\tString nameStart = (paren == -1) ? pattern.substring(dot + 1) : pattern.substring(dot + 1, paren);\n+\t\tString sigStart = (paren == -1) ? \"*\" : pattern.substring(paren);\n+\t\tStringBuffer needleBuffer;\n \n-\t\tif (pattern.indexOf('(') != -1) {\n-\t\t\tsigStart = pattern.substring(pattern.indexOf('('));\n-\t\t} else {\n-\t\t\tsigStart = \"*\";\n-\t\t}\n-\n-\t\tStringBuffer needleBuffer = new StringBuffer();\n-\t\tclassMatchFlags = WildCard.parseWildcard(classStart, needleBuffer);\n-\t\tclassNeedle = needleBuffer.toString();\n+\t\tneedleBuffer = new StringBuffer();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5ODk1NA=="}, "originalCommit": {"oid": "575a9573d5fbf77075bd299c890328d3267b321a"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4915, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}