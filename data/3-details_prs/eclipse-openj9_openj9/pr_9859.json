{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMzUyNTgz", "number": 9859, "title": "Read message in buffer capacity first", "bodyText": "The original message read involves at least two reads:\nThe first one is to read the message size. The second one is to read the rest of the message based on the message size that\u2019s read in the first read. This change optimizes the incoming message read to attempt to read the full buffer capacity in the first read. It then decides whether or not subsequent reads are required based on bytesRead from the first read.\nAlso increase INITIAL_BUFFER_SIZE to 18000 from 10000 based on the average message size observed in #9708.\nImplements #9711\nSigned-off-by: Annabelle Huo Annabelle.Huo@ibm.com", "createdAt": "2020-06-11T21:54:32Z", "url": "https://github.com/eclipse-openj9/openj9/pull/9859", "merged": true, "mergeCommit": {"oid": "4f11bb81606492b55da979651d3cdb08f99e0229"}, "closed": true, "closedAt": "2020-06-25T19:08:18Z", "author": {"login": "a7ehuo"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqmGuDABqjM0MzkyOTA0MzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcud77PAFqTQzNjg4MTQ0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6cd2bbc7f59d3b0bac36c6b562574ab2b2fe39e", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c6cd2bbc7f59d3b0bac36c6b562574ab2b2fe39e", "committedDate": "2020-06-11T21:48:55Z", "message": "Experiment message read  in buffer capacity size\n\n[skip ci]\n\nRelated to #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "96f8762e83b609ce7165c7e12c54f0e6cd1af37c", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/96f8762e83b609ce7165c7e12c54f0e6cd1af37c", "committedDate": "2020-06-12T17:13:59Z", "message": "Experiment message read in buffer capacity size\n\n[skip ci]\n\nRelated to #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96f8762e83b609ce7165c7e12c54f0e6cd1af37c", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/96f8762e83b609ce7165c7e12c54f0e6cd1af37c", "committedDate": "2020-06-12T17:13:59Z", "message": "Experiment message read in buffer capacity size\n\n[skip ci]\n\nRelated to #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "197f2e181f6151713dbf77da64472054aac6e410", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/197f2e181f6151713dbf77da64472054aac6e410", "committedDate": "2020-06-12T21:42:59Z", "message": "Experiment message read in buffer capacity size\n\n[skip ci]\n\nRelated to #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "197f2e181f6151713dbf77da64472054aac6e410", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/197f2e181f6151713dbf77da64472054aac6e410", "committedDate": "2020-06-12T21:42:59Z", "message": "Experiment message read in buffer capacity size\n\n[skip ci]\n\nRelated to #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "2f894375178f39500aa2e675cd86deae2500d4f1", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2f894375178f39500aa2e675cd86deae2500d4f1", "committedDate": "2020-06-16T19:16:34Z", "message": "Experiment message read in buffer capacity size\n\n[skip ci]\n\nRelated to #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f894375178f39500aa2e675cd86deae2500d4f1", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2f894375178f39500aa2e675cd86deae2500d4f1", "committedDate": "2020-06-16T19:16:34Z", "message": "Experiment message read in buffer capacity size\n\n[skip ci]\n\nRelated to #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "76f53455ac09d803e9adae458210663cf1aad2a8", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/76f53455ac09d803e9adae458210663cf1aad2a8", "committedDate": "2020-06-16T20:24:56Z", "message": "Experiment message read in buffer capacity size\n\n[skip ci]\n\nRelated to #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "76f53455ac09d803e9adae458210663cf1aad2a8", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/76f53455ac09d803e9adae458210663cf1aad2a8", "committedDate": "2020-06-16T20:24:56Z", "message": "Experiment message read in buffer capacity size\n\n[skip ci]\n\nRelated to #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "6deb5f04fabde5998f4bcc2e5d600a97089c1493", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6deb5f04fabde5998f4bcc2e5d600a97089c1493", "committedDate": "2020-06-16T23:39:22Z", "message": "Experiment message read in buffer capacity size\n\n[skip ci]\n\nRelated to #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6deb5f04fabde5998f4bcc2e5d600a97089c1493", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6deb5f04fabde5998f4bcc2e5d600a97089c1493", "committedDate": "2020-06-16T23:39:22Z", "message": "Experiment message read in buffer capacity size\n\n[skip ci]\n\nRelated to #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "f5d337dc8131d6f190525130b91da0ed9296c9e8", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f5d337dc8131d6f190525130b91da0ed9296c9e8", "committedDate": "2020-06-18T00:22:06Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on bytesRead from the first read.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzI0NDg1", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#pullrequestreview-433324485", "createdAt": "2020-06-18T14:12:00Z", "commit": {"oid": "f5d337dc8131d6f190525130b91da0ed9296c9e8"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNDoxMjowMFrOGlxOpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNToyMTo0MlrOGl0X4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI1NzA2Mw==", "bodyText": "For the case where we read more than the message size I would like a different type of message to track these types of failures better. They should not happen if we send messages strictly in pairs.", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r442257063", "createdAt": "2020-06-18T14:12:00Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/CommunicationStream.cpp", "diffHunk": "@@ -83,6 +83,60 @@ CommunicationStream::readMessage(Message &msg)\n #endif\n    }\n \n+void\n+CommunicationStream::readMessageInFullCapacity(Message &msg)\n+   {\n+   msg.clearForRead();\n+\n+   // The message buffer storage and its capacity could be\n+   // changed when the serialized size is set.\n+   char *buffer = msg.getBufferStartForRead();\n+   uint32_t bufferCapacity = msg.getBufferCapacity();\n+\n+   int32_t bytesRead = readOnceBlocking(buffer, bufferCapacity);\n+\n+   // bytesRead should be greater than 0 here, readOnceBlocking() throws\n+   // an exception already if (bytesRead <= 0).\n+   uint32_t serializedSize = (bytesRead >= sizeof(uint32_t)) ? ((uint32_t *)buffer)[0] : 0;\n+   if (bytesRead < sizeof(uint32_t) ||\n+       bytesRead > serializedSize) // Read more than the message size\n+      {\n+      throw JITServer::StreamFailure(\"JITServer I/O error: read error\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d337dc8131d6f190525130b91da0ed9296c9e8"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI1ODQ5OA==", "bodyText": "In theory we could read less than the message size without this being a failure, but that is very unlikely. Thus, I am ok with an exception being thrown, but would like a different message.", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r442258498", "createdAt": "2020-06-18T14:13:58Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/CommunicationStream.cpp", "diffHunk": "@@ -83,6 +83,60 @@ CommunicationStream::readMessage(Message &msg)\n #endif\n    }\n \n+void\n+CommunicationStream::readMessageInFullCapacity(Message &msg)\n+   {\n+   msg.clearForRead();\n+\n+   // The message buffer storage and its capacity could be\n+   // changed when the serialized size is set.\n+   char *buffer = msg.getBufferStartForRead();\n+   uint32_t bufferCapacity = msg.getBufferCapacity();\n+\n+   int32_t bytesRead = readOnceBlocking(buffer, bufferCapacity);\n+\n+   // bytesRead should be greater than 0 here, readOnceBlocking() throws\n+   // an exception already if (bytesRead <= 0).\n+   uint32_t serializedSize = (bytesRead >= sizeof(uint32_t)) ? ((uint32_t *)buffer)[0] : 0;\n+   if (bytesRead < sizeof(uint32_t) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d337dc8131d6f190525130b91da0ed9296c9e8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI2NDU4OA==", "bodyText": "The goal was to measure the number of bytes transmitted through the network, so serializedSize is what we want here to collect stats on", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r442264588", "createdAt": "2020-06-18T14:22:17Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/CommunicationStream.cpp", "diffHunk": "@@ -83,6 +83,60 @@ CommunicationStream::readMessage(Message &msg)\n #endif\n    }\n \n+void\n+CommunicationStream::readMessageInFullCapacity(Message &msg)\n+   {\n+   msg.clearForRead();\n+\n+   // The message buffer storage and its capacity could be\n+   // changed when the serialized size is set.\n+   char *buffer = msg.getBufferStartForRead();\n+   uint32_t bufferCapacity = msg.getBufferCapacity();\n+\n+   int32_t bytesRead = readOnceBlocking(buffer, bufferCapacity);\n+\n+   // bytesRead should be greater than 0 here, readOnceBlocking() throws\n+   // an exception already if (bytesRead <= 0).\n+   uint32_t serializedSize = (bytesRead >= sizeof(uint32_t)) ? ((uint32_t *)buffer)[0] : 0;\n+   if (bytesRead < sizeof(uint32_t) ||\n+       bytesRead > serializedSize) // Read more than the message size\n+      {\n+      throw JITServer::StreamFailure(\"JITServer I/O error: read error\");\n+      }\n+\n+   // serializedSize >= bytesRead\n+   uint32_t bytesLeftToRead = serializedSize - bytesRead;\n+\n+   if (bytesLeftToRead == 0)\n+      {\n+      msg.setSerializedSize(serializedSize);\n+      }\n+   else\n+      {\n+      if (serializedSize > bufferCapacity)\n+         {\n+         // bytesReads could be less than the buffer capacity.\n+         msg.setSerializedSizAndCopyContent(serializedSize, bytesRead);\n+\n+         // The buffer storage will change after the buffer is expanded.\n+         buffer = msg.getBufferStartForRead();\n+         }\n+      else\n+         {\n+         msg.setSerializedSize(serializedSize);\n+         }\n+      readBlocking(buffer + bytesRead, bytesLeftToRead);\n+      }\n+\n+   // rebuild the message\n+   msg.deserialize();\n+\n+#ifdef MESSAGE_SIZE_STATS\n+   uint32_t messageSize = serializedSize - sizeof(uint32_t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d337dc8131d6f190525130b91da0ed9296c9e8"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMwMzc2NQ==", "bodyText": "setSerializedSize has the side effect of reallocating the buffer if needed, so the code could be simplified to\nuint32_t bytesLeftToRead = serializedSize - bytesRead;\nmsg.setSerializedSize(serializedSize);\nif (bytesLeftToRead > 0)\n   readBlocking(msg.getBufferStartForRead() + bytesRead, bytesLeftToRead);\nmsg.deserialize();\n\nIn this case the message size is already written into the serialized version of the message, so maybe we need to split\nsetSerializedSize() into its components\n\nsetSerializedSize() just sets the size\nexpandBufferIfNeeded(size)  to expand the buffer.\nIf we do this then in the code here we only need expandBufferIfNeeded() which does the required copy anyway and in readMessage() we need to add expandBufferIfNeeded() just before setSerializedSize()", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r442303765", "createdAt": "2020-06-18T15:14:53Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/CommunicationStream.cpp", "diffHunk": "@@ -83,6 +83,60 @@ CommunicationStream::readMessage(Message &msg)\n #endif\n    }\n \n+void\n+CommunicationStream::readMessageInFullCapacity(Message &msg)\n+   {\n+   msg.clearForRead();\n+\n+   // The message buffer storage and its capacity could be\n+   // changed when the serialized size is set.\n+   char *buffer = msg.getBufferStartForRead();\n+   uint32_t bufferCapacity = msg.getBufferCapacity();\n+\n+   int32_t bytesRead = readOnceBlocking(buffer, bufferCapacity);\n+\n+   // bytesRead should be greater than 0 here, readOnceBlocking() throws\n+   // an exception already if (bytesRead <= 0).\n+   uint32_t serializedSize = (bytesRead >= sizeof(uint32_t)) ? ((uint32_t *)buffer)[0] : 0;\n+   if (bytesRead < sizeof(uint32_t) ||\n+       bytesRead > serializedSize) // Read more than the message size\n+      {\n+      throw JITServer::StreamFailure(\"JITServer I/O error: read error\");\n+      }\n+\n+   // serializedSize >= bytesRead\n+   uint32_t bytesLeftToRead = serializedSize - bytesRead;\n+\n+   if (bytesLeftToRead == 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d337dc8131d6f190525130b91da0ed9296c9e8"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMwODU3OA==", "bodyText": "If the old readMessage is no longer used we can use the name for this function.", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r442308578", "createdAt": "2020-06-18T15:21:42Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/CommunicationStream.cpp", "diffHunk": "@@ -83,6 +83,60 @@ CommunicationStream::readMessage(Message &msg)\n #endif\n    }\n \n+void\n+CommunicationStream::readMessageInFullCapacity(Message &msg)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d337dc8131d6f190525130b91da0ed9296c9e8"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5d337dc8131d6f190525130b91da0ed9296c9e8", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f5d337dc8131d6f190525130b91da0ed9296c9e8", "committedDate": "2020-06-18T00:22:06Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on bytesRead from the first read.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "d241ffd62fab977c2639c48d709a5f2987bc7b93", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d241ffd62fab977c2639c48d709a5f2987bc7b93", "committedDate": "2020-06-22T20:07:56Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on bytesRead from the first read.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d241ffd62fab977c2639c48d709a5f2987bc7b93", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d241ffd62fab977c2639c48d709a5f2987bc7b93", "committedDate": "2020-06-22T20:07:56Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on bytesRead from the first read.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "6318bb77d30872891e76940f8ca9c1916b67f954", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6318bb77d30872891e76940f8ca9c1916b67f954", "committedDate": "2020-06-22T21:24:21Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on bytesRead from the first read.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6318bb77d30872891e76940f8ca9c1916b67f954", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6318bb77d30872891e76940f8ca9c1916b67f954", "committedDate": "2020-06-22T21:24:21Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on bytesRead from the first read.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "c1dcb1fe592f97863f5787017d4c87da1e3b5f29", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c1dcb1fe592f97863f5787017d4c87da1e3b5f29", "committedDate": "2020-06-22T21:49:29Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on bytesRead from the first read.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1dcb1fe592f97863f5787017d4c87da1e3b5f29", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c1dcb1fe592f97863f5787017d4c87da1e3b5f29", "committedDate": "2020-06-22T21:49:29Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on bytesRead from the first read.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "d3e6684289db9e9854af323672277f757c74d72b", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d3e6684289db9e9854af323672277f757c74d72b", "committedDate": "2020-06-22T22:09:40Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on bytesRead from the first read.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3e6684289db9e9854af323672277f757c74d72b", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d3e6684289db9e9854af323672277f757c74d72b", "committedDate": "2020-06-22T22:09:40Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on bytesRead from the first read.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "3984101e3568d5f020189a3c0318da989900dd5a", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3984101e3568d5f020189a3c0318da989900dd5a", "committedDate": "2020-06-22T22:52:07Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on bytesRead from the first read.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MDgxMDAz", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#pullrequestreview-436081003", "createdAt": "2020-06-23T19:15:32Z", "commit": {"oid": "3984101e3568d5f020189a3c0318da989900dd5a"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToxNTozMlrOGn3Fqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDowMTowOFrOGn4h3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1MDIxOQ==", "bodyText": "I am not sure we want to expand beyond the required size.", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r444450219", "createdAt": "2020-06-23T19:15:32Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/MessageBuffer.cpp", "diffHunk": "@@ -54,6 +53,26 @@ MessageBuffer::expandIfNeeded(uint32_t requiredSize)\n       }\n    }\n \n+void\n+MessageBuffer::expand(uint32_t requiredSize, uint32_t numBytesToCopy)\n+   {\n+   TR_ASSERT_FATAL((requiredSize > _capacity), \"requiredSize %u has to be greater than _capacity %u\", requiredSize, _capacity);\n+   TR_ASSERT_FATAL((numBytesToCopy <= _capacity), \"numBytesToCopy %u has to be less than _capacity %u\", numBytesToCopy, _capacity);\n+\n+   _capacity = requiredSize * 2;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3984101e3568d5f020189a3c0318da989900dd5a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1MzY3OQ==", "bodyText": "the numBytesToCopy --> numBytesToCopy", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r444453679", "createdAt": "2020-06-23T19:22:10Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/MessageBuffer.hpp", "diffHunk": "@@ -184,14 +184,24 @@ class MessageBuffer\n \n       If requiredSize is greater than _capacity, allocates a new buffer of size\n       requiredSize * 2 (to prevent frequent reallocations),\n-      copies all existing data there, and frees the old buffer.\n+      copies all existing data based on _curPtr location to the new buffer,\n+      and frees the old buffer.\n \n       @param requiredSize the number of bytes the buffer needs to fit.\n    */\n    void expandIfNeeded(uint32_t requiredSize);\n \n+   /**\n+      @brief Expands the buffer and copies the numBytesToCopy from the old buffer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3984101e3568d5f020189a3c0318da989900dd5a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1NTQ3MA==", "bodyText": "Maybe change the name serializedSize to requiredSize", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r444455470", "createdAt": "2020-06-23T19:25:39Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/Message.hpp", "diffHunk": "@@ -326,10 +326,32 @@ class Message\n    */\n    void setSerializedSize(uint32_t serializedSize)\n       {\n-      _buffer.expandIfNeeded(serializedSize);\n       _buffer.writeValue(serializedSize);\n       }\n \n+   /**\n+      @brief Expand the buffer\n+\n+      This method copies the number of bytes from the beginning of the buffer to\n+      _curPtr from the old buffer to the new buffer.\n+   */\n+   void expandBufferIfNeeded(uint32_t serializedSize)\n+      {\n+      _buffer.expandIfNeeded(serializedSize);\n+      }\n+\n+   /**\n+      @brief Expand the buffer when serializedSize is greater than the capacity\n+\n+      This method copies numBytesToCopy from the old buffer to the new buffer.\n+   */\n+   void expandBuffer(uint32_t serializedSize, uint32_t numBytesToCopy)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3984101e3568d5f020189a3c0318da989900dd5a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1NzA5OQ==", "bodyText": "The expansion is done unconditionally here so maybe the comment should say something like:\n\"Expand internal buffer to 'requiredSize' and copy 'numBytesToCopy' from the old buffer into the new one.\"", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r444457099", "createdAt": "2020-06-23T19:28:51Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/Message.hpp", "diffHunk": "@@ -326,10 +326,32 @@ class Message\n    */\n    void setSerializedSize(uint32_t serializedSize)\n       {\n-      _buffer.expandIfNeeded(serializedSize);\n       _buffer.writeValue(serializedSize);\n       }\n \n+   /**\n+      @brief Expand the buffer\n+\n+      This method copies the number of bytes from the beginning of the buffer to\n+      _curPtr from the old buffer to the new buffer.\n+   */\n+   void expandBufferIfNeeded(uint32_t serializedSize)\n+      {\n+      _buffer.expandIfNeeded(serializedSize);\n+      }\n+\n+   /**\n+      @brief Expand the buffer when serializedSize is greater than the capacity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3984101e3568d5f020189a3c0318da989900dd5a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1OTU4MA==", "bodyText": "The comment should be changed to something like:\n\"Expand the internal buffer when serializedSize is greater than the capacity\nIf expansion occurred, this method copies the number of bytes from the beginning of the buffer to _curPtr from the old buffer to the new buffer.\"", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r444459580", "createdAt": "2020-06-23T19:33:31Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/Message.hpp", "diffHunk": "@@ -326,10 +326,32 @@ class Message\n    */\n    void setSerializedSize(uint32_t serializedSize)\n       {\n-      _buffer.expandIfNeeded(serializedSize);\n       _buffer.writeValue(serializedSize);\n       }\n \n+   /**\n+      @brief Expand the buffer\n+\n+      This method copies the number of bytes from the beginning of the buffer to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3984101e3568d5f020189a3c0318da989900dd5a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ2ODY5Mw==", "bodyText": "bytesReads --> bytesRead", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r444468693", "createdAt": "2020-06-23T19:51:34Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/CommunicationStream.cpp", "diffHunk": "@@ -79,7 +81,64 @@ CommunicationStream::readMessage(Message &msg)\n \n    // collect message size\n #ifdef MESSAGE_SIZE_STATS\n-   collectMsgStat[int(msg.type())].update(messageSize);\n+   collectMsgStat[int(msg.type())].update(serializedSize);\n+#endif\n+   }\n+\n+void\n+CommunicationStream::readMessage(Message &msg)\n+   {\n+   msg.clearForRead();\n+\n+   // The message buffer storage and its capacity could be\n+   // changed when the serialized size is set.\n+   char *buffer = msg.getBufferStartForRead();\n+   uint32_t bufferCapacity = msg.getBufferCapacity();\n+\n+   int32_t bytesRead = readOnceBlocking(buffer, bufferCapacity);\n+\n+   // bytesRead should be greater than 0 here, readOnceBlocking() throws\n+   // an exception already if (bytesRead <= 0).\n+   if (bytesRead < sizeof(uint32_t))\n+      {\n+      throw JITServer::StreamFailure(\"JITServer I/O error: fail to read the size of the message\");\n+      }\n+\n+   // bytesRead >= sizeof(uint32_t)\n+   uint32_t serializedSize = ((uint32_t *)buffer)[0];\n+   if (bytesRead > serializedSize)\n+      {\n+      throw JITServer::StreamFailure(\"JITServer I/O error: read more than the message size\");\n+      }\n+\n+   // serializedSize >= bytesRead\n+   uint32_t bytesLeftToRead = serializedSize - bytesRead;\n+\n+   if (bytesLeftToRead == 0)\n+      {\n+      msg.setSerializedSize(serializedSize);\n+      }\n+   else\n+      {\n+      if (serializedSize > bufferCapacity)\n+         {\n+         // bytesReads could be less than the buffer capacity.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3984101e3568d5f020189a3c0318da989900dd5a"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ3MTQ4OA==", "bodyText": "I wonder if we could take msg.setSerializedSize(serializedSize); from here and from the if part and put it after this if-then-else statement. This way we can completely eliminate the if part by reversing the condition.", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r444471488", "createdAt": "2020-06-23T19:56:48Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/CommunicationStream.cpp", "diffHunk": "@@ -79,7 +81,64 @@ CommunicationStream::readMessage(Message &msg)\n \n    // collect message size\n #ifdef MESSAGE_SIZE_STATS\n-   collectMsgStat[int(msg.type())].update(messageSize);\n+   collectMsgStat[int(msg.type())].update(serializedSize);\n+#endif\n+   }\n+\n+void\n+CommunicationStream::readMessage(Message &msg)\n+   {\n+   msg.clearForRead();\n+\n+   // The message buffer storage and its capacity could be\n+   // changed when the serialized size is set.\n+   char *buffer = msg.getBufferStartForRead();\n+   uint32_t bufferCapacity = msg.getBufferCapacity();\n+\n+   int32_t bytesRead = readOnceBlocking(buffer, bufferCapacity);\n+\n+   // bytesRead should be greater than 0 here, readOnceBlocking() throws\n+   // an exception already if (bytesRead <= 0).\n+   if (bytesRead < sizeof(uint32_t))\n+      {\n+      throw JITServer::StreamFailure(\"JITServer I/O error: fail to read the size of the message\");\n+      }\n+\n+   // bytesRead >= sizeof(uint32_t)\n+   uint32_t serializedSize = ((uint32_t *)buffer)[0];\n+   if (bytesRead > serializedSize)\n+      {\n+      throw JITServer::StreamFailure(\"JITServer I/O error: read more than the message size\");\n+      }\n+\n+   // serializedSize >= bytesRead\n+   uint32_t bytesLeftToRead = serializedSize - bytesRead;\n+\n+   if (bytesLeftToRead == 0)\n+      {\n+      msg.setSerializedSize(serializedSize);\n+      }\n+   else\n+      {\n+      if (serializedSize > bufferCapacity)\n+         {\n+         // bytesReads could be less than the buffer capacity.\n+         msg.expandBuffer(serializedSize, bytesRead);\n+\n+         // The buffer storage will change after the buffer is expanded.\n+         buffer = msg.getBufferStartForRead();\n+         }\n+\n+      msg.setSerializedSize(serializedSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3984101e3568d5f020189a3c0318da989900dd5a"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ3MzgyMg==", "bodyText": "Maybe we should expand more these comments:\n\"Build a message sent by a remote party by reading from the socket as much as possible (up to internal buffer capacity)\"\n\"Build a message sent by a remote party by first reading the message size and then reading the rest of the message\"", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#discussion_r444473822", "createdAt": "2020-06-23T20:01:08Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/CommunicationStream.hpp", "diffHunk": "@@ -86,7 +86,10 @@ class CommunicationStream\n       _ssl = ssl;\n       }\n \n+   // The first read is to read the message in the number of bytes of the full buffer capacity.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3984101e3568d5f020189a3c0318da989900dd5a"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "395d3c9b6ad0528590c5a3ef51e8e1b8c921ab6f", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/395d3c9b6ad0528590c5a3ef51e8e1b8c921ab6f", "committedDate": "2020-06-24T02:22:52Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on `bytesRead` from the first read.\n\nAlso increase `INITIAL_BUFFER_SIZE` to `18000`\nfrom `10000` based on the average message size observed\nin #9708.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3984101e3568d5f020189a3c0318da989900dd5a", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3984101e3568d5f020189a3c0318da989900dd5a", "committedDate": "2020-06-22T22:52:07Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on bytesRead from the first read.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "395d3c9b6ad0528590c5a3ef51e8e1b8c921ab6f", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/395d3c9b6ad0528590c5a3ef51e8e1b8c921ab6f", "committedDate": "2020-06-24T02:22:52Z", "message": "Read message in buffer capacity first\n\nThe original message read involves at least two reads:\nThe first one is to read the message size. The second\none is to read the rest of the message based on the\nmessage size that\u2019s read in the first read.\nThis change optimizes the incoming message read to\nattempt to read the full buffer capacity in the first read.\nIt then decides whether or not subsequent reads are\nrequired based on `bytesRead` from the first read.\n\nAlso increase `INITIAL_BUFFER_SIZE` to `18000`\nfrom `10000` based on the average message size observed\nin #9708.\n\nImplements #9711\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODgxNDQ5", "url": "https://github.com/eclipse-openj9/openj9/pull/9859#pullrequestreview-436881449", "createdAt": "2020-06-24T17:59:18Z", "commit": {"oid": "395d3c9b6ad0528590c5a3ef51e8e1b8c921ab6f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 668, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}