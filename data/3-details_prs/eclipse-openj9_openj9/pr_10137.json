{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MDE3Njk5", "number": 10137, "title": "Fix class resolve for VT multianewarray", "bodyText": "Create ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\nTesting two paths:\n\nUsing Array.instance()\nUsing opcode for MULTIANEWARRAY\n\nTested following types:\n\nPoint2D\nFlattenedLine2D\nTriangle2D\nAssortedValueWithLongAlginment\n\nTemporarily disabled ValueTypeTests 1 and 2 due to array flattening\nbug causing failures\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\nRelated to: #10077\nSigned-off-by: Oussama Saoudi oussama.saoudi@ibm.com", "createdAt": "2020-07-09T18:14:39Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10137", "merged": true, "mergeCommit": {"oid": "aeda9b19d95f99249a71376ff6316fa70fbdbbd6"}, "closed": true, "closedAt": "2020-09-29T19:29:33Z", "author": {"login": "OussamaSaoudi"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczTMb8ABqjM1MzA5MDU0OTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMcHN0gBqjM4MDkzNDEwMTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22bf094f218271dc0eace0709deca7c265514bd7", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/22bf094f218271dc0eace0709deca7c265514bd7", "committedDate": "2020-07-09T18:11:11Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "af765a69fc77d48e2ff6a202bbbe87d6a2d3d532", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/af765a69fc77d48e2ff6a202bbbe87d6a2d3d532", "committedDate": "2020-07-09T18:17:16Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af765a69fc77d48e2ff6a202bbbe87d6a2d3d532", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/af765a69fc77d48e2ff6a202bbbe87d6a2d3d532", "committedDate": "2020-07-09T18:17:16Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "4775ac4b680fea00f7533b19ccd276de2f9a6294", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4775ac4b680fea00f7533b19ccd276de2f9a6294", "committedDate": "2020-07-16T20:18:43Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4775ac4b680fea00f7533b19ccd276de2f9a6294", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4775ac4b680fea00f7533b19ccd276de2f9a6294", "committedDate": "2020-07-16T20:18:43Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "c6159741545190851014d821c273e6bef4f869da", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c6159741545190851014d821c273e6bef4f869da", "committedDate": "2020-07-16T20:20:03Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6159741545190851014d821c273e6bef4f869da", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c6159741545190851014d821c273e6bef4f869da", "committedDate": "2020-07-16T20:20:03Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "3ee6661c3cbe281468ce135bc494f571dc9cffba", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3ee6661c3cbe281468ce135bc494f571dc9cffba", "committedDate": "2020-07-16T20:20:35Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ee6661c3cbe281468ce135bc494f571dc9cffba", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3ee6661c3cbe281468ce135bc494f571dc9cffba", "committedDate": "2020-07-16T20:20:35Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "991ae4a36c9c5116113a233b7928d8c653406629", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/991ae4a36c9c5116113a233b7928d8c653406629", "committedDate": "2020-07-16T20:21:02Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMTg3Njc2", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#pullrequestreview-450187676", "createdAt": "2020-07-16T20:22:04Z", "commit": {"oid": "991ae4a36c9c5116113a233b7928d8c653406629"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMDoyMjowNVrOGy7Xvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMDoyMjowNVrOGy7Xvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA1NDcxOA==", "bodyText": "@tajila The spot causing the error when trying to create the method", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#discussion_r456054718", "createdAt": "2020-07-16T20:22:05Z", "author": {"login": "OussamaSaoudi"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeGenerator.java", "diffHunk": "@@ -925,4 +928,28 @@ public static void generateClassFile(String name, byte[] bytes) {\n \t\tbyte[] bytes = generateClass(name, fields, false, true);\n \t\treturn generator.defineClass(name, bytes, 0, bytes.length);\n \t}\n-}\n\\ No newline at end of file\n+\n+\tpublic static void addgenerate2DMultiANewArray(ClassWriter cw) {\n+        MethodVisitor mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, \"generate2DMultiANewArray\", \"(II)Ljava/lang/Object;\", null, null);\n+\t\tmv.visitCode();\n+\t\tmv.visitVarInsn(ILOAD, 0);\n+\t\tmv.visitVarInsn(ILOAD, 1);\n+        mv.visitMultiANewArrayInsn( \"[[\" + getSigFromSimpleName(\"Point2D\", false), 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "991ae4a36c9c5116113a233b7928d8c653406629"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "991ae4a36c9c5116113a233b7928d8c653406629", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/991ae4a36c9c5116113a233b7928d8c653406629", "committedDate": "2020-07-16T20:21:02Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "83bdeda20f32ba7ab92e363f3d802f992c0a7ab3", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/83bdeda20f32ba7ab92e363f3d802f992c0a7ab3", "committedDate": "2020-07-17T16:53:07Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODQzNjc1", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#pullrequestreview-450843675", "createdAt": "2020-07-17T17:42:12Z", "commit": {"oid": "83bdeda20f32ba7ab92e363f3d802f992c0a7ab3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo0MjoxMlrOGzbqTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNzo0MjoxMlrOGzbqTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjU4Mzc1Ng==", "bodyText": "Invoking getPoint2D is causing NullPointerException.", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#discussion_r456583756", "createdAt": "2020-07-17T17:42:12Z", "author": {"login": "OussamaSaoudi"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -1982,6 +1982,35 @@ static public void testDefaultValueInPointArray() throws Throwable {\n \t\t}\n \t}\n \n+\t/**\n+\t * Create multianewarray with Point Class without initialization.\n+\t * The array should be set ot a Default Value.\n+\t */\n+\t@Test(priority=4)\n+\tstatic public void testDefaultValueInPointInstanceMultiANewArray() throws Throwable {\n+\t\tObject pointArray = Array.newInstance(point2DClass, new int[]{genericArraySize, genericArraySize});\n+\t\tfor (int i = 0; i < genericArraySize; i++) {\n+\t\t\tfor (int j = 0; j < genericArraySize; j++) {\n+\t\t\t\tObject pointObject = Array.get(Array.get(pointArray,i),j);\n+\t\t\t\tassertNotNull(pointObject);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Test(priority=4)\n+\tstatic public void testDefaultValueInPointByteCodeMultiANewArray() throws Throwable {\n+\t\t/* Try down cast? ELSE: look at ASMifier */\n+\t\tMethodHandle makePointArray = lookup.findStatic(point2DClass, \"generate2DMultiANewArray\", MethodType.methodType(Object.class, int.class, int.class));\n+\t\tObject pointArray = makePoint2D.invoke(genericArraySize, genericArraySize);\n+\t\tMethodHandle getPoint2D = lookup.findStatic(point2DClass, \"get2DMultiANewArray\", MethodType.methodType(Object.class, Object.class, int.class, int.class));\n+\t\t//for (int i = 0; i < genericArraySize; i++) {\n+\t\t\t//for (int j = 0; j < genericArraySize; j++) {\n+\t\t\t\tObject pointObject = getPoint2D.invoke(pointArray,1, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83bdeda20f32ba7ab92e363f3d802f992c0a7ab3"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83bdeda20f32ba7ab92e363f3d802f992c0a7ab3", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/83bdeda20f32ba7ab92e363f3d802f992c0a7ab3", "committedDate": "2020-07-17T16:53:07Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "86c2cb324d3db1d9cfcae5a39b36134875aa6069", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/86c2cb324d3db1d9cfcae5a39b36134875aa6069", "committedDate": "2020-07-17T18:39:28Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODgyNzcy", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#pullrequestreview-450882772", "createdAt": "2020-07-17T18:46:20Z", "commit": {"oid": "86c2cb324d3db1d9cfcae5a39b36134875aa6069"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo0NjoyMFrOGzdldA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo0NjoyMFrOGzdldA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxNTI4NA==", "bodyText": "youre not making an array here, need makePointArray instead of makePoint2D", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#discussion_r456615284", "createdAt": "2020-07-17T18:46:20Z", "author": {"login": "tajila"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -1982,6 +1982,35 @@ static public void testDefaultValueInPointArray() throws Throwable {\n \t\t}\n \t}\n \n+\t/**\n+\t * Create multianewarray with Point Class without initialization.\n+\t * The array should be set ot a Default Value.\n+\t */\n+\t@Test(priority=4)\n+\tstatic public void testDefaultValueInPointInstanceMultiANewArray() throws Throwable {\n+\t\tObject pointArray = Array.newInstance(point2DClass, new int[]{genericArraySize, genericArraySize});\n+\t\tfor (int i = 0; i < genericArraySize; i++) {\n+\t\t\tfor (int j = 0; j < genericArraySize; j++) {\n+\t\t\t\tObject pointObject = Array.get(Array.get(pointArray,i),j);\n+\t\t\t\tassertNotNull(pointObject);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Test(priority=4)\n+\tstatic public void testDefaultValueInPointByteCodeMultiANewArray() throws Throwable {\n+\t\t/* Try down cast? ELSE: look at ASMifier */\n+\t\tMethodHandle makePointArray = lookup.findStatic(point2DClass, \"generate2DMultiANewArray\", MethodType.methodType(Object.class, int.class, int.class));\n+\t\tObject pointArray = makePoint2D.invoke(genericArraySize, genericArraySize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c2cb324d3db1d9cfcae5a39b36134875aa6069"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwODgzOTE3", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#pullrequestreview-450883917", "createdAt": "2020-07-17T18:48:24Z", "commit": {"oid": "86c2cb324d3db1d9cfcae5a39b36134875aa6069"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo0ODoyNVrOGzdpFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxODo0ODoyNVrOGzdpFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjYxNjIxNQ==", "bodyText": "also you dont need to generate code for getters and setters, since Array.get will do the same thing", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#discussion_r456616215", "createdAt": "2020-07-17T18:48:25Z", "author": {"login": "tajila"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -1982,6 +1982,35 @@ static public void testDefaultValueInPointArray() throws Throwable {\n \t\t}\n \t}\n \n+\t/**\n+\t * Create multianewarray with Point Class without initialization.\n+\t * The array should be set ot a Default Value.\n+\t */\n+\t@Test(priority=4)\n+\tstatic public void testDefaultValueInPointInstanceMultiANewArray() throws Throwable {\n+\t\tObject pointArray = Array.newInstance(point2DClass, new int[]{genericArraySize, genericArraySize});\n+\t\tfor (int i = 0; i < genericArraySize; i++) {\n+\t\t\tfor (int j = 0; j < genericArraySize; j++) {\n+\t\t\t\tObject pointObject = Array.get(Array.get(pointArray,i),j);\n+\t\t\t\tassertNotNull(pointObject);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t@Test(priority=4)\n+\tstatic public void testDefaultValueInPointByteCodeMultiANewArray() throws Throwable {\n+\t\t/* Try down cast? ELSE: look at ASMifier */\n+\t\tMethodHandle makePointArray = lookup.findStatic(point2DClass, \"generate2DMultiANewArray\", MethodType.methodType(Object.class, int.class, int.class));\n+\t\tObject pointArray = makePoint2D.invoke(genericArraySize, genericArraySize);\n+\t\tMethodHandle getPoint2D = lookup.findStatic(point2DClass, \"get2DMultiANewArray\", MethodType.methodType(Object.class, Object.class, int.class, int.class));\n+\t\t//for (int i = 0; i < genericArraySize; i++) {\n+\t\t\t//for (int j = 0; j < genericArraySize; j++) {\n+\t\t\t\tObject pointObject = getPoint2D.invoke(pointArray,1, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c2cb324d3db1d9cfcae5a39b36134875aa6069"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86c2cb324d3db1d9cfcae5a39b36134875aa6069", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/86c2cb324d3db1d9cfcae5a39b36134875aa6069", "committedDate": "2020-07-17T18:39:28Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "d5a8ef3326c51719899a42a9bb49acb943fd8a42", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d5a8ef3326c51719899a42a9bb49acb943fd8a42", "committedDate": "2020-07-20T14:52:59Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value. Added multianewarray creation\nfor Valuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d5a8ef3326c51719899a42a9bb49acb943fd8a42", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d5a8ef3326c51719899a42a9bb49acb943fd8a42", "committedDate": "2020-07-20T14:52:59Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value. Added multianewarray creation\nfor Valuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "987b479dab5fe86ff9874063fbe3af7f4196187c", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/987b479dab5fe86ff9874063fbe3af7f4196187c", "committedDate": "2020-07-20T17:33:45Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value. Added multianewarray creation\nfor Valuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "987b479dab5fe86ff9874063fbe3af7f4196187c", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/987b479dab5fe86ff9874063fbe3af7f4196187c", "committedDate": "2020-07-20T17:33:45Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value. Added multianewarray creation\nfor Valuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "9e9197a3c51f7892f39eff1205a2138cbd5e4864", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9e9197a3c51f7892f39eff1205a2138cbd5e4864", "committedDate": "2020-07-21T13:46:57Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value. Added multianewarray creation\nfor Valuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4Mzg5OTcz", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#pullrequestreview-458389973", "createdAt": "2020-07-30T13:17:16Z", "commit": {"oid": "9e9197a3c51f7892f39eff1205a2138cbd5e4864"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzoxNzoxN1rOG5ikJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzozMDo0N1rOG5jG4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk4ODMyNw==", "bodyText": "nitpick: please rename to test2DMultiANewArray(cw, className); for consistency", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#discussion_r462988327", "createdAt": "2020-07-30T13:17:17Z", "author": {"login": "tajila"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeGenerator.java", "diffHunk": "@@ -116,6 +116,7 @@\n \t\t\t\tmakeGeneric(cw, className, \"makeValueGeneric\", \"makeValue\", makeValueSig, makeValueGenericSig, fields, makeMaxLocal, isRef);\n \t\t\t}\n \t\t}\n+\t\taddGenerate2DMultiANewArray(cw, className);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e9197a3c51f7892f39eff1205a2138cbd5e4864"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5MDgzNg==", "bodyText": "you should also pass in isRef", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#discussion_r462990836", "createdAt": "2020-07-30T13:21:13Z", "author": {"login": "tajila"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeGenerator.java", "diffHunk": "@@ -925,4 +926,16 @@ public static void generateClassFile(String name, byte[] bytes) {\n \t\tbyte[] bytes = generateClass(name, fields, false, true);\n \t\treturn generator.defineClass(name, bytes, 0, bytes.length);\n \t}\n-}\n\\ No newline at end of file\n+\n+\tpublic static void addGenerate2DMultiANewArray(ClassWriter cw, String className) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e9197a3c51f7892f39eff1205a2138cbd5e4864"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5MTIyNA==", "bodyText": "so it can be used here, so L is used for ref, and Q for values", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#discussion_r462991224", "createdAt": "2020-07-30T13:21:48Z", "author": {"login": "tajila"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeGenerator.java", "diffHunk": "@@ -925,4 +926,16 @@ public static void generateClassFile(String name, byte[] bytes) {\n \t\tbyte[] bytes = generateClass(name, fields, false, true);\n \t\treturn generator.defineClass(name, bytes, 0, bytes.length);\n \t}\n-}\n\\ No newline at end of file\n+\n+\tpublic static void addGenerate2DMultiANewArray(ClassWriter cw, String className) {\n+\t\tMethodVisitor mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, \"generate2DMultiANewArray\", \"(II)Ljava/lang/Object;\", null, null);\n+\t\tmv.visitCode();\n+\t\tmv.visitVarInsn(ILOAD, 0);\n+\t\tmv.visitVarInsn(ILOAD, 1);\n+\t\tmv.visitMultiANewArrayInsn(\"[[\" + getSigFromSimpleName(className, false), 2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e9197a3c51f7892f39eff1205a2138cbd5e4864"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5Mjg3MQ==", "bodyText": "same thing here with the name", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#discussion_r462992871", "createdAt": "2020-07-30T13:24:18Z", "author": {"login": "tajila"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeGenerator.java", "diffHunk": "@@ -925,4 +926,16 @@ public static void generateClassFile(String name, byte[] bytes) {\n \t\tbyte[] bytes = generateClass(name, fields, false, true);\n \t\treturn generator.defineClass(name, bytes, 0, bytes.length);\n \t}\n-}\n\\ No newline at end of file\n+\n+\tpublic static void addGenerate2DMultiANewArray(ClassWriter cw, String className) {\n+\t\tMethodVisitor mv = cw.visitMethod(ACC_PUBLIC + ACC_STATIC, \"generate2DMultiANewArray\", \"(II)Ljava/lang/Object;\", null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e9197a3c51f7892f39eff1205a2138cbd5e4864"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5NzIxNg==", "bodyText": "for this test and the ones below, you can first do a loop write out each element with defaultLinePositions1 (look at checkFieldAccessMHOfAssortedType) and then do another loop to compare that it is correct with checkFieldAccessMHOfAssortedType. Look at testGCFlattenedValueArrayWithSingleAlignment for an example.", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#discussion_r462997216", "createdAt": "2020-07-30T13:30:47Z", "author": {"login": "tajila"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -1997,6 +2029,42 @@ static public void testDefaultValueInLineArray() throws Throwable {\n \t\t}\n \t}\n \n+\t/**\n+\t * Create multi dimensional array with Line Class without initialization.\n+\t * Check the fields of each element in arrays. No field should be NULL.\n+\t */\n+\t@Test(priority=4)\n+\tstatic public void testDefaultValueInLineInstanceMultiANewArray() throws Throwable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e9197a3c51f7892f39eff1205a2138cbd5e4864"}, "originalPosition": 48}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e9197a3c51f7892f39eff1205a2138cbd5e4864", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9e9197a3c51f7892f39eff1205a2138cbd5e4864", "committedDate": "2020-07-21T13:46:57Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value. Added multianewarray creation\nfor Valuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "4874adbb6d34cb57a5a3db3be6f77538745450e4", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4874adbb6d34cb57a5a3db3be6f77538745450e4", "committedDate": "2020-08-05T15:25:11Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value. Added multianewarray creation\nfor Valuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\ntemp changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4874adbb6d34cb57a5a3db3be6f77538745450e4", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4874adbb6d34cb57a5a3db3be6f77538745450e4", "committedDate": "2020-08-05T15:25:11Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value. Added multianewarray creation\nfor Valuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\ntemp changes"}, "afterCommit": {"oid": "4733cf5778bccfef11b7abbdae309e6e86bbd1b0", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4733cf5778bccfef11b7abbdae309e6e86bbd1b0", "committedDate": "2020-08-05T16:18:06Z", "message": "Adding test for MultiNewArray\n\nCreate ValueType test to check that arrays made using MULTIANEWARRAY\ndo not have null as the default value. Added multianewarray creation\nfor Valuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "99c40d8a3841d731c6943b55841c9256e757ccd0", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/99c40d8a3841d731c6943b55841c9256e757ccd0", "committedDate": "2020-08-06T20:30:37Z", "message": "Temp additions"}, "afterCommit": {"oid": "1eeb3cf630b7e95bb288d37e18ac71d328ed0c49", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1eeb3cf630b7e95bb288d37e18ac71d328ed0c49", "committedDate": "2020-08-24T15:39:17Z", "message": "still working on things"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1eeb3cf630b7e95bb288d37e18ac71d328ed0c49", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1eeb3cf630b7e95bb288d37e18ac71d328ed0c49", "committedDate": "2020-08-24T15:39:17Z", "message": "still working on things"}, "afterCommit": {"oid": "7ebe452b66a653e39066dbc5ef1935b0d82ea663", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7ebe452b66a653e39066dbc5ef1935b0d82ea663", "committedDate": "2020-08-25T20:53:56Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nNOTE: AssortedValueWithLongAlignment tests fail in ValueTypeTests_1\nand ValueTypeTests_2 due to array flattening enabled.\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0OTExMTEy", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#pullrequestreview-474911112", "createdAt": "2020-08-25T21:13:31Z", "commit": {"oid": "7ebe452b66a653e39066dbc5ef1935b0d82ea663"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToxMzozMVrOHGp8ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMToxMzozMVrOHGp8ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Njc0MDcwOA==", "bodyText": "@tajila This test concerns default values. Should I remove or modify it?", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#discussion_r476740708", "createdAt": "2020-08-25T21:13:31Z", "author": {"login": "OussamaSaoudi"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -2099,6 +2293,38 @@ static public void testDefaultValueInAssortedRefWithLongAlignmentArray() throws\n \t\t}\n \t}\n \n+\n+\t/**\n+\t * Create an assortedRefWithLongAlignment multi dimensional array\n+\t * Since it's ref type, the array should be filled with nullptrs\n+\t */\n+\t@Test(priority=4)\n+\tstatic public void testDefaultValueInAssortedRefWithLongAlignmentInstanceMultiANewArray() throws Throwable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ebe452b66a653e39066dbc5ef1935b0d82ea663"}, "originalPosition": 232}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ebe452b66a653e39066dbc5ef1935b0d82ea663", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7ebe452b66a653e39066dbc5ef1935b0d82ea663", "committedDate": "2020-08-25T20:53:56Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nNOTE: AssortedValueWithLongAlignment tests fail in ValueTypeTests_1\nand ValueTypeTests_2 due to array flattening enabled.\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "6996e6e6514c7fb2c7ed8eac5efa625b1a337f94", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6996e6e6514c7fb2c7ed8eac5efa625b1a337f94", "committedDate": "2020-08-26T15:13:07Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nNOTE: AssortedValueWithLongAlignment tests fail in ValueTypeTests_1\nand ValueTypeTests_2 due to array flattening enabled.\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6996e6e6514c7fb2c7ed8eac5efa625b1a337f94", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6996e6e6514c7fb2c7ed8eac5efa625b1a337f94", "committedDate": "2020-08-26T15:13:07Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nNOTE: AssortedValueWithLongAlignment tests fail in ValueTypeTests_1\nand ValueTypeTests_2 due to array flattening enabled.\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "a1a71421fe4da913bdd0946c23e7460944df8586", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a1a71421fe4da913bdd0946c23e7460944df8586", "committedDate": "2020-09-11T15:47:16Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nNOTE: AssortedValueWithLongAlignment tests fail in ValueTypeTests_1\nand ValueTypeTests_2 due to array flattening enabled.\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a1a71421fe4da913bdd0946c23e7460944df8586", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a1a71421fe4da913bdd0946c23e7460944df8586", "committedDate": "2020-09-11T15:47:16Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nNOTE: AssortedValueWithLongAlignment tests fail in ValueTypeTests_1\nand ValueTypeTests_2 due to array flattening enabled.\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "441d6b50ff718bff052cfc6d61d23008fd2b23be", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/441d6b50ff718bff052cfc6d61d23008fd2b23be", "committedDate": "2020-09-11T16:09:48Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nTemporarily disabled ValueTypeTests 1 and 2 due to array flattening\nbug causing failures\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MDE4MjIy", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#pullrequestreview-488018222", "createdAt": "2020-09-14T18:03:25Z", "commit": {"oid": "441d6b50ff718bff052cfc6d61d23008fd2b23be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MDE5MzEz", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#pullrequestreview-488019313", "createdAt": "2020-09-14T18:05:00Z", "commit": {"oid": "441d6b50ff718bff052cfc6d61d23008fd2b23be"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODowNTowMFrOHRguYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODowNTowMFrOHRguYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEyNDAwMA==", "bodyText": "This isn't what I meant. You can disable the specific tests that fail. Look for @Test(enabled = false, priority=5) in the tests", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#discussion_r488124000", "createdAt": "2020-09-14T18:05:00Z", "author": {"login": "tajila"}, "path": "test/functional/Valhalla/playlist.xml", "diffHunk": "@@ -26,8 +26,11 @@\n \t\t<testCaseName>ValueTypeTests</testCaseName>\n \t\t<variations>\n \t\t\t<variation>NoOptions</variation>\n-\t\t\t<variation>-Xgcpolicy:nogc -XX:ValueTypeFlatteningThreshold=99999 -XX:+EnableArrayFlattening</variation>\n-\t\t\t<variation>-Xgcpolicy:optthruput -Xnocompactgc -XX:ValueTypeFlatteningThreshold=99999 -XX:+EnableArrayFlattening</variation>\n+\t\t\t<!--", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "441d6b50ff718bff052cfc6d61d23008fd2b23be"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "441d6b50ff718bff052cfc6d61d23008fd2b23be", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/441d6b50ff718bff052cfc6d61d23008fd2b23be", "committedDate": "2020-09-11T16:09:48Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nTemporarily disabled ValueTypeTests 1 and 2 due to array flattening\nbug causing failures\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "8bd1aec74d78c363d1a33beb904dab87bd513368", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8bd1aec74d78c363d1a33beb904dab87bd513368", "committedDate": "2020-09-14T19:58:46Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nTemporarily disabled ValueTypeTests 1 and 2 due to array flattening\nbug causing failures\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjQ4MTQz", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#pullrequestreview-488248143", "createdAt": "2020-09-15T00:48:22Z", "commit": {"oid": "8bd1aec74d78c363d1a33beb904dab87bd513368"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDo0ODoyM1rOHRseTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDo0ODoyM1rOHRseTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMxNjQ5NA==", "bodyText": "one more thing, we need a #ifdef VT here. Define a macro like this in j9.h (youll see the other VT macros)\n#ifdef VT\n#define IS_REFERENCE_SIGNATURE(firstChar) ('L' == (firstChar))\n#else\n#define IS_REFERENCE_SIGNATURE(firstChar) ('L' == (firstChar) || 'Q' == (firstChar))\n#endif", "url": "https://github.com/eclipse-openj9/openj9/pull/10137#discussion_r488316494", "createdAt": "2020-09-15T00:48:23Z", "author": {"login": "tajila"}, "path": "runtime/vm/classsupport.c", "diffHunk": "@@ -108,7 +108,7 @@ internalFindArrayClass(J9VMThread* vmThread, J9Module *j9module, UDATA arity, U_\n \t\t/* the first level of arity is already present in the array class */\n \t\tarity -= 1;\n \n-\t} else if (firstChar == 'L' && lastChar == ';') {\n+\t} else if ((firstChar == 'L' || firstChar == 'Q') && lastChar == ';') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bd1aec74d78c363d1a33beb904dab87bd513368"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8bd1aec74d78c363d1a33beb904dab87bd513368", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8bd1aec74d78c363d1a33beb904dab87bd513368", "committedDate": "2020-09-14T19:58:46Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nTemporarily disabled ValueTypeTests 1 and 2 due to array flattening\nbug causing failures\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "25a9df8e0bd2617cb61ec107a77b24b88bad5e1d", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/25a9df8e0bd2617cb61ec107a77b24b88bad5e1d", "committedDate": "2020-09-16T20:46:36Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nAdded macro for checking if signature is ref or value.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "25a9df8e0bd2617cb61ec107a77b24b88bad5e1d", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/25a9df8e0bd2617cb61ec107a77b24b88bad5e1d", "committedDate": "2020-09-16T20:46:36Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nAdded macro for checking if signature is ref or value.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "9d5c418459e6f58219b7cfc5e8ff4dbc8a95156f", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9d5c418459e6f58219b7cfc5e8ff4dbc8a95156f", "committedDate": "2020-09-23T15:56:57Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nAdded macro for checking if signature is ref or value.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22fa26579ec37c87590408042f3675f8261962d5", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/22fa26579ec37c87590408042f3675f8261962d5", "committedDate": "2020-09-25T20:26:12Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nAdded macro for checking if signature is ref or value.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d5c418459e6f58219b7cfc5e8ff4dbc8a95156f", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9d5c418459e6f58219b7cfc5e8ff4dbc8a95156f", "committedDate": "2020-09-23T15:56:57Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nAdded macro for checking if signature is ref or value.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "22fa26579ec37c87590408042f3675f8261962d5", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/22fa26579ec37c87590408042f3675f8261962d5", "committedDate": "2020-09-25T20:26:12Z", "message": "Fix class resolve for VT multianewarray\n\nCreate ValueType test to check that multiarrays made using\nMULTIANEWARRAY bytecode and Array.newInstance() correctly\nstore flattened types. Added multianewarray creation for\nValuetypes.\n\nTesting two paths:\n- Using Array.instance()\n- Using opcode for MULTIANEWARRAY\n\nTested following types:\n- Point2D\n- FlattenedLine2D\n- Triangle2D\n- AssortedValueWithLongAlginment\n\nAdded support for multianewarray bytecode operation on Q types by\nmodifying the interalFindArrayClass method in classsupport.c.\n\nAdded macro for checking if signature is ref or value.\n\nRelated to: https://github.com/eclipse/openj9/issues/10077\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 554, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}