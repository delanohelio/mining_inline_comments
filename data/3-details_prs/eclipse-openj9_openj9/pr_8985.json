{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzOTQxODg1", "number": 8985, "title": "Fix javacore native mem info output", "bodyText": "Compute the bit mask indexes properly, which are used to track memory\ncategory ancestors. Memory category codes don't need to be consecutive.\nFixes #8984\nSigned-off-by: Peter Shipton Peter_Shipton@ca.ibm.com", "createdAt": "2020-03-26T03:55:36Z", "url": "https://github.com/eclipse-openj9/openj9/pull/8985", "merged": true, "mergeCommit": {"oid": "dd96e6747e1a51ca757d501a7c6bf110f108f192"}, "closed": true, "closedAt": "2020-03-26T20:00:44Z", "author": {"login": "pshipton"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRUXGwABqjMxNjY2NDU0MDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRhuh0gFqTM4MjM3MDI3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5920357250f7225ebfc13c4d737d2de1df5783c5", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/5920357250f7225ebfc13c4d737d2de1df5783c5", "committedDate": "2020-03-26T03:53:03Z", "message": "Fix javacore native mem info output\n\nCompute the bit mask indexes properly, which are used to track memory\ncategory ancestors. Memory category codes don't need to be consecutive.\n\nFixes #8984\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "4b7874c422b3acf3c855a16769545a25ef8b31a0", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4b7874c422b3acf3c855a16769545a25ef8b31a0", "committedDate": "2020-03-26T04:25:48Z", "message": "Fix javacore native mem info output\n\nCompute the bit mask indexes properly, which are used to track memory\ncategory ancestors. Memory category codes don't need to be consecutive.\n\nFixes #8984\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b7874c422b3acf3c855a16769545a25ef8b31a0", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4b7874c422b3acf3c855a16769545a25ef8b31a0", "committedDate": "2020-03-26T04:25:48Z", "message": "Fix javacore native mem info output\n\nCompute the bit mask indexes properly, which are used to track memory\ncategory ancestors. Memory category codes don't need to be consecutive.\n\nFixes #8984\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "8d89cef7598d67d77b45961c6f61cc30e40b4f1a", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8d89cef7598d67d77b45961c6f61cc30e40b4f1a", "committedDate": "2020-03-26T16:56:39Z", "message": "Fix javacore native mem info output\n\nCompute the bit mask indexes properly, which are used to track memory\ncategory ancestors. Memory category codes don't need to be consecutive.\n\nFixes #8984\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzI3Mzgw", "url": "https://github.com/eclipse-openj9/openj9/pull/8985#pullrequestreview-382327380", "createdAt": "2020-03-26T19:03:37Z", "commit": {"oid": "8d89cef7598d67d77b45961c6f61cc30e40b4f1a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTowMzozN1rOF8WJMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTowNzoxNlrOF8WR0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMTY4Mw==", "bodyText": "This would be safer written like this (so no one has to wonder whether _MaxCategoryBits can be zero):\nU_32 bitmask_size = ((writer->_MaxCategoryBits + 31) / 32) * sizeof(U_32);", "url": "https://github.com/eclipse-openj9/openj9/pull/8985#discussion_r398821683", "createdAt": "2020-03-26T19:03:37Z", "author": {"login": "keithc-ca"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1587,8 +1606,9 @@ outerMemCategoryCallBack (U_32 categoryCode, const char * categoryName, UDATA li\n \t * for all children of this node.\n \t */\n \tmemset(&total, 0, sizeof(memcategory_total));\n-\ttotal.category_bitmask = (U_32*)alloca(writer->_TotalCategories * sizeof(U_32));\n-\tmemset(total.category_bitmask, 0, writer->_TotalCategories * sizeof(U_32));\n+\tU_32 bitmask_size = (((writer->_MaxCategoryBits - 1) / 32) + 1) * sizeof(U_32);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d89cef7598d67d77b45961c6f61cc30e40b4f1a"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMzg5MQ==", "bodyText": "I suggest this this is easier to read if the comparison is reversed (same for languageMaxIndex below):\n    if (max_indexes->omrMaxIndex < omrCode) {\n        max_indexes->omrMaxIndex = omrCode;\n    }", "url": "https://github.com/eclipse-openj9/openj9/pull/8985#discussion_r398823891", "createdAt": "2020-03-26T19:07:16Z", "author": {"login": "keithc-ca"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1498,7 +1505,19 @@ JavaCoreDumpWriter::writeMemorySection(void)\n static UDATA\n countMemoryCategoriesCallback (U_32 categoryCode, const char * categoryName, UDATA liveBytes, UDATA liveAllocations, BOOLEAN isRoot, U_32 parentCategoryCode, OMRMemCategoryWalkState * state)\n {\n-\t(*(I_32 *)state->userData1)++;\n+\t(*(U_32 *)state->userData1)++;\n+\t\n+\tmemcategory_max_indexes *max_indexes = (memcategory_max_indexes *)state->userData2;\n+\tif (categoryCode > OMRMEM_LANGUAGE_CATEGORY_LIMIT) {\n+\t\tU_32 omrCode = OMRMEM_OMR_CATEGORY_INDEX_FROM_CODE(categoryCode);\n+\t\tif (omrCode > max_indexes->omrMaxIndex) {\n+\t\t\tmax_indexes->omrMaxIndex = omrCode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d89cef7598d67d77b45961c6f61cc30e40b4f1a"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eed06c75a07126655cc76967b877b2c7af494db0", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/eed06c75a07126655cc76967b877b2c7af494db0", "committedDate": "2020-03-26T19:42:27Z", "message": "Fix javacore native mem info output\n\nCompute the bit mask indexes properly, which are used to track memory\ncategory ancestors. Memory category codes don't need to be consecutive.\n\nFixes #8984\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d89cef7598d67d77b45961c6f61cc30e40b4f1a", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8d89cef7598d67d77b45961c6f61cc30e40b4f1a", "committedDate": "2020-03-26T16:56:39Z", "message": "Fix javacore native mem info output\n\nCompute the bit mask indexes properly, which are used to track memory\ncategory ancestors. Memory category codes don't need to be consecutive.\n\nFixes #8984\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "eed06c75a07126655cc76967b877b2c7af494db0", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/eed06c75a07126655cc76967b877b2c7af494db0", "committedDate": "2020-03-26T19:42:27Z", "message": "Fix javacore native mem info output\n\nCompute the bit mask indexes properly, which are used to track memory\ncategory ancestors. Memory category codes don't need to be consecutive.\n\nFixes #8984\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMzcwMjc5", "url": "https://github.com/eclipse-openj9/openj9/pull/8985#pullrequestreview-382370279", "createdAt": "2020-03-26T20:00:29Z", "commit": {"oid": "eed06c75a07126655cc76967b877b2c7af494db0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1332, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}