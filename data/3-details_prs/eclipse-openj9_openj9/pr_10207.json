{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NTg1NjE2", "number": 10207, "title": "JEP371 implementation part 2", "bodyText": "Add a new API defineClassImpl1() in classLoader.java.\nReplace Unsafe.defineAnonymousClass() with the new API to\ndefine hidden classes.\nAdd J9AccClassHiddenClass, J9AccHiddenClassOptionNestmate and\nJ9AccHiddenClassOptionStrong.\nDisable class sharing (and SCC tests) for hidden class for now.\n\nHidden classes are treated the same as unsafe anonymous\nclasses, except:\na) Its defining classloader is the loader of its hostclass.\nb) It has J9AccClassHiddenClass set.\nc) If defined with NESTMATE/STRONG,\nJ9AccHiddenClassOptionNestmate/J9AccHiddenClassOptionStrong\nwill be set.\nissue #9328\nSigned-off-by: Hang Shao hangshao@ca.ibm.com", "createdAt": "2020-07-21T15:35:00Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10207", "merged": true, "mergeCommit": {"oid": "6ae5af6f368e628b2ac81cfb85215c517b78236f"}, "closed": true, "closedAt": "2020-07-23T01:25:04Z", "author": {"login": "hangshao0"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3IGJIABqjM1NzE4OTM4NjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3fr1PgBqjM1NzcxNjM0MDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c9d0fba8bcfaf76d06abc7cf7c38d39b677c4b8", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0c9d0fba8bcfaf76d06abc7cf7c38d39b677c4b8", "committedDate": "2020-07-21T15:33:38Z", "message": "JEP371 implementation part 2.\n\n1. Add a new API defineClassImpl1() in classLoader.java.\n2. Replace Unsafe.defineAnonymousClass() with the new API to \ndefine hidden classes.\n3. Add J9AccClassHiddenClass, J9AccHiddenClassOptionNestmate and\nJ9AccHiddenClassOptionStrong.\n4. Disable class sharing (and SCC tests) for hidden class for now. \n\nHidden classes are treated the same as unsafe anonymous \nclasses, except: \na) Its defining classloader is the loader of its hostclass.\nb) It has J9AccClassHiddenClass set.\nc) If defined with NESTMATE/STRONG,\nJ9AccHiddenClassOptionNestmate/J9AccHiddenClassOptionStrong \nwill be set.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}, "afterCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/67b5c5ccaa30e00b57873e4ef88845d18d564fd7", "committedDate": "2020-07-21T15:37:32Z", "message": "JEP371 implementation part 2.\n\n1. Add a new API defineClassImpl1() in classLoader.java.\n2. Replace Unsafe.defineAnonymousClass() with the new API to \ndefine hidden classes.\n3. Add J9AccClassHiddenClass, J9AccHiddenClassOptionNestmate and\nJ9AccHiddenClassOptionStrong.\n4. Disable class sharing (and SCC tests) for hidden class for now. \n\nHidden classes are treated the same as unsafe anonymous \nclasses, except: \na) Its defining classloader is the loader of its hostclass.\nb) It has J9AccClassHiddenClass set.\nc) If defined with NESTMATE/STRONG,\nJ9AccHiddenClassOptionNestmate/J9AccHiddenClassOptionStrong \nwill be set.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjQ1MjY5", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452645269", "createdAt": "2020-07-21T16:47:07Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo0NzowN1rOG1A4Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo0NzowN1rOG1A4Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MjA1NQ==", "bodyText": "I would prefer these new flags follow the convention - start with J9AccClass", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458242055", "createdAt": "2020-07-21T16:47:07Z", "author": {"login": "gacholio"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -1059,17 +1059,17 @@ ROMClassBuilder::finishPrepareAndLaydown(\n  *                                  + UNUSED\n  *                                 + UNUSED\n  *                                + UNUSED\n- *                               + UNUSED\n+ *                              + J9AccHiddenClassOptionNestmate", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjQ1OTUw", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452645950", "createdAt": "2020-07-21T16:48:01Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo0ODowMlrOG1A6Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo0ODowMlrOG1A6Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MjYxOA==", "bodyText": "Brackets please.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458242618", "createdAt": "2020-07-21T16:48:02Z", "author": {"login": "gacholio"}, "path": "runtime/bcutil/ROMClassSegmentAllocationStrategy.cpp", "diffHunk": "@@ -34,9 +34,10 @@ ROMClassSegmentAllocationStrategy::allocate(UDATA bytesRequired)\n \t/* Scan existing segments for one large enough to hold the new ROM class */\n \n \tJ9MemorySegment* segment = NULL;\n-\tbool isLoadedByAnonClassLoader = _classLoader == _javaVM->anonClassLoader;\n \t/* always make a new segment if its an anonClass */\n-\tif (!isLoadedByAnonClassLoader) {\n+\tbool allocNewSegment = (_allocNewSeg || _classLoader == _javaVM->anonClassLoader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjQ3NTE0", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452647514", "createdAt": "2020-07-21T16:50:04Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MDowNFrOG1A_Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MDowNFrOG1A_Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0Mzg5OQ==", "bodyText": "Extra blank", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458243899", "createdAt": "2020-07-21T16:50:04Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/clsldr.cpp", "diffHunk": "@@ -85,6 +93,66 @@ Java_java_lang_ClassLoader_defineClassImpl(JNIEnv *env, jobject receiver, jstrin\n \treturn result;\n }\n \n+#if JAVA_SPEC_VERSION >= 15\n+jclass JNICALL\n+Java_java_lang_ClassLoader_defineClassImpl1(JNIEnv *env, jobject receiver, jclass hostClass, jstring className, jbyteArray classRep, jobject protectionDomain, jboolean init, jint flags, jobject obj)\n+{\n+\tJ9VMThread *currentThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = currentThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tUDATA options = 0;\n+\t\n+\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\tif (NULL == classRep) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGNULLPOINTEREXCEPTION, NULL);\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t\treturn NULL;\n+\t}\n+\tif (NULL == hostClass) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGILLEGALARGUMENTEXCEPTION, NULL);\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t\treturn NULL;\n+\t}\n+\n+\tj9object_t hostClassObject = J9_JNI_UNWRAP_REFERENCE(hostClass);\n+\tJ9Class *hostClazz =  J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, hostClassObject);\n+\n+\tvmFuncs->internalExitVMToJNI(currentThread);\n+\n+\toptions |= (J9_FINDCLASS_FLAG_HIDDEN | J9_FINDCLASS_FLAG_UNSAFE | J9_FINDCLASS_FLAG_ANON);\n+\tif (J9_ARE_ALL_BITS_SET(flags, CLASSOPTION_FLAG_NESTMATE)) {\n+\t\toptions |= J9_FINDCLASS_FLAG_CLASS_OPTION_NESTMATE;\n+\t}\n+\tif (J9_ARE_ALL_BITS_SET(flags, CLASSOPTION_FLAG_STRONG )) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjQ3NzU1", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452647755", "createdAt": "2020-07-21T16:50:23Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MDoyM1rOG1BACw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MDoyM1rOG1BACw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NDEwNw==", "bodyText": "Extra line", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458244107", "createdAt": "2020-07-21T16:50:23Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/clsldr.cpp", "diffHunk": "@@ -85,6 +93,66 @@ Java_java_lang_ClassLoader_defineClassImpl(JNIEnv *env, jobject receiver, jstrin\n \treturn result;\n }\n \n+#if JAVA_SPEC_VERSION >= 15\n+jclass JNICALL\n+Java_java_lang_ClassLoader_defineClassImpl1(JNIEnv *env, jobject receiver, jclass hostClass, jstring className, jbyteArray classRep, jobject protectionDomain, jboolean init, jint flags, jobject obj)\n+{\n+\tJ9VMThread *currentThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = currentThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tUDATA options = 0;\n+\t\n+\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\tif (NULL == classRep) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGNULLPOINTEREXCEPTION, NULL);\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t\treturn NULL;\n+\t}\n+\tif (NULL == hostClass) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGILLEGALARGUMENTEXCEPTION, NULL);\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t\treturn NULL;\n+\t}\n+\n+\tj9object_t hostClassObject = J9_JNI_UNWRAP_REFERENCE(hostClass);\n+\tJ9Class *hostClazz =  J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, hostClassObject);\n+\n+\tvmFuncs->internalExitVMToJNI(currentThread);\n+\n+\toptions |= (J9_FINDCLASS_FLAG_HIDDEN | J9_FINDCLASS_FLAG_UNSAFE | J9_FINDCLASS_FLAG_ANON);\n+\tif (J9_ARE_ALL_BITS_SET(flags, CLASSOPTION_FLAG_NESTMATE)) {\n+\t\toptions |= J9_FINDCLASS_FLAG_CLASS_OPTION_NESTMATE;\n+\t}\n+\tif (J9_ARE_ALL_BITS_SET(flags, CLASSOPTION_FLAG_STRONG )) {\n+\t\toptions |= J9_FINDCLASS_FLAG_CLASS_OPTION_STRONG;\n+\t}\n+\t\n+\tjsize length = env->GetArrayLength(classRep);\n+\n+\tjclass result = defineClassCommon(env, receiver, className, classRep, 0, length, protectionDomain, options, hostClazz, NULL);\n+\tif (env->ExceptionCheck()) {\n+\t\treturn NULL;\n+\t} else if (NULL == result) {\n+\t\tthrowNewInternalError(env, NULL);\n+\t\treturn NULL;\n+\t}\n+\n+\tif (init) {\n+\t\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\t\tj9object_t classObject = J9_JNI_UNWRAP_REFERENCE(result);\n+\t\tJ9Class *j9clazz =  J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, classObject);\n+\t\tif (VM_VMHelpers::classRequiresInitialization(currentThread, j9clazz)) {\n+\t\t\tvmFuncs->initializeClass(currentThread, j9clazz);\n+\t\t}\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjQ4NDAw", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452648400", "createdAt": "2020-07-21T16:51:03Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MTowNFrOG1BB1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MTowNFrOG1BB1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NDU2Ng==", "bodyText": "Why is this code being removed?", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458244566", "createdAt": "2020-07-21T16:51:04Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/java_lang_Class.cpp", "diffHunk": "@@ -1812,17 +1812,6 @@ Java_java_lang_Class_getNestHostImpl(JNIEnv *env, jobject recv)\n \n \tif (NULL == nestHost) {\n \t\tJ9Class *clazzToUse = clazz;\n-#if JAVA_SPEC_VERSION >= 15", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjQ4OTEz", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452648913", "createdAt": "2020-07-21T16:51:36Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MTozN1rOG1BDSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MTozN1rOG1BDSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NDkzOA==", "bodyText": "Please us the macro from j9modifiers_api.h", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458244938", "createdAt": "2020-07-21T16:51:37Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/java_lang_Class.cpp", "diffHunk": "@@ -1937,4 +1926,22 @@ Java_java_lang_Class_getNestMembersImpl(JNIEnv *env, jobject recv)\n #endif /* JAVA_SPEC_VERSION >= 11 */\n }\n \n+jboolean JNICALL \n+Java_java_lang_Class_isHiddenImpl(JNIEnv *env, jobject recv)\n+{\n+#if JAVA_SPEC_VERSION >= 15\n+\tjboolean result = JNI_FALSE;\n+\tJ9VMThread *currentThread = (J9VMThread*)env;\n+\tJ9InternalVMFunctions *vmFuncs = currentThread->javaVM->internalVMFunctions;\n+\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\tJ9Class *clazz = J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, J9_JNI_UNWRAP_REFERENCE(recv));\n+\tresult = J9_ARE_ALL_BITS_SET(clazz->romClass->extraModifiers, J9AccClassHiddenClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjQ5MzYw", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452649360", "createdAt": "2020-07-21T16:52:10Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MjoxMVrOG1BEpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MjoxMVrOG1BEpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NTI4Ng==", "bodyText": "Please move this comment above the if.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458245286", "createdAt": "2020-07-21T16:52:11Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/jcldefine.c", "diffHunk": "@@ -131,14 +131,17 @@ defineClassCommon(JNIEnv *env, jobject classLoaderObject,\n retry:\n \n \tomrthread_monitor_enter(vm->classTableMutex);\n-\n-\tif (vmFuncs->hashClassTableAt(classLoader, utf8Name, utf8Length) != NULL) {\n-\t\t/* Bad, we have already defined this class - fail */\n-\t\tomrthread_monitor_exit(vm->classTableMutex);\n-\t\tif (J9_ARE_NO_BITS_SET(options, J9_FINDCLASS_FLAG_NAME_IS_INVALID)) {\n-\t\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGLINKAGEERROR, (UDATA *)*(j9object_t*)className);\n+\t\n+\tif (J9_ARE_NO_BITS_SET(options, J9_FINDCLASS_FLAG_HIDDEN)) {\n+\t\t/* Hidden class is never added into the hash table */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjQ5NTYz", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452649563", "createdAt": "2020-07-21T16:52:25Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MjoyNVrOG1BFRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MjoyNVrOG1BFRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NTQ0Nw==", "bodyText": "NULL !=", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458245447", "createdAt": "2020-07-21T16:52:25Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/jcldefine.c", "diffHunk": "@@ -131,14 +131,17 @@ defineClassCommon(JNIEnv *env, jobject classLoaderObject,\n retry:\n \n \tomrthread_monitor_enter(vm->classTableMutex);\n-\n-\tif (vmFuncs->hashClassTableAt(classLoader, utf8Name, utf8Length) != NULL) {\n-\t\t/* Bad, we have already defined this class - fail */\n-\t\tomrthread_monitor_exit(vm->classTableMutex);\n-\t\tif (J9_ARE_NO_BITS_SET(options, J9_FINDCLASS_FLAG_NAME_IS_INVALID)) {\n-\t\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGLINKAGEERROR, (UDATA *)*(j9object_t*)className);\n+\t\n+\tif (J9_ARE_NO_BITS_SET(options, J9_FINDCLASS_FLAG_HIDDEN)) {\n+\t\t/* Hidden class is never added into the hash table */\n+\t\tif (vmFuncs->hashClassTableAt(classLoader, utf8Name, utf8Length) != NULL) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjUwOTIw", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452650920", "createdAt": "2020-07-21T16:54:01Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1NDowMVrOG1BJFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1NDowMVrOG1BJFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NjQyMw==", "bodyText": "Has this case been tested? It took a while to get this right the first time.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458246423", "createdAt": "2020-07-21T16:54:01Z", "author": {"login": "gacholio"}, "path": "runtime/oti/j9.h", "diffHunk": "@@ -124,7 +124,7 @@ typedef struct J9ClassLoaderWalkState {\n #define J9CLASS_IS_MIXED(ramClass) (((J9CLASS_FLAGS(ramClass) >> J9AccClassRAMShapeShift) & OBJECT_HEADER_SHAPE_MASK) == OBJECT_HEADER_SHAPE_MIXED)\n \n #define J9CLASS_IS_EXEMPT_FROM_VALIDATION(clazz) \\\n-\t(J9ROMCLASS_IS_UNSAFE((clazz)->romClass) || J9_ARE_ANY_BITS_SET((clazz)->classFlags, J9ClassIsExemptFromValidation))\n+\t((J9ROMCLASS_IS_UNSAFE((clazz)->romClass) && !J9ROMCLASS_IS_HIDDEN((clazz)->romClass)) || (J9_ARE_ANY_BITS_SET((clazz)->classFlags, J9ClassIsExemptFromValidation)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjUyNTgx", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452652581", "createdAt": "2020-07-21T16:55:52Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1NTo1MlrOG1BN7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1NTo1MlrOG1BN7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NzY2Mw==", "bodyText": "Are you sure these bits are available? I see overlap with varags (likely doesn't apply to classes) and ValueType.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458247663", "createdAt": "2020-07-21T16:55:52Z", "author": {"login": "gacholio"}, "path": "runtime/oti/j9javaaccessflags.h", "diffHunk": "@@ -118,6 +119,8 @@\n #define J9AccVolatile 0x40\n #define J9AccRecord 0x400\n #define J9AccSealed 0x200\n+#define J9AccHiddenClassOptionNestmate 0x80", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjU0MjA5", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452654209", "createdAt": "2020-07-21T16:57:46Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1Nzo0NlrOG1BSoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1Nzo0NlrOG1BSoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0ODg2NQ==", "bodyText": "macro please", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458248865", "createdAt": "2020-07-21T16:57:46Z", "author": {"login": "gacholio"}, "path": "runtime/util/hshelp.c", "diffHunk": "@@ -2469,8 +2469,15 @@ recreateRAMClasses(J9VMThread * currentThread, J9HashTable * classHashTable, J9H\n \t\tif (fastHCR) {\n \t\t\toptions |= J9_FINDCLASS_FLAG_FAST_HCR;\n \t\t}\n-\n-\t\tif (J9_ARE_ALL_BITS_SET(originalRAMClass->classFlags, J9ClassIsAnonymous)) {\n+\t\tif (J9_ARE_ANY_BITS_SET(originalRAMClass->romClass->extraModifiers, J9AccClassHiddenClass)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjU0NDgw", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452654480", "createdAt": "2020-07-21T16:58:08Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1ODowOFrOG1BTgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1ODowOFrOG1BTgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0OTA4OQ==", "bodyText": "macro please", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458249089", "createdAt": "2020-07-21T16:58:08Z", "author": {"login": "gacholio"}, "path": "runtime/util/hshelp.c", "diffHunk": "@@ -3440,7 +3447,16 @@ reloadROMClasses(J9VMThread * currentThread, jint class_count, const jvmtiClassD\n \t\t\toptions = options | J9_FINDCLASS_FLAG_UNSAFE;\n \t\t}\n \t\tloadData.classLoader = originalRAMClass->classLoader;\n-\t\tif (J9_ARE_ALL_BITS_SET(originalRAMClass->classFlags, J9ClassIsAnonymous)) {\n+\t\tif (J9_ARE_ANY_BITS_SET(originalRAMClass->romClass->extraModifiers, J9AccClassHiddenClass)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjU0ODc2", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452654876", "createdAt": "2020-07-21T16:58:36Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1ODozNlrOG1BUrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1ODozNlrOG1BUrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0OTM5MQ==", "bodyText": "These tests could also be macros in j9modifiers_api.h", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458249391", "createdAt": "2020-07-21T16:58:36Z", "author": {"login": "gacholio"}, "path": "runtime/util/hshelp.c", "diffHunk": "@@ -2469,8 +2469,15 @@ recreateRAMClasses(J9VMThread * currentThread, J9HashTable * classHashTable, J9H\n \t\tif (fastHCR) {\n \t\t\toptions |= J9_FINDCLASS_FLAG_FAST_HCR;\n \t\t}\n-\n-\t\tif (J9_ARE_ALL_BITS_SET(originalRAMClass->classFlags, J9ClassIsAnonymous)) {\n+\t\tif (J9_ARE_ANY_BITS_SET(originalRAMClass->romClass->extraModifiers, J9AccClassHiddenClass)) {\n+\t\t\toptions |= (J9_FINDCLASS_FLAG_HIDDEN | J9_FINDCLASS_FLAG_UNSAFE | J9_FINDCLASS_FLAG_ANON);\n+\t\t\tif (J9_ARE_ANY_BITS_SET(originalRAMClass->romClass->extraModifiers, J9AccHiddenClassOptionNestmate)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjU3MDUx", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452657051", "createdAt": "2020-07-21T17:01:04Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowMTowNFrOG1Bamw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowMTowNFrOG1Bamw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MDkwNw==", "bodyText": "Why does the EXEMPT macro allow hidden classes only to have them excluded here? Seems confusing.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458250907", "createdAt": "2020-07-21T17:01:04Z", "author": {"login": "gacholio"}, "path": "runtime/vm/ClassInitialization.cpp", "diffHunk": "@@ -157,11 +157,14 @@ performVerification(J9VMThread *currentThread, J9Class *clazz)\n \t\t/* See if this class should be verified:\n \t\t *\n \t\t * - Do not verify any class created by sun.misc.Unsafe\n+\t\t * - Do not verify hidden classes\n \t\t * - Do not verify any class which is marked for exclusion in the optional flags\n \t\t * - Verify every class whose bytecodes have been modified\n \t\t * - Do not verify bootstrap classes if the appropriate runtime flag is set\n \t\t */\n-\t\tif (!J9CLASS_IS_EXEMPT_FROM_VALIDATION(clazz) && J9_ARE_NO_BITS_SET(romClass->optionalFlags, J9_ROMCLASS_OPTINFO_VERIFY_EXCLUDE)) {\n+\t\tif (((!J9CLASS_IS_EXEMPT_FROM_VALIDATION(clazz)) && J9_ARE_NO_BITS_SET(romClass->extraModifiers, J9AccClassHiddenClass))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjU3NDk1", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452657495", "createdAt": "2020-07-21T17:01:27Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowMToyN1rOG1BbjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowMToyN1rOG1BbjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MTE0OA==", "bodyText": "macros please", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458251148", "createdAt": "2020-07-21T17:01:27Z", "author": {"login": "gacholio"}, "path": "runtime/vm/classsupport.c", "diffHunk": "@@ -223,7 +223,15 @@ internalCreateArrayClass(J9VMThread* vmThread, J9ROMArrayClass* romClass, J9Clas\n #endif /* defined(J9VM_OPT_VALHALLA_VALUE_TYPES) */\n \n \tif (elementInitSuccess) {\n-\t\tif (J9_ARE_ANY_BITS_SET(elementClass->classFlags, J9ClassIsAnonymous)) {\n+\t\tif (J9_ARE_ANY_BITS_SET(elementClass->romClass->extraModifiers, J9AccClassHiddenClass)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyNjU4MTY3", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-452658167", "createdAt": "2020-07-21T17:02:26Z", "commit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowMjoyNlrOG1Bd3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowMjoyNlrOG1Bd3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MTc0MQ==", "bodyText": "brackets please", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458251741", "createdAt": "2020-07-21T17:02:26Z", "author": {"login": "gacholio"}, "path": "runtime/vm/visible.c", "diffHunk": "@@ -283,9 +283,20 @@ loadAndVerifyNestHost(J9VMThread *vmThread, J9Class *clazz, UDATA options)\n \t\tJ9UTF8 *nestHostName = J9ROMCLASS_NESTHOSTNAME(romClass);\n \t\tBOOLEAN canRunJavaCode = J9_ARE_NO_BITS_SET(options, J9_LOOK_NO_JAVA);\n \t\tBOOLEAN throwException = canRunJavaCode && J9_ARE_NO_BITS_SET(options, J9_LOOK_NO_THROW);\n+\t\tBOOLEAN hiddenNestMate = J9_ARE_ALL_BITS_SET(romClass->extraModifiers, J9AccHiddenClassOptionNestmate);\n+\n+\t\tJ9Class* curClazz = clazz;\n+\t\tBOOLEAN isCurClassHiddenNestMate = hiddenNestMate;\n+\t\twhile (isCurClassHiddenNestMate && curClazz != curClazz->hostClass) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/67b5c5ccaa30e00b57873e4ef88845d18d564fd7", "committedDate": "2020-07-21T15:37:32Z", "message": "JEP371 implementation part 2.\n\n1. Add a new API defineClassImpl1() in classLoader.java.\n2. Replace Unsafe.defineAnonymousClass() with the new API to \ndefine hidden classes.\n3. Add J9AccClassHiddenClass, J9AccHiddenClassOptionNestmate and\nJ9AccHiddenClassOptionStrong.\n4. Disable class sharing (and SCC tests) for hidden class for now. \n\nHidden classes are treated the same as unsafe anonymous \nclasses, except: \na) Its defining classloader is the loader of its hostclass.\nb) It has J9AccClassHiddenClass set.\nc) If defined with NESTMATE/STRONG,\nJ9AccHiddenClassOptionNestmate/J9AccHiddenClassOptionStrong \nwill be set.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}, "afterCommit": {"oid": "b3e8431939d03e1a10cb4d210a0264353355b68b", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b3e8431939d03e1a10cb4d210a0264353355b68b", "committedDate": "2020-07-21T19:29:28Z", "message": "JEP371 implementation part 2.\n\n1. Add a new API defineClassImpl1() in classLoader.java.\n2. Replace Unsafe.defineAnonymousClass() with the new API to \ndefine hidden classes.\n3. Add J9AccClassHiddenClass, J9AccHiddenClassOptionNestmate and\nJ9AccHiddenClassOptionStrong.\n4. Disable class sharing (and SCC tests) for hidden class for now. \n\nHidden classes are treated the same as unsafe anonymous \nclasses, except: \na) Its defining classloader is the loader of its hostclass.\nb) It has J9AccClassHiddenClass set.\nc) If defined with NESTMATE/STRONG,\nJ9AccHiddenClassOptionNestmate/J9AccHiddenClassOptionStrong \nwill be set.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDE0NjQ0", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-453414644", "createdAt": "2020-07-22T15:10:02Z", "commit": {"oid": "b3e8431939d03e1a10cb4d210a0264353355b68b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNToxMDowMlrOG1m-nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNToxMDowMlrOG1m-nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg2NjMzMg==", "bodyText": "The trailing Class here seems superfluous.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458866332", "createdAt": "2020-07-22T15:10:02Z", "author": {"login": "gacholio"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -1059,17 +1059,17 @@ ROMClassBuilder::finishPrepareAndLaydown(\n  *                                  + UNUSED\n  *                                 + UNUSED\n  *                                + UNUSED\n- *                               + UNUSED\n+ *                              + J9AccClassHiddenOptionNestmate\n  *\n- *                             + UNUSED\n+ *                             + J9AccClassHiddenOptionStrong\n  *                            + AccSealed\n  *                           + AccRecord\n  *                          + AccClassAnonClass\n  *\n  *                        + AccSynthetic (matches Oracle modifier position)\n  *                       + AccClassUseBisectionSearch\n  *                      + AccClassInnerClass\n- *                     + UNUSED\n+ *                     + J9AccClassHiddenClass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3e8431939d03e1a10cb4d210a0264353355b68b"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDc3OTAw", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-453477900", "createdAt": "2020-07-22T16:19:03Z", "commit": {"oid": "b3e8431939d03e1a10cb4d210a0264353355b68b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDc4ODA4", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#pullrequestreview-453478808", "createdAt": "2020-07-22T16:19:38Z", "commit": {"oid": "b3e8431939d03e1a10cb4d210a0264353355b68b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b3e8431939d03e1a10cb4d210a0264353355b68b", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b3e8431939d03e1a10cb4d210a0264353355b68b", "committedDate": "2020-07-21T19:29:28Z", "message": "JEP371 implementation part 2.\n\n1. Add a new API defineClassImpl1() in classLoader.java.\n2. Replace Unsafe.defineAnonymousClass() with the new API to \ndefine hidden classes.\n3. Add J9AccClassHiddenClass, J9AccHiddenClassOptionNestmate and\nJ9AccHiddenClassOptionStrong.\n4. Disable class sharing (and SCC tests) for hidden class for now. \n\nHidden classes are treated the same as unsafe anonymous \nclasses, except: \na) Its defining classloader is the loader of its hostclass.\nb) It has J9AccClassHiddenClass set.\nc) If defined with NESTMATE/STRONG,\nJ9AccHiddenClassOptionNestmate/J9AccHiddenClassOptionStrong \nwill be set.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}, "afterCommit": {"oid": "deefdae6712d8bd417c25c638cd58b29dc674891", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/deefdae6712d8bd417c25c638cd58b29dc674891", "committedDate": "2020-07-22T18:41:51Z", "message": "JEP371 implementation part 2.\n\n1. Add a new API defineClassImpl1() in classLoader.java.\n2. Replace Unsafe.defineAnonymousClass() with the new API to \ndefine hidden classes.\n3. Add J9AccClassHiddenClass, J9AccHiddenClassOptionNestmate and\nJ9AccHiddenClassOptionStrong.\n4. Disable class sharing (and SCC tests) for hidden class for now. \n\nHidden classes are treated the same as unsafe anonymous \nclasses, except: \na) Its defining classloader is the loader of its hostclass.\nb) It has J9AccClassHiddenClass set.\nc) If defined with NESTMATE/STRONG,\nJ9AccHiddenClassOptionNestmate/J9AccHiddenClassOptionStrong \nwill be set.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5d177d499d1a5da295be3d213d77f37169646ff", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c5d177d499d1a5da295be3d213d77f37169646ff", "committedDate": "2020-07-22T19:06:34Z", "message": "JEP371 implementation part 2.\n\n1. Add a new API defineClassImpl1() in classLoader.java.\n2. Replace Unsafe.defineAnonymousClass() with the new API to \ndefine hidden classes.\n3. Add J9AccClassHiddenClass, J9AccHiddenClassOptionNestmate and\nJ9AccHiddenClassOptionStrong.\n4. Disable class sharing (and SCC tests) for hidden class for now. \n\nHidden classes are treated the same as unsafe anonymous \nclasses, except: \na) Its defining classloader is the loader of its hostclass.\nb) It has J9AccClassHiddenClass set.\nc) If defined with NESTMATE/STRONG,\nJ9AccHiddenClassOptionNestmate/J9AccHiddenClassOptionStrong \nwill be set.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "deefdae6712d8bd417c25c638cd58b29dc674891", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/deefdae6712d8bd417c25c638cd58b29dc674891", "committedDate": "2020-07-22T18:41:51Z", "message": "JEP371 implementation part 2.\n\n1. Add a new API defineClassImpl1() in classLoader.java.\n2. Replace Unsafe.defineAnonymousClass() with the new API to \ndefine hidden classes.\n3. Add J9AccClassHiddenClass, J9AccHiddenClassOptionNestmate and\nJ9AccHiddenClassOptionStrong.\n4. Disable class sharing (and SCC tests) for hidden class for now. \n\nHidden classes are treated the same as unsafe anonymous \nclasses, except: \na) Its defining classloader is the loader of its hostclass.\nb) It has J9AccClassHiddenClass set.\nc) If defined with NESTMATE/STRONG,\nJ9AccHiddenClassOptionNestmate/J9AccHiddenClassOptionStrong \nwill be set.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}, "afterCommit": {"oid": "c5d177d499d1a5da295be3d213d77f37169646ff", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c5d177d499d1a5da295be3d213d77f37169646ff", "committedDate": "2020-07-22T19:06:34Z", "message": "JEP371 implementation part 2.\n\n1. Add a new API defineClassImpl1() in classLoader.java.\n2. Replace Unsafe.defineAnonymousClass() with the new API to \ndefine hidden classes.\n3. Add J9AccClassHiddenClass, J9AccHiddenClassOptionNestmate and\nJ9AccHiddenClassOptionStrong.\n4. Disable class sharing (and SCC tests) for hidden class for now. \n\nHidden classes are treated the same as unsafe anonymous \nclasses, except: \na) Its defining classloader is the loader of its hostclass.\nb) It has J9AccClassHiddenClass set.\nc) If defined with NESTMATE/STRONG,\nJ9AccHiddenClassOptionNestmate/J9AccHiddenClassOptionStrong \nwill be set.\n\nissue #9328\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 313, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}