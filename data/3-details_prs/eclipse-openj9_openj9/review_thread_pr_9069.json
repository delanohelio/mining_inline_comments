{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MDYyMjM2", "number": 9069, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTozMTozNFrODtlhAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTozMjoyNVrODtliXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTI3MTY4OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/ClassUnloadAssumption.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTozMTozNFrOF_GQMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMTo0ODoyNlrOF_YknQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwNzA1Ng==", "bodyText": "Should be 8 bytes rather than 4.", "url": "https://github.com/eclipse-openj9/openj9/pull/9069#discussion_r401707056", "createdAt": "2020-04-01T15:31:34Z", "author": {"login": "0xdaryl"}, "path": "runtime/compiler/runtime/ClassUnloadAssumption.cpp", "diffHunk": "@@ -716,6 +716,11 @@ void TR_UnloadedClassPicSite::compensate(TR_FrontEnd *, bool isSMP, void *)\n    value |= 0x03a00001;\n    *((uint32_t *)_picLocation) = value;\n    armCodeSync(_picLocation, 4);\n+#elif defined(TR_HOST_ARM64)\n+   // On aarch64, we use constant data snippet for class unloading pic site\n+   extern void arm64CodeSync(unsigned char *codeStart, unsigned int codeSize);\n+   *(int64_t *)_picLocation = -1;\n+   arm64CodeSync(_picLocation, 4);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c01dd4d906bcd6d8fe23a80a6e7d5642340a87c3"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjAwNzE5Nw==", "bodyText": "Thanks. Updated the code.", "url": "https://github.com/eclipse-openj9/openj9/pull/9069#discussion_r402007197", "createdAt": "2020-04-02T01:48:26Z", "author": {"login": "Akira1Saitoh"}, "path": "runtime/compiler/runtime/ClassUnloadAssumption.cpp", "diffHunk": "@@ -716,6 +716,11 @@ void TR_UnloadedClassPicSite::compensate(TR_FrontEnd *, bool isSMP, void *)\n    value |= 0x03a00001;\n    *((uint32_t *)_picLocation) = value;\n    armCodeSync(_picLocation, 4);\n+#elif defined(TR_HOST_ARM64)\n+   // On aarch64, we use constant data snippet for class unloading pic site\n+   extern void arm64CodeSync(unsigned char *codeStart, unsigned int codeSize);\n+   *(int64_t *)_picLocation = -1;\n+   arm64CodeSync(_picLocation, 4);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwNzA1Ng=="}, "originalCommit": {"oid": "c01dd4d906bcd6d8fe23a80a6e7d5642340a87c3"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTI3NTE3OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/ClassUnloadAssumption.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTozMjoyNVrOF_GSkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwMDo0NzoxMFrOF_XnKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwNzY2NA==", "bodyText": "Where does AArch64 do this in a constant data snippet?  I'm looking for the code and can't seem to find it.", "url": "https://github.com/eclipse-openj9/openj9/pull/9069#discussion_r401707664", "createdAt": "2020-04-01T15:32:25Z", "author": {"login": "0xdaryl"}, "path": "runtime/compiler/runtime/ClassUnloadAssumption.cpp", "diffHunk": "@@ -716,6 +716,11 @@ void TR_UnloadedClassPicSite::compensate(TR_FrontEnd *, bool isSMP, void *)\n    value |= 0x03a00001;\n    *((uint32_t *)_picLocation) = value;\n    armCodeSync(_picLocation, 4);\n+#elif defined(TR_HOST_ARM64)\n+   // On aarch64, we use constant data snippet for class unloading pic site", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c01dd4d906bcd6d8fe23a80a6e7d5642340a87c3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk5MTQ2NQ==", "bodyText": "AArch64 does this here.\nhttps://github.com/eclipse/omr/blob/55f3fb746ea8878d3323ffbfb798ea6155268d9a/compiler/aarch64/codegen/ConstantDataSnippet.cpp#L101-L109\nWe have not implemented aconstEvaluator to use ConstantDataSnippet for class unloading pic, though. Z does it like this:\nhttps://github.com/eclipse/omr/blob/55f3fb746ea8878d3323ffbfb798ea6155268d9a/compiler/z/codegen/OMRCodeGenerator.cpp#L4019-L4023", "url": "https://github.com/eclipse-openj9/openj9/pull/9069#discussion_r401991465", "createdAt": "2020-04-02T00:47:10Z", "author": {"login": "Akira1Saitoh"}, "path": "runtime/compiler/runtime/ClassUnloadAssumption.cpp", "diffHunk": "@@ -716,6 +716,11 @@ void TR_UnloadedClassPicSite::compensate(TR_FrontEnd *, bool isSMP, void *)\n    value |= 0x03a00001;\n    *((uint32_t *)_picLocation) = value;\n    armCodeSync(_picLocation, 4);\n+#elif defined(TR_HOST_ARM64)\n+   // On aarch64, we use constant data snippet for class unloading pic site", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcwNzY2NA=="}, "originalCommit": {"oid": "c01dd4d906bcd6d8fe23a80a6e7d5642340a87c3"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 470, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}