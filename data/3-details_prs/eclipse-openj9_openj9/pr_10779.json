{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3Mjg3NjIz", "number": 10779, "title": "Auto download bootjdk", "bodyText": "If bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\nAssumes build user has write permissions in the\nlocation provided. Downloads version specified\nin the variable file.\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n[skip ci]\nSigned-off-by: Adam Brousseau adam.brousseau88@gmail.com", "createdAt": "2020-10-03T14:47:33Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10779", "merged": true, "mergeCommit": {"oid": "31a01d37217d97d8b30f519446f36bab1cf69960"}, "closed": true, "closedAt": "2020-10-06T18:44:11Z", "author": {"login": "AdamBrousseau"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPjZlHgFqTUwMjAzMDA1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP86TQgFqTUwMzI1OTEyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMDMwMDU4", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#pullrequestreview-502030058", "createdAt": "2020-10-05T13:00:43Z", "commit": {"oid": "f6c6fd7d905f07c0f8ea048f561f25c137fa9c17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzowMDo0M1rOHcb8iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzowMDo0M1rOHcb8iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU4MDA0MA==", "bodyText": "Not sure we'd want the env output here.  What value is having this information at this point?  There are also 2 within 5 lines.  mkdir isn't really needed.  Windows path has a mv and gzip will create the directory structure if it doesn't exist.", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#discussion_r499580040", "createdAt": "2020-10-05T13:00:43Z", "author": {"login": "jdekonin"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1514,33 +1514,66 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n }\n \n def set_build_variables_per_node() {\n-    BOOT_JDK = check_path(buildspec.getScalarField('boot_jdk', SDK_VERSION), true)\n+    BOOT_JDK = buildspec.getScalarField('boot_jdk.location', SDK_VERSION)\n     println(\"BOOT_JDK: ${BOOT_JDK}\")\n-    if (!BOOT_JDK) {\n-        error(\"BOOT_JDK: ${BOOT_JDK} does not exist!\")\n+    if (!check_path(\"${BOOT_JDK}/bin/java\")) {\n+        echo \"BOOT_JDK: ${BOOT_JDK} does not exist! Attempt to download it...\"\n+        download_boot_jdk(BOOT_JDK)\n     }\n \n-    def freemarkerPath = buildspec.getScalarField('freemarker', SDK_VERSION)\n-    FREEMARKER = check_path(buildspec.getScalarField('freemarker', SDK_VERSION), false)\n+    FREEMARKER = buildspec.getScalarField('freemarker', SDK_VERSION)\n     println(\"FREEMARKER: ${FREEMARKER}\")\n-    if (!FREEMARKER) {\n+    if (!check_path(FREEMARKER)) {\n         error(\"FREEMARKER: ${FREEMARKER} does not exist!\")\n     }\n \n-    OPENJDK_REFERENCE_REPO = check_path(buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION), true)\n+    OPENJDK_REFERENCE_REPO = buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION)\n     println(\"OPENJDK_REFERENCE_REPO: ${OPENJDK_REFERENCE_REPO}\")\n-    if (!OPENJDK_REFERENCE_REPO) {\n+    if (!check_path(OPENJDK_REFERENCE_REPO)) {\n         println(\"The git cache OPENJDK_REFERENCE_REPO: ${buildspec.getScalarField('openjdk_reference_repo', SDK_VERSION)} does not exist on ${NODE_NAME}!\")\n     }\n }\n \n-def check_path(inPath, isDir) {\n+def check_path(inPath) {\n     if (!inPath) {\n-        return inPath\n+        return false\n     }\n-\n-    def testOption = (isDir) ? \"-d\" : \"-e\"\n-    return sh (script: \"test ${testOption} ${inPath} && echo ${inPath} || echo ''\", returnStdout: true).trim()\n+    return sh (script: \"test -e ${inPath} && echo true || echo false\", returnStdout: true).trim().toBoolean()\n }\n \n+def download_boot_jdk(jdkPath) {\n+    def bootJDKVersion = SDK_VERSION.toInteger() - 1\n+    if ((SDK_VERSION == '8') || (SDK_VERSION == '11')) {\n+        bootJDKVersion = SDK_VERSION\n+    }\n+    def os = buildspec.getScalarField('boot_jdk', 'os')\n+    def arch = buildspec.getScalarField('boot_jdk', 'arch')\n+    def dirStrip = buildspec.getScalarField('boot_jdk', 'dir_strip')\n+    def sdkUrl = \"https://api.adoptopenjdk.net/v3/binary/latest/${bootJDKVersion}/ga/${os}/${arch}/jdk/openj9/normal/adoptopenjdk?project=jdk\"\n+\n+    /*\n+     * Download bootjdk\n+     * Windows are zips from Adopt. Unzip doesn't have strip dir so we have to manually move.\n+     * Remaining platforms are tarballs.\n+     * Mac has some extra dirs to strip off hence $dirStrip.\n+     */\n+    dir('bootjdk') {\n+        sh \"\"\"\n+            env\n+            curl -LJkO ${sdkUrl}\n+            mkdir -p ${jdkPath}\n+            sdkFile=`ls | grep OpenJDK`\n+            env", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6c6fd7d905f07c0f8ea048f561f25c137fa9c17"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMDMxNDE3", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#pullrequestreview-502031417", "createdAt": "2020-10-05T13:02:14Z", "commit": {"oid": "f6c6fd7d905f07c0f8ea048f561f25c137fa9c17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzowMjoxNFrOHccAWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzowMjoxNFrOHccAWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU4MTAxOQ==", "bodyText": "Not sure what bootjdk.tar.gz is connected too.  I'm thinking you mean \"\\$sdkFile\"?", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#discussion_r499581019", "createdAt": "2020-10-05T13:02:14Z", "author": {"login": "jdekonin"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1514,33 +1514,66 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n }\n \n def set_build_variables_per_node() {\n-    BOOT_JDK = check_path(buildspec.getScalarField('boot_jdk', SDK_VERSION), true)\n+    BOOT_JDK = buildspec.getScalarField('boot_jdk.location', SDK_VERSION)\n     println(\"BOOT_JDK: ${BOOT_JDK}\")\n-    if (!BOOT_JDK) {\n-        error(\"BOOT_JDK: ${BOOT_JDK} does not exist!\")\n+    if (!check_path(\"${BOOT_JDK}/bin/java\")) {\n+        echo \"BOOT_JDK: ${BOOT_JDK} does not exist! Attempt to download it...\"\n+        download_boot_jdk(BOOT_JDK)\n     }\n \n-    def freemarkerPath = buildspec.getScalarField('freemarker', SDK_VERSION)\n-    FREEMARKER = check_path(buildspec.getScalarField('freemarker', SDK_VERSION), false)\n+    FREEMARKER = buildspec.getScalarField('freemarker', SDK_VERSION)\n     println(\"FREEMARKER: ${FREEMARKER}\")\n-    if (!FREEMARKER) {\n+    if (!check_path(FREEMARKER)) {\n         error(\"FREEMARKER: ${FREEMARKER} does not exist!\")\n     }\n \n-    OPENJDK_REFERENCE_REPO = check_path(buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION), true)\n+    OPENJDK_REFERENCE_REPO = buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION)\n     println(\"OPENJDK_REFERENCE_REPO: ${OPENJDK_REFERENCE_REPO}\")\n-    if (!OPENJDK_REFERENCE_REPO) {\n+    if (!check_path(OPENJDK_REFERENCE_REPO)) {\n         println(\"The git cache OPENJDK_REFERENCE_REPO: ${buildspec.getScalarField('openjdk_reference_repo', SDK_VERSION)} does not exist on ${NODE_NAME}!\")\n     }\n }\n \n-def check_path(inPath, isDir) {\n+def check_path(inPath) {\n     if (!inPath) {\n-        return inPath\n+        return false\n     }\n-\n-    def testOption = (isDir) ? \"-d\" : \"-e\"\n-    return sh (script: \"test ${testOption} ${inPath} && echo ${inPath} || echo ''\", returnStdout: true).trim()\n+    return sh (script: \"test -e ${inPath} && echo true || echo false\", returnStdout: true).trim().toBoolean()\n }\n \n+def download_boot_jdk(jdkPath) {\n+    def bootJDKVersion = SDK_VERSION.toInteger() - 1\n+    if ((SDK_VERSION == '8') || (SDK_VERSION == '11')) {\n+        bootJDKVersion = SDK_VERSION\n+    }\n+    def os = buildspec.getScalarField('boot_jdk', 'os')\n+    def arch = buildspec.getScalarField('boot_jdk', 'arch')\n+    def dirStrip = buildspec.getScalarField('boot_jdk', 'dir_strip')\n+    def sdkUrl = \"https://api.adoptopenjdk.net/v3/binary/latest/${bootJDKVersion}/ga/${os}/${arch}/jdk/openj9/normal/adoptopenjdk?project=jdk\"\n+\n+    /*\n+     * Download bootjdk\n+     * Windows are zips from Adopt. Unzip doesn't have strip dir so we have to manually move.\n+     * Remaining platforms are tarballs.\n+     * Mac has some extra dirs to strip off hence $dirStrip.\n+     */\n+    dir('bootjdk') {\n+        sh \"\"\"\n+            env\n+            curl -LJkO ${sdkUrl}\n+            mkdir -p ${jdkPath}\n+            sdkFile=`ls | grep OpenJDK`\n+            env\n+            if [[ \"\\$sdkFile\" == *zip ]]; then\n+                unzip \"\\$sdkFile\" -d .\n+                sdkFolder=`ls -d */`\n+                mv \"\\$sdkFolder\"* ${jdkPath}/\n+            else\n+                gzip -cd \"\\$sdkFile\" | tar xof - -C ${jdkPath} --strip=${dirStrip}\n+            fi\n+            ${jdkPath}/bin/java -version\n+            rm -f bootjdk.tar.gz", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6c6fd7d905f07c0f8ea048f561f25c137fa9c17"}, "originalPosition": 75}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6c6fd7d905f07c0f8ea048f561f25c137fa9c17", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f6c6fd7d905f07c0f8ea048f561f25c137fa9c17", "committedDate": "2020-10-03T14:46:06Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads 8 & 11 for JDK8/11.\nDownloads n-1 for other (non-LTS) versions.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "3783c91f1ca44b637fb355c18367cb7feaac92b3", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3783c91f1ca44b637fb355c18367cb7feaac92b3", "committedDate": "2020-10-05T13:33:37Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads 8 & 11 for JDK8/11.\nDownloads n-1 for other (non-LTS) versions.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMDYzNjYw", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#pullrequestreview-502063660", "createdAt": "2020-10-05T13:37:17Z", "commit": {"oid": "3783c91f1ca44b637fb355c18367cb7feaac92b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzozNzoxN1rOHcdbYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzozNzoxN1rOHcdbYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYwNDMyMQ==", "bodyText": "Missed an a here in arch.", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#discussion_r499604321", "createdAt": "2020-10-05T13:37:17Z", "author": {"login": "jdekonin"}, "path": "buildenv/jenkins/variables/defaults.yml", "diffHunk": "@@ -246,11 +250,15 @@ ppc64le_linux_jit:\n s390x_linux:\n   extends: ['debuginfo', 'freemarker', 'openjdk_reference_repo', 'openssl']\n   boot_jdk:\n-    8: '/usr/lib/jvm/adoptojdk-java-s390x-80'\n-    11: '/usr/lib/jvm/adoptojdk-java-11'\n-    14: '/usr/lib/jvm/adoptojdk-java-14'\n-    15: '/usr/lib/jvm/adoptojdk-java-14'\n-    next: '/usr/lib/jvm/adoptojdk-java-15'\n+    location:\n+      8: '/usr/lib/jvm/adoptojdk-java-s390x-80'\n+      11: '/usr/lib/jvm/adoptojdk-java-11'\n+      14: '/usr/lib/jvm/adoptojdk-java-14'\n+      15: '/usr/lib/jvm/adoptojdk-java-14'\n+      next: '/usr/lib/jvm/adoptojdk-java-15'\n+    rch: 's390x'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3783c91f1ca44b637fb355c18367cb7feaac92b3"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMDY2MTk3", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#pullrequestreview-502066197", "createdAt": "2020-10-05T13:39:56Z", "commit": {"oid": "3783c91f1ca44b637fb355c18367cb7feaac92b3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3783c91f1ca44b637fb355c18367cb7feaac92b3", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3783c91f1ca44b637fb355c18367cb7feaac92b3", "committedDate": "2020-10-05T13:33:37Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads 8 & 11 for JDK8/11.\nDownloads n-1 for other (non-LTS) versions.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "79c94c5fd9bc04a0d6ea5cb42586614a2bdb708a", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/79c94c5fd9bc04a0d6ea5cb42586614a2bdb708a", "committedDate": "2020-10-05T14:40:56Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads 8 & 11 for JDK8/11.\nDownloads n-1 for other (non-LTS) versions.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjM1NDA2", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#pullrequestreview-502235406", "createdAt": "2020-10-05T16:41:19Z", "commit": {"oid": "79c94c5fd9bc04a0d6ea5cb42586614a2bdb708a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo0MToxOVrOHclO9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo0MToxOVrOHclO9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczMjIxNA==", "bodyText": "typo", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#discussion_r499732214", "createdAt": "2020-10-05T16:41:19Z", "author": {"login": "pshipton"}, "path": "buildenv/jenkins/variables/defaults.yml", "diffHunk": "@@ -531,7 +555,11 @@ x86-64_windows_xl_uma:\n x86-32_windows:\n   extends: ['debuginfo', 'openjdk_reference_repo', 'openssl_bundle']\n   boot_jdk:\n-    8: '/cygdrive/c/openjdk/jdk7'\n+    locaiton:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79c94c5fd9bc04a0d6ea5cb42586614a2bdb708a"}, "originalPosition": 129}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjM3Mzg1", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#pullrequestreview-502237385", "createdAt": "2020-10-05T16:43:53Z", "commit": {"oid": "79c94c5fd9bc04a0d6ea5cb42586614a2bdb708a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo0Mzo1M1rOHclU8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo0Mzo1M1rOHclU8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczMzc0NQ==", "bodyText": "Did you want to handle .pax and .pax.Z as well?", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#discussion_r499733745", "createdAt": "2020-10-05T16:43:53Z", "author": {"login": "pshipton"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1514,33 +1514,64 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n }\n \n def set_build_variables_per_node() {\n-    BOOT_JDK = check_path(buildspec.getScalarField('boot_jdk', SDK_VERSION), true)\n+    BOOT_JDK = buildspec.getScalarField('boot_jdk.location', SDK_VERSION)\n     println(\"BOOT_JDK: ${BOOT_JDK}\")\n-    if (!BOOT_JDK) {\n-        error(\"BOOT_JDK: ${BOOT_JDK} does not exist!\")\n+    if (!check_path(\"${BOOT_JDK}/bin/java\")) {\n+        echo \"BOOT_JDK: ${BOOT_JDK} does not exist! Attempt to download it...\"\n+        download_boot_jdk(BOOT_JDK)\n     }\n \n-    def freemarkerPath = buildspec.getScalarField('freemarker', SDK_VERSION)\n-    FREEMARKER = check_path(buildspec.getScalarField('freemarker', SDK_VERSION), false)\n+    FREEMARKER = buildspec.getScalarField('freemarker', SDK_VERSION)\n     println(\"FREEMARKER: ${FREEMARKER}\")\n-    if (!FREEMARKER) {\n+    if (!check_path(FREEMARKER)) {\n         error(\"FREEMARKER: ${FREEMARKER} does not exist!\")\n     }\n \n-    OPENJDK_REFERENCE_REPO = check_path(buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION), true)\n+    OPENJDK_REFERENCE_REPO = buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION)\n     println(\"OPENJDK_REFERENCE_REPO: ${OPENJDK_REFERENCE_REPO}\")\n-    if (!OPENJDK_REFERENCE_REPO) {\n+    if (!check_path(OPENJDK_REFERENCE_REPO)) {\n         println(\"The git cache OPENJDK_REFERENCE_REPO: ${buildspec.getScalarField('openjdk_reference_repo', SDK_VERSION)} does not exist on ${NODE_NAME}!\")\n     }\n }\n \n-def check_path(inPath, isDir) {\n+def check_path(inPath) {\n     if (!inPath) {\n-        return inPath\n+        return false\n     }\n-\n-    def testOption = (isDir) ? \"-d\" : \"-e\"\n-    return sh (script: \"test ${testOption} ${inPath} && echo ${inPath} || echo ''\", returnStdout: true).trim()\n+    return sh (script: \"test -e ${inPath} && echo true || echo false\", returnStdout: true).trim().toBoolean()\n }\n \n+def download_boot_jdk(jdkPath) {\n+    def bootJDKVersion = SDK_VERSION.toInteger() - 1\n+    if ((SDK_VERSION == '8') || (SDK_VERSION == '11')) {\n+        bootJDKVersion = SDK_VERSION\n+    }\n+    def os = buildspec.getScalarField('boot_jdk', 'os')\n+    def arch = buildspec.getScalarField('boot_jdk', 'arch')\n+    def dirStrip = buildspec.getScalarField('boot_jdk', 'dir_strip')\n+    def sdkUrl = \"https://api.adoptopenjdk.net/v3/binary/latest/${bootJDKVersion}/ga/${os}/${arch}/jdk/openj9/normal/adoptopenjdk?project=jdk\"\n+\n+    /*\n+     * Download bootjdk\n+     * Windows are zips from Adopt. Unzip doesn't have strip dir so we have to manually move.\n+     * Remaining platforms are tarballs.\n+     * Mac has some extra dirs to strip off hence $dirStrip.\n+     */\n+    dir('bootjdk') {\n+        sh \"\"\"\n+            curl -LJkO ${sdkUrl}\n+            mkdir -p ${jdkPath}\n+            sdkFile=`ls | grep OpenJDK`\n+            if [[ \"\\$sdkFile\" == *zip ]]; then\n+                unzip \"\\$sdkFile\" -d .\n+                sdkFolder=`ls -d */`\n+                mv \"\\$sdkFolder\"* ${jdkPath}/\n+            else\n+                gzip -cd \"\\$sdkFile\" | tar xof - -C ${jdkPath} --strip=${dirStrip}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79c94c5fd9bc04a0d6ea5cb42586614a2bdb708a"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjM5MTA4", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#pullrequestreview-502239108", "createdAt": "2020-10-05T16:46:13Z", "commit": {"oid": "79c94c5fd9bc04a0d6ea5cb42586614a2bdb708a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo0NjoxM1rOHclaOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo0NjoxM1rOHclaOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTczNTA5OQ==", "bodyText": "I don't think this will put it into jdkPath.", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#discussion_r499735099", "createdAt": "2020-10-05T16:46:13Z", "author": {"login": "pshipton"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1514,33 +1514,64 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n }\n \n def set_build_variables_per_node() {\n-    BOOT_JDK = check_path(buildspec.getScalarField('boot_jdk', SDK_VERSION), true)\n+    BOOT_JDK = buildspec.getScalarField('boot_jdk.location', SDK_VERSION)\n     println(\"BOOT_JDK: ${BOOT_JDK}\")\n-    if (!BOOT_JDK) {\n-        error(\"BOOT_JDK: ${BOOT_JDK} does not exist!\")\n+    if (!check_path(\"${BOOT_JDK}/bin/java\")) {\n+        echo \"BOOT_JDK: ${BOOT_JDK} does not exist! Attempt to download it...\"\n+        download_boot_jdk(BOOT_JDK)\n     }\n \n-    def freemarkerPath = buildspec.getScalarField('freemarker', SDK_VERSION)\n-    FREEMARKER = check_path(buildspec.getScalarField('freemarker', SDK_VERSION), false)\n+    FREEMARKER = buildspec.getScalarField('freemarker', SDK_VERSION)\n     println(\"FREEMARKER: ${FREEMARKER}\")\n-    if (!FREEMARKER) {\n+    if (!check_path(FREEMARKER)) {\n         error(\"FREEMARKER: ${FREEMARKER} does not exist!\")\n     }\n \n-    OPENJDK_REFERENCE_REPO = check_path(buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION), true)\n+    OPENJDK_REFERENCE_REPO = buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION)\n     println(\"OPENJDK_REFERENCE_REPO: ${OPENJDK_REFERENCE_REPO}\")\n-    if (!OPENJDK_REFERENCE_REPO) {\n+    if (!check_path(OPENJDK_REFERENCE_REPO)) {\n         println(\"The git cache OPENJDK_REFERENCE_REPO: ${buildspec.getScalarField('openjdk_reference_repo', SDK_VERSION)} does not exist on ${NODE_NAME}!\")\n     }\n }\n \n-def check_path(inPath, isDir) {\n+def check_path(inPath) {\n     if (!inPath) {\n-        return inPath\n+        return false\n     }\n-\n-    def testOption = (isDir) ? \"-d\" : \"-e\"\n-    return sh (script: \"test ${testOption} ${inPath} && echo ${inPath} || echo ''\", returnStdout: true).trim()\n+    return sh (script: \"test -e ${inPath} && echo true || echo false\", returnStdout: true).trim().toBoolean()\n }\n \n+def download_boot_jdk(jdkPath) {\n+    def bootJDKVersion = SDK_VERSION.toInteger() - 1\n+    if ((SDK_VERSION == '8') || (SDK_VERSION == '11')) {\n+        bootJDKVersion = SDK_VERSION\n+    }\n+    def os = buildspec.getScalarField('boot_jdk', 'os')\n+    def arch = buildspec.getScalarField('boot_jdk', 'arch')\n+    def dirStrip = buildspec.getScalarField('boot_jdk', 'dir_strip')\n+    def sdkUrl = \"https://api.adoptopenjdk.net/v3/binary/latest/${bootJDKVersion}/ga/${os}/${arch}/jdk/openj9/normal/adoptopenjdk?project=jdk\"\n+\n+    /*\n+     * Download bootjdk\n+     * Windows are zips from Adopt. Unzip doesn't have strip dir so we have to manually move.\n+     * Remaining platforms are tarballs.\n+     * Mac has some extra dirs to strip off hence $dirStrip.\n+     */\n+    dir('bootjdk') {\n+        sh \"\"\"\n+            curl -LJkO ${sdkUrl}\n+            mkdir -p ${jdkPath}\n+            sdkFile=`ls | grep OpenJDK`\n+            if [[ \"\\$sdkFile\" == *zip ]]; then\n+                unzip \"\\$sdkFile\" -d .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79c94c5fd9bc04a0d6ea5cb42586614a2bdb708a"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjQ5NDUx", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#pullrequestreview-502249451", "createdAt": "2020-10-05T16:59:26Z", "commit": {"oid": "79c94c5fd9bc04a0d6ea5cb42586614a2bdb708a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo1OToyNlrOHcl4Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjo1OToyNlrOHcl4Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0Mjc5MA==", "bodyText": "This should clean up the $sdkFolder", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#discussion_r499742790", "createdAt": "2020-10-05T16:59:26Z", "author": {"login": "pshipton"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1514,33 +1514,64 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n }\n \n def set_build_variables_per_node() {\n-    BOOT_JDK = check_path(buildspec.getScalarField('boot_jdk', SDK_VERSION), true)\n+    BOOT_JDK = buildspec.getScalarField('boot_jdk.location', SDK_VERSION)\n     println(\"BOOT_JDK: ${BOOT_JDK}\")\n-    if (!BOOT_JDK) {\n-        error(\"BOOT_JDK: ${BOOT_JDK} does not exist!\")\n+    if (!check_path(\"${BOOT_JDK}/bin/java\")) {\n+        echo \"BOOT_JDK: ${BOOT_JDK} does not exist! Attempt to download it...\"\n+        download_boot_jdk(BOOT_JDK)\n     }\n \n-    def freemarkerPath = buildspec.getScalarField('freemarker', SDK_VERSION)\n-    FREEMARKER = check_path(buildspec.getScalarField('freemarker', SDK_VERSION), false)\n+    FREEMARKER = buildspec.getScalarField('freemarker', SDK_VERSION)\n     println(\"FREEMARKER: ${FREEMARKER}\")\n-    if (!FREEMARKER) {\n+    if (!check_path(FREEMARKER)) {\n         error(\"FREEMARKER: ${FREEMARKER} does not exist!\")\n     }\n \n-    OPENJDK_REFERENCE_REPO = check_path(buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION), true)\n+    OPENJDK_REFERENCE_REPO = buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION)\n     println(\"OPENJDK_REFERENCE_REPO: ${OPENJDK_REFERENCE_REPO}\")\n-    if (!OPENJDK_REFERENCE_REPO) {\n+    if (!check_path(OPENJDK_REFERENCE_REPO)) {\n         println(\"The git cache OPENJDK_REFERENCE_REPO: ${buildspec.getScalarField('openjdk_reference_repo', SDK_VERSION)} does not exist on ${NODE_NAME}!\")\n     }\n }\n \n-def check_path(inPath, isDir) {\n+def check_path(inPath) {\n     if (!inPath) {\n-        return inPath\n+        return false\n     }\n-\n-    def testOption = (isDir) ? \"-d\" : \"-e\"\n-    return sh (script: \"test ${testOption} ${inPath} && echo ${inPath} || echo ''\", returnStdout: true).trim()\n+    return sh (script: \"test -e ${inPath} && echo true || echo false\", returnStdout: true).trim().toBoolean()\n }\n \n+def download_boot_jdk(jdkPath) {\n+    def bootJDKVersion = SDK_VERSION.toInteger() - 1\n+    if ((SDK_VERSION == '8') || (SDK_VERSION == '11')) {\n+        bootJDKVersion = SDK_VERSION\n+    }\n+    def os = buildspec.getScalarField('boot_jdk', 'os')\n+    def arch = buildspec.getScalarField('boot_jdk', 'arch')\n+    def dirStrip = buildspec.getScalarField('boot_jdk', 'dir_strip')\n+    def sdkUrl = \"https://api.adoptopenjdk.net/v3/binary/latest/${bootJDKVersion}/ga/${os}/${arch}/jdk/openj9/normal/adoptopenjdk?project=jdk\"\n+\n+    /*\n+     * Download bootjdk\n+     * Windows are zips from Adopt. Unzip doesn't have strip dir so we have to manually move.\n+     * Remaining platforms are tarballs.\n+     * Mac has some extra dirs to strip off hence $dirStrip.\n+     */\n+    dir('bootjdk') {\n+        sh \"\"\"\n+            curl -LJkO ${sdkUrl}\n+            mkdir -p ${jdkPath}\n+            sdkFile=`ls | grep OpenJDK`\n+            if [[ \"\\$sdkFile\" == *zip ]]; then\n+                unzip \"\\$sdkFile\" -d .\n+                sdkFolder=`ls -d */`\n+                mv \"\\$sdkFolder\"* ${jdkPath}/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79c94c5fd9bc04a0d6ea5cb42586614a2bdb708a"}, "originalPosition": 68}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79c94c5fd9bc04a0d6ea5cb42586614a2bdb708a", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/79c94c5fd9bc04a0d6ea5cb42586614a2bdb708a", "committedDate": "2020-10-05T14:40:56Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads 8 & 11 for JDK8/11.\nDownloads n-1 for other (non-LTS) versions.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "9cdf270da252a00072e782079fdb2eb288f73fd1", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9cdf270da252a00072e782079fdb2eb288f73fd1", "committedDate": "2020-10-05T17:01:58Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads 8 & 11 for JDK8/11.\nDownloads n-1 for other (non-LTS) versions.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjU2MTQw", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#pullrequestreview-502256140", "createdAt": "2020-10-05T17:08:34Z", "commit": {"oid": "9cdf270da252a00072e782079fdb2eb288f73fd1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzowODozNFrOHcmLng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzowODozNFrOHcmLng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc0Nzc0Mg==", "bodyText": "This won't work for next. Let me fix.", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#discussion_r499747742", "createdAt": "2020-10-05T17:08:34Z", "author": {"login": "AdamBrousseau"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -1514,33 +1514,64 @@ def create_job(JOB_NAME, SDK_VERSION, SPEC, downstreamJobType, id) {\n }\n \n def set_build_variables_per_node() {\n-    BOOT_JDK = check_path(buildspec.getScalarField('boot_jdk', SDK_VERSION), true)\n+    BOOT_JDK = buildspec.getScalarField('boot_jdk.location', SDK_VERSION)\n     println(\"BOOT_JDK: ${BOOT_JDK}\")\n-    if (!BOOT_JDK) {\n-        error(\"BOOT_JDK: ${BOOT_JDK} does not exist!\")\n+    if (!check_path(\"${BOOT_JDK}/bin/java\")) {\n+        echo \"BOOT_JDK: ${BOOT_JDK} does not exist! Attempt to download it...\"\n+        download_boot_jdk(BOOT_JDK)\n     }\n \n-    def freemarkerPath = buildspec.getScalarField('freemarker', SDK_VERSION)\n-    FREEMARKER = check_path(buildspec.getScalarField('freemarker', SDK_VERSION), false)\n+    FREEMARKER = buildspec.getScalarField('freemarker', SDK_VERSION)\n     println(\"FREEMARKER: ${FREEMARKER}\")\n-    if (!FREEMARKER) {\n+    if (!check_path(FREEMARKER)) {\n         error(\"FREEMARKER: ${FREEMARKER} does not exist!\")\n     }\n \n-    OPENJDK_REFERENCE_REPO = check_path(buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION), true)\n+    OPENJDK_REFERENCE_REPO = buildspec.getScalarField(\"openjdk_reference_repo\", SDK_VERSION)\n     println(\"OPENJDK_REFERENCE_REPO: ${OPENJDK_REFERENCE_REPO}\")\n-    if (!OPENJDK_REFERENCE_REPO) {\n+    if (!check_path(OPENJDK_REFERENCE_REPO)) {\n         println(\"The git cache OPENJDK_REFERENCE_REPO: ${buildspec.getScalarField('openjdk_reference_repo', SDK_VERSION)} does not exist on ${NODE_NAME}!\")\n     }\n }\n \n-def check_path(inPath, isDir) {\n+def check_path(inPath) {\n     if (!inPath) {\n-        return inPath\n+        return false\n     }\n-\n-    def testOption = (isDir) ? \"-d\" : \"-e\"\n-    return sh (script: \"test ${testOption} ${inPath} && echo ${inPath} || echo ''\", returnStdout: true).trim()\n+    return sh (script: \"test -e ${inPath} && echo true || echo false\", returnStdout: true).trim().toBoolean()\n }\n \n+def download_boot_jdk(jdkPath) {\n+    def bootJDKVersion = SDK_VERSION.toInteger() - 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cdf270da252a00072e782079fdb2eb288f73fd1"}, "originalPosition": 45}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b966e089c73be27cae19f3f9f57e0766b842105a", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b966e089c73be27cae19f3f9f57e0766b842105a", "committedDate": "2020-10-05T18:06:08Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "4ceea11cf4f70150e731aacb73d8518e31d4e9e2", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4ceea11cf4f70150e731aacb73d8518e31d4e9e2", "committedDate": "2020-10-05T18:12:25Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ceea11cf4f70150e731aacb73d8518e31d4e9e2", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4ceea11cf4f70150e731aacb73d8518e31d4e9e2", "committedDate": "2020-10-05T18:12:25Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "149a6f520ac901d3bb98fbb79c991540b523bb56", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/149a6f520ac901d3bb98fbb79c991540b523bb56", "committedDate": "2020-10-05T18:13:53Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "149a6f520ac901d3bb98fbb79c991540b523bb56", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/149a6f520ac901d3bb98fbb79c991540b523bb56", "committedDate": "2020-10-05T18:13:53Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "f6837b96b29d985d1abb2d1dc52b3762acf0da07", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f6837b96b29d985d1abb2d1dc52b3762acf0da07", "committedDate": "2020-10-05T18:39:14Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f6837b96b29d985d1abb2d1dc52b3762acf0da07", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f6837b96b29d985d1abb2d1dc52b3762acf0da07", "committedDate": "2020-10-05T18:39:14Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "daab1a83dec38fee09089c6f13b6a2a8b7921f73", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/daab1a83dec38fee09089c6f13b6a2a8b7921f73", "committedDate": "2020-10-05T18:42:21Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "daab1a83dec38fee09089c6f13b6a2a8b7921f73", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/daab1a83dec38fee09089c6f13b6a2a8b7921f73", "committedDate": "2020-10-05T18:42:21Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "2a36f8eb89419340806cf101a4b949227dfa1a9f", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2a36f8eb89419340806cf101a4b949227dfa1a9f", "committedDate": "2020-10-06T03:03:18Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a36f8eb89419340806cf101a4b949227dfa1a9f", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2a36f8eb89419340806cf101a4b949227dfa1a9f", "committedDate": "2020-10-06T03:03:18Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "db57a548422d03fe93763b5691f65caa1eeae2a7", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/db57a548422d03fe93763b5691f65caa1eeae2a7", "committedDate": "2020-10-06T03:45:08Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db57a548422d03fe93763b5691f65caa1eeae2a7", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/db57a548422d03fe93763b5691f65caa1eeae2a7", "committedDate": "2020-10-06T03:45:08Z", "message": "debug [skip ci]\n\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "3c9d947cbe478acf38da3492280a909237e06326", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3c9d947cbe478acf38da3492280a909237e06326", "committedDate": "2020-10-06T04:53:26Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads version specified\nin the variable file.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3c9d947cbe478acf38da3492280a909237e06326", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3c9d947cbe478acf38da3492280a909237e06326", "committedDate": "2020-10-06T04:53:26Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads version specified\nin the variable file.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "e847575b61eb9002f0e3e2b5fd686bb6a842fbca", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e847575b61eb9002f0e3e2b5fd686bb6a842fbca", "committedDate": "2020-10-06T12:25:44Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads version specified\nin the variable file.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e847575b61eb9002f0e3e2b5fd686bb6a842fbca", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e847575b61eb9002f0e3e2b5fd686bb6a842fbca", "committedDate": "2020-10-06T12:25:44Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads version specified\nin the variable file.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "dfca97c4dabae49462edf50a2ae6634d4507e4d7", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/dfca97c4dabae49462edf50a2ae6634d4507e4d7", "committedDate": "2020-10-06T12:39:00Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads version specified\nin the variable file.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTgxMTgz", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#pullrequestreview-503181183", "createdAt": "2020-10-06T17:06:11Z", "commit": {"oid": "dfca97c4dabae49462edf50a2ae6634d4507e4d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzowNjoxMVrOHdRmQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzowNjoxMVrOHdRmQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ1OTA3NQ==", "bodyText": "We can use 15 to build 15, since it's already GAed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#discussion_r500459075", "createdAt": "2020-10-06T17:06:11Z", "author": {"login": "pshipton"}, "path": "buildenv/jenkins/variables/defaults.yml", "diffHunk": "@@ -166,6 +166,20 @@ freemarker:\n openjdk_reference_repo:\n   openjdk_reference_repo: '/home/jenkins/openjdk_cache'\n #========================================#\n+# BootJDK Default values\n+#========================================#\n+boot_jdk_default:\n+  boot_jdk:\n+    location:\n+      all: '${HOME}/bootjdks'\n+    version:\n+      8: '8'\n+      11: '11'\n+      15: '14'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfca97c4dabae49462edf50a2ae6634d4507e4d7"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTg0NTM0", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#pullrequestreview-503184534", "createdAt": "2020-10-06T17:10:15Z", "commit": {"oid": "dfca97c4dabae49462edf50a2ae6634d4507e4d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzoxMDoxNVrOHdRwEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzoxMDoxNVrOHdRwEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2MTU4NQ==", "bodyText": "How does this work? There isn't any Openj9 Aarch64 build at Adopt for Java 15.", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#discussion_r500461585", "createdAt": "2020-10-06T17:10:15Z", "author": {"login": "pshipton"}, "path": "buildenv/jenkins/variables/defaults.yml", "diffHunk": "@@ -432,12 +435,15 @@ x86-64_linux_valhalla:\n # Linux Aarch 64bits Compressed Pointers\n #========================================#\n aarch64_linux:\n-  extends: ['debuginfo', 'freemarker', 'openjdk_reference_repo', 'openssl']\n+  extends: ['boot_jdk_default', 'debuginfo', 'freemarker', 'openjdk_reference_repo', 'openssl']\n   boot_jdk:\n-    8: '/usr/lib/jvm/java-1.8.0'\n-    11: '/usr/lib/jvm/adoptojdk-java-11'\n-    15: '/usr/lib/jvm/jdk-15+36'\n-    next: '/usr/lib/jvm/jdk-15+36'\n+    version:\n+      8: '8'\n+      11: '11'\n+      15: '15'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfca97c4dabae49462edf50a2ae6634d4507e4d7"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1f35d61ae243e41078dd6fd9ebc29bb6e485282", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b1f35d61ae243e41078dd6fd9ebc29bb6e485282", "committedDate": "2020-10-06T18:15:40Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads version specified\nin the variable file.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dfca97c4dabae49462edf50a2ae6634d4507e4d7", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/dfca97c4dabae49462edf50a2ae6634d4507e4d7", "committedDate": "2020-10-06T12:39:00Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads version specified\nin the variable file.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}, "afterCommit": {"oid": "b1f35d61ae243e41078dd6fd9ebc29bb6e485282", "author": {"user": {"login": "AdamBrousseau", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b1f35d61ae243e41078dd6fd9ebc29bb6e485282", "committedDate": "2020-10-06T18:15:40Z", "message": "Auto download bootjdk\n\nIf bootjdk is not present on the system in the\nlocation provided, attempt to pull one from Adopt\nand unpack it to that same location.\n\nAssumes build user has write permissions in the\nlocation provided. Downloads version specified\nin the variable file.\n\nAlso reworks function check_path to return a bool\nrather than either a string or empty string.\n\n[skip ci]\nSigned-off-by: Adam Brousseau <adam.brousseau88@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjU5MTI2", "url": "https://github.com/eclipse-openj9/openj9/pull/10779#pullrequestreview-503259126", "createdAt": "2020-10-06T18:44:05Z", "commit": {"oid": "b1f35d61ae243e41078dd6fd9ebc29bb6e485282"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 373, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}