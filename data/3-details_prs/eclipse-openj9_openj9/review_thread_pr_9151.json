{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMTM0OTY5", "number": 9151, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzozODo0NlrODv_1bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzo0NzoyNlrODwAEwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNjU1NTMyOnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/MethodMetaData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzozODo0NlrOGCvsfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMDo0ODo1N1rOGDF5LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzMTc3NQ==", "bodyText": "What is the intent here? If the goal is to select just 16 bits, the constant must change to 0xFFFF0000L.\nsavedGPRs = registerSaveDescription.bitAnd(0xFFFF0000L);\n\nIf we want 24 bits, the mask should be 0xFFFFFFFFFFFF0000L.\nsavedGPRs = registerSaveDescription.bitAnd(0xFFFFFFFFFFFF0000L);\n\nAlso notice there's no need to construct the intermediate UDATA object.", "url": "https://github.com/eclipse-openj9/openj9/pull/9151#discussion_r405531775", "createdAt": "2020-04-08T13:38:46Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/MethodMetaData.java", "diffHunk": "@@ -516,6 +516,27 @@ public void jitAddSpilledRegisters(WalkState walkState, VoidPointer stackMap) th\n \t\t\t\t\t}\n \t\t\t\t\twhile (! savedGPRs.eq(0));\n \t\t\t\t}\n+\t\t\t} else if (J9ConfigFlags.arch_aarch64) {\n+\t\t\t\tsavedGPRs = registerSaveDescription.bitAnd(new UDATA(0xFFFF0000));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9f4d74ea6426869fcdedae21d4d08b72401725"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5NTQ2OQ==", "bodyText": "I changed the constant to 0xFFFF0000L as we need 16bit.", "url": "https://github.com/eclipse-openj9/openj9/pull/9151#discussion_r405895469", "createdAt": "2020-04-09T00:48:57Z", "author": {"login": "Akira1Saitoh"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/MethodMetaData.java", "diffHunk": "@@ -516,6 +516,27 @@ public void jitAddSpilledRegisters(WalkState walkState, VoidPointer stackMap) th\n \t\t\t\t\t}\n \t\t\t\t\twhile (! savedGPRs.eq(0));\n \t\t\t\t}\n+\t\t\t} else if (J9ConfigFlags.arch_aarch64) {\n+\t\t\t\tsavedGPRs = registerSaveDescription.bitAnd(new UDATA(0xFFFF0000));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzMTc3NQ=="}, "originalCommit": {"oid": "bb9f4d74ea6426869fcdedae21d4d08b72401725"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNjU4NjA2OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/MethodMetaData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzo0NTozNFrOGCv_ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMDo0OToyNVrOGDF5xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNjYxOA==", "bodyText": "It doesn't appear that i is needed.\nAlso, please fix formatting:\n\tif (!savedGPRs.eq(0)) {\n\t\tsaveOffset = registerSaveDescription.bitAnd(0xFFFF);\n\t\tsaveCursor = walkState.bp.subOffset(saveOffset);\n\t\tdo {\n\t\t\tif (savedGPRs.anyBitsIn(1)) {\n\t\t\t\twalkState.registerEAs[mapCursor] = saveCursor;\n\t\t\t\tsaveCursor = saveCursor.add(1);\n\t\t\t}\n\t\t\t++mapCursor;\n\t\t\tsavedGPRs = savedGPRs.rightShift(1);\n\t\t} while (!savedGPRs.eq(0));\n\t}", "url": "https://github.com/eclipse-openj9/openj9/pull/9151#discussion_r405536618", "createdAt": "2020-04-08T13:45:34Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/MethodMetaData.java", "diffHunk": "@@ -516,6 +516,27 @@ public void jitAddSpilledRegisters(WalkState walkState, VoidPointer stackMap) th\n \t\t\t\t\t}\n \t\t\t\t\twhile (! savedGPRs.eq(0));\n \t\t\t\t}\n+\t\t\t} else if (J9ConfigFlags.arch_aarch64) {\n+\t\t\t\tsavedGPRs = registerSaveDescription.bitAnd(new UDATA(0xFFFF0000));\n+\n+\t\t\t\tif (! savedGPRs.eq(0))\n+\t\t\t\t{\n+\t\t\t\t\tsaveOffset = registerSaveDescription.bitAnd(new UDATA(0xFFFF));\n+\t\t\t\t\tsaveCursor = walkState.bp.subOffset(saveOffset);\n+\t\t\t\t\tU8 i = new U8(1);\n+\t\t\t\t\tdo\n+\t\t\t\t\t{\n+\t\t\t\t\t\tif (savedGPRs.anyBitsIn(1))\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\twalkState.registerEAs[mapCursor] = saveCursor;\n+\t\t\t\t\t\t\tsaveCursor = saveCursor.add(1);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\ti = i.add(1);\n+\t\t\t\t\t\t++mapCursor;\n+\t\t\t\t\t\tsavedGPRs = savedGPRs.rightShift(1);\n+\t\t\t\t\t}\n+\t\t\t\t\twhile (! savedGPRs.eq(0));\n+\t\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9f4d74ea6426869fcdedae21d4d08b72401725"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5NTYyMQ==", "bodyText": "Removed i and fixed formatting.", "url": "https://github.com/eclipse-openj9/openj9/pull/9151#discussion_r405895621", "createdAt": "2020-04-09T00:49:25Z", "author": {"login": "Akira1Saitoh"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/MethodMetaData.java", "diffHunk": "@@ -516,6 +516,27 @@ public void jitAddSpilledRegisters(WalkState walkState, VoidPointer stackMap) th\n \t\t\t\t\t}\n \t\t\t\t\twhile (! savedGPRs.eq(0));\n \t\t\t\t}\n+\t\t\t} else if (J9ConfigFlags.arch_aarch64) {\n+\t\t\t\tsavedGPRs = registerSaveDescription.bitAnd(new UDATA(0xFFFF0000));\n+\n+\t\t\t\tif (! savedGPRs.eq(0))\n+\t\t\t\t{\n+\t\t\t\t\tsaveOffset = registerSaveDescription.bitAnd(new UDATA(0xFFFF));\n+\t\t\t\t\tsaveCursor = walkState.bp.subOffset(saveOffset);\n+\t\t\t\t\tU8 i = new U8(1);\n+\t\t\t\t\tdo\n+\t\t\t\t\t{\n+\t\t\t\t\t\tif (savedGPRs.anyBitsIn(1))\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\twalkState.registerEAs[mapCursor] = saveCursor;\n+\t\t\t\t\t\t\tsaveCursor = saveCursor.add(1);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\ti = i.add(1);\n+\t\t\t\t\t\t++mapCursor;\n+\t\t\t\t\t\tsavedGPRs = savedGPRs.rightShift(1);\n+\t\t\t\t\t}\n+\t\t\t\t\twhile (! savedGPRs.eq(0));\n+\t\t\t\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNjYxOA=="}, "originalCommit": {"oid": "bb9f4d74ea6426869fcdedae21d4d08b72401725"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNjU5NDU4OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/MethodMetaData.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzo0NzoyNlrOGCwEsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMDo0OTo1NVrOGDF6VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNzk3MA==", "bodyText": "Please format comment with * beginning the second and subsequent lines.\n\t/* AArch64 data resolve shape\n\t * 29 integer registers (not saving x29/x30/x31)\n\t */", "url": "https://github.com/eclipse-openj9/openj9/pull/9151#discussion_r405537970", "createdAt": "2020-04-08T13:47:26Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/MethodMetaData.java", "diffHunk": "@@ -569,6 +590,11 @@ public UDATA getJitDataResolvePushes() throws CorruptDataException {\n \t\t\t\t   12 slots saved integer registers\n \t\t\t\t*/\n \t\t\t\treturn new UDATA(12);\n+\t\t\t} else if (J9ConfigFlags.arch_aarch64) {\n+\t\t\t\t/* AArch64 data resolve shape\n+\t\t\t\t   29 integer registers (not saving x29/x30/x31)\n+\t\t\t\t*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9f4d74ea6426869fcdedae21d4d08b72401725"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5NTc2NA==", "bodyText": "Fixed format of the comment.", "url": "https://github.com/eclipse-openj9/openj9/pull/9151#discussion_r405895764", "createdAt": "2020-04-09T00:49:55Z", "author": {"login": "Akira1Saitoh"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/stackwalker/MethodMetaData.java", "diffHunk": "@@ -569,6 +590,11 @@ public UDATA getJitDataResolvePushes() throws CorruptDataException {\n \t\t\t\t   12 slots saved integer registers\n \t\t\t\t*/\n \t\t\t\treturn new UDATA(12);\n+\t\t\t} else if (J9ConfigFlags.arch_aarch64) {\n+\t\t\t\t/* AArch64 data resolve shape\n+\t\t\t\t   29 integer registers (not saving x29/x30/x31)\n+\t\t\t\t*/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUzNzk3MA=="}, "originalCommit": {"oid": "bb9f4d74ea6426869fcdedae21d4d08b72401725"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 351, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}