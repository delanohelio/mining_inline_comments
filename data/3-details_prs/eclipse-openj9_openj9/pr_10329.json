{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyOTQxNDg5", "number": 10329, "title": "Selectively enforce lookup class package check", "bodyText": "Only following APIs are subject to lookup class package check (matching RI behaviours):\nMethodHandles.Lookup.in\u200b(Class<?> lookupClass)\nMethodHandles.Lookup.dropLookupMode\u200b(int modeToDrop)\nMethodHandles.Lookup.privateLookupIn\u200b(Class<?> targetClass, MethodHandles.Lookup caller)\n\nThe change only applies to JDK15. The package check stays same for pre-JDK15 levels.\ncloses: #9656\nSigned-off-by: Jason Feng fengj@ca.ibm.com", "createdAt": "2020-08-04T18:53:13Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10329", "merged": true, "mergeCommit": {"oid": "cf890cc6f4ebe68d4dea53f74e7446a9ea8dd66a"}, "closed": true, "closedAt": "2020-08-06T17:32:43Z", "author": {"login": "JasonFengJ9"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8Q4fFgFqTQ2MjU4MTY0NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8TVvigFqTQ2MjcyNzk0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNTgxNjQ0", "url": "https://github.com/eclipse-openj9/openj9/pull/10329#pullrequestreview-462581644", "createdAt": "2020-08-06T14:36:35Z", "commit": {"oid": "95985f5e4fdaef53e8ae4ff4edd7a09977a7a08a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDozNjozNVrOG82c8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDo0MToxNlrOG82pYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ1OTg4OA==", "bodyText": "This looks wrong - code that's explicitly asking for the check should be updated for 15 rather than discarding the value here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10329#discussion_r466459888", "createdAt": "2020-08-06T14:36:35Z", "author": {"login": "DanHeidinga"}, "path": "jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java", "diffHunk": "@@ -216,11 +216,23 @@\n \t\t}\n \t\t\n \t\tLookup(Class<?> lookupClass, Class<?> prevLookupClass, int lookupMode) {\n-\t\t\tthis(lookupClass, prevLookupClass, lookupMode, true);\n+\t\t\tthis(lookupClass, prevLookupClass, lookupMode,\n+\t\t\t/*[IF Java15]\n+\t\t\t\tfalse\n+\t\t\t/*[ELSE] Java15*/\n+\t\t\t\ttrue\n+\t\t\t/*[ENDIF] Java15*/\n+\t\t\t);\n \t\t}\n \t\t\n \t\tLookup(Class<?> lookupClass, int lookupMode, boolean doCheck) {\n-\t\t\tthis(lookupClass, null, lookupMode, doCheck);\n+\t\t\tthis(lookupClass, null, lookupMode,\n+\t\t\t/*[IF Java15]\n+\t\t\t\tfalse\n+\t\t\t/*[ELSE] Java15*/\n+\t\t\t\tdoCheck\n+\t\t\t/*[ENDIF] Java15*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95985f5e4fdaef53e8ae4ff4edd7a09977a7a08a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ2MzA3Mg==", "bodyText": "Something like this may be clearer by putting the behaviour in a helper method like lookupJLIPackageCheckDefault\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tthis(lookupClass, prevLookupClass, lookupMode,\n          \n          \n            \n            \t\t\t/*[IF Java15]\n          \n          \n            \n            \t\t\t\tfalse\n          \n          \n            \n            \t\t\t/*[ELSE] Java15*/\n          \n          \n            \n            \t\t\t\ttrue\n          \n          \n            \n            \t\t\t/*[ENDIF] Java15*/\n          \n          \n            \n            \t\t\t);\n          \n          \n            \n            \t\t\tthis(lookupClass, prevLookupClass, lookupMode, lookupJLIPackageCheckDefault());\n          \n          \n            \n            \t\t}\n          \n          \n            \n            \n          \n          \n            \n            /* For Java 15, the default is not to check for the \"java.lang.invoke\" package.\n          \n          \n            \n             * For earlier releases, these lookups are illegal\n          \n          \n            \n              */\n          \n          \n            \n            static boolean lookupJLIPackageCheckDefault() {\n          \n          \n            \n            \t/*[IF Java15]\n          \n          \n            \n            \treturn false;\n          \n          \n            \n            \t/*[ELSE] Java15*/\n          \n          \n            \n            \treturn true;\n          \n          \n            \n            \t/*[ENDIF] Java15*/\n          \n          \n            \n            }", "url": "https://github.com/eclipse-openj9/openj9/pull/10329#discussion_r466463072", "createdAt": "2020-08-06T14:41:16Z", "author": {"login": "DanHeidinga"}, "path": "jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java", "diffHunk": "@@ -216,11 +216,23 @@\n \t\t}\n \t\t\n \t\tLookup(Class<?> lookupClass, Class<?> prevLookupClass, int lookupMode) {\n-\t\t\tthis(lookupClass, prevLookupClass, lookupMode, true);\n+\t\t\tthis(lookupClass, prevLookupClass, lookupMode,\n+\t\t\t/*[IF Java15]\n+\t\t\t\tfalse\n+\t\t\t/*[ELSE] Java15*/\n+\t\t\t\ttrue\n+\t\t\t/*[ENDIF] Java15*/\n+\t\t\t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95985f5e4fdaef53e8ae4ff4edd7a09977a7a08a"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52293889c8063582d0cc7c997c07470ef06eb9d4", "author": {"user": {"login": "JasonFengJ9", "name": "Jason Feng"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/52293889c8063582d0cc7c997c07470ef06eb9d4", "committedDate": "2020-08-06T15:14:11Z", "message": "Selectively enforce lookup class package check\n\nOnly following APIs are subject to lookup class package check:\n\nMethodHandles.Lookup\t.in\u200b(Class<?> lookupClass)\nMethodHandles.Lookup.dropLookupMode\u200b(int modeToDrop)\nMethodHandles.Lookup\t.privateLookupIn\u200b(Class<?> targetClass,\nMethodHandles.Lookup caller)\n\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95985f5e4fdaef53e8ae4ff4edd7a09977a7a08a", "author": {"user": {"login": "JasonFengJ9", "name": "Jason Feng"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/95985f5e4fdaef53e8ae4ff4edd7a09977a7a08a", "committedDate": "2020-08-04T18:41:30Z", "message": "Selectively enforce lookup class package check\n\nOnly following APIs are subject to lookup class package check:\n\nMethodHandles.Lookup\t.in\u200b(Class<?> lookupClass)\nMethodHandles.Lookup.dropLookupMode\u200b(int modeToDrop)\nMethodHandles.Lookup\t.privateLookupIn\u200b(Class<?> targetClass,\nMethodHandles.Lookup caller)\n\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>"}, "afterCommit": {"oid": "52293889c8063582d0cc7c997c07470ef06eb9d4", "author": {"user": {"login": "JasonFengJ9", "name": "Jason Feng"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/52293889c8063582d0cc7c997c07470ef06eb9d4", "committedDate": "2020-08-06T15:14:11Z", "message": "Selectively enforce lookup class package check\n\nOnly following APIs are subject to lookup class package check:\n\nMethodHandles.Lookup\t.in\u200b(Class<?> lookupClass)\nMethodHandles.Lookup.dropLookupMode\u200b(int modeToDrop)\nMethodHandles.Lookup\t.privateLookupIn\u200b(Class<?> targetClass,\nMethodHandles.Lookup caller)\n\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNzI3OTQ0", "url": "https://github.com/eclipse-openj9/openj9/pull/10329#pullrequestreview-462727944", "createdAt": "2020-08-06T17:24:11Z", "commit": {"oid": "52293889c8063582d0cc7c997c07470ef06eb9d4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoyNDoxMVrOG89JnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoyNTozN1rOG89OVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2OTYyOQ==", "bodyText": "This doesn't look right as it discards doCheck.  It should be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tthis(lookupClass, null, lookupMode, lookupJLIPackageCheckDefault());\n          \n          \n            \n            \t\t\tthis(lookupClass, null, lookupMode, doCheck);\n          \n      \n    \n    \n  \n\nIt's up to the calling code to pass the right default or not supply one by using a different ctor.", "url": "https://github.com/eclipse-openj9/openj9/pull/10329#discussion_r466569629", "createdAt": "2020-08-06T17:24:11Z", "author": {"login": "DanHeidinga"}, "path": "jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java", "diffHunk": "@@ -215,12 +215,23 @@\n \t\t\taccessMode = lookupMode;\n \t\t}\n \t\t\n+\t\t/* For Java 15, the default is not to check for the \"java.lang.invoke\" package.\n+\t\t * For earlier releases, these lookups are illegal\n+\t\t  */\n+\t\tprivate static boolean lookupJLIPackageCheckDefault() {\n+\t\t\t/*[IF Java15]\n+\t\t\treturn false;\n+\t\t\t/*[ELSE] Java15*/\n+\t\t\treturn true;\n+\t\t\t/*[ENDIF] Java15*/\n+\t\t}\n+\t\t\n \t\tLookup(Class<?> lookupClass, Class<?> prevLookupClass, int lookupMode) {\n-\t\t\tthis(lookupClass, prevLookupClass, lookupMode, true);\n+\t\t\tthis(lookupClass, prevLookupClass, lookupMode, lookupJLIPackageCheckDefault());\n \t\t}\n \t\t\n \t\tLookup(Class<?> lookupClass, int lookupMode, boolean doCheck) {\n-\t\t\tthis(lookupClass, null, lookupMode, doCheck);\n+\t\t\tthis(lookupClass, null, lookupMode, lookupJLIPackageCheckDefault());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52293889c8063582d0cc7c997c07470ef06eb9d4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU3MDgzOA==", "bodyText": "Shouldn't this be false?  If the user already has a Lookup in the java.lang.invoke package, why would we restrict dropping access?", "url": "https://github.com/eclipse-openj9/openj9/pull/10329#discussion_r466570838", "createdAt": "2020-08-06T17:25:37Z", "author": {"login": "DanHeidinga"}, "path": "jcl/src/java.base/share/classes/java/lang/invoke/MethodHandles.java", "diffHunk": "@@ -2214,7 +2225,7 @@ public VarHandle unreflectVarHandle(Field field) throws IllegalAccessException {\n \t\t\t\tnewPrevAccessClass = null;\n \t\t\t}\n \t\t\t\n-\t\t\treturn new Lookup(accessClass, newPrevAccessClass, newAccessMode);\n+\t\t\treturn new Lookup(accessClass, newPrevAccessClass, newAccessMode, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52293889c8063582d0cc7c997c07470ef06eb9d4"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 81, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}