{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4NzczMTU3", "number": 10635, "title": "Adding `stalltimems` in `gc-end` stanza", "bodyText": "Attribute stalltimems is added to gc-end to report time spent in stalling (in ms).\nomr:eclipse/omr#5560\n\nNew API getTotalStallTime() introduced for MM_VLHGCIncrementStats, which sums up stall times of following stats structure:\n\n_copyForwardStats.getStallTime() \n_markStats.getStallTime()\n_sweepStats.idleTime\n_workPacketStats.getStallTime()\n_compactStats._moveStallTime\n_compactStats._rebuildStallTime;\n\n\nMove clearing of _vlhgcIncrementStats from MM_IncrementalGenerationalGC::globalMarkPhase to MM_IncrementalGenerationalGC::setupBeforeGlobalGC to force increment stats cleared at start of each global increment..\nAdd assertions to guarantee correctness of increments stats.\nSet collection stats stalltime for verbose GC increment end event\n\nSigned-off-by: Enson Guo enson.guo@ibm.com", "createdAt": "2020-09-17T15:59:49Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10635", "merged": true, "mergeCommit": {"oid": "b120c72113e667766e644bb8b5e102a0fa6d9c07"}, "closed": true, "closedAt": "2020-10-13T13:27:54Z", "author": {"login": "gza060625"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLgvYXgFqTQ5MzkxNjU4MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQ4D5lABqjM4NjA3NDIxNTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTE2NTgw", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#pullrequestreview-493916580", "createdAt": "2020-09-22T23:39:07Z", "commit": {"oid": "16d52d8c53abb1e518dadbb309d3b94ebc5b663c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMzozOTowN1rOHWP9Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMzozOTowN1rOHWP9Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA5MjE1MA==", "bodyText": "@amicic @LinHu2016 Could you please comment on wether clearing the increment stats here is correct.\nThe stats do get cleared in line 978 globalMarkPhase(env, true);, but GMP will skip this if the following condition fails:\nif ((_globalMarkPhaseIncrementBytesStillToScan > 0) || (MM_CycleState::state_process_work_packets_after_initial_mark != _persistentGlobalMarkPhaseState._markDelegateState))\nI think we need to clear the stats because it's possible to finish and report end of increment without ever clearing the increment stats for GMP, hence we can end up with old/stale stats of previous increment. This wasn't an issue before, but now that we use increment stats for reporting stall times, the old increment stall will be reported in the case globalMarkPhase(env, true); isn't called + I don't see any useful work being doing for which stats are collected when globalMarkPhase(env, true) is skipped.\n@gza060625 has verified that stats aren't cleared in this case.", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#discussion_r493092150", "createdAt": "2020-09-22T23:39:07Z", "author": {"login": "RSalman"}, "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "diffHunk": "@@ -977,6 +977,9 @@ MM_IncrementalGenerationalGC::runGlobalMarkPhaseIncrement(MM_EnvironmentVLHGC *e\n \tif ((_globalMarkPhaseIncrementBytesStillToScan > 0) || (MM_CycleState::state_process_work_packets_after_initial_mark != _persistentGlobalMarkPhaseState._markDelegateState)) {\n \t\tglobalMarkPhase(env, true);\n \t}\n+\telse {\n+\t\tstatic_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_vlhgcIncrementStats.clear();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16d52d8c53abb1e518dadbb309d3b94ebc5b663c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTIwNDQ4", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#pullrequestreview-493920448", "createdAt": "2020-09-22T23:50:48Z", "commit": {"oid": "16d52d8c53abb1e518dadbb309d3b94ebc5b663c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMzo1MDo0OFrOHWQK_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQyMzo1MDo0OFrOHWQK_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzA5NTY3OA==", "bodyText": "I think we should rename this to getIncrementStallTime", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#discussion_r493095678", "createdAt": "2020-09-22T23:50:48Z", "author": {"login": "RSalman"}, "path": "runtime/gc_stats/VLHGCIncrementStats.hpp", "diffHunk": "@@ -117,6 +117,14 @@ class MM_VLHGCIncrementStats : public MM_Base\n \t\t_copyForwardStats.merge(&stats->_copyForwardStats);\n \t\t_irrsStats.merge(&stats->_irrsStats);\n \t}\n+\n+\t/**\n+\t * Get total stall time \n+\t */\n+\tuint64_t getTotalStallTime()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16d52d8c53abb1e518dadbb309d3b94ebc5b663c"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NDc3NTc5", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#pullrequestreview-499477579", "createdAt": "2020-09-30T14:14:48Z", "commit": {"oid": "aa3c13d95f969272c21733d52fdc033dda2111a4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDoxNDo0OFrOHafsjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDoxNDo0OFrOHafsjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU0NDMzMg==", "bodyText": "a simple validation check: in GMP increment you should never see non-zero stats from _copyForwardStats", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#discussion_r497544332", "createdAt": "2020-09-30T14:14:48Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "diffHunk": "@@ -2234,6 +2247,23 @@ MM_IncrementalGenerationalGC::reportGCIncrementEnd(MM_EnvironmentBase *env)\n \t}\n \n \tstats->_endTime = j9time_hires_clock();\n+\tstats->_stallTime = static_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_vlhgcIncrementStats.getTotalStallTime();\n+\t\n+\tMM_VLHGCIncrementStats temp = static_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_vlhgcIncrementStats;\n+\tOMRPORT_ACCESS_FROM_OMRPORT(env->getPortLibrary());\n+\tomrtty_printf(\"!@ Trigger\\n\");\n+\tomrtty_printf(\"!@ _copyForwardStats\\t%d\\n\",temp._copyForwardStats.getStallTime());\n+\tomrtty_printf(\"!@ _markStats\\t%d\\n\",temp._markStats.getStallTime());\n+\tomrtty_printf(\"!@ _workPacketStats\\t%d\\n\",temp._workPacketStats.getStallTime());\n+\tomrtty_printf(\"!@ _moveStallTime\\t%d\\n\",temp._compactStats._moveStallTime);\n+\tomrtty_printf(\"!@ _rebuildStallTime\\t%d\\n\",temp._compactStats._rebuildStallTime);\n+\tomrtty_printf(\"!@ sum\\t%d\\n\",\n+\ttemp._copyForwardStats.getStallTime()+\n+\ttemp._markStats.getStallTime()+\n+\ttemp._workPacketStats.getStallTime()+\n+\ttemp._compactStats._moveStallTime+\n+\ttemp._compactStats._rebuildStallTime\n+\t);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3c13d95f969272c21733d52fdc033dda2111a4"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNzE4ODQy", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#pullrequestreview-501718842", "createdAt": "2020-10-05T04:42:47Z", "commit": {"oid": "a227df236d3d280c188476ced8763e478d8ba49b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDo0Mjo0N1rOHcNfqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDo0Mjo0N1rOHcNfqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM0MzI3Mw==", "bodyText": "This file should stay untouched, no changes in here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#discussion_r499343273", "createdAt": "2020-10-05T04:42:47Z", "author": {"login": "RSalman"}, "path": "runtime/gc_vlhgc/GlobalMarkingScheme.cpp", "diffHunk": "@@ -168,7 +168,7 @@ MM_ParallelGlobalMarkTask::cleanup(MM_EnvironmentBase *envBase)\n {\n \tMM_EnvironmentVLHGC *env = MM_EnvironmentVLHGC::getEnvironment(envBase);\n \tPORT_ACCESS_FROM_ENVIRONMENT(env);\n-\t\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a227df236d3d280c188476ced8763e478d8ba49b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNzIwMzQ4", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#pullrequestreview-501720348", "createdAt": "2020-10-05T04:49:38Z", "commit": {"oid": "a227df236d3d280c188476ced8763e478d8ba49b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDo0OTozOFrOHcNkXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDo0OTozOFrOHcNkXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM0NDQ3OQ==", "bodyText": "This should be moved down, before line 1005", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#discussion_r499344479", "createdAt": "2020-10-05T04:49:38Z", "author": {"login": "RSalman"}, "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "diffHunk": "@@ -973,7 +972,7 @@ MM_IncrementalGenerationalGC::runGlobalMarkPhaseIncrement(MM_EnvironmentVLHGC *e\n \n \t/* Perform any main-specific setup */\n \t_extensions->globalVLHGCStats.gcCount += 1;\n-\n+\tAssert_MM_true(0 == static_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_vlhgcIncrementStats._copyForwardStats.getStallTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a227df236d3d280c188476ced8763e478d8ba49b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNzI0NDI4", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#pullrequestreview-501724428", "createdAt": "2020-10-05T05:06:33Z", "commit": {"oid": "a227df236d3d280c188476ced8763e478d8ba49b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNTowNjo0NVrOHcNxYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNTowNjo0NVrOHcNxYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM0NzgxMA==", "bodyText": "This should be moved down as well, before line 1122. As before, GC work (which will update the increment stats) actually happens after this", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#discussion_r499347810", "createdAt": "2020-10-05T05:06:45Z", "author": {"login": "RSalman"}, "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "diffHunk": "@@ -1057,6 +1056,7 @@ MM_IncrementalGenerationalGC::runGlobalGarbageCollection(MM_EnvironmentVLHGC *en\n \t\n \t_interRegionRememberedSet->prepareRegionsForGlobalCollect(env, isGlobalMarkPhaseRunning());\n \n+\tAssert_MM_true(0 == static_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_vlhgcIncrementStats._copyForwardStats.getStallTime());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a227df236d3d280c188476ced8763e478d8ba49b"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be9d7738cb0c33f5145e9ba6d1fe3762d935b448", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/be9d7738cb0c33f5145e9ba6d1fe3762d935b448", "committedDate": "2020-10-05T14:57:58Z", "message": "move assert 2nd\n\nSigned-off-by: Enson Guo <enson.guo@ibm.com>"}, "afterCommit": {"oid": "65cba928d89a58fc5615633409d52f26ee5dd483", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/65cba928d89a58fc5615633409d52f26ee5dd483", "committedDate": "2020-10-05T17:20:03Z", "message": "Adding `stalltimems` in `gc-end` stanza\nomr:https://github.com/eclipse/omr/pull/5560\n\nAttribute `stalltimems` is added to `gc-end` to report time spent in stalling (in ms).\n- New API `getTotalStallTime()` introduced for `MM_VLHGCIncrementStats`, which sums up stall times of following stats structure:\n```\n_copyForwardStats.getStallTime()\n_markStats.getStallTime()\n_sweepStats.idleTime\n_workPacketStats.getStallTime()\n_compactStats._moveStallTime\n_compactStats._rebuildStallTime;\n```\n- Move clearing of `_vlhgcIncrementStats` from `MM_IncrementalGenerationalGC::globalMarkPhase` to `MM_IncrementalGenerationalGC::setupBeforeGlobalGC` to force increment stats cleared at start of each global increment..\n- Add assertions to guarantee correctness of increments stats.\n- Set collection stats `stalltime` for verbose GC increment end event\n\nSigned-off-by: Enson Guo <enson.guo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NzI0MTky", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#pullrequestreview-505724192", "createdAt": "2020-10-09T14:27:42Z", "commit": {"oid": "65cba928d89a58fc5615633409d52f26ee5dd483"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1Nzc2MjUw", "url": "https://github.com/eclipse-openj9/openj9/pull/10635#pullrequestreview-505776250", "createdAt": "2020-10-09T15:25:06Z", "commit": {"oid": "65cba928d89a58fc5615633409d52f26ee5dd483"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6815f3f0b02e0e63445dfab5374114cc741ea7a4", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/6815f3f0b02e0e63445dfab5374114cc741ea7a4", "committedDate": "2020-10-09T15:38:46Z", "message": "Adding `stalltimems` in `gc-end` stanza\nomr:https://github.com/eclipse/omr/pull/5560\n\nAttribute `stalltimems` is added to `gc-end` to report time spent in stalling (in ms).\n- New API `getTotalStallTime()` introduced for `MM_VLHGCIncrementStats`, which sums up stall times of following stats structure:\n```\n_copyForwardStats.getStallTime()\n_markStats.getStallTime()\n_sweepStats.idleTime\n_workPacketStats.getStallTime()\n_compactStats._moveStallTime\n_compactStats._rebuildStallTime;\n```\n- Move clearing of `_vlhgcIncrementStats` from `MM_IncrementalGenerationalGC::globalMarkPhase` to `MM_IncrementalGenerationalGC::setupBeforeGlobalGC` to force increment stats cleared at start of each global increment..\n- Add assertions to guarantee correctness of increments stats.\n- Set collection stats `stalltime` for verbose GC increment end event\n\nSigned-off-by: Enson Guo <enson.guo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b16a8f25e4590dbf055359ff5f8336ef4c4dfbd0", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/b16a8f25e4590dbf055359ff5f8336ef4c4dfbd0", "committedDate": "2020-10-09T15:36:54Z", "message": "date update\n\nSigned-off-by: Enson Guo <enson.guo@ibm.com>"}, "afterCommit": {"oid": "6815f3f0b02e0e63445dfab5374114cc741ea7a4", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/6815f3f0b02e0e63445dfab5374114cc741ea7a4", "committedDate": "2020-10-09T15:38:46Z", "message": "Adding `stalltimems` in `gc-end` stanza\nomr:https://github.com/eclipse/omr/pull/5560\n\nAttribute `stalltimems` is added to `gc-end` to report time spent in stalling (in ms).\n- New API `getTotalStallTime()` introduced for `MM_VLHGCIncrementStats`, which sums up stall times of following stats structure:\n```\n_copyForwardStats.getStallTime()\n_markStats.getStallTime()\n_sweepStats.idleTime\n_workPacketStats.getStallTime()\n_compactStats._moveStallTime\n_compactStats._rebuildStallTime;\n```\n- Move clearing of `_vlhgcIncrementStats` from `MM_IncrementalGenerationalGC::globalMarkPhase` to `MM_IncrementalGenerationalGC::setupBeforeGlobalGC` to force increment stats cleared at start of each global increment..\n- Add assertions to guarantee correctness of increments stats.\n- Set collection stats `stalltime` for verbose GC increment end event\n\nSigned-off-by: Enson Guo <enson.guo@ibm.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 49, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}