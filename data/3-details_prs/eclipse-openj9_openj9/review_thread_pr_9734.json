{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NjU4Nzg1", "number": 9734, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozMDoxN1rOECrvyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODowMzozN1rOEGDNWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjQ5MzU1OnYy", "diffSide": "RIGHT", "path": "runtime/oti/j9nonbuilder.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozMDoxN1rOGfSsSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozMDoxN1rOGfSsSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NTI4OQ==", "bodyText": "Can you change \"isSCCDefault\" to \"isSharedClassEnabledByDefault\" ?", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r435465289", "createdAt": "2020-06-04T18:30:17Z", "author": {"login": "hangshao0"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -1227,6 +1227,7 @@ typedef struct J9SharedClassConfig {\n \tconst char* ctrlDirName;\n \tUDATA  ( *getCacheSizeBytes)(struct J9JavaVM* vm) ;\n \tUDATA  ( *getTotalUsableCacheBytes)(struct J9JavaVM* vm);\n+\tBOOLEAN  ( *isSCCDefault)(struct J9JavaVM* vm);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855734cc4ef892782e80bc5d668782fb79ead2b9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjQ5NTgzOnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozMDo1NlrOGfStxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozMDo1NlrOGfStxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2NTY2OQ==", "bodyText": "Also rename here to j9shr_isSharedClassEnabledByDefault.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r435465669", "createdAt": "2020-06-04T18:30:56Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3516,6 +3516,7 @@ j9shr_init(J9JavaVM *vm, UDATA loadFlags, UDATA* nonfatal)\n \t\t}\n \n \t\tconfig->getCacheSizeBytes = j9shr_getCacheSizeBytes;\n+\t\tconfig->isSCCDefault = j9shr_isSCCDefault;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855734cc4ef892782e80bc5d668782fb79ead2b9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjUxMzY5OnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozNToxOFrOGfS5dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozNToxOFrOGfS5dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2ODY2MQ==", "bodyText": "Better to say \"Check if the shared cache is enabled by default or using \"-Xshareclasses\" in the command line. \"", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r435468661", "createdAt": "2020-06-04T18:35:18Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,25 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * check if SCC is the default SSC (was enabled b/c of -Xshareclasses)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855734cc4ef892782e80bc5d668782fb79ead2b9"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjUxNTI3OnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozNTozOFrOGfS6XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozNTozOFrOGfS6XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2ODg5Mg==", "bodyText": "This comment is incorrect.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r435468892", "createdAt": "2020-06-04T18:35:38Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,25 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * check if SCC is the default SSC (was enabled b/c of -Xshareclasses)\n+ *\n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return The softmx bytes or the total usable cache size.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855734cc4ef892782e80bc5d668782fb79ead2b9"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjUxNjg5OnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozNTo1NlrOGfS7WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozNTo1NlrOGfS7WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2OTE0NQ==", "bodyText": "Please remove this comment.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r435469145", "createdAt": "2020-06-04T18:35:56Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,25 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * check if SCC is the default SSC (was enabled b/c of -Xshareclasses)\n+ *\n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return The softmx bytes or the total usable cache size.\n+ * \n+ * J9_ARE_ALL_BITS_SET(javaVM->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855734cc4ef892782e80bc5d668782fb79ead2b9"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjUyMDI1OnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODozNjo0MlrOGfS9hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxODo1Njo0MVrOGfTwlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2OTcwMw==", "bodyText": "Please and a comment saying \"Only bootstrap classes are shared by default.\"", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r435469703", "createdAt": "2020-06-04T18:36:42Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,25 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * check if SCC is the default SSC (was enabled b/c of -Xshareclasses)\n+ *\n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return The softmx bytes or the total usable cache size.\n+ * \n+ * J9_ARE_ALL_BITS_SET(javaVM->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)\n+ */\n+BOOLEAN\n+j9shr_isSCCDefault(J9JavaVM *vm)\n+{\n+\tBOOLEAN ret = FALSE;\n+\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "855734cc4ef892782e80bc5d668782fb79ead2b9"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ3ODkxNg==", "bodyText": "We should return TRUE if J9SHR_RUNTIMEFLAG_ENABLE_CACHEBOOTCLASSES is set but J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES is not set.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r435478916", "createdAt": "2020-06-04T18:49:42Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,25 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * check if SCC is the default SSC (was enabled b/c of -Xshareclasses)\n+ *\n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return The softmx bytes or the total usable cache size.\n+ * \n+ * J9_ARE_ALL_BITS_SET(javaVM->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)\n+ */\n+BOOLEAN\n+j9shr_isSCCDefault(J9JavaVM *vm)\n+{\n+\tBOOLEAN ret = FALSE;\n+\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2OTcwMw=="}, "originalCommit": {"oid": "855734cc4ef892782e80bc5d668782fb79ead2b9"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ4Mjc3NA==", "bodyText": "formatting: space before {", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r435482774", "createdAt": "2020-06-04T18:56:41Z", "author": {"login": "keithc-ca"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,25 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * check if SCC is the default SSC (was enabled b/c of -Xshareclasses)\n+ *\n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return The softmx bytes or the total usable cache size.\n+ * \n+ * J9_ARE_ALL_BITS_SET(javaVM->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)\n+ */\n+BOOLEAN\n+j9shr_isSCCDefault(J9JavaVM *vm)\n+{\n+\tBOOLEAN ret = FALSE;\n+\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ2OTcwMw=="}, "originalCommit": {"oid": "855734cc4ef892782e80bc5d668782fb79ead2b9"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjY5NjgxOnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxOToyNjoyOVrOGfUtQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzozMjoyNFrOGf3MrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5ODMwNg==", "bodyText": "Given the description and the implementation below, this name seems wrong: j9shr_isSharedClassEnabled would be more appropriate. The VM field name should be updated to match.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r435498306", "createdAt": "2020-06-04T19:26:29Z", "author": {"login": "keithc-ca"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,26 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Check if the shared cache is enabled by default or by using \"-Xshareclasses\" in the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return TRUE if shared cache is enabled by default, FALSE otherwise\n+ * \n+ */\n+BOOLEAN\n+j9shr_isSharedClassEnabledByDefault(J9JavaVM *vm)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa8410084b7d18731f7216ea2022caf9de6d04af"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUwNDI1Mw==", "bodyText": "j9shr_isSharedClassEnabled looks confusing to me. When shared class is enabled, there are 2 cases:\n\nBy default: only bootstrap classes are shared.\nUsing -Xshareclasses in the command line: Both bootstrap classes and non-bootstrap classes are shared.\n\nI am fine with the current name or something like j9shr_isOnlyBootClassesSharingEnabled().", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r435504253", "createdAt": "2020-06-04T19:38:30Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,26 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Check if the shared cache is enabled by default or by using \"-Xshareclasses\" in the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return TRUE if shared cache is enabled by default, FALSE otherwise\n+ * \n+ */\n+BOOLEAN\n+j9shr_isSharedClassEnabledByDefault(J9JavaVM *vm)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5ODMwNg=="}, "originalCommit": {"oid": "aa8410084b7d18731f7216ea2022caf9de6d04af"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUyMjk0NA==", "bodyText": "I like j9shr_isOnlyBootClassesSharingEnabled, but perhaps an explanation of how this is expected to be used will help us agree on the right name.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r435522944", "createdAt": "2020-06-04T20:14:44Z", "author": {"login": "keithc-ca"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,26 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Check if the shared cache is enabled by default or by using \"-Xshareclasses\" in the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return TRUE if shared cache is enabled by default, FALSE otherwise\n+ * \n+ */\n+BOOLEAN\n+j9shr_isSharedClassEnabledByDefault(J9JavaVM *vm)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5ODMwNg=="}, "originalCommit": {"oid": "aa8410084b7d18731f7216ea2022caf9de6d04af"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk4OTEyOQ==", "bodyText": "The query was created in response to this issue: \"It would be useful to have a query to determine whether the SCC being used is an SCC created via the -Xshareclasses option, or the default SCC. One use case would be making heuristic decisions based on this information (eg #6734).\" So I opted to have it return true if the SCC being used was the default and false in the -Xshareclasses case.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r435989129", "createdAt": "2020-06-05T15:15:31Z", "author": {"login": "Samantha-Rempel"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,26 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Check if the shared cache is enabled by default or by using \"-Xshareclasses\" in the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return TRUE if shared cache is enabled by default, FALSE otherwise\n+ * \n+ */\n+BOOLEAN\n+j9shr_isSharedClassEnabledByDefault(J9JavaVM *vm)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5ODMwNg=="}, "originalCommit": {"oid": "aa8410084b7d18731f7216ea2022caf9de6d04af"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA2MzQwNA==", "bodyText": "It's possible in the future that boot classes won't be the only sharing enabled by default. Ideally platform class loader classes would also be shared by default.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r436063404", "createdAt": "2020-06-05T17:32:24Z", "author": {"login": "pshipton"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,26 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Check if the shared cache is enabled by default or by using \"-Xshareclasses\" in the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return TRUE if shared cache is enabled by default, FALSE otherwise\n+ * \n+ */\n+BOOLEAN\n+j9shr_isSharedClassEnabledByDefault(J9JavaVM *vm)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ5ODMwNg=="}, "originalCommit": {"oid": "aa8410084b7d18731f7216ea2022caf9de6d04af"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzcyNDI1OnYy", "diffSide": "RIGHT", "path": "runtime/oti/j9nonbuilder.h", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDoyNjo0MlrOGif4Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzo0MTo0MlrOGin5Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyNzA1NQ==", "bodyText": "don't use anonymous types\nthere's no need to explicitly assign values to the literals\nall these names live in the global namespace and need to be more specific\nthis should include a value indicating the SCC is disabled (by default)\n\nWe want something more like this:\ntypedef enum J9SharedClassCacheMode {\n    J9SharedClassCacheDisabled,\n    J9SharedClassCacheBootstrapOnly,\n    J9SharedClassCacheBoostrapAndExtension,\n    J9SharedClassCacheUserDefined\n} J9SharedClassCacheMode;", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r438827055", "createdAt": "2020-06-11T14:26:42Z", "author": {"login": "keithc-ca"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -262,6 +262,12 @@ typedef enum {\n \tJ9FlushCompQueueDataBreakpoint\n } J9JITFlushCompilationQueueReason;\n \n+typedef enum {\n+   BootstrapOnly               = 0,\n+   BoostrapAndExtension        = 1,\n+   UserDefined                 = 2\n+} SharedClassCacheMode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49505d71b34b973f3b2791d7a3ecc2dca188dd7e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg4NTA3OQ==", "bodyText": "When reaching the new API j9shr_getSharedClassCacheMode, shared cache cannot be inactive. We don't need to add J9SharedClassCacheDisabled.  The \"UserDefined\" could be something like FullSharing or FullyEnabled.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r438885079", "createdAt": "2020-06-11T15:43:46Z", "author": {"login": "hangshao0"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -262,6 +262,12 @@ typedef enum {\n \tJ9FlushCompQueueDataBreakpoint\n } J9JITFlushCompilationQueueReason;\n \n+typedef enum {\n+   BootstrapOnly               = 0,\n+   BoostrapAndExtension        = 1,\n+   UserDefined                 = 2\n+} SharedClassCacheMode;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyNzA1NQ=="}, "originalCommit": {"oid": "49505d71b34b973f3b2791d7a3ecc2dca188dd7e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg5NTU0OQ==", "bodyText": "Thanks for that information. My suggestion was based on the suggestion from @dsouzai which included the literal INACTIVE.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r438895549", "createdAt": "2020-06-11T15:55:32Z", "author": {"login": "keithc-ca"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -262,6 +262,12 @@ typedef enum {\n \tJ9FlushCompQueueDataBreakpoint\n } J9JITFlushCompilationQueueReason;\n \n+typedef enum {\n+   BootstrapOnly               = 0,\n+   BoostrapAndExtension        = 1,\n+   UserDefined                 = 2\n+} SharedClassCacheMode;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyNzA1NQ=="}, "originalCommit": {"oid": "49505d71b34b973f3b2791d7a3ecc2dca188dd7e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODkzOTg1Ng==", "bodyText": "Okay I'll keep Disabled option out, what do we prefer for the UserDefiined option?", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r438939856", "createdAt": "2020-06-11T17:08:56Z", "author": {"login": "Samantha-Rempel"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -262,6 +262,12 @@ typedef enum {\n \tJ9FlushCompQueueDataBreakpoint\n } J9JITFlushCompilationQueueReason;\n \n+typedef enum {\n+   BootstrapOnly               = 0,\n+   BoostrapAndExtension        = 1,\n+   UserDefined                 = 2\n+} SharedClassCacheMode;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyNzA1NQ=="}, "originalCommit": {"oid": "49505d71b34b973f3b2791d7a3ecc2dca188dd7e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk1ODM1NA==", "bodyText": "It should be as I showed above, without J9SharedClassCacheDisabled.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r438958354", "createdAt": "2020-06-11T17:41:42Z", "author": {"login": "keithc-ca"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -262,6 +262,12 @@ typedef enum {\n \tJ9FlushCompQueueDataBreakpoint\n } J9JITFlushCompilationQueueReason;\n \n+typedef enum {\n+   BootstrapOnly               = 0,\n+   BoostrapAndExtension        = 1,\n+   UserDefined                 = 2\n+} SharedClassCacheMode;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyNzA1NQ=="}, "originalCommit": {"oid": "49505d71b34b973f3b2791d7a3ecc2dca188dd7e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzczMjQ4OnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDoyODozNVrOGif9fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDoyODozNVrOGif9fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyODQxNQ==", "bodyText": "The field is getSharedClassCacheMode and the function is j9shr_getSharedClassCacheMode .", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r438828415", "createdAt": "2020-06-11T14:28:35Z", "author": {"login": "keithc-ca"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3516,6 +3516,7 @@ j9shr_init(J9JavaVM *vm, UDATA loadFlags, UDATA* nonfatal)\n \t\t}\n \n \t\tconfig->getCacheSizeBytes = j9shr_getCacheSizeBytes;\n+\t\tconfig->isSharedClassEnabledByDefault = j9shr_isSharedClassEnabledByDefault;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49505d71b34b973f3b2791d7a3ecc2dca188dd7e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzczNTcyOnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDoyOToyMVrOGif_tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDoyOToyMVrOGif_tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyODk4MA==", "bodyText": "I expect you meant:\n  SharedClassCacheMode ret = UserDefined;", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r438828980", "createdAt": "2020-06-11T14:29:21Z", "author": {"login": "keithc-ca"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,30 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Check if the shared cache is enabled by default or by using \"-Xshareclasses\" in the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return TRUE if shared cache is enabled by default, FALSE otherwise\n+ * \n+ */\n+SharedClassCacheMode\n+j9shr_getSharedClassCacheMode(J9JavaVM *vm)\n+{\n+\tSharedClassCacheMode UserDefined;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49505d71b34b973f3b2791d7a3ecc2dca188dd7e"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDYyNjY1OnYy", "diffSide": "RIGHT", "path": "runtime/oti/j9nonbuilder.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODowNTowMVrOGio-aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODowNTowMVrOGio-aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3NjEwNA==", "bodyText": "Please indent with tabs like the rest of this file.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r438976104", "createdAt": "2020-06-11T18:05:01Z", "author": {"login": "keithc-ca"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -262,6 +262,12 @@ typedef enum {\n \tJ9FlushCompQueueDataBreakpoint\n } J9JITFlushCompilationQueueReason;\n \n+typedef enum J9SharedClassCacheMode {\n+    J9SharedClassCacheBootstrapOnly,\n+    J9SharedClassCacheBoostrapAndExtension,\n+    J9SharedClassCacheUserDefined", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a92b8d107c19879de86da57536306061c3d85ca6"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDY0NTc5OnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODoxMDo0OFrOGipKlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODoxMDo0OFrOGipKlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk3OTIyMQ==", "bodyText": "This needs only check J9SHR_RUNTIMEFLAG_ENABLE_CACHEBOOTCLASSES once:\n    if (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHEBOOTCLASSES)) {\n        if (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)) {\n            ret = J9SharedClassCacheUserDefined;\n        } else {\n            ret = J9SharedClassCacheBootstrapOnly;\n        }\n    }\n\nAlso notice } and else belong on the same line.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r438979221", "createdAt": "2020-06-11T18:10:48Z", "author": {"login": "keithc-ca"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,30 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Check if the shared cache is enabled by default or by using \"-Xshareclasses\" in the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return TRUE if shared cache is enabled by default, FALSE otherwise\n+ * \n+ */\n+J9SharedClassCacheMode\n+j9shr_getSharedClassCacheMode(J9JavaVM *vm)\n+{\n+\tJ9SharedClassCacheMode ret = JJ9SharedClassCacheUserDefined;\n+\t/* Only bootstrap classes are shared by default */\n+\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHEBOOTCLASSES) && \n+\t\tJ9_ARE_NO_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)) {\n+\t\tret = J9SharedClassCacheBootstrapOnly;\n+\t}\n+\telse if (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHEBOOTCLASSES) && \n+\t\tJ9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)) {\n+\t\tret = J9SharedClassCacheUserDefined;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a92b8d107c19879de86da57536306061c3d85ca6"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDgwMjM0OnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODo1OTo1MVrOGiqvgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODo1OTo1MVrOGiqvgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAwNTA1OQ==", "bodyText": "This comment needs to be updated.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r439005059", "createdAt": "2020-06-11T18:59:51Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,29 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Check if the shared cache is enabled by default or by using \"-Xshareclasses\" in the command line. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44e31c921fca5d042e02cd402be7dc2c3172a931"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDgwMjc1OnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTowMDowMFrOGiqvzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTowMDowMFrOGiqvzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAwNTEzNQ==", "bodyText": "This comment also needs to be updated.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r439005135", "createdAt": "2020-06-11T19:00:00Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,29 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Check if the shared cache is enabled by default or by using \"-Xshareclasses\" in the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return TRUE if shared cache is enabled by default, FALSE otherwise", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44e31c921fca5d042e02cd402be7dc2c3172a931"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDgxMzUwOnYy", "diffSide": "RIGHT", "path": "runtime/oti/j9nonbuilder.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTowMzoyN1rOGiq2zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxOTowMzoyN1rOGiq2zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAwNjkyNw==", "bodyText": "We have\n#if defined(J9VM_OPT_SHARED_CLASSES)\nin this file.\nCan you move J9SharedClassCacheMode inside the #if defined(J9VM_OPT_SHARED_CLASSES)", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r439006927", "createdAt": "2020-06-11T19:03:27Z", "author": {"login": "hangshao0"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -262,6 +262,12 @@ typedef enum {\n \tJ9FlushCompQueueDataBreakpoint\n } J9JITFlushCompilationQueueReason;\n \n+typedef enum J9SharedClassCacheMode {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44e31c921fca5d042e02cd402be7dc2c3172a931"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzYyODM4OnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDozMjo1MFrOGjGQhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNDozMjo1MFrOGjGQhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ1NTg3OQ==", "bodyText": "I think spaces are being used here instead of tabs.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r439455879", "createdAt": "2020-06-12T14:32:50Z", "author": {"login": "dsouzai"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,30 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Determine the type of shared class cache that is enabled. Either the current default, \n+ * Bootstrap Classes Only, or user defined shared cache, enabled via \"-Xshareclasses\" on the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return J9SharedClassCacheMode enum that idicates the Shared Cache Class that is in effect\n+ * \n+ */\n+J9SharedClassCacheMode\n+j9shr_getSharedClassCacheMode(J9JavaVM *vm)\n+{\n+\tJ9SharedClassCacheMode ret = J9SharedClassCacheUserDefined;\n+\t/* Only bootstrap classes are shared by default */\n+\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHEBOOTCLASSES)) {\n+        if (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)) {\n+            ret = J9SharedClassCacheUserDefined;\n+        } else {\n+            ret = J9SharedClassCacheBootstrapOnly;\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8bf2dcc2af869e4816233cab2a9d74274d7877c"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzc4NzI0OnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToxNTozMFrOGjH0Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToxOTo0MlrOGjH9Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4MTM5OA==", "bodyText": "\"Shared Cache Class\" should be \"Shared Class Cache\".", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r439481398", "createdAt": "2020-06-12T15:15:30Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,30 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Determine the type of shared class cache that is enabled. Either the current default, \n+ * Bootstrap Classes Only, or user defined shared cache, enabled via \"-Xshareclasses\" on the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return J9SharedClassCacheMode enum that idicates the Shared Cache Class that is in effect", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05d9b0a5a988cc7f2b8dae05d5a06555f1e521a9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4MzY4Mw==", "bodyText": "Don't forget to update your commit message. It still says\nAdd query to determine is Shared Class is the default SCC, returns TRUE is SCC is the default and FALSE otherwise", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r439483683", "createdAt": "2020-06-12T15:19:42Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,30 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Determine the type of shared class cache that is enabled. Either the current default, \n+ * Bootstrap Classes Only, or user defined shared cache, enabled via \"-Xshareclasses\" on the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return J9SharedClassCacheMode enum that idicates the Shared Cache Class that is in effect", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4MTM5OA=="}, "originalCommit": {"oid": "05d9b0a5a988cc7f2b8dae05d5a06555f1e521a9"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Mzg2MDIyOnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxOTo1Mjo1N1rOGkAglw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODoyMzoyOVrOGkn5Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMDI2Mw==", "bodyText": "I believe, as your comment says, only bootstrap classes are shared by default, so shouldn't ret be initialized to J9SharedClassCacheBootstrapOnly? There are three possible values, yet this can't return J9SharedClassCacheBoostrapAndExtension; that doesn't seem right.\n@hangshao0 Please comment.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r440410263", "createdAt": "2020-06-15T19:52:57Z", "author": {"login": "keithc-ca"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,30 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Determine the type of shared class cache that is enabled. Either the current default, \n+ * Bootstrap Classes Only, or user defined shared cache, enabled via \"-Xshareclasses\" on the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return J9SharedClassCacheMode enum that idicates the Shared Class Cache that is in effect\n+ * \n+ */\n+J9SharedClassCacheMode\n+j9shr_getSharedClassCacheMode(J9JavaVM *vm)\n+{\n+\tJ9SharedClassCacheMode ret = J9SharedClassCacheUserDefined;\n+\t/* Only bootstrap classes are shared by default */\n+\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHEBOOTCLASSES)) {\n+\t\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)) {\n+\t\t\tret = J9SharedClassCacheUserDefined;\n+\t\t} else {\n+\t\t\tret = J9SharedClassCacheBootstrapOnly;\n+\t\t}\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adeb297c0ac00ebcd37c380c42e0de198f9adc3b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxODY1MQ==", "bodyText": "yet this can't return J9SharedClassCacheBoostrapAndExtension.\n\nJ9SharedClassCacheBoostrapAndExtension is a possible case in the future after we change the default class sharing from \"boostrap classes\" to \"bootstrap + extension classes\". It is an impossible case now. User cannot configure the JVM to share \"bootstrap + extension classes\" now.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r440418651", "createdAt": "2020-06-15T20:09:55Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,30 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Determine the type of shared class cache that is enabled. Either the current default, \n+ * Bootstrap Classes Only, or user defined shared cache, enabled via \"-Xshareclasses\" on the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return J9SharedClassCacheMode enum that idicates the Shared Class Cache that is in effect\n+ * \n+ */\n+J9SharedClassCacheMode\n+j9shr_getSharedClassCacheMode(J9JavaVM *vm)\n+{\n+\tJ9SharedClassCacheMode ret = J9SharedClassCacheUserDefined;\n+\t/* Only bootstrap classes are shared by default */\n+\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHEBOOTCLASSES)) {\n+\t\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)) {\n+\t\t\tret = J9SharedClassCacheUserDefined;\n+\t\t} else {\n+\t\t\tret = J9SharedClassCacheBootstrapOnly;\n+\t\t}\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMDI2Mw=="}, "originalCommit": {"oid": "adeb297c0ac00ebcd37c380c42e0de198f9adc3b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMDQ1Mg==", "bodyText": "I agree that it is better to initialize ret to J9SharedClassCacheBootstrapOnly.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r440420452", "createdAt": "2020-06-15T20:13:28Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,30 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Determine the type of shared class cache that is enabled. Either the current default, \n+ * Bootstrap Classes Only, or user defined shared cache, enabled via \"-Xshareclasses\" on the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return J9SharedClassCacheMode enum that idicates the Shared Class Cache that is in effect\n+ * \n+ */\n+J9SharedClassCacheMode\n+j9shr_getSharedClassCacheMode(J9JavaVM *vm)\n+{\n+\tJ9SharedClassCacheMode ret = J9SharedClassCacheUserDefined;\n+\t/* Only bootstrap classes are shared by default */\n+\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHEBOOTCLASSES)) {\n+\t\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)) {\n+\t\t\tret = J9SharedClassCacheUserDefined;\n+\t\t} else {\n+\t\t\tret = J9SharedClassCacheBootstrapOnly;\n+\t\t}\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMDI2Mw=="}, "originalCommit": {"oid": "adeb297c0ac00ebcd37c380c42e0de198f9adc3b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NTU4Nw==", "bodyText": "I have made that change, is this okay to resolve?", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r441055587", "createdAt": "2020-06-16T18:23:29Z", "author": {"login": "Samantha-Rempel"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,30 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Determine the type of shared class cache that is enabled. Either the current default, \n+ * Bootstrap Classes Only, or user defined shared cache, enabled via \"-Xshareclasses\" on the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return J9SharedClassCacheMode enum that idicates the Shared Class Cache that is in effect\n+ * \n+ */\n+J9SharedClassCacheMode\n+j9shr_getSharedClassCacheMode(J9JavaVM *vm)\n+{\n+\tJ9SharedClassCacheMode ret = J9SharedClassCacheUserDefined;\n+\t/* Only bootstrap classes are shared by default */\n+\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHEBOOTCLASSES)) {\n+\t\tif (J9_ARE_ALL_BITS_SET(vm->sharedClassConfig->runtimeFlags, J9SHR_RUNTIMEFLAG_ENABLE_CACHE_NON_BOOT_CLASSES)) {\n+\t\t\tret = J9SharedClassCacheUserDefined;\n+\t\t} else {\n+\t\t\tret = J9SharedClassCacheBootstrapOnly;\n+\t\t}\n+\t}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMDI2Mw=="}, "originalCommit": {"oid": "adeb297c0ac00ebcd37c380c42e0de198f9adc3b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Mzg2MjUwOnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxOTo1Mzo0M1rOGkAiCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxOTo1Mzo0M1rOGkAiCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxMDYzMw==", "bodyText": "typo: idicates -> indicates", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r440410633", "createdAt": "2020-06-15T19:53:43Z", "author": {"login": "keithc-ca"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,30 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Determine the type of shared class cache that is enabled. Either the current default, \n+ * Bootstrap Classes Only, or user defined shared cache, enabled via \"-Xshareclasses\" on the command line. \n+ * \n+ * @param [in] vm Pointer to the VM structure for the JVM\n+ *\n+ * @return J9SharedClassCacheMode enum that idicates the Shared Class Cache that is in effect", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adeb297c0ac00ebcd37c380c42e0de198f9adc3b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzkxODk3OnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoxMjowMVrOGkBFoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoxMjowMVrOGkBFoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQxOTc0NA==", "bodyText": "\"Either the current default, Bootstrap Classes Only, or user defined shared cache\" should be something like:\n\"Either the current default (Bootstrap Classes Only), or user defined shared cache\"", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r440419744", "createdAt": "2020-06-15T20:12:01Z", "author": {"login": "hangshao0"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3952,6 +3953,30 @@ j9shr_getCacheSizeBytes(J9JavaVM *vm)\n \treturn ret;\n }\n \n+/**\n+ * Determine the type of shared class cache that is enabled. Either the current default, ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adeb297c0ac00ebcd37c380c42e0de198f9adc3b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Nzc5NDgxOnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODowMzozN1rOGknEkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODowMzozN1rOGknEkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA0MjA2Ng==", "bodyText": "It's easier to see that all fields are initialized if they are set in the same order as they are declared. Please swap these two lines.", "url": "https://github.com/eclipse-openj9/openj9/pull/9734#discussion_r441042066", "createdAt": "2020-06-16T18:03:37Z", "author": {"login": "keithc-ca"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3516,6 +3516,7 @@ j9shr_init(J9JavaVM *vm, UDATA loadFlags, UDATA* nonfatal)\n \t\t}\n \n \t\tconfig->getCacheSizeBytes = j9shr_getCacheSizeBytes;\n+\t\tconfig->getSharedClassCacheMode = j9shr_getSharedClassCacheMode;\n \t\tconfig->getTotalUsableCacheBytes = j9shr_getTotalUsableCacheBytes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "671a9d9a07451a010238e9bd10271ef78204cd80"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 92, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}