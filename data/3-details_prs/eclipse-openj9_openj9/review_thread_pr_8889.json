{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5ODc5ODI3", "number": 8889, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDoyNzo1NlrODsswwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzoxNjo0OFrODsxeRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTk3MzEyOnYy", "diffSide": "RIGHT", "path": "runtime/codert_vm/cnathelp.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDoyNzo1NlrOF9sdIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDoyNzo1NlrOF9sdIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIzNTgwOQ==", "bodyText": "Not a huge fan of this. Perhaps use goto instead of else.", "url": "https://github.com/eclipse-openj9/openj9/pull/8889#discussion_r400235809", "createdAt": "2020-03-30T14:27:56Z", "author": {"login": "gacholio"}, "path": "runtime/codert_vm/cnathelp.cpp", "diffHunk": "@@ -1223,7 +1232,14 @@ slow_jitMonitorEnterImpl(J9VMThread *currentThread, bool forMethod)\n \t\t\t\tresolveFrame->specialFrameFlags = (resolveFrame->specialFrameFlags & ~J9_STACK_FLAGS_JIT_FRAME_SUB_TYPE_MASK) | J9_STACK_FLAGS_JIT_FAILED_METHOD_MONITOR_ENTER_RESOLVE;\n \t\t\t}\n \t\t}\n-\t\taddr = setNativeOutOfMemoryErrorFromJIT(currentThread, J9NLS_VM_FAILED_TO_ALLOCATE_MONITOR);\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t\tif (J9_OBJECT_MONITOR_VALUE_TYPE_IMSE == monstatus) {\n+\t\t\taddr = setCurrentExceptionNLSWithArgsFromJIT(currentThread, J9NLS_VM_ERROR_BYTECODE_OBJECTREF_CANNOT_BE_VALUE_TYPE, J9VMCONSTANTPOOL_JAVALANGILLEGALMONITORSTATEEXCEPTION);\n+\t\t} else", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cb0a1e0dc50a305b693edcea6b70ea731738d0a"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTk4MDIzOnYy", "diffSide": "RIGHT", "path": "runtime/oti/ObjectMonitor.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDoyOToyMVrOF9shyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDoyOToyMVrOF9shyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIzNzAwMg==", "bodyText": "If you move the brace down, you can avoid the ifdef at the end whch contains only a brace.", "url": "https://github.com/eclipse-openj9/openj9/pull/8889#discussion_r400237002", "createdAt": "2020-03-30T14:29:21Z", "author": {"login": "gacholio"}, "path": "runtime/oti/ObjectMonitor.hpp", "diffHunk": "@@ -267,9 +267,15 @@ class VM_ObjectMonitor\n \tinlineFastObjectMonitorEnter(J9VMThread *currentThread, j9object_t object)\n \t{\n \t\tbool locked = false;\n-\t\tif (LN_HAS_LOCKWORD(currentThread, object)) {\n-\t\t\tlocked = inlineFastInitAndEnterMonitor(currentThread, J9OBJECT_MONITOR_EA(currentThread, object));\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t\tif (!J9_IS_J9CLASS_VALUETYPE(J9OBJECT_CLAZZ(currentThread, object))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cb0a1e0dc50a305b693edcea6b70ea731738d0a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTk4Mzg2OnYy", "diffSide": "LEFT", "path": "runtime/vm/BytecodeInterpreter.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDozMDowNlrOF9skOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDozMDowNlrOF9skOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIzNzYyNw==", "bodyText": "Not sure why this was removed.", "url": "https://github.com/eclipse-openj9/openj9/pull/8889#discussion_r400237627", "createdAt": "2020-03-30T14:30:06Z", "author": {"login": "gacholio"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -149,7 +149,6 @@ class INTERPRETER_CLASS\n #endif\n \tMM_ObjectAllocationAPI _objectAllocate;\n \tMM_ObjectAccessBarrierAPI _objectAccessBarrier;\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cb0a1e0dc50a305b693edcea6b70ea731738d0a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTk5NTcyOnYy", "diffSide": "RIGHT", "path": "runtime/vm/BytecodeInterpreter.hpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDozMjozOVrOF9sr4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDozNDoxMFrOF9swaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIzOTU4Nw==", "bodyText": "syncObject may no longer be valid after enterObjectMonitor.", "url": "https://github.com/eclipse-openj9/openj9/pull/8889#discussion_r400239587", "createdAt": "2020-03-30T14:32:39Z", "author": {"login": "gacholio"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -1649,12 +1661,25 @@ obj:;\n \t\t\trc = GOTO_ASYNC_CHECK;\n \t\t\tgoto done;\n \t\t}\n-\t\tif (0 == monitorRC) {\n-\t\t\t/* Monitor was not entered - hide the frame to prevent exception throw from processing it.\n-\t\t\t * Note that BP can not have changed during a failed enter.\n-\t\t\t */\n+\n+\t\tif (monitorRC < J9_OBJECT_MONITOR_BLOCKING) {\n \t\t\t*bp |= J9SF_A0_INVISIBLE_TAG;\n-\t\t\trc = THROW_MONITOR_ALLOC_FAIL;\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t\t\tif (J9_OBJECT_MONITOR_VALUE_TYPE_IMSE == monitorRC) {\n+\t\t\t\tJ9UTF8 *badClassName = J9ROMCLASS_CLASSNAME(J9OBJECT_CLAZZ(_currentThread, syncObject)->romClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cb0a1e0dc50a305b693edcea6b70ea731738d0a"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0MDc0NA==", "bodyText": "Hmm, maybe this is OK based on the comment above about not releasing VM access in any failure case.", "url": "https://github.com/eclipse-openj9/openj9/pull/8889#discussion_r400240744", "createdAt": "2020-03-30T14:34:10Z", "author": {"login": "gacholio"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -1649,12 +1661,25 @@ obj:;\n \t\t\trc = GOTO_ASYNC_CHECK;\n \t\t\tgoto done;\n \t\t}\n-\t\tif (0 == monitorRC) {\n-\t\t\t/* Monitor was not entered - hide the frame to prevent exception throw from processing it.\n-\t\t\t * Note that BP can not have changed during a failed enter.\n-\t\t\t */\n+\n+\t\tif (monitorRC < J9_OBJECT_MONITOR_BLOCKING) {\n \t\t\t*bp |= J9SF_A0_INVISIBLE_TAG;\n-\t\t\trc = THROW_MONITOR_ALLOC_FAIL;\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t\t\tif (J9_OBJECT_MONITOR_VALUE_TYPE_IMSE == monitorRC) {\n+\t\t\t\tJ9UTF8 *badClassName = J9ROMCLASS_CLASSNAME(J9OBJECT_CLAZZ(_currentThread, syncObject)->romClass);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIzOTU4Nw=="}, "originalCommit": {"oid": "4cb0a1e0dc50a305b693edcea6b70ea731738d0a"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjAwODI1OnYy", "diffSide": "RIGHT", "path": "runtime/vm/BytecodeInterpreter.hpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNDozNToxNFrOF9sz5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNToyNzoxM1rOF9vVeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0MTYzOQ==", "bodyText": "Do you need to handle other cases here (are we 100% sure Thread will never be a VT?)", "url": "https://github.com/eclipse-openj9/openj9/pull/8889#discussion_r400241639", "createdAt": "2020-03-30T14:35:14Z", "author": {"login": "gacholio"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -2584,10 +2633,10 @@ done:;\n \t\tj9object_t threadLock = J9VMJAVALANGTHREAD_LOCK(_currentThread, _currentThread->threadObject);\n \t\tif (!VM_ObjectMonitor::inlineFastObjectMonitorEnter(_currentThread, threadLock)) {\n \t\t\tIDATA monitorRC = objectMonitorEnterNonBlocking(_currentThread, threadLock);\n-\t\t\tif (0 == monitorRC) {\n+\t\t\tif (J9_OBJECT_MONITOR_OOM == monitorRC) {\n \t\t\t\trc = THROW_MONITOR_ALLOC_FAIL;\n \t\t\t\tgoto done;\n-\t\t\t} else if (1 == monitorRC) {\n+\t\t\t} else if (J9_OBJECT_MONITOR_BLOCKING == monitorRC) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cb0a1e0dc50a305b693edcea6b70ea731738d0a"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI4MzAwMQ==", "bodyText": "j.l.Thread has a known subclass ForkJoinWorkerThread so it could never be a valuetype", "url": "https://github.com/eclipse-openj9/openj9/pull/8889#discussion_r400283001", "createdAt": "2020-03-30T15:27:13Z", "author": {"login": "tajila"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -2584,10 +2633,10 @@ done:;\n \t\tj9object_t threadLock = J9VMJAVALANGTHREAD_LOCK(_currentThread, _currentThread->threadObject);\n \t\tif (!VM_ObjectMonitor::inlineFastObjectMonitorEnter(_currentThread, threadLock)) {\n \t\t\tIDATA monitorRC = objectMonitorEnterNonBlocking(_currentThread, threadLock);\n-\t\t\tif (0 == monitorRC) {\n+\t\t\tif (J9_OBJECT_MONITOR_OOM == monitorRC) {\n \t\t\t\trc = THROW_MONITOR_ALLOC_FAIL;\n \t\t\t\tgoto done;\n-\t\t\t} else if (1 == monitorRC) {\n+\t\t\t} else if (J9_OBJECT_MONITOR_BLOCKING == monitorRC) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI0MTYzOQ=="}, "originalCommit": {"oid": "4cb0a1e0dc50a305b693edcea6b70ea731738d0a"}, "originalPosition": 144}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjMwNTQ2OnYy", "diffSide": "RIGHT", "path": "runtime/codert_vm/cnathelp.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNTozNToyMFrOF9vtkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNTozNToyMFrOF9vtkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDI4OTE3MQ==", "bodyText": "Could goto done here as well for consistency, but I won't insist.", "url": "https://github.com/eclipse-openj9/openj9/pull/8889#discussion_r400289171", "createdAt": "2020-03-30T15:35:20Z", "author": {"login": "gacholio"}, "path": "runtime/codert_vm/cnathelp.cpp", "diffHunk": "@@ -1147,14 +1156,23 @@ slow_jitMonitorEnterImpl(J9VMThread *currentThread, bool forMethod)\n \t\t\t\tresolveFrame->specialFrameFlags = (resolveFrame->specialFrameFlags & ~J9_STACK_FLAGS_JIT_FRAME_SUB_TYPE_MASK) | J9_STACK_FLAGS_JIT_FAILED_METHOD_MONITOR_ENTER_RESOLVE;\n \t\t\t}\n \t\t}\n-\t\taddr = setNativeOutOfMemoryErrorFromJIT(currentThread, J9NLS_VM_FAILED_TO_ALLOCATE_MONITOR);\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t\tif (J9_OBJECT_MONITOR_VALUE_TYPE_IMSE == monstatus) {\n+\t\t\taddr = setCurrentExceptionNLSWithArgsFromJIT(currentThread, J9NLS_VM_ERROR_BYTECODE_OBJECTREF_CANNOT_BE_VALUE_TYPE, J9VMCONSTANTPOOL_JAVALANGILLEGALMONITORSTATEEXCEPTION);\n+\t\t\tgoto done;\n+\t\t}\n+#endif /* defined(J9VM_OPT_VALHALLA_VALUE_TYPES) */\n+\t\tif (J9_OBJECT_MONITOR_OOM == monstatus) {\n+\t\t\taddr = setNativeOutOfMemoryErrorFromJIT(currentThread, J9NLS_VM_FAILED_TO_ALLOCATE_MONITOR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77d46801edc1023eb35a8c4124bf143cf728984b"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4Mjc0NTAxOnYy", "diffSide": "RIGHT", "path": "runtime/vm/BytecodeInterpreter.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzoxNjo0OFrOF9z_fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzoxNjo0OFrOF9z_fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM1OTI5Mw==", "bodyText": "There are many copies of this code - should be helperized, preferrably with a new bytecode action (you'll have to store the syncObject somewhere in the vmThread or interpreter instance to pass it along).", "url": "https://github.com/eclipse-openj9/openj9/pull/8889#discussion_r400359293", "createdAt": "2020-03-30T17:16:48Z", "author": {"login": "gacholio"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -1649,12 +1662,25 @@ obj:;\n \t\t\trc = GOTO_ASYNC_CHECK;\n \t\t\tgoto done;\n \t\t}\n-\t\tif (0 == monitorRC) {\n-\t\t\t/* Monitor was not entered - hide the frame to prevent exception throw from processing it.\n-\t\t\t * Note that BP can not have changed during a failed enter.\n-\t\t\t */\n+\n+\t\tif (monitorRC < J9_OBJECT_MONITOR_BLOCKING) {\n \t\t\t*bp |= J9SF_A0_INVISIBLE_TAG;\n-\t\t\trc = THROW_MONITOR_ALLOC_FAIL;\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t\t\tif (J9_OBJECT_MONITOR_VALUE_TYPE_IMSE == monitorRC) {\n+\t\t\t\tJ9UTF8 *badClassName = J9ROMCLASS_CLASSNAME(J9OBJECT_CLAZZ(_currentThread, syncObject)->romClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "176dc185b6eca45d59a9a845437d6d22a568b852"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 543, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}