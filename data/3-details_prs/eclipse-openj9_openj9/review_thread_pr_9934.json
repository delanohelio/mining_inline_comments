{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NTkzMjg2", "number": 9934, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjoyNzo1OFrOEG01oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMjoyMDowMlrOEHGKXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTkyNjA5OnYy", "diffSide": "RIGHT", "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjoyNzo1OFrOGl3E2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo0MDozN1rOGl3jFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1Mjg1OQ==", "bodyText": "This sequence might better be handled by:\n    Assert.fail(\"Failed to create subthread\", e);\n\nSee org.testng.Assert#fail", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442352859", "createdAt": "2020-06-18T16:27:58Z", "author": {"login": "keithc-ca"}, "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "diffHunk": "@@ -163,6 +163,7 @@ public void test_Constructor2() {\n \t\t\tct = new Thread(new SimpleThread(10));\n \t\t\tct.start();\n \t\t} catch (Exception e) {\n+\t\t\te.printStackTrace();\n \t\t\tAssertJUnit.assertTrue(\"Failed to create subthread\", false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d4b734a93e2070ff3a93142b93b7feccd42c57"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2MDU5OA==", "bodyText": "Updated", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442360598", "createdAt": "2020-06-18T16:40:37Z", "author": {"login": "pshipton"}, "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "diffHunk": "@@ -163,6 +163,7 @@ public void test_Constructor2() {\n \t\t\tct = new Thread(new SimpleThread(10));\n \t\t\tct.start();\n \t\t} catch (Exception e) {\n+\t\t\te.printStackTrace();\n \t\t\tAssertJUnit.assertTrue(\"Failed to create subthread\", false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1Mjg1OQ=="}, "originalCommit": {"oid": "e0d4b734a93e2070ff3a93142b93b7feccd42c57"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjAwNjE4OnYy", "diffSide": "RIGHT", "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo0ODozNFrOGl33xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo1NzozNlrOGl4MUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2NTg5Mg==", "bodyText": "The local variable result becomes useless with this change. Unless we expect to revert this later, the local variables should be removed (here and in test_join2() and test_join3()).", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442365892", "createdAt": "2020-06-18T16:48:34Z", "author": {"login": "keithc-ca"}, "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "diffHunk": "@@ -787,6 +787,7 @@ public void test_join() {\n \t\t\t// }\n \t\t\tth.join();\n \t\t} catch (InterruptedException e) {\n+\t\t\tAssertJUnit.fail(\"Interrupted\", e);\n \t\t\tresult = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "638ebe485c1cce9b4f6b4f8a8e7501c66d07becd"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3MTE1NQ==", "bodyText": "Updated.", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442371155", "createdAt": "2020-06-18T16:57:36Z", "author": {"login": "pshipton"}, "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "diffHunk": "@@ -787,6 +787,7 @@ public void test_join() {\n \t\t\t// }\n \t\t\tth.join();\n \t\t} catch (InterruptedException e) {\n+\t\t\tAssertJUnit.fail(\"Interrupted\", e);\n \t\t\tresult = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2NTg5Mg=="}, "originalCommit": {"oid": "638ebe485c1cce9b4f6b4f8a8e7501c66d07becd"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjA4NTgyOnYy", "diffSide": "RIGHT", "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNzoxMjowNlrOGl4r1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMTo1MjozNlrOGmBcgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3OTIyMw==", "bodyText": "What is the purpose of the comments referring to 'killer' (there is nothing available here by that name)?", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442379223", "createdAt": "2020-06-18T17:12:06Z", "author": {"login": "keithc-ca"}, "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "diffHunk": "@@ -787,10 +786,10 @@ public void test_join() {\n \t\t\t// }\n \t\t\tth.join();\n \t\t} catch (InterruptedException e) {\n-\t\t\tresult = false;\n+\t\t\t// killer.interrupt();\n+\t\t\tAssertJUnit.fail(\"Hung joining a non-started thread\", e);\n \t\t}\n \t\t// killer.interrupt();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d42eb8293748aa20f10f6fa182574c97fea09445"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUyMjc1Mg==", "bodyText": "I couldn't say, just keeping it consistent with what was already there.\nI've removed the hopefully obsolete comments.", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442522752", "createdAt": "2020-06-18T21:52:36Z", "author": {"login": "pshipton"}, "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "diffHunk": "@@ -787,10 +786,10 @@ public void test_join() {\n \t\t\t// }\n \t\t\tth.join();\n \t\t} catch (InterruptedException e) {\n-\t\t\tresult = false;\n+\t\t\t// killer.interrupt();\n+\t\t\tAssertJUnit.fail(\"Hung joining a non-started thread\", e);\n \t\t}\n \t\t// killer.interrupt();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3OTIyMw=="}, "originalCommit": {"oid": "d42eb8293748aa20f10f6fa182574c97fea09445"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1ODc2NDQ1OnYy", "diffSide": "RIGHT", "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMjoyMDowMlrOGmSz4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMzoxMTo0M1rOGmUUKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwNzI2NA==", "bodyText": "This needs to use Assert.fail like on line 276 below. This correction is required several other places below.", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442807264", "createdAt": "2020-06-19T12:20:02Z", "author": {"login": "keithc-ca"}, "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "diffHunk": "@@ -163,7 +163,7 @@ public void test_Constructor2() {\n \t\t\tct = new Thread(new SimpleThread(10));\n \t\t\tct.start();\n \t\t} catch (Exception e) {\n-\t\t\tAssertJUnit.assertTrue(\"Failed to create subthread\", false);\n+\t\t\tAssertJUnit.fail(\"Failed to create subthread\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1a51b6178ee017839cdb69866271300e837cee9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgzMTkxMg==", "bodyText": "Fixed, I hope.", "url": "https://github.com/eclipse-openj9/openj9/pull/9934#discussion_r442831912", "createdAt": "2020-06-19T13:11:43Z", "author": {"login": "pshipton"}, "path": "test/functional/Java8andUp/src/org/openj9/test/java/lang/Test_Thread.java", "diffHunk": "@@ -163,7 +163,7 @@ public void test_Constructor2() {\n \t\t\tct = new Thread(new SimpleThread(10));\n \t\t\tct.start();\n \t\t} catch (Exception e) {\n-\t\t\tAssertJUnit.assertTrue(\"Failed to create subthread\", false);\n+\t\t\tAssertJUnit.fail(\"Failed to create subthread\", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgwNzI2NA=="}, "originalCommit": {"oid": "c1a51b6178ee017839cdb69866271300e837cee9"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 39, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}