{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MzQ5NTE1", "number": 10932, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDo1NDo0NlrOEvjoBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMzoxMjoxMVrOEvlLYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzAyMjEyOnYy", "diffSide": "RIGHT", "path": "runtime/bcverify/rtverify.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDo1NDo0NlrOHkmtVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMzoxMToxNVrOHko_ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE0NDk4Mw==", "bodyText": "is this applicable to both the JBinvokehandle and the  JBinvokehandlegeneric cases?", "url": "https://github.com/eclipse-openj9/openj9/pull/10932#discussion_r508144983", "createdAt": "2020-10-20T00:54:46Z", "author": {"login": "DanHeidinga"}, "path": "runtime/bcverify/rtverify.c", "diffHunk": "@@ -1531,15 +1531,26 @@ verifyBytecodes (J9BytecodeVerificationData * verifyData)\n \t\t\t\t * cases of invokevirtual which only invoke public methods of a public class.\n \t\t\t\t */\n \n+\t\t\t\t/* Remove the receiver from the stack. */\n+\t\t\t\ttype = POP;\n \t\t\t\t/* Receiver compatible with MethodHandle? */\n-\t\t\t\ttype = POP;\t\t/* Remove the receiver from the stack */\n-\t\t\t\trc = isClassCompatibleByName (verifyData, type, (U_8 *)\"java/lang/invoke/MethodHandle\", sizeof(\"java/lang/invoke/MethodHandle\") - 1, &reasonCode);\n+\t\t\t\trc = isClassCompatibleByName(verifyData, type, (U_8 *)\"java/lang/invoke/MethodHandle\", sizeof(\"java/lang/invoke/MethodHandle\") - 1, &reasonCode);\n+#if defined(J9VM_OPT_OPENJDK_METHODHANDLE)\n+\t\t\t\tif (FALSE == rc) {\n+\t\t\t\t\tif (BCV_ERR_INSUFFICIENT_MEMORY == reasonCode) {\n+\t\t\t\t\t\tgoto _outOfMemoryError;\n+\t\t\t\t\t}\n+\t\t\t\t\t/* Receiver compatible with VarHandle? */\n+\t\t\t\t\trc = isClassCompatibleByName(verifyData, type, (U_8 *)\"java/lang/invoke/VarHandle\", sizeof(\"java/lang/invoke/VarHandle\") - 1, &reasonCode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ca885de33637e559ff9bd308088d21cc5a02024"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE4MjQ1OA==", "bodyText": "Just the invokehandle scenario. I should skip the VarHandle check for JBinvokehandlegeneric.", "url": "https://github.com/eclipse-openj9/openj9/pull/10932#discussion_r508182458", "createdAt": "2020-10-20T03:11:15Z", "author": {"login": "babsingh"}, "path": "runtime/bcverify/rtverify.c", "diffHunk": "@@ -1531,15 +1531,26 @@ verifyBytecodes (J9BytecodeVerificationData * verifyData)\n \t\t\t\t * cases of invokevirtual which only invoke public methods of a public class.\n \t\t\t\t */\n \n+\t\t\t\t/* Remove the receiver from the stack. */\n+\t\t\t\ttype = POP;\n \t\t\t\t/* Receiver compatible with MethodHandle? */\n-\t\t\t\ttype = POP;\t\t/* Remove the receiver from the stack */\n-\t\t\t\trc = isClassCompatibleByName (verifyData, type, (U_8 *)\"java/lang/invoke/MethodHandle\", sizeof(\"java/lang/invoke/MethodHandle\") - 1, &reasonCode);\n+\t\t\t\trc = isClassCompatibleByName(verifyData, type, (U_8 *)\"java/lang/invoke/MethodHandle\", sizeof(\"java/lang/invoke/MethodHandle\") - 1, &reasonCode);\n+#if defined(J9VM_OPT_OPENJDK_METHODHANDLE)\n+\t\t\t\tif (FALSE == rc) {\n+\t\t\t\t\tif (BCV_ERR_INSUFFICIENT_MEMORY == reasonCode) {\n+\t\t\t\t\t\tgoto _outOfMemoryError;\n+\t\t\t\t\t}\n+\t\t\t\t\t/* Receiver compatible with VarHandle? */\n+\t\t\t\t\trc = isClassCompatibleByName(verifyData, type, (U_8 *)\"java/lang/invoke/VarHandle\", sizeof(\"java/lang/invoke/VarHandle\") - 1, &reasonCode);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE0NDk4Mw=="}, "originalCommit": {"oid": "7ca885de33637e559ff9bd308088d21cc5a02024"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzI3NjUxOnYy", "diffSide": "RIGHT", "path": "runtime/bcverify/rtverify.c", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMzoxMjoxMVrOHkpAvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMzoxMjoxMVrOHkpAvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE4MjcxNg==", "bodyText": "^^^ Updated to perform the VarHandle check only for JBinvokehandle.", "url": "https://github.com/eclipse-openj9/openj9/pull/10932#discussion_r508182716", "createdAt": "2020-10-20T03:12:11Z", "author": {"login": "babsingh"}, "path": "runtime/bcverify/rtverify.c", "diffHunk": "@@ -1531,15 +1531,26 @@ verifyBytecodes (J9BytecodeVerificationData * verifyData)\n \t\t\t\t * cases of invokevirtual which only invoke public methods of a public class.\n \t\t\t\t */\n \n+\t\t\t\t/* Remove the receiver from the stack. */\n+\t\t\t\ttype = POP;\n \t\t\t\t/* Receiver compatible with MethodHandle? */\n-\t\t\t\ttype = POP;\t\t/* Remove the receiver from the stack */\n-\t\t\t\trc = isClassCompatibleByName (verifyData, type, (U_8 *)\"java/lang/invoke/MethodHandle\", sizeof(\"java/lang/invoke/MethodHandle\") - 1, &reasonCode);\n+\t\t\t\trc = isClassCompatibleByName(verifyData, type, (U_8 *)\"java/lang/invoke/MethodHandle\", sizeof(\"java/lang/invoke/MethodHandle\") - 1, &reasonCode);\n+#if defined(J9VM_OPT_OPENJDK_METHODHANDLE)\n+\t\t\t\tif ((JBinvokehandle == bc) && (FALSE == rc)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5ae90ca46ad4a171717bf3a509deca485f93f02"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1185, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}