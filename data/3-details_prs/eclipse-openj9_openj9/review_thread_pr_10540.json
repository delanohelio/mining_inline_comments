{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMjc1MDg4", "number": 10540, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjo1NDo1M1rOEkJIvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzo0OTozN1rOEkKVHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzMzODg3OnYy", "diffSide": "RIGHT", "path": "runtime/include/j9cfg.h.in", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjo1NDo1M1rOHS53Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzo1MToyMlrOHS710w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4NDQ4Ng==", "bodyText": "Please retain sorted order of flags.", "url": "https://github.com/eclipse-openj9/openj9/pull/10540#discussion_r489584486", "createdAt": "2020-09-16T16:54:53Z", "author": {"login": "keithc-ca"}, "path": "runtime/include/j9cfg.h.in", "diffHunk": "@@ -223,6 +223,7 @@ extern \"C\" {\n #cmakedefine J9VM_OPT_JXE_LOAD_SUPPORT\n #cmakedefine J9VM_OPT_MEMORY_CHECK_SUPPORT\n #cmakedefine J9VM_OPT_METHOD_HANDLE\n+#cmakedefine J9VM_OPT_OPENJDK_METHODHANDLE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7752d5a0b1984d3af2131bec4bd713a97fa036a1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYxNjg1MQ==", "bodyText": "Retained sorted order.", "url": "https://github.com/eclipse-openj9/openj9/pull/10540#discussion_r489616851", "createdAt": "2020-09-16T17:51:22Z", "author": {"login": "babsingh"}, "path": "runtime/include/j9cfg.h.in", "diffHunk": "@@ -223,6 +223,7 @@ extern \"C\" {\n #cmakedefine J9VM_OPT_JXE_LOAD_SUPPORT\n #cmakedefine J9VM_OPT_MEMORY_CHECK_SUPPORT\n #cmakedefine J9VM_OPT_METHOD_HANDLE\n+#cmakedefine J9VM_OPT_OPENJDK_METHODHANDLE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4NDQ4Ng=="}, "originalCommit": {"oid": "7752d5a0b1984d3af2131bec4bd713a97fa036a1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzUyNjE5OnYy", "diffSide": "RIGHT", "path": "buildspecs/core.feature", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzo0NzoxNFrOHS7sjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODoxOTo0OFrOHS8yxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYxNDQ3OA==", "bodyText": "Perhaps this should be opt_openjdkMethodHandle (with a capital 'H') for consistency with opt_methodHandle?", "url": "https://github.com/eclipse-openj9/openj9/pull/10540#discussion_r489614478", "createdAt": "2020-09-16T17:47:14Z", "author": {"login": "keithc-ca"}, "path": "buildspecs/core.feature", "diffHunk": "@@ -110,8 +110,10 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n \t\t<flag id=\"opt_inlineJsrs\" value=\"true\"/>\n \t\t<flag id=\"opt_jitserver\" value=\"false\"/>\n \t\t<flag id=\"opt_module\" value=\"true\"/>\n+\t\t<flag id=\"opt_methodHandle\" value=\"true\"/>\n \t\t<flag id=\"opt_newObjectHash\" value=\"true\"/>\n \t\t<flag id=\"opt_newRomClassBuilder\" value=\"true\"/>\n+\t\t<flag id=\"opt_openjdkMethodhandle\" value=\"false\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02acca3d02db22f4d8f7c1d7a6be4fd70bf3ed79"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYyMzE1Mw==", "bodyText": "This syntax is already being used by 4+ developers across their branches. Worried that it may be a hassle for them to update it across all their changes. Also, the JPP tag is OPENJDK_METHODHANDLES, which has been merged. There is already inconsistency w.r.t. OPENJDK_METHODHANDLES. I would let the name stay as-is since we are prioritizing on functional completion.", "url": "https://github.com/eclipse-openj9/openj9/pull/10540#discussion_r489623153", "createdAt": "2020-09-16T18:02:34Z", "author": {"login": "babsingh"}, "path": "buildspecs/core.feature", "diffHunk": "@@ -110,8 +110,10 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n \t\t<flag id=\"opt_inlineJsrs\" value=\"true\"/>\n \t\t<flag id=\"opt_jitserver\" value=\"false\"/>\n \t\t<flag id=\"opt_module\" value=\"true\"/>\n+\t\t<flag id=\"opt_methodHandle\" value=\"true\"/>\n \t\t<flag id=\"opt_newObjectHash\" value=\"true\"/>\n \t\t<flag id=\"opt_newRomClassBuilder\" value=\"true\"/>\n+\t\t<flag id=\"opt_openjdkMethodhandle\" value=\"false\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYxNDQ3OA=="}, "originalCommit": {"oid": "02acca3d02db22f4d8f7c1d7a6be4fd70bf3ed79"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYzMjQ1NA==", "bodyText": "Fair enough.", "url": "https://github.com/eclipse-openj9/openj9/pull/10540#discussion_r489632454", "createdAt": "2020-09-16T18:19:48Z", "author": {"login": "keithc-ca"}, "path": "buildspecs/core.feature", "diffHunk": "@@ -110,8 +110,10 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n \t\t<flag id=\"opt_inlineJsrs\" value=\"true\"/>\n \t\t<flag id=\"opt_jitserver\" value=\"false\"/>\n \t\t<flag id=\"opt_module\" value=\"true\"/>\n+\t\t<flag id=\"opt_methodHandle\" value=\"true\"/>\n \t\t<flag id=\"opt_newObjectHash\" value=\"true\"/>\n \t\t<flag id=\"opt_newRomClassBuilder\" value=\"true\"/>\n+\t\t<flag id=\"opt_openjdkMethodhandle\" value=\"false\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYxNDQ3OA=="}, "originalCommit": {"oid": "02acca3d02db22f4d8f7c1d7a6be4fd70bf3ed79"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzUzNDM5OnYy", "diffSide": "RIGHT", "path": "runtime/cmake/options.cmake", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNzo0OTozN1rOHS7xwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODoxODo0NVrOHS8weg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYxNTgwOA==", "bodyText": "Is there code somewhere that will yield an error if both J9VM_OPT_METHOD_HANDLE and J9VM_OPT_OPENJDK_METHODHANDLE are enabled? Same question for UMA builds?", "url": "https://github.com/eclipse-openj9/openj9/pull/10540#discussion_r489615808", "createdAt": "2020-09-16T17:49:37Z", "author": {"login": "keithc-ca"}, "path": "runtime/cmake/options.cmake", "diffHunk": "@@ -132,9 +132,10 @@ option(J9VM_OPT_FRAGMENT_RAM_CLASSES \"Transitional flag for the the GC during th\n option(J9VM_OPT_JVMTI \"Support for the JVMTI interface\")\n option(J9VM_OPT_JXE_LOAD_SUPPORT \"Controls if main will allow -jxe: and relocate the disk image for you.\")\n \n-option(J9VM_OPT_METHOD_HANDLE \"Turns on methodhandle support\")\n+option(J9VM_OPT_METHOD_HANDLE \"Enables support for OpenJ9 MethodHandles. J9VM_OPT_OPENJDK_METHODHANDLE should be disabled.\")\n option(J9VM_OPT_MODULE \"Turns on module support\")\n option(J9VM_OPT_MULTI_VM \"Decides if multiple VMs can be created in the same address space\")\n+option(J9VM_OPT_OPENJDK_METHODHANDLE \"Enables support for OpenJDK MethodHandles. J9VM_OPT_METHOD_HANDLE should be disabled.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8d2c9dec0dd7a38806be018b76e3e0ca58dc1e0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYxODI0Ng==", "bodyText": "No. Do you have examples where such error-checks were introduced?", "url": "https://github.com/eclipse-openj9/openj9/pull/10540#discussion_r489618246", "createdAt": "2020-09-16T17:53:55Z", "author": {"login": "babsingh"}, "path": "runtime/cmake/options.cmake", "diffHunk": "@@ -132,9 +132,10 @@ option(J9VM_OPT_FRAGMENT_RAM_CLASSES \"Transitional flag for the the GC during th\n option(J9VM_OPT_JVMTI \"Support for the JVMTI interface\")\n option(J9VM_OPT_JXE_LOAD_SUPPORT \"Controls if main will allow -jxe: and relocate the disk image for you.\")\n \n-option(J9VM_OPT_METHOD_HANDLE \"Turns on methodhandle support\")\n+option(J9VM_OPT_METHOD_HANDLE \"Enables support for OpenJ9 MethodHandles. J9VM_OPT_OPENJDK_METHODHANDLE should be disabled.\")\n option(J9VM_OPT_MODULE \"Turns on module support\")\n option(J9VM_OPT_MULTI_VM \"Decides if multiple VMs can be created in the same address space\")\n+option(J9VM_OPT_OPENJDK_METHODHANDLE \"Enables support for OpenJDK MethodHandles. J9VM_OPT_METHOD_HANDLE should be disabled.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYxNTgwOA=="}, "originalCommit": {"oid": "e8d2c9dec0dd7a38806be018b76e3e0ca58dc1e0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYzMTg2Ng==", "bodyText": "On second thought, perhaps it's not worth worrying about; the code in OpenJ9.gmk in the extension repos won't permit that situation.", "url": "https://github.com/eclipse-openj9/openj9/pull/10540#discussion_r489631866", "createdAt": "2020-09-16T18:18:45Z", "author": {"login": "keithc-ca"}, "path": "runtime/cmake/options.cmake", "diffHunk": "@@ -132,9 +132,10 @@ option(J9VM_OPT_FRAGMENT_RAM_CLASSES \"Transitional flag for the the GC during th\n option(J9VM_OPT_JVMTI \"Support for the JVMTI interface\")\n option(J9VM_OPT_JXE_LOAD_SUPPORT \"Controls if main will allow -jxe: and relocate the disk image for you.\")\n \n-option(J9VM_OPT_METHOD_HANDLE \"Turns on methodhandle support\")\n+option(J9VM_OPT_METHOD_HANDLE \"Enables support for OpenJ9 MethodHandles. J9VM_OPT_OPENJDK_METHODHANDLE should be disabled.\")\n option(J9VM_OPT_MODULE \"Turns on module support\")\n option(J9VM_OPT_MULTI_VM \"Decides if multiple VMs can be created in the same address space\")\n+option(J9VM_OPT_OPENJDK_METHODHANDLE \"Enables support for OpenJDK MethodHandles. J9VM_OPT_METHOD_HANDLE should be disabled.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYxNTgwOA=="}, "originalCommit": {"oid": "e8d2c9dec0dd7a38806be018b76e3e0ca58dc1e0"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4578, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}