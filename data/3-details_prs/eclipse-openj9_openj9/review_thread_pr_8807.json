{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NzU1MDg0", "number": 8807, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMToyNTo1N1rODtWABw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMToyNTo1N1rODtWABw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODcyOTY3OnYy", "diffSide": "LEFT", "path": "runtime/cmake/platform.cmake", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwMToyNTo1N1rOF-tu2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTo1MDoxNVrOF_HGlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMwNTMwNw==", "bodyText": "Is -pthread also inherited from omr?", "url": "https://github.com/eclipse-openj9/openj9/pull/8807#discussion_r401305307", "createdAt": "2020-04-01T01:25:57Z", "author": {"login": "pshipton"}, "path": "runtime/cmake/platform.cmake", "diffHunk": "@@ -20,57 +20,18 @@\n # SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n ################################################################################\n \n+# Get OMR's platform config\n include(OmrPlatform)\n-# Note: we need to inject WIN32 et al, as OMR no longer uses them\n-if(OMR_OS_WINDOWS)\n-    list(APPEND OMR_PLATFORM_DEFINITIONS\n-        -DWIN32\n-        -D_WIN32\n-    )\n-    if(OMR_ENV_DATA64)\n-        list(APPEND OMR_PLATFORM_DEFINITIONS\n-            -DWIN64\n-            -D_WIN64\n-        )\n-    endif()\n-endif()\n-omr_platform_global_setup()\n \n-if(OMR_TOOLCONFIG STREQUAL \"gnu\")\n-    set(CMAKE_CXX_FLAGS \" -g -fno-rtti -fno-exceptions ${CMAKE_CXX_FLAGS}\")\n-    set(CMAKE_C_FLAGS \"-g ${CMAKE_C_FLAGS}\")\n-\n-    # Raise an error if a shared library has any unresolved symbols.\n-    # This flag isn't supported on OSX, but it has this behaviour by default\n-    if(NOT OMR_OS_OSX)\n-        set(CMAKE_SHARED_LINKER_FLAGS \"-Wl,-z,defs ${CMAKE_SHARED_LINKER_FLAGS}\")\n-    endif()\n-    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -pthread -O3 -fno-strict-aliasing\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27054adaf3fd0e141bbdf4c6c54b7483a3c3b62"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcyMDk4MQ==", "bodyText": "yes\nhttps://github.com/eclipse/omr/blob/2053a62aa58722f07365f7783fe7982728bd839f/cmake/modules/platform/toolcfg/gnu.cmake#L86", "url": "https://github.com/eclipse-openj9/openj9/pull/8807#discussion_r401720981", "createdAt": "2020-04-01T15:50:15Z", "author": {"login": "dnakamura"}, "path": "runtime/cmake/platform.cmake", "diffHunk": "@@ -20,57 +20,18 @@\n # SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n ################################################################################\n \n+# Get OMR's platform config\n include(OmrPlatform)\n-# Note: we need to inject WIN32 et al, as OMR no longer uses them\n-if(OMR_OS_WINDOWS)\n-    list(APPEND OMR_PLATFORM_DEFINITIONS\n-        -DWIN32\n-        -D_WIN32\n-    )\n-    if(OMR_ENV_DATA64)\n-        list(APPEND OMR_PLATFORM_DEFINITIONS\n-            -DWIN64\n-            -D_WIN64\n-        )\n-    endif()\n-endif()\n-omr_platform_global_setup()\n \n-if(OMR_TOOLCONFIG STREQUAL \"gnu\")\n-    set(CMAKE_CXX_FLAGS \" -g -fno-rtti -fno-exceptions ${CMAKE_CXX_FLAGS}\")\n-    set(CMAKE_C_FLAGS \"-g ${CMAKE_C_FLAGS}\")\n-\n-    # Raise an error if a shared library has any unresolved symbols.\n-    # This flag isn't supported on OSX, but it has this behaviour by default\n-    if(NOT OMR_OS_OSX)\n-        set(CMAKE_SHARED_LINKER_FLAGS \"-Wl,-z,defs ${CMAKE_SHARED_LINKER_FLAGS}\")\n-    endif()\n-    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -pthread -O3 -fno-strict-aliasing\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTMwNTMwNw=="}, "originalCommit": {"oid": "b27054adaf3fd0e141bbdf4c6c54b7483a3c3b62"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 506, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}