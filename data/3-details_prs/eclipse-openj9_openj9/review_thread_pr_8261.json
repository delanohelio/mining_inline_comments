{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMDg1NTg5", "number": 8261, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjoyMDozNVrODXM-BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNjoxMzoxMFrODXksbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjU2MzI0OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/IProfiler.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjoyMDozNVrOFcZEQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjoyMDozNVrOFcZEQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMxNTEzOQ==", "bodyText": "Can I suggest getting the ROM class pointer by doing isOffsetInSharedCache(csInfoClazzOffset, &romClass) instead? It would be a bit more optimal.", "url": "https://github.com/eclipse-openj9/openj9/pull/8261#discussion_r365315139", "createdAt": "2020-01-10T16:20:35Z", "author": {"login": "ymanton"}, "path": "runtime/compiler/runtime/IProfiler.cpp", "diffHunk": "@@ -3147,9 +3147,9 @@ TR_IPBCDataCallGraph::loadFromPersistentCopy(TR_IPBCDataStorageHeader * storage,\n          {\n          J9Class *ramClass = NULL;\n \n-         uintptrj_t csInfoClazz = store->_csInfo.getClazz(i);\n-         if (comp->fej9()->sharedCache()->isPointerInSharedCache((void *)csInfoClazz))\n-            ramClass = ((TR_J9VM *)comp->fej9())->matchRAMclassFromROMclass((J9ROMClass *)comp->fej9()->sharedCache()->pointerFromOffsetInSharedCache(csInfoClazz), comp);\n+         uintptrj_t csInfoClazzOffset = store->_csInfo.getClazz(i);\n+         if (comp->fej9()->sharedCache()->isOffsetInSharedCache(csInfoClazzOffset))\n+            ramClass = ((TR_J9VM *)comp->fej9())->matchRAMclassFromROMclass((J9ROMClass *)comp->fej9()->sharedCache()->pointerFromOffsetInSharedCache(csInfoClazzOffset), comp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2fbd2d0cac604d94c81f59aa0687baad0dccc4a"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MDQ1MDM2OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/J9SharedCache.hpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNjoxMzoxMFrOFc8LCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNjoxMzoxMFrOFc8LCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg5MDMxMg==", "bodyText": "This would be clearer and closer to the truth, if the second parameter type was void **, or uintptrj_t *.", "url": "https://github.com/eclipse-openj9/openj9/pull/8261#discussion_r365890312", "createdAt": "2020-01-13T16:13:10Z", "author": {"login": "keithc-ca"}, "path": "runtime/compiler/env/J9SharedCache.hpp", "diffHunk": "@@ -123,6 +123,15 @@ class TR_J9SharedCache : public TR_SharedCache\n     */\n    virtual bool isPointerInSharedCache(void *ptr, uintptrj_t *cacheOffset = NULL);\n \n+   /**\n+    * \\brief Checks whether the specified offset is within the shared cache.\n+    *\n+    * \\param[in] offset The offset to check.\n+    * \\param[out] ptr If offset is within the shared cache and this parameter is not NULL the result of converting offset into a pointer will be returned here. If offset is not within the shared cache this parameter is ignored.\n+    * \\return True if the offset is within the shared cache, false otherwise.\n+    */\n+   virtual bool isOffsetInSharedCache(uintptrj_t offset, void *ptr = NULL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b809a9191a34e675f2e2d448a291ae3bb98026b1"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 734, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}