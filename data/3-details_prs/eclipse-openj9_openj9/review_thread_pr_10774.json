{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3MTA2MzI0", "number": 10774, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDowNTozNVrOEp7zSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODowNDo1MVrOEq3DLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDA2ODU4OnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDowNTozNVrOHb6J4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDoyNDoyNlrOHb6nvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAyNjQwMA==", "bodyText": "I might set default options for heap dumps as well.\njavacore defaults to exclusive+preempt\nheap defaults to exclusive+compact+prepwalk\nsystem and snap defaults to serial\nSee settings via -Xdump:<type>:defaults", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499026400", "createdAt": "2020-10-02T20:05:35Z", "author": {"login": "pshipton"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -273,12 +273,37 @@ private static DiagnosticProperties doDump(String diagnosticCommand) {\n \t\t\t}\n \t\t\tif (!dumpType.isEmpty()) {\n \t\t\t\tString request = dumpType;\n-\t\t\t\tif (parts.length == 2) {\n-\t\t\t\t\tString fileDirective = (\"system\".equals(dumpType) && IPC.isZOS) ? \":dsn=\" : \":file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n-\t\t\t\t\trequest += fileDirective + parts[1];\n+\t\t\t\tboolean foundSystemRequest = false;\n+\t\t\t\tboolean heapDump = \"heap\".equals(dumpType);\n+\t\t\t\tboolean systemDump = \"system\".equals(dumpType);\n+\t\t\t\tString options = \"\"; //$NON-NLS-1$\n+\t\t\t\tString separator = \":\"; //$NON-NLS-1$\n+\t\t\t\tfor (int i = 1; i < parts.length; i++) {\n+\t\t\t\t\tString option = parts[i];\n+\t\t\t\t\tboolean isRequest = option.startsWith(\"request=\");\n+\t\t\t\t\tboolean isOpts = option.startsWith(\"opts=\");\n+\t\t\t\t\tif (isRequest || isOpts) { //$NON-NLS-1$ //$NON-NLS-2$\n+\t\t\t\t\t\tif (heapDump && isOpts) {\n+\t\t\t\t\t\t\t// opts= are only valid for heap dumps\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\toptions += separator + option;\n+\t\t\t\t\t\tif (systemDump && isRequest) {\n+\t\t\t\t\t\t\tfoundSystemRequest = true;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tString fileDirective = (systemDump && IPC.isZOS) ? \"dsn=\" : \"file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n+\t\t\t\t\t\toptions += separator + fileDirective + option;\n+\t\t\t\t\t}\n+\t\t\t\t\tseparator = \",\"; //$NON-NLS-1$\n+\t\t\t\t}\n+\t\t\t\tif (systemDump && !foundSystemRequest) {\n+\t\t\t\t\t// default options for a system dump if the user didn't specify\n+\t\t\t\t\toptions += \"request=exclusive+prepwalk\";  //$NON-NLS-1$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9806852095bf3c334960351e974452052cf3fc71"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzMDU5Mg==", "bodyText": "As per [1],  by default -Xdump:java has request=exclusive+preempt, and -Xdump:heap has request=exclusive+compact+prepwalk,.\n[1] https://www.eclipse.org/openj9/docs/xdump/", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499030592", "createdAt": "2020-10-02T20:15:32Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -273,12 +273,37 @@ private static DiagnosticProperties doDump(String diagnosticCommand) {\n \t\t\t}\n \t\t\tif (!dumpType.isEmpty()) {\n \t\t\t\tString request = dumpType;\n-\t\t\t\tif (parts.length == 2) {\n-\t\t\t\t\tString fileDirective = (\"system\".equals(dumpType) && IPC.isZOS) ? \":dsn=\" : \":file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n-\t\t\t\t\trequest += fileDirective + parts[1];\n+\t\t\t\tboolean foundSystemRequest = false;\n+\t\t\t\tboolean heapDump = \"heap\".equals(dumpType);\n+\t\t\t\tboolean systemDump = \"system\".equals(dumpType);\n+\t\t\t\tString options = \"\"; //$NON-NLS-1$\n+\t\t\t\tString separator = \":\"; //$NON-NLS-1$\n+\t\t\t\tfor (int i = 1; i < parts.length; i++) {\n+\t\t\t\t\tString option = parts[i];\n+\t\t\t\t\tboolean isRequest = option.startsWith(\"request=\");\n+\t\t\t\t\tboolean isOpts = option.startsWith(\"opts=\");\n+\t\t\t\t\tif (isRequest || isOpts) { //$NON-NLS-1$ //$NON-NLS-2$\n+\t\t\t\t\t\tif (heapDump && isOpts) {\n+\t\t\t\t\t\t\t// opts= are only valid for heap dumps\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\toptions += separator + option;\n+\t\t\t\t\t\tif (systemDump && isRequest) {\n+\t\t\t\t\t\t\tfoundSystemRequest = true;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tString fileDirective = (systemDump && IPC.isZOS) ? \"dsn=\" : \"file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n+\t\t\t\t\t\toptions += separator + fileDirective + option;\n+\t\t\t\t\t}\n+\t\t\t\t\tseparator = \",\"; //$NON-NLS-1$\n+\t\t\t\t}\n+\t\t\t\tif (systemDump && !foundSystemRequest) {\n+\t\t\t\t\t// default options for a system dump if the user didn't specify\n+\t\t\t\t\toptions += \"request=exclusive+prepwalk\";  //$NON-NLS-1$", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAyNjQwMA=="}, "originalCommit": {"oid": "9806852095bf3c334960351e974452052cf3fc71"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAzNDA0NQ==", "bodyText": "This needs a separator before \"request\".\nPerhaps options should be a StringBuilder?", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499034045", "createdAt": "2020-10-02T20:24:26Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -273,12 +273,37 @@ private static DiagnosticProperties doDump(String diagnosticCommand) {\n \t\t\t}\n \t\t\tif (!dumpType.isEmpty()) {\n \t\t\t\tString request = dumpType;\n-\t\t\t\tif (parts.length == 2) {\n-\t\t\t\t\tString fileDirective = (\"system\".equals(dumpType) && IPC.isZOS) ? \":dsn=\" : \":file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n-\t\t\t\t\trequest += fileDirective + parts[1];\n+\t\t\t\tboolean foundSystemRequest = false;\n+\t\t\t\tboolean heapDump = \"heap\".equals(dumpType);\n+\t\t\t\tboolean systemDump = \"system\".equals(dumpType);\n+\t\t\t\tString options = \"\"; //$NON-NLS-1$\n+\t\t\t\tString separator = \":\"; //$NON-NLS-1$\n+\t\t\t\tfor (int i = 1; i < parts.length; i++) {\n+\t\t\t\t\tString option = parts[i];\n+\t\t\t\t\tboolean isRequest = option.startsWith(\"request=\");\n+\t\t\t\t\tboolean isOpts = option.startsWith(\"opts=\");\n+\t\t\t\t\tif (isRequest || isOpts) { //$NON-NLS-1$ //$NON-NLS-2$\n+\t\t\t\t\t\tif (heapDump && isOpts) {\n+\t\t\t\t\t\t\t// opts= are only valid for heap dumps\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\toptions += separator + option;\n+\t\t\t\t\t\tif (systemDump && isRequest) {\n+\t\t\t\t\t\t\tfoundSystemRequest = true;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tString fileDirective = (systemDump && IPC.isZOS) ? \"dsn=\" : \"file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n+\t\t\t\t\t\toptions += separator + fileDirective + option;\n+\t\t\t\t\t}\n+\t\t\t\t\tseparator = \",\"; //$NON-NLS-1$\n+\t\t\t\t}\n+\t\t\t\tif (systemDump && !foundSystemRequest) {\n+\t\t\t\t\t// default options for a system dump if the user didn't specify\n+\t\t\t\t\toptions += \"request=exclusive+prepwalk\";  //$NON-NLS-1$", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAyNjQwMA=="}, "originalCommit": {"oid": "9806852095bf3c334960351e974452052cf3fc71"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDA2ODgyOnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDowNTo0MFrOHb6KAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDo0MTowMFrOHb7BXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAyNjQzMw==", "bodyText": "System.err.println superfluous?", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499026433", "createdAt": "2020-10-02T20:05:40Z", "author": {"login": "kgibm"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -273,12 +273,37 @@ private static DiagnosticProperties doDump(String diagnosticCommand) {\n \t\t\t}\n \t\t\tif (!dumpType.isEmpty()) {\n \t\t\t\tString request = dumpType;\n-\t\t\t\tif (parts.length == 2) {\n-\t\t\t\t\tString fileDirective = (\"system\".equals(dumpType) && IPC.isZOS) ? \":dsn=\" : \":file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n-\t\t\t\t\trequest += fileDirective + parts[1];\n+\t\t\t\tboolean foundSystemRequest = false;\n+\t\t\t\tboolean heapDump = \"heap\".equals(dumpType);\n+\t\t\t\tboolean systemDump = \"system\".equals(dumpType);\n+\t\t\t\tString options = \"\"; //$NON-NLS-1$\n+\t\t\t\tString separator = \":\"; //$NON-NLS-1$\n+\t\t\t\tfor (int i = 1; i < parts.length; i++) {\n+\t\t\t\t\tString option = parts[i];\n+\t\t\t\t\tboolean isRequest = option.startsWith(\"request=\");\n+\t\t\t\t\tboolean isOpts = option.startsWith(\"opts=\");\n+\t\t\t\t\tif (isRequest || isOpts) { //$NON-NLS-1$ //$NON-NLS-2$\n+\t\t\t\t\t\tif (heapDump && isOpts) {\n+\t\t\t\t\t\t\t// opts= are only valid for heap dumps\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\toptions += separator + option;\n+\t\t\t\t\t\tif (systemDump && isRequest) {\n+\t\t\t\t\t\t\tfoundSystemRequest = true;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tString fileDirective = (systemDump && IPC.isZOS) ? \"dsn=\" : \"file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n+\t\t\t\t\t\toptions += separator + fileDirective + option;\n+\t\t\t\t\t}\n+\t\t\t\t\tseparator = \",\"; //$NON-NLS-1$\n+\t\t\t\t}\n+\t\t\t\tif (systemDump && !foundSystemRequest) {\n+\t\t\t\t\t// default options for a system dump if the user didn't specify\n+\t\t\t\t\toptions += \"request=exclusive+prepwalk\";  //$NON-NLS-1$\n \t\t\t\t}\n+\t\t\t\tSystem.err.println(\"request + options\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9806852095bf3c334960351e974452052cf3fc71"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA0MDYwNQ==", "bodyText": "For my debugging/testing", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499040605", "createdAt": "2020-10-02T20:41:00Z", "author": {"login": "pshipton"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -273,12 +273,37 @@ private static DiagnosticProperties doDump(String diagnosticCommand) {\n \t\t\t}\n \t\t\tif (!dumpType.isEmpty()) {\n \t\t\t\tString request = dumpType;\n-\t\t\t\tif (parts.length == 2) {\n-\t\t\t\t\tString fileDirective = (\"system\".equals(dumpType) && IPC.isZOS) ? \":dsn=\" : \":file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n-\t\t\t\t\trequest += fileDirective + parts[1];\n+\t\t\t\tboolean foundSystemRequest = false;\n+\t\t\t\tboolean heapDump = \"heap\".equals(dumpType);\n+\t\t\t\tboolean systemDump = \"system\".equals(dumpType);\n+\t\t\t\tString options = \"\"; //$NON-NLS-1$\n+\t\t\t\tString separator = \":\"; //$NON-NLS-1$\n+\t\t\t\tfor (int i = 1; i < parts.length; i++) {\n+\t\t\t\t\tString option = parts[i];\n+\t\t\t\t\tboolean isRequest = option.startsWith(\"request=\");\n+\t\t\t\t\tboolean isOpts = option.startsWith(\"opts=\");\n+\t\t\t\t\tif (isRequest || isOpts) { //$NON-NLS-1$ //$NON-NLS-2$\n+\t\t\t\t\t\tif (heapDump && isOpts) {\n+\t\t\t\t\t\t\t// opts= are only valid for heap dumps\n+\t\t\t\t\t\t\tbreak;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\toptions += separator + option;\n+\t\t\t\t\t\tif (systemDump && isRequest) {\n+\t\t\t\t\t\t\tfoundSystemRequest = true;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tString fileDirective = (systemDump && IPC.isZOS) ? \"dsn=\" : \"file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n+\t\t\t\t\t\toptions += separator + fileDirective + option;\n+\t\t\t\t\t}\n+\t\t\t\t\tseparator = \",\"; //$NON-NLS-1$\n+\t\t\t\t}\n+\t\t\t\tif (systemDump && !foundSystemRequest) {\n+\t\t\t\t\t// default options for a system dump if the user didn't specify\n+\t\t\t\t\toptions += \"request=exclusive+prepwalk\";  //$NON-NLS-1$\n \t\t\t\t}\n+\t\t\t\tSystem.err.println(\"request + options\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAyNjQzMw=="}, "originalCommit": {"oid": "9806852095bf3c334960351e974452052cf3fc71"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDA3MDAyOnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDowNjoxMVrOHb6KxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDo0MTozNlrOHb7CTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAyNjYyOA==", "bodyText": "Shouldn't this be systemDump && isOpts instead?", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499026628", "createdAt": "2020-10-02T20:06:11Z", "author": {"login": "kgibm"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -273,12 +273,37 @@ private static DiagnosticProperties doDump(String diagnosticCommand) {\n \t\t\t}\n \t\t\tif (!dumpType.isEmpty()) {\n \t\t\t\tString request = dumpType;\n-\t\t\t\tif (parts.length == 2) {\n-\t\t\t\t\tString fileDirective = (\"system\".equals(dumpType) && IPC.isZOS) ? \":dsn=\" : \":file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n-\t\t\t\t\trequest += fileDirective + parts[1];\n+\t\t\t\tboolean foundSystemRequest = false;\n+\t\t\t\tboolean heapDump = \"heap\".equals(dumpType);\n+\t\t\t\tboolean systemDump = \"system\".equals(dumpType);\n+\t\t\t\tString options = \"\"; //$NON-NLS-1$\n+\t\t\t\tString separator = \":\"; //$NON-NLS-1$\n+\t\t\t\tfor (int i = 1; i < parts.length; i++) {\n+\t\t\t\t\tString option = parts[i];\n+\t\t\t\t\tboolean isRequest = option.startsWith(\"request=\");\n+\t\t\t\t\tboolean isOpts = option.startsWith(\"opts=\");\n+\t\t\t\t\tif (isRequest || isOpts) { //$NON-NLS-1$ //$NON-NLS-2$\n+\t\t\t\t\t\tif (heapDump && isOpts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9806852095bf3c334960351e974452052cf3fc71"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA0MDg0Ng==", "bodyText": "Fixed it as !dumpDump && isOpts", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499040846", "createdAt": "2020-10-02T20:41:36Z", "author": {"login": "pshipton"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -273,12 +273,37 @@ private static DiagnosticProperties doDump(String diagnosticCommand) {\n \t\t\t}\n \t\t\tif (!dumpType.isEmpty()) {\n \t\t\t\tString request = dumpType;\n-\t\t\t\tif (parts.length == 2) {\n-\t\t\t\t\tString fileDirective = (\"system\".equals(dumpType) && IPC.isZOS) ? \":dsn=\" : \":file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n-\t\t\t\t\trequest += fileDirective + parts[1];\n+\t\t\t\tboolean foundSystemRequest = false;\n+\t\t\t\tboolean heapDump = \"heap\".equals(dumpType);\n+\t\t\t\tboolean systemDump = \"system\".equals(dumpType);\n+\t\t\t\tString options = \"\"; //$NON-NLS-1$\n+\t\t\t\tString separator = \":\"; //$NON-NLS-1$\n+\t\t\t\tfor (int i = 1; i < parts.length; i++) {\n+\t\t\t\t\tString option = parts[i];\n+\t\t\t\t\tboolean isRequest = option.startsWith(\"request=\");\n+\t\t\t\t\tboolean isOpts = option.startsWith(\"opts=\");\n+\t\t\t\t\tif (isRequest || isOpts) { //$NON-NLS-1$ //$NON-NLS-2$\n+\t\t\t\t\t\tif (heapDump && isOpts) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAyNjYyOA=="}, "originalCommit": {"oid": "9806852095bf3c334960351e974452052cf3fc71"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNDUxNjU4OnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "isResolved": false, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QwMDoxNTowNlrOHb-WuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNTo1MjozNFrOHcjYEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NTIyNA==", "bodyText": "does the order of these three entries matter? can we turn the <file path> to the similar key=value style, i.e., file=<file path> (dsn=<file path> for zOS)?", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499095224", "createdAt": "2020-10-03T00:15:06Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -46,7 +46,9 @@\n \tprivate static final String FORMAT_PREFIX = \" Format: \"; //$NON-NLS-1$\n \n \t@SuppressWarnings(\"nls\")\n-\tprivate static final String FILE_PATH_HELP = \" <file path>%n\"\n+\tprivate static final String DUMP_OPTION_HELP = \" [request=<options>] [opts=<options] [<file path>]%n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455e70b39ada872874dd4484108ac6babeae6f67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTEwMDI5NA==", "bodyText": "Seems like that would be a breaking change. Some users may already be using jcmd $pid Dump.system $file, for example.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499100294", "createdAt": "2020-10-03T00:53:59Z", "author": {"login": "kgibm"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -46,7 +46,9 @@\n \tprivate static final String FORMAT_PREFIX = \" Format: \"; //$NON-NLS-1$\n \n \t@SuppressWarnings(\"nls\")\n-\tprivate static final String FILE_PATH_HELP = \" <file path>%n\"\n+\tprivate static final String DUMP_OPTION_HELP = \" [request=<options>] [opts=<options] [<file path>]%n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NTIyNA=="}, "originalCommit": {"oid": "455e70b39ada872874dd4484108ac6babeae6f67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE4ODg3Mg==", "bodyText": "@kgibm Agreed that it will require a script change for the usage like your example. On the other hand, my feeling is that the proposed option format are not consistent, and might cause confusion down the road, IMO, maybe now it is the time to provide unified option format matching -Xdump.\nCan the example usage be modified to accommodate a new format hopefully with low cost?", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499188872", "createdAt": "2020-10-03T23:04:21Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -46,7 +46,9 @@\n \tprivate static final String FORMAT_PREFIX = \" Format: \"; //$NON-NLS-1$\n \n \t@SuppressWarnings(\"nls\")\n-\tprivate static final String FILE_PATH_HELP = \" <file path>%n\"\n+\tprivate static final String DUMP_OPTION_HELP = \" [request=<options>] [opts=<options] [<file path>]%n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NTIyNA=="}, "originalCommit": {"oid": "455e70b39ada872874dd4484108ac6babeae6f67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE5MTY3MQ==", "bodyText": "@JasonFengJ9 That's a fair point. I defer to others to decide. I guess one middle ground could be to support both: add support for file=/dns= and then assume that if an argument is not preceded with word=, then it is the file for backwards compatibility.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499191671", "createdAt": "2020-10-03T23:55:00Z", "author": {"login": "kgibm"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -46,7 +46,9 @@\n \tprivate static final String FORMAT_PREFIX = \" Format: \"; //$NON-NLS-1$\n \n \t@SuppressWarnings(\"nls\")\n-\tprivate static final String FILE_PATH_HELP = \" <file path>%n\"\n+\tprivate static final String DUMP_OPTION_HELP = \" [request=<options>] [opts=<options] [<file path>]%n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NTIyNA=="}, "originalCommit": {"oid": "455e70b39ada872874dd4484108ac6babeae6f67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMzMjgwOQ==", "bodyText": "The order doesn't matter. We could allow file= and dsn, but I don't want to break compatibility by changing the existing syntax.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499332809", "createdAt": "2020-10-05T03:40:36Z", "author": {"login": "pshipton"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -46,7 +46,9 @@\n \tprivate static final String FORMAT_PREFIX = \" Format: \"; //$NON-NLS-1$\n \n \t@SuppressWarnings(\"nls\")\n-\tprivate static final String FILE_PATH_HELP = \" <file path>%n\"\n+\tprivate static final String DUMP_OPTION_HELP = \" [request=<options>] [opts=<options] [<file path>]%n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NTIyNA=="}, "originalCommit": {"oid": "455e70b39ada872874dd4484108ac6babeae6f67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU2OTQ4OQ==", "bodyText": "Sure, no objection if the back compatibility takes precedence.\nAlso got another question, in current option format, just wondering how do we address The command can be extended to take other parameters as well so the user can set any options [1] (assuming such options available in -Xdump), or in a separated PR instead?\n[1] #10747 (comment)", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499569489", "createdAt": "2020-10-05T12:44:05Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -46,7 +46,9 @@\n \tprivate static final String FORMAT_PREFIX = \" Format: \"; //$NON-NLS-1$\n \n \t@SuppressWarnings(\"nls\")\n-\tprivate static final String FILE_PATH_HELP = \" <file path>%n\"\n+\tprivate static final String DUMP_OPTION_HELP = \" [request=<options>] [opts=<options] [<file path>]%n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NTIyNA=="}, "originalCommit": {"oid": "455e70b39ada872874dd4484108ac6babeae6f67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU3NDQzNA==", "bodyText": "This was already done by accepting request= and opts=. Besides file= or dsn=, these are the only valid options when requesting an immediate dump.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499574434", "createdAt": "2020-10-05T12:52:04Z", "author": {"login": "pshipton"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -46,7 +46,9 @@\n \tprivate static final String FORMAT_PREFIX = \" Format: \"; //$NON-NLS-1$\n \n \t@SuppressWarnings(\"nls\")\n-\tprivate static final String FILE_PATH_HELP = \" <file path>%n\"\n+\tprivate static final String DUMP_OPTION_HELP = \" [request=<options>] [opts=<options] [<file path>]%n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NTIyNA=="}, "originalCommit": {"oid": "455e70b39ada872874dd4484108ac6babeae6f67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTYwOTcyMg==", "bodyText": "Okay, my thought was to specify same style of Xdump options via jcmd, i.e., dump accordingly as per the events, filter, and others. I am fine with the interpretation of an immediate dump for this PR.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499609722", "createdAt": "2020-10-05T13:45:09Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -46,7 +46,9 @@\n \tprivate static final String FORMAT_PREFIX = \" Format: \"; //$NON-NLS-1$\n \n \t@SuppressWarnings(\"nls\")\n-\tprivate static final String FILE_PATH_HELP = \" <file path>%n\"\n+\tprivate static final String DUMP_OPTION_HELP = \" [request=<options>] [opts=<options] [<file path>]%n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NTIyNA=="}, "originalCommit": {"oid": "455e70b39ada872874dd4484108ac6babeae6f67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY2NTMzMQ==", "bodyText": "Changing the existing dump options is a different operation, which could also be added, but separately from this change.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499665331", "createdAt": "2020-10-05T15:00:45Z", "author": {"login": "pshipton"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -46,7 +46,9 @@\n \tprivate static final String FORMAT_PREFIX = \" Format: \"; //$NON-NLS-1$\n \n \t@SuppressWarnings(\"nls\")\n-\tprivate static final String FILE_PATH_HELP = \" <file path>%n\"\n+\tprivate static final String DUMP_OPTION_HELP = \" [request=<options>] [opts=<options] [<file path>]%n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NTIyNA=="}, "originalCommit": {"oid": "455e70b39ada872874dd4484108ac6babeae6f67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY4MjcyNA==", "bodyText": "I don't think supporting dsn= or file= makes sense. The API of com.sun.tools.attach.spi.AttachProvider doesn't promise that the virtual machines answered are on the same host (as each other or as where jcmd is used). As such, it's unclear whether dsn= or file= would be appropriate paired with a particular vmid. I think the decision about how to choose the appropriate option string is best left to the target vm.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499682724", "createdAt": "2020-10-05T15:25:18Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -46,7 +46,9 @@\n \tprivate static final String FORMAT_PREFIX = \" Format: \"; //$NON-NLS-1$\n \n \t@SuppressWarnings(\"nls\")\n-\tprivate static final String FILE_PATH_HELP = \" <file path>%n\"\n+\tprivate static final String DUMP_OPTION_HELP = \" [request=<options>] [opts=<options] [<file path>]%n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NTIyNA=="}, "originalCommit": {"oid": "455e70b39ada872874dd4484108ac6babeae6f67"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcwMTc3Nw==", "bodyText": "Technically a target vm could state its OS type (zOS or not) via VMID in its advertisement file.\nOn the other hand, zOS is a tightly controlled system which even disables the AttachAPI by default, it will be rare situation that there is an interaction between zOS images and other OS.\nThe motivation to add dsn= or file= is to reduce the parsing code complexity and the whole string can be consumed by native code in a whole.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499701777", "createdAt": "2020-10-05T15:52:34Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -46,7 +46,9 @@\n \tprivate static final String FORMAT_PREFIX = \" Format: \"; //$NON-NLS-1$\n \n \t@SuppressWarnings(\"nls\")\n-\tprivate static final String FILE_PATH_HELP = \" <file path>%n\"\n+\tprivate static final String DUMP_OPTION_HELP = \" [request=<options>] [opts=<options] [<file path>]%n\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA5NTIyNA=="}, "originalCommit": {"oid": "455e70b39ada872874dd4484108ac6babeae6f67"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTcxNDQwOnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDozNTo1MFrOHcs21A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDozNTo1MFrOHcs21A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg1NzEwOA==", "bodyText": "I think this should end with %n (and was probably intended given the line split here).", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499857108", "createdAt": "2020-10-05T20:35:50Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -46,7 +46,9 @@\n \tprivate static final String FORMAT_PREFIX = \" Format: \"; //$NON-NLS-1$\n \n \t@SuppressWarnings(\"nls\")\n-\tprivate static final String FILE_PATH_HELP = \" <file path>%n\"\n+\tprivate static final String DUMP_OPTION_HELP = \" [request=<options>] [opts=<options] [<file path>]%n\"\n+\t\t\t\t+ \" Set optional request= and opts= -Xdump options. The order of the parameters does not matter.%n\"\n+\t\t\t\t+ \" system and heap dumps default to request=exclusive+prepwalk rather than the -Xdump:<type>:defaults setting.%n\"\n \t\t\t\t+ \" <file path> is optional, otherwise a default path/name is used.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e34fee7af09a9d8f08288df526ad8f3f1293eb2b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTc0NjE0OnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo0NTo0OFrOHctKeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo0NTo0OFrOHctKeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg2MjEzOA==", "bodyText": "The //$NON-NLS-n$ comments don't belong here: they belong on lines 280, 281, 285 & 286 above.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499862138", "createdAt": "2020-10-05T20:45:48Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -272,17 +274,41 @@ private static DiagnosticProperties doDump(String diagnosticCommand) {\n \t\t\t\t}\n \t\t\t}\n \t\t\tif (!dumpType.isEmpty()) {\n-\t\t\t\tString request = dumpType;\n-\t\t\t\tif (parts.length == 2) {\n-\t\t\t\t\tString fileDirective = (\"system\".equals(dumpType) && IPC.isZOS) ? \":dsn=\" : \":file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n-\t\t\t\t\trequest += fileDirective + parts[1];\n+\t\t\t\tStringBuilder request = new StringBuilder();\n+\t\t\t\trequest.append(dumpType);\n+\t\t\t\tboolean foundRequest = false;\n+\t\t\t\tboolean heapDump = \"heap\".equals(dumpType);\n+\t\t\t\tboolean systemDump = \"system\".equals(dumpType);\n+\t\t\t\tString separator = \":\"; //$NON-NLS-1$\n+\t\t\t\tfor (int i = 1; i < parts.length; i++) {\n+\t\t\t\t\tString option = parts[i];\n+\t\t\t\t\tboolean isRequest = option.startsWith(\"request=\");\n+\t\t\t\t\tboolean isOpts = option.startsWith(\"opts=\");\n+\t\t\t\t\tif (isRequest || isOpts) { //$NON-NLS-1$ //$NON-NLS-2$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e34fee7af09a9d8f08288df526ad8f3f1293eb2b"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTc0OTU1OnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo0Njo0OVrOHctMjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo0Njo0OVrOHctMjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg2MjY3MA==", "bodyText": "//$NON-NLS-3$ should be removed: there are only two string literals here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499862670", "createdAt": "2020-10-05T20:46:49Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -272,17 +274,41 @@ private static DiagnosticProperties doDump(String diagnosticCommand) {\n \t\t\t\t}\n \t\t\t}\n \t\t\tif (!dumpType.isEmpty()) {\n-\t\t\t\tString request = dumpType;\n-\t\t\t\tif (parts.length == 2) {\n-\t\t\t\t\tString fileDirective = (\"system\".equals(dumpType) && IPC.isZOS) ? \":dsn=\" : \":file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n-\t\t\t\t\trequest += fileDirective + parts[1];\n+\t\t\t\tStringBuilder request = new StringBuilder();\n+\t\t\t\trequest.append(dumpType);\n+\t\t\t\tboolean foundRequest = false;\n+\t\t\t\tboolean heapDump = \"heap\".equals(dumpType);\n+\t\t\t\tboolean systemDump = \"system\".equals(dumpType);\n+\t\t\t\tString separator = \":\"; //$NON-NLS-1$\n+\t\t\t\tfor (int i = 1; i < parts.length; i++) {\n+\t\t\t\t\tString option = parts[i];\n+\t\t\t\t\tboolean isRequest = option.startsWith(\"request=\");\n+\t\t\t\t\tboolean isOpts = option.startsWith(\"opts=\");\n+\t\t\t\t\tif (isRequest || isOpts) { //$NON-NLS-1$ //$NON-NLS-2$\n+\t\t\t\t\t\tif (!heapDump && isOpts) {\n+\t\t\t\t\t\t\t// opts= are only valid for heap dumps\n+\t\t\t\t\t\t\tcontinue;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\trequest.append(separator).append(option);\n+\t\t\t\t\t\tif (isRequest) {\n+\t\t\t\t\t\t\tfoundRequest = true;\n+\t\t\t\t\t\t}\n+\t\t\t\t\t} else {\n+\t\t\t\t\t\tString fileDirective = (systemDump && IPC.isZOS) ? \"dsn=\" : \"file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e34fee7af09a9d8f08288df526ad8f3f1293eb2b"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTc3ODA3OnYy", "diffSide": "RIGHT", "path": "test/functional/Java8andUp/src/org/openj9/test/attachAPI/TestJcmd.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo1NTo1NFrOHctedQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo1NTo1NFrOHctedQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg2NzI1Mw==", "bodyText": "This line is much too long: please split.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499867253", "createdAt": "2020-10-05T20:55:54Z", "author": {"login": "keithc-ca"}, "path": "test/functional/Java8andUp/src/org/openj9/test/attachAPI/TestJcmd.java", "diffHunk": "@@ -238,6 +240,48 @@ public void testDumps() throws IOException {\n \t\t}\n \t}\n \n+\t@Test\n+\tpublic void testDumpsWithOptions() throws IOException {\n+\t\tString[][] commandsAndDumpTypes = {{DUMP_HEAP, \"Heap\", \"request=exclusive+compact+prepwalk,opts=CLASSIC\"}, {GC_HEAP_DUMP, \"Heap\", \"opts=PHD\"}, {DUMP_JAVA, \"Java\", \"request=serial\"}, {DUMP_SNAP, \"Snap\", \"request=exclusive\"}, {DUMP_SYSTEM, \"System\", \"request=exclusive+compact+prepwalk\"}};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e34fee7af09a9d8f08288df526ad8f3f1293eb2b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTc4OTk4OnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo1OTowM1rOHctlfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo1OTowM1rOHctlfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg2OTA1NA==", "bodyText": "The help should mention 'opts=..' only for heap dumps.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r499869054", "createdAt": "2020-10-05T20:59:03Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -356,17 +382,17 @@ private static DiagnosticProperties doHelp(String diagnosticCommand) {\n \t\t\t+ \" Options: -l : print information about ownable synchronizers%n\";\n \n \tprivate static final String DIAGNOSTICS_DUMP_HEAP_HELP = \"Create a heap dump.%n\" //$NON-NLS-1$\n-\t\t\t+ FORMAT_PREFIX + DIAGNOSTICS_DUMP_HEAP + FILE_PATH_HELP\n+\t\t\t+ FORMAT_PREFIX + DIAGNOSTICS_DUMP_HEAP + DUMP_OPTION_HELP", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e34fee7af09a9d8f08288df526ad8f3f1293eb2b"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjk4MDA2OnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTowNDoxN1rOHdMBLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTo0Mjo0MVrOHdOMvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM2NzY2MA==", "bodyText": "Help for all other commands ends with a final %n; this should too.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r500367660", "createdAt": "2020-10-06T15:04:17Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -356,22 +392,22 @@ private static DiagnosticProperties doHelp(String diagnosticCommand) {\n \t\t\t+ \" Options: -l : print information about ownable synchronizers%n\";\n \n \tprivate static final String DIAGNOSTICS_DUMP_HEAP_HELP = \"Create a heap dump.%n\" //$NON-NLS-1$\n-\t\t\t+ FORMAT_PREFIX + DIAGNOSTICS_DUMP_HEAP + FILE_PATH_HELP\n+\t\t\t+ FORMAT_PREFIX + DIAGNOSTICS_DUMP_HEAP + HEAP_DUMP_OPTION_HELP + HEAPSYSTEM_DUMP_OPTION_HELP + GENERIC_DUMP_OPTION_HELP\n \t\t\t+ DIAGNOSTICS_GC_HEAP_DUMP + \" is an alias for \" + DIAGNOSTICS_DUMP_HEAP; //$NON-NLS-1$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8bfc33bd470d8bc8e64e785b8d941529132a175"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwMzM5MQ==", "bodyText": "Updated", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r500403391", "createdAt": "2020-10-06T15:42:41Z", "author": {"login": "pshipton"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -356,22 +392,22 @@ private static DiagnosticProperties doHelp(String diagnosticCommand) {\n \t\t\t+ \" Options: -l : print information about ownable synchronizers%n\";\n \n \tprivate static final String DIAGNOSTICS_DUMP_HEAP_HELP = \"Create a heap dump.%n\" //$NON-NLS-1$\n-\t\t\t+ FORMAT_PREFIX + DIAGNOSTICS_DUMP_HEAP + FILE_PATH_HELP\n+\t\t\t+ FORMAT_PREFIX + DIAGNOSTICS_DUMP_HEAP + HEAP_DUMP_OPTION_HELP + HEAPSYSTEM_DUMP_OPTION_HELP + GENERIC_DUMP_OPTION_HELP\n \t\t\t+ DIAGNOSTICS_GC_HEAP_DUMP + \" is an alias for \" + DIAGNOSTICS_DUMP_HEAP; //$NON-NLS-1$", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM2NzY2MA=="}, "originalCommit": {"oid": "d8bfc33bd470d8bc8e64e785b8d941529132a175"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMzc3NTgxOnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODowNDo1MVrOHdTybw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODowNDo1MVrOHdTybw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ5NDk1OQ==", "bodyText": ": is only appropriate before the first option; subsequent options are separated by ,.\nSorry, I see line 317 now.", "url": "https://github.com/eclipse-openj9/openj9/pull/10774#discussion_r500494959", "createdAt": "2020-10-06T18:04:51Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/openj9/internal/tools/attach/target/DiagnosticUtils.java", "diffHunk": "@@ -272,17 +284,50 @@ private static DiagnosticProperties doDump(String diagnosticCommand) {\n \t\t\t\t}\n \t\t\t}\n \t\t\tif (!dumpType.isEmpty()) {\n-\t\t\t\tString request = dumpType;\n-\t\t\t\tif (parts.length == 2) {\n-\t\t\t\t\tString fileDirective = (\"system\".equals(dumpType) && IPC.isZOS) ? \":dsn=\" : \":file=\"; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$\n-\t\t\t\t\trequest += fileDirective + parts[1];\n+\t\t\t\tStringBuilder request = new StringBuilder();\n+\t\t\t\trequest.append(dumpType);\n+\t\t\t\tString filePath = null;\n+\t\t\t\tboolean foundRequest = false;\n+\t\t\t\tboolean heapDump = \"heap\".equals(dumpType); //$NON-NLS-1$\n+\t\t\t\tboolean systemDump = \"system\".equals(dumpType); //$NON-NLS-1$\n+\t\t\t\tString separator = \":\"; //$NON-NLS-1$", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f15577bb3aee2860e638cda623f98209a86edd3b"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1267, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}