{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MTE1NTY3", "number": 9718, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToxMTo0NFrOEARtSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToxMTo0NFrOEARtSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzI1NTc3OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/ilgen/J9ByteCodeIlGenerator.hpp", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToxMTo0NFrOGbdTkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDo0MjozMlrOGb4lnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NDg4MA==", "bodyText": "I'm not a fan of this name but I couldn't think of anything else off the top of my head. I'm open to suggestions if anyone has a better name.", "url": "https://github.com/eclipse-openj9/openj9/pull/9718#discussion_r431444880", "createdAt": "2020-05-27T21:11:44Z", "author": {"login": "Leonardo2718"}, "path": "runtime/compiler/ilgen/J9ByteCodeIlGenerator.hpp", "diffHunk": "@@ -238,6 +238,7 @@ class TR_J9ByteCodeIlGenerator : public TR_IlGenerator, public TR_J9ByteCodeIter\n    void         handleSideEffect(TR::Node *);\n    bool         valueMayBeModified(TR::Node *, TR::Node *);\n    TR::Node *    genCompressedRefs(TR::Node *, bool genTT = true, int32_t isLoad = 1);\n+   void         unresolvedValueTypeOpAbort(const char* bytecodeName, const char* refType);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc951c5d92fde11bd3685599eba984c1379149f9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMzMzMQ==", "bodyText": "This isn't much better, but how about making it imperative?  Something like abortOnUnresolvedValueType or abortForUnresolvedValueTypeOp", "url": "https://github.com/eclipse-openj9/openj9/pull/9718#discussion_r431803331", "createdAt": "2020-05-28T12:39:35Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/ilgen/J9ByteCodeIlGenerator.hpp", "diffHunk": "@@ -238,6 +238,7 @@ class TR_J9ByteCodeIlGenerator : public TR_IlGenerator, public TR_J9ByteCodeIter\n    void         handleSideEffect(TR::Node *);\n    bool         valueMayBeModified(TR::Node *, TR::Node *);\n    TR::Node *    genCompressedRefs(TR::Node *, bool genTT = true, int32_t isLoad = 1);\n+   void         unresolvedValueTypeOpAbort(const char* bytecodeName, const char* refType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NDg4MA=="}, "originalCommit": {"oid": "cc951c5d92fde11bd3685599eba984c1379149f9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwNTIxNg==", "bodyText": "Moving abort to the start of the method name would aid readability IMO - I'm not sure if we want to make it more obvious with an ABORTForUnresolvedValueTypeOp or something like that.", "url": "https://github.com/eclipse-openj9/openj9/pull/9718#discussion_r431805216", "createdAt": "2020-05-28T12:42:52Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/ilgen/J9ByteCodeIlGenerator.hpp", "diffHunk": "@@ -238,6 +238,7 @@ class TR_J9ByteCodeIlGenerator : public TR_IlGenerator, public TR_J9ByteCodeIter\n    void         handleSideEffect(TR::Node *);\n    bool         valueMayBeModified(TR::Node *, TR::Node *);\n    TR::Node *    genCompressedRefs(TR::Node *, bool genTT = true, int32_t isLoad = 1);\n+   void         unresolvedValueTypeOpAbort(const char* bytecodeName, const char* refType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NDg4MA=="}, "originalCommit": {"oid": "cc951c5d92fde11bd3685599eba984c1379149f9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg5MTg2OQ==", "bodyText": "Alright, I'll change it to abortForUnresolvedValueTypeOp. I don't think there's a particular need to make it stand out because there's really nothing special about it.", "url": "https://github.com/eclipse-openj9/openj9/pull/9718#discussion_r431891869", "createdAt": "2020-05-28T14:42:32Z", "author": {"login": "Leonardo2718"}, "path": "runtime/compiler/ilgen/J9ByteCodeIlGenerator.hpp", "diffHunk": "@@ -238,6 +238,7 @@ class TR_J9ByteCodeIlGenerator : public TR_IlGenerator, public TR_J9ByteCodeIter\n    void         handleSideEffect(TR::Node *);\n    bool         valueMayBeModified(TR::Node *, TR::Node *);\n    TR::Node *    genCompressedRefs(TR::Node *, bool genTT = true, int32_t isLoad = 1);\n+   void         unresolvedValueTypeOpAbort(const char* bytecodeName, const char* refType);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0NDg4MA=="}, "originalCommit": {"oid": "cc951c5d92fde11bd3685599eba984c1379149f9"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 73, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}