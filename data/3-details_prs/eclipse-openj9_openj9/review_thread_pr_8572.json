{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0OTczMTYy", "number": 8572, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjo0ODo1OVrODfntHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDo0NToyMlrODf6ZBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDgyOTcyOnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/java/lang/String.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjo0ODo1OVrOFpbceg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjo1OToxNlrOFpb1EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4NTU5NA==", "bodyText": "I am not sure if this \\r case is required as all newline character (\\r, \\n, \\r\\n) should be normalized to \\n during stripIndent() call before this method is called. (line 8441 in this file)", "url": "https://github.com/eclipse-openj9/openj9/pull/8572#discussion_r378985594", "createdAt": "2020-02-13T16:48:59Z", "author": {"login": "fengxue-IS"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -8521,6 +8524,14 @@ public String translateEscapes() {\n \t\t\t\t\t}\n \t\t\t\t\tbuilder.append((char)octal);\n \t\t\t\t\tbreak;\n+\t\t\t\tcase '\\r':", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be5eca83feffb544854143c406428e859bb1acef"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk5MTg4OQ==", "bodyText": "The verifyLineTerminator() test from TranslateEscapes.java failed on \\r and \\r\\n when I didn't have the case for \\r. I think this is because the test directly calls translateEscapes(), so the string isn't normalized by stripIndent()", "url": "https://github.com/eclipse-openj9/openj9/pull/8572#discussion_r378991889", "createdAt": "2020-02-13T16:59:16Z", "author": {"login": "sharon-wang"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -8521,6 +8524,14 @@ public String translateEscapes() {\n \t\t\t\t\t}\n \t\t\t\t\tbuilder.append((char)octal);\n \t\t\t\t\tbreak;\n+\t\t\t\tcase '\\r':", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4NTU5NA=="}, "originalCommit": {"oid": "be5eca83feffb544854143c406428e859bb1acef"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDg0NTg1OnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/java/lang/String.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjo1MzoxMFrOFpbmtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyMjowM1rOFplooA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4ODIxMg==", "bodyText": "maybe add a comment for why ignoring \\n here?", "url": "https://github.com/eclipse-openj9/openj9/pull/8572#discussion_r378988212", "createdAt": "2020-02-13T16:53:10Z", "author": {"login": "fengxue-IS"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -8521,6 +8524,14 @@ public String translateEscapes() {\n \t\t\t\t\t}\n \t\t\t\t\tbuilder.append((char)octal);\n \t\t\t\t\tbreak;\n+\t\t\t\tcase '\\r':\n+\t\t\t\t\t/* Check if the next character is the newline character, i.e. case \"\\r\\n\" */\n+\t\t\t\t\tif (((index + 1) < strLength) && ('\\n' == charArray[index + 1])) {\n+\t\t\t\t\t\tindex++;\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase '\\n':", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be5eca83feffb544854143c406428e859bb1acef"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MjU0NA==", "bodyText": "added comment to explain line terminator cases", "url": "https://github.com/eclipse-openj9/openj9/pull/8572#discussion_r379152544", "createdAt": "2020-02-13T22:22:03Z", "author": {"login": "sharon-wang"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -8521,6 +8524,14 @@ public String translateEscapes() {\n \t\t\t\t\t}\n \t\t\t\t\tbuilder.append((char)octal);\n \t\t\t\t\tbreak;\n+\t\t\t\tcase '\\r':\n+\t\t\t\t\t/* Check if the next character is the newline character, i.e. case \"\\r\\n\" */\n+\t\t\t\t\tif (((index + 1) < strLength) && ('\\n' == charArray[index + 1])) {\n+\t\t\t\t\t\tindex++;\n+\t\t\t\t\t}\n+\t\t\t\t\tbreak;\n+\t\t\t\tcase '\\n':", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4ODIxMg=="}, "originalCommit": {"oid": "be5eca83feffb544854143c406428e859bb1acef"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTg1ODQwOnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/java/lang/String.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyMToyOFrOFplnsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMjoyMToyOFrOFplnsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE1MjMwNw==", "bodyText": "@fengxue-IS this is the added comment to explain why we're ignoring the line terminators", "url": "https://github.com/eclipse-openj9/openj9/pull/8572#discussion_r379152307", "createdAt": "2020-02-13T22:21:28Z", "author": {"login": "sharon-wang"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -8521,6 +8524,19 @@ public String translateEscapes() {\n \t\t\t\t\t}\n \t\t\t\t\tbuilder.append((char)octal);\n \t\t\t\t\tbreak;\n+\t\t\t\t/**\n+\t\t\t\t * JEP 368: Text Blocks (Second Preview)\n+\t\t\t\t * '\\r', \"\\r\\n\" and '\\n' are ignored as per new continuation \\<line-terminator> escape sequence \n+\t\t\t\t * i.e. ignore line terminator and continue line\n+\t\t\t\t * */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbbdfab11a3cab5780bfba235bd8ede3b772d0d7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0Nzg5MTI0OnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/java/lang/String.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNDo0NToyMlrOFp43cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTo1NToyNlrOFp7Snw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ2NzYzMg==", "bodyText": "Shouldn't this be guarded by /*[IF Java14]*/?", "url": "https://github.com/eclipse-openj9/openj9/pull/8572#discussion_r379467632", "createdAt": "2020-02-14T14:45:22Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -8487,6 +8487,9 @@ public String translateEscapes() {\n \t\t\t\tcase 'r':\n \t\t\t\t\tbuilder.append('\\r');\n \t\t\t\t\tbreak;\n+\t\t\t\tcase 's':", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbbdfab11a3cab5780bfba235bd8ede3b772d0d7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ5MDMyNA==", "bodyText": "Java 13 is no longer supported, and this code is only for Java 14 now.", "url": "https://github.com/eclipse-openj9/openj9/pull/8572#discussion_r379490324", "createdAt": "2020-02-14T15:25:38Z", "author": {"login": "pshipton"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -8487,6 +8487,9 @@ public String translateEscapes() {\n \t\t\t\tcase 'r':\n \t\t\t\t\tbuilder.append('\\r');\n \t\t\t\t\tbreak;\n+\t\t\t\tcase 's':", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ2NzYzMg=="}, "originalCommit": {"oid": "bbbdfab11a3cab5780bfba235bd8ede3b772d0d7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUwNzM1OQ==", "bodyText": "Right: I missed that the region was only for Java13+. Sorry for the distraction.", "url": "https://github.com/eclipse-openj9/openj9/pull/8572#discussion_r379507359", "createdAt": "2020-02-14T15:55:26Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/java/lang/String.java", "diffHunk": "@@ -8487,6 +8487,9 @@ public String translateEscapes() {\n \t\t\t\tcase 'r':\n \t\t\t\t\tbuilder.append('\\r');\n \t\t\t\t\tbreak;\n+\t\t\t\tcase 's':", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ2NzYzMg=="}, "originalCommit": {"oid": "bbbdfab11a3cab5780bfba235bd8ede3b772d0d7"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 720, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}