{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NDc1ODY5", "number": 11158, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoyNjoyOVrOE4Sr3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODozNDoyNFrOE4S4FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDYxODUyOnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoyNjoyOVrOHyIDig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoyNjoyOVrOHyIDig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyMjgyNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tif (IS_SNAPSHOT_RUN(vm)) {\n          \n          \n            \n            \t\t\t\t\tvm->modularityPool = pool_new(OMR_MAX(sizeof(J9Package), sizeof(J9Module)),  0, 0, 0, J9_GET_CALLSITE(), J9MEM_CATEGORY_MODULES, POOL_FOR_PORT(VMSNAPSHOTIMPL_OMRPORT_FROM_JAVAVM(vm)));\n          \n          \n            \n            \t\t\t\t} else if (!IS_RESTORE_RUN(vm))\n          \n          \n            \n            \t\t\t\tif (IS_SNAPSHOT_RUN(vm)) {\n          \n          \n            \n            \t\t\t\t\tvm->modularityPool = pool_new(OMR_MAX(sizeof(J9Package), sizeof(J9Module)),  0, 0, 0, J9_GET_CALLSITE(), J9MEM_CATEGORY_MODULES, POOL_FOR_PORT(VMSNAPSHOTIMPL_OMRPORT_FROM_JAVAVM(vm)));\n          \n          \n            \n            \t\t\t\t} else if (IS_RESTORE_RUN(vm)) {\n          \n          \n            \n            \t\t\t\t\t/* vm->modularityPool is already initialized as part of the restore */\n          \n          \n            \n            \t\t\t\t} else\n          \n      \n    \n    \n  \n\nMake the 3 cases {snapshot, restore, normal jvm} explicit.", "url": "https://github.com/eclipse-openj9/openj9/pull/11158#discussion_r522322826", "createdAt": "2020-11-12T18:26:29Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2359,7 +2359,14 @@ IDATA VMInitStages(J9JavaVM *vm, IDATA stage, void* reserved) {\n \t\t\t}\n \n \t\t\tif (J2SE_VERSION(vm) >= J2SE_V11) {\n-\t\t\t\tvm->modularityPool = pool_new(OMR_MAX(sizeof(J9Package),sizeof(J9Module)),  0, 0, 0, J9_GET_CALLSITE(), J9MEM_CATEGORY_MODULES, POOL_FOR_PORT(vm->portLibrary));\n+#if defined(J9VM_OPT_SNAPSHOTS)\n+\t\t\t\tif (IS_SNAPSHOT_RUN(vm)) {\n+\t\t\t\t\tvm->modularityPool = pool_new(OMR_MAX(sizeof(J9Package), sizeof(J9Module)),  0, 0, 0, J9_GET_CALLSITE(), J9MEM_CATEGORY_MODULES, POOL_FOR_PORT(VMSNAPSHOTIMPL_OMRPORT_FROM_JAVAVM(vm)));\n+\t\t\t\t} else if (!IS_RESTORE_RUN(vm))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4792a5ce113f8d646c83b039cff49655fcf38bc6"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDY0NDgyOnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/stdinit.c", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODozMzowN1rOHyITtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNDo1Mzo1OFrOHyxbLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNjk2NQ==", "bodyText": "Why is this required?  It inits the static fields {platformEncoding, fileEncoding, osEncoding} in System.java.  Aren't they saved in an initialized state?  Why do we reset them on a restore run?", "url": "https://github.com/eclipse-openj9/openj9/pull/11158#discussion_r522326965", "createdAt": "2020-11-12T18:33:07Z", "author": {"login": "DanHeidinga"}, "path": "runtime/jcl/common/stdinit.c", "diffHunk": "@@ -169,6 +173,12 @@ restoreRunStandardInit(J9JavaVM *vm)\n #endif /* !J9VM_INTERP_MINIMAL_JCL */\n #endif /* J9VM_OPT_SIDECAR */\n \n+#if JAVA_SPEC_VERSION >= 11\n+\tvmFuncs->internalAcquireVMAccess(vmThread);\n+\tvmFuncs->sendInitEncodings(vmThread);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4792a5ce113f8d646c83b039cff49655fcf38bc6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk1NDY3Mw==", "bodyText": "The JCL natives set a native static when encodings aare initialized, this needs to be re-init in the restore run", "url": "https://github.com/eclipse-openj9/openj9/pull/11158#discussion_r522954673", "createdAt": "2020-11-13T13:38:15Z", "author": {"login": "tajila"}, "path": "runtime/jcl/common/stdinit.c", "diffHunk": "@@ -169,6 +173,12 @@ restoreRunStandardInit(J9JavaVM *vm)\n #endif /* !J9VM_INTERP_MINIMAL_JCL */\n #endif /* J9VM_OPT_SIDECAR */\n \n+#if JAVA_SPEC_VERSION >= 11\n+\tvmFuncs->internalAcquireVMAccess(vmThread);\n+\tvmFuncs->sendInitEncodings(vmThread);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNjk2NQ=="}, "originalCommit": {"oid": "4792a5ce113f8d646c83b039cff49655fcf38bc6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk5ODk4Mw==", "bodyText": "Thanks.  Following that path, it looks like this is the native that needs to be called again:\nhttps://github.com/eclipse/openj9/blob/0aec295571c6c25927af41a629bc915c2129642e/runtime/jcl/common/system.c#L425-L429", "url": "https://github.com/eclipse-openj9/openj9/pull/11158#discussion_r522998983", "createdAt": "2020-11-13T14:51:27Z", "author": {"login": "DanHeidinga"}, "path": "runtime/jcl/common/stdinit.c", "diffHunk": "@@ -169,6 +173,12 @@ restoreRunStandardInit(J9JavaVM *vm)\n #endif /* !J9VM_INTERP_MINIMAL_JCL */\n #endif /* J9VM_OPT_SIDECAR */\n \n+#if JAVA_SPEC_VERSION >= 11\n+\tvmFuncs->internalAcquireVMAccess(vmThread);\n+\tvmFuncs->sendInitEncodings(vmThread);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNjk2NQ=="}, "originalCommit": {"oid": "4792a5ce113f8d646c83b039cff49655fcf38bc6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzAwMDYyMg==", "bodyText": "Can you add this as a comment to the code?  Something like:\n/* Need to resend System.initEncodings() because it calls into native code which\n * has to reinitialize the native static value done by the \"InitializeEncoding\" native.\n * See the code in system.c:: getEncoding\n */", "url": "https://github.com/eclipse-openj9/openj9/pull/11158#discussion_r523000622", "createdAt": "2020-11-13T14:53:58Z", "author": {"login": "DanHeidinga"}, "path": "runtime/jcl/common/stdinit.c", "diffHunk": "@@ -169,6 +173,12 @@ restoreRunStandardInit(J9JavaVM *vm)\n #endif /* !J9VM_INTERP_MINIMAL_JCL */\n #endif /* J9VM_OPT_SIDECAR */\n \n+#if JAVA_SPEC_VERSION >= 11\n+\tvmFuncs->internalAcquireVMAccess(vmThread);\n+\tvmFuncs->sendInitEncodings(vmThread);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNjk2NQ=="}, "originalCommit": {"oid": "4792a5ce113f8d646c83b039cff49655fcf38bc6"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3NDY0OTgxOnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/stdinit.c", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODozNDoyNFrOHyIWzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxNDowNTozMlrOHyvkAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNzc1OA==", "bodyText": "The other caller of this API looks like:\n/* Run the JCL initialization code (what used to be JNI_OnLoad) */\n\tjniVersion = nativeLibrary->send_lifecycle_event(vmThread, nativeLibrary, \"JCL_OnLoad\", JNI_VERSION_1_1);\n\tif (!vmFuncs->jniVersionIsValid(jniVersion)) {\n\t\treturn 1;\n\t}\n\nShould this code validate the JNI version as well?", "url": "https://github.com/eclipse-openj9/openj9/pull/11158#discussion_r522327758", "createdAt": "2020-11-12T18:34:24Z", "author": {"login": "DanHeidinga"}, "path": "runtime/jcl/common/stdinit.c", "diffHunk": "@@ -161,6 +162,9 @@ restoreRunStandardInit(J9JavaVM *vm)\n \t}\n \t((J9NativeLibrary*)nativeLibrary)->flags |= J9NATIVELIB_FLAG_ALLOW_INL;\n \n+\t/* Run the JCL initialization code (what used to be JNI_OnLoad) */\n+\tnativeLibrary->send_lifecycle_event(vmThread, nativeLibrary, \"JCL_OnLoad\", JNI_VERSION_1_1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4792a5ce113f8d646c83b039cff49655fcf38bc6"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk3MDExNQ==", "bodyText": "yes, I've added the JNI version validation", "url": "https://github.com/eclipse-openj9/openj9/pull/11158#discussion_r522970115", "createdAt": "2020-11-13T14:05:32Z", "author": {"login": "tajila"}, "path": "runtime/jcl/common/stdinit.c", "diffHunk": "@@ -161,6 +162,9 @@ restoreRunStandardInit(J9JavaVM *vm)\n \t}\n \t((J9NativeLibrary*)nativeLibrary)->flags |= J9NATIVELIB_FLAG_ALLOW_INL;\n \n+\t/* Run the JCL initialization code (what used to be JNI_OnLoad) */\n+\tnativeLibrary->send_lifecycle_event(vmThread, nativeLibrary, \"JCL_OnLoad\", JNI_VERSION_1_1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNzc1OA=="}, "originalCommit": {"oid": "4792a5ce113f8d646c83b039cff49655fcf38bc6"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 899, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}