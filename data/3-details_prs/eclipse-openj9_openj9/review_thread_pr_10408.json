{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NjI0MTY1", "number": 10408, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzoyNToxMFrOEZsZLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzoyNTo0OFrOEZsZ2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mzc3MTk5OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzoyNToxMFrOHCqAVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDo0NDowOVrOHDKzvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU0NzQxNQ==", "bodyText": "This allocation of an array of 'dynamic' and unknown length (potentially very large) increases the chances of a stack overflow. Maybe allocate a std::string of right length and then copy the desired data into the buffer of the string:\nsize_t bufferLength = (className[0] == '[' ? sigLen : sigLen + 2);\nstd::string sigStr(bufferLength, 0);\nif (className[0] == '[')\n   {\n   memcpy(&sigStr[0], className, sigLen);\n   }\nelse\n   {\n   sigStr[0] = 'L';\n   memcpy(&sigStr[1], className, sigLen);\n   sigStr[sigLen+1]=';';\n   }", "url": "https://github.com/eclipse-openj9/openj9/pull/10408#discussion_r472547415", "createdAt": "2020-08-18T23:25:10Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -146,9 +147,28 @@ ClientSessionData::processUnloadedClasses(const std::vector<TR_OpaqueClassBlock*\n          J9ROMClass *romClass = it->second._romClass;\n \n          J9UTF8 *clazzName = NNSRP_GET(romClass->className, J9UTF8 *);\n-         std::string className((const char *)clazzName->data, (int32_t)clazzName->length);\n+         char *className = (char *) clazzName->data;\n+         int32_t sigLen = (int32_t) clazzName->length;\n+\n+         // copy of classNameToSignature method which can't be used\n+         // here because compilation object hasn't been initialized yet\n+         char sig[sigLen + 3];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "010d20f257fd00895a9476b21505753db2a52ad1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA4NDg2Mg==", "bodyText": "I tried that at first but the string wasn't being initialized properly.\nHm, maybe it will work with this constructor though.", "url": "https://github.com/eclipse-openj9/openj9/pull/10408#discussion_r473084862", "createdAt": "2020-08-19T14:44:09Z", "author": {"login": "dmitry-ten"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -146,9 +147,28 @@ ClientSessionData::processUnloadedClasses(const std::vector<TR_OpaqueClassBlock*\n          J9ROMClass *romClass = it->second._romClass;\n \n          J9UTF8 *clazzName = NNSRP_GET(romClass->className, J9UTF8 *);\n-         std::string className((const char *)clazzName->data, (int32_t)clazzName->length);\n+         char *className = (char *) clazzName->data;\n+         int32_t sigLen = (int32_t) clazzName->length;\n+\n+         // copy of classNameToSignature method which can't be used\n+         // here because compilation object hasn't been initialized yet\n+         char sig[sigLen + 3];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU0NzQxNQ=="}, "originalCommit": {"oid": "010d20f257fd00895a9476b21505753db2a52ad1"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mzc3MzY5OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQyMzoyNTo0OFrOHCqBRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDo0NDoyMFrOHDK0Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU0NzY1NQ==", "bodyText": "We don't need to terminate the string with NULL.", "url": "https://github.com/eclipse-openj9/openj9/pull/10408#discussion_r472547655", "createdAt": "2020-08-18T23:25:48Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -146,9 +147,28 @@ ClientSessionData::processUnloadedClasses(const std::vector<TR_OpaqueClassBlock*\n          J9ROMClass *romClass = it->second._romClass;\n \n          J9UTF8 *clazzName = NNSRP_GET(romClass->className, J9UTF8 *);\n-         std::string className((const char *)clazzName->data, (int32_t)clazzName->length);\n+         char *className = (char *) clazzName->data;\n+         int32_t sigLen = (int32_t) clazzName->length;\n+\n+         // copy of classNameToSignature method which can't be used\n+         // here because compilation object hasn't been initialized yet\n+         char sig[sigLen + 3];\n+         if (className[0] == '[')\n+            {\n+            memcpy(sig, className, sigLen);\n+            }\n+         else\n+            {\n+            sigLen += 2;\n+            sig[0] = 'L';\n+            memcpy(sig + 1, className, sigLen - 2);\n+            sig[sigLen-1]=';';\n+            }\n+         sig[sigLen] = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "010d20f257fd00895a9476b21505753db2a52ad1"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA4NTAxMA==", "bodyText": "True.", "url": "https://github.com/eclipse-openj9/openj9/pull/10408#discussion_r473085010", "createdAt": "2020-08-19T14:44:20Z", "author": {"login": "dmitry-ten"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -146,9 +147,28 @@ ClientSessionData::processUnloadedClasses(const std::vector<TR_OpaqueClassBlock*\n          J9ROMClass *romClass = it->second._romClass;\n \n          J9UTF8 *clazzName = NNSRP_GET(romClass->className, J9UTF8 *);\n-         std::string className((const char *)clazzName->data, (int32_t)clazzName->length);\n+         char *className = (char *) clazzName->data;\n+         int32_t sigLen = (int32_t) clazzName->length;\n+\n+         // copy of classNameToSignature method which can't be used\n+         // here because compilation object hasn't been initialized yet\n+         char sig[sigLen + 3];\n+         if (className[0] == '[')\n+            {\n+            memcpy(sig, className, sigLen);\n+            }\n+         else\n+            {\n+            sigLen += 2;\n+            sig[0] = 'L';\n+            memcpy(sig + 1, className, sigLen - 2);\n+            sig[sigLen-1]=';';\n+            }\n+         sig[sigLen] = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU0NzY1NQ=="}, "originalCommit": {"oid": "010d20f257fd00895a9476b21505753db2a52ad1"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4709, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}