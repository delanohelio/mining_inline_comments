{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0OTIzMzAw", "number": 11091, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxOToxMTo1MVrOE08dAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxOToxMTo1MVrOE08dAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTUxODc1OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/ilgen/Walker.cpp", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxOToxMTo1MVrOHs83kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMTo1MDoyMlrOHtBs9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg5NjY1OA==", "bodyText": "do we have to care about direct rdbars if one was generated? or if we are supposed to generate a wrbar direct?", "url": "https://github.com/eclipse-openj9/openj9/pull/11091#discussion_r516896658", "createdAt": "2020-11-03T19:11:51Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/ilgen/Walker.cpp", "diffHunk": "@@ -7165,6 +7165,13 @@ TR_J9ByteCodeIlGenerator::storeAuto(TR::DataType type, int32_t slot, bool isAdju\n       }\n \n    symRef = symRefTab()->findOrCreateAutoSymbol(_methodSymbol, slot, type, true, false, true, isAdjunct);\n+\n+   // Self-storing, skip the store\n+   if (storeValue->getOpCode().isLoadDirect() && storeValue->getOpCode().hasSymbolReference() && storeValue->getSymbolReference() == symRef)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cb4bad2932f14cf4d628288e7921a673c4b05cd"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjkyNDY4MQ==", "bodyText": "rdbar and wrbar are not used in auto load/store", "url": "https://github.com/eclipse-openj9/openj9/pull/11091#discussion_r516924681", "createdAt": "2020-11-03T20:03:50Z", "author": {"login": "liqunl"}, "path": "runtime/compiler/ilgen/Walker.cpp", "diffHunk": "@@ -7165,6 +7165,13 @@ TR_J9ByteCodeIlGenerator::storeAuto(TR::DataType type, int32_t slot, bool isAdju\n       }\n \n    symRef = symRefTab()->findOrCreateAutoSymbol(_methodSymbol, slot, type, true, false, true, isAdjunct);\n+\n+   // Self-storing, skip the store\n+   if (storeValue->getOpCode().isLoadDirect() && storeValue->getOpCode().hasSymbolReference() && storeValue->getSymbolReference() == symRef)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg5NjY1OA=="}, "originalCommit": {"oid": "6cb4bad2932f14cf4d628288e7921a673c4b05cd"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjk3NTg2MA==", "bodyText": "well the opcodes exist, but I guess we can skip for now since we don't use them in OpenJ9 which is a fair point.", "url": "https://github.com/eclipse-openj9/openj9/pull/11091#discussion_r516975860", "createdAt": "2020-11-03T21:50:22Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/ilgen/Walker.cpp", "diffHunk": "@@ -7165,6 +7165,13 @@ TR_J9ByteCodeIlGenerator::storeAuto(TR::DataType type, int32_t slot, bool isAdju\n       }\n \n    symRef = symRefTab()->findOrCreateAutoSymbol(_methodSymbol, slot, type, true, false, true, isAdjunct);\n+\n+   // Self-storing, skip the store\n+   if (storeValue->getOpCode().isLoadDirect() && storeValue->getOpCode().hasSymbolReference() && storeValue->getSymbolReference() == symRef)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg5NjY1OA=="}, "originalCommit": {"oid": "6cb4bad2932f14cf4d628288e7921a673c4b05cd"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1081, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}