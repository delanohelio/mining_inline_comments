{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTgzNDIz", "number": 10349, "title": "Rework trampolines for POWER10", "bodyText": "This PR adds newly revamped trampolines when POWER10 support is enabled that use PC-relative prefixed load instructions rather than pTOC loads or address materialization sequences.", "createdAt": "2020-08-06T18:04:35Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10349", "merged": true, "mergeCommit": {"oid": "d786d0f2d9b2b5ec7fbd249bbb7e34dedd492a5c"}, "closed": true, "closedAt": "2020-08-11T19:05:13Z", "author": {"login": "aviansie-ben"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6BdCtgH2gAyNDY0MTgzNDIzOjYzODU2NGU3OTI4NzA2NmY2OTQyYTFjODgzY2FhMWQ3MjZhYjQ3ODE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc97pOAgFqTQ2NTM0OTUxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "638564e79287066f6942a1c883caa1d726ab4781", "author": {"user": {"login": "aviansie-ben", "name": "Ben Thomas (Aviansie Ben)"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/638564e79287066f6942a1c883caa1d726ab4781", "committedDate": "2020-07-30T15:35:19Z", "message": "Clean up some unused declarations in Trampoline.cpp\n\nCo-authored-by: Julian Wang <zlwang@ca.ibm.com>\nSigned-off-by: Ben Thomas <ben@benthomas.ca>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "756b5d2de054ad7bf1b608bcf4fe4de7addc59c9", "author": {"user": {"login": "aviansie-ben", "name": "Ben Thomas (Aviansie Ben)"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/756b5d2de054ad7bf1b608bcf4fe4de7addc59c9", "committedDate": "2020-08-04T17:17:42Z", "message": "Move CPU detection before code cache initialization\n\nWith the introduction of POWER10, how the code cache is set up will\ndepend on whether or not POWER10 support is enabled. However, code cache\ninitialization is currently being run prior to CPU detection. In order\nto make things work correctly, the correct CPU must be detected earlier\nin the bootstrap process.\n\nSigned-off-by: Ben Thomas <ben@benthomas.ca>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b66ee95c3f68a717b9d397aaabf116172fdd60b", "author": {"user": {"login": "aviansie-ben", "name": "Ben Thomas (Aviansie Ben)"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3b66ee95c3f68a717b9d397aaabf116172fdd60b", "committedDate": "2020-08-05T15:17:07Z", "message": "Rework trampolines for POWER10\n\nSince POWER10 supports PC-relative addressing, it is no longer necessary\nto use the pTOC in trampolines. Instead, a PC-relative load can be used\nto materialize the address to jump to. This also eliminates the need for\ntemporary trampolines, since trampolines can be atomically patched\nin-place.\n\nThe trampoline size has also been set to be a fixed size of 32 bytes.\nThis is done since indirect branch target prediction works based off of\n32-byte blocks, meaning that multiple indirect branches in the same\n32-byte block will alias each other, causing unnecessary mispredictions.\n\nCo-authored-by: Julian Wang <zlwang@ca.ibm.com>\nSigned-off-by: Ben Thomas <ben@benthomas.ca>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4", "author": {"user": {"login": "aviansie-ben", "name": "Ben Thomas (Aviansie Ben)"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/086094d58e3d63d2700a52f088a62139145c15d4", "committedDate": "2020-08-05T15:17:11Z", "message": "Disable initTOC call when disableTOC option is enabled\n\nPreviously, TR_PPCTableOfConstants::initTOC would be called even if the\ndisableTOC option was enabled, causing memory to be allocated for the\npTOC even if it was disabled. This call is now guarded by a check of\nthis option.\n\nCo-authored-by: Julian Wang <zlwang@ca.ibm.com>\nSigned-off-by: Ben Thomas <ben@benthomas.ca>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODc3NTc4", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#pullrequestreview-462877578", "createdAt": "2020-08-06T21:07:26Z", "commit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNDI3NDkz", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#pullrequestreview-463427493", "createdAt": "2020-08-07T16:01:03Z", "commit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjowMTowM1rOG9fV6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjo0NDowMlrOG9gszg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ==", "bodyText": "This comment is a bit puzzling. Do you mean one trampoline per 8KB of code?", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467129835", "createdAt": "2020-08-07T16:01:03Z", "author": {"login": "gita-omr"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -52,13 +55,12 @@ void ppcCodeCacheConfig(int32_t ccSizeInByte, int32_t *numTempTrampolines)\n    {\n    // Estimated: 2KB per method, with 10% being recompiled(multi-times)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE1MjA3OA==", "bodyText": "Might be helpful to describe a new trampoline layout here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467152078", "createdAt": "2020-08-07T16:44:02Z", "author": {"login": "gita-omr"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -69,14 +71,54 @@ void ppcCreateHelperTrampolines(uint8_t *trampPtr, int32_t numHelpers)\n       buffer = bufferStart;\n \n #if defined(TR_TARGET_64BIT)\n-         // ld gr11, [grPTOC, 8*(cookie-1)]\n-         *(int32_t *)buffer = 0xe9700000 | (((cookie-1)*sizeof(intptr_t)) & 0x0000ffff);\n+      if (!TR::Compiler->target.cpu.isAtLeast(OMR_PROCESSOR_PPC_P10))\n+         {\n+         if (!TR::Options::getCmdLineOptions()->getOption(TR_DisableTOC))\n+            {\n+            // ld gr11, [grPTOC, 8*(cookie-1)]\n+            *(int32_t *)buffer = 0xe9700000 | (((cookie-1)*sizeof(intptr_t)) & 0x0000ffff);\n+            buffer += 4;\n+            }\n+         else\n+            {\n+            // only gr11 is available for helper dispatch\n+\n+            // lis gr11, upper 16-bits\n+            *(int32_t *)buffer = 0x3d600000 | ((helper>>48) & 0x0000ffff);\n+            buffer += 4;\n+\n+            // oris gr11, gr11, bits 16--31\n+            *(int32_t *)buffer = 0x656b0000 | ((helper>>32) & 0x0000ffff);\n+            buffer += 4;\n+\n+            // rldicr gr11, gr11, 32, 31\n+            *(int32_t *)buffer = 0x796b07c6;\n+            buffer += 4;\n+\n+            // oris gr11, gr11, bits 32-47\n+            *(int32_t *)buffer = 0x656b0000 | ((helper>>16) & 0x0000ffff);\n+            buffer += 4;\n+\n+            // ori gr11, gr11, bits 48--63\n+            *(int32_t *)buffer = 0x616b0000 | (helper & 0x0000ffff);\n+            buffer += 4;\n+            }\n+         }\n+      else\n+         {\n+         // pld gr11, [,16], 1 (PC-relative)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1MzQ5NTE1", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#pullrequestreview-465349515", "createdAt": "2020-08-11T19:04:53Z", "commit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 95, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}