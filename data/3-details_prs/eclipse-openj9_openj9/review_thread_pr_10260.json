{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NDU2NjQ4", "number": 10260, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowNDozN1rOESmdyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowNTo1MlrOESme5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTQwMDQyOnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/sun_reflect_ConstantPool.c", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowNDozN1rOG33z3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMjozNToyNlrOG36Zmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTI2MA==", "bodyText": "Pls declare c variables at the beginning of a scope.", "url": "https://github.com/eclipse-openj9/openj9/pull/10260#discussion_r461239260", "createdAt": "2020-07-28T00:04:37Z", "author": {"login": "pshipton"}, "path": "runtime/jcl/common/sun_reflect_ConstantPool.c", "diffHunk": "@@ -907,6 +908,7 @@ registerJdkInternalReflectConstantPoolNatives(JNIEnv *env) {\n \t\t\t(void *)&Java_sun_reflect_ConstantPool_getUTF8At0,\n \t\t},\n \t};\n+\tjint numNatives = sizeof(natives)/sizeof(JNINativeMethod);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2f383712de9cb9f00e8c30378c2e14d8178f17"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3MDQ3Nw==", "bodyText": "Should have looked at more context, this is the beginning.", "url": "https://github.com/eclipse-openj9/openj9/pull/10260#discussion_r461270477", "createdAt": "2020-07-28T01:54:13Z", "author": {"login": "pshipton"}, "path": "runtime/jcl/common/sun_reflect_ConstantPool.c", "diffHunk": "@@ -907,6 +908,7 @@ registerJdkInternalReflectConstantPoolNatives(JNIEnv *env) {\n \t\t\t(void *)&Java_sun_reflect_ConstantPool_getUTF8At0,\n \t\t},\n \t};\n+\tjint numNatives = sizeof(natives)/sizeof(JNINativeMethod);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTI2MA=="}, "originalCommit": {"oid": "8a2f383712de9cb9f00e8c30378c2e14d8178f17"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MTY5MA==", "bodyText": "Yes, it is.", "url": "https://github.com/eclipse-openj9/openj9/pull/10260#discussion_r461281690", "createdAt": "2020-07-28T02:35:26Z", "author": {"login": "JasonFengJ9"}, "path": "runtime/jcl/common/sun_reflect_ConstantPool.c", "diffHunk": "@@ -907,6 +908,7 @@ registerJdkInternalReflectConstantPoolNatives(JNIEnv *env) {\n \t\t\t(void *)&Java_sun_reflect_ConstantPool_getUTF8At0,\n \t\t},\n \t};\n+\tjint numNatives = sizeof(natives)/sizeof(JNINativeMethod);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTI2MA=="}, "originalCommit": {"oid": "8a2f383712de9cb9f00e8c30378c2e14d8178f17"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTQwMjA2OnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/sun_misc_Perf.c", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowNToyMFrOG330zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMjozNjozOFrOG36a7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTUwMg==", "bodyText": "Pls declare c variables at the beginning of a scope.", "url": "https://github.com/eclipse-openj9/openj9/pull/10260#discussion_r461239502", "createdAt": "2020-07-28T00:05:20Z", "author": {"login": "pshipton"}, "path": "runtime/jcl/common/sun_misc_Perf.c", "diffHunk": "@@ -125,7 +126,11 @@ registerJdkInternalPerfPerfNatives(JNIEnv *env, jclass clazz) {\n \t\t\t(void *)&Java_sun_misc_Perf_highResFrequency\n \t\t},\n \t};\n-\t(*env)->RegisterNatives(env, clazz, natives, sizeof(natives)/sizeof(JNINativeMethod));\n+\tjint numNatives = sizeof(natives)/sizeof(JNINativeMethod);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2f383712de9cb9f00e8c30378c2e14d8178f17"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI3MDUxOQ==", "bodyText": "Should have looked at more context, this is the beginning.", "url": "https://github.com/eclipse-openj9/openj9/pull/10260#discussion_r461270519", "createdAt": "2020-07-28T01:54:21Z", "author": {"login": "pshipton"}, "path": "runtime/jcl/common/sun_misc_Perf.c", "diffHunk": "@@ -125,7 +126,11 @@ registerJdkInternalPerfPerfNatives(JNIEnv *env, jclass clazz) {\n \t\t\t(void *)&Java_sun_misc_Perf_highResFrequency\n \t\t},\n \t};\n-\t(*env)->RegisterNatives(env, clazz, natives, sizeof(natives)/sizeof(JNINativeMethod));\n+\tjint numNatives = sizeof(natives)/sizeof(JNINativeMethod);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTUwMg=="}, "originalCommit": {"oid": "8a2f383712de9cb9f00e8c30378c2e14d8178f17"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MjAzMA==", "bodyText": "Same here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10260#discussion_r461282030", "createdAt": "2020-07-28T02:36:38Z", "author": {"login": "JasonFengJ9"}, "path": "runtime/jcl/common/sun_misc_Perf.c", "diffHunk": "@@ -125,7 +126,11 @@ registerJdkInternalPerfPerfNatives(JNIEnv *env, jclass clazz) {\n \t\t\t(void *)&Java_sun_misc_Perf_highResFrequency\n \t\t},\n \t};\n-\t(*env)->RegisterNatives(env, clazz, natives, sizeof(natives)/sizeof(JNINativeMethod));\n+\tjint numNatives = sizeof(natives)/sizeof(JNINativeMethod);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTUwMg=="}, "originalCommit": {"oid": "8a2f383712de9cb9f00e8c30378c2e14d8178f17"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3OTQwMzI1OnYy", "diffSide": "LEFT", "path": "runtime/jcl/common/java_dyn_methodhandle.c", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMDowNTo1MlrOG331hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwMjozNzowMVrOG36baw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTY4Ng==", "bodyText": "This declaration needs to be in a .h file.", "url": "https://github.com/eclipse-openj9/openj9/pull/10260#discussion_r461239686", "createdAt": "2020-07-28T00:05:52Z", "author": {"login": "pshipton"}, "path": "runtime/jcl/common/java_dyn_methodhandle.c", "diffHunk": "@@ -55,9 +56,6 @@ static void JNICALL vmInvalidate(JNIEnv *env, jclass mutableCallSiteClass, jlong\n static BOOLEAN accessCheckMethodSignature(J9VMThread *currentThread, J9Method *method, j9object_t methodType, J9UTF8 *lookupSig);\n static BOOLEAN accessCheckFieldSignature(J9VMThread *currentThread, J9Class* lookupClass, UDATA romField, j9object_t methodType, J9UTF8 *lookupSig);\n static char * expandNLSTemplate(J9VMThread *vmThread, const char *nlsTemplate, ...);\n-#if defined(J9VM_OPT_JAVA_OFFLOAD_SUPPORT)\n-static void clearNonZAAPEligibleBit(JNIEnv *env, jclass nativeClass, const JNINativeMethod *nativeMethods, jint nativeMethodCount);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2f383712de9cb9f00e8c30378c2e14d8178f17"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTkwOA==", "bodyText": "Ah, I see it now.", "url": "https://github.com/eclipse-openj9/openj9/pull/10260#discussion_r461239908", "createdAt": "2020-07-28T00:06:35Z", "author": {"login": "pshipton"}, "path": "runtime/jcl/common/java_dyn_methodhandle.c", "diffHunk": "@@ -55,9 +56,6 @@ static void JNICALL vmInvalidate(JNIEnv *env, jclass mutableCallSiteClass, jlong\n static BOOLEAN accessCheckMethodSignature(J9VMThread *currentThread, J9Method *method, j9object_t methodType, J9UTF8 *lookupSig);\n static BOOLEAN accessCheckFieldSignature(J9VMThread *currentThread, J9Class* lookupClass, UDATA romField, j9object_t methodType, J9UTF8 *lookupSig);\n static char * expandNLSTemplate(J9VMThread *vmThread, const char *nlsTemplate, ...);\n-#if defined(J9VM_OPT_JAVA_OFFLOAD_SUPPORT)\n-static void clearNonZAAPEligibleBit(JNIEnv *env, jclass nativeClass, const JNINativeMethod *nativeMethods, jint nativeMethodCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTY4Ng=="}, "originalCommit": {"oid": "8a2f383712de9cb9f00e8c30378c2e14d8178f17"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTI4MjE1NQ==", "bodyText": "Yes, it is.", "url": "https://github.com/eclipse-openj9/openj9/pull/10260#discussion_r461282155", "createdAt": "2020-07-28T02:37:01Z", "author": {"login": "JasonFengJ9"}, "path": "runtime/jcl/common/java_dyn_methodhandle.c", "diffHunk": "@@ -55,9 +56,6 @@ static void JNICALL vmInvalidate(JNIEnv *env, jclass mutableCallSiteClass, jlong\n static BOOLEAN accessCheckMethodSignature(J9VMThread *currentThread, J9Method *method, j9object_t methodType, J9UTF8 *lookupSig);\n static BOOLEAN accessCheckFieldSignature(J9VMThread *currentThread, J9Class* lookupClass, UDATA romField, j9object_t methodType, J9UTF8 *lookupSig);\n static char * expandNLSTemplate(J9VMThread *vmThread, const char *nlsTemplate, ...);\n-#if defined(J9VM_OPT_JAVA_OFFLOAD_SUPPORT)\n-static void clearNonZAAPEligibleBit(JNIEnv *env, jclass nativeClass, const JNINativeMethod *nativeMethods, jint nativeMethodCount);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIzOTY4Ng=="}, "originalCommit": {"oid": "8a2f383712de9cb9f00e8c30378c2e14d8178f17"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4821, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}