{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNjc0NDY1", "number": 11367, "title": "Update linkToInterface for OpenJDK MethodHandles", "bodyText": "Now, it properly handles:\n\nPrivate interface methods\nj.l.Object methods\nvTable offset for the method\niTable index for the method\n\nAlso, the latest version of the class is retrieved for the iTable search.\nCo-authored-by: Jack Lu Jack.S.Lu@ibm.com\nSigned-off-by: Babneet Singh sbabneet@ca.ibm.com", "createdAt": "2020-12-04T17:24:23Z", "url": "https://github.com/eclipse-openj9/openj9/pull/11367", "merged": true, "mergeCommit": {"oid": "d4cc28f4103b85485af7d9fdbbb8d43e4e4977fc"}, "closed": true, "closedAt": "2020-12-22T18:53:01Z", "author": {"login": "babsingh"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdi8y3BgFqTU0NTIzMzk1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdovL7DAFqTU1NzI5NTMxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MjMzOTUz", "url": "https://github.com/eclipse-openj9/openj9/pull/11367#pullrequestreview-545233953", "createdAt": "2020-12-04T19:20:30Z", "commit": {"oid": "f6a6af486632ca0705819c426a0d3e51389139d8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOToyMDozMFrOH_euzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxOToyMDozMFrOH_euzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjMyNTgzOQ==", "bodyText": "This fetches J9JNIMethodID* from  vmindexOffset and then tries to decode it for an interface.  Looking at the code that initializes the J9JNIMethodID:\nhttps://github.com/eclipse/openj9/blob/a7b7dbe51e2c8801b4f0a22bb98322d7dda76692/runtime/vm/jnicsup.cpp#L2097-L2122\nit explicitly states that it doesn't tag the vTableIndex for static interface methods or methods from Object as J9_JNI_MID_INTERFACE.\nIf it's one of those cases, the code below that looks up the method will be wrong:\n_sendMethod = *(J9Method **)(((UDATA)receiverClass) + vTableOffset);\n\nCan you point me at the code that ensures we won't try to run linkToInterface for private interface methods or for Object methods looked up on the interface?\nWith the OpenJ9 implementation, we handled these cases in the Java code that created the MH by returning DirectHandles or VirtualHandles wrapped with appropriate asTypes to ensure we couldn't hit them in the native code.", "url": "https://github.com/eclipse-openj9/openj9/pull/11367#discussion_r536325839", "createdAt": "2020-12-04T19:20:30Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -8396,7 +8396,15 @@ class INTERPRETER_CLASS\n \t\t\t\tif (interfaceClass == iTable->interfaceClass) {\n \t\t\t\t\treceiverClass->lastITable = iTable;\n foundITable:\n-\t\t\t\t\tvTableOffset = ((UDATA*)(iTable + 1))[iTableIndex];\n+\t\t\t\t\tif (J9_UNEXPECTED(J9_ARE_ANY_BITS_SET(iTableIndex, J9_ITABLE_OFFSET_TAG_BITS))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6a6af486632ca0705819c426a0d3e51389139d8"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55555cbe3cca2fa3c1090fea10af8ffcf99f62c0", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/55555cbe3cca2fa3c1090fea10af8ffcf99f62c0", "committedDate": "2020-12-09T22:00:27Z", "message": "Update linkToInterface for OpenJDK MethodHandles\n\nNow, it properly handles:\n- Private interface methods\n- j.l.Object methods\n- vTable offset for the method\n- iTable index for the method\n\nCo-authored-by: Jack Lu <Jack.S.Lu@ibm.com>\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "ab0961ec0557f009644b23bcc7d0d77e00a4cc4e", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ab0961ec0557f009644b23bcc7d0d77e00a4cc4e", "committedDate": "2020-12-09T22:04:24Z", "message": "Update linkToInterface for OpenJDK MethodHandles\n\nNow, it properly handles:\n- Private interface methods\n- j.l.Object methods\n- vTable offset for the method\n- iTable index for the method\n\nCo-authored-by: Jack Lu <Jack.S.Lu@ibm.com>\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMzU4ODky", "url": "https://github.com/eclipse-openj9/openj9/pull/11367#pullrequestreview-553358892", "createdAt": "2020-12-16T05:03:56Z", "commit": {"oid": "ab0961ec0557f009644b23bcc7d0d77e00a4cc4e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNTowMzo1N1rOIGwi4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNTowMzo1N1rOIGwi4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzk1NzczMA==", "bodyText": "The MemberName->vmtargetOffset is directly holding onto a J9Method*.  How is that pointer updated during HCR?  I'm concerned that the loop through the iTable may fail to match the interfaceClass if HCR has replaced the class with a newer version.  (ie:  The cached J9Method * may hold onto an obsolete class pointer)", "url": "https://github.com/eclipse-openj9/openj9/pull/11367#discussion_r543957730", "createdAt": "2020-12-16T05:03:57Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -8383,28 +8383,41 @@ class INTERPRETER_CLASS\n \t\tJ9Method *method = (J9Method *)(UDATA)J9OBJECT_U64_LOAD(_currentThread, memberNameObject, _vm->vmtargetOffset);\n \t\tUDATA vTableOffset = methodID->vTableIndex;\n \n-\t\tif (J9_ARE_ANY_BITS_SET(vTableOffset, J9_JNI_MID_INTERFACE)) {\n-\t\t\tUDATA iTableIndex = vTableOffset & ~(UDATA)J9_JNI_MID_INTERFACE;\n-\t\t\tJ9Class *interfaceClass = J9_CLASS_FROM_METHOD(method);\n-\t\t\tvTableOffset = 0;\n-\t\t\tJ9ITable * iTable = receiverClass->lastITable;\n-\t\t\tif (interfaceClass == iTable->interfaceClass) {\n-\t\t\t\tgoto foundITable;\n-\t\t\t}\n-\t\t\tiTable = (J9ITable*)receiverClass->iTable;\n-\t\t\twhile (NULL != iTable) {\n+\t\t/* vmindexOffset (J9JNIMethodID) is initialized using jnicsup.cpp::initializeMethodID.\n+\t\t * initializeMethodID will set J9JNIMethodID->vTableIndex to 0 for private interface\n+\t\t * methods and j.l.Object methods. When J9JNIMethodID->vTableIndex is 0, then\n+\t\t * vmtargetOffset (J9Method) is the _sendMethod, and it will point to the private\n+\t\t * interface method or j.l.Object method. When J9JNIMethodID->vTableIndex is not 0,\n+\t\t * then it is either a vTable offset or an iTable index.\n+\t\t */\n+\t\tif (0 == vTableOffset) {\n+\t\t\t/* Private interface method or j.l.Object method. */\n+\t\t\t_sendMethod = method;\n+\t\t} else {\n+\t\t\t/* Treat as vTable offset for the method if J9_JNI_MID_INTERFACE is not set. */\n+\t\t\tif (J9_ARE_ANY_BITS_SET(vTableOffset, J9_JNI_MID_INTERFACE)) {\n+\t\t\t\t/* Treat as iTable index for the method if J9_JNI_MID_INTERFACE is set. */\n+\t\t\t\tUDATA iTableIndex = vTableOffset & ~(UDATA)J9_JNI_MID_INTERFACE;\n+\t\t\t\tJ9Class *interfaceClass = J9_CLASS_FROM_METHOD(method);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab0961ec0557f009644b23bcc7d0d77e00a4cc4e"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41fdedde11f2093595ee03a3a716c89050b12cbe", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/41fdedde11f2093595ee03a3a716c89050b12cbe", "committedDate": "2020-12-21T17:35:29Z", "message": "Update linkToInterface for OpenJDK MethodHandles\n\nNow, it properly handles:\n- Private interface methods\n- j.l.Object methods\n- vTable offset for the method\n- iTable index for the method\n\nAlso, the latest version of the class is retrieved for the iTable\nsearch.\n\nCo-authored-by: Jack Lu <Jack.S.Lu@ibm.com>\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ab0961ec0557f009644b23bcc7d0d77e00a4cc4e", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ab0961ec0557f009644b23bcc7d0d77e00a4cc4e", "committedDate": "2020-12-09T22:04:24Z", "message": "Update linkToInterface for OpenJDK MethodHandles\n\nNow, it properly handles:\n- Private interface methods\n- j.l.Object methods\n- vTable offset for the method\n- iTable index for the method\n\nCo-authored-by: Jack Lu <Jack.S.Lu@ibm.com>\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "41fdedde11f2093595ee03a3a716c89050b12cbe", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/41fdedde11f2093595ee03a3a716c89050b12cbe", "committedDate": "2020-12-21T17:35:29Z", "message": "Update linkToInterface for OpenJDK MethodHandles\n\nNow, it properly handles:\n- Private interface methods\n- j.l.Object methods\n- vTable offset for the method\n- iTable index for the method\n\nAlso, the latest version of the class is retrieved for the iTable\nsearch.\n\nCo-authored-by: Jack Lu <Jack.S.Lu@ibm.com>\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3Mjk1MzE4", "url": "https://github.com/eclipse-openj9/openj9/pull/11367#pullrequestreview-557295318", "createdAt": "2020-12-22T18:52:46Z", "commit": {"oid": "41fdedde11f2093595ee03a3a716c89050b12cbe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1438, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}