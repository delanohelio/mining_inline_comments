{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNjUwODA2", "number": 8956, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzowNTowN1rODqyCBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzowNTowN1rODqyCBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MTg2NTAyOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/optimizer/OSRGuardInsertion.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzowNTowN1rOF6vPXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNzozNDoxMVrOF67mTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEzNTcwOQ==", "bodyText": "should this just be the getOSRMode since getOption(TR_EnableOSR) and getOption(TR_DisableOSR are not inverses?", "url": "https://github.com/eclipse-openj9/openj9/pull/8956#discussion_r397135709", "createdAt": "2020-03-24T13:05:07Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/optimizer/OSRGuardInsertion.cpp", "diffHunk": "@@ -202,6 +203,14 @@ static bool skipOSRGuardInsertion(TR::Compilation* comp)\n \n int32_t TR_OSRGuardInsertion::perform()\n    {\n+   if (!comp()->getOption(TR_EnableOSR) ||", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f03c50c0f2e370818d2dfc185031c520ec4d04a3"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzMzODE4OA==", "bodyText": "@andrewcraik getOSRMode is not enough, if we're not under FSD, it'll always return TR::voluntaryOSR. Changed it to use supportsInduceOSR\nTR::OSRMode\nOMR::Compilation::getOSRMode()\n   {\n   if (self()->getOption(TR_FullSpeedDebug))\n      return TR::involuntaryOSR;\n   return TR::voluntaryOSR;\n   }", "url": "https://github.com/eclipse-openj9/openj9/pull/8956#discussion_r397338188", "createdAt": "2020-03-24T17:34:11Z", "author": {"login": "liqunl"}, "path": "runtime/compiler/optimizer/OSRGuardInsertion.cpp", "diffHunk": "@@ -202,6 +203,14 @@ static bool skipOSRGuardInsertion(TR::Compilation* comp)\n \n int32_t TR_OSRGuardInsertion::perform()\n    {\n+   if (!comp()->getOption(TR_EnableOSR) ||", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzEzNTcwOQ=="}, "originalCommit": {"oid": "f03c50c0f2e370818d2dfc185031c520ec4d04a3"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 423, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}