{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMjQ0NTQx", "number": 9431, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxOTo0NjoyN1rOD98owQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxOTo0NjoyN1rOD98owQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjgzMjAxOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/z/env/J9CPU.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxOTo0NjoyN1rOGXwBQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxOTo0NjoyN1rOGXwBQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU1NzE4Ng==", "bodyText": "@fjeremic Issue here: options get initialized after CompilerEnv gets initialized. as a result, by the time our cpu::detect() function is called , we won't have the command line options ready. So these feature/processor intiailizations have to be done afterwards. The workaround I have here is an applyUserOptions() api that will be called somewhere after the options are ready. (I picked the place that the old processor detection system uses to be safe). I thought about moving the detect function somewhere else, still think the current location is most idea. I also don't want our cpu::detect() function to have dependency on options initialization.", "url": "https://github.com/eclipse-openj9/openj9/pull/9431#discussion_r427557186", "createdAt": "2020-05-19T19:46:27Z", "author": {"login": "harryyu1994"}, "path": "runtime/compiler/z/env/J9CPU.cpp", "diffHunk": "@@ -43,14 +43,85 @@\n \n extern J9JITConfig * jitConfig;\n \n-namespace J9\n-{\n+void\n+J9::Z::CPU::applyUserOptions()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff743ab68d2b552bd5c8f17dfb5ac7a92fecc041"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 310, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}