{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5Mjc2Mzk1", "number": 8646, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo1NTozNlrODiwdLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMzoyMzoyN1rODi7nWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzcyMDc5OnYy", "diffSide": "RIGHT", "path": "runtime/vm/BytecodeInterpreter.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo1NTozNlrOFuLreA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNTo1NTozNlrOFuLreA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk3MDE2OA==", "bodyText": "You probably want to pass in J9_RESOLVE_FLAG_INIT_CLASS as well here to avoid going around the loop again.", "url": "https://github.com/eclipse-openj9/openj9/pull/8646#discussion_r383970168", "createdAt": "2020-02-25T15:55:36Z", "author": {"login": "gacholio"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -7591,10 +7595,18 @@ done:;\n \t\t\t}\n \t\t\tgoto retry;\n \t\t}\n-\t\t/* Unresolved */\n+\t\t/* Unresolved or requires initialization in the VT case */\n \t\tbuildGenericSpecialStackFrame(REGISTER_ARGS, 0);\n \t\tupdateVMStruct(REGISTER_ARGS);\n-\t\tresolveClassRef(_currentThread, ramConstantPool, index, J9_RESOLVE_FLAG_RUNTIME_RESOLVE);\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t\tif (NULL == resolvedClass) {\n+#endif /* defined(J9VM_OPT_VALHALLA_VALUE_TYPES) */\n+\t\t\tresolveClassRef(_currentThread, ramConstantPool, index, J9_RESOLVE_FLAG_RUNTIME_RESOLVE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc83d16a7c278d9d3413d1108d9b44893e5d7c8"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODczMzU0OnYy", "diffSide": "RIGHT", "path": "runtime/vm/classsupport.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMToxMzoyMFrOFuVYfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMToxMzoyMFrOFuVYfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDEyOTE0OA==", "bodyText": "If this fails, you should probably return NULL (presumably the caller already has to handle any pending exceptions). Check pending exception here and set result to NULL (and re-NULL the arrayClass field).\n@DanHeidinga Any issue you can see here? We won't allow another attempt to initialize the VT class, so the failure should be persistent.", "url": "https://github.com/eclipse-openj9/openj9/pull/8646#discussion_r384129148", "createdAt": "2020-02-25T21:13:20Z", "author": {"login": "gacholio"}, "path": "runtime/vm/classsupport.c", "diffHunk": "@@ -226,6 +226,20 @@ internalCreateArrayClass(J9VMThread* vmThread, J9ROMArrayClass* romClass, J9Clas\n \t\tLOAD_LOCATION_UNKNOWN,\n \t\tNULL,\n \t\tNULL);\n+\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t/* When creating an array of valuetype elements, the array elements are initialized to the defaultValue of the\n+\t * element type. As a result the element type must be fully initialized (if its a valuetype) before creating an\n+\t * instance of the array.\n+\t */\n+\tif ((NULL != result) && J9_IS_J9CLASS_VALUETYPE(elementClass)) {\n+\t\tUDATA initStatus = elementClass->initializeStatus;\n+\t\tif ((J9ClassInitSucceeded != initStatus) && ((UDATA)vmThread != initStatus)) {\n+\t\t\tinitializeClass(vmThread, elementClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3cf7770cbd2292e6a9416aefc81e7c76b1416dc"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTU0OTA2OnYy", "diffSide": "RIGHT", "path": "runtime/vm/classsupport.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMzoyMzoyN1rOFudI2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMzoyMzoyN1rOFudI2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI1NjIxNg==", "bodyText": "This is problematic - there's a timing hole where the array class would be visible to another thread before being NULLed.\nProbably the answer is to initialize the VT class before starting to create the array class.", "url": "https://github.com/eclipse-openj9/openj9/pull/8646#discussion_r384256216", "createdAt": "2020-02-26T03:23:27Z", "author": {"login": "gacholio"}, "path": "runtime/vm/classsupport.c", "diffHunk": "@@ -226,6 +226,24 @@ internalCreateArrayClass(J9VMThread* vmThread, J9ROMArrayClass* romClass, J9Clas\n \t\tLOAD_LOCATION_UNKNOWN,\n \t\tNULL,\n \t\tNULL);\n+\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t/* When creating an array of valuetype elements, the array elements are initialized to the defaultValue of the\n+\t * element type. As a result the element type must be fully initialized (if its a valuetype) before creating an\n+\t * instance of the array.\n+\t */\n+\tif ((NULL != result) && J9_IS_J9CLASS_VALUETYPE(elementClass)) {\n+\t\tUDATA initStatus = elementClass->initializeStatus;\n+\t\tif ((J9ClassInitSucceeded != initStatus) && ((UDATA)vmThread != initStatus)) {\n+\t\t\tinitializeClass(vmThread, elementClass);\n+\t\t\tif (NULL != vmThread->currentException) {\n+\t\t\t\tresult = NULL;\n+\t\t\t\telementClass->arrayClass = NULL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f00dfdf19041f13125608681f75ede8c97455164"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 607, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}