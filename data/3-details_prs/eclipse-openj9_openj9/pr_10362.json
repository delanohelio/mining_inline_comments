{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NjY2MzY0", "number": 10362, "title": "LoadInstance support for sym ref generation for flattened fields", "bodyText": "Support flattened fields in loadinstance.\nDependencies\n\n 1. #10115 Add TypeLayoutEntry build for flattened fields\n 2. #10352 Create JIT helper functions on checking flattened fields\n 3. eclipse/omr#5493 Create JIT option to select between runtime helpers or SymRef generation for flattened field support\n 4. #10462 Runtime flattened fields helper\n\nThis change was originally authored by Yi Zhang who is listed as a co-author below.\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\nSigned-off-by: Annabelle Huo Annabelle.Huo@ibm.com", "createdAt": "2020-08-10T18:41:34Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10362", "merged": true, "mergeCommit": {"oid": "4fea06bc9ed8a34f6d58fc67eb3c2bada9e29629"}, "closed": true, "closedAt": "2020-09-25T13:42:17Z", "author": {"login": "a7ehuo"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc98Xi2gBqjM2NDQ3ODgwMTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdME9NMAFqTQ5NTgxMjI3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e66dcb14d6b5095a3c05f0a7569d1e7e23118d58", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e66dcb14d6b5095a3c05f0a7569d1e7e23118d58", "committedDate": "2020-08-10T18:39:33Z", "message": "Support flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "e791b50bd355d9f80a9c1c96c52dfdca5539817d", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e791b50bd355d9f80a9c1c96c52dfdca5539817d", "committedDate": "2020-08-11T19:55:15Z", "message": "Support flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e791b50bd355d9f80a9c1c96c52dfdca5539817d", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e791b50bd355d9f80a9c1c96c52dfdca5539817d", "committedDate": "2020-08-11T19:55:15Z", "message": "Support flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "0a53071aef116ea842883790c731f0b7220d79c9", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0a53071aef116ea842883790c731f0b7220d79c9", "committedDate": "2020-08-13T17:08:39Z", "message": "Support flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5Njg1MDg5", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#pullrequestreview-469685089", "createdAt": "2020-08-18T17:42:47Z", "commit": {"oid": "0a53071aef116ea842883790c731f0b7220d79c9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo0Mjo0OFrOHCfS4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo0Mjo0OFrOHCfS4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3MTkzOQ==", "bodyText": "I think this does need to be made real to facilitate debugging if test failures occur - the transform is optional. Would it make more sense to always generate the helpers and then have an ilgen opts pass to do the lowering? That way we could use a standard performTransformation guard to guard the transform to allow for easier debugging?\nIf that makes things too complicated then at least some kind of JIT option is necessary.", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#discussion_r472371939", "createdAt": "2020-08-18T17:42:48Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/ilgen/Walker.cpp", "diffHunk": "@@ -5061,13 +5061,54 @@ TR_J9ByteCodeIlGenerator::loadAuto(TR::DataType type, int32_t slot, bool isAdjun\n    push(load);\n    }\n \n+static bool isFieldResovled(TR::Compilation *comp, TR_ResolvedJ9Method * owningMethod, int32_t cpIndex, bool isStore)\n+   {\n+   uint32_t offset = 0;\n+   TR::DataType type = TR::NoType;\n+   bool isVolatile = true, isFinal = false, isPrivate = false, isUnresolvedInCP;\n+   bool bResolved = owningMethod->fieldAttributes(comp, cpIndex, &offset, &type, &isVolatile, &isFinal,\n+                                    &isPrivate, isStore, &isUnresolvedInCP, true /* needsAOTValidation */);\n+   return bResolved;\n+   }\n+\n void\n TR_J9ByteCodeIlGenerator::loadInstance(int32_t cpIndex)\n    {\n    if (_generateReadBarriersForFieldWatch && comp()->compileRelocatableCode())\n       comp()->failCompilation<J9::AOTNoSupportForAOTFailure>(\"NO support for AOT in field watch\");\n-   TR::SymbolReference * symRef = symRefTab()->findOrCreateShadowSymbol(_methodSymbol, cpIndex, false);\n-   loadInstance(symRef);\n+\n+   TR_ResolvedJ9Method * owningMethod = static_cast<TR_ResolvedJ9Method*>(_methodSymbol->getResolvedMethod());\n+\n+   if (TR::Compiler->om.areValueTypesEnabled() &&\n+       owningMethod->isFieldQType(cpIndex))\n+      {\n+      if (isFieldResovled(comp(), owningMethod, cpIndex, false))\n+         {\n+         if (owningMethod->isFieldFlattened(comp(), cpIndex, _methodSymbol->isStatic()))\n+            {\n+            // TODO choose the runtime helper or not. Maybe based on an option?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a53071aef116ea842883790c731f0b7220d79c9"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5Njg1NTQ3", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#pullrequestreview-469685547", "createdAt": "2020-08-18T17:43:23Z", "commit": {"oid": "0a53071aef116ea842883790c731f0b7220d79c9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo0MzoyM1rOHCfUMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo0MzoyM1rOHCfUMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3MjI3NQ==", "bodyText": "This sub-tree should have some tracing for when traceILGen is on to outline the choice made and why so we know why we generated the tree we did.", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#discussion_r472372275", "createdAt": "2020-08-18T17:43:23Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/ilgen/Walker.cpp", "diffHunk": "@@ -5061,13 +5061,54 @@ TR_J9ByteCodeIlGenerator::loadAuto(TR::DataType type, int32_t slot, bool isAdjun\n    push(load);\n    }\n \n+static bool isFieldResovled(TR::Compilation *comp, TR_ResolvedJ9Method * owningMethod, int32_t cpIndex, bool isStore)\n+   {\n+   uint32_t offset = 0;\n+   TR::DataType type = TR::NoType;\n+   bool isVolatile = true, isFinal = false, isPrivate = false, isUnresolvedInCP;\n+   bool bResolved = owningMethod->fieldAttributes(comp, cpIndex, &offset, &type, &isVolatile, &isFinal,\n+                                    &isPrivate, isStore, &isUnresolvedInCP, true /* needsAOTValidation */);\n+   return bResolved;\n+   }\n+\n void\n TR_J9ByteCodeIlGenerator::loadInstance(int32_t cpIndex)\n    {\n    if (_generateReadBarriersForFieldWatch && comp()->compileRelocatableCode())\n       comp()->failCompilation<J9::AOTNoSupportForAOTFailure>(\"NO support for AOT in field watch\");\n-   TR::SymbolReference * symRef = symRefTab()->findOrCreateShadowSymbol(_methodSymbol, cpIndex, false);\n-   loadInstance(symRef);\n+\n+   TR_ResolvedJ9Method * owningMethod = static_cast<TR_ResolvedJ9Method*>(_methodSymbol->getResolvedMethod());\n+\n+   if (TR::Compiler->om.areValueTypesEnabled() &&\n+       owningMethod->isFieldQType(cpIndex))\n+      {\n+      if (isFieldResovled(comp(), owningMethod, cpIndex, false))\n+         {\n+         if (owningMethod->isFieldFlattened(comp(), cpIndex, _methodSymbol->isStatic()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a53071aef116ea842883790c731f0b7220d79c9"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a53071aef116ea842883790c731f0b7220d79c9", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0a53071aef116ea842883790c731f0b7220d79c9", "committedDate": "2020-08-13T17:08:39Z", "message": "Support flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "99fe516eeaf27e3fea7925558c336e0882b7fac9", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/99fe516eeaf27e3fea7925558c336e0882b7fac9", "committedDate": "2020-08-19T03:00:32Z", "message": "Support flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjY4MDk0", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#pullrequestreview-470668094", "createdAt": "2020-08-19T17:00:21Z", "commit": {"oid": "99fe516eeaf27e3fea7925558c336e0882b7fac9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzowMDoyMVrOHDQ8Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzowMDoyMVrOHDQ8Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE4NTMzOA==", "bodyText": "Can the isFieldQType really be called before checking if it's resolved?", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#discussion_r473185338", "createdAt": "2020-08-19T17:00:21Z", "author": {"login": "Leonardo2718"}, "path": "runtime/compiler/ilgen/Walker.cpp", "diffHunk": "@@ -5061,13 +5061,57 @@ TR_J9ByteCodeIlGenerator::loadAuto(TR::DataType type, int32_t slot, bool isAdjun\n    push(load);\n    }\n \n+static bool isFieldResovled(TR::Compilation *comp, TR_ResolvedJ9Method * owningMethod, int32_t cpIndex, bool isStore)\n+   {\n+   uint32_t offset = 0;\n+   TR::DataType type = TR::NoType;\n+   bool isVolatile = true, isFinal = false, isPrivate = false, isUnresolvedInCP;\n+   bool bResolved = owningMethod->fieldAttributes(comp, cpIndex, &offset, &type, &isVolatile, &isFinal,\n+                                    &isPrivate, isStore, &isUnresolvedInCP, true /* needsAOTValidation */);\n+   return bResolved;\n+   }\n+\n void\n TR_J9ByteCodeIlGenerator::loadInstance(int32_t cpIndex)\n    {\n    if (_generateReadBarriersForFieldWatch && comp()->compileRelocatableCode())\n       comp()->failCompilation<J9::AOTNoSupportForAOTFailure>(\"NO support for AOT in field watch\");\n-   TR::SymbolReference * symRef = symRefTab()->findOrCreateShadowSymbol(_methodSymbol, cpIndex, false);\n-   loadInstance(symRef);\n+\n+   TR_ResolvedJ9Method * owningMethod = static_cast<TR_ResolvedJ9Method*>(_methodSymbol->getResolvedMethod());\n+\n+   if (TR::Compiler->om.areValueTypesEnabled() &&\n+       owningMethod->isFieldQType(cpIndex))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99fe516eeaf27e3fea7925558c336e0882b7fac9"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjc0MDI3", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#pullrequestreview-470674027", "createdAt": "2020-08-19T17:08:30Z", "commit": {"oid": "99fe516eeaf27e3fea7925558c336e0882b7fac9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzowODozMFrOHDRXTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzowODozMFrOHDRXTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE5MjI3MQ==", "bodyText": "I think this should actually be\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               return bResolved;\n          \n          \n            \n               return !isUnresolvedInCP;\n          \n      \n    \n    \n  \n\nfieldAttributes() will return true if the CP entry gets resolved at compile-time. Under such cases, the JIT basically gets to peek at what the result will be when the entry is resolved. However, the runtime CP resolution still has to happen, so the JIT needs to treat the field as unresolved (because it is) even though it actually knows what it's supposed to be.", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#discussion_r473192271", "createdAt": "2020-08-19T17:08:30Z", "author": {"login": "Leonardo2718"}, "path": "runtime/compiler/ilgen/Walker.cpp", "diffHunk": "@@ -5061,13 +5061,57 @@ TR_J9ByteCodeIlGenerator::loadAuto(TR::DataType type, int32_t slot, bool isAdjun\n    push(load);\n    }\n \n+static bool isFieldResovled(TR::Compilation *comp, TR_ResolvedJ9Method * owningMethod, int32_t cpIndex, bool isStore)\n+   {\n+   uint32_t offset = 0;\n+   TR::DataType type = TR::NoType;\n+   bool isVolatile = true, isFinal = false, isPrivate = false, isUnresolvedInCP;\n+   bool bResolved = owningMethod->fieldAttributes(comp, cpIndex, &offset, &type, &isVolatile, &isFinal,\n+                                    &isPrivate, isStore, &isUnresolvedInCP, true /* needsAOTValidation */);\n+   return bResolved;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99fe516eeaf27e3fea7925558c336e0882b7fac9"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjgzNzQ4", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#pullrequestreview-470683748", "createdAt": "2020-08-19T17:21:21Z", "commit": {"oid": "99fe516eeaf27e3fea7925558c336e0882b7fac9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzoyMToyMlrOHDR1Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNzoyMToyMlrOHDR1Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE5OTkzMA==", "bodyText": "What happens if the cpIndex is not field entry in the CP?", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#discussion_r473199930", "createdAt": "2020-08-19T17:21:22Z", "author": {"login": "Leonardo2718"}, "path": "runtime/compiler/ilgen/Walker.cpp", "diffHunk": "@@ -5061,13 +5061,57 @@ TR_J9ByteCodeIlGenerator::loadAuto(TR::DataType type, int32_t slot, bool isAdjun\n    push(load);\n    }\n \n+static bool isFieldResovled(TR::Compilation *comp, TR_ResolvedJ9Method * owningMethod, int32_t cpIndex, bool isStore)\n+   {\n+   uint32_t offset = 0;\n+   TR::DataType type = TR::NoType;\n+   bool isVolatile = true, isFinal = false, isPrivate = false, isUnresolvedInCP;\n+   bool bResolved = owningMethod->fieldAttributes(comp, cpIndex, &offset, &type, &isVolatile, &isFinal,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99fe516eeaf27e3fea7925558c336e0882b7fac9"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "99fe516eeaf27e3fea7925558c336e0882b7fac9", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/99fe516eeaf27e3fea7925558c336e0882b7fac9", "committedDate": "2020-08-19T03:00:32Z", "message": "Support flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "949f6d8fda4867e014c53bc860afe5056dcb7185", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/949f6d8fda4867e014c53bc860afe5056dcb7185", "committedDate": "2020-08-25T22:11:12Z", "message": "Support flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "949f6d8fda4867e014c53bc860afe5056dcb7185", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/949f6d8fda4867e014c53bc860afe5056dcb7185", "committedDate": "2020-08-25T22:11:12Z", "message": "Support flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "e18acfff0479ca605d1869beaa773d05082e39c5", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e18acfff0479ca605d1869beaa773d05082e39c5", "committedDate": "2020-08-26T20:50:26Z", "message": "Support flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMTMwOTE5", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#pullrequestreview-480130919", "createdAt": "2020-09-01T21:29:10Z", "commit": {"oid": "e18acfff0479ca605d1869beaa773d05082e39c5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMToyOToxMFrOHLI7zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMToyOToxMFrOHLI7zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ0Mjc2Ng==", "bodyText": "Can we have some documentation in the code of what the trees will look like?", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#discussion_r481442766", "createdAt": "2020-09-01T21:29:10Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/ilgen/Walker.cpp", "diffHunk": "@@ -5160,6 +5176,81 @@ TR_J9ByteCodeIlGenerator::loadInstance(TR::SymbolReference * symRef)\n    push(dummyLoad);\n    }\n \n+static char * getTopLevelPrefixForFlattenedFields(TR_ResolvedJ9Method *owningMethod, int32_t cpIndex, int32_t &prefixLen, TR::Region &region)\n+   {\n+   int32_t len;\n+   const char * fieldNameChars = owningMethod->fieldNameChars(cpIndex, len);\n+   prefixLen = len + 1; // for '.'\n+\n+   char * newName = new (region) char[len+2];\n+   strncpy(newName, fieldNameChars, len);\n+\n+   newName[len] = '.';\n+   newName[len+1] = '\\0';\n+   return newName;\n+   }\n+\n+void\n+TR_J9ByteCodeIlGenerator::loadFlattenableInstance(int32_t cpIndex)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e18acfff0479ca605d1869beaa773d05082e39c5"}, "originalPosition": 42}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e18acfff0479ca605d1869beaa773d05082e39c5", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e18acfff0479ca605d1869beaa773d05082e39c5", "committedDate": "2020-08-26T20:50:26Z", "message": "Support flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "ce2f1a7b4bcb24abf72f1a04a266c1338f95215a", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ce2f1a7b4bcb24abf72f1a04a266c1338f95215a", "committedDate": "2020-09-01T22:35:49Z", "message": "Generate sym ref for flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce2f1a7b4bcb24abf72f1a04a266c1338f95215a", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ce2f1a7b4bcb24abf72f1a04a266c1338f95215a", "committedDate": "2020-09-01T22:35:49Z", "message": "Generate sym ref for flattened fields in loadinstance\n\n[skip ci]\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "218c43a912b7cbc397bc0d3678c8b3eefc7c6c9a", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/218c43a912b7cbc397bc0d3678c8b3eefc7c6c9a", "committedDate": "2020-09-16T15:22:20Z", "message": "Generate sym ref for flattened fields in loadinstance\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NTkyMzQ3", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#pullrequestreview-495592347", "createdAt": "2020-09-24T13:48:55Z", "commit": {"oid": "218c43a912b7cbc397bc0d3678c8b3eefc7c6c9a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo0ODo1NVrOHXbxsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMzo0ODo1NVrOHXbxsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDMzNDM4NA==", "bodyText": "why do we need a nullchk here? if the receiver is 'this' it would be guarnateed non-null... or is this some kind of more general transform and in this case we happen to have this and so we leave it to the optimizer to eliminate it later?", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#discussion_r494334384", "createdAt": "2020-09-24T13:48:55Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/ilgen/Walker.cpp", "diffHunk": "@@ -5216,6 +5217,117 @@ TR_J9ByteCodeIlGenerator::loadFlattenableInstanceWithHelper(int32_t cpIndex)\n    push(helperCallNode);\n    }\n \n+static char * getTopLevelPrefixForFlattenedFields(TR_ResolvedJ9Method *owningMethod, int32_t cpIndex, int32_t &prefixLen, TR::Region &region)\n+   {\n+   int32_t len;\n+   const char * fieldNameChars = owningMethod->fieldNameChars(cpIndex, len);\n+   prefixLen = len + 1; // for '.'\n+\n+   char * newName = new (region) char[len+2];\n+   strncpy(newName, fieldNameChars, len);\n+\n+   newName[len] = '.';\n+   newName[len+1] = '\\0';\n+   return newName;\n+   }\n+\n+void\n+TR_J9ByteCodeIlGenerator::loadFlattenableInstance(int32_t cpIndex)\n+   {\n+   /* An example on what the tree with flattened fields looks like\n+    *\n+    * value NestedA {\n+    *    int x;\n+    *    int y;\n+    *    }\n+    * value NestedB {\n+    *    NestedA a;\n+    *    NestedA b;\n+    *    }\n+    * value ContainerC {\n+    *    NestedB c;\n+    *    NestedB d;\n+    *    }\n+    *\n+    * method=\"ContainerC.getc()QNestedB;\"\n+    *\n+    * /--- trees inserted ------------------------\n+    * n5n      (  0)  NULLCHK on n3n [#32]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "218c43a912b7cbc397bc0d3678c8b3eefc7c6c9a"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b4caa64698ea4269a8ae5e15d123bea1b451f79", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6b4caa64698ea4269a8ae5e15d123bea1b451f79", "committedDate": "2020-09-24T17:04:41Z", "message": "Generate sym ref for flattened fields in loadinstance\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "218c43a912b7cbc397bc0d3678c8b3eefc7c6c9a", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/218c43a912b7cbc397bc0d3678c8b3eefc7c6c9a", "committedDate": "2020-09-16T15:22:20Z", "message": "Generate sym ref for flattened fields in loadinstance\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "6b4caa64698ea4269a8ae5e15d123bea1b451f79", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6b4caa64698ea4269a8ae5e15d123bea1b451f79", "committedDate": "2020-09-24T17:04:41Z", "message": "Generate sym ref for flattened fields in loadinstance\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1ODEyMjcy", "url": "https://github.com/eclipse-openj9/openj9/pull/10362#pullrequestreview-495812272", "createdAt": "2020-09-24T17:50:48Z", "commit": {"oid": "6b4caa64698ea4269a8ae5e15d123bea1b451f79"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 113, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}