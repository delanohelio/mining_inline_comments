{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwMzcyODM1", "number": 11317, "title": "Update how Eden size is reported at gc-start and gc-end", "bodyText": "Fix how Eden size is reported at gc-start and gc-end in balanced GC policy. Make it consistent with reporting\nMM_HeapRegionManagerVLHGC::getHeapMemorySnapshot()\nReorder how/when taxation threshold and regions' age are updated. Instead of updating region's age at the very end of a GC increment, we now update it at the end of GC increment but before we report gc-end. With the update of exportStats on how Eden is reported, we now have total Eden size being reported as getCurrentEdenSizeInBytes() always while free eden size in bytes contains the correct value, where at gc-start _edenFreeHeapSize is close to zero and at gc-end it's equal to Eden heap size.\nSigned-off-by: Igor Braga higorb1@gmail.com", "createdAt": "2020-12-01T15:11:08Z", "url": "https://github.com/eclipse-openj9/openj9/pull/11317", "merged": true, "mergeCommit": {"oid": "0a88289e7477ec518e1564811f53fdd80db2d3ed"}, "closed": true, "closedAt": "2020-12-14T14:14:20Z", "author": {"login": "bragaigor"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjBdH5AFqTU0NTM4MDg2OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlJs9OgFqTU1MDIwMDQ3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1MzgwODY5", "url": "https://github.com/eclipse-openj9/openj9/pull/11317#pullrequestreview-545380869", "createdAt": "2020-12-05T00:46:17Z", "commit": {"oid": "c20642fe6efa56460a65eb7b5761cb45590f5762"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMDo0NjoxOFrOH_nL7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMDo0NjoxOFrOH_nL7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ2NDM2NA==", "bodyText": "Remove gcStart/gcEnd dependency", "url": "https://github.com/eclipse-openj9/openj9/pull/11317#discussion_r536464364", "createdAt": "2020-12-05T00:46:18Z", "author": {"login": "bragaigor"}, "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "diffHunk": "@@ -2101,6 +2101,9 @@ MM_IncrementalGenerationalGC::exportStats(MM_EnvironmentVLHGC *env, MM_Collectio\n \t\t/* numaNodes is just used as indication to verbose GC that stats we collected are valid and indeed should be reported */\n \t\tstats->_numaNodes = _extensions->_numaManager.getAffinityLeaderCount();\n \t\tUDATA regionSize = _regionManager->getRegionSize();\n+\t\tUDATA allocateEdenTotal = 0;\n+\t\tstats->_edenHeapSize = getCurrentEdenSizeInBytes(env);\n+\t\tbool isGCend = stats->_startTime > stats->_endTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c20642fe6efa56460a65eb7b5761cb45590f5762"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c20642fe6efa56460a65eb7b5761cb45590f5762", "author": {"user": {"login": "bragaigor", "name": "Igor Braga"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c20642fe6efa56460a65eb7b5761cb45590f5762", "committedDate": "2020-12-01T15:07:54Z", "message": "Update how Eden size is reported at gc-start and gc-end\n\nFix how Eden size is reported at gc-start and gc-end\nin balanced GC policy. Make it consistent with reporting\nMM_HeapRegionManagerVLHGC::getHeapMemorySnapshot().\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>"}, "afterCommit": {"oid": "b161545c3904d2df6018a9546b5e01b19d858880", "author": {"user": {"login": "bragaigor", "name": "Igor Braga"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b161545c3904d2df6018a9546b5e01b19d858880", "committedDate": "2020-12-05T01:52:05Z", "message": "Update how Eden size is reported at gc-start and gc-end\n\nFix how Eden size is reported at gc-start and gc-end\nin balanced GC policy. Make it consistent with reporting\nMM_HeapRegionManagerVLHGC::getHeapMemorySnapshot().\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MzMyNTQ4", "url": "https://github.com/eclipse-openj9/openj9/pull/11317#pullrequestreview-548332548", "createdAt": "2020-12-09T15:56:44Z", "commit": {"oid": "b161545c3904d2df6018a9546b5e01b19d858880"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNTo1Njo0NFrOICcDMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNTo1Njo0NFrOICcDMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQyNzYzMw==", "bodyText": "we still need to update allocateEdenTotal, even for arraylet (age 0) region", "url": "https://github.com/eclipse-openj9/openj9/pull/11317#discussion_r539427633", "createdAt": "2020-12-09T15:56:44Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "diffHunk": "@@ -2111,23 +2113,20 @@ MM_IncrementalGenerationalGC::exportStats(MM_EnvironmentVLHGC *env, MM_Collectio\n \t\t\t\tif (region->containsObjects()) {\n \t\t\t\t\tMM_MemoryPoolBumpPointer *memoryPool = (MM_MemoryPoolBumpPointer *)region->getMemoryPool();\n \t\t\t\t\tAssert_MM_true(NULL != memoryPool);\n-\t\t\t\t\t/* for Eden region containing objects Allocation Age must be smaller then amount allocated since last PGC */\n-\t\t\t\t\tif (region->getAllocationAge() <= _allocatedSinceLastPGC) {\n-\t\t\t\t\t\tstats->_edenHeapSize += regionSize;\n+\t\t\t\t\t/* Eden region containing objects, Allocation Age must be smaller then amount allocated since last PGC,\n+\t\t\t\t\t * more accurately, its logical age must be equal to zero */\n+\t\t\t\t\tif (0 == region->getLogicalAge()) {\n \t\t\t\t\t\t/* region is not collected yet, so getActualFreeMemorySize might not be accurate - using getAllocatableBytes instead */\n \t\t\t\t\t\tUDATA size = memoryPool->getAllocatableBytes();\n \t\t\t\t\t\tstats->_edenFreeHeapSize += size;\n \t\t\t\t\t\tusedMemory = regionSize - size;\n+\t\t\t\t\t\tallocateEdenTotal += regionSize;\n \t\t\t\t\t} else {\n \t\t\t\t\t\tusedMemory = regionSize - memoryPool->getFreeMemoryAndDarkMatterBytes();\n \t\t\t\t\t}\n \t\t\t\t} else {\n \t\t\t\t\tAssert_MM_true(region->isArrayletLeaf());\n \t\t\t\t\tusedMemory = regionSize;\n-\t\t\t\t\t/* for Eden arraylet leaf Allocation Age must be smaller then amount allocated since last PGC */\n-\t\t\t\t\tif (region->getAllocationAge() <= _allocatedSinceLastPGC) {\n-\t\t\t\t\t\tstats->_edenHeapSize += regionSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b161545c3904d2df6018a9546b5e01b19d858880"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MzU5NTM4", "url": "https://github.com/eclipse-openj9/openj9/pull/11317#pullrequestreview-548359538", "createdAt": "2020-12-09T16:22:17Z", "commit": {"oid": "b161545c3904d2df6018a9546b5e01b19d858880"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoyMjoxOFrOICdXfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjoyMjoxOFrOICdXfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ0OTIxMg==", "bodyText": "I prefer to use the old age condition (it's more generic), which might work better after reordering in #11378", "url": "https://github.com/eclipse-openj9/openj9/pull/11317#discussion_r539449212", "createdAt": "2020-12-09T16:22:18Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "diffHunk": "@@ -2111,23 +2113,20 @@ MM_IncrementalGenerationalGC::exportStats(MM_EnvironmentVLHGC *env, MM_Collectio\n \t\t\t\tif (region->containsObjects()) {\n \t\t\t\t\tMM_MemoryPoolBumpPointer *memoryPool = (MM_MemoryPoolBumpPointer *)region->getMemoryPool();\n \t\t\t\t\tAssert_MM_true(NULL != memoryPool);\n-\t\t\t\t\t/* for Eden region containing objects Allocation Age must be smaller then amount allocated since last PGC */\n-\t\t\t\t\tif (region->getAllocationAge() <= _allocatedSinceLastPGC) {\n-\t\t\t\t\t\tstats->_edenHeapSize += regionSize;\n+\t\t\t\t\t/* Eden region containing objects, Allocation Age must be smaller then amount allocated since last PGC,\n+\t\t\t\t\t * more accurately, its logical age must be equal to zero */\n+\t\t\t\t\tif (0 == region->getLogicalAge()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b161545c3904d2df6018a9546b5e01b19d858880"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "609eae05b343d5f8b57e235e2c1ae1f670dd0efd", "author": {"user": {"login": "bragaigor", "name": "Igor Braga"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/609eae05b343d5f8b57e235e2c1ae1f670dd0efd", "committedDate": "2020-12-11T15:02:54Z", "message": "Fix _allocatedSinceLastPGC usage\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>"}, "afterCommit": {"oid": "1d19a16284c9b7b666c3730d223b1cdbabb6ecba", "author": {"user": {"login": "bragaigor", "name": "Igor Braga"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1d19a16284c9b7b666c3730d223b1cdbabb6ecba", "committedDate": "2020-12-11T15:06:02Z", "message": "Reorder how/when taxation threshold and regions' age are updated\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "906af6d45fb292007c3eaa1a30e73dc2d50ecaec", "author": {"user": {"login": "bragaigor", "name": "Igor Braga"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/906af6d45fb292007c3eaa1a30e73dc2d50ecaec", "committedDate": "2020-12-11T15:22:39Z", "message": "Update how Eden size is reported at gc-start and gc-end\n\nFix how Eden size is reported at gc-start and gc-end\nin balanced GC policy. Make it consistent with reporting\nMM_HeapRegionManagerVLHGC::getHeapMemorySnapshot().\n\nReorder how/when taxation threshold and regions' age are updated.\nInstead of updating region's age at the very end of a GC increment\nwe now update it at the end of GC increment but before we report\ngc-end. With the update of exportStats on how Eden is reported,\nwe now have total Eden size as being reported as\ngetCurrentEdenSizeInBytes() always while free eden size in bytes\ncontain the correct value, where at gc-start _edenFreeHeapSize is\nclose to zero and at gc-end it's equal to Eden heap size.\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1d19a16284c9b7b666c3730d223b1cdbabb6ecba", "author": {"user": {"login": "bragaigor", "name": "Igor Braga"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1d19a16284c9b7b666c3730d223b1cdbabb6ecba", "committedDate": "2020-12-11T15:06:02Z", "message": "Reorder how/when taxation threshold and regions' age are updated\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>"}, "afterCommit": {"oid": "906af6d45fb292007c3eaa1a30e73dc2d50ecaec", "author": {"user": {"login": "bragaigor", "name": "Igor Braga"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/906af6d45fb292007c3eaa1a30e73dc2d50ecaec", "committedDate": "2020-12-11T15:22:39Z", "message": "Update how Eden size is reported at gc-start and gc-end\n\nFix how Eden size is reported at gc-start and gc-end\nin balanced GC policy. Make it consistent with reporting\nMM_HeapRegionManagerVLHGC::getHeapMemorySnapshot().\n\nReorder how/when taxation threshold and regions' age are updated.\nInstead of updating region's age at the very end of a GC increment\nwe now update it at the end of GC increment but before we report\ngc-end. With the update of exportStats on how Eden is reported,\nwe now have total Eden size as being reported as\ngetCurrentEdenSizeInBytes() always while free eden size in bytes\ncontain the correct value, where at gc-start _edenFreeHeapSize is\nclose to zero and at gc-end it's equal to Eden heap size.\n\nSigned-off-by: Igor Braga <higorb1@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMjAwNDcx", "url": "https://github.com/eclipse-openj9/openj9/pull/11317#pullrequestreview-550200471", "createdAt": "2020-12-11T15:30:41Z", "commit": {"oid": "906af6d45fb292007c3eaa1a30e73dc2d50ecaec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1679, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}