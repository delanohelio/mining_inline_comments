{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3ODI4MDkw", "number": 9101, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjowODo0NlrODwD_3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjoxMjo0M1rODwEGUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzIzNzQzOnYy", "diffSide": "LEFT", "path": "runtime/vm/BytecodeInterpreter.hpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjowODo0NlrOGC2Y7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjoxMToxMVrOGC2fag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY0MTQ1NA==", "bodyText": "Might be better to assign acmpResult to (lhs == rhs) initially, then test and modify it inside the ifdef so there's only a single return.", "url": "https://github.com/eclipse-openj9/openj9/pull/9101#discussion_r405641454", "createdAt": "2020-04-08T16:08:46Z", "author": {"login": "gacholio"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -7323,56 +7324,6 @@ class INTERPRETER_CLASS\n \t\treturn rc;\n \t}\n \n-\t/*\n-\t * Determine if the two objects are substitutable\n-\t *\n-\t * @param[in] lhs the lhs object of acmp bytecodes\n-\t * @param[in] rhs the rhs object of acmp bytecodes\n-\t * return true if they are substitutable and false otherwise\n-\t */\n-\tVMINLINE bool\n-\tacmp(j9object_t lhs, j9object_t rhs)\n-\t{\n-#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f90134a6d9bc6f7ae3cc9150d3cd4e84a176d1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY0MzExNA==", "bodyText": "Once again, I can't tell deletion from addition...", "url": "https://github.com/eclipse-openj9/openj9/pull/9101#discussion_r405643114", "createdAt": "2020-04-08T16:11:11Z", "author": {"login": "gacholio"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -7323,56 +7324,6 @@ class INTERPRETER_CLASS\n \t\treturn rc;\n \t}\n \n-\t/*\n-\t * Determine if the two objects are substitutable\n-\t *\n-\t * @param[in] lhs the lhs object of acmp bytecodes\n-\t * @param[in] rhs the rhs object of acmp bytecodes\n-\t * return true if they are substitutable and false otherwise\n-\t */\n-\tVMINLINE bool\n-\tacmp(j9object_t lhs, j9object_t rhs)\n-\t{\n-#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY0MTQ1NA=="}, "originalCommit": {"oid": "f5f90134a6d9bc6f7ae3cc9150d3cd4e84a176d1"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzIzOTI0OnYy", "diffSide": "RIGHT", "path": "runtime/vm/BytecodeInterpreter.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjowOTowNlrOGC2Z6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjowOTowNlrOGC2Z6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY0MTcwNw==", "bodyText": "Is there a reason not to captialize here?", "url": "https://github.com/eclipse-openj9/openj9/pull/9101#discussion_r405641707", "createdAt": "2020-04-08T16:09:06Z", "author": {"login": "gacholio"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -48,6 +48,7 @@\n #include \"MHInterpreter.hpp\"\n #include \"ObjectAccessBarrierAPI.hpp\"\n #include \"ObjectHash.hpp\"\n+#include \"valueTypeHelpers.hpp\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f90134a6d9bc6f7ae3cc9150d3cd4e84a176d1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzI1MTEwOnYy", "diffSide": "RIGHT", "path": "runtime/vm/valueTypeHelpers.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjoxMjowMVrOGC2hlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjoxMjowMVrOGC2hlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY0MzY2OQ==", "bodyText": "Assign inital value to (rhs == lhs) and test inside the ifdef, resulting in a single return at the end.", "url": "https://github.com/eclipse-openj9/openj9/pull/9101#discussion_r405643669", "createdAt": "2020-04-08T16:12:01Z", "author": {"login": "gacholio"}, "path": "runtime/vm/valueTypeHelpers.hpp", "diffHunk": "@@ -37,14 +43,59 @@ class ValueTypeHelpers {\n \t * Function members\n \t */\n private:\n+\tstatic bool\n+\tisSubstitutable(J9VMThread *currentThread, MM_ObjectAccessBarrierAPI objectAccessBarrier, j9object_t lhs, j9object_t rhs, UDATA startOffset, J9Class *clazz);\n \n+\tstatic VMINLINE bool\n+\tcheckDoubleEquality(U_64 a, U_64 b)\n+\t{\n+\t\tbool result = false;\n+\n+\t\tif (a == b) {\n+\t\t\tresult = true;\n+\t\t} else if (IS_NAN_DBL(*(jdouble*)&a) && IS_NAN_DBL(*(jdouble*)&b)) {\n+\t\t\tresult = true;\n+\t\t}\n+\t\treturn result;\n+\t}\n+\n+\tstatic VMINLINE bool\n+\tcheckFloatEquality(U_32 a, U_32 b)\n+\t{\n+\t\tbool result = false;\n+\n+\t\tif (a == b) {\n+\t\t\tresult = true;\n+\t\t} else if (IS_NAN_SNGL(*(jfloat*)&a) && IS_NAN_SNGL(*(jfloat*)&b)) {\n+\t\t\tresult = true;\n+\t\t}\n+\t\treturn result;\n+\t}\n protected:\n \n public:\n-\tstatic bool\n-\tisSubstitutable(J9VMThread *currentThread, j9object_t lhs, j9object_t rhs, UDATA startOffset, J9Class *clazz)\n+\tstatic VMINLINE bool\n+\tacmp(J9VMThread *currentThread, MM_ObjectAccessBarrierAPI objectAccessBarrier, j9object_t lhs, j9object_t rhs)\n \t{\n-\t\treturn false;\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t\tbool acmpResult = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f90134a6d9bc6f7ae3cc9150d3cd4e84a176d1"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzI1MzkyOnYy", "diffSide": "RIGHT", "path": "runtime/vm/valueTypeHelpers.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjoxMjo0M1rOGC2jeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjoxMjo0M1rOGC2jeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY0NDE1NA==", "bodyText": "To be consistent, this should be VM_ValueTypeHelpers.", "url": "https://github.com/eclipse-openj9/openj9/pull/9101#discussion_r405644154", "createdAt": "2020-04-08T16:12:43Z", "author": {"login": "gacholio"}, "path": "runtime/vm/valueTypeHelpers.hpp", "diffHunk": "@@ -23,6 +23,12 @@\n #if !defined(VALUETYPEHELPERS_HPP_)\n #define VALUETYPEHELPERS_HPP_\n \n+#include \"j9.h\"\n+#include \"fltconst.h\"\n+\n+#include \"ObjectAccessBarrierAPI.hpp\"\n+#include \"VMHelpers.hpp\"\n+\n class ValueTypeHelpers {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f90134a6d9bc6f7ae3cc9150d3cd4e84a176d1"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 325, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}