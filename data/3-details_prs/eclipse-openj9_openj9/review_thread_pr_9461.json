{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNzI1ODM3", "number": 9461, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowMTozN1rOD7zhVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoxOTo0NFrOD7z5xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDM2NjkzOnYy", "diffSide": "RIGHT", "path": "doc/compiler/jitserver/Build.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowMTozN1rOGUW1aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowMTozN1rOGUW1aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk5ODgyNA==", "bodyText": "Let's remove \"The only difference is you need to check out the JITServer code instead of upstream OpenJ9.\"\nThis probably is a leftover since we had a different branch.", "url": "https://github.com/eclipse-openj9/openj9/pull/9461#discussion_r423998824", "createdAt": "2020-05-12T20:01:37Z", "author": {"login": "mpirvu"}, "path": "doc/compiler/jitserver/Build.md", "diffHunk": "@@ -128,6 +118,26 @@ bash get_source.sh -openj9-repo=https://github.com/<Your GitHub UserID>/openj9.g\n ```\n See https://www.eclipse.org/openj9/oj9_build.html for more detail. The only difference is you need to check out the JITServer code instead of upstream OpenJ9.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c5b0bc35f34fa488a58299269858f03b99928ff"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDM3NTQ4OnYy", "diffSide": "RIGHT", "path": "doc/compiler/jitserver/Build.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowNDoxOVrOGUW7BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowNDoxOVrOGUW7BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMDI2MA==", "bodyText": "This is a bit confusing because above you are building a Java8 SDK (git clone https://github.com/ibmruntimes/openj9-openjdk-jdk8.git) but the version in here shows a Java11 build", "url": "https://github.com/eclipse-openj9/openj9/pull/9461#discussion_r424000260", "createdAt": "2020-05-12T20:04:19Z", "author": {"login": "mpirvu"}, "path": "doc/compiler/jitserver/Build.md", "diffHunk": "@@ -128,6 +118,26 @@ bash get_source.sh -openj9-repo=https://github.com/<Your GitHub UserID>/openj9.g\n ```\n See https://www.eclipse.org/openj9/oj9_build.html for more detail. The only difference is you need to check out the JITServer code instead of upstream OpenJ9.\n \n+You can test it by running the `java -version` command.\n+\n+```\n+cd build/linux-x86_64-normal-server-release/images/jdk\n+```\n+Run:\n+\n+```\n+./bin/java -version\n+```\n+Here is some sample output:\n+\n+```\n+openjdk version \"11.0.8-internal\" 2020-07-14", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c5b0bc35f34fa488a58299269858f03b99928ff"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDM4MzM2OnYy", "diffSide": "RIGHT", "path": "doc/compiler/jitserver/Build.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowNjo0OFrOGUXATw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDowODo0MlrOGUXEOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMTYxNQ==", "bodyText": "Let's change the phrasing slightly so that we don't give the impression that the entire testing is done with java -version. Maybe say\nYou can test the success of the build process with \"java -version\" command like so:...", "url": "https://github.com/eclipse-openj9/openj9/pull/9461#discussion_r424001615", "createdAt": "2020-05-12T20:06:48Z", "author": {"login": "mpirvu"}, "path": "doc/compiler/jitserver/Build.md", "diffHunk": "@@ -128,6 +118,26 @@ bash get_source.sh -openj9-repo=https://github.com/<Your GitHub UserID>/openj9.g\n ```\n See https://www.eclipse.org/openj9/oj9_build.html for more detail. The only difference is you need to check out the JITServer code instead of upstream OpenJ9.\n \n+You can test it by running the `java -version` command.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c5b0bc35f34fa488a58299269858f03b99928ff"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMjYxNw==", "bodyText": "Actually since this is about JITServer I would use \"./bin/jitserver\" and \"./bin/java -XX:+UseJITServer -version\"", "url": "https://github.com/eclipse-openj9/openj9/pull/9461#discussion_r424002617", "createdAt": "2020-05-12T20:08:42Z", "author": {"login": "mpirvu"}, "path": "doc/compiler/jitserver/Build.md", "diffHunk": "@@ -128,6 +118,26 @@ bash get_source.sh -openj9-repo=https://github.com/<Your GitHub UserID>/openj9.g\n ```\n See https://www.eclipse.org/openj9/oj9_build.html for more detail. The only difference is you need to check out the JITServer code instead of upstream OpenJ9.\n \n+You can test it by running the `java -version` command.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMTYxNQ=="}, "originalCommit": {"oid": "5c5b0bc35f34fa488a58299269858f03b99928ff"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDM5ODE2OnYy", "diffSide": "RIGHT", "path": "doc/compiler/jitserver/Testing.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoxMDozOFrOGUXJJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoxMDozOFrOGUXJJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMzg3OA==", "bodyText": "Rephrase: \"An example of how to install the prerequisites can be found ....\"", "url": "https://github.com/eclipse-openj9/openj9/pull/9461#discussion_r424003878", "createdAt": "2020-05-12T20:10:38Z", "author": {"login": "mpirvu"}, "path": "doc/compiler/jitserver/Testing.md", "diffHunk": "@@ -33,12 +33,13 @@ These are the steps to run the tests on your machine.\n \n 2. Install [prerequisites](https://github.com/eclipse/openj9/blob/master/test/docs/Prerequisites.md)\n \n-   Example installation can be found [here](https://github.com/eclipse/openj9/blob/master/buildenv/docker/test/Dockerfile#L57-L68).\n+   Example installation can be found [here](https://github.com/eclipse/openj9/blob/master/buildenv/docker/test/Dockerfile#L57-L68). Make sure that JAVA_HOME and JAVA_BIN are set(EX. `export JAVA_HOME=/root/openj9-openjdk-jdk11/build/linux-x86_64-normal-server-release/images/jdk` and `export JAVA_BIN=/root/openj9-openjdk-jdk11/build/linux-x86_64-normal-server-release/images/jdk/bin`). Basically you want to test on the jdk you build, so point the environment variable to your personal build of jdk.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c5b0bc35f34fa488a58299269858f03b99928ff"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDQwNTM0OnYy", "diffSide": "RIGHT", "path": "doc/compiler/jitserver/Testing.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoxMzowMlrOGUXN0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoxMzowMlrOGUXN0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwNTA3NA==", "bodyText": "I believe that JAVA_VERSION is inferred and therefore does not need to be specified.\nOtherwise, you may want to change this to Java11 because your example above shows a Java11 path.", "url": "https://github.com/eclipse-openj9/openj9/pull/9461#discussion_r424005074", "createdAt": "2020-05-12T20:13:02Z", "author": {"login": "mpirvu"}, "path": "doc/compiler/jitserver/Testing.md", "diffHunk": "@@ -33,12 +33,13 @@ These are the steps to run the tests on your machine.\n \n 2. Install [prerequisites](https://github.com/eclipse/openj9/blob/master/test/docs/Prerequisites.md)\n \n-   Example installation can be found [here](https://github.com/eclipse/openj9/blob/master/buildenv/docker/test/Dockerfile#L57-L68).\n+   Example installation can be found [here](https://github.com/eclipse/openj9/blob/master/buildenv/docker/test/Dockerfile#L57-L68). Make sure that JAVA_HOME and JAVA_BIN are set(EX. `export JAVA_HOME=/root/openj9-openjdk-jdk11/build/linux-x86_64-normal-server-release/images/jdk` and `export JAVA_BIN=/root/openj9-openjdk-jdk11/build/linux-x86_64-normal-server-release/images/jdk/bin`). Basically you want to test on the jdk you build, so point the environment variable to your personal build of jdk.\n 3. Compile  the tests (only need to compile once):\n    ```\n    cd $OPENJ9_DIR/openj9/test\n    git clone https://github.com/AdoptOpenJDK/TKG.git\n    cd TKG\n+   export TEST_JDK_HOME=<path to JDK directory that you wish to test, it's the same as $JAVA_HOME>\n    export JAVA_VERSION=SE80", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c5b0bc35f34fa488a58299269858f03b99928ff"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDQxNTg3OnYy", "diffSide": "RIGHT", "path": "doc/compiler/jitserver/Testing.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoxNjowMFrOGUXUNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo1Mzo1M1rOGU_OYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwNjcwOQ==", "bodyText": "Are these instructions still current? I am using a slightly different approach.", "url": "https://github.com/eclipse-openj9/openj9/pull/9461#discussion_r424006709", "createdAt": "2020-05-12T20:16:00Z", "author": {"login": "mpirvu"}, "path": "doc/compiler/jitserver/Testing.md", "diffHunk": "@@ -33,12 +33,13 @@ These are the steps to run the tests on your machine.\n \n 2. Install [prerequisites](https://github.com/eclipse/openj9/blob/master/test/docs/Prerequisites.md)\n \n-   Example installation can be found [here](https://github.com/eclipse/openj9/blob/master/buildenv/docker/test/Dockerfile#L57-L68).\n+   Example installation can be found [here](https://github.com/eclipse/openj9/blob/master/buildenv/docker/test/Dockerfile#L57-L68). Make sure that JAVA_HOME and JAVA_BIN are set(EX. `export JAVA_HOME=/root/openj9-openjdk-jdk11/build/linux-x86_64-normal-server-release/images/jdk` and `export JAVA_BIN=/root/openj9-openjdk-jdk11/build/linux-x86_64-normal-server-release/images/jdk/bin`). Basically you want to test on the jdk you build, so point the environment variable to your personal build of jdk.\n 3. Compile  the tests (only need to compile once):\n    ```\n    cd $OPENJ9_DIR/openj9/test\n    git clone https://github.com/AdoptOpenJDK/TKG.git", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c5b0bc35f34fa488a58299269858f03b99928ff"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY2MDU3OA==", "bodyText": "Yes, I followed these instructions for testing", "url": "https://github.com/eclipse-openj9/openj9/pull/9461#discussion_r424660578", "createdAt": "2020-05-13T18:53:53Z", "author": {"login": "EmanElsaban"}, "path": "doc/compiler/jitserver/Testing.md", "diffHunk": "@@ -33,12 +33,13 @@ These are the steps to run the tests on your machine.\n \n 2. Install [prerequisites](https://github.com/eclipse/openj9/blob/master/test/docs/Prerequisites.md)\n \n-   Example installation can be found [here](https://github.com/eclipse/openj9/blob/master/buildenv/docker/test/Dockerfile#L57-L68).\n+   Example installation can be found [here](https://github.com/eclipse/openj9/blob/master/buildenv/docker/test/Dockerfile#L57-L68). Make sure that JAVA_HOME and JAVA_BIN are set(EX. `export JAVA_HOME=/root/openj9-openjdk-jdk11/build/linux-x86_64-normal-server-release/images/jdk` and `export JAVA_BIN=/root/openj9-openjdk-jdk11/build/linux-x86_64-normal-server-release/images/jdk/bin`). Basically you want to test on the jdk you build, so point the environment variable to your personal build of jdk.\n 3. Compile  the tests (only need to compile once):\n    ```\n    cd $OPENJ9_DIR/openj9/test\n    git clone https://github.com/AdoptOpenJDK/TKG.git", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwNjcwOQ=="}, "originalCommit": {"oid": "5c5b0bc35f34fa488a58299269858f03b99928ff"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MDQyOTQ4OnYy", "diffSide": "RIGHT", "path": "doc/compiler/jitserver/Usage.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoxOTo0NFrOGUXcWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoxOTo0NFrOGUXcWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwODc5NA==", "bodyText": "I would prefer to eliminate: (The bindirectory exists inbuild/linux-x86_64-normal-server-release/images/jdk/binrun./jitserverthere to launch the JVM).\nbecause it refers to a directory structure created for build. We should be more generic on how to launch the jitserver", "url": "https://github.com/eclipse-openj9/openj9/pull/9461#discussion_r424008794", "createdAt": "2020-05-12T20:19:44Z", "author": {"login": "mpirvu"}, "path": "doc/compiler/jitserver/Usage.md", "diffHunk": "@@ -20,7 +20,7 @@ OpenJDK Assembly Exception [2].\n SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-exception-2.0 OR LicenseRef-GPL-2.0 WITH Assembly-exception\n -->\n \n-JITServer adds two additional *personas* to the JVM: client mode and server mode. To start the JVM in server mode, run the `jitserver` launcher present under `bin` directory (along side `java` launcher). To start the JVM in client mode, there is a new command line option: `-XX:+UseJITServer`\n+JITServer adds two additional *personas* to the JVM: client mode and server mode. To start the JVM in server mode, run the `jitserver` launcher present under `bin` directory (along side `java` launcher)(The `bin` directory exists in `build/linux-x86_64-normal-server-release/images/jdk/bin` run `./jitserver` there to launch the JVM). To start the JVM in client mode, there is a new command line option: `-XX:+UseJITServer` (under bin run `./java -XX:+UseJITServer <application name>`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c5b0bc35f34fa488a58299269858f03b99928ff"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 317, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}