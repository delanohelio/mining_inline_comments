{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyODI2NzE5", "number": 9671, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNzo0OTowMVrOD_cXuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMjo1NDozNVrOD_6xiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODUxNzA0OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/CompilationRuntime.hpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNzo0OTowMVrOGaHEsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjoxODoxOVrOGamCjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMjA1MQ==", "bodyText": "Since this code is only used for JITServer we need to protect it with\n#if defined(J9VM_OPT_JITSERVER)\nSee other parts of the code for an example", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430032051", "createdAt": "2020-05-25T17:49:01Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationRuntime.hpp", "diffHunk": "@@ -1142,6 +1142,7 @@ class CompilationInfo\n    uint64_t               _lastCompilationsShouldBeInterruptedTime; // RAS\n // statistics\n    int32_t                _statsOptLevels[numHotnessLevels]; // will be zeroed with memset\n+   int32_t                _statsRemoteOptLevels[numHotnessLevels];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "451c367ff041cf86b5d7b730206534fb1f9ce211"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzOTQwNg==", "bodyText": "Fields should start with underscores.\nHowever, in this case I don't think we need totalNumRemoteCompilations or totalMsgCount. They can be computed on demand", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430539406", "createdAt": "2020-05-26T16:18:19Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationRuntime.hpp", "diffHunk": "@@ -1142,6 +1142,7 @@ class CompilationInfo\n    uint64_t               _lastCompilationsShouldBeInterruptedTime; // RAS\n // statistics\n    int32_t                _statsOptLevels[numHotnessLevels]; // will be zeroed with memset\n+   int32_t                _statsRemoteOptLevels[numHotnessLevels];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMjA1MQ=="}, "originalCommit": {"oid": "451c367ff041cf86b5d7b730206534fb1f9ce211"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODUyMTczOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/CompilationThread.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNzo1MjowMFrOGaHHiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNzo1NDo0OVrOGaHKRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMjc3Ng==", "bodyText": "This code prints the same message stats a few times (for each opt level). Here we want stats about the remote compilations, not about messages.", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430032776", "createdAt": "2020-05-25T17:52:00Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -3116,8 +3116,13 @@ void TR::CompilationInfo::stopCompilationThreads()\n \n       fprintf(stderr, \"Number of compilations per level:\\n\");\n       for (int i = 0; i < (int)numHotnessLevels; i++)\n+         {\t      \n          if (_statsOptLevels[i] > 0)\n-            fprintf(stderr, \"Level=%d\\tnumComp=%d\\n\", i, _statsOptLevels[i]);\n+            {\t\t \n+            fprintf(stderr, \"Level=%d\\tnumComp=%d\\tnumRemoteComp=%d\\n\", i, _statsOptLevels[i], _statsRemoteOptLevels[i]);\n+            JITServerHelpers::printJITServerMsgStats(jitConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "451c367ff041cf86b5d7b730206534fb1f9ce211"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMzQ3OQ==", "bodyText": "Also, please change JITServerHelpers::printJITServerMsgStats(); to display total number of messages and average number of messages per compilation.", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430033479", "createdAt": "2020-05-25T17:54:49Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -3116,8 +3116,13 @@ void TR::CompilationInfo::stopCompilationThreads()\n \n       fprintf(stderr, \"Number of compilations per level:\\n\");\n       for (int i = 0; i < (int)numHotnessLevels; i++)\n+         {\t      \n          if (_statsOptLevels[i] > 0)\n-            fprintf(stderr, \"Level=%d\\tnumComp=%d\\n\", i, _statsOptLevels[i]);\n+            {\t\t \n+            fprintf(stderr, \"Level=%d\\tnumComp=%d\\tnumRemoteComp=%d\\n\", i, _statsOptLevels[i], _statsRemoteOptLevels[i]);\n+            JITServerHelpers::printJITServerMsgStats(jitConfig);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMjc3Ng=="}, "originalCommit": {"oid": "451c367ff041cf86b5d7b730206534fb1f9ce211"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3ODUyNDYxOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/CompilationThread.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNzo1Mzo0MVrOGaHJUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNzo1Mzo0MVrOGaHJUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDAzMzIzMg==", "bodyText": "JITServer specific code needs to be protected by #ifdef J9VM_OPT_JITSERVER", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430033232", "createdAt": "2020-05-25T17:53:41Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -10664,7 +10669,11 @@ void TR::CompilationInfoPerThreadBase::logCompilationSuccess(\n \n          TR_Hotness h = compiler->getMethodHotness();\n          if (h < numHotnessLevels)\n+            {\n             _compInfo._statsOptLevels[(int32_t)h]++;\n+            if(_methodBeingCompiled->isRemoteCompReq())\n+               _compInfo._statsRemoteOptLevels[(int32_t)h]++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "451c367ff041cf86b5d7b730206534fb1f9ce211"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTc0NDMzOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/CompilationThread.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjoyMzozMFrOGamQkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjoyMzozMFrOGamQkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU0Mjk5Mg==", "bodyText": "This piece of functionality is already done in HookedByTheJIT.cpp JitShutdown():\n#if defined(J9VM_OPT_JITSERVER)\n   static char * isPrintJITServerMsgStats = feGetEnv(\"TR_PrintJITServerMsgStats\");\n   if (isPrintJITServerMsgStats && compInfo->getPersistentInfo()->getRemoteCompilationMode() == JITServer::CLIENT)\n      JITServerHelpers::printJITServerMsgStats(jitConfig);\n   static char * isPrintJITServerCHTableStats = feGetEnv(\"TR_PrintJITServerCHTableStats\");\n   if (isPrintJITServerCHTableStats)\n      JITServerHelpers::printJITServerCHTableStats(jitConfig, compInfo);\n#endif\n\nAll you need to do is modify JITServerHelpers::printJITServerMsgStats so that it prints the number of total and average messages. The average can be computed by dividing the number of total messages to the number of messages of type compilationCode (every time a remote compilation occurs, the server will send a compilationCode message back at the end of the compilation.", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430542992", "createdAt": "2020-05-26T16:23:30Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -3116,8 +3116,23 @@ void TR::CompilationInfo::stopCompilationThreads()\n \n       fprintf(stderr, \"Number of compilations per level:\\n\");\n       for (int i = 0; i < (int)numHotnessLevels; i++)\n+         {\t      \n          if (_statsOptLevels[i] > 0)\n-            fprintf(stderr, \"Level=%d\\tnumComp=%d\\n\", i, _statsOptLevels[i]);\n+            {\t\t \n+            fprintf(stderr, \"Level=%d\\tnumComp=%d\\tnumRemoteComp=%d\\n\", i, _statsOptLevels[i], _statsRemoteOptLevels[i]);\n+            totalNumRemoteCompilations += _statsRemoteOptLevels[i];\n+            }\n+         }\n+#if defined(J9VM_OPT_JITSERVER)\n+      for (int i = 0; i < JITServer::MessageType_ARRAYSIZE; ++i)\n+         {\n+         if (JITServerHelpers::serverMsgTypeCount[i] > 0)\n+            {\n+            totalMsgCount += JITServerHelpers::serverMsgTypeCount[i];\n+            }\n+         }\n+#endif /* defined(J9VM_OPT_JITSERVER) */\n+      fprintf(stderr, \"Total Number of messages:%d\\tAverage number of messages per compilation: %f  \\n\", totalMsgCount, totalMsgCount/float(totalNumRemoteCompilations));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a658c855836da694dff4f7c570cc6f325627c53"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjgwMzY1OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/JITServerHelpers.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToyMzoyOFrOGaw0Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToyMzoyOFrOGaw0Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNTkzOA==", "bodyText": "We need a check that JITServerHelpers::serverMsgTypeCount[0] is not 0. Otherwise the JVM will crash when doing division by 0", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430715938", "createdAt": "2020-05-26T21:23:28Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/JITServerHelpers.cpp", "diffHunk": "@@ -120,14 +120,20 @@ JITServerHelpers::insertIntoOOSequenceEntryList(ClientSessionData *clientData, T\n void\n JITServerHelpers::printJITServerMsgStats(J9JITConfig *jitConfig)\n    {\n+   int totalMsgCount = 0;\t   \n    PORT_ACCESS_FROM_JITCONFIG(jitConfig);\n    j9tty_printf(PORTLIB, \"JITServer Message Type Statistics:\\n\");\n    j9tty_printf(PORTLIB, \"Type# #called TypeName\\n\");\n    for (int i = 0; i < JITServer::MessageType_ARRAYSIZE; ++i)\n       {\n       if (JITServerHelpers::serverMsgTypeCount[i] > 0)\n+         {\n          j9tty_printf(PORTLIB, \"#%04d %7u %s\\n\", i, JITServerHelpers::serverMsgTypeCount[i], JITServer::messageNames[i]);\n+         totalMsgCount += JITServerHelpers::serverMsgTypeCount[i];\n+         }\n       }\n+   j9tty_printf(PORTLIB, \"Total number of messages:%d\\tAverage number of messages per compilation:%f\\n\", totalMsgCount, totalMsgCount/float(JITServerHelpers::serverMsgTypeCount[0]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a52d962a84af3397b3124f775217c9d2e41e3"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjgxMTQ3OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/CompilationThread.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToyNjoxMFrOGaw4-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToyNjoxMFrOGaw4-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNzE3OA==", "bodyText": "This will not work on a build that does not have J9VM_OPT_JITSERVER defined because _statsRemoteOptLevels is going to be undefined.", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430717178", "createdAt": "2020-05-26T21:26:10Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -3116,8 +3116,13 @@ void TR::CompilationInfo::stopCompilationThreads()\n \n       fprintf(stderr, \"Number of compilations per level:\\n\");\n       for (int i = 0; i < (int)numHotnessLevels; i++)\n+         {\t      \n          if (_statsOptLevels[i] > 0)\n-            fprintf(stderr, \"Level=%d\\tnumComp=%d\\n\", i, _statsOptLevels[i]);\n+            fprintf(stderr, \"Level=%d\\tnumComp=%d\\tnumRemoteComp=%d\\n\", i, _statsOptLevels[i], _statsRemoteOptLevels[i]);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a52d962a84af3397b3124f775217c9d2e41e3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MjgxNDExOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/CompilationThread.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToyNzowOVrOGaw6mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMToyNzowOVrOGaw6mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcxNzU5NQ==", "bodyText": "You don't have to call JITServerHelpers::printJITServerMsgStats(jitConfig); because it's already called in jitShutdown where it prints stats about messages", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430717595", "createdAt": "2020-05-26T21:27:09Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -3116,8 +3116,13 @@ void TR::CompilationInfo::stopCompilationThreads()\n \n       fprintf(stderr, \"Number of compilations per level:\\n\");\n       for (int i = 0; i < (int)numHotnessLevels; i++)\n+         {\t      \n          if (_statsOptLevels[i] > 0)\n-            fprintf(stderr, \"Level=%d\\tnumComp=%d\\n\", i, _statsOptLevels[i]);\n+            fprintf(stderr, \"Level=%d\\tnumComp=%d\\tnumRemoteComp=%d\\n\", i, _statsOptLevels[i], _statsRemoteOptLevels[i]);\n+         }\n+#if defined(J9VM_OPT_JITSERVER)\n+      JITServerHelpers::printJITServerMsgStats(jitConfig);\n+#endif /* defined(J9VM_OPT_JITSERVER) */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d0a52d962a84af3397b3124f775217c9d2e41e3"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MzQ5ODMzOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/CompilationThread.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMjo1NDozNVrOGa3vUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMjo1NDozNVrOGa3vUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgyOTM5Mw==", "bodyText": "Somehow I think it looks nicer if the remote value appears on the same line, so maybe:\n      for (int i = 0; i < (int)numHotnessLevels; i++)\n         {\n         if (_statsOptLevels[i] > 0)\n            {\n            fprintf(stderr, \"Level=%d\\tnumComp=%d\", i, _statsOptLevels[i]);\n#if defined(J9VM_OPT_JITSERVER)\n            if (_statsRemoteOptLevels[i] > 0)\n               fprintf(stderr, \"\\tnumRemoteComp=%d\", _statsRemoteOptLevels[i]);\n#endif /* defined(J9VM_OPT_JITSERVER) */\n            fprintf(stderr, \"\\n\");\n            }\n         }", "url": "https://github.com/eclipse-openj9/openj9/pull/9671#discussion_r430829393", "createdAt": "2020-05-27T02:54:35Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -3116,8 +3116,15 @@ void TR::CompilationInfo::stopCompilationThreads()\n \n       fprintf(stderr, \"Number of compilations per level:\\n\");\n       for (int i = 0; i < (int)numHotnessLevels; i++)\n+         {\t      \n          if (_statsOptLevels[i] > 0)\n             fprintf(stderr, \"Level=%d\\tnumComp=%d\\n\", i, _statsOptLevels[i]);\n+#if defined(J9VM_OPT_JITSERVER)\n+         if (_statsRemoteOptLevels[i] > 0)\n+            fprintf(stderr, \"numRemoteComp=%d\\n\", _statsRemoteOptLevels[i]);\n+#endif /* defined(J9VM_OPT_JITSERVER) */\n+\n+         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6553bcef3f1fc4394773ce8e0a5e784e181ff94e"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 51, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}