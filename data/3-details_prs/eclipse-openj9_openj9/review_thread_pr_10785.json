{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MDM1NzQ2", "number": 10785, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODozMjowNlrOEqbzIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODo0MDo0OFrOEqb-DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTMxMTA2OnYy", "diffSide": "RIGHT", "path": "runtime/codert_vm/decomp.cpp", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODozMjowNlrOHco7NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMToxNTowNFrOHcuDCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MjY5Mg==", "bodyText": "Note, this method is called while holding exclusiveVMAccess so it shouldn't matter whether the extra field is reread or not.", "url": "https://github.com/eclipse-openj9/openj9/pull/10785#discussion_r499792692", "createdAt": "2020-10-05T18:32:06Z", "author": {"login": "DanHeidinga"}, "path": "runtime/codert_vm/decomp.cpp", "diffHunk": "@@ -259,10 +259,11 @@ jitResetAllMethods(J9VMThread *currentThread)\n \t\tU_32 methodCount = clazz->romClass->romMethodCount;\n \n \t\twhile (methodCount != 0) {\n-\t\t\tif (0 == ((UDATA)method->extra & J9_STARTPC_NOT_TRANSLATED)) {\n+\t\t\tUDATA extra = (UDATA)method->extra;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19f1f6790fdffb45980e7c5c48532c7722260019"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgwOTk4MQ==", "bodyText": "I don't believe the comp thread holds exclusive vm access when it updates the start PC, so even if this thread holds exclusive VM Access, the compilation thread could still update the start PC when it calls jitMethodTranslated.", "url": "https://github.com/eclipse-openj9/openj9/pull/10785#discussion_r499809981", "createdAt": "2020-10-05T19:04:25Z", "author": {"login": "dsouzai"}, "path": "runtime/codert_vm/decomp.cpp", "diffHunk": "@@ -259,10 +259,11 @@ jitResetAllMethods(J9VMThread *currentThread)\n \t\tU_32 methodCount = clazz->romClass->romMethodCount;\n \n \t\twhile (methodCount != 0) {\n-\t\t\tif (0 == ((UDATA)method->extra & J9_STARTPC_NOT_TRANSLATED)) {\n+\t\t\tUDATA extra = (UDATA)method->extra;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MjY5Mg=="}, "originalCommit": {"oid": "19f1f6790fdffb45980e7c5c48532c7722260019"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgyMDcwNQ==", "bodyText": "I've been looking through the JIT code and I don't see it acquire / release vm access which is surprising to me.  I wouldn't expect the JIT to get exclusive, but I would have expected \"regular\" shared vmaccess", "url": "https://github.com/eclipse-openj9/openj9/pull/10785#discussion_r499820705", "createdAt": "2020-10-05T19:25:17Z", "author": {"login": "DanHeidinga"}, "path": "runtime/codert_vm/decomp.cpp", "diffHunk": "@@ -259,10 +259,11 @@ jitResetAllMethods(J9VMThread *currentThread)\n \t\tU_32 methodCount = clazz->romClass->romMethodCount;\n \n \t\twhile (methodCount != 0) {\n-\t\t\tif (0 == ((UDATA)method->extra & J9_STARTPC_NOT_TRANSLATED)) {\n+\t\t\tUDATA extra = (UDATA)method->extra;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MjY5Mg=="}, "originalCommit": {"oid": "19f1f6790fdffb45980e7c5c48532c7722260019"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgyMjg0NA==", "bodyText": "@gacholio do you know what the contract for jitMethodTranslated is - whether it needs to hold vmaccess or not?", "url": "https://github.com/eclipse-openj9/openj9/pull/10785#discussion_r499822844", "createdAt": "2020-10-05T19:29:23Z", "author": {"login": "DanHeidinga"}, "path": "runtime/codert_vm/decomp.cpp", "diffHunk": "@@ -259,10 +259,11 @@ jitResetAllMethods(J9VMThread *currentThread)\n \t\tU_32 methodCount = clazz->romClass->romMethodCount;\n \n \t\twhile (methodCount != 0) {\n-\t\t\tif (0 == ((UDATA)method->extra & J9_STARTPC_NOT_TRANSLATED)) {\n+\t\t\tUDATA extra = (UDATA)method->extra;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MjY5Mg=="}, "originalCommit": {"oid": "19f1f6790fdffb45980e7c5c48532c7722260019"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgyNDQ5NQ==", "bodyText": "Found it:\nhttps://github.com/eclipse/openj9/blob/05119f696f85cc2137d451e4b6001b94c929b29a/runtime/compiler/control/CompilationThread.cpp#L10052-L10056\nI haven't dug back far enough to see the acquire vm access call but the comment indicates this should only occur under vmaccess", "url": "https://github.com/eclipse-openj9/openj9/pull/10785#discussion_r499824495", "createdAt": "2020-10-05T19:32:37Z", "author": {"login": "DanHeidinga"}, "path": "runtime/codert_vm/decomp.cpp", "diffHunk": "@@ -259,10 +259,11 @@ jitResetAllMethods(J9VMThread *currentThread)\n \t\tU_32 methodCount = clazz->romClass->romMethodCount;\n \n \t\twhile (methodCount != 0) {\n-\t\t\tif (0 == ((UDATA)method->extra & J9_STARTPC_NOT_TRANSLATED)) {\n+\t\t\tUDATA extra = (UDATA)method->extra;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MjY5Mg=="}, "originalCommit": {"oid": "19f1f6790fdffb45980e7c5c48532c7722260019"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTgyOTQ1Ng==", "bodyText": "Yes, that's right.", "url": "https://github.com/eclipse-openj9/openj9/pull/10785#discussion_r499829456", "createdAt": "2020-10-05T19:42:12Z", "author": {"login": "gacholio"}, "path": "runtime/codert_vm/decomp.cpp", "diffHunk": "@@ -259,10 +259,11 @@ jitResetAllMethods(J9VMThread *currentThread)\n \t\tU_32 methodCount = clazz->romClass->romMethodCount;\n \n \t\twhile (methodCount != 0) {\n-\t\t\tif (0 == ((UDATA)method->extra & J9_STARTPC_NOT_TRANSLATED)) {\n+\t\t\tUDATA extra = (UDATA)method->extra;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MjY5Mg=="}, "originalCommit": {"oid": "19f1f6790fdffb45980e7c5c48532c7722260019"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0MDkyMw==", "bodyText": "Looks like there's a comment at the top of compilationEnd that states that vmaccess must be acquired. It looks like this happens quite high up, so I guess at this point in the code, we must have vmaccess in hand.\nEDIT: Didn't see that Dan linked the code above.", "url": "https://github.com/eclipse-openj9/openj9/pull/10785#discussion_r499840923", "createdAt": "2020-10-05T20:04:37Z", "author": {"login": "dsouzai"}, "path": "runtime/codert_vm/decomp.cpp", "diffHunk": "@@ -259,10 +259,11 @@ jitResetAllMethods(J9VMThread *currentThread)\n \t\tU_32 methodCount = clazz->romClass->romMethodCount;\n \n \t\twhile (methodCount != 0) {\n-\t\t\tif (0 == ((UDATA)method->extra & J9_STARTPC_NOT_TRANSLATED)) {\n+\t\t\tUDATA extra = (UDATA)method->extra;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MjY5Mg=="}, "originalCommit": {"oid": "19f1f6790fdffb45980e7c5c48532c7722260019"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0ODAzOQ==", "bodyText": "Want to put these changes back in?  My comment at the top of the review was:\n\nNote, that most of these changes aren't required as the access occur under exclusive but they help set the principle in the code base that we privatize extra before using it.\n\nI like the principle being set that we always privatize use of extra so I'd prefer to keep these changes.", "url": "https://github.com/eclipse-openj9/openj9/pull/10785#discussion_r499848039", "createdAt": "2020-10-05T20:18:34Z", "author": {"login": "DanHeidinga"}, "path": "runtime/codert_vm/decomp.cpp", "diffHunk": "@@ -259,10 +259,11 @@ jitResetAllMethods(J9VMThread *currentThread)\n \t\tU_32 methodCount = clazz->romClass->romMethodCount;\n \n \t\twhile (methodCount != 0) {\n-\t\t\tif (0 == ((UDATA)method->extra & J9_STARTPC_NOT_TRANSLATED)) {\n+\t\t\tUDATA extra = (UDATA)method->extra;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MjY5Mg=="}, "originalCommit": {"oid": "19f1f6790fdffb45980e7c5c48532c7722260019"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg3NjYxNg==", "bodyText": "Ah I see; got confused because the fact about exclusive vmaccess was explicitly noted.", "url": "https://github.com/eclipse-openj9/openj9/pull/10785#discussion_r499876616", "createdAt": "2020-10-05T21:15:04Z", "author": {"login": "dsouzai"}, "path": "runtime/codert_vm/decomp.cpp", "diffHunk": "@@ -259,10 +259,11 @@ jitResetAllMethods(J9VMThread *currentThread)\n \t\tU_32 methodCount = clazz->romClass->romMethodCount;\n \n \t\twhile (methodCount != 0) {\n-\t\t\tif (0 == ((UDATA)method->extra & J9_STARTPC_NOT_TRANSLATED)) {\n+\t\t\tUDATA extra = (UDATA)method->extra;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5MjY5Mg=="}, "originalCommit": {"oid": "19f1f6790fdffb45980e7c5c48532c7722260019"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTMyMjY5OnYy", "diffSide": "RIGHT", "path": "runtime/codert_vm/decomp.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODozNTozOVrOHcpCbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODozNTozOVrOHcpCbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5NDU0MA==", "bodyText": "Similarly, this method is also called under exclusive", "url": "https://github.com/eclipse-openj9/openj9/pull/10785#discussion_r499794540", "createdAt": "2020-10-05T18:35:39Z", "author": {"login": "DanHeidinga"}, "path": "runtime/codert_vm/decomp.cpp", "diffHunk": "@@ -1575,11 +1576,12 @@ static void\n markMethodBreakpointed(J9VMThread * currentThread, J9JITBreakpointedMethod * breakpointedMethod)\n {\n \tJ9Method * method = breakpointedMethod->method;\n+\tvoid * extra = method->extra;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19f1f6790fdffb45980e7c5c48532c7722260019"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTMzOTAwOnYy", "diffSide": "RIGHT", "path": "runtime/vm/createramclass.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODo0MDo0OFrOHcpM2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODo0MDo0OFrOHcpM2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc5NzIxMQ==", "bodyText": "We don't need to introduce a new local for extra here.  Better to reuse frameBuilder:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tUDATA extra = (UDATA)currentMethod->extra;\n          \n          \n            \n            \tif ((extra & J9_STARTPC_NOT_TRANSLATED) != J9_STARTPC_NOT_TRANSLATED) {\n          \n          \n            \n            \t\tframeBuilder = extra;\n          \n          \n            \n            \tUDATA frameBuilder = (UDATA)currentMethod->extra;\n          \n          \n            \n            \tif ((frameBuilder & J9_STARTPC_NOT_TRANSLATED) != J9_STARTPC_NOT_TRANSLATED) {\n          \n      \n    \n    \n  \n\nNote also that this is during class creation so the ramClass hasn't \"escaped\" to anyone else who can modify it yet", "url": "https://github.com/eclipse-openj9/openj9/pull/10785#discussion_r499797211", "createdAt": "2020-10-05T18:40:48Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/createramclass.cpp", "diffHunk": "@@ -1127,8 +1127,9 @@ fillJITVTableSlot(J9VMThread *vmStruct, UDATA *currentSlot, J9Method *currentMet\n {\n \tJ9JITConfig *jitConfig = vmStruct->javaVM->jitConfig;\n \tUDATA frameBuilder;\n-\tif (((UDATA)currentMethod->extra & J9_STARTPC_NOT_TRANSLATED) != J9_STARTPC_NOT_TRANSLATED) {\n-\t\tframeBuilder = (UDATA)currentMethod->extra;\n+\tUDATA extra = (UDATA)currentMethod->extra;\n+\tif ((extra & J9_STARTPC_NOT_TRANSLATED) != J9_STARTPC_NOT_TRANSLATED) {\n+\t\tframeBuilder = extra;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19f1f6790fdffb45980e7c5c48532c7722260019"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1281, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}