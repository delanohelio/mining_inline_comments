{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MjU4ODgw", "number": 9763, "title": "Update numActiveThreads at the proper location at the server", "bodyText": "As described in #9762, _numActiveThreads is not incremented when the thread is unloading the class or doing CHTable update. It could cause a race condition when another thread is timed out\non waiting for the first thread to complete, the second thread that\u2019s timed out will clear the client session cache because _numActiveThreads is 0.\nFixes #9762, #9694\nSigned-off-by: Annabelle Huo Annabelle.Huo@ibm.com", "createdAt": "2020-06-01T23:05:17Z", "url": "https://github.com/eclipse-openj9/openj9/pull/9763", "merged": true, "mergeCommit": {"oid": "82223ec9af1986871a07c9fa1372ee314c279a98"}, "closed": true, "closedAt": "2020-06-04T03:22:36Z", "author": {"login": "a7ehuo"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnIlXdgBqjMzOTUxOTk3NDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnwj9dgFqTQyMzk1OTEwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0ff9feb4b8766b7c926c416bebcfb8d1b128c27", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b0ff9feb4b8766b7c926c416bebcfb8d1b128c27", "committedDate": "2020-06-01T22:56:10Z", "message": "Update numActiveThreads at the proper location at the server\n\nAs described in #9762, `_numActiveThreads` is not\nincremented when the thread is unloading the class\nor doing CHTable update. It could cause a race\ncondition when another thread is timed out\non waiting for the first thread to completed,\nthe second thread that\u2019s timed out will clear the\nclient session cache because `_numActiveThreads` is 0.\n\nFixes #9762, #9694\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "d94767cab6e04057233f4277717e2d77eca810f2", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d94767cab6e04057233f4277717e2d77eca810f2", "committedDate": "2020-06-01T23:08:22Z", "message": "Update numActiveThreads at the proper location at the server\n\nAs described in #9762, `_numActiveThreads` is not\nincremented when the thread is unloading the class\nor doing CHTable update. It could cause a race\ncondition when another thread is timed out\non waiting for the first thread to complete,\nthe second thread that\u2019s timed out will clear the\nclient session cache because `_numActiveThreads` is 0.\n\nFixes #9762, #9694\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d94767cab6e04057233f4277717e2d77eca810f2", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d94767cab6e04057233f4277717e2d77eca810f2", "committedDate": "2020-06-01T23:08:22Z", "message": "Update numActiveThreads at the proper location at the server\n\nAs described in #9762, `_numActiveThreads` is not\nincremented when the thread is unloading the class\nor doing CHTable update. It could cause a race\ncondition when another thread is timed out\non waiting for the first thread to complete,\nthe second thread that\u2019s timed out will clear the\nclient session cache because `_numActiveThreads` is 0.\n\nFixes #9762, #9694\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "8e42c3fe646089797ecf5dd5dbeae6b81cae3257", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8e42c3fe646089797ecf5dd5dbeae6b81cae3257", "committedDate": "2020-06-03T00:56:11Z", "message": "Update numActiveThreads at the proper location at the server\n\nAs described in #9762, `_numActiveThreads` is not\nincremented when the thread is unloading the class\nor doing CHTable update. It could cause a race\ncondition when another thread is timed out\non waiting for the first thread to complete,\nthe second thread that\u2019s timed out will clear the\nclient session cache because `_numActiveThreads` is 0.\n\nFixes #9762, #9694\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e42c3fe646089797ecf5dd5dbeae6b81cae3257", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8e42c3fe646089797ecf5dd5dbeae6b81cae3257", "committedDate": "2020-06-03T00:56:11Z", "message": "Update numActiveThreads at the proper location at the server\n\nAs described in #9762, `_numActiveThreads` is not\nincremented when the thread is unloading the class\nor doing CHTable update. It could cause a race\ncondition when another thread is timed out\non waiting for the first thread to complete,\nthe second thread that\u2019s timed out will clear the\nclient session cache because `_numActiveThreads` is 0.\n\nFixes #9762, #9694\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "7c77a963f149aea39fda8e8df6e84ee496d311f8", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7c77a963f149aea39fda8e8df6e84ee496d311f8", "committedDate": "2020-06-03T01:06:55Z", "message": "Update numActiveThreads at the proper location at the server\n\nAs described in #9762, `_numActiveThreads` is not\nincremented when the thread is unloading the class\nor doing CHTable update. It could cause a race\ncondition when another thread is timed out\non waiting for the first thread to complete,\nthe second thread that\u2019s timed out will clear the\nclient session cache because `_numActiveThreads` is 0.\n\nFixes #9762, #9694\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNjY4MDY0", "url": "https://github.com/eclipse-openj9/openj9/pull/9763#pullrequestreview-423668064", "createdAt": "2020-06-03T15:25:08Z", "commit": {"oid": "7c77a963f149aea39fda8e8df6e84ee496d311f8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNToyNTowOFrOGehGjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNTozMzozNFrOGehfmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1MjgxNA==", "bodyText": "Isn't this too early to increase the number of active threads? A thread that has to wait for its turn will see itself as an active thread and never clear the caches. In my mind the increment should be done after the thread has cleared the waitForMyTurn() routine.", "url": "https://github.com/eclipse-openj9/openj9/pull/9763#discussion_r434652814", "createdAt": "2020-06-03T15:25:08Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/JITServerCompilationThread.cpp", "diffHunk": "@@ -384,6 +384,8 @@ TR::CompilationInfoPerThreadRemote::processEntry(TR_MethodToBeCompiled &entry, J\n       //\n       clientSession->getSequencingMonitor()->enter();\n       clientSession->updateMaxReceivedSeqNo(seqNo);\n+      clientSession->incNumActiveThreads();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c77a963f149aea39fda8e8df6e84ee496d311f8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1OTIyNQ==", "bodyText": "This acts like a correction, but it's never executed because of the fatal assert above. Is the intent to transform the fatal assert into an simple assert?", "url": "https://github.com/eclipse-openj9/openj9/pull/9763#discussion_r434659225", "createdAt": "2020-06-03T15:33:34Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/JITServerCompilationThread.cpp", "diffHunk": "@@ -473,18 +477,23 @@ TR::CompilationInfoPerThreadRemote::processEntry(TR_MethodToBeCompiled &entry, J\n          }\n \n       clientSession->getSequencingMonitor()->enter();\n-      // Update the expecting sequence number. This will allow subsequent\n-      // threads to pass through once we've released the sequencing monitor.\n-      TR_ASSERT(seqNo == clientSession->getExpectedSeqNo(), \"Unexpected seqNo=%u expected=%u\\n\", seqNo, clientSession->getExpectedSeqNo());\n \n-      //TODO: Might need to set the expectedSeqNo as (seqNo+1) instead of (expectedSeqNo+1)\n       if (seqNo != clientSession->getExpectedSeqNo())\n+         {\n          Trc_JITServerUnexpectedSeqNo(compThread, getCompThreadId(), clientSession,\n                (unsigned long long)clientId, seqNo, clientSession->getExpectedSeqNo(), clientSession->getNumActiveThreads());\n \n+         TR_ASSERT_FATAL(false, \"compThreadID=%d clientSessionData=%p clientUID=%llu (seqNo=%u, expectedSeqNo=%u, numActiveThreads=%d) unexpected seqNo\",\n+               getCompThreadId(), clientSession, (unsigned long long)clientId,\n+               seqNo, clientSession->getExpectedSeqNo(), clientSession->getNumActiveThreads());\n+\n+         clientSession->setExpectedSeqNo(seqNo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c77a963f149aea39fda8e8df6e84ee496d311f8"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e73da994711adf4c1aed818688c17931bf692d3", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6e73da994711adf4c1aed818688c17931bf692d3", "committedDate": "2020-06-03T19:49:58Z", "message": "Update numActiveThreads at the proper location at the server\n\nAs described in #9762, `_numActiveThreads` is not\nincremented when the thread is unloading the class\nor doing CHTable update. It could cause a race\ncondition when another thread is timed out\non waiting for the first thread to complete,\nthe second thread that\u2019s timed out will clear the\nclient session cache because `_numActiveThreads` is 0.\n\nFixes #9762, #9694\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c77a963f149aea39fda8e8df6e84ee496d311f8", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7c77a963f149aea39fda8e8df6e84ee496d311f8", "committedDate": "2020-06-03T01:06:55Z", "message": "Update numActiveThreads at the proper location at the server\n\nAs described in #9762, `_numActiveThreads` is not\nincremented when the thread is unloading the class\nor doing CHTable update. It could cause a race\ncondition when another thread is timed out\non waiting for the first thread to complete,\nthe second thread that\u2019s timed out will clear the\nclient session cache because `_numActiveThreads` is 0.\n\nFixes #9762, #9694\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "6e73da994711adf4c1aed818688c17931bf692d3", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6e73da994711adf4c1aed818688c17931bf692d3", "committedDate": "2020-06-03T19:49:58Z", "message": "Update numActiveThreads at the proper location at the server\n\nAs described in #9762, `_numActiveThreads` is not\nincremented when the thread is unloading the class\nor doing CHTable update. It could cause a race\ncondition when another thread is timed out\non waiting for the first thread to complete,\nthe second thread that\u2019s timed out will clear the\nclient session cache because `_numActiveThreads` is 0.\n\nFixes #9762, #9694\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzOTU4OTky", "url": "https://github.com/eclipse-openj9/openj9/pull/9763#pullrequestreview-423958992", "createdAt": "2020-06-03T21:43:37Z", "commit": {"oid": "6e73da994711adf4c1aed818688c17931bf692d3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzOTU5MTAz", "url": "https://github.com/eclipse-openj9/openj9/pull/9763#pullrequestreview-423959103", "createdAt": "2020-06-03T21:43:51Z", "commit": {"oid": "6e73da994711adf4c1aed818688c17931bf692d3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 842, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}