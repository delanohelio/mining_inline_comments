{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzOTQxODg1", "number": 8985, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTowMzozN1rODrysKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTowNzoxNlrODryxpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjQ1ODY1OnYy", "diffSide": "RIGHT", "path": "runtime/rasdump/javadump.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTowMzozN1rOF8WJMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTo0NDo0OVrOF8Xm2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMTY4Mw==", "bodyText": "This would be safer written like this (so no one has to wonder whether _MaxCategoryBits can be zero):\nU_32 bitmask_size = ((writer->_MaxCategoryBits + 31) / 32) * sizeof(U_32);", "url": "https://github.com/eclipse-openj9/openj9/pull/8985#discussion_r398821683", "createdAt": "2020-03-26T19:03:37Z", "author": {"login": "keithc-ca"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1587,8 +1606,9 @@ outerMemCategoryCallBack (U_32 categoryCode, const char * categoryName, UDATA li\n \t * for all children of this node.\n \t */\n \tmemset(&total, 0, sizeof(memcategory_total));\n-\ttotal.category_bitmask = (U_32*)alloca(writer->_TotalCategories * sizeof(U_32));\n-\tmemset(total.category_bitmask, 0, writer->_TotalCategories * sizeof(U_32));\n+\tU_32 bitmask_size = (((writer->_MaxCategoryBits - 1) / 32) + 1) * sizeof(U_32);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d89cef7598d67d77b45961c6f61cc30e40b4f1a"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0NTY1Nw==", "bodyText": "updated", "url": "https://github.com/eclipse-openj9/openj9/pull/8985#discussion_r398845657", "createdAt": "2020-03-26T19:44:49Z", "author": {"login": "pshipton"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1587,8 +1606,9 @@ outerMemCategoryCallBack (U_32 categoryCode, const char * categoryName, UDATA li\n \t * for all children of this node.\n \t */\n \tmemset(&total, 0, sizeof(memcategory_total));\n-\ttotal.category_bitmask = (U_32*)alloca(writer->_TotalCategories * sizeof(U_32));\n-\tmemset(total.category_bitmask, 0, writer->_TotalCategories * sizeof(U_32));\n+\tU_32 bitmask_size = (((writer->_MaxCategoryBits - 1) / 32) + 1) * sizeof(U_32);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMTY4Mw=="}, "originalCommit": {"oid": "8d89cef7598d67d77b45961c6f61cc30e40b4f1a"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjQ3MjY4OnYy", "diffSide": "RIGHT", "path": "runtime/rasdump/javadump.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTowNzoxNlrOF8WR0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTo0NDo1NlrOF8XnIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMzg5MQ==", "bodyText": "I suggest this this is easier to read if the comparison is reversed (same for languageMaxIndex below):\n    if (max_indexes->omrMaxIndex < omrCode) {\n        max_indexes->omrMaxIndex = omrCode;\n    }", "url": "https://github.com/eclipse-openj9/openj9/pull/8985#discussion_r398823891", "createdAt": "2020-03-26T19:07:16Z", "author": {"login": "keithc-ca"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1498,7 +1505,19 @@ JavaCoreDumpWriter::writeMemorySection(void)\n static UDATA\n countMemoryCategoriesCallback (U_32 categoryCode, const char * categoryName, UDATA liveBytes, UDATA liveAllocations, BOOLEAN isRoot, U_32 parentCategoryCode, OMRMemCategoryWalkState * state)\n {\n-\t(*(I_32 *)state->userData1)++;\n+\t(*(U_32 *)state->userData1)++;\n+\t\n+\tmemcategory_max_indexes *max_indexes = (memcategory_max_indexes *)state->userData2;\n+\tif (categoryCode > OMRMEM_LANGUAGE_CATEGORY_LIMIT) {\n+\t\tU_32 omrCode = OMRMEM_OMR_CATEGORY_INDEX_FROM_CODE(categoryCode);\n+\t\tif (omrCode > max_indexes->omrMaxIndex) {\n+\t\t\tmax_indexes->omrMaxIndex = omrCode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d89cef7598d67d77b45961c6f61cc30e40b4f1a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg0NTcyOQ==", "bodyText": "updated", "url": "https://github.com/eclipse-openj9/openj9/pull/8985#discussion_r398845729", "createdAt": "2020-03-26T19:44:56Z", "author": {"login": "pshipton"}, "path": "runtime/rasdump/javadump.cpp", "diffHunk": "@@ -1498,7 +1505,19 @@ JavaCoreDumpWriter::writeMemorySection(void)\n static UDATA\n countMemoryCategoriesCallback (U_32 categoryCode, const char * categoryName, UDATA liveBytes, UDATA liveAllocations, BOOLEAN isRoot, U_32 parentCategoryCode, OMRMemCategoryWalkState * state)\n {\n-\t(*(I_32 *)state->userData1)++;\n+\t(*(U_32 *)state->userData1)++;\n+\t\n+\tmemcategory_max_indexes *max_indexes = (memcategory_max_indexes *)state->userData2;\n+\tif (categoryCode > OMRMEM_LANGUAGE_CATEGORY_LIMIT) {\n+\t\tU_32 omrCode = OMRMEM_OMR_CATEGORY_INDEX_FROM_CODE(categoryCode);\n+\t\tif (omrCode > max_indexes->omrMaxIndex) {\n+\t\t\tmax_indexes->omrMaxIndex = omrCode;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgyMzg5MQ=="}, "originalCommit": {"oid": "8d89cef7598d67d77b45961c6f61cc30e40b4f1a"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 437, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}