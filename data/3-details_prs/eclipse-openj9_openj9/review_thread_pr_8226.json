{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMTQ2ODAy", "number": 8226, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNToxOToyNVrODXLvCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNToyMToxM1rODXLxJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjM2MTA1OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/z/codegen/J9TreeEvaluator.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNToxOToyNVrOFcXIvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNToxOToyNVrOFcXIvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI4MzUxOQ==", "bodyText": "Let's remove this change as we are disabling the optimization temporarily and we're not sure yet whether this is correct.", "url": "https://github.com/eclipse-openj9/openj9/pull/8226#discussion_r365283519", "createdAt": "2020-01-10T15:19:25Z", "author": {"login": "fjeremic"}, "path": "runtime/compiler/z/codegen/J9TreeEvaluator.cpp", "diffHunk": "@@ -450,7 +450,7 @@ inlineVectorizedStringIndexOf(TR::Node* node, TR::CodeGenerator* cg, bool isUTF1\n       // s2 header not found in s1\n       // Load the next 16 bytes of s1 and continue\n       generateRRInstruction(cg, TR::InstOpCode::getAddRegOpCode(), node, s1VecStartIndexReg, loadLenReg);\n-      generateRIEInstruction(cg, TR::InstOpCode::getCmpRegAndBranchRelOpCode(), node, s1VecStartIndexReg, maxIndexReg, labelStringNotFound, TR::InstOpCode::COND_BHR);\n+      generateRIEInstruction(cg, TR::InstOpCode::getCmpRegAndBranchRelOpCode(), node, s1VecStartIndexReg, maxIndexReg, labelStringNotFound, TR::InstOpCode::COND_BNLR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8a41e37f14b053dcf080f9105c3b922542c0444"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjM2NjQ0OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/z/codegen/J9TreeEvaluator.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNToyMToxM1rOFcXMDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNToyMToxM1rOFcXMDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI4NDM2Ng==", "bodyText": "Please open up an issue to get this addressed and add a TODO here (referencing the issue number) so it doesn't slip past our radar:\n// TODO (#????): Re-enable VSTRS support in inlineVectorizedStringIndexOf", "url": "https://github.com/eclipse-openj9/openj9/pull/8226#discussion_r365284366", "createdAt": "2020-01-10T15:21:13Z", "author": {"login": "fjeremic"}, "path": "runtime/compiler/z/codegen/J9TreeEvaluator.cpp", "diffHunk": "@@ -261,7 +261,7 @@ inlineVectorizedStringIndexOf(TR::Node* node, TR::CodeGenerator* cg, bool isUTF1\n    const uint32_t elementSizeMask = isUTF16 ? 1 : 0;\n    const int8_t vectorSize = cg->machine()->getVRFSize();\n    const uintptrj_t headerSize = TR::Compiler->om.contiguousArrayHeaderSizeInBytes();\n-   const bool supportsVSTRS = TR::Compiler->target.cpu.getSupportsVectorFacilityEnhancement2();\n+   const bool supportsVSTRS = TR::Compiler->target.cpu.getSupportsVectorFacilityEnhancement2() && feGetEnv(\"TR_EnableVectorStringSearch\") != NULL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8a41e37f14b053dcf080f9105c3b922542c0444"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 802, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}