{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MjE4MTU2", "number": 10257, "title": "Exit MemMonitor before jniCheckFatalErrorNLS() if not JNICHK_NONFATAL", "bodyText": "This fixes a hang scenario:\nOne thread holds VM access and attempts to enter MemMonitor;\nAnother thread already entered MemMonitor, exitJavaVM() due to fatalError(), and acquireExclusiveVMAccessFromExternalThread() but can't acquire exclusive VM access because last thread holds the VM access which can't proceed either since this thread holds MemMonitor, hence deadlock.\nThis PR exits MemMonitor before invoking jniCheckFatalErrorNLS()/fatalError() to avoid the hang scenario above.\ncloses: #10191\nSigned-off-by: Jason Feng fengj@ca.ibm.com", "createdAt": "2020-07-27T14:56:28Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10257", "merged": true, "mergeCommit": {"oid": "6b7bde0318c17c478027e851d876b58f3ca2c5df"}, "closed": true, "closedAt": "2020-07-27T18:25:17Z", "author": {"login": "JasonFengJ9"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5DViGAFqTQ1NTg3ODMyOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5D5xbgFqTQ1NTkxMzUwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODc4MzI5", "url": "https://github.com/eclipse-openj9/openj9/pull/10257#pullrequestreview-455878329", "createdAt": "2020-07-27T15:12:59Z", "commit": {"oid": "f4772552f3d8467a1e412865e4a3b82c2cdc1e1f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToxMjo1OVrOG3nC1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToxMjo1OVrOG3nC1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2NDU2NA==", "bodyText": "Please use the any bits macro here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10257#discussion_r460964564", "createdAt": "2020-07-27T15:12:59Z", "author": {"login": "gacholio"}, "path": "runtime/jnichk/jnicmem.c", "diffHunk": "@@ -122,6 +126,9 @@ jniCheckMemoryInit(J9JavaVM* javaVM)\n \tPORT_ACCESS_FROM_JAVAVM(javaVM);\n \n \tomrthread_monitor_t globalMonitor = omrthread_global_monitor();\n+\tif (0 == (javaVM->checkJNIData.options & JNICHK_NONFATAL)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4772552f3d8467a1e412865e4a3b82c2cdc1e1f"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f3b3e5ed72fb3983ad9e173fdf05a19410a9347", "author": {"user": {"login": "JasonFengJ9", "name": "Jason Feng"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1f3b3e5ed72fb3983ad9e173fdf05a19410a9347", "committedDate": "2020-07-27T15:40:50Z", "message": "Exit MemMonitor before jniCheckFatalErrorNLS() if not JNICHK_NONFATAL\n\nThis fixes a hang scenario:\nOne thread holds VM access and attempts to enter MemMonitor;\nAnother thread already entered MemMonitor, exitJavaVM() due to\nfatalError(), and acquireExclusiveVMAccessFromExternalThread() but can't\nacquire exclusive VM access because last thread holds the VM access\nwhich can't proceed either since this thread holds MemMonitor, hence\ndeadlock.\nThis PR exits MemMonitor before invoking\njniCheckFatalErrorNLS()/fatalError() to avoid the hang scenario above.\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4772552f3d8467a1e412865e4a3b82c2cdc1e1f", "author": {"user": {"login": "JasonFengJ9", "name": "Jason Feng"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f4772552f3d8467a1e412865e4a3b82c2cdc1e1f", "committedDate": "2020-07-27T13:30:19Z", "message": "Exit MemMonitor before jniCheckFatalErrorNLS() if not JNICHK_NONFATAL\n\nThis fixes a hang scenario:\nOne thread hold VM access and attempt to enter MemMonitor;\nAnother thread already entered MemMonitor, exitJavaVM() due to\nfatalError(), and acquireExclusiveVMAccessFromExternalThread().\nExit MemMonitor before invoking jniCheckFatalErrorNLS()/fatalError() to\navoid the hang above.\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>"}, "afterCommit": {"oid": "1f3b3e5ed72fb3983ad9e173fdf05a19410a9347", "author": {"user": {"login": "JasonFengJ9", "name": "Jason Feng"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1f3b3e5ed72fb3983ad9e173fdf05a19410a9347", "committedDate": "2020-07-27T15:40:50Z", "message": "Exit MemMonitor before jniCheckFatalErrorNLS() if not JNICHK_NONFATAL\n\nThis fixes a hang scenario:\nOne thread holds VM access and attempts to enter MemMonitor;\nAnother thread already entered MemMonitor, exitJavaVM() due to\nfatalError(), and acquireExclusiveVMAccessFromExternalThread() but can't\nacquire exclusive VM access because last thread holds the VM access\nwhich can't proceed either since this thread holds MemMonitor, hence\ndeadlock.\nThis PR exits MemMonitor before invoking\njniCheckFatalErrorNLS()/fatalError() to avoid the hang scenario above.\n\nSigned-off-by: Jason Feng <fengj@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1OTEzNTA3", "url": "https://github.com/eclipse-openj9/openj9/pull/10257#pullrequestreview-455913507", "createdAt": "2020-07-27T15:52:35Z", "commit": {"oid": "1f3b3e5ed72fb3983ad9e173fdf05a19410a9347"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 357, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}