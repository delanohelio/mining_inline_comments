{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMDI2NzA5", "number": 8892, "title": "Fix definingClass for StaticFieldVarHandle", "bodyText": "For a StaticFieldVarHandle, definingClass should point to the owner of\nthe static field.\nExample:\n    public class P { public static String publicObject = \"s\"; }\n    public class C extends P { }\n    VarHandle vh =\n    \tMethodHandles.lookup()\n    \t\t.in(C.class)\n    \t\t.findStaticVarHandle(C.class, \"publicObject\", String.class);\n\nIn the above example, vh is an instance of StaticFieldVarHandle, which\nextends FieldVarHandle. vh.definingClass should contain class P since it\ndefines the publicObject.\nCurrently, vh.definingClass is set to class C, which is not the owner of\nthe static field. This fix correctly sets the defining class for a\nStaticFieldVarHandle.\nSigned-off-by: Babneet Singh sbabneet@ca.ibm.com", "createdAt": "2020-03-17T19:14:10Z", "url": "https://github.com/eclipse-openj9/openj9/pull/8892", "merged": true, "mergeCommit": {"oid": "9f7f9bd2b048d8f477591ca0e27efffde42dd4bc"}, "closed": true, "closedAt": "2020-03-25T19:56:35Z", "author": {"login": "babsingh"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOnsHFABqjMxMzg3MTEwMTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ_ca-AFqTM4MDg0NjQwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30b1c13190c729617138463867504962c9c4acb6", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/30b1c13190c729617138463867504962c9c4acb6", "committedDate": "2020-03-17T19:11:06Z", "message": "Fix definingClass for StaticFieldVarHandle\n\nFor a StaticFieldVarHandle, definingClass should point to the owner of\nthe static field.\n \nExample:\n    public class P { public static String publicObject = \"s\"; }\n    public class C extends P { }\n    VarHandle vh =\n    \tMethodHandles.lookup()\n    \t\t.in(C.class)\n    \t\t.findStaticVarHandle(C.class, \"publicObject\", String.class);\n\nIn the above example, vh is an instance of StaticFieldVarHandle, which\nextends FieldVarHandle. vh.definingClass should contain class P since it\ndefines the publicObject.\n\nCurrently, vh.definingClass is set to class C, which is not the owner of\nthe static field. This fix correctly sets the defining class for a\nStaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "ce30c1c8e5a3d5b6c4ab9298580c77da4fc558ef", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ce30c1c8e5a3d5b6c4ab9298580c77da4fc558ef", "committedDate": "2020-03-17T19:15:11Z", "message": "Fix definingClass for StaticFieldVarHandle\n\nFor a StaticFieldVarHandle, definingClass should point to the owner of\nthe static field.\n \nExample:\n    public class P { public static String publicObject = \"s\"; }\n    public class C extends P { }\n    VarHandle vh =\n    \tMethodHandles.lookup()\n    \t\t.in(C.class)\n    \t\t.findStaticVarHandle(C.class, \"publicObject\", String.class);\n\nIn the above example, vh is an instance of StaticFieldVarHandle, which\nextends FieldVarHandle. vh.definingClass should contain class P since it\ndefines the publicObject.\n\nCurrently, vh.definingClass is set to class C, which is not the owner of\nthe static field. This fix correctly sets the defining class for a\nStaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTUzMTU0", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#pullrequestreview-377153154", "createdAt": "2020-03-18T19:00:43Z", "commit": {"oid": "ce30c1c8e5a3d5b6c4ab9298580c77da4fc558ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTowMDo0NFrOF4S6rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxOTowMDo0NFrOF4S6rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDU3NDUwOQ==", "bodyText": "It shouldn't be possible to get here with isStatic true and definingClass == null.  It would be better to assert that then let a partially initialized VH escape", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r394574509", "createdAt": "2020-03-18T19:00:44Z", "author": {"login": "DanHeidinga"}, "path": "runtime/jcl/common/java_lang_invoke_VarHandle.c", "diffHunk": "@@ -111,7 +112,11 @@ Java_java_lang_invoke_FieldVarHandle_lookupField(JNIEnv *env, jobject handle, jc\n \t\tgoto _cleanup;\n \t}\n \n-\tJ9VMJAVALANGINVOKEVARHANDLE_SET_MODIFIERS(vmThread, J9_JNI_UNWRAP_REFERENCE(handle), ((J9ROMFieldShape*) romField)->modifiers);\n+\tvarHandle = J9_JNI_UNWRAP_REFERENCE(handle);\n+\tJ9VMJAVALANGINVOKEVARHANDLE_SET_MODIFIERS(vmThread, varHandle, ((J9ROMFieldShape *)romField)->modifiers);\n+\tif (isStatic && (NULL != definingClass)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce30c1c8e5a3d5b6c4ab9298580c77da4fc558ef"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce30c1c8e5a3d5b6c4ab9298580c77da4fc558ef", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ce30c1c8e5a3d5b6c4ab9298580c77da4fc558ef", "committedDate": "2020-03-17T19:15:11Z", "message": "Fix definingClass for StaticFieldVarHandle\n\nFor a StaticFieldVarHandle, definingClass should point to the owner of\nthe static field.\n \nExample:\n    public class P { public static String publicObject = \"s\"; }\n    public class C extends P { }\n    VarHandle vh =\n    \tMethodHandles.lookup()\n    \t\t.in(C.class)\n    \t\t.findStaticVarHandle(C.class, \"publicObject\", String.class);\n\nIn the above example, vh is an instance of StaticFieldVarHandle, which\nextends FieldVarHandle. vh.definingClass should contain class P since it\ndefines the publicObject.\n\nCurrently, vh.definingClass is set to class C, which is not the owner of\nthe static field. This fix correctly sets the defining class for a\nStaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "02929db3e6cd6c194a5def1cdc10991a275e669d", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/02929db3e6cd6c194a5def1cdc10991a275e669d", "committedDate": "2020-03-19T05:41:56Z", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02929db3e6cd6c194a5def1cdc10991a275e669d", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/02929db3e6cd6c194a5def1cdc10991a275e669d", "committedDate": "2020-03-19T05:41:56Z", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "d1e24404af49fa1dce88a1cb06eaac0e12c44053", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d1e24404af49fa1dce88a1cb06eaac0e12c44053", "committedDate": "2020-03-19T15:06:31Z", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1e24404af49fa1dce88a1cb06eaac0e12c44053", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d1e24404af49fa1dce88a1cb06eaac0e12c44053", "committedDate": "2020-03-19T15:06:31Z", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "b1ec71852a71cb2a378db1df7e50474fc63a8040", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b1ec71852a71cb2a378db1df7e50474fc63a8040", "committedDate": "2020-03-19T15:44:07Z", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1ec71852a71cb2a378db1df7e50474fc63a8040", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b1ec71852a71cb2a378db1df7e50474fc63a8040", "committedDate": "2020-03-19T15:44:07Z", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "0b0246bc529600fbd3d3e768aa1de66568d3356b", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0b0246bc529600fbd3d3e768aa1de66568d3356b", "committedDate": "2020-03-19T17:05:37Z", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMzMyNzI3", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#pullrequestreview-380332727", "createdAt": "2020-03-24T13:56:39Z", "commit": {"oid": "0b0246bc529600fbd3d3e768aa1de66568d3356b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMzo1NjozOVrOF6xaTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNDoxMToxMFrOF6yDXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE3MTI3Ng==", "bodyText": "Comments shouldn't be about the past - \"no longer satisfies\" - but explaining why is great!\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t/* definingClass cannot be a final field since it no longer satisfies the conditions of\n          \n          \n            \n            \t * the final keyword. It is modified twice, once in Java code and once in native code.\n          \n          \n            \n            \t */\n          \n          \n            \n            \t/* definingClass cannot be a final field since it is modified twice, once in \n          \n          \n            \n            \t * Java code and once in native code.\n          \n          \n            \n            \t */", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r397171276", "createdAt": "2020-03-24T13:56:39Z", "author": {"login": "DanHeidinga"}, "path": "jcl/src/java.base/share/classes/java/lang/invoke/FieldVarHandle.java", "diffHunk": "@@ -35,9 +35,13 @@\n \n abstract class FieldVarHandle extends VarHandle {\n \tfinal long vmslot;\n-\tfinal Class<?> definingClass;\n \tfinal String fieldName;\n \n+\t/* definingClass cannot be a final field since it no longer satisfies the conditions of\n+\t * the final keyword. It is modified twice, once in Java code and once in native code.\n+\t */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b0246bc529600fbd3d3e768aa1de66568d3356b"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE3Mzg1OA==", "bodyText": "I would prefer this code unconditionally set the field for static handles.  This makes the code clearer and is safe for the future if the field is no longer set in java\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tif (isStatic && (j9LookupClass != definingClass)) {\n          \n          \n            \n            \tif (isStatic) {", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r397173858", "createdAt": "2020-03-24T14:00:18Z", "author": {"login": "DanHeidinga"}, "path": "runtime/jcl/common/java_lang_invoke_VarHandle.c", "diffHunk": "@@ -111,7 +112,18 @@ Java_java_lang_invoke_FieldVarHandle_lookupField(JNIEnv *env, jobject handle, jc\n \t\tgoto _cleanup;\n \t}\n \n-\tJ9VMJAVALANGINVOKEVARHANDLE_SET_MODIFIERS(vmThread, J9_JNI_UNWRAP_REFERENCE(handle), ((J9ROMFieldShape*) romField)->modifiers);\n+\tvarHandle = J9_JNI_UNWRAP_REFERENCE(handle);\n+\tJ9VMJAVALANGINVOKEVARHANDLE_SET_MODIFIERS(vmThread, varHandle, ((J9ROMFieldShape *)romField)->modifiers);\n+\n+\t/* StaticFieldVarHandle and InstanceFieldVarHandle extend FieldVarHandle. For StaticFieldVarHandle, isStatic\n+\t * is true, and the definingClass field is set to the owner of the static field. For InstanceFieldVarHandle,\n+\t * isStatic is false, and the definingClass field is set to the lookupClass, which is also the instance class,\n+\t * in FieldVarHandle's constructor.\n+\t */\n+\tif (isStatic && (j9LookupClass != definingClass)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b0246bc529600fbd3d3e768aa1de66568d3356b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzE4MTc4OA==", "bodyText": "Can this be broken into a series of tests?  It will be easier to focus debugging efforts in the future if we can clearly see which operation failed.", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#discussion_r397181788", "createdAt": "2020-03-24T14:11:10Z", "author": {"login": "DanHeidinga"}, "path": "test/functional/Java9andUp/src/org/openj9/test/varhandle/StaticFieldVarHandleTests.java", "diffHunk": "@@ -2484,4 +2491,226 @@ public void testCommonCallSite() {\n \tprivate long commonVarHandleCallSite(VarHandle vh, long value) {\n \t\treturn (long)vh.get();\n \t}\n+\t\n+\t/**\n+\t * Perform all the operations available on a StaticFieldVarHandle referencing a {@link String} field of a\n+\t * parent class via the child class.\n+\t */\n+\t@Test\n+\tpublic void testReferenceInParentFromChild() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b0246bc529600fbd3d3e768aa1de66568d3356b"}, "originalPosition": 145}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "513bd048f83533c7d9fc31345aec5b06d2fcf01e", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/513bd048f83533c7d9fc31345aec5b06d2fcf01e", "committedDate": "2020-03-24T19:39:39Z", "message": "Fix definingClass for StaticFieldVarHandle\n\nFor a StaticFieldVarHandle, definingClass should point to the owner of\nthe static field.\n \nExample:\n    public class P { public static String publicObject = \"s\"; }\n    public class C extends P { }\n    VarHandle vh =\n    \tMethodHandles.lookup()\n    \t\t.in(C.class)\n    \t\t.findStaticVarHandle(C.class, \"publicObject\", String.class);\n\nIn the above example, vh is an instance of StaticFieldVarHandle, which\nextends FieldVarHandle. vh.definingClass should contain class P since it\ndefines the publicObject.\n\nCurrently, vh.definingClass is set to class C, which is not the owner of\nthe static field. This fix correctly sets the defining class for a\nStaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cad273fac01fb2bc09150c5432edb7b98d150137", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/cad273fac01fb2bc09150c5432edb7b98d150137", "committedDate": "2020-03-24T19:39:39Z", "message": "Add a new test case in StaticFieldVarHandleTests\n\nThe new test case verifies if StaticFieldVarHandle functions correctly\nwhile accessing a static field of a parent class via a child class. It\nonly covers the reference value type. Existing test cases ensure that\nStaticFieldVarHandle will behave correctly for other value types in a\nsimilar scenario if the new test case for the reference value type\nsucceeds.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f577b925ca315ce3739a7ed507c1f7879a666afc", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f577b925ca315ce3739a7ed507c1f7879a666afc", "committedDate": "2020-03-24T19:39:39Z", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b0246bc529600fbd3d3e768aa1de66568d3356b", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0b0246bc529600fbd3d3e768aa1de66568d3356b", "committedDate": "2020-03-19T17:05:37Z", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "f577b925ca315ce3739a7ed507c1f7879a666afc", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f577b925ca315ce3739a7ed507c1f7879a666afc", "committedDate": "2020-03-24T19:39:39Z", "message": "Fix typo: StaticFieldViewVarHandle -> StaticFieldVarHandle\n\nStaticFieldViewVarHandle is corrected to StaticFieldVarHandle.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODIzMzc0", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#pullrequestreview-380823374", "createdAt": "2020-03-25T02:35:26Z", "commit": {"oid": "f577b925ca315ce3739a7ed507c1f7879a666afc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODQ2NDAy", "url": "https://github.com/eclipse-openj9/openj9/pull/8892#pullrequestreview-380846402", "createdAt": "2020-03-25T04:03:56Z", "commit": {"oid": "f577b925ca315ce3739a7ed507c1f7879a666afc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 501, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}