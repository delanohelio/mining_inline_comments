{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMTM0NTA0", "number": 11016, "title": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests", "bodyText": "Replace test modes Mode100, Mode101 with NoOptions, otherwise the test only runs in XL mode. Using these modes is historic and unnecessary.\nMy original plan was to add a getter to correspond with setDumpOptions(), however the Dump.queryDumpOptions() API returns a String[] containing the entire -Xdump configuration, like follows. Using the name getDumpOptions() in the MXBean results in javax.management.NotCompliantMBeanException: Getter and setter for DumpOptions have inconsistent types.\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.", "createdAt": "2020-10-27T22:24:33Z", "url": "https://github.com/eclipse-openj9/openj9/pull/11016", "merged": true, "mergeCommit": {"oid": "b5311f2061ce85b0da771c4b11f7b21270e58811"}, "closed": true, "closedAt": "2020-10-29T19:16:13Z", "author": {"login": "pshipton"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWwvz1ABqjM5Mjg1MjA4MDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXXJSJgFqTUxOTk5NDY4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "abc414ce2d26150025e5a24a2de65070916f33ae", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/abc414ce2d26150025e5a24a2de65070916f33ae", "committedDate": "2020-10-27T22:23:41Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "68f585856eac962c2ec89ba374d3636b09294ed1", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/68f585856eac962c2ec89ba374d3636b09294ed1", "committedDate": "2020-10-27T22:30:59Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nReplace test modes Mode100, Mode101 with NoOptions, otherwise the test\nonly runs in XL mode. Using these modes is historic and unnecessary.\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68f585856eac962c2ec89ba374d3636b09294ed1", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/68f585856eac962c2ec89ba374d3636b09294ed1", "committedDate": "2020-10-27T22:30:59Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nReplace test modes Mode100, Mode101 with NoOptions, otherwise the test\nonly runs in XL mode. Using these modes is historic and unnecessary.\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "1e70ba9df7a37d807366567bb2e80fc22b4aff36", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1e70ba9df7a37d807366567bb2e80fc22b4aff36", "committedDate": "2020-10-27T22:34:34Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nReplace test modes Mode100, Mode101 with NoOptions, otherwise the test\nonly runs in XL mode. Using these modes is historic and unnecessary.\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e70ba9df7a37d807366567bb2e80fc22b4aff36", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1e70ba9df7a37d807366567bb2e80fc22b4aff36", "committedDate": "2020-10-27T22:34:34Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nReplace test modes Mode100, Mode101 with NoOptions, otherwise the test\nonly runs in XL mode. Using these modes is historic and unnecessary.\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3ad56b3958fc19b352ad7cbe243047e7aeadaf54", "committedDate": "2020-10-27T22:56:46Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nReplace test modes Mode100, Mode101 with NoOptions, otherwise the test\nonly runs in XL mode. Using these modes is historic and unnecessary.\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NjAzODYz", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#pullrequestreview-519603863", "createdAt": "2020-10-29T12:18:01Z", "commit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMjoxODowMVrOHqZHtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMjoxODowMVrOHqZHtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIxMzgxNA==", "bodyText": "The possibility of InvalidOptionException should be documented.\nBetter, just remove it from the throws clause - it doesn't appear to be possible.", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#discussion_r514213814", "createdAt": "2020-10-29T12:18:01Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/jdk.management/share/classes/openj9/lang/management/OpenJ9DiagnosticsMXBean.java", "diffHunk": "@@ -68,10 +68,20 @@\n \t */\n \tpublic void resetDumpOptions() throws ConfigurationUnavailableException;\n \n+\t/**\n+\t * Returns the current dump configuration as an array of Strings.\n+\t * The syntax of the option Strings is the same as the -Xdump command-line option,\n+\t * with the initial -Xdump: omitted. See the -Xdump option section on dump agents in\n+\t * the documentation for the OpenJ9 JVM.\n+\t *\n+\t * @throws SecurityException if there is a security manager and it doesn't allow the checks required to read the dump settings\n+\t */\n+\tpublic String[] queryDumpOptions() throws InvalidOptionException, ConfigurationUnavailableException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NjA4MjM1", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#pullrequestreview-519608235", "createdAt": "2020-10-29T12:24:07Z", "commit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMjoyNDowN1rOHqZUXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzowOToxOFrOHqbAMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIxNzA1NQ==", "bodyText": "While you're fixing inconsistencies in indentation, please fix all of them.", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#discussion_r514217055", "createdAt": "2020-10-29T12:24:07Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Dump.java", "diffHunk": "@@ -627,10 +627,10 @@ public static void setDumpOptions(String dumpOptions) throws InvalidDumpOptionEx\n     }\n     \n     /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIyOTA4Ng==", "bodyText": "This might return null which is not documented.", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#discussion_r514229086", "createdAt": "2020-10-29T12:44:30Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/jdk.management/share/classes/openj9/lang/management/internal/OpenJ9DiagnosticsMXBeanImpl.java", "diffHunk": "@@ -111,6 +112,23 @@ public void resetDumpOptions() throws ConfigurationUnavailableException {\n \t\t}\n \t}\n \n+\t/**\n+\t * {@inheritDoc}\n+\t */\n+\t@Override\n+\tpublic String[] queryDumpOptions() {\n+\t\tcheckManagementSecurityPermission();\n+\t\ttry {\n+\t\t\t/*[IF Sidecar19-SE]*/ if (2 > 1) {\n+\t\t\treturn (String[])dump_queryDumpOptions.invoke(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIzNjMyNA==", "bodyText": "Actually, neither exception can be thrown (the implementation has no throws clause).", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#discussion_r514236324", "createdAt": "2020-10-29T12:56:06Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/jdk.management/share/classes/openj9/lang/management/OpenJ9DiagnosticsMXBean.java", "diffHunk": "@@ -68,10 +68,20 @@\n \t */\n \tpublic void resetDumpOptions() throws ConfigurationUnavailableException;\n \n+\t/**\n+\t * Returns the current dump configuration as an array of Strings.\n+\t * The syntax of the option Strings is the same as the -Xdump command-line option,\n+\t * with the initial -Xdump: omitted. See the -Xdump option section on dump agents in\n+\t * the documentation for the OpenJ9 JVM.\n+\t *\n+\t * @throws SecurityException if there is a security manager and it doesn't allow the checks required to read the dump settings\n+\t */\n+\tpublic String[] queryDumpOptions() throws InvalidOptionException, ConfigurationUnavailableException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIxMzgxNA=="}, "originalCommit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIzODYyNw==", "bodyText": "No trailing whitespace, please (lines 264 & 270).", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#discussion_r514238627", "createdAt": "2020-10-29T12:59:41Z", "author": {"login": "keithc-ca"}, "path": "test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOpenJ9DiagnosticsMXBean.java", "diffHunk": "@@ -252,8 +252,38 @@ private void testLocal_setDumpOptions() throws InvalidOptionException, Configura\n \t\tString dir = \".\" + File.separator + \"local\";\n \t\tString dumpFileName = \"javacore_alloc.txt\";\n \t\tString dumpFilePath = dir + File.separator + dumpFileName;\n+\n \t\tdiagBean.resetDumpOptions();\n+\n+\t\tString[] resetOptions = diagBean.queryDumpOptions();\n+\t\tfor (String option : resetOptions) {\n+\t\t\tif (option.startsWith(\"java:events=allocation\")) {\n+\t\t\t\tAssert.fail(\"Found unexpected dump option: \" + option);\n+\t\t\t}\n+\t\t}\n+\t\t\n \t\tdiagBean.setDumpOptions(\"java:events=allocation,filter=#1k,range=1..1,file=\" + dumpFilePath);\n+\n+\t\tboolean optionFound = false;\n+\t\tString[] options = diagBean.queryDumpOptions();\n+\t\tfor (String option : options) {\n+\t\t\t// The options get reordered and defaults added, check parts separately ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI0MzIwNA==", "bodyText": "nit: space after :", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#discussion_r514243204", "createdAt": "2020-10-29T13:06:57Z", "author": {"login": "keithc-ca"}, "path": "test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOpenJ9DiagnosticsMXBean.java", "diffHunk": "@@ -339,11 +369,50 @@ private void testRemote_setDumpOptions() throws InvalidOptionException, Configur\n \t\tString dir = \".\" + File.separator + \"remote\";\n \t\tString dumpFileName = \"javacore_alloc.txt\";\n \t\tString dumpFilePath = dir + File.separator + dumpFileName;\n+\n \t\tdiagBeanRemote.resetDumpOptions();\n+\n+\t\tString[] resetOptions = diagBeanRemote.queryDumpOptions();\n+\t\tfor (String option : resetOptions) {\n+\t\t\tif (option.startsWith(\"java:events=allocation\") || option.startsWith(\"java:events=catch\")) {\n+\t\t\t\tAssert.fail(\"Found unexpected dump option:\" + option);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI0Mzk2MQ==", "bodyText": "trailing whitespace", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#discussion_r514243961", "createdAt": "2020-10-29T13:08:10Z", "author": {"login": "keithc-ca"}, "path": "test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOpenJ9DiagnosticsMXBean.java", "diffHunk": "@@ -339,11 +369,50 @@ private void testRemote_setDumpOptions() throws InvalidOptionException, Configur\n \t\tString dir = \".\" + File.separator + \"remote\";\n \t\tString dumpFileName = \"javacore_alloc.txt\";\n \t\tString dumpFilePath = dir + File.separator + dumpFileName;\n+\n \t\tdiagBeanRemote.resetDumpOptions();\n+\n+\t\tString[] resetOptions = diagBeanRemote.queryDumpOptions();\n+\t\tfor (String option : resetOptions) {\n+\t\t\tif (option.startsWith(\"java:events=allocation\") || option.startsWith(\"java:events=catch\")) {\n+\t\t\t\tAssert.fail(\"Found unexpected dump option:\" + option);\n+\t\t\t}\n+\t\t}\n+\n \t\tdiagBeanRemote.setDumpOptions(\"java:events=allocation,filter=#1k,range=1..1,file=\" + dumpFilePath);\n \t\tdumpFileName = \"javacore_unsupported.txt\";\n-\t\tdumpFilePath = dir + File.separator + dumpFileName;\n-\t\tdiagBeanRemote.setDumpOptions(\"java:events=catch,filter=java/io/UnsupportedEncodingException,range=1..1,file=\" + dumpFilePath);\n+\t\tString catchDumpFilePath = dir + File.separator + dumpFileName;\n+\t\tdiagBeanRemote.setDumpOptions(\"java:events=catch,filter=java/io/UnsupportedEncodingException,range=1..1,file=\" + catchDumpFilePath);\n+\n+\t\tString[] options = diagBeanRemote.queryDumpOptions();\n+\t\tboolean allocOptionFound = false;\n+\t\tboolean catchOptionFound = false;\n+\t\tfor (String option : options) {\n+\t\t\t// The options get reordered and defaults added, check parts separately ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI0NDUxNg==", "bodyText": "Please indent consistently (like 392-399, above).", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#discussion_r514244516", "createdAt": "2020-10-29T13:09:05Z", "author": {"login": "keithc-ca"}, "path": "test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOpenJ9DiagnosticsMXBean.java", "diffHunk": "@@ -339,11 +369,50 @@ private void testRemote_setDumpOptions() throws InvalidOptionException, Configur\n \t\tString dir = \".\" + File.separator + \"remote\";\n \t\tString dumpFileName = \"javacore_alloc.txt\";\n \t\tString dumpFilePath = dir + File.separator + dumpFileName;\n+\n \t\tdiagBeanRemote.resetDumpOptions();\n+\n+\t\tString[] resetOptions = diagBeanRemote.queryDumpOptions();\n+\t\tfor (String option : resetOptions) {\n+\t\t\tif (option.startsWith(\"java:events=allocation\") || option.startsWith(\"java:events=catch\")) {\n+\t\t\t\tAssert.fail(\"Found unexpected dump option:\" + option);\n+\t\t\t}\n+\t\t}\n+\n \t\tdiagBeanRemote.setDumpOptions(\"java:events=allocation,filter=#1k,range=1..1,file=\" + dumpFilePath);\n \t\tdumpFileName = \"javacore_unsupported.txt\";\n-\t\tdumpFilePath = dir + File.separator + dumpFileName;\n-\t\tdiagBeanRemote.setDumpOptions(\"java:events=catch,filter=java/io/UnsupportedEncodingException,range=1..1,file=\" + dumpFilePath);\n+\t\tString catchDumpFilePath = dir + File.separator + dumpFileName;\n+\t\tdiagBeanRemote.setDumpOptions(\"java:events=catch,filter=java/io/UnsupportedEncodingException,range=1..1,file=\" + catchDumpFilePath);\n+\n+\t\tString[] options = diagBeanRemote.queryDumpOptions();\n+\t\tboolean allocOptionFound = false;\n+\t\tboolean catchOptionFound = false;\n+\t\tfor (String option : options) {\n+\t\t\t// The options get reordered and defaults added, check parts separately \n+\t\t\tif (option.startsWith(\"java:events=allocation,\") &&\n+\t\t\t\toption.contains(\",filter=#1k\") &&\n+\t\t\t\toption.contains(\",range=1..1\") &&\n+\t\t\t\toption.contains(dumpFilePath)\n+\t\t\t) {\n+\t\t\t\tallocOptionFound = true;\n+\t\t\t\tif (catchOptionFound) break;\n+\t\t\t}\n+\t\t\tif (option.startsWith(\"java:events=catch,\") &&\n+\t\t\t\t\toption.contains(\",filter=java/io/UnsupportedEncodingException\") &&\n+\t\t\t\t\toption.contains(\",range=1..1\") &&\n+\t\t\t\t\toption.contains(catchDumpFilePath)\n+\t\t\t\t) {\n+\t\t\t\t\tcatchOptionFound = true;\n+\t\t\t\t\tif (allocOptionFound) break;\n+\t\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI0NDY1OQ==", "bodyText": "trailing whitespace", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#discussion_r514244659", "createdAt": "2020-10-29T13:09:18Z", "author": {"login": "keithc-ca"}, "path": "test/functional/JLM_Tests/src/org/openj9/test/java/lang/management/TestOpenJ9DiagnosticsMXBean.java", "diffHunk": "@@ -339,11 +369,50 @@ private void testRemote_setDumpOptions() throws InvalidOptionException, Configur\n \t\tString dir = \".\" + File.separator + \"remote\";\n \t\tString dumpFileName = \"javacore_alloc.txt\";\n \t\tString dumpFilePath = dir + File.separator + dumpFileName;\n+\n \t\tdiagBeanRemote.resetDumpOptions();\n+\n+\t\tString[] resetOptions = diagBeanRemote.queryDumpOptions();\n+\t\tfor (String option : resetOptions) {\n+\t\t\tif (option.startsWith(\"java:events=allocation\") || option.startsWith(\"java:events=catch\")) {\n+\t\t\t\tAssert.fail(\"Found unexpected dump option:\" + option);\n+\t\t\t}\n+\t\t}\n+\n \t\tdiagBeanRemote.setDumpOptions(\"java:events=allocation,filter=#1k,range=1..1,file=\" + dumpFilePath);\n \t\tdumpFileName = \"javacore_unsupported.txt\";\n-\t\tdumpFilePath = dir + File.separator + dumpFileName;\n-\t\tdiagBeanRemote.setDumpOptions(\"java:events=catch,filter=java/io/UnsupportedEncodingException,range=1..1,file=\" + dumpFilePath);\n+\t\tString catchDumpFilePath = dir + File.separator + dumpFileName;\n+\t\tdiagBeanRemote.setDumpOptions(\"java:events=catch,filter=java/io/UnsupportedEncodingException,range=1..1,file=\" + catchDumpFilePath);\n+\n+\t\tString[] options = diagBeanRemote.queryDumpOptions();\n+\t\tboolean allocOptionFound = false;\n+\t\tboolean catchOptionFound = false;\n+\t\tfor (String option : options) {\n+\t\t\t// The options get reordered and defaults added, check parts separately \n+\t\t\tif (option.startsWith(\"java:events=allocation,\") &&\n+\t\t\t\toption.contains(\",filter=#1k\") &&\n+\t\t\t\toption.contains(\",range=1..1\") &&\n+\t\t\t\toption.contains(dumpFilePath)\n+\t\t\t) {\n+\t\t\t\tallocOptionFound = true;\n+\t\t\t\tif (catchOptionFound) break;\n+\t\t\t}\n+\t\t\tif (option.startsWith(\"java:events=catch,\") &&\n+\t\t\t\t\toption.contains(\",filter=java/io/UnsupportedEncodingException\") &&\n+\t\t\t\t\toption.contains(\",range=1..1\") &&\n+\t\t\t\t\toption.contains(catchDumpFilePath)\n+\t\t\t\t) {\n+\t\t\t\t\tcatchOptionFound = true;\n+\t\t\t\t\tif (allocOptionFound) break;\n+\t\t\t\t}\n+\t\t}\n+\t\tif (!allocOptionFound || !catchOptionFound) {\n+\t\t\tfor (String option : options) {\n+\t\t\t\tSystem.out.println(option);\n+\t\t\t}\n+\t\t\tAssert.fail(\"Failed to find expected dump options\");\n+\t\t}\n+\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54"}, "originalPosition": 95}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ad56b3958fc19b352ad7cbe243047e7aeadaf54", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3ad56b3958fc19b352ad7cbe243047e7aeadaf54", "committedDate": "2020-10-27T22:56:46Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nReplace test modes Mode100, Mode101 with NoOptions, otherwise the test\nonly runs in XL mode. Using these modes is historic and unnecessary.\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "1f5615bb77f7b59f34dda8c092cfec5ec8251183", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1f5615bb77f7b59f34dda8c092cfec5ec8251183", "committedDate": "2020-10-29T15:47:23Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nReplace test modes Mode100, Mode101 with NoOptions, otherwise the test\nonly runs in XL mode. Using these modes is historic and unnecessary.\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5ODUyNzUz", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#pullrequestreview-519852753", "createdAt": "2020-10-29T16:28:06Z", "commit": {"oid": "1f5615bb77f7b59f34dda8c092cfec5ec8251183"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNjoyODowNlrOHqkRLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNjoyODozOVrOHqkS2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5NjQ2Mw==", "bodyText": "I'm not sure why you modified these two lines, but there's a strange mix of indentation styles:\n\n384 starts with 4 spaces and a tab\n385 & 386 start with a tab, a space and a tab\n\nMaybe we should defer cleaning up that mess?", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#discussion_r514396463", "createdAt": "2020-10-29T16:28:06Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Dump.java", "diffHunk": "@@ -382,8 +382,8 @@ public static String systemDumpToFile(String fileNamePattern) throws InvalidDump\n     \t\trequest = \"system\"; //$NON-NLS-1$\n     \t}\n     \tString dump = null;\n-       \tdump = triggerDump(request, \"systemDumpToFile\"); //$NON-NLS-1$\n-       \treturn dump;\n+\t \tdump = triggerDump(request, \"systemDumpToFile\"); //$NON-NLS-1$\n+\t \treturn dump;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5615bb77f7b59f34dda8c092cfec5ec8251183"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM5Njg5MQ==", "bodyText": "nit: double space before 'the'", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#discussion_r514396891", "createdAt": "2020-10-29T16:28:39Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/openj9.jvm/share/classes/com/ibm/jvm/Dump.java", "diffHunk": "@@ -575,10 +575,10 @@ private static String triggerDump(String dumpSettings, String event) throws Inva\n \t}\n \n \t/**\n-     * Sets options for the dump subsystem.\n-     * The dump option is passed in as an String.\n-     * Use the same syntax as the -Xdump command-line option, with the initial -Xdump: omitted.\n-     * See Using the -Xdump option as described in the section on dump agents\n+\t * Sets options for the dump subsystem.\n+\t * The dump option is passed in as an String.\n+\t * Use the same syntax as the -Xdump command-line option, with the initial -Xdump: omitted.\n+\t * See  the -Xdump option section on dump agents", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5615bb77f7b59f34dda8c092cfec5ec8251183"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f5615bb77f7b59f34dda8c092cfec5ec8251183", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1f5615bb77f7b59f34dda8c092cfec5ec8251183", "committedDate": "2020-10-29T15:47:23Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nReplace test modes Mode100, Mode101 with NoOptions, otherwise the test\nonly runs in XL mode. Using these modes is historic and unnecessary.\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "8b20918e8446da8500959a4a1d44872ff1b771c5", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8b20918e8446da8500959a4a1d44872ff1b771c5", "committedDate": "2020-10-29T17:00:28Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nReplace test modes Mode100, Mode101 with NoOptions, otherwise the test\nonly runs in XL mode. Using these modes is historic and unnecessary.\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b724b244b7d1fee83af8099ef5fcded3725805f7", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b724b244b7d1fee83af8099ef5fcded3725805f7", "committedDate": "2020-10-29T17:03:36Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nReplace test modes Mode100, Mode101 with NoOptions, otherwise the test\nonly runs in XL mode. Using these modes is historic and unnecessary.\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b20918e8446da8500959a4a1d44872ff1b771c5", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8b20918e8446da8500959a4a1d44872ff1b771c5", "committedDate": "2020-10-29T17:00:28Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nReplace test modes Mode100, Mode101 with NoOptions, otherwise the test\nonly runs in XL mode. Using these modes is historic and unnecessary.\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}, "afterCommit": {"oid": "b724b244b7d1fee83af8099ef5fcded3725805f7", "author": {"user": {"login": "pshipton", "name": "Peter Shipton"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b724b244b7d1fee83af8099ef5fcded3725805f7", "committedDate": "2020-10-29T17:03:36Z", "message": "Add OpenJ9DiagnosticsMXBean queryDumpOptions() and tests\n\nReplace test modes Mode100, Mode101 with NoOptions, otherwise the test\nonly runs in XL mode. Using these modes is historic and unnecessary.\n\nMy original plan was to add a getter to correspond with\nsetDumpOptions(), however the Dump.queryDumpOptions() API returns a\nString[] containing the entire -Xdump configuration, like follows. Using\nthe name getDumpOptions() in the MXBean results in\n`javax.management.NotCompliantMBeanException: Getter and setter for\nDumpOptions have inconsistent types`.\n```\nsystem:events=gpf+abort+traceassert+corruptcache,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..0,priority=999,request=serial\nsystem:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/core.%Y%m%d.%H%M%S.%pid.%seq.dmp,range=1..1,priority=999,request=exclusive+compact+prepwalk\nheap:events=systhrow,filter=java/lang/OutOfMemoryError,file=/home/peter/heapdump.%Y%m%d.%H%M%S.%pid.%seq.phd,range=1..4,priority=500,request=exclusive+compact+prepwalk,opts=PHD\netc.\n```\n\nSigned-off-by: Peter Shipton <Peter_Shipton@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5OTk0Njgy", "url": "https://github.com/eclipse-openj9/openj9/pull/11016#pullrequestreview-519994682", "createdAt": "2020-10-29T19:15:26Z", "commit": {"oid": "b724b244b7d1fee83af8099ef5fcded3725805f7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 14, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}