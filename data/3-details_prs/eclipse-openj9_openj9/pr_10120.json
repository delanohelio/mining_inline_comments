{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDEzNzY1", "number": 10120, "title": "Part 1: JEP 360 Sealed Classes", "bodyText": "first part of: #9626\n\nclass verification/write to ROM class PermittedSubclasses attribute\nClass.isSealed and Class.permittedSubclasses implementation\ntests for new JCL methods\n\nSigned-off-by: Theresa Mammarella Theresa.T.Mammarella@ibm.com", "createdAt": "2020-07-08T18:30:43Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10120", "merged": true, "mergeCommit": {"oid": "01cb796fc18bb4b9bd14a57751ce02a6673ae524"}, "closed": true, "closedAt": "2020-07-14T00:46:56Z", "author": {"login": "theresa-m"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0jdwBgFqTQ0NzM3Nzk4OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0nVGGgBqjM1NDExNDczMDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3Mzc3OTg5", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#pullrequestreview-447377989", "createdAt": "2020-07-13T15:49:18Z", "commit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo0OToxOVrOGwut9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo0OToxOVrOGwut9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc1MDI2Mg==", "bodyText": "Please use a local to avoid the multiple returns.", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453750262", "createdAt": "2020-07-13T15:49:19Z", "author": {"login": "gacholio"}, "path": "runtime/bcutil/ClassFileOracle.hpp", "diffHunk": "@@ -973,6 +973,16 @@ class RecordComponentIterator\n \tbool needsStaticConstantInit() const { return _needsStaticConstantInit; }\n \tbool isRecord() const { return _isRecord; }\n \tU_16 getRecordComponentCount() const { return _recordComponentCount; }\n+\tbool isSealed() const { return _isSealed; }\n+\tU_16 getPermittedSubclassesClassCount() const { return _isSealed ? _permittedSubclassesAttribute->numberOfClasses : 0; }\n+\n+\tU_16 getPermittedSubclassesClassNameAtIndex(U_16 index) const {\n+\t\tif (!_isSealed) return 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3Mzg4NTU1", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#pullrequestreview-447388555", "createdAt": "2020-07-13T16:01:29Z", "commit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjowMToyOVrOGwvOEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjowMToyOVrOGwvOEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc1ODQ4MQ==", "bodyText": "This only returns NULL if passed NULL as the object, so I don't think you need to native OOM handling at all.", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453758481", "createdAt": "2020-07-13T16:01:29Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/reflecthelp.c", "diffHunk": "@@ -1952,3 +1952,72 @@ getRecordComponentsHelper(JNIEnv *env, jobject cls)\n \tvmFuncs->internalExitVMToJNI(vmThread);\n \treturn result;\n }\n+\n+/* Create an array of string names for class's PermittedSubclasses */\n+jarray\n+permittedSubclassesHelper(JNIEnv *env, jobject cls)\n+{\n+\tJ9VMThread *vmThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = vmThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tJ9MemoryManagerFunctions *mmFuncs = vm->memoryManagerFunctions;\n+\tJ9Class *clazz = NULL;\n+\tJ9ROMClass *romClass = NULL;\n+\tjarray result = NULL;\n+\tJ9Class *stringClass = NULL;\n+\tJ9Class *stringArrayClass = NULL;\n+\tU_32 *permittedSubclassesCountPtr = 0;\n+\tj9array_t stringArrayObject = NULL;\n+\n+\tvmFuncs->internalEnterVMFromJNI(vmThread);\n+\n+\tclazz = J9VM_J9CLASS_FROM_JCLASS(vmThread, (jclass)cls);\n+\tromClass = clazz->romClass;\n+\n+\t/* allocate String array for results */\n+\tstringClass = J9VMJAVALANGSTRING(vm);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\tstringArrayClass = fetchArrayClass(vmThread, stringClass);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\n+\tpermittedSubclassesCountPtr = getNumberOfPermittedSubclassesPtr(romClass);\n+\n+\tstringArrayObject = (j9array_t) mmFuncs->J9AllocateIndexableObject(vmThread, stringArrayClass,\n+\t\t\t\t*permittedSubclassesCountPtr, J9_GC_ALLOCATE_OBJECT_NON_INSTRUMENTABLE);\n+\tif (NULL == stringArrayObject) {\n+\t\tgoto heapoutofmemory;\n+\t}\n+\n+\tresult = vmFuncs->j9jni_createLocalRef(env, (j9object_t)stringArrayObject);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDA1ODUx", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#pullrequestreview-447405851", "createdAt": "2020-07-13T16:23:16Z", "commit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMzoxNlrOGwwDkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMzoxNlrOGwwDkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MjE3OA==", "bodyText": "If you or J9_STR_XLAT into the flags here, you could avoid the translation in the java code.", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453772178", "createdAt": "2020-07-13T16:23:16Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/reflecthelp.c", "diffHunk": "@@ -1952,3 +1952,72 @@ getRecordComponentsHelper(JNIEnv *env, jobject cls)\n \tvmFuncs->internalExitVMToJNI(vmThread);\n \treturn result;\n }\n+\n+/* Create an array of string names for class's PermittedSubclasses */\n+jarray\n+permittedSubclassesHelper(JNIEnv *env, jobject cls)\n+{\n+\tJ9VMThread *vmThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = vmThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tJ9MemoryManagerFunctions *mmFuncs = vm->memoryManagerFunctions;\n+\tJ9Class *clazz = NULL;\n+\tJ9ROMClass *romClass = NULL;\n+\tjarray result = NULL;\n+\tJ9Class *stringClass = NULL;\n+\tJ9Class *stringArrayClass = NULL;\n+\tU_32 *permittedSubclassesCountPtr = 0;\n+\tj9array_t stringArrayObject = NULL;\n+\n+\tvmFuncs->internalEnterVMFromJNI(vmThread);\n+\n+\tclazz = J9VM_J9CLASS_FROM_JCLASS(vmThread, (jclass)cls);\n+\tromClass = clazz->romClass;\n+\n+\t/* allocate String array for results */\n+\tstringClass = J9VMJAVALANGSTRING(vm);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\tstringArrayClass = fetchArrayClass(vmThread, stringClass);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\n+\tpermittedSubclassesCountPtr = getNumberOfPermittedSubclassesPtr(romClass);\n+\n+\tstringArrayObject = (j9array_t) mmFuncs->J9AllocateIndexableObject(vmThread, stringArrayClass,\n+\t\t\t\t*permittedSubclassesCountPtr, J9_GC_ALLOCATE_OBJECT_NON_INSTRUMENTABLE);\n+\tif (NULL == stringArrayObject) {\n+\t\tgoto heapoutofmemory;\n+\t}\n+\n+\tresult = vmFuncs->j9jni_createLocalRef(env, (j9object_t)stringArrayObject);\n+\tif (NULL == result) {\n+\t\tgoto nativeoutofmemory;\n+\t}\n+\n+\tfor (U_32 index = 0; index < *permittedSubclassesCountPtr; index++) {\n+\t\tJ9UTF8* nameUTF = NULL;\n+\t\tj9object_t nameString = NULL;\n+\n+\t\tnameUTF = permittedSubclassesNameAtIndex(permittedSubclassesCountPtr, index);\n+\t\tnameString = mmFuncs->j9gc_createJavaLangString(vmThread, J9UTF8_DATA(nameUTF), (U_32) J9UTF8_LENGTH(nameUTF), J9_STR_INTERN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDA3NjQ0", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#pullrequestreview-447407644", "createdAt": "2020-07-13T16:25:25Z", "commit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNToyNVrOGwwI5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNToyNVrOGwwI5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MzU0Mw==", "bodyText": "explaination is misspelled", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453773543", "createdAt": "2020-07-13T16:25:25Z", "author": {"login": "gacholio"}, "path": "runtime/nls/cfre/cfrerr.nls", "diffHunk": "@@ -1529,3 +1529,34 @@ J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.explanation=Please consult the Java Virtual Ma\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.user_response=Contact the provider of the classfile for a corrected version.\n # END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES=multiple PermittedSubclasses attributes\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDA3ODY0", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#pullrequestreview-447407864", "createdAt": "2020-07-13T16:25:39Z", "commit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNTozOVrOGwwJkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNTozOVrOGwwJkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MzcxMw==", "bodyText": "Same misspelling", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453773713", "createdAt": "2020-07-13T16:25:39Z", "author": {"login": "gacholio"}, "path": "runtime/nls/cfre/cfrerr.nls", "diffHunk": "@@ -1529,3 +1529,34 @@ J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.explanation=Please consult the Java Virtual Ma\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.user_response=Contact the provider of the classfile for a corrected version.\n # END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES=multiple PermittedSubclasses attributes\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.user_response=Contact the provider of the classfile for a corrected version.\n+# END NON-TRANSLATABLE\n+\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED=final classes cannot be sealed\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDA4MDQz", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#pullrequestreview-447408043", "createdAt": "2020-07-13T16:25:53Z", "commit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNTo1M1rOGwwKKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNTo1M1rOGwwKKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3Mzg2NQ==", "bodyText": "spelling", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453773865", "createdAt": "2020-07-13T16:25:53Z", "author": {"login": "gacholio"}, "path": "runtime/nls/cfre/cfrerr.nls", "diffHunk": "@@ -1529,3 +1529,34 @@ J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.explanation=Please consult the Java Virtual Ma\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.user_response=Contact the provider of the classfile for a corrected version.\n # END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES=multiple PermittedSubclasses attributes\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.user_response=Contact the provider of the classfile for a corrected version.\n+# END NON-TRANSLATABLE\n+\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED=final classes cannot be sealed\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.user_response=Contact the provider of the classfile for a corrected version.\n+# END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_NAME_NOT_UTF8=PermittedSubclasses name must be a string\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_NAME_NOT_UTF8.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDA4MTky", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#pullrequestreview-447408192", "createdAt": "2020-07-13T16:26:03Z", "commit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNjowNFrOGwwKhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNjowNFrOGwwKhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3Mzk1OA==", "bodyText": "spelling", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453773958", "createdAt": "2020-07-13T16:26:04Z", "author": {"login": "gacholio"}, "path": "runtime/nls/cfre/cfrerr.nls", "diffHunk": "@@ -1529,3 +1529,34 @@ J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.explanation=Please consult the Java Virtual Ma\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.user_response=Contact the provider of the classfile for a corrected version.\n # END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES=multiple PermittedSubclasses attributes\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.user_response=Contact the provider of the classfile for a corrected version.\n+# END NON-TRANSLATABLE\n+\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED=final classes cannot be sealed\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.user_response=Contact the provider of the classfile for a corrected version.\n+# END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_NAME_NOT_UTF8=PermittedSubclasses name must be a string\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_NAME_NOT_UTF8.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_NAME_NOT_UTF8.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_NAME_NOT_UTF8.user_response=Contact the provider of the classfile for a corrected version.\n+# END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_CLASS_ENTRY_NOT_CLASS_TYPE=PermittedSubclasses class entry is not a class type\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_CLASS_ENTRY_NOT_CLASS_TYPE.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDEwMzU3", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#pullrequestreview-447410357", "createdAt": "2020-07-13T16:28:37Z", "commit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyODozN1rOGwwRRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyODozN1rOGwwRRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3NTY4NA==", "bodyText": "Incorrect parameter list", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453775684", "createdAt": "2020-07-13T16:28:37Z", "author": {"login": "gacholio"}, "path": "runtime/oti/util_api.h", "diffHunk": "@@ -1274,6 +1274,26 @@ void validateLibrary(J9JavaVM *javaVM, J9NativeLibrary *library);\n \n /* ---------------- optinfo.c ---------------- */\n \n+/**\n+ * Retrieves number of permitted subclasses in this sealed class. Assumes that \n+ * ROM class parameter references a record class.\n+ * \n+ * @param J9ROMClass sealed class\n+ * @return U_32 number of permitted subclasses in optionalinfo\n+ */\n+U_32*\n+getNumberOfPermittedSubclassesPtr(J9ROMClass *romClass);\n+\n+/**\n+ * Find the permitted subclass name constant pool entry at index in the optional data of the ROM class parameter.\n+ * This method assumes there is at least one permitted subclass in the ROM class.\n+ * \n+ * @param J9UTF8* sealed class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDExMzY3", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#pullrequestreview-447411367", "createdAt": "2020-07-13T16:29:50Z", "commit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyOTo1MFrOGwwUYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyOTo1MFrOGwwUYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3NjQ4MQ==", "bodyText": "Will this not be NULL for unsealed classes? Likely better to NULL check around the SRP get and allow NULL to be returned.", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453776481", "createdAt": "2020-07-13T16:29:50Z", "author": {"login": "gacholio"}, "path": "runtime/util/optinfo.c", "diffHunk": "@@ -673,6 +673,24 @@ getLineNumberForROMClassFromROMMethod(J9JavaVM *vm, J9ROMMethod *romMethod, J9RO\n \treturn number;\n }\n \n+U_32*\n+getNumberOfPermittedSubclassesPtr(J9ROMClass *romClass)\n+{\n+\tU_32 *ptr = getSRPPtr(J9ROMCLASS_OPTIONALINFO(romClass), romClass->optionalFlags, J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE);\n+\n+\tAssert_VMUtil_true(ptr != NULL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDExNzEy", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#pullrequestreview-447411712", "createdAt": "2020-07-13T16:30:15Z", "commit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjozMDoxNVrOGwwVgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjozMDoxNVrOGwwVgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3Njc2OQ==", "bodyText": "{ on a new line please", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453776769", "createdAt": "2020-07-13T16:30:15Z", "author": {"login": "gacholio"}, "path": "runtime/util/optinfo.c", "diffHunk": "@@ -673,6 +673,24 @@ getLineNumberForROMClassFromROMMethod(J9JavaVM *vm, J9ROMMethod *romMethod, J9RO\n \treturn number;\n }\n \n+U_32*\n+getNumberOfPermittedSubclassesPtr(J9ROMClass *romClass)\n+{\n+\tU_32 *ptr = getSRPPtr(J9ROMCLASS_OPTIONALINFO(romClass), romClass->optionalFlags, J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE);\n+\n+\tAssert_VMUtil_true(ptr != NULL);\n+\n+\treturn SRP_PTR_GET(ptr, U_32*);\n+}\n+\n+J9UTF8*\n+permittedSubclassesNameAtIndex(U_32* permittedSubclassesCountPtr, U_32 index) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a333e62792b3222c0e1ec9e6c5a747f50e2e149", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0a333e62792b3222c0e1ec9e6c5a747f50e2e149", "committedDate": "2020-07-13T18:38:53Z", "message": "Write PermittedSubclasses attribute to ROM class\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "774b7c5f225c89df9b446223d941ac1a8fe526de", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/774b7c5f225c89df9b446223d941ac1a8fe526de", "committedDate": "2020-07-13T18:38:53Z", "message": "New JCL Class.isSealed method and tests\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1f964b372a6ab8d90560feea291992342cd27e8", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a1f964b372a6ab8d90560feea291992342cd27e8", "committedDate": "2020-07-13T18:38:53Z", "message": "New JCL Class.permittedSubclasses method and tests\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e498c8de8cd094cdaa2c3cc6d8118233ec800d8", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0e498c8de8cd094cdaa2c3cc6d8118233ec800d8", "committedDate": "2020-07-13T18:38:54Z", "message": "Update Subclasses from Subtypes\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6612dade2ae6a624599c2047582d1c0c16dd8ba", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a6612dade2ae6a624599c2047582d1c0c16dd8ba", "committedDate": "2020-07-13T18:37:40Z", "message": "Review"}, "afterCommit": {"oid": "080f1c3880d4549146260d941959f6870cbdb6ce", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/080f1c3880d4549146260d941959f6870cbdb6ce", "committedDate": "2020-07-13T18:38:57Z", "message": "First review changes\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NTU3NzEy", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#pullrequestreview-447557712", "createdAt": "2020-07-13T19:58:57Z", "commit": {"oid": "080f1c3880d4549146260d941959f6870cbdb6ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTo1ODo1N1rOGw3rpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTo1ODo1N1rOGw3rpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg5NzEyNw==", "bodyText": "Windows does not allow declarations inside for statements in C files.", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453897127", "createdAt": "2020-07-13T19:58:57Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/reflecthelp.c", "diffHunk": "@@ -1957,3 +1957,66 @@ getRecordComponentsHelper(JNIEnv *env, jobject cls)\n \tvmFuncs->internalExitVMToJNI(vmThread);\n \treturn result;\n }\n+\n+/* Create an array of string names for class's PermittedSubclasses */\n+jarray\n+permittedSubclassesHelper(JNIEnv *env, jobject cls)\n+{\n+\tJ9VMThread *vmThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = vmThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tJ9MemoryManagerFunctions *mmFuncs = vm->memoryManagerFunctions;\n+\tJ9Class *clazz = NULL;\n+\tJ9ROMClass *romClass = NULL;\n+\tjarray result = NULL;\n+\tJ9Class *stringClass = NULL;\n+\tJ9Class *stringArrayClass = NULL;\n+\tU_32 *permittedSubclassesCountPtr = 0;\n+\tj9array_t stringArrayObject = NULL;\n+\n+\tvmFuncs->internalEnterVMFromJNI(vmThread);\n+\n+\tclazz = J9VM_J9CLASS_FROM_JCLASS(vmThread, (jclass)cls);\n+\tromClass = clazz->romClass;\n+\n+\t/* allocate String array for results */\n+\tstringClass = J9VMJAVALANGSTRING(vm);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\tstringArrayClass = fetchArrayClass(vmThread, stringClass);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\n+\tpermittedSubclassesCountPtr = getNumberOfPermittedSubclassesPtr(romClass);\n+\n+\tstringArrayObject = (j9array_t) mmFuncs->J9AllocateIndexableObject(vmThread, stringArrayClass,\n+\t\t\t\t*permittedSubclassesCountPtr, J9_GC_ALLOCATE_OBJECT_NON_INSTRUMENTABLE);\n+\tif (NULL == stringArrayObject) {\n+\t\tgoto heapoutofmemory;\n+\t}\n+\n+\tresult = vmFuncs->j9jni_createLocalRef(env, (j9object_t)stringArrayObject);\n+\n+\tfor (U_32 index = 0; index < *permittedSubclassesCountPtr; index++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "080f1c3880d4549146260d941959f6870cbdb6ce"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11d61611ce44d8115eac32f349f361e34759170d", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/11d61611ce44d8115eac32f349f361e34759170d", "committedDate": "2020-07-13T20:19:18Z", "message": "First review changes\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "080f1c3880d4549146260d941959f6870cbdb6ce", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/080f1c3880d4549146260d941959f6870cbdb6ce", "committedDate": "2020-07-13T18:38:57Z", "message": "First review changes\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}, "afterCommit": {"oid": "11d61611ce44d8115eac32f349f361e34759170d", "author": {"user": {"login": "theresa-m", "name": "Theresa Mammarella"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/11d61611ce44d8115eac32f349f361e34759170d", "committedDate": "2020-07-13T20:19:18Z", "message": "First review changes\n\nSigned-off-by: Theresa Mammarella <Theresa.T.Mammarella@ibm.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 537, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}