{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0Mjc3NzI1", "number": 10352, "title": "Create JIT helper functions on checking flattened fields", "bodyText": "Create JIT helper functions on checking flattened fields.\nSigned-off-by: Annabelle Huo Annabelle.Huo@ibm.com", "createdAt": "2020-08-06T21:41:12Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10352", "merged": true, "mergeCommit": {"oid": "201cd3073968953d9c340cddac6a6853321820a4"}, "closed": true, "closedAt": "2020-08-25T19:40:00Z", "author": {"login": "a7ehuo"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9k-SogFqTQ2NDM5NjU1OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCciQ1gFqTQ3NDc5NTA4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0Mzk2NTU5", "url": "https://github.com/eclipse-openj9/openj9/pull/10352#pullrequestreview-464396559", "createdAt": "2020-08-10T16:40:05Z", "commit": {"oid": "572f7b77b20d1e5c4e4c0a12430669aa6b08d004"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjo0MDowNVrOG-WrZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjo0MDowNVrOG-WrZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAzNjQ1Mw==", "bodyText": "This seems inefficient, especially considering this method may be called for every field in an object (effectively making the traversal O(n2)). To make this more efficient, I was thinking that maybe this information could be stored in the TypeLayout/TypeLayoutEntry classes? TypeLayout also seems like a more natural place to ask this question, rather than the TR_ResolvedJ9Method.", "url": "https://github.com/eclipse-openj9/openj9/pull/10352#discussion_r468036453", "createdAt": "2020-08-10T16:40:05Z", "author": {"login": "Leonardo2718"}, "path": "runtime/compiler/env/j9method.cpp", "diffHunk": "@@ -9412,3 +9413,50 @@ TR_J9ByteCodeIlGenerator::packReferenceChainOffsets(TR::Node *node, std::vector<\n    return;\n    }\n #endif\n+\n+bool\n+TR_ResolvedJ9Method::isFieldQType(TR::Compilation *comp, int32_t cpIndex)\n+   {\n+   if (!TR::Compiler->om.areValueTypesEnabled() ||\n+      (-1 == cpIndex))\n+      return false;\n+\n+   J9ROMFieldRef *ref = (J9ROMFieldRef *) (&romCPBase()[cpIndex]);\n+   J9ROMNameAndSignature *nameAndSignature = J9ROMFIELDREF_NAMEANDSIGNATURE(ref);\n+   J9UTF8 *signature = J9ROMNAMEANDSIGNATURE_SIGNATURE(nameAndSignature);\n+\n+   J9JavaVM *vm = comp->fej9()->getJ9JITConfig()->javaVM;\n+   return vm->internalVMFunctions->isNameOrSignatureQtype(signature);\n+   }\n+\n+bool\n+TR_ResolvedJ9Method::isFieldFlattened(TR::Compilation *comp, int32_t cpIndex)\n+   {\n+   if (!TR::Compiler->om.areValueTypesEnabled() ||\n+      (-1 == cpIndex))\n+      return false;\n+\n+   // Assumes the field is a QType.\n+   int32_t fieldNameLength;\n+   const char *fieldName = fieldNameChars(cpIndex, fieldNameLength);\n+   int32_t sigLength;\n+   const char *fieldSignature = fieldSignatureChars(cpIndex, sigLength);\n+\n+   bool isStatic;\n+   TR_OpaqueClassBlock *containingClass = definingClassFromCPFieldRef(comp, cpIndex, isStatic);\n+   TR_VMFieldsInfo fieldsInfo(comp, reinterpret_cast<J9Class*>(containingClass), 1, stackAlloc);\n+   ListIterator<TR_VMField> iter(fieldsInfo.getFields());\n+\n+   for (TR_VMField *field = iter.getFirst(); field; field = iter.getNext())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "572f7b77b20d1e5c4e4c0a12430669aa6b08d004"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "572f7b77b20d1e5c4e4c0a12430669aa6b08d004", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/572f7b77b20d1e5c4e4c0a12430669aa6b08d004", "committedDate": "2020-08-06T21:39:29Z", "message": "Create JIT helper functions on checking flattened fields\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "65e5f0667cc41df15b4e2690a56b334c5b6d2cfb", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/65e5f0667cc41df15b4e2690a56b334c5b6d2cfb", "committedDate": "2020-08-11T17:27:50Z", "message": "Create JIT helper functions on checking flattened fields\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65e5f0667cc41df15b4e2690a56b334c5b6d2cfb", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/65e5f0667cc41df15b4e2690a56b334c5b6d2cfb", "committedDate": "2020-08-11T17:27:50Z", "message": "Create JIT helper functions on checking flattened fields\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "688823b3c6f78f391a7f004f7284f4d43e89b27f", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/688823b3c6f78f391a7f004f7284f4d43e89b27f", "committedDate": "2020-08-13T17:11:49Z", "message": "Create JIT helper functions on checking flattened fields\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5Njg5MzMz", "url": "https://github.com/eclipse-openj9/openj9/pull/10352#pullrequestreview-469689333", "createdAt": "2020-08-18T17:48:35Z", "commit": {"oid": "688823b3c6f78f391a7f004f7284f4d43e89b27f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo0ODozNVrOHCfgEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo0ODozNVrOHCfgEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NTMxNA==", "bodyText": "Why does this have to be done under the lock? Since the string is in the constant pool and we don't need to do resolution to look at it?", "url": "https://github.com/eclipse-openj9/openj9/pull/10352#discussion_r472375314", "createdAt": "2020-08-18T17:48:35Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/env/j9method.cpp", "diffHunk": "@@ -9412,3 +9418,34 @@ TR_J9ByteCodeIlGenerator::packReferenceChainOffsets(TR::Node *node, std::vector<\n    return;\n    }\n #endif\n+\n+bool\n+TR_ResolvedJ9Method::isFieldQType(int32_t cpIndex)\n+   {\n+   if (!TR::Compiler->om.areValueTypesEnabled() ||\n+      (-1 == cpIndex))\n+      return false;\n+\n+   J9VMThread *vmThread = fej9()->vmThread();\n+   J9ROMFieldRef *ref = (J9ROMFieldRef *) (&romCPBase()[cpIndex]);\n+   J9ROMNameAndSignature *nameAndSignature = J9ROMFIELDREF_NAMEANDSIGNATURE(ref);\n+   J9UTF8 *signature = J9ROMNAMEANDSIGNATURE_SIGNATURE(nameAndSignature);\n+   TR::VMAccessCriticalSection isFieldQType(fej9());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "688823b3c6f78f391a7f004f7284f4d43e89b27f"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NjkwMDM4", "url": "https://github.com/eclipse-openj9/openj9/pull/10352#pullrequestreview-469690038", "createdAt": "2020-08-18T17:49:35Z", "commit": {"oid": "688823b3c6f78f391a7f004f7284f4d43e89b27f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo0OTozNVrOHCfiUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo0OTozNVrOHCfiUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NTg5MA==", "bodyText": "I'm guessing the lock is needed here because we might need to decide to flatten the field for the first time and might need to update the VM in some way?", "url": "https://github.com/eclipse-openj9/openj9/pull/10352#discussion_r472375890", "createdAt": "2020-08-18T17:49:35Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/env/j9method.cpp", "diffHunk": "@@ -9412,3 +9418,34 @@ TR_J9ByteCodeIlGenerator::packReferenceChainOffsets(TR::Node *node, std::vector<\n    return;\n    }\n #endif\n+\n+bool\n+TR_ResolvedJ9Method::isFieldQType(int32_t cpIndex)\n+   {\n+   if (!TR::Compiler->om.areValueTypesEnabled() ||\n+      (-1 == cpIndex))\n+      return false;\n+\n+   J9VMThread *vmThread = fej9()->vmThread();\n+   J9ROMFieldRef *ref = (J9ROMFieldRef *) (&romCPBase()[cpIndex]);\n+   J9ROMNameAndSignature *nameAndSignature = J9ROMFIELDREF_NAMEANDSIGNATURE(ref);\n+   J9UTF8 *signature = J9ROMNAMEANDSIGNATURE_SIGNATURE(nameAndSignature);\n+   TR::VMAccessCriticalSection isFieldQType(fej9());\n+\n+   return vmThread->javaVM->internalVMFunctions->isNameOrSignatureQtype(signature);\n+   }\n+\n+bool\n+TR_ResolvedJ9Method::isFieldFlattened(TR::Compilation *comp, int32_t cpIndex, bool isStatic)\n+   {\n+   if (!TR::Compiler->om.areValueTypesEnabled() ||\n+      (-1 == cpIndex))\n+      return false;\n+\n+   J9VMThread *vmThread = fej9()->vmThread();\n+   J9ROMFieldShape *fieldShape = NULL; \n+   TR_OpaqueClassBlock *containingClass = definingClassAndFieldShapeFromCPFieldRef(comp, cp(), cpIndex, isStatic, &fieldShape);\n+   TR::VMAccessCriticalSection isFieldFlattened(fej9());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "688823b3c6f78f391a7f004f7284f4d43e89b27f"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NjkwMzc1", "url": "https://github.com/eclipse-openj9/openj9/pull/10352#pullrequestreview-469690375", "createdAt": "2020-08-18T17:50:04Z", "commit": {"oid": "688823b3c6f78f391a7f004f7284f4d43e89b27f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1MDowNFrOHCfjUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzo1MDowNFrOHCfjUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM3NjE0Ng==", "bodyText": "can you please add doxygen for the new APIs please?", "url": "https://github.com/eclipse-openj9/openj9/pull/10352#discussion_r472376146", "createdAt": "2020-08-18T17:50:04Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/env/j9method.h", "diffHunk": "@@ -509,6 +510,9 @@ class TR_ResolvedJ9Method : public TR_J9Method, public TR_ResolvedJ9MethodBase\n     */\n    virtual void makeParameterList(TR::ResolvedMethodSymbol *methodSym);\n \n+   virtual bool isFieldQType(int32_t cpIndex);\n+   virtual bool isFieldFlattened(TR::Compilation *comp, int32_t cpIndex, bool isStatic);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "688823b3c6f78f391a7f004f7284f4d43e89b27f"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "688823b3c6f78f391a7f004f7284f4d43e89b27f", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/688823b3c6f78f391a7f004f7284f4d43e89b27f", "committedDate": "2020-08-13T17:11:49Z", "message": "Create JIT helper functions on checking flattened fields\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "e9745e7dbedf58e204da32e13d37a0c3b52df22d", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e9745e7dbedf58e204da32e13d37a0c3b52df22d", "committedDate": "2020-08-18T21:25:39Z", "message": "Create JIT helper functions on checking flattened fields\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b680196cdee54cd185340e287e13ad924b9052a", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9b680196cdee54cd185340e287e13ad924b9052a", "committedDate": "2020-08-19T14:54:50Z", "message": "Create JIT helper functions on checking flattened fields\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9745e7dbedf58e204da32e13d37a0c3b52df22d", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e9745e7dbedf58e204da32e13d37a0c3b52df22d", "committedDate": "2020-08-18T21:25:39Z", "message": "Create JIT helper functions on checking flattened fields\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "9b680196cdee54cd185340e287e13ad924b9052a", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9b680196cdee54cd185340e287e13ad924b9052a", "committedDate": "2020-08-19T14:54:50Z", "message": "Create JIT helper functions on checking flattened fields\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNjQ2NjI4", "url": "https://github.com/eclipse-openj9/openj9/pull/10352#pullrequestreview-470646628", "createdAt": "2020-08-19T16:40:29Z", "commit": {"oid": "9b680196cdee54cd185340e287e13ad924b9052a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc0Nzk1MDg1", "url": "https://github.com/eclipse-openj9/openj9/pull/10352#pullrequestreview-474795085", "createdAt": "2020-08-25T19:39:51Z", "commit": {"oid": "9b680196cdee54cd185340e287e13ad924b9052a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 105, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}