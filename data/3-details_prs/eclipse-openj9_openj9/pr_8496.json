{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwOTM1NTAx", "number": 8496, "title": "Improve performance on a full shared cache.", "bodyText": "We see a significant slow down of startup speed when there are\nmany JVMs queuing for the write mutex of a full cache. It is not\nnecessary to acquire the write mutex in this case.\nReturn from j9shr_classStoreTransaction_start() after acquiring the\nsegment mutex but before acquiring the cache write mutex if the cache is\nfull.\nSigned-off-by: Hang Shao hangshao@ca.ibm.com", "createdAt": "2020-02-04T16:35:44Z", "url": "https://github.com/eclipse-openj9/openj9/pull/8496", "merged": true, "mergeCommit": {"oid": "342a8c5a9077d39879c0f623d00e9d8d148cd597"}, "closed": true, "closedAt": "2020-02-07T02:46:38Z", "author": {"login": "hangshao0"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBESAvABqjMwMDY4MzgxNzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcB2Kl7gFqTM1NDkwMzUyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cadb8ca203cf7b19d3add59c980605f947b4f57b", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/cadb8ca203cf7b19d3add59c980605f947b4f57b", "committedDate": "2020-02-04T16:34:35Z", "message": "Improve performance on a full shared cache.\n\nWe see a significant slow down of startup speed when there are\nmany JVMs queuing for the write mutex of a full cache. It is not\nnecessary to acquire the write mutex in this case.\n\nReturn from j9shr_classStoreTransaction_start() after acquiring the\nsegment mutex but before acquiring the cache write mutex if the cache is\nfull.\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}, "afterCommit": {"oid": "44bd2f3d0c3da263be5254ee3de4922dd1a5861c", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/44bd2f3d0c3da263be5254ee3de4922dd1a5861c", "committedDate": "2020-02-04T16:38:57Z", "message": "Improve performance on a full shared cache.\n\nWe see a significant slow down of startup speed when there are\nmany JVMs queuing for the write mutex of a full cache. It is not\nnecessary to acquire the write mutex in this case.\n\nReturn from j9shr_classStoreTransaction_start() after acquiring the\nsegment mutex but before acquiring the cache write mutex if the cache is\nfull.\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMTYyNTI4", "url": "https://github.com/eclipse-openj9/openj9/pull/8496#pullrequestreview-353162528", "createdAt": "2020-02-04T17:26:37Z", "commit": {"oid": "44bd2f3d0c3da263be5254ee3de4922dd1a5861c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzoyNjozN1rOFlc0LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxNzoyNjozN1rOFlc0LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDgxMzc0MQ==", "bodyText": "I added this check because when reaching this point, we do not have write mutex if the cache is full/soft full. Without this check,  j9shr_classStoreTransaction_createSharedClass() does not guarantee returning on checking J9SHR_RUNTIMEFLAG_AVAILABLE_SPACE_FULL from localRuntimeFlags (Another thread that has write mutex may unset this flag), leading to unexpected behavior.", "url": "https://github.com/eclipse-openj9/openj9/pull/8496#discussion_r374813741", "createdAt": "2020-02-04T17:26:37Z", "author": {"login": "hangshao0"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -608,32 +608,37 @@ ROMClassBuilder::prepareAndLaydown( BufferManager *bufferManager, ClassFileParse\n \t\t\tsizeRequirements.lineNumberTableSize = U_32(sizeInformation.lineNumberSize);\n \t\t\tsizeRequirements.localVariableTableSize = U_32(sizeInformation.variableInfoSize);\n \n-\t\t\tif ( sharedStoreClassTransaction.allocateSharedClass(&sizeRequirements) ){\n-\t\t\t\tU_8 *romClassBuffer = (U_8*)sharedStoreClassTransaction.getRomClass();\n-\t\t\t\t/*\n-\t\t\t\t * Make note that the laydown is occurring in SharedClasses\n-\t\t\t\t */\n-\t\t\t\tromSize = finishPrepareAndLaydown(\n-\t\t\t\t\t\t(U_8*)sharedStoreClassTransaction.getRomClass(),\n-\t\t\t\t\t\t(U_8*)sharedStoreClassTransaction.getLineNumberTable(),\n-\t\t\t\t\t\t(U_8*)sharedStoreClassTransaction.getLocalVariableTable(),\n-\t\t\t\t\t\t&sizeInformation, modifiers, extraModifiers, optionalFlags,\n-\t\t\t\t\t\ttrue, sharedStoreClassTransaction.hasSharedStringTableLock(),\n-\t\t\t\t\t\t&classFileOracle, &srpOffsetTable, &srpKeyProducer, &romClassWriter,\n-\t\t\t\t\t\tcontext, &constantPoolMap\n-\t\t\t\t\t\t);\n-\n-\t\t\t\tfixReturnBytecodes(_portLibrary, (J9ROMClass *)romClassBuffer);\n+\t\t\tif (!sharedStoreClassTransaction.isCacheFull()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44bd2f3d0c3da263be5254ee3de4922dd1a5861c"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMjA5MjM3", "url": "https://github.com/eclipse-openj9/openj9/pull/8496#pullrequestreview-353209237", "createdAt": "2020-02-04T18:39:01Z", "commit": {"oid": "44bd2f3d0c3da263be5254ee3de4922dd1a5861c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxODozOTowMlrOFlfEQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxODozOTowN1rOFlfEcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg1MDYyNQ==", "bodyText": "Why the check for TSTATE_ENTER_SEGMENTMUTEX?", "url": "https://github.com/eclipse-openj9/openj9/pull/8496#discussion_r374850625", "createdAt": "2020-02-04T18:39:02Z", "author": {"login": "pshipton"}, "path": "runtime/shared_common/SCImplementedAPI.cpp", "diffHunk": "@@ -770,7 +792,9 @@ j9shr_classStoreTransaction_nextSharedClassForCompare(void * tobj)\n \n \tTrc_SHR_API_j9shr_nextSharedClassForCompare_Entry(currentThread);\n \n-\tif (obj->transactionState != TSTATE_ENTER_WRITEMUTEX) {\n+\tif ((obj->transactionState != TSTATE_ENTER_WRITEMUTEX)\n+\t\t&& ((0 == obj->cacheFullFlags) || (obj->transactionState != TSTATE_ENTER_SEGMENTMUTEX))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44bd2f3d0c3da263be5254ee3de4922dd1a5861c"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg1MDY3NQ==", "bodyText": "Do these need to be level 1? They could be occurring quite often when the cache is full.", "url": "https://github.com/eclipse-openj9/openj9/pull/8496#discussion_r374850675", "createdAt": "2020-02-04T18:39:07Z", "author": {"login": "pshipton"}, "path": "runtime/shared_common/j9shr.tdf", "diffHunk": "@@ -2984,3 +2984,6 @@ TraceEvent=Trc_SHR_CM_storeCacheUniqueID_generateCacheUniqueID_after Overhead=1\n \n TraceEvent=Trc_SHR_CC_startup_getCacheUniqueID_before Overhead=1 Level=7 Template=\"CC::startup(): getCacheUniqueID() - (createTime: %llx, metadataBytes: %zx, classesBytes: %zx, lineNumTabBytes: %zx, varTabBytes: %zx) \"\n TraceEvent=Trc_SHR_CC_startup_getCacheUniqueID_after Overhead=1 Level=7 Template=\"CC::startup(): getCacheUniqueID() - the cache unique ID is %s\"\n+\n+TraceEvent=Trc_SHR_API_j9shr_classStoreTransaction_start_cacheFull_Event Overhead=1 Level=1 Template=\"API j9shr_classStoreTransaction_start : J9SHR_RUNTIMEFLAG_BLOCK_SPACE_FULL is set. The shared cache is full\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44bd2f3d0c3da263be5254ee3de4922dd1a5861c"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44bd2f3d0c3da263be5254ee3de4922dd1a5861c", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/44bd2f3d0c3da263be5254ee3de4922dd1a5861c", "committedDate": "2020-02-04T16:38:57Z", "message": "Improve performance on a full shared cache.\n\nWe see a significant slow down of startup speed when there are\nmany JVMs queuing for the write mutex of a full cache. It is not\nnecessary to acquire the write mutex in this case.\n\nReturn from j9shr_classStoreTransaction_start() after acquiring the\nsegment mutex but before acquiring the cache write mutex if the cache is\nfull.\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}, "afterCommit": {"oid": "3cb5e7a342fa56525a5d7c94f6ef1150b43c7a21", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3cb5e7a342fa56525a5d7c94f6ef1150b43c7a21", "committedDate": "2020-02-04T21:58:42Z", "message": "Improve performance on a full shared cache.\n\nWe see a significant slow down of startup speed when there are\nmany JVMs queuing for the write mutex of a full cache. It is not\nnecessary to acquire the write mutex in this case.\n\nReturn from j9shr_classStoreTransaction_start() after acquiring the\nsegment mutex but before acquiring the cache write mutex if the cache is\nfull.\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3cb5e7a342fa56525a5d7c94f6ef1150b43c7a21", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3cb5e7a342fa56525a5d7c94f6ef1150b43c7a21", "committedDate": "2020-02-04T21:58:42Z", "message": "Improve performance on a full shared cache.\n\nWe see a significant slow down of startup speed when there are\nmany JVMs queuing for the write mutex of a full cache. It is not\nnecessary to acquire the write mutex in this case.\n\nReturn from j9shr_classStoreTransaction_start() after acquiring the\nsegment mutex but before acquiring the cache write mutex if the cache is\nfull.\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}, "afterCommit": {"oid": "0581f2c19032c50b6258be2363e0477b105f4c2e", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0581f2c19032c50b6258be2363e0477b105f4c2e", "committedDate": "2020-02-05T18:32:20Z", "message": "Improve performance on a full shared cache.\n\nWe see a significant slow down of startup speed when there are\nmany JVMs queuing for the write mutex of a full cache. It is not\nnecessary to acquire the write mutex in this case.\n\nReturn from j9shr_classStoreTransaction_start() after acquiring the\nsegment mutex but before acquiring the cache write mutex if the cache is\nfull.\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0581f2c19032c50b6258be2363e0477b105f4c2e", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0581f2c19032c50b6258be2363e0477b105f4c2e", "committedDate": "2020-02-05T18:32:20Z", "message": "Improve performance on a full shared cache.\n\nWe see a significant slow down of startup speed when there are\nmany JVMs queuing for the write mutex of a full cache. It is not\nnecessary to acquire the write mutex in this case.\n\nReturn from j9shr_classStoreTransaction_start() after acquiring the\nsegment mutex but before acquiring the cache write mutex if the cache is\nfull.\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}, "afterCommit": {"oid": "ba0e095a667dad751c6df65a4601ce0ea3763110", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ba0e095a667dad751c6df65a4601ce0ea3763110", "committedDate": "2020-02-06T17:41:49Z", "message": "Improve performance on a full shared cache.\n\nWe see a significant slow down of startup speed when there are\nmany JVMs queuing for the write mutex of a full cache. It is not\nnecessary to acquire the write mutex in this case.\n\nReturn from j9shr_classStoreTransaction_start() after acquiring the\nsegment mutex but before acquiring the cache write mutex if the cache is\nfull.\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c14e1416a83ed785d2714806d3f76d488c047e7", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4c14e1416a83ed785d2714806d3f76d488c047e7", "committedDate": "2020-02-06T19:21:31Z", "message": "Improve performance on a full shared cache.\n\nWe see a significant slow down of startup speed when there are\nmany JVMs queuing for the write mutex of a full cache. It is not\nnecessary to acquire the write mutex in this case.\n\nReturn from j9shr_classStoreTransaction_start() after acquiring the\nsegment mutex but before acquiring the cache write mutex if the cache is\nfull.\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba0e095a667dad751c6df65a4601ce0ea3763110", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ba0e095a667dad751c6df65a4601ce0ea3763110", "committedDate": "2020-02-06T17:41:49Z", "message": "Improve performance on a full shared cache.\n\nWe see a significant slow down of startup speed when there are\nmany JVMs queuing for the write mutex of a full cache. It is not\nnecessary to acquire the write mutex in this case.\n\nReturn from j9shr_classStoreTransaction_start() after acquiring the\nsegment mutex but before acquiring the cache write mutex if the cache is\nfull.\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}, "afterCommit": {"oid": "4c14e1416a83ed785d2714806d3f76d488c047e7", "author": {"user": {"login": "hangshao0", "name": "Hang Shao"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4c14e1416a83ed785d2714806d3f76d488c047e7", "committedDate": "2020-02-06T19:21:31Z", "message": "Improve performance on a full shared cache.\n\nWe see a significant slow down of startup speed when there are\nmany JVMs queuing for the write mutex of a full cache. It is not\nnecessary to acquire the write mutex in this case.\n\nReturn from j9shr_classStoreTransaction_start() after acquiring the\nsegment mutex but before acquiring the cache write mutex if the cache is\nfull.\n\nSigned-off-by: Hang Shao <hangshao@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTAzNTIw", "url": "https://github.com/eclipse-openj9/openj9/pull/8496#pullrequestreview-354903520", "createdAt": "2020-02-07T02:46:28Z", "commit": {"oid": "4c14e1416a83ed785d2714806d3f76d488c047e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 743, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}