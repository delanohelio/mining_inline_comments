{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NzkzMjcz", "number": 10519, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzo0MDo0N1rOEgMLrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzo0MDo0N1rOEgMLrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTg5NDg0OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/Trampoline.cpp", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QyMzo0MDo0N1rOHM60iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNjoxOTozMlrOHPPbNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMwODY4MQ==", "bodyText": "Should not it be shift left by 14, not 16 ?", "url": "https://github.com/eclipse-openj9/openj9/pull/10519#discussion_r483308681", "createdAt": "2020-09-03T23:40:47Z", "author": {"login": "gita-omr"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -480,25 +480,36 @@ bool ppcCodePatching(void *method, void *callSite, void *currentPC, void *curren\n \n          oldBits = *(int32_t *)((uint8_t *)callSite - encodingStartOffset);     // The load of the first IPIC cache slot or rldimi\n #if defined(TR_TARGET_64BIT)\n-         if (((oldBits>>26) & 0x0000003F) != 30)\n+         if (TR::Compiler->target.cpu.isAtLeast(OMR_PROCESSOR_PPC_P10))\n             {\n-            // PTOC was used, oldBits is ld\n-            currentDistance = oldBits<<16>>16;\n-            if (((oldBits>>16) & 0x0000001F) == 12)\n-               {\n-               oldBits = *(int32_t *)((uint8_t *)callSite - encodingStartOffset - 4);\n-               currentDistance += oldBits<<16;\n-               }\n-            patchAddr = *(uint8_t **)(*(intptr_t *)extra + currentDistance);\n+            // oldBits is the latter half of paddi\n+            distance = ((*(int32_t *)((uint8_t *)callSite - encodingStartOffset - 4)) & 0x0003FFFF) << 16;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcd9772caa2b5650cd593722e4619d49caf0f528"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzczNTI3NA==", "bodyText": "no, it should be shift left by 16.  the 34-bit offset is composed of  (top-18-bit << 16) |  (bottom-16-bit).  shift left by 14 will overlap two bits, and the whole offset will be 32bit at most.\nyour comment did remind me of the possibility of losing bits, if the shift is conducted on a 32-bit type.  so, i type-cast the 18-bit to intptr_t in order to not lose bits possibly.  in reality, it cannot happen though (since this particular offset must be positive and less than this particular method compiled length).  amend this commit as below.", "url": "https://github.com/eclipse-openj9/openj9/pull/10519#discussion_r483735274", "createdAt": "2020-09-04T16:35:48Z", "author": {"login": "zl-wang"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -480,25 +480,36 @@ bool ppcCodePatching(void *method, void *callSite, void *currentPC, void *curren\n \n          oldBits = *(int32_t *)((uint8_t *)callSite - encodingStartOffset);     // The load of the first IPIC cache slot or rldimi\n #if defined(TR_TARGET_64BIT)\n-         if (((oldBits>>26) & 0x0000003F) != 30)\n+         if (TR::Compiler->target.cpu.isAtLeast(OMR_PROCESSOR_PPC_P10))\n             {\n-            // PTOC was used, oldBits is ld\n-            currentDistance = oldBits<<16>>16;\n-            if (((oldBits>>16) & 0x0000001F) == 12)\n-               {\n-               oldBits = *(int32_t *)((uint8_t *)callSite - encodingStartOffset - 4);\n-               currentDistance += oldBits<<16;\n-               }\n-            patchAddr = *(uint8_t **)(*(intptr_t *)extra + currentDistance);\n+            // oldBits is the latter half of paddi\n+            distance = ((*(int32_t *)((uint8_t *)callSite - encodingStartOffset - 4)) & 0x0003FFFF) << 16;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMwODY4MQ=="}, "originalCommit": {"oid": "fcd9772caa2b5650cd593722e4619d49caf0f528"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY4MjEwMw==", "bodyText": "You are right. But perhaps breaking it into two statements: getting the upper word of the instruction and then shifting it would've been more clear, or providing a comment.", "url": "https://github.com/eclipse-openj9/openj9/pull/10519#discussion_r485682103", "createdAt": "2020-09-09T15:00:11Z", "author": {"login": "gita-omr"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -480,25 +480,36 @@ bool ppcCodePatching(void *method, void *callSite, void *currentPC, void *curren\n \n          oldBits = *(int32_t *)((uint8_t *)callSite - encodingStartOffset);     // The load of the first IPIC cache slot or rldimi\n #if defined(TR_TARGET_64BIT)\n-         if (((oldBits>>26) & 0x0000003F) != 30)\n+         if (TR::Compiler->target.cpu.isAtLeast(OMR_PROCESSOR_PPC_P10))\n             {\n-            // PTOC was used, oldBits is ld\n-            currentDistance = oldBits<<16>>16;\n-            if (((oldBits>>16) & 0x0000001F) == 12)\n-               {\n-               oldBits = *(int32_t *)((uint8_t *)callSite - encodingStartOffset - 4);\n-               currentDistance += oldBits<<16;\n-               }\n-            patchAddr = *(uint8_t **)(*(intptr_t *)extra + currentDistance);\n+            // oldBits is the latter half of paddi\n+            distance = ((*(int32_t *)((uint8_t *)callSite - encodingStartOffset - 4)) & 0x0003FFFF) << 16;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMwODY4MQ=="}, "originalCommit": {"oid": "fcd9772caa2b5650cd593722e4619d49caf0f528"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc0MzQxMg==", "bodyText": "Done", "url": "https://github.com/eclipse-openj9/openj9/pull/10519#discussion_r485743412", "createdAt": "2020-09-09T16:19:32Z", "author": {"login": "zl-wang"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -480,25 +480,36 @@ bool ppcCodePatching(void *method, void *callSite, void *currentPC, void *curren\n \n          oldBits = *(int32_t *)((uint8_t *)callSite - encodingStartOffset);     // The load of the first IPIC cache slot or rldimi\n #if defined(TR_TARGET_64BIT)\n-         if (((oldBits>>26) & 0x0000003F) != 30)\n+         if (TR::Compiler->target.cpu.isAtLeast(OMR_PROCESSOR_PPC_P10))\n             {\n-            // PTOC was used, oldBits is ld\n-            currentDistance = oldBits<<16>>16;\n-            if (((oldBits>>16) & 0x0000001F) == 12)\n-               {\n-               oldBits = *(int32_t *)((uint8_t *)callSite - encodingStartOffset - 4);\n-               currentDistance += oldBits<<16;\n-               }\n-            patchAddr = *(uint8_t **)(*(intptr_t *)extra + currentDistance);\n+            // oldBits is the latter half of paddi\n+            distance = ((*(int32_t *)((uint8_t *)callSite - encodingStartOffset - 4)) & 0x0003FFFF) << 16;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMwODY4MQ=="}, "originalCommit": {"oid": "fcd9772caa2b5650cd593722e4619d49caf0f528"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4568, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}