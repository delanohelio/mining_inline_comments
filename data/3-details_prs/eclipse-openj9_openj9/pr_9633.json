{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwOTU0MTIx", "number": 9633, "title": "Change where J9Method_HT, and DLT_Record Tables are cleaned", "bodyText": "For Non-Anon Clases, rather than cleaning up the J9Method_HT, and DLT_Record Tables during the jitHookClassLoaderUnload it should be cleaned up during the jitHookClassLoadersUnload hook.\nAlso, since dying classes and class-loaders are marked by the GC during class unloading we can also remove the j9classloader argument.\nSigned-off-by: AlenBadel Alen.Badel@ibm.com", "createdAt": "2020-05-20T18:43:56Z", "url": "https://github.com/eclipse-openj9/openj9/pull/9633", "merged": true, "mergeCommit": {"oid": "f2e0c34a4b669e57c44cb199cf01a8210bc46969"}, "closed": true, "closedAt": "2020-05-29T13:09:19Z", "author": {"login": "AlenBadel"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjNm3dgBqjMzNTc4MTk4MjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmCM5VAFqTQyMDkzNDQ4Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ba3a912e0b6f74f8d8934bd877d660072118550", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/5ba3a912e0b6f74f8d8934bd877d660072118550", "committedDate": "2020-05-20T18:43:43Z", "message": "Clean up J9Method_HT, and DLT_Record Tables During jitHookClassLoadersUnload Hook\n\nRather than cleaning up the J9Method_HT, and DLT_Record Tables during the jitHookClassLoaderUnload it should be cleaned up during the jitHookClassLoadersUnload hook.\n\nAlso, since dying classes and class-loaders are marked by the GC during class unloading we can also remove the `j9classloader` argument.\n\nSigned-off-by: AlenBadel <Alen.Badel@ibm.com>"}, "afterCommit": {"oid": "c7667698e7e98af70d15ef744e5f4c15725a24b6", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/c7667698e7e98af70d15ef744e5f4c15725a24b6", "committedDate": "2020-05-20T18:44:21Z", "message": "Clean up J9Method_HT, and DLT_Record Tables During jitHookClassLoadersUnload Hook\n\nRather than cleaning up the J9Method_HT, and DLT_Record Tables during the jitHookClassLoaderUnload it should be cleaned up during the jitHookClassLoadersUnload hook.\n\nAlso, since dying classes and class-loaders are marked by the GC during class unloading we can also remove the j9classloader argument.\n\nSigned-off-by: AlenBadel <Alen.Badel@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1ODUwNTcw", "url": "https://github.com/eclipse-openj9/openj9/pull/9633#pullrequestreview-415850570", "createdAt": "2020-05-21T03:11:04Z", "commit": {"oid": "c7667698e7e98af70d15ef744e5f4c15725a24b6"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMzoxMTowNFrOGYkxiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMzoxNjoxMFrOGYk2EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQyMTUxNQ==", "bodyText": "Don't hardcode 0x2 here as we'll miss it if we every re-order the flags.   There should be a named constant that can be used instead", "url": "https://github.com/eclipse-openj9/openj9/pull/9633#discussion_r428421515", "createdAt": "2020-05-21T03:11:04Z", "author": {"login": "DanHeidinga"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -2993,15 +2993,17 @@ void TR::CompilationInfo::insertDLTRecord(J9Method *method, int32_t bcIndex, voi\n    }\n    }\n \n-void TR::CompilationInfo::cleanDLTRecordOnUnload(J9ClassLoader *classloader)\n+void TR::CompilationInfo::cleanDLTRecordOnUnload()\n    {\n    for (int32_t i=0; i<DLT_HASHSIZE; i++)\n       {\n       struct DLT_record *prev=NULL, *curr=_dltHash[i], *next;\n       while (curr != NULL)\n          {\n+         J9Class *clazz = J9_CLASS_FROM_METHOD(curr->_method);\n          next = curr->_next;\n-         if (J9_CLASS_FROM_METHOD(curr->_method)->classLoader == classloader)\n+         if ( J9_ARE_ALL_BITS_SET(clazz->classLoader->gcFlags, 0x2)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7667698e7e98af70d15ef744e5f4c15725a24b6"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQyMTY0Nw==", "bodyText": "Same concern here - magic numbers are painful when evolving the code", "url": "https://github.com/eclipse-openj9/openj9/pull/9633#discussion_r428421647", "createdAt": "2020-05-21T03:11:41Z", "author": {"login": "DanHeidinga"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -12662,8 +12663,9 @@ void J9Method_HT::onClassUnloading(J9ClassLoader *j9classLoader)\n       HT_Entry *prev = NULL;\n       while (entry)\n          {\n-         if (NULL == entry->_j9method\n-            || J9_CLASS_FROM_METHOD(entry->_j9method)->classLoader == j9classLoader)\n+         J9Class *clazz = J9_CLASS_FROM_METHOD(entry->_j9method);\n+         if ( J9_ARE_ALL_BITS_SET(clazz->classLoader->gcFlags, 0x2)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7667698e7e98af70d15ef744e5f4c15725a24b6"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQyMjAyMA==", "bodyText": "I don't understand the indentation here.  Why is compInfo->.... more deeply nested than the variable declaration above?", "url": "https://github.com/eclipse-openj9/openj9/pull/9633#discussion_r428422020", "createdAt": "2020-05-21T03:13:18Z", "author": {"login": "DanHeidinga"}, "path": "runtime/compiler/control/HookedByTheJit.cpp", "diffHunk": "@@ -2180,6 +2175,19 @@ static void jitHookClassLoaderUnload(J9HookInterface * * hookInterface, UDATA ev\n \n #endif /* defined (J9VM_GC_DYNAMIC_CLASS_UNLOADING)*/\n \n+#if defined(J9VM_GC_DYNAMIC_CLASS_UNLOADING) && defined(J9VM_JIT_DYNAMIC_LOOP_TRANSFER)\n+static void jitHookClassLoadersUnload(J9HookInterface * * hookInterface, UDATA eventNum, void * eventData, void * userData)\n+   {\n+   J9VMClassUnloadEvent * unloadedEvent = (J9VMClassUnloadEvent *)eventData;\n+   J9VMThread * vmThread = unloadedEvent->currentThread;\n+   J9JITConfig * jitConfig = vmThread->javaVM->jitConfig;\n+   TR::CompilationInfo * compInfo = TR::CompilationInfo::get(jitConfig);\n+      compInfo->cleanDLTRecordOnUnload();\n+      if (compInfo->getDLT_HT())\n+         compInfo->getDLT_HT()->onClassUnloading();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7667698e7e98af70d15ef744e5f4c15725a24b6"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQyMjY3Mw==", "bodyText": "It would be good to add a comment here that the class specific check is required to handle vm anonymous classes which have a lifecycle independent of their classloader.  I had to double check the code when looking for how anon classes are handled so being explicit here would help.\nSame with the code above", "url": "https://github.com/eclipse-openj9/openj9/pull/9633#discussion_r428422673", "createdAt": "2020-05-21T03:16:10Z", "author": {"login": "DanHeidinga"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -12662,8 +12663,9 @@ void J9Method_HT::onClassUnloading(J9ClassLoader *j9classLoader)\n       HT_Entry *prev = NULL;\n       while (entry)\n          {\n-         if (NULL == entry->_j9method\n-            || J9_CLASS_FROM_METHOD(entry->_j9method)->classLoader == j9classLoader)\n+         J9Class *clazz = J9_CLASS_FROM_METHOD(entry->_j9method);\n+         if ( J9_ARE_ALL_BITS_SET(clazz->classLoader->gcFlags, 0x2)\n+            || (J9CLASS_FLAGS(clazz) & J9AccClassDying) )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7667698e7e98af70d15ef744e5f4c15725a24b6"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e8fa680e1beea3d2e229355f5c8446813df7c28", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/4e8fa680e1beea3d2e229355f5c8446813df7c28", "committedDate": "2020-05-21T14:18:22Z", "message": "Add Comments"}, "afterCommit": {"oid": "72c265fb0373f36991c94532768c471b29665784", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/72c265fb0373f36991c94532768c471b29665784", "committedDate": "2020-05-21T14:25:04Z", "message": "Add Comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9aac7d987c60db898727199409f746df31744b87", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/9aac7d987c60db898727199409f746df31744b87", "committedDate": "2020-05-21T18:38:16Z", "message": "Clean up J9Method_HT, and DLT_Record Tables During jitHookClassLoadersUnload Hook\n\nRather than cleaning up the J9Method_HT, and DLT_Record Tables during the jitHookClassLoaderUnload it should be cleaned up during the jitHookClassLoadersUnload hook.\n\nAlso, since dying classes and class-loaders are marked by the GC during class unloading we can also remove the j9classloader argument.\n\nSigned-off-by: AlenBadel <Alen.Badel@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5095b2f287b4a7a6dcbd248634772daaa299a8f5", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/5095b2f287b4a7a6dcbd248634772daaa299a8f5", "committedDate": "2020-05-21T18:33:36Z", "message": "Add include"}, "afterCommit": {"oid": "9aac7d987c60db898727199409f746df31744b87", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/9aac7d987c60db898727199409f746df31744b87", "committedDate": "2020-05-21T18:38:16Z", "message": "Clean up J9Method_HT, and DLT_Record Tables During jitHookClassLoadersUnload Hook\n\nRather than cleaning up the J9Method_HT, and DLT_Record Tables during the jitHookClassLoaderUnload it should be cleaned up during the jitHookClassLoadersUnload hook.\n\nAlso, since dying classes and class-loaders are marked by the GC during class unloading we can also remove the j9classloader argument.\n\nSigned-off-by: AlenBadel <Alen.Badel@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3OTA4MjUw", "url": "https://github.com/eclipse-openj9/openj9/pull/9633#pullrequestreview-417908250", "createdAt": "2020-05-26T00:24:32Z", "commit": {"oid": "9aac7d987c60db898727199409f746df31744b87"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwOTM0NDgy", "url": "https://github.com/eclipse-openj9/openj9/pull/9633#pullrequestreview-420934482", "createdAt": "2020-05-29T13:09:06Z", "commit": {"oid": "9aac7d987c60db898727199409f746df31744b87"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1004, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}