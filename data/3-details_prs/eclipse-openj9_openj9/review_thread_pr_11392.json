{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzOTc2NTg2", "number": 11392, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjozOTozMlrOFCF2rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjo0NDoxMlrOFCF7Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzM3MzkwOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/J9VMEnv.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjozOTozMlrOIBEO9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjozOTozMlrOIBEO9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk4ODg1Mg==", "bodyText": "Please remove !", "url": "https://github.com/eclipse-openj9/openj9/pull/11392#discussion_r537988852", "createdAt": "2020-12-08T02:39:32Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9VMEnv.cpp", "diffHunk": "@@ -508,3 +508,15 @@ J9::VMEnv::getInterpreterVTableOffset()\n #endif /* defined(J9VM_OPT_JITSERVER) */\n    return sizeof(J9Class);\n    }\n+\n+bool\n+J9::VMEnv::isVMInStartupPhase(J9JITConfig *jitConfig)\n+   {\n+#if defined(J9VM_OPT_JITSERVER)\n+   if (auto stream = TR::CompilationInfo::getStream())\n+      {\n+      return TR::compInfoPT->getClientData()->isInStartupPhase();\n+      }\n+#endif /* defined(J9VM_OPT_JITSERVER) */\n+   return !jitConfig->javaVM->phase != J9VM_PHASE_NOT_STARTUP;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cb1351945d7b5ea75eb45361fa5a737606d932f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzM4Mjc5OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.cpp", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjo0Mjo1MFrOIBETuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxOTo0NzoxNFrOIBzLhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk5MDA3NQ==", "bodyText": "I don't think we need a monitor just to get/set a boolean. Such operations are atomic anyway.", "url": "https://github.com/eclipse-openj9/openj9/pull/11392#discussion_r537990075", "createdAt": "2020-12-08T02:42:50Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -73,6 +74,7 @@ ClientSessionData::ClientSessionData(uint64_t clientUID, uint32_t seqNo) :\n    TR::SymbolValidationManager::populateSystemClassesNotWorthRemembering(this);\n \n    _wellKnownClassesMonitor = TR::Monitor::create(\"JIT-JITServerWellKnownClassesMonitor\");\n+   _startupPhaseMonitor = TR::Monitor::create(\"JIT-JITServerStartupPhaseMonitor\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cb1351945d7b5ea75eb45361fa5a737606d932f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUwNzQ5Ng==", "bodyText": "Are they actually atomic?\nThis post says they are not atomic in C++.", "url": "https://github.com/eclipse-openj9/openj9/pull/11392#discussion_r538507496", "createdAt": "2020-12-08T15:36:09Z", "author": {"login": "dmitry-ten"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -73,6 +74,7 @@ ClientSessionData::ClientSessionData(uint64_t clientUID, uint32_t seqNo) :\n    TR::SymbolValidationManager::populateSystemClassesNotWorthRemembering(this);\n \n    _wellKnownClassesMonitor = TR::Monitor::create(\"JIT-JITServerWellKnownClassesMonitor\");\n+   _startupPhaseMonitor = TR::Monitor::create(\"JIT-JITServerStartupPhaseMonitor\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk5MDA3NQ=="}, "originalCommit": {"oid": "2cb1351945d7b5ea75eb45361fa5a737606d932f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODU4MjA0MQ==", "bodyText": "I am not convinced about the arguments in that post:\n\nsizeof(bool) is implementation-defined and may conceivably be > 1, so it's possible that it could be non-atomic in some cases.\n\nIn theory it's possible to have a bool larger than a char, but in practice nobody does that\n\nYou need atomic to avoid race-conditions. A race-condition occurs if two threads access the same memory location, and at least one of them is a write operation. If your program contains race-conditions, the behavior is undefined\n\nThe threads will see either true or false, there is nothing in between. If you wanted to be entirely correct, then you'd have to check the flag and do everything it depends on it in a single critical section, which is impractical. In fact, if another thread updates the flag, I would like to see that update.\n\nWithout atomic there is no guarantee that you'll ever see the update in the other thread at all, or that you'll see updates to variables in the same order that you make them in a different thread.\n\nThis could happen if the value is cached in a register. The use is very far away from where the flag is written, so it's very unlikely that will happen. Even if it happens, start-up phase is just a heuristic, it should not have correctness implications.", "url": "https://github.com/eclipse-openj9/openj9/pull/11392#discussion_r538582041", "createdAt": "2020-12-08T16:41:34Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -73,6 +74,7 @@ ClientSessionData::ClientSessionData(uint64_t clientUID, uint32_t seqNo) :\n    TR::SymbolValidationManager::populateSystemClassesNotWorthRemembering(this);\n \n    _wellKnownClassesMonitor = TR::Monitor::create(\"JIT-JITServerWellKnownClassesMonitor\");\n+   _startupPhaseMonitor = TR::Monitor::create(\"JIT-JITServerStartupPhaseMonitor\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk5MDA3NQ=="}, "originalCommit": {"oid": "2cb1351945d7b5ea75eb45361fa5a737606d932f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODc1ODAyMQ==", "bodyText": "I see, makes sense. Removed the monitor.", "url": "https://github.com/eclipse-openj9/openj9/pull/11392#discussion_r538758021", "createdAt": "2020-12-08T19:47:14Z", "author": {"login": "dmitry-ten"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -73,6 +74,7 @@ ClientSessionData::ClientSessionData(uint64_t clientUID, uint32_t seqNo) :\n    TR::SymbolValidationManager::populateSystemClassesNotWorthRemembering(this);\n \n    _wellKnownClassesMonitor = TR::Monitor::create(\"JIT-JITServerWellKnownClassesMonitor\");\n+   _startupPhaseMonitor = TR::Monitor::create(\"JIT-JITServerStartupPhaseMonitor\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk5MDA3NQ=="}, "originalCommit": {"oid": "2cb1351945d7b5ea75eb45361fa5a737606d932f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzM4NTkxOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjo0NDoxMlrOIBEVkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwMjo0NDoxMlrOIBEVkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzk5MDU0Ng==", "bodyText": "This could be marked const", "url": "https://github.com/eclipse-openj9/openj9/pull/11392#discussion_r537990546", "createdAt": "2020-12-08T02:44:12Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.hpp", "diffHunk": "@@ -454,6 +454,10 @@ class ClientSessionData\n    void cacheWellKnownClassChainOffsets(unsigned int includedClasses, size_t numClasses,\n                                         const uintptr_t *classChainOffsets, const void *wellKnownClassChainOffsets);\n \n+   TR::Monitor *getStartupPhaseMonitor() { return _startupPhaseMonitor; }\n+   bool isInStartupPhase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cb1351945d7b5ea75eb45361fa5a737606d932f"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 848, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}