{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTc2NzI3", "number": 10748, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDozMzo1OVrOEqeOHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo0MToyOVrOEqeXrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTcwNzgyOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/CompilationThread.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDozMzo1OVrOHcsy9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDozMzo1OVrOHcsy9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg1NjExOA==", "bodyText": "that is a CompilationInfoPerThreadBase and you should be able to obtain the client data from there.", "url": "https://github.com/eclipse-openj9/openj9/pull/10748#discussion_r499856118", "createdAt": "2020-10-05T20:33:59Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -8513,7 +8513,7 @@ TR::CompilationInfoPerThreadBase::wrappedCompile(J9PortLibrary *portLib, void *\n #if defined(J9VM_OPT_JITSERVER)\n          if (that->_methodBeingCompiled->isOutOfProcessCompReq())\n             {\n-            OMRProcessorDesc JITClientProcessorDesc = TR::Compiler->target.cpu.getProcessorDescription();\n+            OMRProcessorDesc JITClientProcessorDesc = that->_methodBeingCompiled->_compInfoPT->getClientData()->getOrCacheVMInfo(that->_methodBeingCompiled->_stream)->_processorDescription;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a6fb4804a6ce439b65744c9a1e2dfce5d47f62e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTczMTM0OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/J9CPU.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo0MTowOVrOHctBXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo0MTowOVrOHctBXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg1OTgwNQ==", "bodyText": "Since this path is never supposed to be taken, you could transform this assert into a fatal one without the risk of adding extra overhead.", "url": "https://github.com/eclipse-openj9/openj9/pull/10748#discussion_r499859805", "createdAt": "2020-10-05T20:41:09Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9CPU.cpp", "diffHunk": "@@ -24,22 +24,19 @@\n #pragma csect(STATIC,\"J9J9CPU#S\")\n #pragma csect(TEST,\"J9J9CPU#T\")\n \n-#include \"control/CompilationRuntime.hpp\"\n-#include \"env/CompilerEnv.hpp\"\n #include \"env/CPU.hpp\"\n-#include \"env/VMJ9.h\"\n-#include \"j9.h\"\n-#include \"j9port.h\"\n+#include \"infra/Assert.hpp\"                         // for TR_ASSERT\n \n-OMRProcessorDesc\n-J9::CPU::getProcessorDescription()\n+const char *\n+J9::CPU::getProcessorVendorId() \n    {\n-#if defined(J9VM_OPT_JITSERVER)\n-   if (auto stream = TR::CompilationInfo::getStream())\n-      {\n-      auto *vmInfo = TR::compInfoPT->getClientData()->getOrCacheVMInfo(stream);\n-      return vmInfo->_processorDescription;\n-      }\n-#endif /* defined(J9VM_OPT_JITSERVER) */\n-   return _processorDescription;\n+   TR_ASSERT(false, \"Vendor ID not defined for this platform!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a6fb4804a6ce439b65744c9a1e2dfce5d47f62e"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTczMjMwOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/J9CPU.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo0MToyOVrOHctCCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDo0MToyOVrOHctCCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg1OTk3Nw==", "bodyText": "Same comment as above", "url": "https://github.com/eclipse-openj9/openj9/pull/10748#discussion_r499859977", "createdAt": "2020-10-05T20:41:29Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9CPU.cpp", "diffHunk": "@@ -24,22 +24,19 @@\n #pragma csect(STATIC,\"J9J9CPU#S\")\n #pragma csect(TEST,\"J9J9CPU#T\")\n \n-#include \"control/CompilationRuntime.hpp\"\n-#include \"env/CompilerEnv.hpp\"\n #include \"env/CPU.hpp\"\n-#include \"env/VMJ9.h\"\n-#include \"j9.h\"\n-#include \"j9port.h\"\n+#include \"infra/Assert.hpp\"                         // for TR_ASSERT\n \n-OMRProcessorDesc\n-J9::CPU::getProcessorDescription()\n+const char *\n+J9::CPU::getProcessorVendorId() \n    {\n-#if defined(J9VM_OPT_JITSERVER)\n-   if (auto stream = TR::CompilationInfo::getStream())\n-      {\n-      auto *vmInfo = TR::compInfoPT->getClientData()->getOrCacheVMInfo(stream);\n-      return vmInfo->_processorDescription;\n-      }\n-#endif /* defined(J9VM_OPT_JITSERVER) */\n-   return _processorDescription;\n+   TR_ASSERT(false, \"Vendor ID not defined for this platform!\");\n+   return NULL;\n+   }\n+\n+uint32_t \n+J9::CPU::getProcessorSignature()\n+   {\n+   TR_ASSERT(false, \"Processor Signature not defined for this platform!\"); ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a6fb4804a6ce439b65744c9a1e2dfce5d47f62e"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1262, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}