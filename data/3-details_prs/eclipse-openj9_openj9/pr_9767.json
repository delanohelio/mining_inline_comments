{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NjEwNDc0", "number": 9767, "title": "Sampling allocation bytes precisely - step1", "bodyText": "Introduce APIs and fields needed by OMR's for allocation sampling.\nrelated: #7740\nSigned-off-by: Lin Hu linhu@ca.ibm.com", "createdAt": "2020-06-02T14:07:23Z", "url": "https://github.com/eclipse-openj9/openj9/pull/9767", "merged": true, "mergeCommit": {"oid": "286d3a0d9f1fa24aa6357067d90ff46e2f7de404"}, "closed": true, "closedAt": "2020-06-02T18:22:26Z", "author": {"login": "LinHu2016"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnVl8ngFqTQyMjcyNjk2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnYWUtABqjMzOTg3MzU4Mzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNzI2OTY2", "url": "https://github.com/eclipse-openj9/openj9/pull/9767#pullrequestreview-422726966", "createdAt": "2020-06-02T14:18:34Z", "commit": {"oid": "c9f37288465939ddea72d09e68b63cf9ecf31680"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDoxODozNFrOGdz-vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNDoxODozNFrOGdz-vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzkxMzUzNA==", "bodyText": "let's use passive (or past tense): Allocated or Used", "url": "https://github.com/eclipse-openj9/openj9/pull/9767#discussion_r433913534", "createdAt": "2020-06-02T14:18:34Z", "author": {"login": "amicic"}, "path": "runtime/gc_glue_java/EnvironmentDelegate.hpp", "diffHunk": "@@ -178,6 +178,28 @@ class MM_EnvironmentDelegate\n \t * @return TRUE if inline TLH allocates currently enabled for this thread; FALSE otherwise\n \t */\n \tbool isInlineTLHAllocateEnabled();\n+\n+\t/**\n+\t * Set TLH Sampling Top by hiding the real heap top address from\n+\t * JIT/Interpreter in realHeapTop and setting HeapTop = (HeapAlloc + size) if size < (HeapTop - HeapAlloc)\n+\t * so out of line allocate would happen at TLH Sampling Top.\n+\t * If size >= (HeapTop - HeapAlloc) resetTLHSamplingTop()\n+\t *\n+\t * @param size the number of bytes to next sampling point\n+\t */\n+\tvoid setTLHSamplingTop(uintptr_t size) {}\n+\n+\t/**\n+\t * Restore heapTop from realHeapTop if realHeapTop != NULL\n+\t */\n+\tvoid resetTLHSamplingTop() {}\n+\n+\t/**\n+\t * Retrieve allocation size inside TLH Cache.\n+\t * @return (heapAlloc - heapBase)\n+\t */\n+\tuintptr_t getAllocSizeInsideTLH() { return 0; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9f37288465939ddea72d09e68b63cf9ecf31680"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9f37288465939ddea72d09e68b63cf9ecf31680", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c9f37288465939ddea72d09e68b63cf9ecf31680", "committedDate": "2020-06-02T13:16:04Z", "message": "Sampling allocation bytes precisely without compromising the\nperformance-step1\n\nTo break mutual dependency from openj9 to omr\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "248ee902c0b90da573df6bff9e1c6a3a5332d21b", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/248ee902c0b90da573df6bff9e1c6a3a5332d21b", "committedDate": "2020-06-02T15:01:36Z", "message": "Sampling allocation bytes precisely without compromising the\nperformance-step1\n\nIntroduce APIs and fields needed by OMR's for allocation sampling.\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyNzc4MTg4", "url": "https://github.com/eclipse-openj9/openj9/pull/9767#pullrequestreview-422778188", "createdAt": "2020-06-02T15:10:59Z", "commit": {"oid": "248ee902c0b90da573df6bff9e1c6a3a5332d21b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a930ae200c144b206fbf18e7b6c388b13231950", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7a930ae200c144b206fbf18e7b6c388b13231950", "committedDate": "2020-06-02T17:30:26Z", "message": "Sampling allocation bytes precisely - step1\n\nIntroduce APIs and fields needed by OMR's for allocation sampling.\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "248ee902c0b90da573df6bff9e1c6a3a5332d21b", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/248ee902c0b90da573df6bff9e1c6a3a5332d21b", "committedDate": "2020-06-02T15:01:36Z", "message": "Sampling allocation bytes precisely without compromising the\nperformance-step1\n\nIntroduce APIs and fields needed by OMR's for allocation sampling.\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}, "afterCommit": {"oid": "7a930ae200c144b206fbf18e7b6c388b13231950", "author": {"user": {"login": "LinHu2016", "name": "Lin Hu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7a930ae200c144b206fbf18e7b6c388b13231950", "committedDate": "2020-06-02T17:30:26Z", "message": "Sampling allocation bytes precisely - step1\n\nIntroduce APIs and fields needed by OMR's for allocation sampling.\n\nSigned-off-by: Lin Hu <linhu@ca.ibm.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 846, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}