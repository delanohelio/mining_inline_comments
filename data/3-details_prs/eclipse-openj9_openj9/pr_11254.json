{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MTU2MDIw", "number": 11254, "title": "Keep splitPostGRA stores in right block for acmp fast path", "bodyText": "When splitPostGRA splits a block, it might insert register stores and stores to temporaries at the end of the original block at the split point.  When splitPostGRA is called for fastpathAcmpHelper, the original block contains the acmp helper call that will still need to be moved into a separate \"call\" block, while any register stores or temporary stores that do not involve the call to acmp helper will need to remain in the original block.  Move any treetops, register stores or stores\nfor the call to the acmp helper to the end of the original block so that the trees associated with the call can be split into the new \"call\" block without pulling any unrelated stores and register stores into the new block.\nAlso, register dependencies that splitPostGRA adds to the end of the \"call\" block should always be copied to the ifacmpeq node that's added to the end of the original block as that represents an edge to the same \"target\" block.\nThis fixes a failure with value types enabled running the vmTest_2 test, UnsafeArrayGetTest.", "createdAt": "2020-11-24T03:59:08Z", "url": "https://github.com/eclipse-openj9/openj9/pull/11254", "merged": true, "mergeCommit": {"oid": "ee73696bcc7a5c9835d7325f8c55cb8e7ca5d887"}, "closed": true, "closedAt": "2020-12-08T20:10:33Z", "author": {"login": "hzongaro"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdftI4bgFqTUzNzc0Mzc3OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkP5crAFqTU0NzU5MDM4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NzQzNzc5", "url": "https://github.com/eclipse-openj9/openj9/pull/11254#pullrequestreview-537743779", "createdAt": "2020-11-24T17:24:14Z", "commit": {"oid": "bd3aac0b531b17e22787e8f8cf484522859c8f3f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzoyNDoxNFrOH5NXNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNzoyNDoxNFrOH5NXNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc0OTgxNA==", "bodyText": "Why we move the acmp call tree top just after node whose child is node? I think this routine can be simpler, what you need to do is move the acmp call helper at the end of the prevBlock . You might just need to get the last real tree-top and add it after it as you have just split the blocks I do not think we would have more than one exit edge from the prevBlock.", "url": "https://github.com/eclipse-openj9/openj9/pull/11254#discussion_r529749814", "createdAt": "2020-11-24T17:24:14Z", "author": {"login": "r30shah"}, "path": "runtime/compiler/codegen/J9CodeGenerator.cpp", "diffHunk": "@@ -251,6 +251,48 @@ J9::CodeGenerator::fastpathAcmpHelper(TR::Node *node, TR::TreeTop *tt, const boo\n    // next treetop and then at the current one\n    TR::Block* prevBlock = tt->getEnclosingBlock();\n    TR::Block* targetBlock = prevBlock->splitPostGRA(tt->getNextTreeTop(), cfg, true, NULL);\n+\n+   // Move call tree to end of block, along with any stores of the result of the call, if they're\n+   // not already at the end.  The call has to be split into its own block, but splitPostGRA above\n+   // might have left register stores and stores into temporaries that must stay with the previous block\n+   TR::TreeTop* prevBlockExit = prevBlock->getExit();\n+   TR::TreeTop* afterTT = tt->getNextTreeTop();\n+\n+   if (afterTT != prevBlockExit)\n+      {\n+      if (trace)\n+         {\n+         traceMsg(comp, \"Moving treetop containing node n%dn [%p] associated with acmp helper call to end of prevBlock in preparation of final block split\\n\", tt->getNode()->getGlobalIndex(), tt->getNode());\n+         }\n+\n+      // Remove TreeTop for call node\n+      tt->unlink(false);\n+      TR::TreeTop* callTreesTail = tt;\n+\n+      while (afterTT != prevBlockExit)\n+         {\n+         TR::TreeTop* nextTT = afterTT->getNextTreeTop();\n+         TR::ILOpCodes op = afterTT->getNode()->getOpCodeValue();\n+\n+         if ((op == TR::iRegStore || op == TR::istore) && afterTT->getNode()->getFirstChild() == node)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd3aac0b531b17e22787e8f8cf484522859c8f3f"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MDA2OTkz", "url": "https://github.com/eclipse-openj9/openj9/pull/11254#pullrequestreview-538006993", "createdAt": "2020-11-24T22:07:18Z", "commit": {"oid": "bd3aac0b531b17e22787e8f8cf484522859c8f3f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowNzoxOFrOH5XvTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjoxNjowNFrOH5YS7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkxOTgyMg==", "bodyText": "I wonder if the diagram on the above should be updated with GlRegDeps() to  show how the register dependency looks like between the split blocks and some sort of annotation that mentions the call tree needs to be at the end of the block.\nhttps://github.com/eclipse/openj9/blob/bd3aac0b531b17e22787e8f8cf484522859c8f3f/runtime/compiler/codegen/J9CodeGenerator.cpp#L197-L219", "url": "https://github.com/eclipse-openj9/openj9/pull/11254#discussion_r529919822", "createdAt": "2020-11-24T22:07:18Z", "author": {"login": "a7ehuo"}, "path": "runtime/compiler/codegen/J9CodeGenerator.cpp", "diffHunk": "@@ -251,6 +251,48 @@ J9::CodeGenerator::fastpathAcmpHelper(TR::Node *node, TR::TreeTop *tt, const boo\n    // next treetop and then at the current one\n    TR::Block* prevBlock = tt->getEnclosingBlock();\n    TR::Block* targetBlock = prevBlock->splitPostGRA(tt->getNextTreeTop(), cfg, true, NULL);\n+\n+   // Move call tree to end of block, along with any stores of the result of the call, if they're", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd3aac0b531b17e22787e8f8cf484522859c8f3f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkyODk0MQ==", "bodyText": "Should this trace be updated to differentiate from the trace message at line L265 to show this one is more specific to store nodes?", "url": "https://github.com/eclipse-openj9/openj9/pull/11254#discussion_r529928941", "createdAt": "2020-11-24T22:16:04Z", "author": {"login": "a7ehuo"}, "path": "runtime/compiler/codegen/J9CodeGenerator.cpp", "diffHunk": "@@ -251,6 +251,48 @@ J9::CodeGenerator::fastpathAcmpHelper(TR::Node *node, TR::TreeTop *tt, const boo\n    // next treetop and then at the current one\n    TR::Block* prevBlock = tt->getEnclosingBlock();\n    TR::Block* targetBlock = prevBlock->splitPostGRA(tt->getNextTreeTop(), cfg, true, NULL);\n+\n+   // Move call tree to end of block, along with any stores of the result of the call, if they're\n+   // not already at the end.  The call has to be split into its own block, but splitPostGRA above\n+   // might have left register stores and stores into temporaries that must stay with the previous block\n+   TR::TreeTop* prevBlockExit = prevBlock->getExit();\n+   TR::TreeTop* afterTT = tt->getNextTreeTop();\n+\n+   if (afterTT != prevBlockExit)\n+      {\n+      if (trace)\n+         {\n+         traceMsg(comp, \"Moving treetop containing node n%dn [%p] associated with acmp helper call to end of prevBlock in preparation of final block split\\n\", tt->getNode()->getGlobalIndex(), tt->getNode());\n+         }\n+\n+      // Remove TreeTop for call node\n+      tt->unlink(false);\n+      TR::TreeTop* callTreesTail = tt;\n+\n+      while (afterTT != prevBlockExit)\n+         {\n+         TR::TreeTop* nextTT = afterTT->getNextTreeTop();\n+         TR::ILOpCodes op = afterTT->getNode()->getOpCodeValue();\n+\n+         if ((op == TR::iRegStore || op == TR::istore) && afterTT->getNode()->getFirstChild() == node)\n+            {\n+            if (trace)\n+               {\n+               traceMsg(comp, \"Moving treetop containing node n%dn [%p] associated with acmp helper call to end of prevBlock in preparation of final block split\\n\", afterTT->getNode()->getGlobalIndex(), afterTT->getNode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd3aac0b531b17e22787e8f8cf484522859c8f3f"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4MTMwMDQ2", "url": "https://github.com/eclipse-openj9/openj9/pull/11254#pullrequestreview-538130046", "createdAt": "2020-11-25T03:26:41Z", "commit": {"oid": "bd3aac0b531b17e22787e8f8cf484522859c8f3f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMzoyNjo0MVrOH5hxJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwMzoyNzo1N1rOH5hycA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA4NDEzMg==", "bodyText": "This is used as iterator mainly to walk through treetops. How about using iterTT?", "url": "https://github.com/eclipse-openj9/openj9/pull/11254#discussion_r530084132", "createdAt": "2020-11-25T03:26:41Z", "author": {"login": "r30shah"}, "path": "runtime/compiler/codegen/J9CodeGenerator.cpp", "diffHunk": "@@ -251,6 +251,48 @@ J9::CodeGenerator::fastpathAcmpHelper(TR::Node *node, TR::TreeTop *tt, const boo\n    // next treetop and then at the current one\n    TR::Block* prevBlock = tt->getEnclosingBlock();\n    TR::Block* targetBlock = prevBlock->splitPostGRA(tt->getNextTreeTop(), cfg, true, NULL);\n+\n+   // Move call tree to end of block, along with any stores of the result of the call, if they're\n+   // not already at the end.  The call has to be split into its own block, but splitPostGRA above\n+   // might have left register stores and stores into temporaries that must stay with the previous block\n+   TR::TreeTop* prevBlockExit = prevBlock->getExit();\n+   TR::TreeTop* afterTT = tt->getNextTreeTop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd3aac0b531b17e22787e8f8cf484522859c8f3f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDA4NDQ2NA==", "bodyText": "This  is the last real tree-top in the later created callBlock , may be we can rename this to reflect that.", "url": "https://github.com/eclipse-openj9/openj9/pull/11254#discussion_r530084464", "createdAt": "2020-11-25T03:27:57Z", "author": {"login": "r30shah"}, "path": "runtime/compiler/codegen/J9CodeGenerator.cpp", "diffHunk": "@@ -251,6 +251,48 @@ J9::CodeGenerator::fastpathAcmpHelper(TR::Node *node, TR::TreeTop *tt, const boo\n    // next treetop and then at the current one\n    TR::Block* prevBlock = tt->getEnclosingBlock();\n    TR::Block* targetBlock = prevBlock->splitPostGRA(tt->getNextTreeTop(), cfg, true, NULL);\n+\n+   // Move call tree to end of block, along with any stores of the result of the call, if they're\n+   // not already at the end.  The call has to be split into its own block, but splitPostGRA above\n+   // might have left register stores and stores into temporaries that must stay with the previous block\n+   TR::TreeTop* prevBlockExit = prevBlock->getExit();\n+   TR::TreeTop* afterTT = tt->getNextTreeTop();\n+\n+   if (afterTT != prevBlockExit)\n+      {\n+      if (trace)\n+         {\n+         traceMsg(comp, \"Moving treetop containing node n%dn [%p] associated with acmp helper call to end of prevBlock in preparation of final block split\\n\", tt->getNode()->getGlobalIndex(), tt->getNode());\n+         }\n+\n+      // Remove TreeTop for call node\n+      tt->unlink(false);\n+      TR::TreeTop* callTreesTail = tt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd3aac0b531b17e22787e8f8cf484522859c8f3f"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5NDA4MjU4", "url": "https://github.com/eclipse-openj9/openj9/pull/11254#pullrequestreview-539408258", "createdAt": "2020-11-26T15:29:08Z", "commit": {"oid": "6097e70a855701546db5537c4a4e6d3dcb4ed941"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed8362321085059d28e7d7e0d1ee86d14f1e6362", "author": {"user": {"login": "hzongaro", "name": "Henry Zongaro"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ed8362321085059d28e7d7e0d1ee86d14f1e6362", "committedDate": "2020-11-26T16:07:49Z", "message": "Keep splitPostGRA stores in right block for acmp fast path\n\nWhen splitPostGRA splits a block, it might insert register stores and\nstores to temporaries at the end of the original block at the split\npoint.  When splitPostGRA is called for fastpathAcmpHelper, the original\nblock contains the acmp helper call that will still need to be moved\ninto a separate \"call\" block, while any register stores or temporary\nstores that do not involve the call to acmp helper will need to remain\nin the original block.  Move any treetops, register stores or stores\nfor the call to the acmp helper to the end of the original block so that\nthe trees associated with the call can be split into the new \"call\"\nblock without pulling any unrelated stores and register stores into the\nnew block.\n\nAlso, register dependencies that splitPostGRA adds to the end of the\n\"call\" block should always be copied to the ifacmpeq node that's\nadded to the end of the original block as that represents an edge to the\nsame \"target\" block.\n\nSigned-off-by:  Henry Zongaro <zongaro@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6097e70a855701546db5537c4a4e6d3dcb4ed941", "author": {"user": {"login": "hzongaro", "name": "Henry Zongaro"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6097e70a855701546db5537c4a4e6d3dcb4ed941", "committedDate": "2020-11-26T15:02:01Z", "message": "Address code review comments\n\nIn response to code review comments, expanded on some comments, renamed\nsome variables, and removed a redundant check when copying register\ndependencies.\n\nSigned-off-by:  Henry Zongaro <zongaro@ca.ibm.com>"}, "afterCommit": {"oid": "ed8362321085059d28e7d7e0d1ee86d14f1e6362", "author": {"user": {"login": "hzongaro", "name": "Henry Zongaro"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ed8362321085059d28e7d7e0d1ee86d14f1e6362", "committedDate": "2020-11-26T16:07:49Z", "message": "Keep splitPostGRA stores in right block for acmp fast path\n\nWhen splitPostGRA splits a block, it might insert register stores and\nstores to temporaries at the end of the original block at the split\npoint.  When splitPostGRA is called for fastpathAcmpHelper, the original\nblock contains the acmp helper call that will still need to be moved\ninto a separate \"call\" block, while any register stores or temporary\nstores that do not involve the call to acmp helper will need to remain\nin the original block.  Move any treetops, register stores or stores\nfor the call to the acmp helper to the end of the original block so that\nthe trees associated with the call can be split into the new \"call\"\nblock without pulling any unrelated stores and register stores into the\nnew block.\n\nAlso, register dependencies that splitPostGRA adds to the end of the\n\"call\" block should always be copied to the ifacmpeq node that's\nadded to the end of the original block as that represents an edge to the\nsame \"target\" block.\n\nSigned-off-by:  Henry Zongaro <zongaro@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NTkwMzg0", "url": "https://github.com/eclipse-openj9/openj9/pull/11254#pullrequestreview-547590384", "createdAt": "2020-12-08T20:09:50Z", "commit": {"oid": "ed8362321085059d28e7d7e0d1ee86d14f1e6362"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1634, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}