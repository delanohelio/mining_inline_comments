{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDE3MjY2", "number": 10121, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMzoxMzo0N1rOEMudfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMzoyMDozOVrOEMuhlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzc5NTgxOnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/reflecthelp.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMzoxMzo0N1rOGvANYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo1NToyN1rOGvMDhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkzOTY4Mg==", "bodyText": "The ANY bit test macro is defined as:\n#define OMR_ARE_ANY_BITS_SET(value, bits) (0 != ((value) & (bits)))\n\nwhich means this can be a single test.  Though, I think it should be ALL_BITS, not ANY:\n#define OMR_ARE_ALL_BITS_SET(value, bits) ((bits) == ((value) & (bits)))\n\nAs we want to test for both FINAL and STATIC:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tif (J9_ARE_ANY_BITS_SET(j9FieldID->field->modifiers, J9AccFinal)\n          \n          \n            \n            \t\t&& J9_ARE_ANY_BITS_SET(j9FieldID->field->modifiers, J9AccStatic)\n          \n          \n            \n            \tif (J9_ARE_ALL_BITS_SET(j9FieldID->field->modifiers, J9AccFinal | J9AccStatic)", "url": "https://github.com/eclipse-openj9/openj9/pull/10121#discussion_r451939682", "createdAt": "2020-07-09T03:13:47Z", "author": {"login": "DanHeidinga"}, "path": "runtime/jcl/common/reflecthelp.c", "diffHunk": "@@ -829,6 +829,13 @@ createField(struct J9VMThread *vmThread, jfieldID fieldID)\n \tJ9VMJAVALANGREFLECTFIELD_SET_DECLARINGCLASS(vmThread, fieldObject, J9VM_J9CLASS_TO_HEAPCLASS(j9FieldID->declaringClass));\n #if defined(USE_SUN_REFLECT)\n \tJ9VMJAVALANGREFLECTFIELD_SET_MODIFIERS(vmThread, fieldObject, j9FieldID->field->modifiers & CFR_FIELD_ACCESS_MASK);\n+#if JAVA_SPEC_VERSION >= 15\n+\tif (J9_ARE_ANY_BITS_SET(j9FieldID->field->modifiers, J9AccFinal)\n+\t\t&& J9_ARE_ANY_BITS_SET(j9FieldID->field->modifiers, J9AccStatic)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7938b1112fc50c032c73ddd103d77e30447c1fca"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzMzc2NQ==", "bodyText": "Nice! fixed accordingly.\nAlso verified that this works for FINAL & STATIC along with combination of other modifiers such as public/private.", "url": "https://github.com/eclipse-openj9/openj9/pull/10121#discussion_r452133765", "createdAt": "2020-07-09T10:55:27Z", "author": {"login": "JasonFengJ9"}, "path": "runtime/jcl/common/reflecthelp.c", "diffHunk": "@@ -829,6 +829,13 @@ createField(struct J9VMThread *vmThread, jfieldID fieldID)\n \tJ9VMJAVALANGREFLECTFIELD_SET_DECLARINGCLASS(vmThread, fieldObject, J9VM_J9CLASS_TO_HEAPCLASS(j9FieldID->declaringClass));\n #if defined(USE_SUN_REFLECT)\n \tJ9VMJAVALANGREFLECTFIELD_SET_MODIFIERS(vmThread, fieldObject, j9FieldID->field->modifiers & CFR_FIELD_ACCESS_MASK);\n+#if JAVA_SPEC_VERSION >= 15\n+\tif (J9_ARE_ANY_BITS_SET(j9FieldID->field->modifiers, J9AccFinal)\n+\t\t&& J9_ARE_ANY_BITS_SET(j9FieldID->field->modifiers, J9AccStatic)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkzOTY4Mg=="}, "originalCommit": {"oid": "7938b1112fc50c032c73ddd103d77e30447c1fca"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzgwNjI4OnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/reflecthelp.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMzoyMDozOVrOGvAUEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMDo1NjoyOFrOGvMFcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk0MTM5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tJ9VMJAVALANGREFLECTFIELD_SET_TRUSTEDFINAL(vmThread, fieldObject, TRUE);\n          \n          \n            \n            \t\tJ9VMJAVALANGREFLECTFIELD_SET_TRUSTEDFINAL(vmThread, fieldObject, JNI_TRUE);", "url": "https://github.com/eclipse-openj9/openj9/pull/10121#discussion_r451941395", "createdAt": "2020-07-09T03:20:39Z", "author": {"login": "DanHeidinga"}, "path": "runtime/jcl/common/reflecthelp.c", "diffHunk": "@@ -829,6 +829,13 @@ createField(struct J9VMThread *vmThread, jfieldID fieldID)\n \tJ9VMJAVALANGREFLECTFIELD_SET_DECLARINGCLASS(vmThread, fieldObject, J9VM_J9CLASS_TO_HEAPCLASS(j9FieldID->declaringClass));\n #if defined(USE_SUN_REFLECT)\n \tJ9VMJAVALANGREFLECTFIELD_SET_MODIFIERS(vmThread, fieldObject, j9FieldID->field->modifiers & CFR_FIELD_ACCESS_MASK);\n+#if JAVA_SPEC_VERSION >= 15\n+\tif (J9_ARE_ANY_BITS_SET(j9FieldID->field->modifiers, J9AccFinal)\n+\t\t&& J9_ARE_ANY_BITS_SET(j9FieldID->field->modifiers, J9AccStatic)\n+\t) {\n+\t\tJ9VMJAVALANGREFLECTFIELD_SET_TRUSTEDFINAL(vmThread, fieldObject, TRUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7938b1112fc50c032c73ddd103d77e30447c1fca"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjEzNDI1OA==", "bodyText": "Updated.\n@DanHeidinga please have another look.", "url": "https://github.com/eclipse-openj9/openj9/pull/10121#discussion_r452134258", "createdAt": "2020-07-09T10:56:28Z", "author": {"login": "JasonFengJ9"}, "path": "runtime/jcl/common/reflecthelp.c", "diffHunk": "@@ -829,6 +829,13 @@ createField(struct J9VMThread *vmThread, jfieldID fieldID)\n \tJ9VMJAVALANGREFLECTFIELD_SET_DECLARINGCLASS(vmThread, fieldObject, J9VM_J9CLASS_TO_HEAPCLASS(j9FieldID->declaringClass));\n #if defined(USE_SUN_REFLECT)\n \tJ9VMJAVALANGREFLECTFIELD_SET_MODIFIERS(vmThread, fieldObject, j9FieldID->field->modifiers & CFR_FIELD_ACCESS_MASK);\n+#if JAVA_SPEC_VERSION >= 15\n+\tif (J9_ARE_ANY_BITS_SET(j9FieldID->field->modifiers, J9AccFinal)\n+\t\t&& J9_ARE_ANY_BITS_SET(j9FieldID->field->modifiers, J9AccStatic)\n+\t) {\n+\t\tJ9VMJAVALANGREFLECTFIELD_SET_TRUSTEDFINAL(vmThread, fieldObject, TRUE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTk0MTM5NQ=="}, "originalCommit": {"oid": "7938b1112fc50c032c73ddd103d77e30447c1fca"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4925, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}