{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MTgzNDIz", "number": 10349, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjowMTowM1rOEWRQFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjo0NDowMlrOEWSHPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzg2NzcyOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/Trampoline.cpp", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjowMTowM1rOG9fV6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOTo0MjoxNlrOG9lyKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ==", "bodyText": "This comment is a bit puzzling. Do you mean one trampoline per 8KB of code?", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467129835", "createdAt": "2020-08-07T16:01:03Z", "author": {"login": "gita-omr"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -52,13 +55,12 @@ void ppcCodeCacheConfig(int32_t ccSizeInByte, int32_t *numTempTrampolines)\n    {\n    // Estimated: 2KB per method, with 10% being recompiled(multi-times)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIwMTc1Ng==", "bodyText": "no.  this is for temporary trampolines (as opposed to permanent trampolines). temporary trampoline is used for recompilation. at next GC point, temporary trampoline is collected and recycled, and the corresponding permanent trampoline is updated.", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467201756", "createdAt": "2020-08-07T18:26:05Z", "author": {"login": "zl-wang"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -52,13 +55,12 @@ void ppcCodeCacheConfig(int32_t ccSizeInByte, int32_t *numTempTrampolines)\n    {\n    // Estimated: 2KB per method, with 10% being recompiled(multi-times)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ=="}, "originalCommit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIxNTcwNA==", "bodyText": "But why does it say 2KB while the shift right in the next line was changed from 12 to 13?", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467215704", "createdAt": "2020-08-07T18:57:02Z", "author": {"login": "gita-omr"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -52,13 +55,12 @@ void ppcCodeCacheConfig(int32_t ccSizeInByte, int32_t *numTempTrampolines)\n    {\n    // Estimated: 2KB per method, with 10% being recompiled(multi-times)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ=="}, "originalCommit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIzMjY5NQ==", "bodyText": "the original comment meant to say: on average, per compilation is 2KB. with 10% of them expected to be recompiled (and possibly multiple times), we are setting the number of temporary trampolines to be some multiple of ccSize/20KB. such that, the earlier version is ccSize/4KB (5 times recompilation).  This time around, the individual trampoline size is enlarged to 32byte (for better branch target prediction purpose). It is not affordable to have that many temporary trampolines.  5-time recompilation in a single GC period is too conservative and wasting temporary tramp[olines. As a result, we adjusted it down to 2.5 time recompilation ... so, ccSize/8KB.", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467232695", "createdAt": "2020-08-07T19:35:40Z", "author": {"login": "zl-wang"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -52,13 +55,12 @@ void ppcCodeCacheConfig(int32_t ccSizeInByte, int32_t *numTempTrampolines)\n    {\n    // Estimated: 2KB per method, with 10% being recompiled(multi-times)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ=="}, "originalCommit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIzNDM1MQ==", "bodyText": "by the way, running out of temporary trampoline is not a bug ... it still can continue:  just leading to repeated codePatching requests during that GC interval.  less performing in that sense.", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467234351", "createdAt": "2020-08-07T19:39:53Z", "author": {"login": "zl-wang"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -52,13 +55,12 @@ void ppcCodeCacheConfig(int32_t ccSizeInByte, int32_t *numTempTrampolines)\n    {\n    // Estimated: 2KB per method, with 10% being recompiled(multi-times)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ=="}, "originalCommit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIzNTM2OQ==", "bodyText": "i believed that (ccSize/8KB) is still plenty for temp trampolines.", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467235369", "createdAt": "2020-08-07T19:42:16Z", "author": {"login": "zl-wang"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -52,13 +55,12 @@ void ppcCodeCacheConfig(int32_t ccSizeInByte, int32_t *numTempTrampolines)\n    {\n    // Estimated: 2KB per method, with 10% being recompiled(multi-times)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzEyOTgzNQ=="}, "originalCommit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxODAwODkyOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/Trampoline.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjo0NDowMlrOG9gszg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNTo0MDoyN1rOG-UXsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE1MjA3OA==", "bodyText": "Might be helpful to describe a new trampoline layout here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467152078", "createdAt": "2020-08-07T16:44:02Z", "author": {"login": "gita-omr"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -69,14 +71,54 @@ void ppcCreateHelperTrampolines(uint8_t *trampPtr, int32_t numHelpers)\n       buffer = bufferStart;\n \n #if defined(TR_TARGET_64BIT)\n-         // ld gr11, [grPTOC, 8*(cookie-1)]\n-         *(int32_t *)buffer = 0xe9700000 | (((cookie-1)*sizeof(intptr_t)) & 0x0000ffff);\n+      if (!TR::Compiler->target.cpu.isAtLeast(OMR_PROCESSOR_PPC_P10))\n+         {\n+         if (!TR::Options::getCmdLineOptions()->getOption(TR_DisableTOC))\n+            {\n+            // ld gr11, [grPTOC, 8*(cookie-1)]\n+            *(int32_t *)buffer = 0xe9700000 | (((cookie-1)*sizeof(intptr_t)) & 0x0000ffff);\n+            buffer += 4;\n+            }\n+         else\n+            {\n+            // only gr11 is available for helper dispatch\n+\n+            // lis gr11, upper 16-bits\n+            *(int32_t *)buffer = 0x3d600000 | ((helper>>48) & 0x0000ffff);\n+            buffer += 4;\n+\n+            // oris gr11, gr11, bits 16--31\n+            *(int32_t *)buffer = 0x656b0000 | ((helper>>32) & 0x0000ffff);\n+            buffer += 4;\n+\n+            // rldicr gr11, gr11, 32, 31\n+            *(int32_t *)buffer = 0x796b07c6;\n+            buffer += 4;\n+\n+            // oris gr11, gr11, bits 32-47\n+            *(int32_t *)buffer = 0x656b0000 | ((helper>>16) & 0x0000ffff);\n+            buffer += 4;\n+\n+            // ori gr11, gr11, bits 48--63\n+            *(int32_t *)buffer = 0x616b0000 | (helper & 0x0000ffff);\n+            buffer += 4;\n+            }\n+         }\n+      else\n+         {\n+         // pld gr11, [,16], 1 (PC-relative)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk5ODY0Mg==", "bodyText": "indeed, it is in each instruction comment.", "url": "https://github.com/eclipse-openj9/openj9/pull/10349#discussion_r467998642", "createdAt": "2020-08-10T15:40:27Z", "author": {"login": "zl-wang"}, "path": "runtime/compiler/runtime/Trampoline.cpp", "diffHunk": "@@ -69,14 +71,54 @@ void ppcCreateHelperTrampolines(uint8_t *trampPtr, int32_t numHelpers)\n       buffer = bufferStart;\n \n #if defined(TR_TARGET_64BIT)\n-         // ld gr11, [grPTOC, 8*(cookie-1)]\n-         *(int32_t *)buffer = 0xe9700000 | (((cookie-1)*sizeof(intptr_t)) & 0x0000ffff);\n+      if (!TR::Compiler->target.cpu.isAtLeast(OMR_PROCESSOR_PPC_P10))\n+         {\n+         if (!TR::Options::getCmdLineOptions()->getOption(TR_DisableTOC))\n+            {\n+            // ld gr11, [grPTOC, 8*(cookie-1)]\n+            *(int32_t *)buffer = 0xe9700000 | (((cookie-1)*sizeof(intptr_t)) & 0x0000ffff);\n+            buffer += 4;\n+            }\n+         else\n+            {\n+            // only gr11 is available for helper dispatch\n+\n+            // lis gr11, upper 16-bits\n+            *(int32_t *)buffer = 0x3d600000 | ((helper>>48) & 0x0000ffff);\n+            buffer += 4;\n+\n+            // oris gr11, gr11, bits 16--31\n+            *(int32_t *)buffer = 0x656b0000 | ((helper>>32) & 0x0000ffff);\n+            buffer += 4;\n+\n+            // rldicr gr11, gr11, 32, 31\n+            *(int32_t *)buffer = 0x796b07c6;\n+            buffer += 4;\n+\n+            // oris gr11, gr11, bits 32-47\n+            *(int32_t *)buffer = 0x656b0000 | ((helper>>16) & 0x0000ffff);\n+            buffer += 4;\n+\n+            // ori gr11, gr11, bits 48--63\n+            *(int32_t *)buffer = 0x616b0000 | (helper & 0x0000ffff);\n+            buffer += 4;\n+            }\n+         }\n+      else\n+         {\n+         // pld gr11, [,16], 1 (PC-relative)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE1MjA3OA=="}, "originalCommit": {"oid": "086094d58e3d63d2700a52f088a62139145c15d4"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4652, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}