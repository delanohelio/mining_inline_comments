{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNjAwOTUw", "number": 8933, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODowNzowOVrODp96sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjo1ODoyM1rODqleFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzMyNjU3OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/VMJ9.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODowNzowOVrOF5ePeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODowNzowOVrOF5ePeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwODYzMw==", "bodyText": "Delete these comments", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r395808633", "createdAt": "2020-03-20T18:07:09Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/VMJ9.cpp", "diffHunk": "@@ -8350,6 +8350,33 @@ TR_J9VM::getROMMethodFromRAMMethod(J9Method *ramMethod)\n    return J9_ROM_METHOD_FROM_RAM_METHOD(ramMethod);\n    }\n \n+bool \n+TR_J9VM::noMultipleConcreteClasses(List<TR_PersistentClassInfo>* subClasses)\n+   {\n+   // printf(\"********************************************************************\\n\");\n+   // printf(\"Function client TR_J9VM::noMultipleConcreteClasses\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e0d6806ffbfb1fb715dc8e8355d680b00d03490"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzMyNzQ1OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/VMJ9.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODowNzoyOFrOF5eQDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODowNzoyOFrOF5eQDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwODc4Mg==", "bodyText": "Braces are not properly aligned", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r395808782", "createdAt": "2020-03-20T18:07:28Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/VMJ9.cpp", "diffHunk": "@@ -8350,6 +8350,33 @@ TR_J9VM::getROMMethodFromRAMMethod(J9Method *ramMethod)\n    return J9_ROM_METHOD_FROM_RAM_METHOD(ramMethod);\n    }\n \n+bool \n+TR_J9VM::noMultipleConcreteClasses(List<TR_PersistentClassInfo>* subClasses)\n+   {\n+   // printf(\"********************************************************************\\n\");\n+   // printf(\"Function client TR_J9VM::noMultipleConcreteClasses\\n\");\n+   // printf(\"********************************************************************\\n\");\n+\n+   TR::Compilation *comp = TR::comp();\n+   int count = 0;\n+   ListIterator<TR_PersistentClassInfo> i(subClasses);\n+   for (TR_PersistentClassInfo *ptClassInfo = i.getFirst(); ptClassInfo; ptClassInfo = i.getNext())\n+   {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e0d6806ffbfb1fb715dc8e8355d680b00d03490"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzMzMDAxOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/VMJ9.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODowODoxNFrOF5eRmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODowODoxNFrOF5eRmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwOTE3Nw==", "bodyText": "This could be replaced with\nclass TR_PersistentClassInfo;", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r395809177", "createdAt": "2020-03-20T18:08:14Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/VMJ9.h", "diffHunk": "@@ -45,6 +45,7 @@\n #include \"env/J9SharedCache.hpp\"\n #include \"infra/Array.hpp\"\n #include \"env/CompilerEnv.hpp\"\n+#include \"runtime/RuntimeAssumptions.hpp\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e0d6806ffbfb1fb715dc8e8355d680b00d03490"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzMzMTU5OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/VMJ9Server.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODowODo0NFrOF5eSpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODowODo0NFrOF5eSpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwOTQ0NQ==", "bodyText": "Braces are not properly aligned", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r395809445", "createdAt": "2020-03-20T18:08:44Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/VMJ9Server.cpp", "diffHunk": "@@ -1805,6 +1805,33 @@ TR_J9ServerVM::getInvokeExactThunkHelperAddress(TR::Compilation *comp, TR::Symbo\n    return helper;\n    }\n \n+bool \n+TR_J9ServerVM::noMultipleConcreteClasses(List<TR_PersistentClassInfo>* subClasses)\n+   {\n+   // printf(\"********************************************************************\\n\");\n+   // printf(\"Function server TR_J9ServerVM::noMultipleConcreteClasses\\n\");\n+   // printf(\"********************************************************************\\n\");\n+   \n+   TR::Compilation *comp = TR::comp();\n+   int count = 0;\n+   ListIterator<TR_PersistentClassInfo> i(subClasses);\n+   for (TR_PersistentClassInfo *ptClassInfo = i.getFirst(); ptClassInfo; ptClassInfo = i.getNext())\n+   {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e0d6806ffbfb1fb715dc8e8355d680b00d03490"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzMzMTYwOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/VMJ9Server.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODowODo0NFrOF5eSpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODowODo0NFrOF5eSpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgwOTQ0Ng==", "bodyText": "Eliminate these comments", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r395809446", "createdAt": "2020-03-20T18:08:44Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/VMJ9Server.cpp", "diffHunk": "@@ -1805,6 +1805,33 @@ TR_J9ServerVM::getInvokeExactThunkHelperAddress(TR::Compilation *comp, TR::Symbo\n    return helper;\n    }\n \n+bool \n+TR_J9ServerVM::noMultipleConcreteClasses(List<TR_PersistentClassInfo>* subClasses)\n+   {\n+   // printf(\"********************************************************************\\n\");\n+   // printf(\"Function server TR_J9ServerVM::noMultipleConcreteClasses\\n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e0d6806ffbfb1fb715dc8e8355d680b00d03490"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzMzNDk4OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/VMJ9Server.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxODowOTo1N1rOF5eU_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODoyODozMlrOF6StHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMDA0Nw==", "bodyText": "At this point the TR_J9ServerVM implementation is the same as the TR_J9VM.\nWe talked about changing this to avoid some messages.", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r395810047", "createdAt": "2020-03-20T18:09:57Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/VMJ9Server.cpp", "diffHunk": "@@ -1805,6 +1805,33 @@ TR_J9ServerVM::getInvokeExactThunkHelperAddress(TR::Compilation *comp, TR::Symbo\n    return helper;\n    }\n \n+bool \n+TR_J9ServerVM::noMultipleConcreteClasses(List<TR_PersistentClassInfo>* subClasses)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e0d6806ffbfb1fb715dc8e8355d680b00d03490"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2ODE4OQ==", "bodyText": "Please take a look at the latest commit. I added a check in the for loop within this function:\n\nif a class is cached on the server, proceed to further check\nif a class is not cached on the server, skip to the next class in list\nonce count reaches 2, return\nif all cached classes are checked and count still haven't reach 2, go into the second for loop and check classes that are not cached on the server", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r396668189", "createdAt": "2020-03-23T18:28:32Z", "author": {"login": "chrisc66"}, "path": "runtime/compiler/env/VMJ9Server.cpp", "diffHunk": "@@ -1805,6 +1805,33 @@ TR_J9ServerVM::getInvokeExactThunkHelperAddress(TR::Compilation *comp, TR::Symbo\n    return helper;\n    }\n \n+bool \n+TR_J9ServerVM::noMultipleConcreteClasses(List<TR_PersistentClassInfo>* subClasses)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTgxMDA0Nw=="}, "originalCommit": {"oid": "1e0d6806ffbfb1fb715dc8e8355d680b00d03490"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTcxNDEwOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/VMJ9.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjoyMzozNFrOF6aT5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjoyMzozNFrOF6aT5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc5MjgwNA==", "bodyText": "Please eliminate this empty line", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r396792804", "createdAt": "2020-03-23T22:23:34Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/VMJ9.cpp", "diffHunk": "@@ -8350,6 +8350,29 @@ TR_J9VM::getROMMethodFromRAMMethod(J9Method *ramMethod)\n    return J9_ROM_METHOD_FROM_RAM_METHOD(ramMethod);\n    }\n \n+bool \n+TR_J9VM::noMultipleConcreteClasses(List<TR_PersistentClassInfo>* subClasses)\n+   {\n+   TR::Compilation *comp = TR::comp();\n+   int count = 0;\n+   ListIterator<TR_PersistentClassInfo> i(subClasses);\n+   for (TR_PersistentClassInfo *ptClassInfo = i.getFirst(); ptClassInfo; ptClassInfo = i.getNext())\n+      {\n+      TR_OpaqueClassBlock *clazz = ptClassInfo->getClassId();\n+      if (!TR::Compiler->cls.isInterfaceClass(comp, clazz) && !TR::Compiler->cls.isAbstractClass(comp, clazz))\n+         {\n+         count++;\n+         }\n+      if (count > 1)\n+         {\n+         return false;\n+         }\n+      }\n+\n+   return true;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf46ef5f44c73fb8ed62803728e3d228f223d272"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTcyMjA3OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/VMJ9Server.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjoyNjoyMlrOF6aYkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjoyNjoyMlrOF6aYkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc5NDAwMQ==", "bodyText": "Change to \"Process classes caches at the server first\"", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r396794001", "createdAt": "2020-03-23T22:26:22Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/VMJ9Server.cpp", "diffHunk": "@@ -1805,6 +1805,53 @@ TR_J9ServerVM::getInvokeExactThunkHelperAddress(TR::Compilation *comp, TR::Symbo\n    return helper;\n    }\n \n+bool \n+TR_J9ServerVM::noMultipleConcreteClasses(List<TR_PersistentClassInfo>* subClasses)\n+   {\n+   TR::Compilation *comp = TR::comp();\n+   int count = 0;\n+   TR_ScratchList<TR_PersistentClassInfo> subClassesNotCached(comp->trMemory());\n+\n+   // traverse though classes that are cached on server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf46ef5f44c73fb8ed62803728e3d228f223d272"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTc3MTkxOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/VMJ9Server.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjo0NjozN1rOF6a3oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjo0NjozN1rOF6a3oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgwMTk1Mg==", "bodyText": "You could eliminate this continue if you put everything else under the else part of the if:\n      if (romClass == NULL)\n         {\n         subClassesNotCached.add(ptClassInfo);\n         }\n        else\n          {\n           ...\n           }", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r396801952", "createdAt": "2020-03-23T22:46:37Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/VMJ9Server.cpp", "diffHunk": "@@ -1805,6 +1805,53 @@ TR_J9ServerVM::getInvokeExactThunkHelperAddress(TR::Compilation *comp, TR::Symbo\n    return helper;\n    }\n \n+bool \n+TR_J9ServerVM::noMultipleConcreteClasses(List<TR_PersistentClassInfo>* subClasses)\n+   {\n+   TR::Compilation *comp = TR::comp();\n+   int count = 0;\n+   TR_ScratchList<TR_PersistentClassInfo> subClassesNotCached(comp->trMemory());\n+\n+   // traverse though classes that are cached on server\n+   ListIterator<TR_PersistentClassInfo> i(subClasses);\n+   for (TR_PersistentClassInfo *ptClassInfo = i.getFirst(); ptClassInfo; ptClassInfo = i.getNext())\n+      {\n+      TR_OpaqueClassBlock *clazz = ptClassInfo->getClassId();\n+      J9Class *j9clazz = TR::Compiler->cls.convertClassOffsetToClassPtr(clazz);\n+      auto romClass = JITServerHelpers::getRemoteROMClassIfCached(_compInfoPT->getClientData(), j9clazz);\n+      if (romClass == NULL)\n+         {\n+         subClassesNotCached.add(ptClassInfo);\n+         continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf46ef5f44c73fb8ed62803728e3d228f223d272"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTc3NzUwOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/VMJ9Server.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjo0ODo0NlrOF6a67g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjo0ODo0NlrOF6a67g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgwMjc5OA==", "bodyText": "Change to \"Traverse through ...\"", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r396802798", "createdAt": "2020-03-23T22:48:46Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/VMJ9Server.cpp", "diffHunk": "@@ -1805,6 +1805,53 @@ TR_J9ServerVM::getInvokeExactThunkHelperAddress(TR::Compilation *comp, TR::Symbo\n    return helper;\n    }\n \n+bool \n+TR_J9ServerVM::noMultipleConcreteClasses(List<TR_PersistentClassInfo>* subClasses)\n+   {\n+   TR::Compilation *comp = TR::comp();\n+   int count = 0;\n+   TR_ScratchList<TR_PersistentClassInfo> subClassesNotCached(comp->trMemory());\n+\n+   // traverse though classes that are cached on server\n+   ListIterator<TR_PersistentClassInfo> i(subClasses);\n+   for (TR_PersistentClassInfo *ptClassInfo = i.getFirst(); ptClassInfo; ptClassInfo = i.getNext())\n+      {\n+      TR_OpaqueClassBlock *clazz = ptClassInfo->getClassId();\n+      J9Class *j9clazz = TR::Compiler->cls.convertClassOffsetToClassPtr(clazz);\n+      auto romClass = JITServerHelpers::getRemoteROMClassIfCached(_compInfoPT->getClientData(), j9clazz);\n+      if (romClass == NULL)\n+         {\n+         subClassesNotCached.add(ptClassInfo);\n+         continue;\n+         }\n+      if (!TR::Compiler->cls.isInterfaceClass(comp, clazz) && !TR::Compiler->cls.isAbstractClass(comp, clazz))\n+         {\n+         count++;\n+         }\n+      if (count > 1)\n+         {\n+         return false;\n+         }\n+      }\n+\n+   // traverse though classes that are not cached on server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf46ef5f44c73fb8ed62803728e3d228f223d272"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTgwNjkzOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/VMJ9.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjo1ODoyM1rOF6bMuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjo1ODozOVrOF6bNFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgwNzM1Mw==", "bodyText": "You could use TR::Compilation *comp = _compInfoPT->getCompilation();\nor pass the comp object as a parameter to make it clear this function can only be executed during compilation", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r396807353", "createdAt": "2020-03-23T22:58:23Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/VMJ9.cpp", "diffHunk": "@@ -8350,6 +8350,29 @@ TR_J9VM::getROMMethodFromRAMMethod(J9Method *ramMethod)\n    return J9_ROM_METHOD_FROM_RAM_METHOD(ramMethod);\n    }\n \n+bool \n+TR_J9VM::noMultipleConcreteClasses(List<TR_PersistentClassInfo>* subClasses)\n+   {\n+   TR::Compilation *comp = TR::comp();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf46ef5f44c73fb8ed62803728e3d228f223d272"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgwNzQ0Ng==", "bodyText": "Use the same for JITServer implementation", "url": "https://github.com/eclipse-openj9/openj9/pull/8933#discussion_r396807446", "createdAt": "2020-03-23T22:58:39Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/VMJ9.cpp", "diffHunk": "@@ -8350,6 +8350,29 @@ TR_J9VM::getROMMethodFromRAMMethod(J9Method *ramMethod)\n    return J9_ROM_METHOD_FROM_RAM_METHOD(ramMethod);\n    }\n \n+bool \n+TR_J9VM::noMultipleConcreteClasses(List<TR_PersistentClassInfo>* subClasses)\n+   {\n+   TR::Compilation *comp = TR::comp();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgwNzM1Mw=="}, "originalCommit": {"oid": "bf46ef5f44c73fb8ed62803728e3d228f223d272"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 408, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}