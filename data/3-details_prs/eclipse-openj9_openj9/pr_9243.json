{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMzcxNzcz", "number": 9243, "title": "Guard unloading class events and compilations with RWMutex", "bodyText": "Use RWMutex to guard access to the client session data during the compilation to prevent the race condition in accessing the caches related to the unloaded classes at the server. TR::CompilationInterrupt exception is thrown at the server if one compilation tries to do\na read access to the client session cache while another compilation just attempted a write access to the same client session data.  It results in a compilationFailure message along\nwith statusCode=compilationInterrupted being sent to the client.\nImplements #9212.\nSigned-off-by: Annabelle Huo Annabelle.Huo@ibm.com", "createdAt": "2020-04-14T19:28:43Z", "url": "https://github.com/eclipse-openj9/openj9/pull/9243", "merged": true, "mergeCommit": {"oid": "61238e92383691d551c2a136d70bb754aebf42f3"}, "closed": true, "closedAt": "2020-04-21T07:30:53Z", "author": {"login": "a7ehuo"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXtrjBAFqTM5MzM4NzA1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZnTlugFqTM5Njg3MDkwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzg3MDUw", "url": "https://github.com/eclipse-openj9/openj9/pull/9243#pullrequestreview-393387050", "createdAt": "2020-04-15T00:45:28Z", "commit": {"oid": "d105f58370bd56d869b42fa2fd2390fb1dd16946"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMDo0NToyOFrOGFl46Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwMToxMToxN1rOGFmTqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxNjg0MQ==", "bodyText": "Let's mark this as const", "url": "https://github.com/eclipse-openj9/openj9/pull/9243#discussion_r408516841", "createdAt": "2020-04-15T00:45:28Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.hpp", "diffHunk": "@@ -406,6 +406,14 @@ class ClientSessionData\n    J9SharedClassCacheDescriptor * reconstructJ9SharedClassCacheDescriptorList(const std::vector<uintptr_t> &listOfCacheStartAddress, const std::vector<uintptr_t> &listOfCacheSizeBytes);\n    void destroyJ9SharedClassCacheDescriptorList();\n \n+   volatile bool isClassUnloadingAttempted() { return _bClassUnloadingAttempt; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d105f58370bd56d869b42fa2fd2390fb1dd16946"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUxODM3OQ==", "bodyText": "Let's switch these two statements, otherwise there is a small window of time where, even though the RWMutex has been released another thread could see _bClassUnloadingAttempt and fail a compilation for nothing.", "url": "https://github.com/eclipse-openj9/openj9/pull/9243#discussion_r408518379", "createdAt": "2020-04-15T00:50:56Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -556,6 +571,31 @@ void ClientSessionData::purgeCache(std::vector<ClassUnloadedData> *unloadedClass\n       }\n    }\n \n+void\n+ClientSessionData::readAcquireClassUnloadRWMutex()\n+   {\n+   omrthread_rwmutex_enter_read(_classUnloadRWMutex);\n+   }\n+\n+void\n+ClientSessionData::readReleaseClassUnloadRWMutex()\n+   {\n+   omrthread_rwmutex_exit_read(_classUnloadRWMutex);\n+   }\n+\n+void\n+ClientSessionData::writeAcquireClassUnloadRWMutex()\n+   {\n+    _bClassUnloadingAttempt = true;\n+   omrthread_rwmutex_enter_write(_classUnloadRWMutex);\n+   }\n+\n+void\n+ClientSessionData::writeReleaseClassUnloadRWMutex()\n+   {\n+   omrthread_rwmutex_exit_write(_classUnloadRWMutex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d105f58370bd56d869b42fa2fd2390fb1dd16946"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODUyMzY4OA==", "bodyText": "Is the condition on isReadingClassUnload() needed?\nIs this the filter for catching the case when we need to send one message while doing class unloading?", "url": "https://github.com/eclipse-openj9/openj9/pull/9243#discussion_r408523688", "createdAt": "2020-04-15T01:11:17Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/ServerStream.hpp", "diffHunk": "@@ -73,17 +74,26 @@ class ServerStream : public CommunicationStream\n    virtual ~ServerStream()\n       {\n       _numConnectionsClosed++;\n+      _pClientSessionData = NULL;\n       }\n \n    /**\n       @brief Send a message to the client\n \n       @param [in] type Message type to be sent\n-      @param [in] args Variable number of additional paramaters to be sent\n+      @param [in] args Variable number of additional parameters to be sent\n    */\n    template <typename ...Args>\n    void write(MessageType type, Args... args)\n       {\n+      // TODO: Depending on where the mutex is taken for read,\n+      // we probably don't need to check the message CHTable_getClassInfoUpdates.\n+      if (isReadingClassUnload() && isClassUnloadingAttempted())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d105f58370bd56d869b42fa2fd2390fb1dd16946"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d105f58370bd56d869b42fa2fd2390fb1dd16946", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d105f58370bd56d869b42fa2fd2390fb1dd16946", "committedDate": "2020-04-14T19:23:56Z", "message": "Guard unloading class events and compilations with mutex\n\nPrototype the fix for the race condition\nwith unloaded classes at the server.\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "6c8a67b9f0dc9532981629cf680c308c6d4b659c", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6c8a67b9f0dc9532981629cf680c308c6d4b659c", "committedDate": "2020-04-16T00:48:09Z", "message": "Guard unloading class events and compilations with mutex\n\nUse RWMutex to guard access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c8a67b9f0dc9532981629cf680c308c6d4b659c", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6c8a67b9f0dc9532981629cf680c308c6d4b659c", "committedDate": "2020-04-16T00:48:09Z", "message": "Guard unloading class events and compilations with mutex\n\nUse RWMutex to guard access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "f3df2c83df10e145445f51f551a1c70004bc4d14", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f3df2c83df10e145445f51f551a1c70004bc4d14", "committedDate": "2020-04-16T01:22:21Z", "message": "Guard unloading class events and compilations with RWMutex\n\nUse RWMutex to guard access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NzIzMjM2", "url": "https://github.com/eclipse-openj9/openj9/pull/9243#pullrequestreview-394723236", "createdAt": "2020-04-16T15:00:40Z", "commit": {"oid": "f3df2c83df10e145445f51f551a1c70004bc4d14"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTowMDo0MFrOGGprPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTowMDo0MFrOGGprPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTYyNzQ1NQ==", "bodyText": "This error code is too generic. I am afraid that the client will not try to retry the compilation when it sees this code.", "url": "https://github.com/eclipse-openj9/openj9/pull/9243#discussion_r409627455", "createdAt": "2020-04-16T15:00:40Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -11141,31 +11143,38 @@ TR::CompilationInfoPerThreadBase::processException(\n    catch (const JITServer::StreamFailure &e)\n       {\n       if (TR::Options::getVerboseOption(TR_VerboseJITServer))\n-         TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"JITServer StreamFailure: %s\", e.what());\n+         TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"compThreadID=%d JITServer StreamFailure: %s\", getCompThreadId(), e.what());\n       _methodBeingCompiled->_compErrCode = compilationStreamFailure;\n       }\n    catch (const JITServer::StreamInterrupted &e)\n       {\n       if (TR::Options::getVerboseOption(TR_VerboseJITServer))\n-         TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"JITServer StreamInterrupted: %s\", e.what());\n+         TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"compThreadID=%d JITServer StreamInterrupted: %s\", getCompThreadId(), e.what());\n       _methodBeingCompiled->_compErrCode = compilationStreamInterrupted;\n       }\n    catch (const JITServer::StreamVersionIncompatible &e)\n       {\n       if (TR::Options::getVerboseOption(TR_VerboseJITServer))\n-         TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"JITServer StreamVersionIncompatible: %s\", e.what());\n+         TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"compThreadID=%d JITServer StreamVersionIncompatible: %s\", getCompThreadId(), e.what());\n       _methodBeingCompiled->_compErrCode = compilationStreamVersionIncompatible;\n       }\n    catch (const JITServer::StreamMessageTypeMismatch &e)\n       {\n       if (TR::Options::getVerboseOption(TR_VerboseJITServer))\n-         TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"JITServer StreamMessageTypeMismatch: %s\", e.what());\n+         TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"compThreadID=%d JITServer StreamMessageTypeMismatch: %s\", getCompThreadId(), e.what());\n       _methodBeingCompiled->_compErrCode = compilationStreamMessageTypeMismatch;\n       }\n    catch (const JITServer::ServerCompilationFailure &e)\n       {\n-      // no need to set error code here because error code is set\n+      // no need to set error code at JITClient because error code is set\n       // in remoteCompile when the compilation failed\n+      if (_methodBeingCompiled->isOutOfProcessCompReq())\n+         {\n+         if (TR::Options::getVerboseOption(TR_VerboseJITServer))\n+            TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"compThreadID=%d JITServer ServerCompilationFailure: %s\", getCompThreadId(), e.what());\n+\n+         _methodBeingCompiled->_compErrCode = compilationFailure;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3df2c83df10e145445f51f551a1c70004bc4d14"}, "originalPosition": 59}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3df2c83df10e145445f51f551a1c70004bc4d14", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f3df2c83df10e145445f51f551a1c70004bc4d14", "committedDate": "2020-04-16T01:22:21Z", "message": "Guard unloading class events and compilations with RWMutex\n\nUse RWMutex to guard access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "50c9777beaad2292f81514f129ba8095fd06d1d7", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/50c9777beaad2292f81514f129ba8095fd06d1d7", "committedDate": "2020-04-16T22:42:08Z", "message": "Guard unloading class events and compilations with RWMutex\n\nUse RWMutex to guard the access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.`TR::CompilationInterrupt` exception is\nthrown at the server if one compilation thread tries to do\na read access to the client session cache while another\ncompilation thread just attempted a write access to the same\nclient session data. It results in a `compilationFailure`\nmessage along with statusCode=compilationInterrupted being\nsent to the client.\n\nImplements #9212\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDI5NTE1", "url": "https://github.com/eclipse-openj9/openj9/pull/9243#pullrequestreview-395429515", "createdAt": "2020-04-17T12:58:05Z", "commit": {"oid": "50c9777beaad2292f81514f129ba8095fd06d1d7"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50c9777beaad2292f81514f129ba8095fd06d1d7", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/50c9777beaad2292f81514f129ba8095fd06d1d7", "committedDate": "2020-04-16T22:42:08Z", "message": "Guard unloading class events and compilations with RWMutex\n\nUse RWMutex to guard the access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.`TR::CompilationInterrupt` exception is\nthrown at the server if one compilation thread tries to do\na read access to the client session cache while another\ncompilation thread just attempted a write access to the same\nclient session data. It results in a `compilationFailure`\nmessage along with statusCode=compilationInterrupted being\nsent to the client.\n\nImplements #9212\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "c6e7d0238608a317567e8d63d021d97932fc4de9", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c6e7d0238608a317567e8d63d021d97932fc4de9", "committedDate": "2020-04-17T18:56:07Z", "message": "Guard unloading class events and compilations with RWMutex\n\nUse RWMutex to guard the access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.`TR::CompilationInterrupt` exception is\nthrown at the server if one compilation thread tries to do\na read access to the client session cache while another\ncompilation thread just attempted a write access to the same\nclient session data. It results in a `compilationFailure`\nmessage along with statusCode=compilationInterrupted being\nsent to the client.\n\nImplements #9212\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6e7d0238608a317567e8d63d021d97932fc4de9", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c6e7d0238608a317567e8d63d021d97932fc4de9", "committedDate": "2020-04-17T18:56:07Z", "message": "Guard unloading class events and compilations with RWMutex\n\nUse RWMutex to guard the access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.`TR::CompilationInterrupt` exception is\nthrown at the server if one compilation thread tries to do\na read access to the client session cache while another\ncompilation thread just attempted a write access to the same\nclient session data. It results in a `compilationFailure`\nmessage along with statusCode=compilationInterrupted being\nsent to the client.\n\nImplements #9212\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "395aeff06c19137c13395203c36eaf5355a23b55", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/395aeff06c19137c13395203c36eaf5355a23b55", "committedDate": "2020-04-17T19:13:31Z", "message": "Guard unloading class events and compilations with RWMutex\n\nUse RWMutex to guard the access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.`TR::CompilationInterrupt` exception is\nthrown at the server if one compilation thread tries to do\na read access to the client session cache while another\ncompilation thread just attempted a write access to the same\nclient session data. It results in a `compilationFailure`\nmessage along with statusCode=compilationInterrupted being\nsent to the client.\n\nImplements #9212\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1Nzc0NjM1", "url": "https://github.com/eclipse-openj9/openj9/pull/9243#pullrequestreview-395774635", "createdAt": "2020-04-17T21:10:07Z", "commit": {"oid": "395aeff06c19137c13395203c36eaf5355a23b55"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMToxMDowN1rOGHdMhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMToyMjoyNFrOGHdfMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ3MTU1Nw==", "bodyText": "Any particular reason you needed a cast here?", "url": "https://github.com/eclipse-openj9/openj9/pull/9243#discussion_r410471557", "createdAt": "2020-04-17T21:10:07Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -91,11 +101,16 @@ ClientSessionData::updateTimeOfLastAccess()\n void\n ClientSessionData::processUnloadedClasses(JITServer::ServerStream *stream, const std::vector<TR_OpaqueClassBlock*> &classes)\n    {\n+   const uint32_t numOfUnloadedClasses = (uint32_t)classes.size();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395aeff06c19137c13395203c36eaf5355a23b55"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQ3NjMzNw==", "bodyText": "I am thinking that we may need to hold the RWMonitor only for removes. The updates are handled at the client just with the CHTableMonitor, so the server should be able to do the same", "url": "https://github.com/eclipse-openj9/openj9/pull/9243#discussion_r410476337", "createdAt": "2020-04-17T21:22:24Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/JITServerPersistentCHTable.cpp", "diffHunk": "@@ -74,10 +74,19 @@ void\n JITServerPersistentCHTable::doUpdate(TR_J9VMBase *fej9, const std::string &removeStr, const std::string &modifyStr)\n    {\n    TR::ClassTableCriticalSection doUpdate(fej9);\n+   ClientSessionData *clientData = TR::compInfoPT->getClientData();\n    if (!modifyStr.empty())\n+      {\n+      clientData->writeAcquireClassUnloadRWMutex();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "395aeff06c19137c13395203c36eaf5355a23b55"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "395aeff06c19137c13395203c36eaf5355a23b55", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/395aeff06c19137c13395203c36eaf5355a23b55", "committedDate": "2020-04-17T19:13:31Z", "message": "Guard unloading class events and compilations with RWMutex\n\nUse RWMutex to guard the access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.`TR::CompilationInterrupt` exception is\nthrown at the server if one compilation thread tries to do\na read access to the client session cache while another\ncompilation thread just attempted a write access to the same\nclient session data. It results in a `compilationFailure`\nmessage along with statusCode=compilationInterrupted being\nsent to the client.\n\nImplements #9212\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "e2350f7e136ec7b1c2bbc7705cc5c02293bae35a", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e2350f7e136ec7b1c2bbc7705cc5c02293bae35a", "committedDate": "2020-04-20T02:29:37Z", "message": "Guard unloading class events and compilations with RWMutex\n\nUse RWMutex to guard the access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.`TR::CompilationInterrupt` exception is\nthrown at the server if one compilation thread tries to do\na read access to the client session cache while another\ncompilation thread just attempted a write access to the same\nclient session data. It results in a `compilationFailure`\nmessage along with statusCode=compilationInterrupted being\nsent to the client.\n\nImplements #9212\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca540bf7cb1ba3174aa150338af6429b1e86fee2", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ca540bf7cb1ba3174aa150338af6429b1e86fee2", "committedDate": "2020-04-20T17:29:29Z", "message": "Guard unloading class events and compilations with RWMutex\n\nUse RWMutex to guard the access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.`TR::CompilationInterrupt` exception is\nthrown at the server if one compilation thread tries to do\na read access to the client session cache while another\ncompilation thread just attempted a write access to the same\nclient session data. It results in a `compilationFailure`\nmessage along with statusCode=compilationInterrupted being\nsent to the client.\n\nImplements #9212\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e2350f7e136ec7b1c2bbc7705cc5c02293bae35a", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e2350f7e136ec7b1c2bbc7705cc5c02293bae35a", "committedDate": "2020-04-20T02:29:37Z", "message": "Guard unloading class events and compilations with RWMutex\n\nUse RWMutex to guard the access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.`TR::CompilationInterrupt` exception is\nthrown at the server if one compilation thread tries to do\na read access to the client session cache while another\ncompilation thread just attempted a write access to the same\nclient session data. It results in a `compilationFailure`\nmessage along with statusCode=compilationInterrupted being\nsent to the client.\n\nImplements #9212\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "ca540bf7cb1ba3174aa150338af6429b1e86fee2", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ca540bf7cb1ba3174aa150338af6429b1e86fee2", "committedDate": "2020-04-20T17:29:29Z", "message": "Guard unloading class events and compilations with RWMutex\n\nUse RWMutex to guard the access to the client session data\nduring the compilation to prevent the race condition\nin accessing the caches related to the unloaded classes\nat the server.`TR::CompilationInterrupt` exception is\nthrown at the server if one compilation thread tries to do\na read access to the client session cache while another\ncompilation thread just attempted a write access to the same\nclient session data. It results in a `compilationFailure`\nmessage along with statusCode=compilationInterrupted being\nsent to the client.\n\nImplements #9212\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2ODcwOTA2", "url": "https://github.com/eclipse-openj9/openj9/pull/9243#pullrequestreview-396870906", "createdAt": "2020-04-20T23:01:53Z", "commit": {"oid": "ca540bf7cb1ba3174aa150338af6429b1e86fee2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1272, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}