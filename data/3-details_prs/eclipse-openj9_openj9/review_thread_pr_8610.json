{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MDA5NTUx", "number": 8610, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNTozMjoxNlrODhHMCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNTozMjoxNlrODhHMCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDQ3MzcxOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/env/j9methodServer.cpp", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNTozMjoxN1rOFrsXVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOTo0MToyNlrOFr1ClA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM1OTk1OQ==", "bodyText": "Is there an optimization opportunity here for isStatic == false? It seems like we can call the parent class method and avoid the network.", "url": "https://github.com/eclipse-openj9/openj9/pull/8610#discussion_r381359959", "createdAt": "2020-02-19T15:32:17Z", "author": {"login": "ymanton"}, "path": "runtime/compiler/env/j9methodServer.cpp", "diffHunk": "@@ -152,6 +152,15 @@ TR_ResolvedJ9JITServerMethod::staticAttributes(TR::Compilation * comp, I_32 cpIn\n    return result;\n    }\n \n+TR_OpaqueClassBlock * \n+TR_ResolvedJ9JITServerMethod::definingClassFromCPFieldRef(TR::Compilation *comp, int32_t cpIndex, bool isStatic)\n+   {\n+   // Send a message to the client\n+   _stream->write(JITServer::MessageType::ResolvedMethod_definingClassFromCPFieldRef, _remoteMirror, cpIndex, isStatic);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6a6111211440e146fe7911715245ab6a6415434"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ5Nzg5Ng==", "bodyText": "I don't understand.", "url": "https://github.com/eclipse-openj9/openj9/pull/8610#discussion_r381497896", "createdAt": "2020-02-19T19:33:34Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/j9methodServer.cpp", "diffHunk": "@@ -152,6 +152,15 @@ TR_ResolvedJ9JITServerMethod::staticAttributes(TR::Compilation * comp, I_32 cpIn\n    return result;\n    }\n \n+TR_OpaqueClassBlock * \n+TR_ResolvedJ9JITServerMethod::definingClassFromCPFieldRef(TR::Compilation *comp, int32_t cpIndex, bool isStatic)\n+   {\n+   // Send a message to the client\n+   _stream->write(JITServer::MessageType::ResolvedMethod_definingClassFromCPFieldRef, _remoteMirror, cpIndex, isStatic);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM1OTk1OQ=="}, "originalCommit": {"oid": "d6a6111211440e146fe7911715245ab6a6415434"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUwMjEwMA==", "bodyText": "Sorry, my mistake, I thought the code in TR_ResolvedJ9Method::definingClassFromCPFieldRef() that we were trying to avoid executing on the server was inside an if (isStatic) check and that for isStatic == false we could still call the original implementation rather than going over the network, but it's not.", "url": "https://github.com/eclipse-openj9/openj9/pull/8610#discussion_r381502100", "createdAt": "2020-02-19T19:41:26Z", "author": {"login": "ymanton"}, "path": "runtime/compiler/env/j9methodServer.cpp", "diffHunk": "@@ -152,6 +152,15 @@ TR_ResolvedJ9JITServerMethod::staticAttributes(TR::Compilation * comp, I_32 cpIn\n    return result;\n    }\n \n+TR_OpaqueClassBlock * \n+TR_ResolvedJ9JITServerMethod::definingClassFromCPFieldRef(TR::Compilation *comp, int32_t cpIndex, bool isStatic)\n+   {\n+   // Send a message to the client\n+   _stream->write(JITServer::MessageType::ResolvedMethod_definingClassFromCPFieldRef, _remoteMirror, cpIndex, isStatic);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM1OTk1OQ=="}, "originalCommit": {"oid": "d6a6111211440e146fe7911715245ab6a6415434"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 591, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}