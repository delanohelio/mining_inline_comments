{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MDA4MjE2", "number": 10381, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzowNjo0N1rOEYC0xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzowMzozNFrOEbqZaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjQ3NTU5OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzowNjo0N1rOHAKpow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzowNjo0N1rOHAKpow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkzNjU0Nw==", "bodyText": "Please keep imports sorted.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469936547", "createdAt": "2020-08-13T13:06:47Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "diffHunk": "@@ -30,6 +30,7 @@\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_SOURCE_DEBUG_EXTENSION;\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_SOURCE_FILE_NAME;\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_TYPE_ANNOTATION_INFO;\n+import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjQ4MDAxOnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzowNzo1NlrOHAKsWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzowNzo1NlrOHAKsWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkzNzI0Mw==", "bodyText": "Please remove trailing whitespace (at least in new code).", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469937243", "createdAt": "2020-08-13T13:07:56Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "diffHunk": "@@ -236,4 +237,33 @@ public static J9SourceDebugExtensionPointer getSourceDebugExtensionForROMClass(J\n \t\treturn J9SourceDebugExtensionPointer.NULL;\n \t}\n \n+\tprivate static U32Pointer getPermittedSubclassPointer(J9ROMClassPointer romClass) throws CorruptDataException {\n+\t\tSelfRelativePointer srpPtr = getSRPPtr(J9ROMClassHelper.optionalInfo(romClass), romClass.optionalFlags(), \n+\t\t\tJ9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE);\n+\t\tif (!srpPtr.isNull()) {\n+\t\t\treturn U32Pointer.cast(srpPtr.get());\n+\t\t}\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjU3Mjc4OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzoyOTo0OFrOHALkEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzoyOTo0OFrOHALkEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1MTUwNQ==", "bodyText": "Please leave a blank line between methods.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469951505", "createdAt": "2020-08-13T13:29:48Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -846,6 +860,54 @@ int allSlotsInVerificationTypeInfoDo(U8Pointer cursor) throws CorruptDataExcepti\n \t\t}\n \t\treturn 3;\n \t}\n+\tvoid recordAttributeDo(U32Pointer attribute) throws CorruptDataException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjYwMzY3OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzozNjoyMVrOHAL2bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNjoxNDo0NFrOHASp8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1NjIwNA==", "bodyText": "Have you verified that no tests are affected by this change?", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469956204", "createdAt": "2020-08-13T13:36:21Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java", "diffHunk": "@@ -557,10 +557,10 @@ public static void j9bcutil_dumpRomClass(PrintStream out, J9ROMClassPointer romC\n \t\t/* dump the enclosing method */\n \t\tdumpEnclosingMethod(out, romClass, flags);\n \n-\t\tout.append(String.format(\"Sun Access Flags (0x%s): \", Long.toHexString(romClass.modifiers().longValue())));\n+\t\tout.append(String.format(\"Oracle Access Flags (0x%s): \", Long.toHexString(romClass.modifiers().longValue())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk3MjEwMw==", "bodyText": "No. I will try it out.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469972103", "createdAt": "2020-08-13T13:58:45Z", "author": {"login": "theresa-m"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java", "diffHunk": "@@ -557,10 +557,10 @@ public static void j9bcutil_dumpRomClass(PrintStream out, J9ROMClassPointer romC\n \t\t/* dump the enclosing method */\n \t\tdumpEnclosingMethod(out, romClass, flags);\n \n-\t\tout.append(String.format(\"Sun Access Flags (0x%s): \", Long.toHexString(romClass.modifiers().longValue())));\n+\t\tout.append(String.format(\"Oracle Access Flags (0x%s): \", Long.toHexString(romClass.modifiers().longValue())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1NjIwNA=="}, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAxNTU1OA==", "bodyText": "The OpenJ9 DDR tests are passing for me locally.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r470015558", "createdAt": "2020-08-13T14:57:37Z", "author": {"login": "theresa-m"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java", "diffHunk": "@@ -557,10 +557,10 @@ public static void j9bcutil_dumpRomClass(PrintStream out, J9ROMClassPointer romC\n \t\t/* dump the enclosing method */\n \t\tdumpEnclosingMethod(out, romClass, flags);\n \n-\t\tout.append(String.format(\"Sun Access Flags (0x%s): \", Long.toHexString(romClass.modifiers().longValue())));\n+\t\tout.append(String.format(\"Oracle Access Flags (0x%s): \", Long.toHexString(romClass.modifiers().longValue())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1NjIwNA=="}, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA2MDg3Mw==", "bodyText": "As I think about this again, I think (given we're changing things) that it should not refer to 'Sun' or 'Oracle': How about 'Basic Access Flags'?", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r470060873", "createdAt": "2020-08-13T16:03:39Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java", "diffHunk": "@@ -557,10 +557,10 @@ public static void j9bcutil_dumpRomClass(PrintStream out, J9ROMClassPointer romC\n \t\t/* dump the enclosing method */\n \t\tdumpEnclosingMethod(out, romClass, flags);\n \n-\t\tout.append(String.format(\"Sun Access Flags (0x%s): \", Long.toHexString(romClass.modifiers().longValue())));\n+\t\tout.append(String.format(\"Oracle Access Flags (0x%s): \", Long.toHexString(romClass.modifiers().longValue())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1NjIwNA=="}, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA2NzY5OQ==", "bodyText": "Agreed. I originally added Oracle to match the statement in rcdump.c but I think both should be updated.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r470067699", "createdAt": "2020-08-13T16:14:44Z", "author": {"login": "theresa-m"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java", "diffHunk": "@@ -557,10 +557,10 @@ public static void j9bcutil_dumpRomClass(PrintStream out, J9ROMClassPointer romC\n \t\t/* dump the enclosing method */\n \t\tdumpEnclosingMethod(out, romClass, flags);\n \n-\t\tout.append(String.format(\"Sun Access Flags (0x%s): \", Long.toHexString(romClass.modifiers().longValue())));\n+\t\tout.append(String.format(\"Oracle Access Flags (0x%s): \", Long.toHexString(romClass.modifiers().longValue())));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1NjIwNA=="}, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjYxNDUxOnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzozODo1N1rOHAL9PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzozODo1N1rOHAL9PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1Nzk0OA==", "bodyText": "Please instead use out.format(\"Permitted subclasses (%d):%n\", permittedSubclassCount)\n\n%n expresses the desired newline\nthere's no need to build the string locally", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469957948", "createdAt": "2020-08-13T13:38:57Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java", "diffHunk": "@@ -610,6 +610,18 @@ public static void j9bcutil_dumpRomClass(PrintStream out, J9ROMClassPointer romC\n \t\t\t}\n \t\t}\n \n+\t\t/* Permitted subclasses for a sealed class */\n+\t\tif (J9ROMClassHelper.isSealed(romClass)) {\n+\t\t\tint permittedSubclassCount = OptInfo.getPermittedSubclassCount(romClass);\n+\t\t\tout.append(String.format(\"Permitted subclasses (%d):\" + nl, permittedSubclassCount));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjYxOTM4OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo0MDowM1rOHAMALg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo0MDowM1rOHAMALg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1ODcwMg==", "bodyText": "out.format(\"   %s%n\", J9UTF8Helper.stringValue(permittedSubclassName));", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469958702", "createdAt": "2020-08-13T13:40:03Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java", "diffHunk": "@@ -610,6 +610,18 @@ public static void j9bcutil_dumpRomClass(PrintStream out, J9ROMClassPointer romC\n \t\t\t}\n \t\t}\n \n+\t\t/* Permitted subclasses for a sealed class */\n+\t\tif (J9ROMClassHelper.isSealed(romClass)) {\n+\t\t\tint permittedSubclassCount = OptInfo.getPermittedSubclassCount(romClass);\n+\t\t\tout.append(String.format(\"Permitted subclasses (%d):\" + nl, permittedSubclassCount));\n+\n+\t\t\tfor (int i = 0; i < permittedSubclassCount; i++) {\n+\t\t\t\tJ9UTF8Pointer permittedSubclassName = OptInfo.getPermittedSubclassNameAtIndex(romClass, i);\n+\t\t\t\tout.append(\"   \" + J9UTF8Helper.stringValue(permittedSubclassName));\n+\t\t\t\tout.append(nl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjYyMjA1OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo0MDo0MVrOHAMB5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo0MDo0MVrOHAMB5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1OTE0Mg==", "bodyText": "Spaces after closing ) are missing.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469959142", "createdAt": "2020-08-13T13:40:41Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/commands/J9BCUtil.java", "diffHunk": "@@ -715,6 +727,10 @@ private static void dumpClassJ9ExtraModifiers(PrintStream out, long accessFlags)\n \t\t\tout.append(\"(anonClass) \");\n \t\tif ((accessFlags & J9AccClassIsUnmodifiableBit) != 0)\n \t\t\tout.append(\"(unmodifiable) \");\n+\t\tif ((accessFlags & J9JavaAccessFlags.J9AccRecord) != 0)\n+\t\t\tout.append(\"(record)\");\n+\t\tif ((accessFlags & J9JavaAccessFlags.J9AccSealed) != 0)\n+\t\t\tout.append(\"(sealed)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjYyNDUwOnYy", "diffSide": "RIGHT", "path": "runtime/util/rcdump.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo0MToyMFrOHAMDcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo0MToyMFrOHAMDcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk1OTUzOQ==", "bodyText": "formatting: please move brace to end of preceding line.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469959539", "createdAt": "2020-08-13T13:41:20Z", "author": {"login": "keithc-ca"}, "path": "runtime/util/rcdump.c", "diffHunk": "@@ -180,6 +181,11 @@ IDATA j9bcutil_dumpRomClass( J9ROMClass *romClass, J9PortLibrary *portLib, J9Tra\n \t\t}\n \t}\n \n+\tif (J9ROMCLASS_IS_SEALED(romClass))\n+\t{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjYzMTkwOnYy", "diffSide": "RIGHT", "path": "runtime/util/rcdump.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo0MzowMVrOHAMIEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo0MzowMVrOHAMIEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2MDcyMw==", "bodyText": "Please be consistent: * next to name instead of type:\nJ9UTF8 *permittedSubclassNameUtf8 = ...", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469960723", "createdAt": "2020-08-13T13:43:01Z", "author": {"login": "keithc-ca"}, "path": "runtime/util/rcdump.c", "diffHunk": "@@ -823,6 +829,22 @@ dumpEnclosingMethod(J9PortLibrary *portLib, J9ROMClass *romClass, U_32 flags)\n \treturn BCT_ERR_NO_ERROR;\n }\n \n+static I_32\n+dumpPermittedSubclasses(J9PortLibrary *portLib, J9ROMClass *romClass)\n+{\n+\tPORT_ACCESS_FROM_PORT(portLib);\n+\n+\tU_32 *permittedSubclassesCountPtr = getNumberOfPermittedSubclassesPtr(romClass);\n+\tU_16 i = 0;\n+\n+\tj9tty_printf(PORTLIB, \"Permitted subclasses (%i):\\n\", *permittedSubclassesCountPtr);\n+\tfor (; i < *permittedSubclassesCountPtr; i++) {\n+\t\tJ9UTF8* permittedSubclassNameUtf8 = permittedSubclassesNameAtIndex(permittedSubclassesCountPtr, i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjY1MDQ4OnYy", "diffSide": "RIGHT", "path": "runtime/util/rcdump.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo0NzowM1rOHAMTSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDoxMjo1MlrOHANZ2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2MzU5Mg==", "bodyText": "getNumberOfPermittedSubclassesPtr seems a strange API to me: why return a pointer (nobody appears to write to it)?\nIf we decide to change it, that change should be deferred to a separate pull request.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469963592", "createdAt": "2020-08-13T13:47:03Z", "author": {"login": "keithc-ca"}, "path": "runtime/util/rcdump.c", "diffHunk": "@@ -823,6 +829,22 @@ dumpEnclosingMethod(J9PortLibrary *portLib, J9ROMClass *romClass, U_32 flags)\n \treturn BCT_ERR_NO_ERROR;\n }\n \n+static I_32\n+dumpPermittedSubclasses(J9PortLibrary *portLib, J9ROMClass *romClass)\n+{\n+\tPORT_ACCESS_FROM_PORT(portLib);\n+\n+\tU_32 *permittedSubclassesCountPtr = getNumberOfPermittedSubclassesPtr(romClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk4MTY1OA==", "bodyText": "Yes its a bit odd to the other optinfo api methods. Other variable-length sections of ROM class optionalInfo have iterator like setups but that seemed like overkill to me here since its only a list of class names that is stored.\nThe list of permitted subclass names is located directly after permittedSubclassesCountPtr so permittedSubclassesNameAtIndex takes in this pointer later as a starting address to find the class name.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469981658", "createdAt": "2020-08-13T14:12:52Z", "author": {"login": "theresa-m"}, "path": "runtime/util/rcdump.c", "diffHunk": "@@ -823,6 +829,22 @@ dumpEnclosingMethod(J9PortLibrary *portLib, J9ROMClass *romClass, U_32 flags)\n \treturn BCT_ERR_NO_ERROR;\n }\n \n+static I_32\n+dumpPermittedSubclasses(J9PortLibrary *portLib, J9ROMClass *romClass)\n+{\n+\tPORT_ACCESS_FROM_PORT(portLib);\n+\n+\tU_32 *permittedSubclassesCountPtr = getNumberOfPermittedSubclassesPtr(romClass);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2MzU5Mg=="}, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjY1NDg2OnYy", "diffSide": "RIGHT", "path": "runtime/util/rcdump.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo0Nzo1OVrOHAMV8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo0Nzo1OVrOHAMV8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2NDI3Mw==", "bodyText": "formatting (here and line 1358)", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469964273", "createdAt": "2020-08-13T13:47:59Z", "author": {"login": "keithc-ca"}, "path": "runtime/util/rcdump.c", "diffHunk": "@@ -1325,6 +1347,20 @@ j9_printClassExtraModifiers(J9PortLibrary *portLib, U_32 modifiers)\n \t\tmodifiers &= ~J9AccClassIsUnmodifiable;\n \t\tif(modifiers) j9tty_printf(PORTLIB, \" \");\n \t}\n+\n+\tif(modifiers & J9AccRecord)\n+\t{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjY2ODk0OnYy", "diffSide": "RIGHT", "path": "runtime/oti/j9nonbuilder.h", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMzo1MToxMFrOHAMeaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTozNjowNlrOHARIuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2NjQ0MA==", "bodyText": "Moving the constants below to a new namespace creates a discontinuity in core files.\nThe change seems reasonable, but I please confirm you did so consciously.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469966440", "createdAt": "2020-08-13T13:51:10Z", "author": {"login": "keithc-ca"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -108,6 +108,8 @@\n #define J9FieldTypeMask 0x380000\n #define J9FieldTypeShort 0x280000\n \n+/* @ddr_namespace: map_to_type=J9RecordComponentFlags */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk5NTcwMA==", "bodyText": "I am not familiar with the consequences of this change. What do you recommend to confirm its okay?", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r469995700", "createdAt": "2020-08-13T14:30:24Z", "author": {"login": "theresa-m"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -108,6 +108,8 @@\n #define J9FieldTypeMask 0x380000\n #define J9FieldTypeShort 0x280000\n \n+/* @ddr_namespace: map_to_type=J9RecordComponentFlags */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2NjQ0MA=="}, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAzOTU3OQ==", "bodyText": "A core file generated from a VM built before this change would have these constants in J9FieldFlags.\nI think J9RecordComponentFlags is a better place for them, but it will mean NoSuchFieldError will be thrown by DDR code that makes use of J9RecordComponentFlags.J9RecordComponentFlagHasAnnotations (for example) when accessing such an old core file. Because records are still a preview feature, I can live with that: My point is that it needs to be a conscious decision.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r470039579", "createdAt": "2020-08-13T15:31:11Z", "author": {"login": "keithc-ca"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -108,6 +108,8 @@\n #define J9FieldTypeMask 0x380000\n #define J9FieldTypeShort 0x280000\n \n+/* @ddr_namespace: map_to_type=J9RecordComponentFlags */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2NjQ0MA=="}, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MjgxMQ==", "bodyText": "Okay. Thanks for the clarification.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r470042811", "createdAt": "2020-08-13T15:36:06Z", "author": {"login": "theresa-m"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -108,6 +108,8 @@\n #define J9FieldTypeMask 0x380000\n #define J9FieldTypeShort 0x280000\n \n+/* @ddr_namespace: map_to_type=J9RecordComponentFlags */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTk2NjQ0MA=="}, "originalCommit": {"oid": "e019a4cf23453d8244dd92f604b9c83fccdd6f0b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNzE1MzgwOnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTozNTowM1rOHARF0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNTozNTowM1rOHARF0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA0MjA2NQ==", "bodyText": "Please remove all trailing whitespace in code you're adding (e.g. this line).", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r470042065", "createdAt": "2020-08-13T15:35:03Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "diffHunk": "@@ -236,4 +237,33 @@ public static J9SourceDebugExtensionPointer getSourceDebugExtensionForROMClass(J\n \t\treturn J9SourceDebugExtensionPointer.NULL;\n \t}\n \n+\tprivate static U32Pointer getPermittedSubclassPointer(J9ROMClassPointer romClass) throws CorruptDataException {\n+\t\tSelfRelativePointer srpPtr = getSRPPtr(J9ROMClassHelper.optionalInfo(romClass), romClass.optionalFlags(), ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "223dbba42d1e33cbeb09b13d0677ef35eb8651ee"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODYyMjk1OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxOTo1OTozNVrOHB44wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxOTo1OTozNVrOHB44wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0MjY1Nw==", "bodyText": "I think this would be clearer if inverted:\n    int padding = recordComponentLength % U32.SIZEOF;\n    if (0 != padding) {\n        padding = U32.SIZEOF - padding;\n    }", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r471742657", "createdAt": "2020-08-17T19:59:35Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -846,6 +860,76 @@ int allSlotsInVerificationTypeInfoDo(U8Pointer cursor) throws CorruptDataExcepti\n \t\t}\n \t\treturn 3;\n \t}\n+\n+\tvoid recordAttributeDo(U32Pointer attribute) throws CorruptDataException\n+\t{\n+\t\tif (attribute.isNull()) {\n+\t\t\treturn;\n+\t\t}\n+\t\tU32Pointer attributeStart = attribute;\n+\t\tint numRecordComponents = attribute.at(0).intValue();\n+\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, attribute, \"numberRecordComponents\");\n+\t\tattribute = attribute.add(1);\n+\n+\t\tfor (int i = 0; i < numRecordComponents; i++) {\n+\t\t\tJ9ROMRecordComponentShapePointer recordComponent = J9ROMRecordComponentShapePointer.cast(attribute);\n+\t\t\tattribute = U32Pointer.cast(recordComponent.add(1));\n+\n+\t\t\t/* name and descriptor */\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_SRPNAS, recordComponent.nameAndSignature(), \"nameAndSignature\");\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, recordComponent.attributeFlagsEA(), \"attributeFlags\");\n+\t\t\tclassWalkerCallback.addSection(clazz, recordComponent, attribute.getAddress() - recordComponent.getAddress(), \"recordComponentShape\", true);\n+\n+\t\t\t/* process variable attributes */\n+\t\t\tUDATA attributeFlags = recordComponent.attributeFlags();\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasGenericSignature)) {\n+\t\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_ROM_UTF8, attribute, \"recordComponentGenSigUTF8\");\n+\t\t\t\tattribute = attribute.add(1);\n+\t\t\t}\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasAnnotations)) {\n+\t\t\t\tint increment = allSlotsInAnnotationDo(attribute, \"recordComponentAnnotation\");\n+\t\t\t\tattribute = attribute.add(increment);\n+\t\t\t}\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasTypeAnnotations)) {\n+\t\t\t\tint increment = allSlotsInAnnotationDo(attribute, \"recordComponentTypeAnnotation\");\n+\t\t\t\tattribute = attribute.add(increment);\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\t/* calculate RecordComponent padding */\n+\t\tint recordComponentLength = (int)(attribute.getAddress() - attributeStart.getAddress());\n+\t\tint padding = U32.SIZEOF - (recordComponentLength % U32.SIZEOF);\n+\t\tif (U32.SIZEOF == padding) {\n+\t\t\tpadding = 0;\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0ac6674474cdfcfb927946f79318611334d5fd7"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODYzMDYzOnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDowMTo1MVrOHB49Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDowMTo1MVrOHB49Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0Mzg0Ng==", "bodyText": "This comment is stale, and I'm not sure it added much value.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r471743846", "createdAt": "2020-08-17T20:01:51Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -846,6 +860,76 @@ int allSlotsInVerificationTypeInfoDo(U8Pointer cursor) throws CorruptDataExcepti\n \t\t}\n \t\treturn 3;\n \t}\n+\n+\tvoid recordAttributeDo(U32Pointer attribute) throws CorruptDataException\n+\t{\n+\t\tif (attribute.isNull()) {\n+\t\t\treturn;\n+\t\t}\n+\t\tU32Pointer attributeStart = attribute;\n+\t\tint numRecordComponents = attribute.at(0).intValue();\n+\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, attribute, \"numberRecordComponents\");\n+\t\tattribute = attribute.add(1);\n+\n+\t\tfor (int i = 0; i < numRecordComponents; i++) {\n+\t\t\tJ9ROMRecordComponentShapePointer recordComponent = J9ROMRecordComponentShapePointer.cast(attribute);\n+\t\t\tattribute = U32Pointer.cast(recordComponent.add(1));\n+\n+\t\t\t/* name and descriptor */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0ac6674474cdfcfb927946f79318611334d5fd7"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODY0OTgxOnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDowNzo1M1rOHB5I7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTo1MDo1M1rOHCjh9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0Njc5Nw==", "bodyText": "Please remove the trailing whitespace.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r471746797", "createdAt": "2020-08-17T20:07:53Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -846,6 +860,76 @@ int allSlotsInVerificationTypeInfoDo(U8Pointer cursor) throws CorruptDataExcepti\n \t\t}\n \t\treturn 3;\n \t}\n+\n+\tvoid recordAttributeDo(U32Pointer attribute) throws CorruptDataException\n+\t{\n+\t\tif (attribute.isNull()) {\n+\t\t\treturn;\n+\t\t}\n+\t\tU32Pointer attributeStart = attribute;\n+\t\tint numRecordComponents = attribute.at(0).intValue();\n+\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, attribute, \"numberRecordComponents\");\n+\t\tattribute = attribute.add(1);\n+\n+\t\tfor (int i = 0; i < numRecordComponents; i++) {\n+\t\t\tJ9ROMRecordComponentShapePointer recordComponent = J9ROMRecordComponentShapePointer.cast(attribute);\n+\t\t\tattribute = U32Pointer.cast(recordComponent.add(1));\n+\n+\t\t\t/* name and descriptor */\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_SRPNAS, recordComponent.nameAndSignature(), \"nameAndSignature\");\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, recordComponent.attributeFlagsEA(), \"attributeFlags\");\n+\t\t\tclassWalkerCallback.addSection(clazz, recordComponent, attribute.getAddress() - recordComponent.getAddress(), \"recordComponentShape\", true);\n+\n+\t\t\t/* process variable attributes */\n+\t\t\tUDATA attributeFlags = recordComponent.attributeFlags();\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasGenericSignature)) {\n+\t\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_ROM_UTF8, attribute, \"recordComponentGenSigUTF8\");\n+\t\t\t\tattribute = attribute.add(1);\n+\t\t\t}\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasAnnotations)) {\n+\t\t\t\tint increment = allSlotsInAnnotationDo(attribute, \"recordComponentAnnotation\");\n+\t\t\t\tattribute = attribute.add(increment);\n+\t\t\t}\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasTypeAnnotations)) {\n+\t\t\t\tint increment = allSlotsInAnnotationDo(attribute, \"recordComponentTypeAnnotation\");\n+\t\t\t\tattribute = attribute.add(increment);\n+\t\t\t}\n+\t\t}\n+\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0ac6674474cdfcfb927946f79318611334d5fd7"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwMjcyMg==", "bodyText": "It's still here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r472402722", "createdAt": "2020-08-18T18:37:38Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -846,6 +860,76 @@ int allSlotsInVerificationTypeInfoDo(U8Pointer cursor) throws CorruptDataExcepti\n \t\t}\n \t\treturn 3;\n \t}\n+\n+\tvoid recordAttributeDo(U32Pointer attribute) throws CorruptDataException\n+\t{\n+\t\tif (attribute.isNull()) {\n+\t\t\treturn;\n+\t\t}\n+\t\tU32Pointer attributeStart = attribute;\n+\t\tint numRecordComponents = attribute.at(0).intValue();\n+\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, attribute, \"numberRecordComponents\");\n+\t\tattribute = attribute.add(1);\n+\n+\t\tfor (int i = 0; i < numRecordComponents; i++) {\n+\t\t\tJ9ROMRecordComponentShapePointer recordComponent = J9ROMRecordComponentShapePointer.cast(attribute);\n+\t\t\tattribute = U32Pointer.cast(recordComponent.add(1));\n+\n+\t\t\t/* name and descriptor */\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_SRPNAS, recordComponent.nameAndSignature(), \"nameAndSignature\");\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, recordComponent.attributeFlagsEA(), \"attributeFlags\");\n+\t\t\tclassWalkerCallback.addSection(clazz, recordComponent, attribute.getAddress() - recordComponent.getAddress(), \"recordComponentShape\", true);\n+\n+\t\t\t/* process variable attributes */\n+\t\t\tUDATA attributeFlags = recordComponent.attributeFlags();\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasGenericSignature)) {\n+\t\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_ROM_UTF8, attribute, \"recordComponentGenSigUTF8\");\n+\t\t\t\tattribute = attribute.add(1);\n+\t\t\t}\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasAnnotations)) {\n+\t\t\t\tint increment = allSlotsInAnnotationDo(attribute, \"recordComponentAnnotation\");\n+\t\t\t\tattribute = attribute.add(increment);\n+\t\t\t}\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasTypeAnnotations)) {\n+\t\t\t\tint increment = allSlotsInAnnotationDo(attribute, \"recordComponentTypeAnnotation\");\n+\t\t\t\tattribute = attribute.add(increment);\n+\t\t\t}\n+\t\t}\n+\t\t", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0Njc5Nw=="}, "originalCommit": {"oid": "c0ac6674474cdfcfb927946f79318611334d5fd7"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwNzgyMQ==", "bodyText": "Thanks. It is removed now.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r472407821", "createdAt": "2020-08-18T18:47:26Z", "author": {"login": "theresa-m"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -846,6 +860,76 @@ int allSlotsInVerificationTypeInfoDo(U8Pointer cursor) throws CorruptDataExcepti\n \t\t}\n \t\treturn 3;\n \t}\n+\n+\tvoid recordAttributeDo(U32Pointer attribute) throws CorruptDataException\n+\t{\n+\t\tif (attribute.isNull()) {\n+\t\t\treturn;\n+\t\t}\n+\t\tU32Pointer attributeStart = attribute;\n+\t\tint numRecordComponents = attribute.at(0).intValue();\n+\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, attribute, \"numberRecordComponents\");\n+\t\tattribute = attribute.add(1);\n+\n+\t\tfor (int i = 0; i < numRecordComponents; i++) {\n+\t\t\tJ9ROMRecordComponentShapePointer recordComponent = J9ROMRecordComponentShapePointer.cast(attribute);\n+\t\t\tattribute = U32Pointer.cast(recordComponent.add(1));\n+\n+\t\t\t/* name and descriptor */\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_SRPNAS, recordComponent.nameAndSignature(), \"nameAndSignature\");\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, recordComponent.attributeFlagsEA(), \"attributeFlags\");\n+\t\t\tclassWalkerCallback.addSection(clazz, recordComponent, attribute.getAddress() - recordComponent.getAddress(), \"recordComponentShape\", true);\n+\n+\t\t\t/* process variable attributes */\n+\t\t\tUDATA attributeFlags = recordComponent.attributeFlags();\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasGenericSignature)) {\n+\t\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_ROM_UTF8, attribute, \"recordComponentGenSigUTF8\");\n+\t\t\t\tattribute = attribute.add(1);\n+\t\t\t}\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasAnnotations)) {\n+\t\t\t\tint increment = allSlotsInAnnotationDo(attribute, \"recordComponentAnnotation\");\n+\t\t\t\tattribute = attribute.add(increment);\n+\t\t\t}\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasTypeAnnotations)) {\n+\t\t\t\tint increment = allSlotsInAnnotationDo(attribute, \"recordComponentTypeAnnotation\");\n+\t\t\t\tattribute = attribute.add(increment);\n+\t\t\t}\n+\t\t}\n+\t\t", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0Njc5Nw=="}, "originalCommit": {"oid": "c0ac6674474cdfcfb927946f79318611334d5fd7"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQ0MTMzNA==", "bodyText": "I see you've completely removed the lines containing only whitespace: it's not what I was asking for, but that's ok.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r472441334", "createdAt": "2020-08-18T19:50:53Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -846,6 +860,76 @@ int allSlotsInVerificationTypeInfoDo(U8Pointer cursor) throws CorruptDataExcepti\n \t\t}\n \t\treturn 3;\n \t}\n+\n+\tvoid recordAttributeDo(U32Pointer attribute) throws CorruptDataException\n+\t{\n+\t\tif (attribute.isNull()) {\n+\t\t\treturn;\n+\t\t}\n+\t\tU32Pointer attributeStart = attribute;\n+\t\tint numRecordComponents = attribute.at(0).intValue();\n+\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, attribute, \"numberRecordComponents\");\n+\t\tattribute = attribute.add(1);\n+\n+\t\tfor (int i = 0; i < numRecordComponents; i++) {\n+\t\t\tJ9ROMRecordComponentShapePointer recordComponent = J9ROMRecordComponentShapePointer.cast(attribute);\n+\t\t\tattribute = U32Pointer.cast(recordComponent.add(1));\n+\n+\t\t\t/* name and descriptor */\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_SRPNAS, recordComponent.nameAndSignature(), \"nameAndSignature\");\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, recordComponent.attributeFlagsEA(), \"attributeFlags\");\n+\t\t\tclassWalkerCallback.addSection(clazz, recordComponent, attribute.getAddress() - recordComponent.getAddress(), \"recordComponentShape\", true);\n+\n+\t\t\t/* process variable attributes */\n+\t\t\tUDATA attributeFlags = recordComponent.attributeFlags();\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasGenericSignature)) {\n+\t\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_ROM_UTF8, attribute, \"recordComponentGenSigUTF8\");\n+\t\t\t\tattribute = attribute.add(1);\n+\t\t\t}\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasAnnotations)) {\n+\t\t\t\tint increment = allSlotsInAnnotationDo(attribute, \"recordComponentAnnotation\");\n+\t\t\t\tattribute = attribute.add(increment);\n+\t\t\t}\n+\n+\t\t\tif (attributeFlags.anyBitsIn(J9RecordComponentFlagHasTypeAnnotations)) {\n+\t\t\t\tint increment = allSlotsInAnnotationDo(attribute, \"recordComponentTypeAnnotation\");\n+\t\t\t\tattribute = attribute.add(increment);\n+\t\t\t}\n+\t\t}\n+\t\t", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0Njc5Nw=="}, "originalCommit": {"oid": "c0ac6674474cdfcfb927946f79318611334d5fd7"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODY1NzY3OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDoxMDowN1rOHB5Njw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDoxMDowN1rOHB5Njw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0Nzk4Mw==", "bodyText": "Suggest you say srpPtr.notNull(), or invert.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r471747983", "createdAt": "2020-08-17T20:10:07Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "diffHunk": "@@ -236,4 +237,33 @@ public static J9SourceDebugExtensionPointer getSourceDebugExtensionForROMClass(J\n \t\treturn J9SourceDebugExtensionPointer.NULL;\n \t}\n \n+\tprivate static U32Pointer getPermittedSubclassPointer(J9ROMClassPointer romClass) throws CorruptDataException {\n+\t\tSelfRelativePointer srpPtr = getSRPPtr(J9ROMClassHelper.optionalInfo(romClass), romClass.optionalFlags(),\n+\t\t\tJ9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE);\n+\t\tif (!srpPtr.isNull()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0ac6674474cdfcfb927946f79318611334d5fd7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODY1OTE1OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDoxMDozNFrOHB5Odw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDoxMDozNFrOHB5Odw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0ODIxNQ==", "bodyText": "Suggest permittedSubclassPointer.notNull() or invert.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r471748215", "createdAt": "2020-08-17T20:10:34Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "diffHunk": "@@ -236,4 +237,33 @@ public static J9SourceDebugExtensionPointer getSourceDebugExtensionForROMClass(J\n \t\treturn J9SourceDebugExtensionPointer.NULL;\n \t}\n \n+\tprivate static U32Pointer getPermittedSubclassPointer(J9ROMClassPointer romClass) throws CorruptDataException {\n+\t\tSelfRelativePointer srpPtr = getSRPPtr(J9ROMClassHelper.optionalInfo(romClass), romClass.optionalFlags(),\n+\t\t\tJ9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE);\n+\t\tif (!srpPtr.isNull()) {\n+\t\t\treturn U32Pointer.cast(srpPtr.get());\n+\t\t}\n+\t\treturn U32Pointer.NULL;\n+\t}\n+\n+\tpublic static int getPermittedSubclassCount(J9ROMClassPointer romClass) throws CorruptDataException {\n+\t\tU32Pointer permittedSubclassPointer = getPermittedSubclassPointer(romClass);\n+\t\tif (!permittedSubclassPointer.isNull()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0ac6674474cdfcfb927946f79318611334d5fd7"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODY2MTAzOnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDoxMTowNFrOHB5Pfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDoxMTowNFrOHB5Pfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0ODQ3OA==", "bodyText": "Suggest permittedSubclassPointer.notNull() or invert.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r471748478", "createdAt": "2020-08-17T20:11:04Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "diffHunk": "@@ -236,4 +237,33 @@ public static J9SourceDebugExtensionPointer getSourceDebugExtensionForROMClass(J\n \t\treturn J9SourceDebugExtensionPointer.NULL;\n \t}\n \n+\tprivate static U32Pointer getPermittedSubclassPointer(J9ROMClassPointer romClass) throws CorruptDataException {\n+\t\tSelfRelativePointer srpPtr = getSRPPtr(J9ROMClassHelper.optionalInfo(romClass), romClass.optionalFlags(),\n+\t\t\tJ9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE);\n+\t\tif (!srpPtr.isNull()) {\n+\t\t\treturn U32Pointer.cast(srpPtr.get());\n+\t\t}\n+\t\treturn U32Pointer.NULL;\n+\t}\n+\n+\tpublic static int getPermittedSubclassCount(J9ROMClassPointer romClass) throws CorruptDataException {\n+\t\tU32Pointer permittedSubclassPointer = getPermittedSubclassPointer(romClass);\n+\t\tif (!permittedSubclassPointer.isNull()) {\n+\t\t\treturn permittedSubclassPointer.at(0).intValue();\n+\t\t}\n+\t\treturn 0;\n+\t}\n+\n+\tpublic static J9UTF8Pointer getPermittedSubclassNameAtIndex(J9ROMClassPointer romClass, int index) throws CorruptDataException {\n+\t\tU32Pointer permittedSubclassPointer = getPermittedSubclassPointer(romClass);\n+\t\tif (!permittedSubclassPointer.isNull()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0ac6674474cdfcfb927946f79318611334d5fd7"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODY3OTI5OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDoxNjo0OVrOHB5alg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNTo1MToyN1rOHCa-EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc1MTMxOA==", "bodyText": "Most calls to addSlot() supply a slot name beginning with a lower-case letter: why the departure here and on line 700 below?", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r471751318", "createdAt": "2020-08-17T20:16:49Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -687,6 +691,16 @@ void allSlotsInOptionalInfoDo() throws CorruptDataException\n \t\t\tallSlotsInAnnotationDo(U32Pointer.cast(cursor.get()), \"classAnnotations\");\n \t\t\tcursor = cursor.add(1);\n \t\t}\n+\t\tif (romClass.optionalFlags().allBitsIn(J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_RECORD_ATTRIBUTE)) {\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_SRP, cursor, \"RecordAttributeSRP\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0ac6674474cdfcfb927946f79318611334d5fd7"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwMTA3Mg==", "bodyText": "I will change it to lower case.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r472301072", "createdAt": "2020-08-18T15:51:27Z", "author": {"login": "theresa-m"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -687,6 +691,16 @@ void allSlotsInOptionalInfoDo() throws CorruptDataException\n \t\t\tallSlotsInAnnotationDo(U32Pointer.cast(cursor.get()), \"classAnnotations\");\n \t\t\tcursor = cursor.add(1);\n \t\t}\n+\t\tif (romClass.optionalFlags().allBitsIn(J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_RECORD_ATTRIBUTE)) {\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_SRP, cursor, \"RecordAttributeSRP\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc1MTMxOA=="}, "originalCommit": {"oid": "c0ac6674474cdfcfb927946f79318611334d5fd7"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NDQxNjQwOnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNzowMzozNFrOHFuQ_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxODowOTo0NVrOHFwoXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2Mjk0MA==", "bodyText": "The length could be expressed more clearly as J9ROMRecordComponentShape.SIZEOF.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r475762940", "createdAt": "2020-08-24T17:03:34Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -846,6 +860,72 @@ int allSlotsInVerificationTypeInfoDo(U8Pointer cursor) throws CorruptDataExcepti\n \t\t}\n \t\treturn 3;\n \t}\n+\n+\tvoid recordAttributeDo(U32Pointer attribute) throws CorruptDataException\n+\t{\n+\t\tif (attribute.isNull()) {\n+\t\t\treturn;\n+\t\t}\n+\t\tU32Pointer attributeStart = attribute;\n+\t\tint numRecordComponents = attribute.at(0).intValue();\n+\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, attribute, \"numberRecordComponents\");\n+\t\tattribute = attribute.add(1);\n+\t\tfor (int i = 0; i < numRecordComponents; i++) {\n+\t\t\tJ9ROMRecordComponentShapePointer recordComponent = J9ROMRecordComponentShapePointer.cast(attribute);\n+\t\t\tattribute = U32Pointer.cast(recordComponent.add(1));\n+\n+\t\t\tJ9ROMNameAndSignaturePointer recordComponentNAS = recordComponent.nameAndSignature();\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_ROM_UTF8, recordComponentNAS.nameEA(), \"name\");\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_ROM_UTF8, recordComponentNAS.signatureEA(), \"signature\");\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, recordComponent.attributeFlagsEA(), \"attributeFlags\");\n+\t\t\tclassWalkerCallback.addSection(clazz, recordComponent, attribute.getAddress() - recordComponent.getAddress(), \"recordComponentShape\", true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "525ad24e07f863fcf337f8457ab76967453e15f9"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTgwMTY5Mg==", "bodyText": "updated with this change.", "url": "https://github.com/eclipse-openj9/openj9/pull/10381#discussion_r475801692", "createdAt": "2020-08-24T18:09:45Z", "author": {"login": "theresa-m"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -846,6 +860,72 @@ int allSlotsInVerificationTypeInfoDo(U8Pointer cursor) throws CorruptDataExcepti\n \t\t}\n \t\treturn 3;\n \t}\n+\n+\tvoid recordAttributeDo(U32Pointer attribute) throws CorruptDataException\n+\t{\n+\t\tif (attribute.isNull()) {\n+\t\t\treturn;\n+\t\t}\n+\t\tU32Pointer attributeStart = attribute;\n+\t\tint numRecordComponents = attribute.at(0).intValue();\n+\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, attribute, \"numberRecordComponents\");\n+\t\tattribute = attribute.add(1);\n+\t\tfor (int i = 0; i < numRecordComponents; i++) {\n+\t\t\tJ9ROMRecordComponentShapePointer recordComponent = J9ROMRecordComponentShapePointer.cast(attribute);\n+\t\t\tattribute = U32Pointer.cast(recordComponent.add(1));\n+\n+\t\t\tJ9ROMNameAndSignaturePointer recordComponentNAS = recordComponent.nameAndSignature();\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_ROM_UTF8, recordComponentNAS.nameEA(), \"name\");\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_ROM_UTF8, recordComponentNAS.signatureEA(), \"signature\");\n+\t\t\tclassWalkerCallback.addSlot(clazz, SlotType.J9_U32, recordComponent.attributeFlagsEA(), \"attributeFlags\");\n+\t\t\tclassWalkerCallback.addSection(clazz, recordComponent, attribute.getAddress() - recordComponent.getAddress(), \"recordComponentShape\", true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTc2Mjk0MA=="}, "originalCommit": {"oid": "525ad24e07f863fcf337f8457ab76967453e15f9"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4679, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}