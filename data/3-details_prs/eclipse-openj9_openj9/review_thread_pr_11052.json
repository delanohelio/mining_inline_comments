{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNjU2NjEz", "number": 11052, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMTo1ODoyNlrOEzjvhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoyMzo1MVrOE1PyRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNDk4NDM3OnYy", "diffSide": "RIGHT", "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMTo1ODoyNlrOHq2bLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzowMjoyMlrOHsZPWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY5MzkzNQ==", "bodyText": "-J needs to be a separate argument. It's actually -J<vm option> such as -J-Xmx512m.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r514693935", "createdAt": "2020-10-30T01:58:26Z", "author": {"login": "pshipton"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -33,12 +33,27 @@\n  * A tool for listing Java processes and their information.\n  *\n  */\n+@SuppressWarnings(\"nls\")\n public class Jps {\n \n+\tprivate static final String DESCRIPTION =\n+\t\t\t\"jps: Print a list of Java processes and information about them%n%n\";\n+\n+\tprivate static final String HELP_TEXT =\n+\t\t\t\"usage: jps [-h] [-J] [-l] [-q] [-m] [-v]%n\" +\n+\t\t\t\"usage: jps [-h] [-Jlqmv]%n%n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExOTc0OQ==", "bodyText": "There are duplicated usage: here, in addition, the usage format should be consistent with other tools such as Jmap, Jstack, and Jstat in same package.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r515119749", "createdAt": "2020-10-30T14:02:05Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -33,12 +33,27 @@\n  * A tool for listing Java processes and their information.\n  *\n  */\n+@SuppressWarnings(\"nls\")\n public class Jps {\n \n+\tprivate static final String DESCRIPTION =\n+\t\t\t\"jps: Print a list of Java processes and information about them%n%n\";\n+\n+\tprivate static final String HELP_TEXT =\n+\t\t\t\"usage: jps [-h] [-J] [-l] [-q] [-m] [-v]%n\" +\n+\t\t\t\"usage: jps [-h] [-Jlqmv]%n%n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY5MzkzNQ=="}, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEyNDUxMQ==", "bodyText": "@JasonFengJ9, sure, will remove the duplicate. And by the \"consistent format\" do you mean to have support of composed arguments for every tool?", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r515124511", "createdAt": "2020-10-30T14:08:12Z", "author": {"login": "alexey-anufriev"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -33,12 +33,27 @@\n  * A tool for listing Java processes and their information.\n  *\n  */\n+@SuppressWarnings(\"nls\")\n public class Jps {\n \n+\tprivate static final String DESCRIPTION =\n+\t\t\t\"jps: Print a list of Java processes and information about them%n%n\";\n+\n+\tprivate static final String HELP_TEXT =\n+\t\t\t\"usage: jps [-h] [-J] [-l] [-q] [-m] [-v]%n\" +\n+\t\t\t\"usage: jps [-h] [-Jlqmv]%n%n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY5MzkzNQ=="}, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzMzcwNg==", "bodyText": "@alexey-anufriev I meant the usage format like Jmap as following:\n\tprivate static String HELPTEXT = \"jmap: obtain heap information about a Java process%n\"\n\t\t\t+ \" Usage:%n\"\n\t\t\t+ \"    jmap <option>* <vmid>%n\"\n\nin which Usage:%n is in a separated line.\n\nAll the other tools in the same package can be updated similarly.\n\nI think this is about the support of composed arguments for other tools though not necessary in this PR.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r515133706", "createdAt": "2020-10-30T14:22:08Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -33,12 +33,27 @@\n  * A tool for listing Java processes and their information.\n  *\n  */\n+@SuppressWarnings(\"nls\")\n public class Jps {\n \n+\tprivate static final String DESCRIPTION =\n+\t\t\t\"jps: Print a list of Java processes and information about them%n%n\";\n+\n+\tprivate static final String HELP_TEXT =\n+\t\t\t\"usage: jps [-h] [-J] [-l] [-q] [-m] [-v]%n\" +\n+\t\t\t\"usage: jps [-h] [-Jlqmv]%n%n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY5MzkzNQ=="}, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzNjE4OA==", "bodyText": "@JasonFengJ9, ah, so you mean the help output. For sure I can adapt that.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r515136188", "createdAt": "2020-10-30T14:25:39Z", "author": {"login": "alexey-anufriev"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -33,12 +33,27 @@\n  * A tool for listing Java processes and their information.\n  *\n  */\n+@SuppressWarnings(\"nls\")\n public class Jps {\n \n+\tprivate static final String DESCRIPTION =\n+\t\t\t\"jps: Print a list of Java processes and information about them%n%n\";\n+\n+\tprivate static final String HELP_TEXT =\n+\t\t\t\"usage: jps [-h] [-J] [-l] [-q] [-m] [-v]%n\" +\n+\t\t\t\"usage: jps [-h] [-Jlqmv]%n%n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY5MzkzNQ=="}, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMxMjkyMA==", "bodyText": "Improved", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r516312920", "createdAt": "2020-11-02T23:02:22Z", "author": {"login": "alexey-anufriev"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -33,12 +33,27 @@\n  * A tool for listing Java processes and their information.\n  *\n  */\n+@SuppressWarnings(\"nls\")\n public class Jps {\n \n+\tprivate static final String DESCRIPTION =\n+\t\t\t\"jps: Print a list of Java processes and information about them%n%n\";\n+\n+\tprivate static final String HELP_TEXT =\n+\t\t\t\"usage: jps [-h] [-J] [-l] [-q] [-m] [-v]%n\" +\n+\t\t\t\"usage: jps [-h] [-Jlqmv]%n%n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY5MzkzNQ=="}, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzcwMDIzOnYy", "diffSide": "RIGHT", "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDoyODo0OVrOHrRjVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzowMzowNVrOHsZQxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzODM5MA==", "bodyText": "Since this PR intends to match RI behaviours, this error message can be modified to illegal argument: as well such that the script doesn't have to handle different errors.\n@pshipton any thoughts?", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r515138390", "createdAt": "2020-10-30T14:28:49Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -68,38 +83,52 @@ public static void main(String[] args) {\n \t\tSystem.exit(rc);\n \t}\n \t\n-\t@SuppressWarnings(\"nls\")\n \tprivate static void parseArguments(String[] args) {\n \t\tprintApplicationArguments = false;\n \t\tprintJvmArguments = false;\n \t\tnoPackageName = true;\n \t\tvmidOnly = false;\n-\t\tfinal String HELPTEXT = \"jps: Print a list of Java processes and information about them%n\"\n-\t\t\t\t+ \"    -J: supply arguments to the Java VM running jps%n\"\n-\t\t\t\t+ \"    -l: print the application package name%n\"\n-\t\t\t\t+ \"    -q: print only the virtual machine identifiers%n\"\n-\t\t\t\t+ \"    -m: print the application arguments%n\"\n-\t\t\t\t+ \"    -v: print the Java VM arguments, including those produced automatically%n\";\n-\t\tfor (String a : args) {\n-\t\t\tswitch (a) {\n-\t\t\tcase \"-l\":\n+\n+\t\tfor (String arg : args) {\n+\t\t\tif (!arg.startsWith(\"-\") || arg.length() == 1) {\n+\t\t\t\tSystem.out.printf(\"malformed argument '%s'%n%n\", arg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0MTM0Mg==", "bodyText": "Makes sense", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r515141342", "createdAt": "2020-10-30T14:33:18Z", "author": {"login": "pshipton"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -68,38 +83,52 @@ public static void main(String[] args) {\n \t\tSystem.exit(rc);\n \t}\n \t\n-\t@SuppressWarnings(\"nls\")\n \tprivate static void parseArguments(String[] args) {\n \t\tprintApplicationArguments = false;\n \t\tprintJvmArguments = false;\n \t\tnoPackageName = true;\n \t\tvmidOnly = false;\n-\t\tfinal String HELPTEXT = \"jps: Print a list of Java processes and information about them%n\"\n-\t\t\t\t+ \"    -J: supply arguments to the Java VM running jps%n\"\n-\t\t\t\t+ \"    -l: print the application package name%n\"\n-\t\t\t\t+ \"    -q: print only the virtual machine identifiers%n\"\n-\t\t\t\t+ \"    -m: print the application arguments%n\"\n-\t\t\t\t+ \"    -v: print the Java VM arguments, including those produced automatically%n\";\n-\t\tfor (String a : args) {\n-\t\t\tswitch (a) {\n-\t\t\tcase \"-l\":\n+\n+\t\tfor (String arg : args) {\n+\t\t\tif (!arg.startsWith(\"-\") || arg.length() == 1) {\n+\t\t\t\tSystem.out.printf(\"malformed argument '%s'%n%n\", arg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzODM5MA=="}, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMxMzI4Nw==", "bodyText": "Improved", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r516313287", "createdAt": "2020-11-02T23:03:05Z", "author": {"login": "alexey-anufriev"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -68,38 +83,52 @@ public static void main(String[] args) {\n \t\tSystem.exit(rc);\n \t}\n \t\n-\t@SuppressWarnings(\"nls\")\n \tprivate static void parseArguments(String[] args) {\n \t\tprintApplicationArguments = false;\n \t\tprintJvmArguments = false;\n \t\tnoPackageName = true;\n \t\tvmidOnly = false;\n-\t\tfinal String HELPTEXT = \"jps: Print a list of Java processes and information about them%n\"\n-\t\t\t\t+ \"    -J: supply arguments to the Java VM running jps%n\"\n-\t\t\t\t+ \"    -l: print the application package name%n\"\n-\t\t\t\t+ \"    -q: print only the virtual machine identifiers%n\"\n-\t\t\t\t+ \"    -m: print the application arguments%n\"\n-\t\t\t\t+ \"    -v: print the Java VM arguments, including those produced automatically%n\";\n-\t\tfor (String a : args) {\n-\t\t\tswitch (a) {\n-\t\t\tcase \"-l\":\n+\n+\t\tfor (String arg : args) {\n+\t\t\tif (!arg.startsWith(\"-\") || arg.length() == 1) {\n+\t\t\t\tSystem.out.printf(\"malformed argument '%s'%n%n\", arg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzODM5MA=="}, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzcwMjM4OnYy", "diffSide": "RIGHT", "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDoyOToyMFrOHrRkrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzowMzoxMFrOHsZQ-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzODczMg==", "bodyText": "Do we need different error message here?", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r515138732", "createdAt": "2020-10-30T14:29:20Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -68,38 +83,52 @@ public static void main(String[] args) {\n \t\tSystem.exit(rc);\n \t}\n \t\n-\t@SuppressWarnings(\"nls\")\n \tprivate static void parseArguments(String[] args) {\n \t\tprintApplicationArguments = false;\n \t\tprintJvmArguments = false;\n \t\tnoPackageName = true;\n \t\tvmidOnly = false;\n-\t\tfinal String HELPTEXT = \"jps: Print a list of Java processes and information about them%n\"\n-\t\t\t\t+ \"    -J: supply arguments to the Java VM running jps%n\"\n-\t\t\t\t+ \"    -l: print the application package name%n\"\n-\t\t\t\t+ \"    -q: print only the virtual machine identifiers%n\"\n-\t\t\t\t+ \"    -m: print the application arguments%n\"\n-\t\t\t\t+ \"    -v: print the Java VM arguments, including those produced automatically%n\";\n-\t\tfor (String a : args) {\n-\t\t\tswitch (a) {\n-\t\t\tcase \"-l\":\n+\n+\t\tfor (String arg : args) {\n+\t\t\tif (!arg.startsWith(\"-\") || arg.length() == 1) {\n+\t\t\t\tSystem.out.printf(\"malformed argument '%s'%n%n\", arg);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t}\n+\t\t\targ = arg.substring(1);\n+\t\t\tfor (char singleArg : arg.toCharArray()) {\n+\t\t\t\tprocessArgument(singleArg);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate static void processArgument(char arg) {\n+\t\tswitch (arg) {\n+\t\t\tcase 'l':\n \t\t\t\tnoPackageName = false;\n \t\t\t\tbreak;\n-\t\t\tcase \"-m\":\n+\t\t\tcase 'm':\n \t\t\t\tprintApplicationArguments = true;\n \t\t\t\tbreak;\n-\t\t\tcase \"-q\":\n+\t\t\tcase 'q':\n \t\t\t\tvmidOnly = true;\n \t\t\t\tbreak;\n-\t\t\tcase \"-v\":\n+\t\t\tcase 'v':\n \t\t\t\tprintJvmArguments = true;\n \t\t\t\tbreak;\n-\t\t\t\t/* implicitly handle -h and -help via the default case */\n-\t\t\tdefault: \n-\t\t\t\tSystem.out.printf(HELPTEXT);\n-\t\t\t\tSystem.exit(1);\n+\t\t\tcase 'h':\n+\t\t\t\tSystem.out.printf(DESCRIPTION);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t\tbreak;\n+\t\t\tdefault:\n+\t\t\t\tSystem.out.printf(\"unsupported argument '-%c'%n%n\", arg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0MjAxMQ==", "bodyText": "Pls expand why the message needs to be different. Are you referring to comparison with the RI?", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r515142011", "createdAt": "2020-10-30T14:34:24Z", "author": {"login": "pshipton"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -68,38 +83,52 @@ public static void main(String[] args) {\n \t\tSystem.exit(rc);\n \t}\n \t\n-\t@SuppressWarnings(\"nls\")\n \tprivate static void parseArguments(String[] args) {\n \t\tprintApplicationArguments = false;\n \t\tprintJvmArguments = false;\n \t\tnoPackageName = true;\n \t\tvmidOnly = false;\n-\t\tfinal String HELPTEXT = \"jps: Print a list of Java processes and information about them%n\"\n-\t\t\t\t+ \"    -J: supply arguments to the Java VM running jps%n\"\n-\t\t\t\t+ \"    -l: print the application package name%n\"\n-\t\t\t\t+ \"    -q: print only the virtual machine identifiers%n\"\n-\t\t\t\t+ \"    -m: print the application arguments%n\"\n-\t\t\t\t+ \"    -v: print the Java VM arguments, including those produced automatically%n\";\n-\t\tfor (String a : args) {\n-\t\t\tswitch (a) {\n-\t\t\tcase \"-l\":\n+\n+\t\tfor (String arg : args) {\n+\t\t\tif (!arg.startsWith(\"-\") || arg.length() == 1) {\n+\t\t\t\tSystem.out.printf(\"malformed argument '%s'%n%n\", arg);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t}\n+\t\t\targ = arg.substring(1);\n+\t\t\tfor (char singleArg : arg.toCharArray()) {\n+\t\t\t\tprocessArgument(singleArg);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate static void processArgument(char arg) {\n+\t\tswitch (arg) {\n+\t\t\tcase 'l':\n \t\t\t\tnoPackageName = false;\n \t\t\t\tbreak;\n-\t\t\tcase \"-m\":\n+\t\t\tcase 'm':\n \t\t\t\tprintApplicationArguments = true;\n \t\t\t\tbreak;\n-\t\t\tcase \"-q\":\n+\t\t\tcase 'q':\n \t\t\t\tvmidOnly = true;\n \t\t\t\tbreak;\n-\t\t\tcase \"-v\":\n+\t\t\tcase 'v':\n \t\t\t\tprintJvmArguments = true;\n \t\t\t\tbreak;\n-\t\t\t\t/* implicitly handle -h and -help via the default case */\n-\t\t\tdefault: \n-\t\t\t\tSystem.out.printf(HELPTEXT);\n-\t\t\t\tSystem.exit(1);\n+\t\t\tcase 'h':\n+\t\t\t\tSystem.out.printf(DESCRIPTION);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t\tbreak;\n+\t\t\tdefault:\n+\t\t\t\tSystem.out.printf(\"unsupported argument '-%c'%n%n\", arg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzODczMg=="}, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0MjI5OQ==", "bodyText": "I will reuse illegal argument", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r515142299", "createdAt": "2020-10-30T14:34:47Z", "author": {"login": "alexey-anufriev"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -68,38 +83,52 @@ public static void main(String[] args) {\n \t\tSystem.exit(rc);\n \t}\n \t\n-\t@SuppressWarnings(\"nls\")\n \tprivate static void parseArguments(String[] args) {\n \t\tprintApplicationArguments = false;\n \t\tprintJvmArguments = false;\n \t\tnoPackageName = true;\n \t\tvmidOnly = false;\n-\t\tfinal String HELPTEXT = \"jps: Print a list of Java processes and information about them%n\"\n-\t\t\t\t+ \"    -J: supply arguments to the Java VM running jps%n\"\n-\t\t\t\t+ \"    -l: print the application package name%n\"\n-\t\t\t\t+ \"    -q: print only the virtual machine identifiers%n\"\n-\t\t\t\t+ \"    -m: print the application arguments%n\"\n-\t\t\t\t+ \"    -v: print the Java VM arguments, including those produced automatically%n\";\n-\t\tfor (String a : args) {\n-\t\t\tswitch (a) {\n-\t\t\tcase \"-l\":\n+\n+\t\tfor (String arg : args) {\n+\t\t\tif (!arg.startsWith(\"-\") || arg.length() == 1) {\n+\t\t\t\tSystem.out.printf(\"malformed argument '%s'%n%n\", arg);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t}\n+\t\t\targ = arg.substring(1);\n+\t\t\tfor (char singleArg : arg.toCharArray()) {\n+\t\t\t\tprocessArgument(singleArg);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate static void processArgument(char arg) {\n+\t\tswitch (arg) {\n+\t\t\tcase 'l':\n \t\t\t\tnoPackageName = false;\n \t\t\t\tbreak;\n-\t\t\tcase \"-m\":\n+\t\t\tcase 'm':\n \t\t\t\tprintApplicationArguments = true;\n \t\t\t\tbreak;\n-\t\t\tcase \"-q\":\n+\t\t\tcase 'q':\n \t\t\t\tvmidOnly = true;\n \t\t\t\tbreak;\n-\t\t\tcase \"-v\":\n+\t\t\tcase 'v':\n \t\t\t\tprintJvmArguments = true;\n \t\t\t\tbreak;\n-\t\t\t\t/* implicitly handle -h and -help via the default case */\n-\t\t\tdefault: \n-\t\t\t\tSystem.out.printf(HELPTEXT);\n-\t\t\t\tSystem.exit(1);\n+\t\t\tcase 'h':\n+\t\t\t\tSystem.out.printf(DESCRIPTION);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t\tbreak;\n+\t\t\tdefault:\n+\t\t\t\tSystem.out.printf(\"unsupported argument '-%c'%n%n\", arg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzODczMg=="}, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0MzA5NA==", "bodyText": "I think this should be illegal argument as well to match RI.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r515143094", "createdAt": "2020-10-30T14:36:00Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -68,38 +83,52 @@ public static void main(String[] args) {\n \t\tSystem.exit(rc);\n \t}\n \t\n-\t@SuppressWarnings(\"nls\")\n \tprivate static void parseArguments(String[] args) {\n \t\tprintApplicationArguments = false;\n \t\tprintJvmArguments = false;\n \t\tnoPackageName = true;\n \t\tvmidOnly = false;\n-\t\tfinal String HELPTEXT = \"jps: Print a list of Java processes and information about them%n\"\n-\t\t\t\t+ \"    -J: supply arguments to the Java VM running jps%n\"\n-\t\t\t\t+ \"    -l: print the application package name%n\"\n-\t\t\t\t+ \"    -q: print only the virtual machine identifiers%n\"\n-\t\t\t\t+ \"    -m: print the application arguments%n\"\n-\t\t\t\t+ \"    -v: print the Java VM arguments, including those produced automatically%n\";\n-\t\tfor (String a : args) {\n-\t\t\tswitch (a) {\n-\t\t\tcase \"-l\":\n+\n+\t\tfor (String arg : args) {\n+\t\t\tif (!arg.startsWith(\"-\") || arg.length() == 1) {\n+\t\t\t\tSystem.out.printf(\"malformed argument '%s'%n%n\", arg);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t}\n+\t\t\targ = arg.substring(1);\n+\t\t\tfor (char singleArg : arg.toCharArray()) {\n+\t\t\t\tprocessArgument(singleArg);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate static void processArgument(char arg) {\n+\t\tswitch (arg) {\n+\t\t\tcase 'l':\n \t\t\t\tnoPackageName = false;\n \t\t\t\tbreak;\n-\t\t\tcase \"-m\":\n+\t\t\tcase 'm':\n \t\t\t\tprintApplicationArguments = true;\n \t\t\t\tbreak;\n-\t\t\tcase \"-q\":\n+\t\t\tcase 'q':\n \t\t\t\tvmidOnly = true;\n \t\t\t\tbreak;\n-\t\t\tcase \"-v\":\n+\t\t\tcase 'v':\n \t\t\t\tprintJvmArguments = true;\n \t\t\t\tbreak;\n-\t\t\t\t/* implicitly handle -h and -help via the default case */\n-\t\t\tdefault: \n-\t\t\t\tSystem.out.printf(HELPTEXT);\n-\t\t\t\tSystem.exit(1);\n+\t\t\tcase 'h':\n+\t\t\t\tSystem.out.printf(DESCRIPTION);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t\tbreak;\n+\t\t\tdefault:\n+\t\t\t\tSystem.out.printf(\"unsupported argument '-%c'%n%n\", arg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzODczMg=="}, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjMxMzMzOA==", "bodyText": "Improved", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r516313338", "createdAt": "2020-11-02T23:03:10Z", "author": {"login": "alexey-anufriev"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -68,38 +83,52 @@ public static void main(String[] args) {\n \t\tSystem.exit(rc);\n \t}\n \t\n-\t@SuppressWarnings(\"nls\")\n \tprivate static void parseArguments(String[] args) {\n \t\tprintApplicationArguments = false;\n \t\tprintJvmArguments = false;\n \t\tnoPackageName = true;\n \t\tvmidOnly = false;\n-\t\tfinal String HELPTEXT = \"jps: Print a list of Java processes and information about them%n\"\n-\t\t\t\t+ \"    -J: supply arguments to the Java VM running jps%n\"\n-\t\t\t\t+ \"    -l: print the application package name%n\"\n-\t\t\t\t+ \"    -q: print only the virtual machine identifiers%n\"\n-\t\t\t\t+ \"    -m: print the application arguments%n\"\n-\t\t\t\t+ \"    -v: print the Java VM arguments, including those produced automatically%n\";\n-\t\tfor (String a : args) {\n-\t\t\tswitch (a) {\n-\t\t\tcase \"-l\":\n+\n+\t\tfor (String arg : args) {\n+\t\t\tif (!arg.startsWith(\"-\") || arg.length() == 1) {\n+\t\t\t\tSystem.out.printf(\"malformed argument '%s'%n%n\", arg);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t}\n+\t\t\targ = arg.substring(1);\n+\t\t\tfor (char singleArg : arg.toCharArray()) {\n+\t\t\t\tprocessArgument(singleArg);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate static void processArgument(char arg) {\n+\t\tswitch (arg) {\n+\t\t\tcase 'l':\n \t\t\t\tnoPackageName = false;\n \t\t\t\tbreak;\n-\t\t\tcase \"-m\":\n+\t\t\tcase 'm':\n \t\t\t\tprintApplicationArguments = true;\n \t\t\t\tbreak;\n-\t\t\tcase \"-q\":\n+\t\t\tcase 'q':\n \t\t\t\tvmidOnly = true;\n \t\t\t\tbreak;\n-\t\t\tcase \"-v\":\n+\t\t\tcase 'v':\n \t\t\t\tprintJvmArguments = true;\n \t\t\t\tbreak;\n-\t\t\t\t/* implicitly handle -h and -help via the default case */\n-\t\t\tdefault: \n-\t\t\t\tSystem.out.printf(HELPTEXT);\n-\t\t\t\tSystem.exit(1);\n+\t\t\tcase 'h':\n+\t\t\t\tSystem.out.printf(DESCRIPTION);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t\tbreak;\n+\t\t\tdefault:\n+\t\t\t\tSystem.out.printf(\"unsupported argument '-%c'%n%n\", arg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzODczMg=="}, "originalCommit": {"oid": "f058b3aa172e1f8c692eaa3dd8b5aa1af23fc897"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjMzMzg3OnYy", "diffSide": "RIGHT", "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMjo1OTowOVrOHtW_8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDozMjozNFrOHtavvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMyNDc4NA==", "bodyText": "@alexey-anufriev this can stay as [-lqmv] but need a note that -q takes precedence over the other options.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r517324784", "createdAt": "2020-11-04T12:59:09Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -33,12 +33,28 @@\n  * A tool for listing Java processes and their information.\n  *\n  */\n+@SuppressWarnings(\"nls\")\n public class Jps {\n \n+\tprivate static final String DESCRIPTION =\n+\t\t\t\"jps: Print a list of Java processes and information about them%n%n\";\n+\n+\tprivate static final String HELP_TEXT =\n+\t\t\t\"Usage:%n\" +\n+\t\t\t\"    jps [-h] [-J<vm option>] [-l] [-q] [-m] [-v]%n\" +\n+\t\t\t\"    jps [-h] [-J<vm option>] [-q] [-lmv]%n%n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d039d09791c5420bfc397ec5772809609d5fb97"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMyNjY4MQ==", "bodyText": "But q flag composed with any other flag will lead to illegal argument. And block [-lqmv] would mean that they can be used together, which is not true anymore.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r517326681", "createdAt": "2020-11-04T13:02:36Z", "author": {"login": "alexey-anufriev"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -33,12 +33,28 @@\n  * A tool for listing Java processes and their information.\n  *\n  */\n+@SuppressWarnings(\"nls\")\n public class Jps {\n \n+\tprivate static final String DESCRIPTION =\n+\t\t\t\"jps: Print a list of Java processes and information about them%n%n\";\n+\n+\tprivate static final String HELP_TEXT =\n+\t\t\t\"Usage:%n\" +\n+\t\t\t\"    jps [-h] [-J<vm option>] [-l] [-q] [-m] [-v]%n\" +\n+\t\t\t\"    jps [-h] [-J<vm option>] [-q] [-lmv]%n%n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMyNDc4NA=="}, "originalCommit": {"oid": "7d039d09791c5420bfc397ec5772809609d5fb97"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3NzEwMQ==", "bodyText": "But q flag composed with any other flag will lead to illegal argument\n\nProbably there was confusion here, #11052 (comment) (I agreed) suggested that q composed with other flags should not be restricted.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r517377101", "createdAt": "2020-11-04T14:20:11Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -33,12 +33,28 @@\n  * A tool for listing Java processes and their information.\n  *\n  */\n+@SuppressWarnings(\"nls\")\n public class Jps {\n \n+\tprivate static final String DESCRIPTION =\n+\t\t\t\"jps: Print a list of Java processes and information about them%n%n\";\n+\n+\tprivate static final String HELP_TEXT =\n+\t\t\t\"Usage:%n\" +\n+\t\t\t\"    jps [-h] [-J<vm option>] [-l] [-q] [-m] [-v]%n\" +\n+\t\t\t\"    jps [-h] [-J<vm option>] [-q] [-lmv]%n%n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMyNDc4NA=="}, "originalCommit": {"oid": "7d039d09791c5420bfc397ec5772809609d5fb97"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3Nzg5NQ==", "bodyText": "Yes, it's good the way it is.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r517377895", "createdAt": "2020-11-04T14:21:14Z", "author": {"login": "pshipton"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -33,12 +33,28 @@\n  * A tool for listing Java processes and their information.\n  *\n  */\n+@SuppressWarnings(\"nls\")\n public class Jps {\n \n+\tprivate static final String DESCRIPTION =\n+\t\t\t\"jps: Print a list of Java processes and information about them%n%n\";\n+\n+\tprivate static final String HELP_TEXT =\n+\t\t\t\"Usage:%n\" +\n+\t\t\t\"    jps [-h] [-J<vm option>] [-l] [-q] [-m] [-v]%n\" +\n+\t\t\t\"    jps [-h] [-J<vm option>] [-q] [-lmv]%n%n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMyNDc4NA=="}, "originalCommit": {"oid": "7d039d09791c5420bfc397ec5772809609d5fb97"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM4MjUyNg==", "bodyText": "Yes, it's good the way it is.\n\n@pshipton are you leaning toward current way \"restrict q flag with others\"?", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r517382526", "createdAt": "2020-11-04T14:27:26Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -33,12 +33,28 @@\n  * A tool for listing Java processes and their information.\n  *\n  */\n+@SuppressWarnings(\"nls\")\n public class Jps {\n \n+\tprivate static final String DESCRIPTION =\n+\t\t\t\"jps: Print a list of Java processes and information about them%n%n\";\n+\n+\tprivate static final String HELP_TEXT =\n+\t\t\t\"Usage:%n\" +\n+\t\t\t\"    jps [-h] [-J<vm option>] [-l] [-q] [-m] [-v]%n\" +\n+\t\t\t\"    jps [-h] [-J<vm option>] [-q] [-lmv]%n%n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMyNDc4NA=="}, "originalCommit": {"oid": "7d039d09791c5420bfc397ec5772809609d5fb97"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM4NjE3Mg==", "bodyText": "The help output is as we requested. The restriction on combining -q with other flags isn't what we discussed before, but the code is already written. I don't think it's a big deal either way. I plan to merge it the way it is once the testing completes.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r517386172", "createdAt": "2020-11-04T14:32:34Z", "author": {"login": "pshipton"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -33,12 +33,28 @@\n  * A tool for listing Java processes and their information.\n  *\n  */\n+@SuppressWarnings(\"nls\")\n public class Jps {\n \n+\tprivate static final String DESCRIPTION =\n+\t\t\t\"jps: Print a list of Java processes and information about them%n%n\";\n+\n+\tprivate static final String HELP_TEXT =\n+\t\t\t\"Usage:%n\" +\n+\t\t\t\"    jps [-h] [-J<vm option>] [-l] [-q] [-m] [-v]%n\" +\n+\t\t\t\"    jps [-h] [-J<vm option>] [-q] [-lmv]%n%n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzMyNDc4NA=="}, "originalCommit": {"oid": "7d039d09791c5420bfc397ec5772809609d5fb97"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjY4NjE0OnYy", "diffSide": "RIGHT", "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDoyMzo1MVrOHtaW_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNDozOTo0NlrOHtbEiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3OTgzNg==", "bodyText": "Sorry, we don't want to restrict q with other flags though RI does so.\nPlease revert to previous version.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r517379836", "createdAt": "2020-11-04T14:23:51Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -68,38 +84,56 @@ public static void main(String[] args) {\n \t\tSystem.exit(rc);\n \t}\n \t\n-\t@SuppressWarnings(\"nls\")\n \tprivate static void parseArguments(String[] args) {\n \t\tprintApplicationArguments = false;\n \t\tprintJvmArguments = false;\n \t\tnoPackageName = true;\n \t\tvmidOnly = false;\n-\t\tfinal String HELPTEXT = \"jps: Print a list of Java processes and information about them%n\"\n-\t\t\t\t+ \"    -J: supply arguments to the Java VM running jps%n\"\n-\t\t\t\t+ \"    -l: print the application package name%n\"\n-\t\t\t\t+ \"    -q: print only the virtual machine identifiers%n\"\n-\t\t\t\t+ \"    -m: print the application arguments%n\"\n-\t\t\t\t+ \"    -v: print the Java VM arguments, including those produced automatically%n\";\n-\t\tfor (String a : args) {\n-\t\t\tswitch (a) {\n-\t\t\tcase \"-l\":\n+\n+\t\tfor (String arg : args) {\n+\t\t\tif (isInvalidArgument(arg)) {\n+\t\t\t\tSystem.out.printf(\"illegal argument: %s%n%n\", arg);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t}\n+\t\t\targ = arg.substring(1);\n+\t\t\tfor (char singleArg : arg.toCharArray()) {\n+\t\t\t\tprocessArgument(singleArg);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate static boolean isInvalidArgument(String arg) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d039d09791c5420bfc397ec5772809609d5fb97"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM4NTEzOA==", "bodyText": "Let's stop the churn. It isn't what we discussed before, but the code is already written. I don't think it's a big deal either way. I plan to merge it the way it is once the testing completes.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r517385138", "createdAt": "2020-11-04T14:31:08Z", "author": {"login": "pshipton"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -68,38 +84,56 @@ public static void main(String[] args) {\n \t\tSystem.exit(rc);\n \t}\n \t\n-\t@SuppressWarnings(\"nls\")\n \tprivate static void parseArguments(String[] args) {\n \t\tprintApplicationArguments = false;\n \t\tprintJvmArguments = false;\n \t\tnoPackageName = true;\n \t\tvmidOnly = false;\n-\t\tfinal String HELPTEXT = \"jps: Print a list of Java processes and information about them%n\"\n-\t\t\t\t+ \"    -J: supply arguments to the Java VM running jps%n\"\n-\t\t\t\t+ \"    -l: print the application package name%n\"\n-\t\t\t\t+ \"    -q: print only the virtual machine identifiers%n\"\n-\t\t\t\t+ \"    -m: print the application arguments%n\"\n-\t\t\t\t+ \"    -v: print the Java VM arguments, including those produced automatically%n\";\n-\t\tfor (String a : args) {\n-\t\t\tswitch (a) {\n-\t\t\tcase \"-l\":\n+\n+\t\tfor (String arg : args) {\n+\t\t\tif (isInvalidArgument(arg)) {\n+\t\t\t\tSystem.out.printf(\"illegal argument: %s%n%n\", arg);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t}\n+\t\t\targ = arg.substring(1);\n+\t\t\tfor (char singleArg : arg.toCharArray()) {\n+\t\t\t\tprocessArgument(singleArg);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate static boolean isInvalidArgument(String arg) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3OTgzNg=="}, "originalCommit": {"oid": "7d039d09791c5420bfc397ec5772809609d5fb97"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM5MTQ5Ng==", "bodyText": "sure, it is fine to me.", "url": "https://github.com/eclipse-openj9/openj9/pull/11052#discussion_r517391496", "createdAt": "2020-11-04T14:39:46Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/jdk.jcmd/share/classes/openj9/tools/attach/diagnostics/tools/Jps.java", "diffHunk": "@@ -68,38 +84,56 @@ public static void main(String[] args) {\n \t\tSystem.exit(rc);\n \t}\n \t\n-\t@SuppressWarnings(\"nls\")\n \tprivate static void parseArguments(String[] args) {\n \t\tprintApplicationArguments = false;\n \t\tprintJvmArguments = false;\n \t\tnoPackageName = true;\n \t\tvmidOnly = false;\n-\t\tfinal String HELPTEXT = \"jps: Print a list of Java processes and information about them%n\"\n-\t\t\t\t+ \"    -J: supply arguments to the Java VM running jps%n\"\n-\t\t\t\t+ \"    -l: print the application package name%n\"\n-\t\t\t\t+ \"    -q: print only the virtual machine identifiers%n\"\n-\t\t\t\t+ \"    -m: print the application arguments%n\"\n-\t\t\t\t+ \"    -v: print the Java VM arguments, including those produced automatically%n\";\n-\t\tfor (String a : args) {\n-\t\t\tswitch (a) {\n-\t\t\tcase \"-l\":\n+\n+\t\tfor (String arg : args) {\n+\t\t\tif (isInvalidArgument(arg)) {\n+\t\t\t\tSystem.out.printf(\"illegal argument: %s%n%n\", arg);\n+\t\t\t\tinterruptWithHelpMessage();\n+\t\t\t}\n+\t\t\targ = arg.substring(1);\n+\t\t\tfor (char singleArg : arg.toCharArray()) {\n+\t\t\t\tprocessArgument(singleArg);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprivate static boolean isInvalidArgument(String arg) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM3OTgzNg=="}, "originalCommit": {"oid": "7d039d09791c5420bfc397ec5772809609d5fb97"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1055, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}