{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDEzNzY1", "number": 10120, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo0OToxOVrOEN4TNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTo1ODo1N1rOEN-Axw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTg5MzY2OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ClassFileOracle.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo0OToxOVrOGwut9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo0OToxOVrOGwut9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc1MDI2Mg==", "bodyText": "Please use a local to avoid the multiple returns.", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453750262", "createdAt": "2020-07-13T15:49:19Z", "author": {"login": "gacholio"}, "path": "runtime/bcutil/ClassFileOracle.hpp", "diffHunk": "@@ -973,6 +973,16 @@ class RecordComponentIterator\n \tbool needsStaticConstantInit() const { return _needsStaticConstantInit; }\n \tbool isRecord() const { return _isRecord; }\n \tU_16 getRecordComponentCount() const { return _recordComponentCount; }\n+\tbool isSealed() const { return _isSealed; }\n+\tU_16 getPermittedSubclassesClassCount() const { return _isSealed ? _permittedSubclassesAttribute->numberOfClasses : 0; }\n+\n+\tU_16 getPermittedSubclassesClassNameAtIndex(U_16 index) const {\n+\t\tif (!_isSealed) return 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTk0NTc4OnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/reflecthelp.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjowMToyOVrOGwvOEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjowMToyOVrOGwvOEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc1ODQ4MQ==", "bodyText": "This only returns NULL if passed NULL as the object, so I don't think you need to native OOM handling at all.", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453758481", "createdAt": "2020-07-13T16:01:29Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/reflecthelp.c", "diffHunk": "@@ -1952,3 +1952,72 @@ getRecordComponentsHelper(JNIEnv *env, jobject cls)\n \tvmFuncs->internalExitVMToJNI(vmThread);\n \treturn result;\n }\n+\n+/* Create an array of string names for class's PermittedSubclasses */\n+jarray\n+permittedSubclassesHelper(JNIEnv *env, jobject cls)\n+{\n+\tJ9VMThread *vmThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = vmThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tJ9MemoryManagerFunctions *mmFuncs = vm->memoryManagerFunctions;\n+\tJ9Class *clazz = NULL;\n+\tJ9ROMClass *romClass = NULL;\n+\tjarray result = NULL;\n+\tJ9Class *stringClass = NULL;\n+\tJ9Class *stringArrayClass = NULL;\n+\tU_32 *permittedSubclassesCountPtr = 0;\n+\tj9array_t stringArrayObject = NULL;\n+\n+\tvmFuncs->internalEnterVMFromJNI(vmThread);\n+\n+\tclazz = J9VM_J9CLASS_FROM_JCLASS(vmThread, (jclass)cls);\n+\tromClass = clazz->romClass;\n+\n+\t/* allocate String array for results */\n+\tstringClass = J9VMJAVALANGSTRING(vm);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\tstringArrayClass = fetchArrayClass(vmThread, stringClass);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\n+\tpermittedSubclassesCountPtr = getNumberOfPermittedSubclassesPtr(romClass);\n+\n+\tstringArrayObject = (j9array_t) mmFuncs->J9AllocateIndexableObject(vmThread, stringArrayClass,\n+\t\t\t\t*permittedSubclassesCountPtr, J9_GC_ALLOCATE_OBJECT_NON_INSTRUMENTABLE);\n+\tif (NULL == stringArrayObject) {\n+\t\tgoto heapoutofmemory;\n+\t}\n+\n+\tresult = vmFuncs->j9jni_createLocalRef(env, (j9object_t)stringArrayObject);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDAzMDk4OnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/reflecthelp.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMzoxNlrOGwwDkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMzoxNlrOGwwDkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MjE3OA==", "bodyText": "If you or J9_STR_XLAT into the flags here, you could avoid the translation in the java code.", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453772178", "createdAt": "2020-07-13T16:23:16Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/reflecthelp.c", "diffHunk": "@@ -1952,3 +1952,72 @@ getRecordComponentsHelper(JNIEnv *env, jobject cls)\n \tvmFuncs->internalExitVMToJNI(vmThread);\n \treturn result;\n }\n+\n+/* Create an array of string names for class's PermittedSubclasses */\n+jarray\n+permittedSubclassesHelper(JNIEnv *env, jobject cls)\n+{\n+\tJ9VMThread *vmThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = vmThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tJ9MemoryManagerFunctions *mmFuncs = vm->memoryManagerFunctions;\n+\tJ9Class *clazz = NULL;\n+\tJ9ROMClass *romClass = NULL;\n+\tjarray result = NULL;\n+\tJ9Class *stringClass = NULL;\n+\tJ9Class *stringArrayClass = NULL;\n+\tU_32 *permittedSubclassesCountPtr = 0;\n+\tj9array_t stringArrayObject = NULL;\n+\n+\tvmFuncs->internalEnterVMFromJNI(vmThread);\n+\n+\tclazz = J9VM_J9CLASS_FROM_JCLASS(vmThread, (jclass)cls);\n+\tromClass = clazz->romClass;\n+\n+\t/* allocate String array for results */\n+\tstringClass = J9VMJAVALANGSTRING(vm);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\tstringArrayClass = fetchArrayClass(vmThread, stringClass);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\n+\tpermittedSubclassesCountPtr = getNumberOfPermittedSubclassesPtr(romClass);\n+\n+\tstringArrayObject = (j9array_t) mmFuncs->J9AllocateIndexableObject(vmThread, stringArrayClass,\n+\t\t\t\t*permittedSubclassesCountPtr, J9_GC_ALLOCATE_OBJECT_NON_INSTRUMENTABLE);\n+\tif (NULL == stringArrayObject) {\n+\t\tgoto heapoutofmemory;\n+\t}\n+\n+\tresult = vmFuncs->j9jni_createLocalRef(env, (j9object_t)stringArrayObject);\n+\tif (NULL == result) {\n+\t\tgoto nativeoutofmemory;\n+\t}\n+\n+\tfor (U_32 index = 0; index < *permittedSubclassesCountPtr; index++) {\n+\t\tJ9UTF8* nameUTF = NULL;\n+\t\tj9object_t nameString = NULL;\n+\n+\t\tnameUTF = permittedSubclassesNameAtIndex(permittedSubclassesCountPtr, index);\n+\t\tnameString = mmFuncs->j9gc_createJavaLangString(vmThread, J9UTF8_DATA(nameUTF), (U_32) J9UTF8_LENGTH(nameUTF), J9_STR_INTERN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDAzOTUwOnYy", "diffSide": "RIGHT", "path": "runtime/nls/cfre/cfrerr.nls", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNToyNVrOGwwI5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNToyNVrOGwwI5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MzU0Mw==", "bodyText": "explaination is misspelled", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453773543", "createdAt": "2020-07-13T16:25:25Z", "author": {"login": "gacholio"}, "path": "runtime/nls/cfre/cfrerr.nls", "diffHunk": "@@ -1529,3 +1529,34 @@ J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.explanation=Please consult the Java Virtual Ma\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.user_response=Contact the provider of the classfile for a corrected version.\n # END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES=multiple PermittedSubclasses attributes\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDA0MDQ0OnYy", "diffSide": "RIGHT", "path": "runtime/nls/cfre/cfrerr.nls", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNTozOVrOGwwJkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNTozOVrOGwwJkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MzcxMw==", "bodyText": "Same misspelling", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453773713", "createdAt": "2020-07-13T16:25:39Z", "author": {"login": "gacholio"}, "path": "runtime/nls/cfre/cfrerr.nls", "diffHunk": "@@ -1529,3 +1529,34 @@ J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.explanation=Please consult the Java Virtual Ma\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.user_response=Contact the provider of the classfile for a corrected version.\n # END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES=multiple PermittedSubclasses attributes\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.user_response=Contact the provider of the classfile for a corrected version.\n+# END NON-TRANSLATABLE\n+\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED=final classes cannot be sealed\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDA0MTQ3OnYy", "diffSide": "RIGHT", "path": "runtime/nls/cfre/cfrerr.nls", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNTo1M1rOGwwKKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNTo1M1rOGwwKKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3Mzg2NQ==", "bodyText": "spelling", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453773865", "createdAt": "2020-07-13T16:25:53Z", "author": {"login": "gacholio"}, "path": "runtime/nls/cfre/cfrerr.nls", "diffHunk": "@@ -1529,3 +1529,34 @@ J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.explanation=Please consult the Java Virtual Ma\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.user_response=Contact the provider of the classfile for a corrected version.\n # END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES=multiple PermittedSubclasses attributes\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.user_response=Contact the provider of the classfile for a corrected version.\n+# END NON-TRANSLATABLE\n+\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED=final classes cannot be sealed\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.user_response=Contact the provider of the classfile for a corrected version.\n+# END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_NAME_NOT_UTF8=PermittedSubclasses name must be a string\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_NAME_NOT_UTF8.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDA0MjAxOnYy", "diffSide": "RIGHT", "path": "runtime/nls/cfre/cfrerr.nls", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNjowNFrOGwwKhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNjowNFrOGwwKhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3Mzk1OA==", "bodyText": "spelling", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453773958", "createdAt": "2020-07-13T16:26:04Z", "author": {"login": "gacholio"}, "path": "runtime/nls/cfre/cfrerr.nls", "diffHunk": "@@ -1529,3 +1529,34 @@ J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.explanation=Please consult the Java Virtual Ma\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n J9NLS_CFR_LVTT_DOES_NOT_MATCH_LVT.user_response=Contact the provider of the classfile for a corrected version.\n # END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES=multiple PermittedSubclasses attributes\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n+J9NLS_CFR_ERR_MULTIPLE_PERMITTEDSUBCLASSES_ATTRIBUTES.user_response=Contact the provider of the classfile for a corrected version.\n+# END NON-TRANSLATABLE\n+\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED=final classes cannot be sealed\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n+J9NLS_CFR_FINAL_CLASS_CANNOT_BE_SEALED.user_response=Contact the provider of the classfile for a corrected version.\n+# END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_NAME_NOT_UTF8=PermittedSubclasses name must be a string\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_NAME_NOT_UTF8.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_NAME_NOT_UTF8.system_action=The JVM will throw a verification or classloading-related exception such as java.lang.ClassFormatError.\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_NAME_NOT_UTF8.user_response=Contact the provider of the classfile for a corrected version.\n+# END NON-TRANSLATABLE\n+\n+# PermittedSubclasses is not translatable\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_CLASS_ENTRY_NOT_CLASS_TYPE=PermittedSubclasses class entry is not a class type\n+# START NON-TRANSLATABLE\n+J9NLS_CFR_ERR_PERMITTEDSUBCLASSES_CLASS_ENTRY_NOT_CLASS_TYPE.explanation=Please consult the Java Virtual Machine Specification for a detailed explaination.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDA1MzI1OnYy", "diffSide": "RIGHT", "path": "runtime/oti/util_api.h", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyODozN1rOGwwRRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyODozN1rOGwwRRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3NTY4NA==", "bodyText": "Incorrect parameter list", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453775684", "createdAt": "2020-07-13T16:28:37Z", "author": {"login": "gacholio"}, "path": "runtime/oti/util_api.h", "diffHunk": "@@ -1274,6 +1274,26 @@ void validateLibrary(J9JavaVM *javaVM, J9NativeLibrary *library);\n \n /* ---------------- optinfo.c ---------------- */\n \n+/**\n+ * Retrieves number of permitted subclasses in this sealed class. Assumes that \n+ * ROM class parameter references a record class.\n+ * \n+ * @param J9ROMClass sealed class\n+ * @return U_32 number of permitted subclasses in optionalinfo\n+ */\n+U_32*\n+getNumberOfPermittedSubclassesPtr(J9ROMClass *romClass);\n+\n+/**\n+ * Find the permitted subclass name constant pool entry at index in the optional data of the ROM class parameter.\n+ * This method assumes there is at least one permitted subclass in the ROM class.\n+ * \n+ * @param J9UTF8* sealed class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDA1ODU4OnYy", "diffSide": "RIGHT", "path": "runtime/util/optinfo.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyOTo1MFrOGwwUYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxODozNzoxNFrOGw08mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3NjQ4MQ==", "bodyText": "Will this not be NULL for unsealed classes? Likely better to NULL check around the SRP get and allow NULL to be returned.", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453776481", "createdAt": "2020-07-13T16:29:50Z", "author": {"login": "gacholio"}, "path": "runtime/util/optinfo.c", "diffHunk": "@@ -673,6 +673,24 @@ getLineNumberForROMClassFromROMMethod(J9JavaVM *vm, J9ROMMethod *romMethod, J9RO\n \treturn number;\n }\n \n+U_32*\n+getNumberOfPermittedSubclassesPtr(J9ROMClass *romClass)\n+{\n+\tU_32 *ptr = getSRPPtr(J9ROMCLASS_OPTIONALINFO(romClass), romClass->optionalFlags, J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE);\n+\n+\tAssert_VMUtil_true(ptr != NULL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg1MjMxNQ==", "bodyText": "The method declaration description indicates that this method is called only for a sealed class.", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453852315", "createdAt": "2020-07-13T18:37:14Z", "author": {"login": "theresa-m"}, "path": "runtime/util/optinfo.c", "diffHunk": "@@ -673,6 +673,24 @@ getLineNumberForROMClassFromROMMethod(J9JavaVM *vm, J9ROMMethod *romMethod, J9RO\n \treturn number;\n }\n \n+U_32*\n+getNumberOfPermittedSubclassesPtr(J9ROMClass *romClass)\n+{\n+\tU_32 *ptr = getSRPPtr(J9ROMCLASS_OPTIONALINFO(romClass), romClass->optionalFlags, J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE);\n+\n+\tAssert_VMUtil_true(ptr != NULL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3NjQ4MQ=="}, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDA2MDUzOnYy", "diffSide": "RIGHT", "path": "runtime/util/optinfo.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjozMDoxNVrOGwwVgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjozMDoxNVrOGwwVgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3Njc2OQ==", "bodyText": "{ on a new line please", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453776769", "createdAt": "2020-07-13T16:30:15Z", "author": {"login": "gacholio"}, "path": "runtime/util/optinfo.c", "diffHunk": "@@ -673,6 +673,24 @@ getLineNumberForROMClassFromROMMethod(J9JavaVM *vm, J9ROMMethod *romMethod, J9RO\n \treturn number;\n }\n \n+U_32*\n+getNumberOfPermittedSubclassesPtr(J9ROMClass *romClass)\n+{\n+\tU_32 *ptr = getSRPPtr(J9ROMCLASS_OPTIONALINFO(romClass), romClass->optionalFlags, J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE);\n+\n+\tAssert_VMUtil_true(ptr != NULL);\n+\n+\treturn SRP_PTR_GET(ptr, U_32*);\n+}\n+\n+J9UTF8*\n+permittedSubclassesNameAtIndex(U_32* permittedSubclassesCountPtr, U_32 index) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e5f539c1ce8135db3450dec3a7a324de6f4d2f"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDgyOTUxOnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/reflecthelp.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxOTo1ODo1N1rOGw3rpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDoyMDo1OVrOGw4X-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg5NzEyNw==", "bodyText": "Windows does not allow declarations inside for statements in C files.", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453897127", "createdAt": "2020-07-13T19:58:57Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/reflecthelp.c", "diffHunk": "@@ -1957,3 +1957,66 @@ getRecordComponentsHelper(JNIEnv *env, jobject cls)\n \tvmFuncs->internalExitVMToJNI(vmThread);\n \treturn result;\n }\n+\n+/* Create an array of string names for class's PermittedSubclasses */\n+jarray\n+permittedSubclassesHelper(JNIEnv *env, jobject cls)\n+{\n+\tJ9VMThread *vmThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = vmThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tJ9MemoryManagerFunctions *mmFuncs = vm->memoryManagerFunctions;\n+\tJ9Class *clazz = NULL;\n+\tJ9ROMClass *romClass = NULL;\n+\tjarray result = NULL;\n+\tJ9Class *stringClass = NULL;\n+\tJ9Class *stringArrayClass = NULL;\n+\tU_32 *permittedSubclassesCountPtr = 0;\n+\tj9array_t stringArrayObject = NULL;\n+\n+\tvmFuncs->internalEnterVMFromJNI(vmThread);\n+\n+\tclazz = J9VM_J9CLASS_FROM_JCLASS(vmThread, (jclass)cls);\n+\tromClass = clazz->romClass;\n+\n+\t/* allocate String array for results */\n+\tstringClass = J9VMJAVALANGSTRING(vm);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\tstringArrayClass = fetchArrayClass(vmThread, stringClass);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\n+\tpermittedSubclassesCountPtr = getNumberOfPermittedSubclassesPtr(romClass);\n+\n+\tstringArrayObject = (j9array_t) mmFuncs->J9AllocateIndexableObject(vmThread, stringArrayClass,\n+\t\t\t\t*permittedSubclassesCountPtr, J9_GC_ALLOCATE_OBJECT_NON_INSTRUMENTABLE);\n+\tif (NULL == stringArrayObject) {\n+\t\tgoto heapoutofmemory;\n+\t}\n+\n+\tresult = vmFuncs->j9jni_createLocalRef(env, (j9object_t)stringArrayObject);\n+\n+\tfor (U_32 index = 0; index < *permittedSubclassesCountPtr; index++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "080f1c3880d4549146260d941959f6870cbdb6ce"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkwODQ3NQ==", "bodyText": "Updated.", "url": "https://github.com/eclipse-openj9/openj9/pull/10120#discussion_r453908475", "createdAt": "2020-07-13T20:20:59Z", "author": {"login": "theresa-m"}, "path": "runtime/jcl/common/reflecthelp.c", "diffHunk": "@@ -1957,3 +1957,66 @@ getRecordComponentsHelper(JNIEnv *env, jobject cls)\n \tvmFuncs->internalExitVMToJNI(vmThread);\n \treturn result;\n }\n+\n+/* Create an array of string names for class's PermittedSubclasses */\n+jarray\n+permittedSubclassesHelper(JNIEnv *env, jobject cls)\n+{\n+\tJ9VMThread *vmThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = vmThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tJ9MemoryManagerFunctions *mmFuncs = vm->memoryManagerFunctions;\n+\tJ9Class *clazz = NULL;\n+\tJ9ROMClass *romClass = NULL;\n+\tjarray result = NULL;\n+\tJ9Class *stringClass = NULL;\n+\tJ9Class *stringArrayClass = NULL;\n+\tU_32 *permittedSubclassesCountPtr = 0;\n+\tj9array_t stringArrayObject = NULL;\n+\n+\tvmFuncs->internalEnterVMFromJNI(vmThread);\n+\n+\tclazz = J9VM_J9CLASS_FROM_JCLASS(vmThread, (jclass)cls);\n+\tromClass = clazz->romClass;\n+\n+\t/* allocate String array for results */\n+\tstringClass = J9VMJAVALANGSTRING(vm);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\tstringArrayClass = fetchArrayClass(vmThread, stringClass);\n+\tif (NULL != vmThread->currentException) {\n+\t\tgoto done;\n+\t}\n+\n+\tpermittedSubclassesCountPtr = getNumberOfPermittedSubclassesPtr(romClass);\n+\n+\tstringArrayObject = (j9array_t) mmFuncs->J9AllocateIndexableObject(vmThread, stringArrayClass,\n+\t\t\t\t*permittedSubclassesCountPtr, J9_GC_ALLOCATE_OBJECT_NON_INSTRUMENTABLE);\n+\tif (NULL == stringArrayObject) {\n+\t\tgoto heapoutofmemory;\n+\t}\n+\n+\tresult = vmFuncs->j9jni_createLocalRef(env, (j9object_t)stringArrayObject);\n+\n+\tfor (U_32 index = 0; index < *permittedSubclassesCountPtr; index++) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg5NzEyNw=="}, "originalCommit": {"oid": "080f1c3880d4549146260d941959f6870cbdb6ce"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4923, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}