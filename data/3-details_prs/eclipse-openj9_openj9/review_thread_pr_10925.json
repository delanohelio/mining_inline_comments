{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MTQ4MzE0", "number": 10925, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0NDo0NFrOEvdLgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoxMzozMFrOEyBxtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTk2NjA5OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/z/codegen/J9UnresolvedDataReadOnlySnippet.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0NDo0NFrOHkc1vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1MjoxMFrOHkdHDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MzI5Mw==", "bodyText": "This looks like two lines in one. Can we break them apart?", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r507983293", "createdAt": "2020-10-19T18:44:44Z", "author": {"login": "fjeremic"}, "path": "runtime/compiler/z/codegen/J9UnresolvedDataReadOnlySnippet.cpp", "diffHunk": "@@ -105,8 +105,9 @@ J9::Z::UnresolvedDataReadOnlySnippet::emitSnippetBody()\n \n    // Relative address to the start of the mainline resolution\n    intptr_t startResolutionSeqLabelAddr = reinterpret_cast<intptr_t>(startResolveSequenceLabel->getCodeLocation());\n-   TR_ASSERT_FATAL(cg()->canUseRelativeLongInstructions(startResolutionSeqLabelAddr), \"startResolveSequenceLabel [%p] is outside relative immediate range\", startResolutionSeqLabelAddr);*reinterpret_cast<int32_t*>(cursor) = static_cast<int32_t>(startOfResolutionSeqLabelAddr - (intptr_t)helperCallRA);\n+   TR_ASSERT_FATAL(cg()->canUseRelativeLongInstructions(startResolutionSeqLabelAddr), \"startResolveSequenceLabel [%p] is outside relative immediate range\", startResolutionSeqLabelAddr);*reinterpret_cast<int32_t*>(cursor) = static_cast<int32_t>(startResolutionSeqLabelAddr - (intptr_t)helperCallRA);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13a51f6bc611de8e95dcc43b18239f056fdbc616"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NzcyNw==", "bodyText": "My apologies,  fixed in https://github.com/eclipse/openj9/compare/13a51f6bc611de8e95dcc43b18239f056fdbc616..e90116d7332681724cdd8aa492ff4522dadd0d6a", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r507987727", "createdAt": "2020-10-19T18:52:10Z", "author": {"login": "r30shah"}, "path": "runtime/compiler/z/codegen/J9UnresolvedDataReadOnlySnippet.cpp", "diffHunk": "@@ -105,8 +105,9 @@ J9::Z::UnresolvedDataReadOnlySnippet::emitSnippetBody()\n \n    // Relative address to the start of the mainline resolution\n    intptr_t startResolutionSeqLabelAddr = reinterpret_cast<intptr_t>(startResolveSequenceLabel->getCodeLocation());\n-   TR_ASSERT_FATAL(cg()->canUseRelativeLongInstructions(startResolutionSeqLabelAddr), \"startResolveSequenceLabel [%p] is outside relative immediate range\", startResolutionSeqLabelAddr);*reinterpret_cast<int32_t*>(cursor) = static_cast<int32_t>(startOfResolutionSeqLabelAddr - (intptr_t)helperCallRA);\n+   TR_ASSERT_FATAL(cg()->canUseRelativeLongInstructions(startResolutionSeqLabelAddr), \"startResolveSequenceLabel [%p] is outside relative immediate range\", startResolutionSeqLabelAddr);*reinterpret_cast<int32_t*>(cursor) = static_cast<int32_t>(startResolutionSeqLabelAddr - (intptr_t)helperCallRA);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MzI5Mw=="}, "originalCommit": {"oid": "13a51f6bc611de8e95dcc43b18239f056fdbc616"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTk4NDY4OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/z/codegen/J9MemoryReference.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0OTozMVrOHkdA2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTowMjoxNVrOHkdg_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NjEzNg==", "bodyText": "You have to check the result of put() for failure, not get().", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r507986136", "createdAt": "2020-10-19T18:49:31Z", "author": {"login": "ymanton"}, "path": "runtime/compiler/z/codegen/J9MemoryReference.cpp", "diffHunk": "@@ -393,8 +397,11 @@ J9::Z::MemoryReference::create(TR::CodeGenerator* cg, TR::Node* node)\n \n       typedef J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData CCUnresolvedData;\n \n-      CCUnresolvedData* ccUnresolvedDataAddress =\n-         reinterpret_cast<J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData*>(cg->allocateCodeMemory(sizeof(CCUnresolvedData), false));\n+      OMR::CCData *codeCacheData = cg->getCodeCache()->manager()->getCodeCacheData();\n+      OMR::CCData::index_t index;\n+      codeCacheData->put(NULL, sizeof(CCUnresolvedData), 8, NULL, index);\n+      \n+      CCUnresolvedData* ccUnresolvedDataAddress = codeCacheData->get<CCUnresolvedData>(index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13a51f6bc611de8e95dcc43b18239f056fdbc616"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk5NDM2NQ==", "bodyText": "Checking result of put in https://github.com/eclipse/openj9/compare/69c427858ff45f769e7f9831d4e4777159a0a758..e6572d23ab0cf110a98cc239bea656e8aa8729ec", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r507994365", "createdAt": "2020-10-19T19:02:15Z", "author": {"login": "r30shah"}, "path": "runtime/compiler/z/codegen/J9MemoryReference.cpp", "diffHunk": "@@ -393,8 +397,11 @@ J9::Z::MemoryReference::create(TR::CodeGenerator* cg, TR::Node* node)\n \n       typedef J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData CCUnresolvedData;\n \n-      CCUnresolvedData* ccUnresolvedDataAddress =\n-         reinterpret_cast<J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData*>(cg->allocateCodeMemory(sizeof(CCUnresolvedData), false));\n+      OMR::CCData *codeCacheData = cg->getCodeCache()->manager()->getCodeCacheData();\n+      OMR::CCData::index_t index;\n+      codeCacheData->put(NULL, sizeof(CCUnresolvedData), 8, NULL, index);\n+      \n+      CCUnresolvedData* ccUnresolvedDataAddress = codeCacheData->get<CCUnresolvedData>(index);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NjEzNg=="}, "originalCommit": {"oid": "13a51f6bc611de8e95dcc43b18239f056fdbc616"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTk4ODI3OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/z/codegen/S390PrivateLinkage.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1MDoyNVrOHkdC2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTowMjoxM1rOHkdg5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NjY0OA==", "bodyText": "Likewise here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r507986648", "createdAt": "2020-10-19T18:50:25Z", "author": {"login": "ymanton"}, "path": "runtime/compiler/z/codegen/S390PrivateLinkage.cpp", "diffHunk": "@@ -1583,7 +1583,11 @@ J9::Z::PrivateLinkage::buildNoPatchingVirtualDispatchWithResolve(TR::Node *callN\n       int32_t vtableOffset;\n       };\n    \n-   ccResolveVirtualData *ccResolveVirtualDataAddress = reinterpret_cast<ccResolveVirtualData *>(cg()->allocateCodeMemory(sizeof(ccResolveVirtualData), false));\n+   OMR::CCData *codeCacheData = cg()->getCodeCache()->manager()->getCodeCacheData();\n+   OMR::CCData::index_t index;\n+   codeCacheData->put(NULL, sizeof(ccResolveVirtualData), 8, NULL, index);\n+   \n+   ccResolveVirtualData *ccResolveVirtualDataAddress = codeCacheData->get<ccResolveVirtualData>(index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13a51f6bc611de8e95dcc43b18239f056fdbc616"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk5NDM0Mw==", "bodyText": "Checking result of put in https://github.com/eclipse/openj9/compare/69c427858ff45f769e7f9831d4e4777159a0a758..e6572d23ab0cf110a98cc239bea656e8aa8729ec", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r507994343", "createdAt": "2020-10-19T19:02:13Z", "author": {"login": "r30shah"}, "path": "runtime/compiler/z/codegen/S390PrivateLinkage.cpp", "diffHunk": "@@ -1583,7 +1583,11 @@ J9::Z::PrivateLinkage::buildNoPatchingVirtualDispatchWithResolve(TR::Node *callN\n       int32_t vtableOffset;\n       };\n    \n-   ccResolveVirtualData *ccResolveVirtualDataAddress = reinterpret_cast<ccResolveVirtualData *>(cg()->allocateCodeMemory(sizeof(ccResolveVirtualData), false));\n+   OMR::CCData *codeCacheData = cg()->getCodeCache()->manager()->getCodeCacheData();\n+   OMR::CCData::index_t index;\n+   codeCacheData->put(NULL, sizeof(ccResolveVirtualData), 8, NULL, index);\n+   \n+   ccResolveVirtualData *ccResolveVirtualDataAddress = codeCacheData->get<ccResolveVirtualData>(index);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NjY0OA=="}, "originalCommit": {"oid": "13a51f6bc611de8e95dcc43b18239f056fdbc616"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwODkyMzQwOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/z/codegen/J9MemoryReference.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoxMDoyN1rOHocTmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoyODo1OVrOHoc-2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2ODg1OQ==", "bodyText": "New typo: uVdnresolved", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512168859", "createdAt": "2020-10-26T18:10:27Z", "author": {"login": "ymanton"}, "path": "runtime/compiler/z/codegen/J9MemoryReference.cpp", "diffHunk": "@@ -393,14 +397,15 @@ J9::Z::MemoryReference::create(TR::CodeGenerator* cg, TR::Node* node)\n \n       typedef J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData CCUnresolvedData;\n \n-      CCUnresolvedData* ccUnresolvedDataAddress =\n-         reinterpret_cast<J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData*>(cg->allocateCodeMemory(sizeof(CCUnresolvedData), false));\n-\n-      if (ccUnresolvedDataAddress == NULL)\n+      OMR::CCData *codeCacheData = cg->getCodeCache()->manager()->getCodeCacheData();\n+      OMR::CCData::index_t index;\n+      if (!(codeCacheData->put(NULL, sizeof(CCUnresolvedData), 8, NULL, index)))\n          {\n-         comp->failCompilation<TR::CompilationException>(\"Could not allocate unresolved data metadata\");\n+         comp->failCompilation<TR::CompilationException>(\"Could not allocate uVdnresolved data metadata\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6572d23ab0cf110a98cc239bea656e8aa8729ec"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3OTkyOA==", "bodyText": "fixed in https://github.com/eclipse/openj9/compare/e6572d23ab0cf110a98cc239bea656e8aa8729ec..6d1fee3c7c3d3066a711500dc5c93851f9df074c", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512179928", "createdAt": "2020-10-26T18:28:59Z", "author": {"login": "r30shah"}, "path": "runtime/compiler/z/codegen/J9MemoryReference.cpp", "diffHunk": "@@ -393,14 +397,15 @@ J9::Z::MemoryReference::create(TR::CodeGenerator* cg, TR::Node* node)\n \n       typedef J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData CCUnresolvedData;\n \n-      CCUnresolvedData* ccUnresolvedDataAddress =\n-         reinterpret_cast<J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData*>(cg->allocateCodeMemory(sizeof(CCUnresolvedData), false));\n-\n-      if (ccUnresolvedDataAddress == NULL)\n+      OMR::CCData *codeCacheData = cg->getCodeCache()->manager()->getCodeCacheData();\n+      OMR::CCData::index_t index;\n+      if (!(codeCacheData->put(NULL, sizeof(CCUnresolvedData), 8, NULL, index)))\n          {\n-         comp->failCompilation<TR::CompilationException>(\"Could not allocate unresolved data metadata\");\n+         comp->failCompilation<TR::CompilationException>(\"Could not allocate uVdnresolved data metadata\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2ODg1OQ=="}, "originalCommit": {"oid": "e6572d23ab0cf110a98cc239bea656e8aa8729ec"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwODkyNjYxOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/z/codegen/S390PrivateLinkage.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoxMToyM1rOHocVow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoyOTozOFrOHodAUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2OTM3OQ==", "bodyText": "Existing typo: resovle", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512169379", "createdAt": "2020-10-26T18:11:23Z", "author": {"login": "ymanton"}, "path": "runtime/compiler/z/codegen/S390PrivateLinkage.cpp", "diffHunk": "@@ -1583,12 +1583,14 @@ J9::Z::PrivateLinkage::buildNoPatchingVirtualDispatchWithResolve(TR::Node *callN\n       int32_t vtableOffset;\n       };\n    \n-   ccResolveVirtualData *ccResolveVirtualDataAddress = reinterpret_cast<ccResolveVirtualData *>(cg()->allocateCodeMemory(sizeof(ccResolveVirtualData), false));\n-\n-   if (!ccResolveVirtualDataAddress)\n+   OMR::CCData *codeCacheData = cg()->getCodeCache()->manager()->getCodeCacheData();\n+   OMR::CCData::index_t index;\n+   if (!(codeCacheData->put(NULL, sizeof(ccResolveVirtualData), 8, NULL, index)))\n       {\n       comp()->failCompilation<TR::CompilationException>(\"Could not allocate resovle virtual dispatch metadata\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6572d23ab0cf110a98cc239bea656e8aa8729ec"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4MDMwNA==", "bodyText": "Fixed in https://github.com/eclipse/openj9/compare/e6572d23ab0cf110a98cc239bea656e8aa8729ec..6d1fee3c7c3d3066a711500dc5c93851f9df074c", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512180304", "createdAt": "2020-10-26T18:29:38Z", "author": {"login": "r30shah"}, "path": "runtime/compiler/z/codegen/S390PrivateLinkage.cpp", "diffHunk": "@@ -1583,12 +1583,14 @@ J9::Z::PrivateLinkage::buildNoPatchingVirtualDispatchWithResolve(TR::Node *callN\n       int32_t vtableOffset;\n       };\n    \n-   ccResolveVirtualData *ccResolveVirtualDataAddress = reinterpret_cast<ccResolveVirtualData *>(cg()->allocateCodeMemory(sizeof(ccResolveVirtualData), false));\n-\n-   if (!ccResolveVirtualDataAddress)\n+   OMR::CCData *codeCacheData = cg()->getCodeCache()->manager()->getCodeCacheData();\n+   OMR::CCData::index_t index;\n+   if (!(codeCacheData->put(NULL, sizeof(ccResolveVirtualData), 8, NULL, index)))\n       {\n       comp()->failCompilation<TR::CompilationException>(\"Could not allocate resovle virtual dispatch metadata\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE2OTM3OQ=="}, "originalCommit": {"oid": "e6572d23ab0cf110a98cc239bea656e8aa8729ec"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwODkzMjU1OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/z/codegen/J9MemoryReference.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoxMzowOFrOHocZfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODozMDo0NFrOHodC5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MDM2NQ==", "bodyText": "Rather than hardcoding 8 here would alignof(CCUnresolvedData) be better?", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512170365", "createdAt": "2020-10-26T18:13:08Z", "author": {"login": "ymanton"}, "path": "runtime/compiler/z/codegen/J9MemoryReference.cpp", "diffHunk": "@@ -393,14 +397,15 @@ J9::Z::MemoryReference::create(TR::CodeGenerator* cg, TR::Node* node)\n \n       typedef J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData CCUnresolvedData;\n \n-      CCUnresolvedData* ccUnresolvedDataAddress =\n-         reinterpret_cast<J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData*>(cg->allocateCodeMemory(sizeof(CCUnresolvedData), false));\n-\n-      if (ccUnresolvedDataAddress == NULL)\n+      OMR::CCData *codeCacheData = cg->getCodeCache()->manager()->getCodeCacheData();\n+      OMR::CCData::index_t index;\n+      if (!(codeCacheData->put(NULL, sizeof(CCUnresolvedData), 8, NULL, index)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6572d23ab0cf110a98cc239bea656e8aa8729ec"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4MDk2Nw==", "bodyText": "Changed the alignment to alignof(CCUnresolvedData) in https://github.com/eclipse/openj9/compare/69c427858ff45f769e7f9831d4e4777159a0a758..e6572d23ab0cf110a98cc239bea656e8aa8729ec", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512180967", "createdAt": "2020-10-26T18:30:44Z", "author": {"login": "r30shah"}, "path": "runtime/compiler/z/codegen/J9MemoryReference.cpp", "diffHunk": "@@ -393,14 +397,15 @@ J9::Z::MemoryReference::create(TR::CodeGenerator* cg, TR::Node* node)\n \n       typedef J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData CCUnresolvedData;\n \n-      CCUnresolvedData* ccUnresolvedDataAddress =\n-         reinterpret_cast<J9::Z::UnresolvedDataReadOnlySnippet::CCUnresolvedData*>(cg->allocateCodeMemory(sizeof(CCUnresolvedData), false));\n-\n-      if (ccUnresolvedDataAddress == NULL)\n+      OMR::CCData *codeCacheData = cg->getCodeCache()->manager()->getCodeCacheData();\n+      OMR::CCData::index_t index;\n+      if (!(codeCacheData->put(NULL, sizeof(CCUnresolvedData), 8, NULL, index)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MDM2NQ=="}, "originalCommit": {"oid": "e6572d23ab0cf110a98cc239bea656e8aa8729ec"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwODkzMzY3OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/z/codegen/S390PrivateLinkage.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoxMzozMFrOHocaSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODozMToxNlrOHodEKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MDU2OQ==", "bodyText": "Likewise here, alignof(CCUnresolvedData) rather than 8?", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512170569", "createdAt": "2020-10-26T18:13:30Z", "author": {"login": "ymanton"}, "path": "runtime/compiler/z/codegen/S390PrivateLinkage.cpp", "diffHunk": "@@ -1583,12 +1583,14 @@ J9::Z::PrivateLinkage::buildNoPatchingVirtualDispatchWithResolve(TR::Node *callN\n       int32_t vtableOffset;\n       };\n    \n-   ccResolveVirtualData *ccResolveVirtualDataAddress = reinterpret_cast<ccResolveVirtualData *>(cg()->allocateCodeMemory(sizeof(ccResolveVirtualData), false));\n-\n-   if (!ccResolveVirtualDataAddress)\n+   OMR::CCData *codeCacheData = cg()->getCodeCache()->manager()->getCodeCacheData();\n+   OMR::CCData::index_t index;\n+   if (!(codeCacheData->put(NULL, sizeof(ccResolveVirtualData), 8, NULL, index)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6572d23ab0cf110a98cc239bea656e8aa8729ec"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4MTI5MA==", "bodyText": "Fixed in https://github.com/eclipse/openj9/compare/69c427858ff45f769e7f9831d4e4777159a0a758..e6572d23ab0cf110a98cc239bea656e8aa8729ec", "url": "https://github.com/eclipse-openj9/openj9/pull/10925#discussion_r512181290", "createdAt": "2020-10-26T18:31:16Z", "author": {"login": "r30shah"}, "path": "runtime/compiler/z/codegen/S390PrivateLinkage.cpp", "diffHunk": "@@ -1583,12 +1583,14 @@ J9::Z::PrivateLinkage::buildNoPatchingVirtualDispatchWithResolve(TR::Node *callN\n       int32_t vtableOffset;\n       };\n    \n-   ccResolveVirtualData *ccResolveVirtualDataAddress = reinterpret_cast<ccResolveVirtualData *>(cg()->allocateCodeMemory(sizeof(ccResolveVirtualData), false));\n-\n-   if (!ccResolveVirtualDataAddress)\n+   OMR::CCData *codeCacheData = cg()->getCodeCache()->manager()->getCodeCacheData();\n+   OMR::CCData::index_t index;\n+   if (!(codeCacheData->put(NULL, sizeof(ccResolveVirtualData), 8, NULL, index)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MDU2OQ=="}, "originalCommit": {"oid": "e6572d23ab0cf110a98cc239bea656e8aa8729ec"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1177, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}