{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2Mjc3ODE2", "number": 10115, "title": "Add TypeLayoutEntry build for flattened fields", "bodyText": "Create TypeLayoutEntry for flattened fields with adjusted offset from the top level class for value types.\nThis change was originally authored by Yi Zhang who is listed as a co-author below.\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\nSigned-off-by: Annabelle Huo Annabelle.Huo@ibm.com", "createdAt": "2020-07-08T14:22:51Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10115", "merged": true, "mergeCommit": {"oid": "144ea20e1963076f5624ad19fde569a706687bbd"}, "closed": true, "closedAt": "2020-08-13T17:31:44Z", "author": {"login": "a7ehuo"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczo6FcABqjM1MzUxODk4MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-jgjKgFqTQ2Njk4NTczNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46868d72d8c5431d1b1ab67e11dd05967f0b28b2", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/46868d72d8c5431d1b1ab67e11dd05967f0b28b2", "committedDate": "2020-07-08T14:17:51Z", "message": "Add TypeLayoutEntry build for flattened fields\n\nCreate TypeLayoutEntry for flattened fields with adjusted\noffset from the top level class for value types.\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "d9540a6d694b86a679581141668f5b22425549ed", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d9540a6d694b86a679581141668f5b22425549ed", "committedDate": "2020-07-10T19:35:35Z", "message": "Add TypeLayoutEntry build for flattened fields\n\nCreate TypeLayoutEntry for flattened fields with adjusted\noffset from the top level class for value types.\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NjE5NDM0", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#pullrequestreview-454619434", "createdAt": "2020-07-24T03:40:21Z", "commit": {"oid": "d9540a6d694b86a679581141668f5b22425549ed"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwMzo0MDoyMlrOG2iSJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNDozMzowNFrOG2i2ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgzNzk4OQ==", "bodyText": "The field signature might be a class name or it might indicate the field is a primitive.  I would suggest renaming classNameData and classNameLength to signatureData and signatureLength to prevent anyone from thinking it must be a class.", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#discussion_r459837989", "createdAt": "2020-07-24T03:40:22Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/env/J9ClassEnv.cpp", "diffHunk": "@@ -417,24 +418,81 @@ J9::ClassEnv::isAnonymousClass(TR::Compilation *comp, TR_OpaqueClassBlock *clazz\n    return comp->fej9()->isAnonymousClass(clazz);\n    }\n \n-const TR::TypeLayout*\n-J9::ClassEnv::enumerateFields(TR::Region& region, TR_OpaqueClassBlock * opaqueClazz, TR::Compilation *comp)\n-   {  \n-   J9Class *clazz = (J9Class*)opaqueClazz;\n-   TR_VMFieldsInfo fieldsInfo(comp, clazz, 1, stackAlloc);\n-   ListIterator<TR_VMField> iter(fieldsInfo.getFields());\n-   TR::TypeLayoutBuilder tlb(region);\n-   for (TR_VMField *field = iter.getFirst(); field; field = iter.getNext())\n+/*\n+ * \\param prefix\n+ *    prefix is ended with `.`\n+ */\n+static char * mergeFieldNames(char * prefix, char * fieldName, bool withDotAtTheEnd, TR::Region &region)\n+   {\n+   int prefixLength = prefix ? strlen(prefix) : 0;\n+   int nameLength = strlen(fieldName);\n+   int mergedLength = nameLength + prefixLength;\n+\n+   if (withDotAtTheEnd)\n+      mergedLength++;\n+   mergedLength++; /* for adding \\0 at the end */;\n+\n+   char * newName = new (region) char[mergedLength];\n+   if (prefixLength > 0)\n+      strncpy(newName, prefix, prefixLength);\n+\n+   strncpy(newName + prefixLength, fieldName, nameLength);\n+\n+   if (withDotAtTheEnd)\n+      newName[mergedLength-2] = '.';\n+   newName[mergedLength-1] = '\\0';\n+   return newName;\n+   }\n+\n+static bool isFieldShapeQType(J9ROMFieldShape * shape)\n+   {\n+   // QType field signature example: \"QNestedB;\"\n+   bool isQType = false;\n+   J9UTF8 * signature = J9ROMNAMEANDSIGNATURE_SIGNATURE(&shape->nameAndSignature);\n+   U_8 * classNameData = J9UTF8_DATA(signature);\n+   U_16 classNameLength = J9UTF8_LENGTH(signature);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9540a6d694b86a679581141668f5b22425549ed"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgzODkxNw==", "bodyText": "I would suggest renaming withDotAtTheEnd to indicate the purpose - maybe, lastFieldInFlattenedChain or something like that?  I know that's not a great name - hopefully you can think of something better. . . .", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#discussion_r459838917", "createdAt": "2020-07-24T03:45:18Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/env/J9ClassEnv.cpp", "diffHunk": "@@ -417,24 +418,81 @@ J9::ClassEnv::isAnonymousClass(TR::Compilation *comp, TR_OpaqueClassBlock *clazz\n    return comp->fej9()->isAnonymousClass(clazz);\n    }\n \n-const TR::TypeLayout*\n-J9::ClassEnv::enumerateFields(TR::Region& region, TR_OpaqueClassBlock * opaqueClazz, TR::Compilation *comp)\n-   {  \n-   J9Class *clazz = (J9Class*)opaqueClazz;\n-   TR_VMFieldsInfo fieldsInfo(comp, clazz, 1, stackAlloc);\n-   ListIterator<TR_VMField> iter(fieldsInfo.getFields());\n-   TR::TypeLayoutBuilder tlb(region);\n-   for (TR_VMField *field = iter.getFirst(); field; field = iter.getNext())\n+/*\n+ * \\param prefix\n+ *    prefix is ended with `.`\n+ */\n+static char * mergeFieldNames(char * prefix, char * fieldName, bool withDotAtTheEnd, TR::Region &region)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9540a6d694b86a679581141668f5b22425549ed"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgzOTk0Nw==", "bodyText": "I'm not sure whether these unguarded calls to traceMsg should be kept here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#discussion_r459839947", "createdAt": "2020-07-24T03:51:23Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/env/J9ClassEnv.cpp", "diffHunk": "@@ -417,24 +418,81 @@ J9::ClassEnv::isAnonymousClass(TR::Compilation *comp, TR_OpaqueClassBlock *clazz\n    return comp->fej9()->isAnonymousClass(clazz);\n    }\n \n-const TR::TypeLayout*\n-J9::ClassEnv::enumerateFields(TR::Region& region, TR_OpaqueClassBlock * opaqueClazz, TR::Compilation *comp)\n-   {  \n-   J9Class *clazz = (J9Class*)opaqueClazz;\n-   TR_VMFieldsInfo fieldsInfo(comp, clazz, 1, stackAlloc);\n-   ListIterator<TR_VMField> iter(fieldsInfo.getFields());\n-   TR::TypeLayoutBuilder tlb(region);\n-   for (TR_VMField *field = iter.getFirst(); field; field = iter.getNext())\n+/*\n+ * \\param prefix\n+ *    prefix is ended with `.`\n+ */\n+static char * mergeFieldNames(char * prefix, char * fieldName, bool withDotAtTheEnd, TR::Region &region)\n+   {\n+   int prefixLength = prefix ? strlen(prefix) : 0;\n+   int nameLength = strlen(fieldName);\n+   int mergedLength = nameLength + prefixLength;\n+\n+   if (withDotAtTheEnd)\n+      mergedLength++;\n+   mergedLength++; /* for adding \\0 at the end */;\n+\n+   char * newName = new (region) char[mergedLength];\n+   if (prefixLength > 0)\n+      strncpy(newName, prefix, prefixLength);\n+\n+   strncpy(newName + prefixLength, fieldName, nameLength);\n+\n+   if (withDotAtTheEnd)\n+      newName[mergedLength-2] = '.';\n+   newName[mergedLength-1] = '\\0';\n+   return newName;\n+   }\n+\n+static bool isFieldShapeQType(J9ROMFieldShape * shape)\n+   {\n+   // QType field signature example: \"QNestedB;\"\n+   bool isQType = false;\n+   J9UTF8 * signature = J9ROMNAMEANDSIGNATURE_SIGNATURE(&shape->nameAndSignature);\n+   U_8 * classNameData = J9UTF8_DATA(signature);\n+   U_16 classNameLength = J9UTF8_LENGTH(signature);\n+\n+   if ((classNameLength > 0) &&\n+       (';' == classNameData[classNameLength - 1]) &&\n+       ('Q' == classNameData[0]))\n+      {\n+      isQType = true;\n+      }\n+   return isQType;\n+   }\n+\n+static void addEntryForField(TR_VMField *field, TR::TypeLayoutBuilder &tlb, TR::Region& region, J9Class * definingClass,\n+                             char * prefix, IDATA offsetBase, TR::Compilation * comp)\n+   {\n+   J9JavaVM *vm = comp->fej9()->getJ9JITConfig()->javaVM;\n+   if (isFieldShapeQType(field->shape) &&\n+       vm->internalVMFunctions->isFlattenableFieldFlattened(definingClass, field->shape))\n+      {\n+      char * prefixForChild = mergeFieldNames(prefix, field->name, true /*withDotAtTheEnd*/, comp->trMemory()->currentStackRegion());\n+      IDATA offsetBaseForChild = field->offset + offsetBase;\n+      traceMsg(comp, \"field %s:%s is flattened. offset from TR_VMField %d, offset from fcc %d\\n\",\n+            field->name, field->signature, field->offset,\n+            vm->internalVMFunctions->getFlattenableFieldOffset(definingClass, field->shape));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9540a6d694b86a679581141668f5b22425549ed"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTgzOTk4MA==", "bodyText": "I'm not sure whether these unguarded calls to traceMsg should be kept here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#discussion_r459839980", "createdAt": "2020-07-24T03:51:34Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/env/J9ClassEnv.cpp", "diffHunk": "@@ -464,16 +522,28 @@ J9::ClassEnv::enumerateFields(TR::Region& region, TR_OpaqueClassBlock * opaqueCl\n             break;\n             }\n          }\n-      size_t nameSize = strlen(field->name)+1;\n-      char *fieldName = new (region) char[nameSize];\n-      strncpy(fieldName, field->name, nameSize);\n-      TR_ASSERT_FATAL(fieldName[nameSize-1] == '\\0', \"fieldName buffer was too small.\");\n-      int32_t offset = field->offset + TR::Compiler->om.objectHeaderSizeInBytes();\n+\n+      char *fieldName = mergeFieldNames(prefix, field->name, false /* withDotAtTheEnd */ , region);\n+      int32_t offset = offsetBase + field->offset + TR::Compiler->om.objectHeaderSizeInBytes();\n       bool isVolatile = (field->modifiers & J9AccVolatile) ? true : false;\n       bool isPrivate = (field->modifiers & J9AccPrivate) ? true : false;\n       bool isFinal = (field->modifiers & J9AccFinal) ? true : false;\n+      traceMsg(comp, \"type layout definingClass %p field: %s, field offset: %d offsetBase %d\\n\", definingClass, fieldName, field->offset, offsetBase);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9540a6d694b86a679581141668f5b22425549ed"}, "originalPosition": 132}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg0NzMwNg==", "bodyText": "You might want to note that the prefix can be NULL.", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#discussion_r459847306", "createdAt": "2020-07-24T04:33:04Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/env/J9ClassEnv.cpp", "diffHunk": "@@ -417,24 +418,81 @@ J9::ClassEnv::isAnonymousClass(TR::Compilation *comp, TR_OpaqueClassBlock *clazz\n    return comp->fej9()->isAnonymousClass(clazz);\n    }\n \n-const TR::TypeLayout*\n-J9::ClassEnv::enumerateFields(TR::Region& region, TR_OpaqueClassBlock * opaqueClazz, TR::Compilation *comp)\n-   {  \n-   J9Class *clazz = (J9Class*)opaqueClazz;\n-   TR_VMFieldsInfo fieldsInfo(comp, clazz, 1, stackAlloc);\n-   ListIterator<TR_VMField> iter(fieldsInfo.getFields());\n-   TR::TypeLayoutBuilder tlb(region);\n-   for (TR_VMField *field = iter.getFirst(); field; field = iter.getNext())\n+/*\n+ * \\param prefix\n+ *    prefix is ended with `.`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9540a6d694b86a679581141668f5b22425549ed"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODM3ODE5", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#pullrequestreview-454837819", "createdAt": "2020-07-24T12:14:06Z", "commit": {"oid": "d9540a6d694b86a679581141668f5b22425549ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjoxNDowNlrOG2tGzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjoxNDowNlrOG2tGzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAxNTMwOQ==", "bodyText": "I have this nagging concern about the number of allocations of char arrays and string copies that are happening to create the prefixes as things go along.  If you picture the recursion through the fields as a tree, there are allocations and copies of the prefix for each internal node of the tree, as well as for each leaf node.  I know the copies for the leaf nodes are required, but the copies for the internal nodes feel like overhead.\nBut to avoid all of that, I think the code would need to allocate a buffer for the maximum prefix length, or pass around an array of pointers to the pieces of the prefix, copying only at the leaf nodes.  And that would only avoid most of the copying for the internal nodes in the tree, not the leaf nodes.\nSo maybe the extra complication isn't worth it, but it might be something to keep in mind or at least run an experiment. . . .", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#discussion_r460015309", "createdAt": "2020-07-24T12:14:06Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/env/J9ClassEnv.cpp", "diffHunk": "@@ -417,24 +418,81 @@ J9::ClassEnv::isAnonymousClass(TR::Compilation *comp, TR_OpaqueClassBlock *clazz\n    return comp->fej9()->isAnonymousClass(clazz);\n    }\n \n-const TR::TypeLayout*\n-J9::ClassEnv::enumerateFields(TR::Region& region, TR_OpaqueClassBlock * opaqueClazz, TR::Compilation *comp)\n-   {  \n-   J9Class *clazz = (J9Class*)opaqueClazz;\n-   TR_VMFieldsInfo fieldsInfo(comp, clazz, 1, stackAlloc);\n-   ListIterator<TR_VMField> iter(fieldsInfo.getFields());\n-   TR::TypeLayoutBuilder tlb(region);\n-   for (TR_VMField *field = iter.getFirst(); field; field = iter.getNext())\n+/*\n+ * \\param prefix\n+ *    prefix is ended with `.`\n+ */\n+static char * mergeFieldNames(char * prefix, char * fieldName, bool withDotAtTheEnd, TR::Region &region)\n+   {\n+   int prefixLength = prefix ? strlen(prefix) : 0;\n+   int nameLength = strlen(fieldName);\n+   int mergedLength = nameLength + prefixLength;\n+\n+   if (withDotAtTheEnd)\n+      mergedLength++;\n+   mergedLength++; /* for adding \\0 at the end */;\n+\n+   char * newName = new (region) char[mergedLength];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9540a6d694b86a679581141668f5b22425549ed"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0ODQ2MjUy", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#pullrequestreview-454846252", "createdAt": "2020-07-24T12:28:52Z", "commit": {"oid": "d9540a6d694b86a679581141668f5b22425549ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjoyODo1M1rOG2tf6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMjoyODo1M1rOG2tf6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDAyMTczNg==", "bodyText": "Leo @Leonardo2718 is working on using helpers to load and store flattened fields.  Will those changes need symrefs for the aggregate fields to exist?  I'm just wondering whether the flattening of the symrefs should happen unconditionally like this or whether they should not be flattened if the JIT will use the load and store helpers.", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#discussion_r460021736", "createdAt": "2020-07-24T12:28:53Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/env/J9ClassEnv.cpp", "diffHunk": "@@ -417,24 +418,81 @@ J9::ClassEnv::isAnonymousClass(TR::Compilation *comp, TR_OpaqueClassBlock *clazz\n    return comp->fej9()->isAnonymousClass(clazz);\n    }\n \n-const TR::TypeLayout*\n-J9::ClassEnv::enumerateFields(TR::Region& region, TR_OpaqueClassBlock * opaqueClazz, TR::Compilation *comp)\n-   {  \n-   J9Class *clazz = (J9Class*)opaqueClazz;\n-   TR_VMFieldsInfo fieldsInfo(comp, clazz, 1, stackAlloc);\n-   ListIterator<TR_VMField> iter(fieldsInfo.getFields());\n-   TR::TypeLayoutBuilder tlb(region);\n-   for (TR_VMField *field = iter.getFirst(); field; field = iter.getNext())\n+/*\n+ * \\param prefix\n+ *    prefix is ended with `.`\n+ */\n+static char * mergeFieldNames(char * prefix, char * fieldName, bool withDotAtTheEnd, TR::Region &region)\n+   {\n+   int prefixLength = prefix ? strlen(prefix) : 0;\n+   int nameLength = strlen(fieldName);\n+   int mergedLength = nameLength + prefixLength;\n+\n+   if (withDotAtTheEnd)\n+      mergedLength++;\n+   mergedLength++; /* for adding \\0 at the end */;\n+\n+   char * newName = new (region) char[mergedLength];\n+   if (prefixLength > 0)\n+      strncpy(newName, prefix, prefixLength);\n+\n+   strncpy(newName + prefixLength, fieldName, nameLength);\n+\n+   if (withDotAtTheEnd)\n+      newName[mergedLength-2] = '.';\n+   newName[mergedLength-1] = '\\0';\n+   return newName;\n+   }\n+\n+static bool isFieldShapeQType(J9ROMFieldShape * shape)\n+   {\n+   // QType field signature example: \"QNestedB;\"\n+   bool isQType = false;\n+   J9UTF8 * signature = J9ROMNAMEANDSIGNATURE_SIGNATURE(&shape->nameAndSignature);\n+   U_8 * classNameData = J9UTF8_DATA(signature);\n+   U_16 classNameLength = J9UTF8_LENGTH(signature);\n+\n+   if ((classNameLength > 0) &&\n+       (';' == classNameData[classNameLength - 1]) &&\n+       ('Q' == classNameData[0]))\n+      {\n+      isQType = true;\n+      }\n+   return isQType;\n+   }\n+\n+static void addEntryForField(TR_VMField *field, TR::TypeLayoutBuilder &tlb, TR::Region& region, J9Class * definingClass,\n+                             char * prefix, IDATA offsetBase, TR::Compilation * comp)\n+   {\n+   J9JavaVM *vm = comp->fej9()->getJ9JITConfig()->javaVM;\n+   if (isFieldShapeQType(field->shape) &&\n+       vm->internalVMFunctions->isFlattenableFieldFlattened(definingClass, field->shape))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9540a6d694b86a679581141668f5b22425549ed"}, "originalPosition": 74}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9540a6d694b86a679581141668f5b22425549ed", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d9540a6d694b86a679581141668f5b22425549ed", "committedDate": "2020-07-10T19:35:35Z", "message": "Add TypeLayoutEntry build for flattened fields\n\nCreate TypeLayoutEntry for flattened fields with adjusted\noffset from the top level class for value types.\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "0518ee63f9b9413a5446956876a9c302787cf5cd", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0518ee63f9b9413a5446956876a9c302787cf5cd", "committedDate": "2020-07-27T18:55:26Z", "message": "Add TypeLayoutEntry build for flattened fields\n\nCreate TypeLayoutEntry for flattened fields with adjusted\noffset from the top level class for value types.\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MDYyNTEy", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#pullrequestreview-457062512", "createdAt": "2020-07-28T22:06:32Z", "commit": {"oid": "0518ee63f9b9413a5446956876a9c302787cf5cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4NDY0OTU5", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#pullrequestreview-458464959", "createdAt": "2020-07-30T14:37:32Z", "commit": {"oid": "0518ee63f9b9413a5446956876a9c302787cf5cd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0518ee63f9b9413a5446956876a9c302787cf5cd", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0518ee63f9b9413a5446956876a9c302787cf5cd", "committedDate": "2020-07-27T18:55:26Z", "message": "Add TypeLayoutEntry build for flattened fields\n\nCreate TypeLayoutEntry for flattened fields with adjusted\noffset from the top level class for value types.\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "6091388627a4473bcaa214a00899a88446ee8082", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6091388627a4473bcaa214a00899a88446ee8082", "committedDate": "2020-08-05T13:49:11Z", "message": "Add TypeLayoutEntry build for flattened fields\n\nCreate TypeLayoutEntry for flattened fields with adjusted\noffset from the top level class for value types.\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNzc2NjY0", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#pullrequestreview-461776664", "createdAt": "2020-08-05T15:27:29Z", "commit": {"oid": "6091388627a4473bcaa214a00899a88446ee8082"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNToyNzozMFrOG8O4Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNToyNzozMFrOG8O4Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgxMTQ5OQ==", "bodyText": "why is this called bTrace? shouldn't it be trace or traceILGen or something a bit more intuitive?", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#discussion_r465811499", "createdAt": "2020-08-05T15:27:30Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/env/J9ClassEnv.cpp", "diffHunk": "@@ -417,24 +418,79 @@ J9::ClassEnv::isAnonymousClass(TR::Compilation *comp, TR_OpaqueClassBlock *clazz\n    return comp->fej9()->isAnonymousClass(clazz);\n    }\n \n-const TR::TypeLayout*\n-J9::ClassEnv::enumerateFields(TR::Region& region, TR_OpaqueClassBlock * opaqueClazz, TR::Compilation *comp)\n-   {  \n-   J9Class *clazz = (J9Class*)opaqueClazz;\n-   TR_VMFieldsInfo fieldsInfo(comp, clazz, 1, stackAlloc);\n-   ListIterator<TR_VMField> iter(fieldsInfo.getFields());\n-   TR::TypeLayoutBuilder tlb(region);\n-   for (TR_VMField *field = iter.getFirst(); field; field = iter.getNext())\n+/*\n+ * \\param prefix\n+ *    prefix could be ended with `.` or NULL.\n+ * \\param prefixLength\n+ *    The length of the prefix string.\n+ * \\param toConcatenateAsPrefix\n+ *    If true, the new name is appended with \".\" to be used as a part of the flattened field chain name.\n+ * \\param mergedLength\n+ *    The merged length of the concatenated field name that is returned to the caller.\n+ */\n+static char * mergeFieldNames(char * prefix, uint32_t prefixLength, J9ROMFieldShape * field,\n+                              bool toConcatenateAsPrefix, TR::Region &region, uint32_t &mergedLength)\n+   {\n+   J9UTF8 * fieldNameUTF = J9ROMFIELDSHAPE_NAME(field);\n+   char * fieldName = reinterpret_cast<char *>(J9UTF8_DATA(fieldNameUTF));\n+   uint32_t nameLength = J9UTF8_LENGTH(fieldNameUTF);\n+\n+   mergedLength = nameLength + prefixLength;\n+   if (toConcatenateAsPrefix)\n+      mergedLength++;\n+   mergedLength++; /* for adding \\0 at the end */\n+\n+   char * newName = new (region) char[mergedLength];\n+\n+   if (prefixLength > 0)\n+      strncpy(newName, prefix, prefixLength);\n+   strncpy(newName + prefixLength, fieldName, nameLength);\n+\n+   if (toConcatenateAsPrefix)\n+      newName[mergedLength-2] = '.';\n+   newName[mergedLength-1] = '\\0';\n+\n+   return newName;\n+   }\n+\n+static void addEntryForField(TR_VMField * field, TR::TypeLayoutBuilder &tlb, TR::Region& region, J9Class * definingClass,\n+                             char * prefix, uint32_t prefixLength, IDATA offsetBase, TR::Compilation * comp)\n+   {\n+   J9JavaVM * vm = comp->fej9()->getJ9JITConfig()->javaVM;\n+   bool bTrace = comp->getOption(TR_TraceILGen);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6091388627a4473bcaa214a00899a88446ee8082"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNzc4MTYx", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#pullrequestreview-461778161", "createdAt": "2020-08-05T15:29:06Z", "commit": {"oid": "6091388627a4473bcaa214a00899a88446ee8082"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNToyOTowNlrOG8O8hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNToyOTowNlrOG8O8hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgxMjYxMw==", "bodyText": "Not a huge fan of the bool here - it is hard to read - an enum would be better or perhaps two functions with an impl using a boolean flag - I just don't like the boolean flags spraying all over the codebase....", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#discussion_r465812613", "createdAt": "2020-08-05T15:29:06Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/env/J9ClassEnv.cpp", "diffHunk": "@@ -417,24 +418,79 @@ J9::ClassEnv::isAnonymousClass(TR::Compilation *comp, TR_OpaqueClassBlock *clazz\n    return comp->fej9()->isAnonymousClass(clazz);\n    }\n \n-const TR::TypeLayout*\n-J9::ClassEnv::enumerateFields(TR::Region& region, TR_OpaqueClassBlock * opaqueClazz, TR::Compilation *comp)\n-   {  \n-   J9Class *clazz = (J9Class*)opaqueClazz;\n-   TR_VMFieldsInfo fieldsInfo(comp, clazz, 1, stackAlloc);\n-   ListIterator<TR_VMField> iter(fieldsInfo.getFields());\n-   TR::TypeLayoutBuilder tlb(region);\n-   for (TR_VMField *field = iter.getFirst(); field; field = iter.getNext())\n+/*\n+ * \\param prefix\n+ *    prefix could be ended with `.` or NULL.\n+ * \\param prefixLength\n+ *    The length of the prefix string.\n+ * \\param toConcatenateAsPrefix\n+ *    If true, the new name is appended with \".\" to be used as a part of the flattened field chain name.\n+ * \\param mergedLength\n+ *    The merged length of the concatenated field name that is returned to the caller.\n+ */\n+static char * mergeFieldNames(char * prefix, uint32_t prefixLength, J9ROMFieldShape * field,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6091388627a4473bcaa214a00899a88446ee8082"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNzc5OTgw", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#pullrequestreview-461779980", "createdAt": "2020-08-05T15:31:07Z", "commit": {"oid": "6091388627a4473bcaa214a00899a88446ee8082"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTozMTowN1rOG8PBzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTozMTowN1rOG8PBzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgxMzk2Nw==", "bodyText": "can we keep the definingClass as an OpaqueClassBlock and only do the cast internally when passing to the VM APIs to keep consistency in how the JIT code uses the types?", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#discussion_r465813967", "createdAt": "2020-08-05T15:31:07Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/env/J9ClassEnv.cpp", "diffHunk": "@@ -417,24 +418,79 @@ J9::ClassEnv::isAnonymousClass(TR::Compilation *comp, TR_OpaqueClassBlock *clazz\n    return comp->fej9()->isAnonymousClass(clazz);\n    }\n \n-const TR::TypeLayout*\n-J9::ClassEnv::enumerateFields(TR::Region& region, TR_OpaqueClassBlock * opaqueClazz, TR::Compilation *comp)\n-   {  \n-   J9Class *clazz = (J9Class*)opaqueClazz;\n-   TR_VMFieldsInfo fieldsInfo(comp, clazz, 1, stackAlloc);\n-   ListIterator<TR_VMField> iter(fieldsInfo.getFields());\n-   TR::TypeLayoutBuilder tlb(region);\n-   for (TR_VMField *field = iter.getFirst(); field; field = iter.getNext())\n+/*\n+ * \\param prefix\n+ *    prefix could be ended with `.` or NULL.\n+ * \\param prefixLength\n+ *    The length of the prefix string.\n+ * \\param toConcatenateAsPrefix\n+ *    If true, the new name is appended with \".\" to be used as a part of the flattened field chain name.\n+ * \\param mergedLength\n+ *    The merged length of the concatenated field name that is returned to the caller.\n+ */\n+static char * mergeFieldNames(char * prefix, uint32_t prefixLength, J9ROMFieldShape * field,\n+                              bool toConcatenateAsPrefix, TR::Region &region, uint32_t &mergedLength)\n+   {\n+   J9UTF8 * fieldNameUTF = J9ROMFIELDSHAPE_NAME(field);\n+   char * fieldName = reinterpret_cast<char *>(J9UTF8_DATA(fieldNameUTF));\n+   uint32_t nameLength = J9UTF8_LENGTH(fieldNameUTF);\n+\n+   mergedLength = nameLength + prefixLength;\n+   if (toConcatenateAsPrefix)\n+      mergedLength++;\n+   mergedLength++; /* for adding \\0 at the end */\n+\n+   char * newName = new (region) char[mergedLength];\n+\n+   if (prefixLength > 0)\n+      strncpy(newName, prefix, prefixLength);\n+   strncpy(newName + prefixLength, fieldName, nameLength);\n+\n+   if (toConcatenateAsPrefix)\n+      newName[mergedLength-2] = '.';\n+   newName[mergedLength-1] = '\\0';\n+\n+   return newName;\n+   }\n+\n+static void addEntryForField(TR_VMField * field, TR::TypeLayoutBuilder &tlb, TR::Region& region, J9Class * definingClass,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6091388627a4473bcaa214a00899a88446ee8082"}, "originalPosition": 61}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6091388627a4473bcaa214a00899a88446ee8082", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6091388627a4473bcaa214a00899a88446ee8082", "committedDate": "2020-08-05T13:49:11Z", "message": "Add TypeLayoutEntry build for flattened fields\n\nCreate TypeLayoutEntry for flattened fields with adjusted\noffset from the top level class for value types.\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "c485fd3977c24cf11c831f2fd0dad4893ac4ab9e", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c485fd3977c24cf11c831f2fd0dad4893ac4ab9e", "committedDate": "2020-08-05T22:14:12Z", "message": "Add TypeLayoutEntry build for flattened fields\n\nCreate TypeLayoutEntry for flattened fields with adjusted\noffset from the top level class for value types.\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c4db51ceb4a661a239caa4e2fe495eb633be002", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/5c4db51ceb4a661a239caa4e2fe495eb633be002", "committedDate": "2020-08-06T14:37:57Z", "message": "Add TypeLayoutEntry build for flattened fields\n\nCreate TypeLayoutEntry for flattened fields with adjusted\noffset from the top level class for value types.\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c485fd3977c24cf11c831f2fd0dad4893ac4ab9e", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c485fd3977c24cf11c831f2fd0dad4893ac4ab9e", "committedDate": "2020-08-05T22:14:12Z", "message": "Add TypeLayoutEntry build for flattened fields\n\nCreate TypeLayoutEntry for flattened fields with adjusted\noffset from the top level class for value types.\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "5c4db51ceb4a661a239caa4e2fe495eb633be002", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/5c4db51ceb4a661a239caa4e2fe495eb633be002", "committedDate": "2020-08-06T14:37:57Z", "message": "Add TypeLayoutEntry build for flattened fields\n\nCreate TypeLayoutEntry for flattened fields with adjusted\noffset from the top level class for value types.\n\nThis change was originally authored by Yi Zhang\nwho is listed as a co-author below.\n\nCo-authored-by: Yi Zhang yizhang@ca.ibm.com\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2OTg1NzM2", "url": "https://github.com/eclipse-openj9/openj9/pull/10115#pullrequestreview-466985736", "createdAt": "2020-08-13T17:31:37Z", "commit": {"oid": "5c4db51ceb4a661a239caa4e2fe495eb633be002"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 520, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}