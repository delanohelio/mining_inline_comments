{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MTYyMjk3", "number": 10404, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjo0MTowNlrOEZdOyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjo0NDozOFrOEZdW3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTI4Nzc5OnYy", "diffSide": "RIGHT", "path": "runtime/oti/j9nonbuilder.h", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjo0MTowNlrOHCRtxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjowMTowOVrOHCbYdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0OTQ0NA==", "bodyText": "This should disable the warning only for the following struct declaration:\n#pragma warning(push)\n#pragma warning(disable : 4200)\n\nand restore the warning after the declaration:\n#pragma warning(pop)", "url": "https://github.com/eclipse-openj9/openj9/pull/10404#discussion_r472149444", "createdAt": "2020-08-18T12:41:06Z", "author": {"login": "keithc-ca"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -3218,9 +3218,12 @@ typedef struct J9ClassLoader {\n #define J9CLASSLOADER_SET_CLASSLOADEROBJECT(vmThread, object, value) J9VMTHREAD_JAVAVM(vmThread)->memoryManagerFunctions->j9gc_objaccess_storeObjectToInternalVMSlot((vmThread), (j9object_t*)&((object)->classLoaderObject), (value))\n #define TMP_J9CLASSLOADER_CLASSLOADEROBJECT(object) ((object)->classLoaderObject)\n \n+#if defined(_MSC_VER)\n+#pragma warning(disable : 4200)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2cfee1ed266de78c729dc275e911bea63ebad9e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjIwNjgwNA==", "bodyText": "If you would prefer to disable that warning globally (#10244 (comment)), then this is not the place to do it.", "url": "https://github.com/eclipse-openj9/openj9/pull/10404#discussion_r472206804", "createdAt": "2020-08-18T13:42:45Z", "author": {"login": "keithc-ca"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -3218,9 +3218,12 @@ typedef struct J9ClassLoader {\n #define J9CLASSLOADER_SET_CLASSLOADEROBJECT(vmThread, object, value) J9VMTHREAD_JAVAVM(vmThread)->memoryManagerFunctions->j9gc_objaccess_storeObjectToInternalVMSlot((vmThread), (j9object_t*)&((object)->classLoaderObject), (value))\n #define TMP_J9CLASSLOADER_CLASSLOADEROBJECT(object) ((object)->classLoaderObject)\n \n+#if defined(_MSC_VER)\n+#pragma warning(disable : 4200)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0OTQ0NA=="}, "originalCommit": {"oid": "c2cfee1ed266de78c729dc275e911bea63ebad9e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI3MjE0Ng==", "bodyText": "I'll make this change for now (note I copied this from OMR, which does not push/pop, so you may want to suggest the same there). We can remove it later if we opt for the global warning disable.", "url": "https://github.com/eclipse-openj9/openj9/pull/10404#discussion_r472272146", "createdAt": "2020-08-18T15:11:07Z", "author": {"login": "gacholio"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -3218,9 +3218,12 @@ typedef struct J9ClassLoader {\n #define J9CLASSLOADER_SET_CLASSLOADEROBJECT(vmThread, object, value) J9VMTHREAD_JAVAVM(vmThread)->memoryManagerFunctions->j9gc_objaccess_storeObjectToInternalVMSlot((vmThread), (j9object_t*)&((object)->classLoaderObject), (value))\n #define TMP_J9CLASSLOADER_CLASSLOADEROBJECT(object) ((object)->classLoaderObject)\n \n+#if defined(_MSC_VER)\n+#pragma warning(disable : 4200)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0OTQ0NA=="}, "originalCommit": {"oid": "c2cfee1ed266de78c729dc275e911bea63ebad9e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwNzgyOA==", "bodyText": "OMR isn't consistent: Some places it uses #pragma warning(default:N), some places it says #pragma warning(pop) and some places neither appears. I created eclipse/omr#5478 to track improving things.", "url": "https://github.com/eclipse-openj9/openj9/pull/10404#discussion_r472307828", "createdAt": "2020-08-18T16:01:09Z", "author": {"login": "keithc-ca"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -3218,9 +3218,12 @@ typedef struct J9ClassLoader {\n #define J9CLASSLOADER_SET_CLASSLOADEROBJECT(vmThread, object, value) J9VMTHREAD_JAVAVM(vmThread)->memoryManagerFunctions->j9gc_objaccess_storeObjectToInternalVMSlot((vmThread), (j9object_t*)&((object)->classLoaderObject), (value))\n #define TMP_J9CLASSLOADER_CLASSLOADEROBJECT(object) ((object)->classLoaderObject)\n \n+#if defined(_MSC_VER)\n+#pragma warning(disable : 4200)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE0OTQ0NA=="}, "originalCommit": {"oid": "c2cfee1ed266de78c729dc275e911bea63ebad9e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTMwODQ3OnYy", "diffSide": "RIGHT", "path": "runtime/shared_common/shrinit.cpp", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMjo0NDozOFrOHCR60w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjozNTo1NFrOHCcwFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE1Mjc4Nw==", "bodyText": "Why the + 1? The characters in J9UTF8 are not expected to be nul-terminated.", "url": "https://github.com/eclipse-openj9/openj9/pull/10404#discussion_r472152787", "createdAt": "2020-08-18T12:44:38Z", "author": {"login": "keithc-ca"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3397,7 +3397,7 @@ j9shr_init(J9JavaVM *vm, UDATA loadFlags, UDATA* nonfatal)\n \n \tcmBytes = SH_CacheMap::getRequiredConstrBytes(false);\n \tnameBytes = (strlen(modifiedCacheNamePtr)+1) * sizeof(char);\n-\tmodContextBytes = modContext ? ((strlen(modContext) * sizeof(char)) + sizeof(J9UTF8)) : 0;\n+\tmodContextBytes = modContext ? (((strlen(modContext) + 1) * sizeof(char)) + sizeof(J9UTF8)) : 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2cfee1ed266de78c729dc275e911bea63ebad9e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI3MTU2MQ==", "bodyText": "For whatever reason, the code below is using strcpy to copy the name, so it is terminating it. This was hidden before by the fact that sizeof(J9UTF8) included two extra bytes.", "url": "https://github.com/eclipse-openj9/openj9/pull/10404#discussion_r472271561", "createdAt": "2020-08-18T15:10:16Z", "author": {"login": "gacholio"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3397,7 +3397,7 @@ j9shr_init(J9JavaVM *vm, UDATA loadFlags, UDATA* nonfatal)\n \n \tcmBytes = SH_CacheMap::getRequiredConstrBytes(false);\n \tnameBytes = (strlen(modifiedCacheNamePtr)+1) * sizeof(char);\n-\tmodContextBytes = modContext ? ((strlen(modContext) * sizeof(char)) + sizeof(J9UTF8)) : 0;\n+\tmodContextBytes = modContext ? (((strlen(modContext) + 1) * sizeof(char)) + sizeof(J9UTF8)) : 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE1Mjc4Nw=="}, "originalCommit": {"oid": "c2cfee1ed266de78c729dc275e911bea63ebad9e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjI5NjgwOQ==", "bodyText": "Ideally we would fix all the places that (needlessly) allocate room for terminators, but this isn't the time for that.", "url": "https://github.com/eclipse-openj9/openj9/pull/10404#discussion_r472296809", "createdAt": "2020-08-18T15:45:16Z", "author": {"login": "keithc-ca"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3397,7 +3397,7 @@ j9shr_init(J9JavaVM *vm, UDATA loadFlags, UDATA* nonfatal)\n \n \tcmBytes = SH_CacheMap::getRequiredConstrBytes(false);\n \tnameBytes = (strlen(modifiedCacheNamePtr)+1) * sizeof(char);\n-\tmodContextBytes = modContext ? ((strlen(modContext) * sizeof(char)) + sizeof(J9UTF8)) : 0;\n+\tmodContextBytes = modContext ? (((strlen(modContext) + 1) * sizeof(char)) + sizeof(J9UTF8)) : 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE1Mjc4Nw=="}, "originalCommit": {"oid": "c2cfee1ed266de78c729dc275e911bea63ebad9e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwMDM3MQ==", "bodyText": "Those terminators are a cheap way to make the strings easy to work with in the debugger.  The null byte is low overhead for some easier debug-ability and better C string interop.", "url": "https://github.com/eclipse-openj9/openj9/pull/10404#discussion_r472300371", "createdAt": "2020-08-18T15:50:33Z", "author": {"login": "DanHeidinga"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3397,7 +3397,7 @@ j9shr_init(J9JavaVM *vm, UDATA loadFlags, UDATA* nonfatal)\n \n \tcmBytes = SH_CacheMap::getRequiredConstrBytes(false);\n \tnameBytes = (strlen(modifiedCacheNamePtr)+1) * sizeof(char);\n-\tmodContextBytes = modContext ? ((strlen(modContext) * sizeof(char)) + sizeof(J9UTF8)) : 0;\n+\tmodContextBytes = modContext ? (((strlen(modContext) + 1) * sizeof(char)) + sizeof(J9UTF8)) : 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE1Mjc4Nw=="}, "originalCommit": {"oid": "c2cfee1ed266de78c729dc275e911bea63ebad9e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMzMDI2Mw==", "bodyText": "That just inverts the issue into one where terminators are added where they're currently missing.", "url": "https://github.com/eclipse-openj9/openj9/pull/10404#discussion_r472330263", "createdAt": "2020-08-18T16:35:54Z", "author": {"login": "keithc-ca"}, "path": "runtime/shared_common/shrinit.cpp", "diffHunk": "@@ -3397,7 +3397,7 @@ j9shr_init(J9JavaVM *vm, UDATA loadFlags, UDATA* nonfatal)\n \n \tcmBytes = SH_CacheMap::getRequiredConstrBytes(false);\n \tnameBytes = (strlen(modifiedCacheNamePtr)+1) * sizeof(char);\n-\tmodContextBytes = modContext ? ((strlen(modContext) * sizeof(char)) + sizeof(J9UTF8)) : 0;\n+\tmodContextBytes = modContext ? (((strlen(modContext) + 1) * sizeof(char)) + sizeof(J9UTF8)) : 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE1Mjc4Nw=="}, "originalCommit": {"oid": "c2cfee1ed266de78c729dc275e911bea63ebad9e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4705, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}