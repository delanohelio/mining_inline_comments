{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxODIyNjM4", "number": 10672, "title": "Use Start PC from isCompiled API", "bodyText": "Because the extra field of a J9Method is a global that can be modified by another thread (and accesses to it aren't locked), it is possible to read the value once, make a decision based on it, read it again and then be in an invalid state. This PR\n\nmakes J9Method.extra volatile\nadds the getPCIfCompiled API in TR::CompilationInfo to return the Start PC if the method is compiled, and NULL otherwise; this allows callers to use the returned start PC rather than read the extra field again.\nmodifies callers of isCompiled to use getPCIfCompiled rather than read the extra field of the J9Method again if the method is compiled.\n\nFixes #10623\nCloses #10673", "createdAt": "2020-09-23T14:27:40Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10672", "merged": true, "mergeCommit": {"oid": "05119f696f85cc2137d451e4b6001b94c929b29a"}, "closed": true, "closedAt": "2020-09-28T16:06:45Z", "author": {"login": "dsouzai"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLt083AFqTQ5NDc0OTUzNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMbGlGgFqTQ5Njc1MzQyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NzQ5NTM1", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#pullrequestreview-494749535", "createdAt": "2020-09-23T14:53:58Z", "commit": {"oid": "e5336f6c1b04641d0dba7861488a221fbe70b66b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODY3NzE1", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#pullrequestreview-494867715", "createdAt": "2020-09-23T17:02:17Z", "commit": {"oid": "e5336f6c1b04641d0dba7861488a221fbe70b66b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzowMjoxN1rOHW4G0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzowMjoxN1rOHW4G0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc0OTk2OA==", "bodyText": "maybe this would be better named as getEntryIfCompiled() or something like that?", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#discussion_r493749968", "createdAt": "2020-09-23T17:02:17Z", "author": {"login": "mstoodle"}, "path": "runtime/compiler/control/CompilationRuntime.hpp", "diffHunk": "@@ -457,17 +457,31 @@ class CompilationInfo\n    static JITServer::ServerStream *getStream();\n #endif /* defined(J9VM_OPT_JITSERVER) */\n    static bool isInterpreted(J9Method *method) { return !isCompiled(method); }\n-   static bool isCompiled(J9Method *method)\n+\n+   /**\n+    * @brief Determines if a J9Method is compiled\n+    *\n+    * @param method pointer to the J9Method\n+    *\n+    * @return The start PC if compiled, NULL otherwise\n+    */\n+   static void* isCompiled(J9Method *method)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5336f6c1b04641d0dba7861488a221fbe70b66b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0ODgwODQ2", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#pullrequestreview-494880846", "createdAt": "2020-09-23T17:19:05Z", "commit": {"oid": "e5336f6c1b04641d0dba7861488a221fbe70b66b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoxOTowNlrOHW4urg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoyMDoxOFrOHW4xlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2MDE3NA==", "bodyText": "I'm not convinced the compiler has to respect this and only read the field once.  Maybe I should say that more strongly - there's no guarantee the compiler will read method->extra only once here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#discussion_r493760174", "createdAt": "2020-09-23T17:19:06Z", "author": {"login": "DanHeidinga"}, "path": "runtime/compiler/control/CompilationRuntime.hpp", "diffHunk": "@@ -457,17 +457,31 @@ class CompilationInfo\n    static JITServer::ServerStream *getStream();\n #endif /* defined(J9VM_OPT_JITSERVER) */\n    static bool isInterpreted(J9Method *method) { return !isCompiled(method); }\n-   static bool isCompiled(J9Method *method)\n+\n+   /**\n+    * @brief Determines if a J9Method is compiled\n+    *\n+    * @param method pointer to the J9Method\n+    *\n+    * @return The start PC if compiled, NULL otherwise\n+    */\n+   static void* isCompiled(J9Method *method)\n       {\n #if defined(J9VM_OPT_JITSERVER)\n       if (auto stream = getStream())\n          {\n          stream->write(JITServer::MessageType::CompInfo_isCompiled, method);\n-         return std::get<0>(stream->read<bool>());\n+         return std::get<0>(stream->read<void *>());\n          }\n #endif /* defined(J9VM_OPT_JITSERVER) */\n-      return (((uintptr_t)method->extra) & J9_STARTPC_NOT_TRANSLATED) == 0;\n+\n+      /* Read extra field only once */\n+      void *extra = method->extra;\n+\n+      /* Return extra field if compiled, NULL otherwise */\n+      return ((uintptr_t)extra & J9_STARTPC_NOT_TRANSLATED) == 0 ? extra : NULL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5336f6c1b04641d0dba7861488a221fbe70b66b"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2MDcwNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  void *extra;\n          \n          \n            \n                  void *extra = NULL;\n          \n      \n    \n    \n  \n\nEnsure this is definitely assigned", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#discussion_r493760705", "createdAt": "2020-09-23T17:19:59Z", "author": {"login": "DanHeidinga"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -7512,10 +7511,14 @@ TR::CompilationInfoPerThreadBase::postCompilationTasks(J9VMThread * vmThread,\n    else // compilation will not be retried, either because it succeeded or because we don't want to\n       {\n       TR_PersistentJittedBodyInfo *bodyInfo;\n+      void *extra;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5336f6c1b04641d0dba7861488a221fbe70b66b"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2MDkxOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               void        *extra;\n          \n          \n            \n               void        *extra = NULL;", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#discussion_r493760918", "createdAt": "2020-09-23T17:20:18Z", "author": {"login": "DanHeidinga"}, "path": "runtime/compiler/control/HookedByTheJit.cpp", "diffHunk": "@@ -846,6 +847,7 @@ void DLTLogic(J9VMThread* vmThread, TR::CompilationInfo *compInfo)\n    int32_t    idx = dltBlock->cursor + 1;\n    J9ROMMethod *romMethod = NULL;\n    bool         bcRepeats;\n+   void        *extra;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5336f6c1b04641d0dba7861488a221fbe70b66b"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94a0b6ed7bacf2b3d2d51c4f55a558ca4f15d1b9", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/94a0b6ed7bacf2b3d2d51c4f55a558ca4f15d1b9", "committedDate": "2020-09-25T15:40:03Z", "message": "Make J9Method.extra volatile\n\nThe extra field of the J9Method is usually accessed without any locks\n(more specifically, reads, as writes are done atomically). However, this\ncan result in the C/C++ compiler privatiazing reads of the extra field,\nwhich can result in inconsistent state if the privatized value isn't\nalways used.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5336f6c1b04641d0dba7861488a221fbe70b66b", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e5336f6c1b04641d0dba7861488a221fbe70b66b", "committedDate": "2020-09-23T14:13:46Z", "message": "Use StartPC from isCompiled API\n\nModify callers of isCompiled to use the returned startPC rather than\nread the extra field of the J9Method again if the method is compiled.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}, "afterCommit": {"oid": "fcbaa0a8bedfe9020f856f11d993b45ae49f0130", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/fcbaa0a8bedfe9020f856f11d993b45ae49f0130", "committedDate": "2020-09-25T15:42:41Z", "message": "Use StartPC from getPCIfCompiled API\n\nModify callers of isCompiled to use getPCIfCompiled rather than\nread the extra field of the J9Method again if the method is compiled.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NjA3NTg3", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#pullrequestreview-496607587", "createdAt": "2020-09-25T17:20:05Z", "commit": {"oid": "fcbaa0a8bedfe9020f856f11d993b45ae49f0130"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzoyMDowNVrOHYMM2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzoyMDowNVrOHYMM2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEyNzc2OA==", "bodyText": "Since a new message was introduced we need to increment the minor version info here:\nhttps://github.com/eclipse/openj9/blob/master/runtime/compiler/net/CommunicationStream.hpp#L105", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#discussion_r495127768", "createdAt": "2020-09-25T17:20:05Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/net/MessageTypes.hpp", "diffHunk": "@@ -207,6 +207,7 @@ enum MessageType : uint16_t\n \n    // For static TR::CompilationInfo methods\n    CompInfo_isCompiled, // 171\n+   CompInfo_getPCIfCompiled,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcbaa0a8bedfe9020f856f11d993b45ae49f0130"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NjI0NTQ0", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#pullrequestreview-496624544", "createdAt": "2020-09-25T17:45:24Z", "commit": {"oid": "4801cdbfe9ac00f007be76d466740e66aec4c843"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo0NToyNFrOHYM-eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNzo0NToyNFrOHYM-eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTE0MDQ3Mg==", "bodyText": "shouldn't this be MessageType::CompInfo_getPCIfCompiled ?", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#discussion_r495140472", "createdAt": "2020-09-25T17:45:24Z", "author": {"login": "mstoodle"}, "path": "runtime/compiler/control/CompilationRuntime.hpp", "diffHunk": "@@ -466,8 +474,34 @@ class CompilationInfo\n          return std::get<0>(stream->read<bool>());\n          }\n #endif /* defined(J9VM_OPT_JITSERVER) */\n-      return (((uintptr_t)method->extra) & J9_STARTPC_NOT_TRANSLATED) == 0;\n+\n+      return (getPCIfCompiled(method) != NULL);\n+      }\n+\n+   /**\n+    * @brief Returns the PC of a method that is compiled\n+    *\n+    * @param method pointer to the J9Method\n+    *\n+    * @return The start PC if compiled, NULL otherwise\n+    */\n+   static void* getPCIfCompiled(J9Method *method)\n+      {\n+#if defined(J9VM_OPT_JITSERVER)\n+      if (auto stream = getStream())\n+         {\n+         stream->write(JITServer::MessageType::CompInfo_isCompiled, method);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4801cdbfe9ac00f007be76d466740e66aec4c843"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NjI1MzI4", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#pullrequestreview-496625328", "createdAt": "2020-09-25T17:46:36Z", "commit": {"oid": "4801cdbfe9ac00f007be76d466740e66aec4c843"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62e11ffbfa97142b02ddec2c0a27b59585cfb9b9", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/62e11ffbfa97142b02ddec2c0a27b59585cfb9b9", "committedDate": "2020-09-25T18:06:32Z", "message": "Add getPCIfCompiled API\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca5afdc0d0dc3d950503f9b367239df50071bfe2", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ca5afdc0d0dc3d950503f9b367239df50071bfe2", "committedDate": "2020-09-25T18:06:34Z", "message": "Use StartPC from getPCIfCompiled API\n\nModify callers of isCompiled to use getPCIfCompiled rather than\nread the extra field of the J9Method again if the method is compiled.\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3497522360c8cdd38a69a766f4ee52617cbcc646", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3497522360c8cdd38a69a766f4ee52617cbcc646", "committedDate": "2020-09-25T18:06:34Z", "message": "Increment JitServer Minor Version\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4801cdbfe9ac00f007be76d466740e66aec4c843", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4801cdbfe9ac00f007be76d466740e66aec4c843", "committedDate": "2020-09-25T17:32:31Z", "message": "Increment JitServer Minor Version\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}, "afterCommit": {"oid": "3497522360c8cdd38a69a766f4ee52617cbcc646", "author": {"user": {"login": "dsouzai", "name": "Irwin D'Souza"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3497522360c8cdd38a69a766f4ee52617cbcc646", "committedDate": "2020-09-25T18:06:34Z", "message": "Increment JitServer Minor Version\n\nSigned-off-by: Irwin D'Souza <dsouzai.gh@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NzM1Nzgx", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#pullrequestreview-496735781", "createdAt": "2020-09-25T19:23:47Z", "commit": {"oid": "3497522360c8cdd38a69a766f4ee52617cbcc646"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NzM4NTM4", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#pullrequestreview-496738538", "createdAt": "2020-09-25T19:26:13Z", "commit": {"oid": "3497522360c8cdd38a69a766f4ee52617cbcc646"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NzUzNDI2", "url": "https://github.com/eclipse-openj9/openj9/pull/10672#pullrequestreview-496753426", "createdAt": "2020-09-25T19:38:57Z", "commit": {"oid": "3497522360c8cdd38a69a766f4ee52617cbcc646"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 272, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}