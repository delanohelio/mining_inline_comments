{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNzQxMjg0", "number": 10458, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDoyMDowMlrOEdX8Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTozNjoyMVrOEfg6Uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjM2NDM0OnYy", "diffSide": "RIGHT", "path": "buildenv/jenkins/common/variables-functions.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDoyMDowMlrOHIf3DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNTowOToyOFrOHJKQig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3MjY1Mw==", "bodyText": "Instead of seting ARTIFACTORY_CONFIG['uploadDir'] at L773 then updating at L 780, you could simplify by defining a local variable for uploadDir, resolve all placeholders then set ARTIFACTORY_CONFIG['uploadDir']", "url": "https://github.com/eclipse-openj9/openj9/pull/10458#discussion_r478672653", "createdAt": "2020-08-27T20:20:02Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -730,10 +767,18 @@ def set_artifactory_config(id=\"Nightly\") {\n \n     if (VARIABLES.artifactory.defaultGeo) {\n         // Allow default geo to be overridden with a param. Used by the Clenaup script to target a specific server.\n-        ARTIFACTORY_CONFIG['defaultGeo'] = (params.ARTIFACTORY_GEO) ? params.ARTIFACTORY_GEO : VARIABLES.artifactory.defaultGeo\n+        ARTIFACTORY_CONFIG['defaultGeo'] = params.ARTIFACTORY_GEO ?: VARIABLES.artifactory.defaultGeo\n         ARTIFACTORY_CONFIG['geos'] = VARIABLES.artifactory.server.keySet()\n-        ARTIFACTORY_CONFIG['repo'] = VARIABLES.artifactory.repo\n-        ARTIFACTORY_CONFIG['uploadDir'] = \"${ARTIFACTORY_CONFIG['repo']}/${JOB_NAME}/${BUILD_ID}/\"\n+        ARTIFACTORY_CONFIG['repo'] = get_value(VARIABLES.artifactory.repo, id) ?: get_value(VARIABLES.artifactory.repo, 'default')\n+        ARTIFACTORY_CONFIG['uploadDir'] = get_value(VARIABLES.artifactory.uploadDir, id) ?: \"${ARTIFACTORY_CONFIG['repo']}/${JOB_NAME}/${BUILD_ID}/\"\n+\n+        // If uploadDir has unresolved variables at this point, use Groovy Template Binding engine to resolve them\n+        if (ARTIFACTORY_CONFIG['uploadDir'].contains('$')) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60a14bf95d6eb2cc18d9363a28a6d80593493172"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM2NzMwNg==", "bodyText": "Would that be more simple? It just adds another variable we only need temporarily. I did the same thing in #10457 with the SDK_FILENAME.", "url": "https://github.com/eclipse-openj9/openj9/pull/10458#discussion_r479367306", "createdAt": "2020-08-28T15:09:28Z", "author": {"login": "AdamBrousseau"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -730,10 +767,18 @@ def set_artifactory_config(id=\"Nightly\") {\n \n     if (VARIABLES.artifactory.defaultGeo) {\n         // Allow default geo to be overridden with a param. Used by the Clenaup script to target a specific server.\n-        ARTIFACTORY_CONFIG['defaultGeo'] = (params.ARTIFACTORY_GEO) ? params.ARTIFACTORY_GEO : VARIABLES.artifactory.defaultGeo\n+        ARTIFACTORY_CONFIG['defaultGeo'] = params.ARTIFACTORY_GEO ?: VARIABLES.artifactory.defaultGeo\n         ARTIFACTORY_CONFIG['geos'] = VARIABLES.artifactory.server.keySet()\n-        ARTIFACTORY_CONFIG['repo'] = VARIABLES.artifactory.repo\n-        ARTIFACTORY_CONFIG['uploadDir'] = \"${ARTIFACTORY_CONFIG['repo']}/${JOB_NAME}/${BUILD_ID}/\"\n+        ARTIFACTORY_CONFIG['repo'] = get_value(VARIABLES.artifactory.repo, id) ?: get_value(VARIABLES.artifactory.repo, 'default')\n+        ARTIFACTORY_CONFIG['uploadDir'] = get_value(VARIABLES.artifactory.uploadDir, id) ?: \"${ARTIFACTORY_CONFIG['repo']}/${JOB_NAME}/${BUILD_ID}/\"\n+\n+        // If uploadDir has unresolved variables at this point, use Groovy Template Binding engine to resolve them\n+        if (ARTIFACTORY_CONFIG['uploadDir'].contains('$')) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3MjY1Mw=="}, "originalCommit": {"oid": "60a14bf95d6eb2cc18d9363a28a6d80593493172"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjQwNTYwOnYy", "diffSide": "RIGHT", "path": "buildenv/jenkins/common/variables-functions.groovy", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMDozMjo1OFrOHIgQaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0OToxOVrOHK3KnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3OTE0NQ==", "bodyText": "Shouldn't also define a default value for uploadDir (get_value(VARIABLES.artifactory.uploadDir, default))) in the variable files?\ne.g\nartifactory:\n  uploadDir\n    default: ${ARTIFACTORY_CONFIG['repo']}/${JOB_NAME}/${BUILD_ID}/\n    nightly: ...\n    release: ...", "url": "https://github.com/eclipse-openj9/openj9/pull/10458#discussion_r478679145", "createdAt": "2020-08-27T20:32:58Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -730,10 +767,18 @@ def set_artifactory_config(id=\"Nightly\") {\n \n     if (VARIABLES.artifactory.defaultGeo) {\n         // Allow default geo to be overridden with a param. Used by the Clenaup script to target a specific server.\n-        ARTIFACTORY_CONFIG['defaultGeo'] = (params.ARTIFACTORY_GEO) ? params.ARTIFACTORY_GEO : VARIABLES.artifactory.defaultGeo\n+        ARTIFACTORY_CONFIG['defaultGeo'] = params.ARTIFACTORY_GEO ?: VARIABLES.artifactory.defaultGeo\n         ARTIFACTORY_CONFIG['geos'] = VARIABLES.artifactory.server.keySet()\n-        ARTIFACTORY_CONFIG['repo'] = VARIABLES.artifactory.repo\n-        ARTIFACTORY_CONFIG['uploadDir'] = \"${ARTIFACTORY_CONFIG['repo']}/${JOB_NAME}/${BUILD_ID}/\"\n+        ARTIFACTORY_CONFIG['repo'] = get_value(VARIABLES.artifactory.repo, id) ?: get_value(VARIABLES.artifactory.repo, 'default')\n+        ARTIFACTORY_CONFIG['uploadDir'] = get_value(VARIABLES.artifactory.uploadDir, id) ?: \"${ARTIFACTORY_CONFIG['repo']}/${JOB_NAME}/${BUILD_ID}/\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60a14bf95d6eb2cc18d9363a28a6d80593493172"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM2NTg3Mw==", "bodyText": "We could. The default is whatever is after the ?:. Since our use cases don't require a different default I left it here.", "url": "https://github.com/eclipse-openj9/openj9/pull/10458#discussion_r479365873", "createdAt": "2020-08-28T15:06:56Z", "author": {"login": "AdamBrousseau"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -730,10 +767,18 @@ def set_artifactory_config(id=\"Nightly\") {\n \n     if (VARIABLES.artifactory.defaultGeo) {\n         // Allow default geo to be overridden with a param. Used by the Clenaup script to target a specific server.\n-        ARTIFACTORY_CONFIG['defaultGeo'] = (params.ARTIFACTORY_GEO) ? params.ARTIFACTORY_GEO : VARIABLES.artifactory.defaultGeo\n+        ARTIFACTORY_CONFIG['defaultGeo'] = params.ARTIFACTORY_GEO ?: VARIABLES.artifactory.defaultGeo\n         ARTIFACTORY_CONFIG['geos'] = VARIABLES.artifactory.server.keySet()\n-        ARTIFACTORY_CONFIG['repo'] = VARIABLES.artifactory.repo\n-        ARTIFACTORY_CONFIG['uploadDir'] = \"${ARTIFACTORY_CONFIG['repo']}/${JOB_NAME}/${BUILD_ID}/\"\n+        ARTIFACTORY_CONFIG['repo'] = get_value(VARIABLES.artifactory.repo, id) ?: get_value(VARIABLES.artifactory.repo, 'default')\n+        ARTIFACTORY_CONFIG['uploadDir'] = get_value(VARIABLES.artifactory.uploadDir, id) ?: \"${ARTIFACTORY_CONFIG['repo']}/${JOB_NAME}/${BUILD_ID}/\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3OTE0NQ=="}, "originalCommit": {"oid": "60a14bf95d6eb2cc18d9363a28a6d80593493172"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE1MTY0NA==", "bodyText": "Artifactory settings are defined in the variables file. To be consistent, the uploadDir should also be defined in the varaibles file.", "url": "https://github.com/eclipse-openj9/openj9/pull/10458#discussion_r481151644", "createdAt": "2020-09-01T13:49:19Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -730,10 +767,18 @@ def set_artifactory_config(id=\"Nightly\") {\n \n     if (VARIABLES.artifactory.defaultGeo) {\n         // Allow default geo to be overridden with a param. Used by the Clenaup script to target a specific server.\n-        ARTIFACTORY_CONFIG['defaultGeo'] = (params.ARTIFACTORY_GEO) ? params.ARTIFACTORY_GEO : VARIABLES.artifactory.defaultGeo\n+        ARTIFACTORY_CONFIG['defaultGeo'] = params.ARTIFACTORY_GEO ?: VARIABLES.artifactory.defaultGeo\n         ARTIFACTORY_CONFIG['geos'] = VARIABLES.artifactory.server.keySet()\n-        ARTIFACTORY_CONFIG['repo'] = VARIABLES.artifactory.repo\n-        ARTIFACTORY_CONFIG['uploadDir'] = \"${ARTIFACTORY_CONFIG['repo']}/${JOB_NAME}/${BUILD_ID}/\"\n+        ARTIFACTORY_CONFIG['repo'] = get_value(VARIABLES.artifactory.repo, id) ?: get_value(VARIABLES.artifactory.repo, 'default')\n+        ARTIFACTORY_CONFIG['uploadDir'] = get_value(VARIABLES.artifactory.uploadDir, id) ?: \"${ARTIFACTORY_CONFIG['repo']}/${JOB_NAME}/${BUILD_ID}/\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY3OTE0NQ=="}, "originalCommit": {"oid": "60a14bf95d6eb2cc18d9363a28a6d80593493172"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwODQ4MjI3OnYy", "diffSide": "RIGHT", "path": "buildenv/jenkins/common/variables-functions.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMzo0NjozOVrOHK3Ddw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNTo0Mjo0MFrOHK8m8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0OTgxNQ==", "bodyText": "FULL_SDK_VERSION  is global variable and already set in set_sdk_versions(). This is not required.", "url": "https://github.com/eclipse-openj9/openj9/pull/10458#discussion_r481149815", "createdAt": "2020-09-01T13:46:39Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -618,7 +618,26 @@ def set_build_variables() {\n def set_sdk_variables() {\n     DATESTAMP = get_date()\n     SDK_FILE_EXT = SPEC.contains('zos') ? '.pax' : '.tar.gz'\n-    SDK_FILENAME =  \"OpenJ9-JDK${SDK_VERSION}-${SPEC}-${DATESTAMP}${SDK_FILE_EXT}\"\n+    // Get full version from tag (eg. 11.0.8+10) and replace + with _\n+    FULL_SDK_VERSION = sh (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60a14bf95d6eb2cc18d9363a28a6d80593493172"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTI0MDgxOQ==", "bodyText": "This was a result of a bad merge resolution. Will update.", "url": "https://github.com/eclipse-openj9/openj9/pull/10458#discussion_r481240819", "createdAt": "2020-09-01T15:42:40Z", "author": {"login": "AdamBrousseau"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -618,7 +618,26 @@ def set_build_variables() {\n def set_sdk_variables() {\n     DATESTAMP = get_date()\n     SDK_FILE_EXT = SPEC.contains('zos') ? '.pax' : '.tar.gz'\n-    SDK_FILENAME =  \"OpenJ9-JDK${SDK_VERSION}-${SPEC}-${DATESTAMP}${SDK_FILE_EXT}\"\n+    // Get full version from tag (eg. 11.0.8+10) and replace + with _\n+    FULL_SDK_VERSION = sh (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTE0OTgxNQ=="}, "originalCommit": {"oid": "60a14bf95d6eb2cc18d9363a28a6d80593493172"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwOTQ4NTYyOnYy", "diffSide": "RIGHT", "path": "buildenv/jenkins/common/variables-functions.groovy", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxNzoyMzo0MFrOHLA2Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMToyMDo0N1rOHaCjbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxMDIxNQ==", "bodyText": "All the other \"support\" artifacts have a timestamp, likely a good idea to add that to the TEST_FILENAME as well.", "url": "https://github.com/eclipse-openj9/openj9/pull/10458#discussion_r481310215", "createdAt": "2020-09-01T17:23:40Z", "author": {"login": "jdekonin"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -616,9 +616,21 @@ def set_build_variables() {\n }\n \n def set_sdk_variables() {\n+    set_sdk_versions()\n     DATESTAMP = get_date()\n     SDK_FILE_EXT = SPEC.contains('zos') ? '.pax' : '.tar.gz'\n-    SDK_FILENAME =  \"OpenJ9-JDK${SDK_VERSION}-${SPEC}-${DATESTAMP}${SDK_FILE_EXT}\"\n+    SDK_FILENAME = get_value(VARIABLES.misc.sdk_filename_template, BUILD_IDENTIFIER) ?: get_value(VARIABLES.misc.sdk_filename_template, 'default')\n+    echo \"SDK_FILENAME (before processing):'${SDK_FILENAME}'\"\n+    // If filename has unresolved variables at this point, use Groovy Template Binding engine to resolve them\n+    if (SDK_FILENAME.contains('$')) {\n+        set_sdk_impl()\n+        // Add all variables that could be used in a template\n+        def binding = [\"SDK_IMPL\":SDK_IMPL, \"SPEC\":SPEC, \"SDK_VERSION\":SDK_VERSION, \"FULL_SDK_VERSION\":FULL_SDK_VERSION, \"DATESTAMP\":DATESTAMP, \"SDK_FILE_EXT\":SDK_FILE_EXT]\n+        def engine = new groovy.text.SimpleTemplateEngine()\n+        SDK_FILENAME = engine.createTemplate(SDK_FILENAME).make(binding)\n+    }\n+    echo \"SDK_FILENAME:'${SDK_FILENAME}'\"\n+\n     TEST_FILENAME = \"test-images.tar.gz\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a092c42c72962d80f6e07239f013465a2b32cab"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzIyNTAxMQ==", "bodyText": "I think this is outside of the scope of this PR due to it being a cross repo dependent change\nhttps://github.com/AdoptOpenJDK/openjdk-tests/blob/2e44aa3a6d76d549c9aa5c7a249fafb1c714af73/get.sh#L187", "url": "https://github.com/eclipse-openj9/openj9/pull/10458#discussion_r493225011", "createdAt": "2020-09-23T06:23:41Z", "author": {"login": "AdamBrousseau"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -616,9 +616,21 @@ def set_build_variables() {\n }\n \n def set_sdk_variables() {\n+    set_sdk_versions()\n     DATESTAMP = get_date()\n     SDK_FILE_EXT = SPEC.contains('zos') ? '.pax' : '.tar.gz'\n-    SDK_FILENAME =  \"OpenJ9-JDK${SDK_VERSION}-${SPEC}-${DATESTAMP}${SDK_FILE_EXT}\"\n+    SDK_FILENAME = get_value(VARIABLES.misc.sdk_filename_template, BUILD_IDENTIFIER) ?: get_value(VARIABLES.misc.sdk_filename_template, 'default')\n+    echo \"SDK_FILENAME (before processing):'${SDK_FILENAME}'\"\n+    // If filename has unresolved variables at this point, use Groovy Template Binding engine to resolve them\n+    if (SDK_FILENAME.contains('$')) {\n+        set_sdk_impl()\n+        // Add all variables that could be used in a template\n+        def binding = [\"SDK_IMPL\":SDK_IMPL, \"SPEC\":SPEC, \"SDK_VERSION\":SDK_VERSION, \"FULL_SDK_VERSION\":FULL_SDK_VERSION, \"DATESTAMP\":DATESTAMP, \"SDK_FILE_EXT\":SDK_FILE_EXT]\n+        def engine = new groovy.text.SimpleTemplateEngine()\n+        SDK_FILENAME = engine.createTemplate(SDK_FILENAME).make(binding)\n+    }\n+    echo \"SDK_FILENAME:'${SDK_FILENAME}'\"\n+\n     TEST_FILENAME = \"test-images.tar.gz\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxMDIxNQ=="}, "originalCommit": {"oid": "8a092c42c72962d80f6e07239f013465a2b32cab"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA2Njg2MA==", "bodyText": "While its a different repo, a change will need to go into openjdk-tests at the same time to keep PR and builds functional.", "url": "https://github.com/eclipse-openj9/openj9/pull/10458#discussion_r497066860", "createdAt": "2020-09-29T21:20:47Z", "author": {"login": "jdekonin"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -616,9 +616,21 @@ def set_build_variables() {\n }\n \n def set_sdk_variables() {\n+    set_sdk_versions()\n     DATESTAMP = get_date()\n     SDK_FILE_EXT = SPEC.contains('zos') ? '.pax' : '.tar.gz'\n-    SDK_FILENAME =  \"OpenJ9-JDK${SDK_VERSION}-${SPEC}-${DATESTAMP}${SDK_FILE_EXT}\"\n+    SDK_FILENAME = get_value(VARIABLES.misc.sdk_filename_template, BUILD_IDENTIFIER) ?: get_value(VARIABLES.misc.sdk_filename_template, 'default')\n+    echo \"SDK_FILENAME (before processing):'${SDK_FILENAME}'\"\n+    // If filename has unresolved variables at this point, use Groovy Template Binding engine to resolve them\n+    if (SDK_FILENAME.contains('$')) {\n+        set_sdk_impl()\n+        // Add all variables that could be used in a template\n+        def binding = [\"SDK_IMPL\":SDK_IMPL, \"SPEC\":SPEC, \"SDK_VERSION\":SDK_VERSION, \"FULL_SDK_VERSION\":FULL_SDK_VERSION, \"DATESTAMP\":DATESTAMP, \"SDK_FILE_EXT\":SDK_FILE_EXT]\n+        def engine = new groovy.text.SimpleTemplateEngine()\n+        SDK_FILENAME = engine.createTemplate(SDK_FILENAME).make(binding)\n+    }\n+    echo \"SDK_FILENAME:'${SDK_FILENAME}'\"\n+\n     TEST_FILENAME = \"test-images.tar.gz\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTMxMDIxNQ=="}, "originalCommit": {"oid": "8a092c42c72962d80f6e07239f013465a2b32cab"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDc3NDE1OnYy", "diffSide": "RIGHT", "path": "buildenv/jenkins/common/build.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNToyOTozOVrOHL07ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNToyOTozOVrOHL07ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2MzU1Nw==", "bodyText": "These calls are not required here. All variables set by these methods are global thus, they are already initialized because variableFile.set_sdk_variables() is called by build_all() at L572 before the archive_sdk().\nAlso set_sdk_versions() is redundant here, it is called by set_sdk_variables().", "url": "https://github.com/eclipse-openj9/openj9/pull/10458#discussion_r482163557", "createdAt": "2020-09-02T15:29:39Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/build.groovy", "diffHunk": "@@ -283,6 +283,9 @@ def build() {\n \n def archive_sdk() {\n     stage('Archive') {\n+        variableFile.set_sdk_versions()\n+        variableFile.set_sdk_variables()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce963e472ae8d86b8a6356a8b6c382fbfa59ed3a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDgwNTMxOnYy", "diffSide": "RIGHT", "path": "buildenv/jenkins/common/build.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTozNjoyMVrOHL1Obw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTozNjoyMVrOHL1Obw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2ODQzMQ==", "bodyText": "Why archive_sdk() here (duplicate, see L575)?", "url": "https://github.com/eclipse-openj9/openj9/pull/10458#discussion_r482168431", "createdAt": "2020-09-02T15:36:21Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/build.groovy", "diffHunk": "@@ -565,9 +568,9 @@ def build_all() {\n                         // Cleanup in case an old build left anything behind\n                         cleanWs()\n                         add_node_to_description()\n-                        // Setup Artifactory now that we are on a node. This determines which server(s) we push to.\n-                        variableFile.set_artifactory_config(BUILD_IDENTIFIER)\n                         get_source()\n+                        variableFile.set_sdk_variables()\n+                        archive_sdk()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52fc5e21c41862e34f6ad72c59b46f0b34abc769"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4738, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}