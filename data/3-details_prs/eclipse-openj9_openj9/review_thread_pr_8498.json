{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMDE1MTEx", "number": 8498, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTo0NjozMVrODdGv8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzozMTowNVrODhJ48g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODQ1ODc1OnYy", "diffSide": "RIGHT", "path": "runtime/gc_base/GCExtensions.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTo0NjozMVrOFlhK1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTo0OToyOVrOFlhQtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4NTA3OA==", "bodyText": "I believe would be better to have <= J2SE_V8", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r374885078", "createdAt": "2020-02-04T19:46:31Z", "author": {"login": "dmitripivkine"}, "path": "runtime/gc_base/GCExtensions.cpp", "diffHunk": "@@ -235,6 +236,24 @@ MM_GCExtensions::updateIdentityHashDataForSaltIndex(UDATA index)\n \tgetJavaVM()->identityHashData->hashSaltTable[index] = (U_32)convertValueToHash(getJavaVM(), getJavaVM()->identityHashData->hashSaltTable[index]);\n }\n \n+BOOLEAN\n+MM_GCExtensions::isOriginalJDK8HeapSizeCompatibilityOptionsEanbled(MM_EnvironmentBase* env)\n+{\n+\tJ9JavaVM* vm = (J9JavaVM *)getOmrVM()->_language_vm;\n+\tBOOLEAN enabled = FALSE;\n+\t/* Java 11 or above would ignore VMOPT_XXENABLEORIGINALJDK8HEAPSIZECOMPATIBILITY option */\n+\tif (J2SE_VERSION((J9JavaVM *)getOmrVM()->_language_vm) < J2SE_V11) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f124948956d1fd99bc3acd2df970f3dbf08f9de"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4NjU4MQ==", "bodyText": "ok, I am taking this back.. Your version is good considering existing code", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r374886581", "createdAt": "2020-02-04T19:49:29Z", "author": {"login": "dmitripivkine"}, "path": "runtime/gc_base/GCExtensions.cpp", "diffHunk": "@@ -235,6 +236,24 @@ MM_GCExtensions::updateIdentityHashDataForSaltIndex(UDATA index)\n \tgetJavaVM()->identityHashData->hashSaltTable[index] = (U_32)convertValueToHash(getJavaVM(), getJavaVM()->identityHashData->hashSaltTable[index]);\n }\n \n+BOOLEAN\n+MM_GCExtensions::isOriginalJDK8HeapSizeCompatibilityOptionsEanbled(MM_EnvironmentBase* env)\n+{\n+\tJ9JavaVM* vm = (J9JavaVM *)getOmrVM()->_language_vm;\n+\tBOOLEAN enabled = FALSE;\n+\t/* Java 11 or above would ignore VMOPT_XXENABLEORIGINALJDK8HEAPSIZECOMPATIBILITY option */\n+\tif (J2SE_VERSION((J9JavaVM *)getOmrVM()->_language_vm) < J2SE_V11) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg4NTA3OA=="}, "originalCommit": {"oid": "4f124948956d1fd99bc3acd2df970f3dbf08f9de"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxODQ5ODg3OnYy", "diffSide": "RIGHT", "path": "runtime/gc_base/GCExtensions.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTo1OToxOVrOFlhjxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxOTo1OToxOVrOFlhjxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDg5MTQ2Mw==", "bodyText": "This code can be organized better. There is an example from jvminit.c (you don't need else if case):\n\t{\n\t\tIDATA enablePositiveHashCode = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXENABLEPOSITIVEHASHCODE, NULL);\n\t\tIDATA disablePositiveHashCode = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXDISABLEPOSITIVEHASHCODE, NULL);\n\t\tif (enablePositiveHashCode > disablePositiveHashCode) {\n\t\t\tvm->extendedRuntimeFlags |= J9_EXTENDED_RUNTIME_POSITIVE_HASHCODE;\n\t\t} else if (enablePositiveHashCode < disablePositiveHashCode) {\n\t\t\tvm->extendedRuntimeFlags &= ~(UDATA)J9_EXTENDED_RUNTIME_POSITIVE_HASHCODE;\n\t\t}\n\t}", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r374891463", "createdAt": "2020-02-04T19:59:19Z", "author": {"login": "dmitripivkine"}, "path": "runtime/gc_base/GCExtensions.cpp", "diffHunk": "@@ -235,6 +236,24 @@ MM_GCExtensions::updateIdentityHashDataForSaltIndex(UDATA index)\n \tgetJavaVM()->identityHashData->hashSaltTable[index] = (U_32)convertValueToHash(getJavaVM(), getJavaVM()->identityHashData->hashSaltTable[index]);\n }\n \n+BOOLEAN\n+MM_GCExtensions::isOriginalJDK8HeapSizeCompatibilityOptionsEanbled(MM_EnvironmentBase* env)\n+{\n+\tJ9JavaVM* vm = (J9JavaVM *)getOmrVM()->_language_vm;\n+\tBOOLEAN enabled = FALSE;\n+\t/* Java 11 or above would ignore VMOPT_XXENABLEORIGINALJDK8HEAPSIZECOMPATIBILITY option */\n+\tif (J2SE_VERSION((J9JavaVM *)getOmrVM()->_language_vm) < J2SE_V11) {\n+\t\tIDATA argIndex = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXENABLEORIGINALJDK8HEAPSIZECOMPATIBILITY, NULL);\n+\t\tif (-1 != argIndex) {\n+\t\t\tIDATA argIndex2 = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXDISABLEORIGINALJDK8HEAPSIZECOMPATIBILITY, NULL);\n+\t\t\tif (argIndex > argIndex2) {\n+\t\t\t\tenabled = TRUE;\n+\t\t\t}\n+\t\t}\n+\t}\n+\treturn enabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f124948956d1fd99bc3acd2df970f3dbf08f9de"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODMyMzA3OnYy", "diffSide": "RIGHT", "path": "runtime/gc_modron_startup/mmparse.cpp", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNDo1MjozMlrOFm_h8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjowMToyNlrOFpZlyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzMTA5MA==", "bodyText": "This is pure C function, so all declarations must be done at the beginning of the function. This line does not create problem just because it happen still to be in declaration section. But in general the functionality (described in name) is very local to be defined in declaration section. The solution might be wrap this code to extra {``} to define local section.", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r376431090", "createdAt": "2020-02-07T14:52:32Z", "author": {"login": "dmitripivkine"}, "path": "runtime/gc_modron_startup/mmparse.cpp", "diffHunk": "@@ -1472,6 +1472,19 @@ gcParseCommandLineAndInitializeWithValues(J9JavaVM *vm, IDATA *memoryParameters)\n \t/* Parse the command line \n \t * Order is important for parameters that match as substrings (-Xmrx/-Xmr)\n \t */\n+\tbool eanbleOriginalJDK8HeapSizeCompatibilityOption = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff345594d5506026b31e8bc030e1493ca081a67"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQ0MjQ5OQ==", "bodyText": "Declaration must be at the beginning of the function but my explanation why might be not entirely correct. This function uses goto and compiler does not allow jump over variable declaration", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r376442499", "createdAt": "2020-02-07T15:13:01Z", "author": {"login": "dmitripivkine"}, "path": "runtime/gc_modron_startup/mmparse.cpp", "diffHunk": "@@ -1472,6 +1472,19 @@ gcParseCommandLineAndInitializeWithValues(J9JavaVM *vm, IDATA *memoryParameters)\n \t/* Parse the command line \n \t * Order is important for parameters that match as substrings (-Xmrx/-Xmr)\n \t */\n+\tbool eanbleOriginalJDK8HeapSizeCompatibilityOption = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzMTA5MA=="}, "originalCommit": {"oid": "cff345594d5506026b31e8bc030e1493ca081a67"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk1NTIxMA==", "bodyText": "The C rule that requires declarations at the beginning of the block (not necessarily the function) don't apply to a C++ source file even if the function is not associated with a class.", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r378955210", "createdAt": "2020-02-13T16:01:26Z", "author": {"login": "keithc-ca"}, "path": "runtime/gc_modron_startup/mmparse.cpp", "diffHunk": "@@ -1472,6 +1472,19 @@ gcParseCommandLineAndInitializeWithValues(J9JavaVM *vm, IDATA *memoryParameters)\n \t/* Parse the command line \n \t * Order is important for parameters that match as substrings (-Xmrx/-Xmr)\n \t */\n+\tbool eanbleOriginalJDK8HeapSizeCompatibilityOption = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzMTA5MA=="}, "originalCommit": {"oid": "cff345594d5506026b31e8bc030e1493ca081a67"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyODMyODM5OnYy", "diffSide": "RIGHT", "path": "runtime/gc_modron_startup/mmparse.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNDo1NDowNFrOFm_lWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNzoyOTo0NFrOFnu9vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzMTk2Mw==", "bodyText": "Should it be >= ?!", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r376431963", "createdAt": "2020-02-07T14:54:04Z", "author": {"login": "dmitripivkine"}, "path": "runtime/gc_modron_startup/mmparse.cpp", "diffHunk": "@@ -1472,6 +1472,19 @@ gcParseCommandLineAndInitializeWithValues(J9JavaVM *vm, IDATA *memoryParameters)\n \t/* Parse the command line \n \t * Order is important for parameters that match as substrings (-Xmrx/-Xmr)\n \t */\n+\tbool eanbleOriginalJDK8HeapSizeCompatibilityOption = false;\n+\t/* only parse VMOPT_XXENABLEORIGINALJDK8HEAPSIZECOMPATIBILITY option for Java 8 and below */\n+\tif (J2SE_V8 <= J2SE_VERSION((J9JavaVM *)getOmrVM()->_language_vm)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cff345594d5506026b31e8bc030e1493ca081a67"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzIwODI1Mw==", "bodyText": "updated", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r377208253", "createdAt": "2020-02-10T17:29:44Z", "author": {"login": "LinHu2016"}, "path": "runtime/gc_modron_startup/mmparse.cpp", "diffHunk": "@@ -1472,6 +1472,19 @@ gcParseCommandLineAndInitializeWithValues(J9JavaVM *vm, IDATA *memoryParameters)\n \t/* Parse the command line \n \t * Order is important for parameters that match as substrings (-Xmrx/-Xmr)\n \t */\n+\tbool eanbleOriginalJDK8HeapSizeCompatibilityOption = false;\n+\t/* only parse VMOPT_XXENABLEORIGINALJDK8HEAPSIZECOMPATIBILITY option for Java 8 and below */\n+\tif (J2SE_V8 <= J2SE_VERSION((J9JavaVM *)getOmrVM()->_language_vm)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQzMTk2Mw=="}, "originalCommit": {"oid": "cff345594d5506026b31e8bc030e1493ca081a67"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NDY1MTM2OnYy", "diffSide": "RIGHT", "path": "runtime/gc_base/GCExtensions.cpp", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjowNDowNFrOFpZsRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODoyMjo1M1rOFpem0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk1Njg3MQ==", "bodyText": "The comment should be indented the same as the code in the block (as it was before).", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r378956871", "createdAt": "2020-02-13T16:04:04Z", "author": {"login": "keithc-ca"}, "path": "runtime/gc_base/GCExtensions.cpp", "diffHunk": "@@ -256,8 +254,8 @@ MM_GCExtensions::computeDefaultMaxHeap(MM_EnvironmentBase *env)\n \t}\n \n #if defined(OMR_ENV_DATA64)\n-\tif (J2SE_VERSION((J9JavaVM *)getOmrVM()->_language_vm) >= J2SE_V11) {\n-\t\t/* extend java default max memory to 25% of usable RAM */\n+\tif (!eanbleOriginalJDK8HeapSizeCompatibilityOption) {\n+\t/* extend java default max memory to 25% of usable RAM */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a82e24d10c9464afc3a2009832218e415aa245ce"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MjIzMQ==", "bodyText": "@LinHu2016 I launched Linux x86 extended test build. Would you please wait with this comment fix until it complete and results are reviewed?", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r378972231", "createdAt": "2020-02-13T16:27:55Z", "author": {"login": "dmitripivkine"}, "path": "runtime/gc_base/GCExtensions.cpp", "diffHunk": "@@ -256,8 +254,8 @@ MM_GCExtensions::computeDefaultMaxHeap(MM_EnvironmentBase *env)\n \t}\n \n #if defined(OMR_ENV_DATA64)\n-\tif (J2SE_VERSION((J9JavaVM *)getOmrVM()->_language_vm) >= J2SE_V11) {\n-\t\t/* extend java default max memory to 25% of usable RAM */\n+\tif (!eanbleOriginalJDK8HeapSizeCompatibilityOption) {\n+\t/* extend java default max memory to 25% of usable RAM */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk1Njg3MQ=="}, "originalCommit": {"oid": "a82e24d10c9464afc3a2009832218e415aa245ce"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3NzUyMQ==", "bodyText": "@dmitripivkine Sure", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r378977521", "createdAt": "2020-02-13T16:36:13Z", "author": {"login": "LinHu2016"}, "path": "runtime/gc_base/GCExtensions.cpp", "diffHunk": "@@ -256,8 +254,8 @@ MM_GCExtensions::computeDefaultMaxHeap(MM_EnvironmentBase *env)\n \t}\n \n #if defined(OMR_ENV_DATA64)\n-\tif (J2SE_VERSION((J9JavaVM *)getOmrVM()->_language_vm) >= J2SE_V11) {\n-\t\t/* extend java default max memory to 25% of usable RAM */\n+\tif (!eanbleOriginalJDK8HeapSizeCompatibilityOption) {\n+\t/* extend java default max memory to 25% of usable RAM */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk1Njg3MQ=="}, "originalCommit": {"oid": "a82e24d10c9464afc3a2009832218e415aa245ce"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAzNzM5NQ==", "bodyText": "Ok, test build failed because of Jenkins issues... Please submit the fix and we will start testing over", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r379037395", "createdAt": "2020-02-13T18:22:53Z", "author": {"login": "dmitripivkine"}, "path": "runtime/gc_base/GCExtensions.cpp", "diffHunk": "@@ -256,8 +254,8 @@ MM_GCExtensions::computeDefaultMaxHeap(MM_EnvironmentBase *env)\n \t}\n \n #if defined(OMR_ENV_DATA64)\n-\tif (J2SE_VERSION((J9JavaVM *)getOmrVM()->_language_vm) >= J2SE_V11) {\n-\t\t/* extend java default max memory to 25% of usable RAM */\n+\tif (!eanbleOriginalJDK8HeapSizeCompatibilityOption) {\n+\t/* extend java default max memory to 25% of usable RAM */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk1Njg3MQ=="}, "originalCommit": {"oid": "a82e24d10c9464afc3a2009832218e415aa245ce"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDgwNzI5OnYy", "diffSide": "RIGHT", "path": "runtime/gc_base/GCExtensions.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzowMjo0MlrOFrvl6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOToxNjo0MFrOFr0OBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQxMjg0MA==", "bodyText": "spelling: eanble -> enable", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r381412840", "createdAt": "2020-02-19T17:02:42Z", "author": {"login": "amicic"}, "path": "runtime/gc_base/GCExtensions.cpp", "diffHunk": "@@ -256,7 +254,7 @@ MM_GCExtensions::computeDefaultMaxHeap(MM_EnvironmentBase *env)\n \t}\n \n #if defined(OMR_ENV_DATA64)\n-\tif (J2SE_VERSION((J9JavaVM *)getOmrVM()->_language_vm) >= J2SE_V11) {\n+\tif (!eanbleOriginalJDK8HeapSizeCompatibilityOption) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48e8b1ee22abeae971017a9668287bc2cd190f7b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ4ODY0NA==", "bodyText": "done", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r381488644", "createdAt": "2020-02-19T19:16:40Z", "author": {"login": "LinHu2016"}, "path": "runtime/gc_base/GCExtensions.cpp", "diffHunk": "@@ -256,7 +254,7 @@ MM_GCExtensions::computeDefaultMaxHeap(MM_EnvironmentBase *env)\n \t}\n \n #if defined(OMR_ENV_DATA64)\n-\tif (J2SE_VERSION((J9JavaVM *)getOmrVM()->_language_vm) >= J2SE_V11) {\n+\tif (!eanbleOriginalJDK8HeapSizeCompatibilityOption) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQxMjg0MA=="}, "originalCommit": {"oid": "48e8b1ee22abeae971017a9668287bc2cd190f7b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDgxMzA0OnYy", "diffSide": "RIGHT", "path": "runtime/gc_modron_startup/mmparse.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzowNDowOVrOFrvpig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOToxNjo1MVrOFr0Ocw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQxMzc3MA==", "bodyText": "wrong spelling of 'enable' at a few spots in this method", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r381413770", "createdAt": "2020-02-19T17:04:09Z", "author": {"login": "amicic"}, "path": "runtime/gc_modron_startup/mmparse.cpp", "diffHunk": "@@ -1472,6 +1472,20 @@ gcParseCommandLineAndInitializeWithValues(J9JavaVM *vm, IDATA *memoryParameters)\n \t/* Parse the command line \n \t * Order is important for parameters that match as substrings (-Xmrx/-Xmr)\n \t */\n+\t{\n+\t\tbool eanbleOriginalJDK8HeapSizeCompatibilityOption = false;\n+\t\t/* only parse VMOPT_XXENABLEORIGINALJDK8HEAPSIZECOMPATIBILITY option for Java 8 and below */\n+\t\tif (J2SE_18 >= J2SE_VERSION(vm)) {\n+\n+\t\t\tIDATA eanbled = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXENABLEORIGINALJDK8HEAPSIZECOMPATIBILITY, NULL);\n+\t\t\tIDATA disabled = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXDISABLEORIGINALJDK8HEAPSIZECOMPATIBILITY, NULL);\n+\t\t\tif (eanbled > disabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48e8b1ee22abeae971017a9668287bc2cd190f7b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ4ODc1NQ==", "bodyText": "done", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r381488755", "createdAt": "2020-02-19T19:16:51Z", "author": {"login": "LinHu2016"}, "path": "runtime/gc_modron_startup/mmparse.cpp", "diffHunk": "@@ -1472,6 +1472,20 @@ gcParseCommandLineAndInitializeWithValues(J9JavaVM *vm, IDATA *memoryParameters)\n \t/* Parse the command line \n \t * Order is important for parameters that match as substrings (-Xmrx/-Xmr)\n \t */\n+\t{\n+\t\tbool eanbleOriginalJDK8HeapSizeCompatibilityOption = false;\n+\t\t/* only parse VMOPT_XXENABLEORIGINALJDK8HEAPSIZECOMPATIBILITY option for Java 8 and below */\n+\t\tif (J2SE_18 >= J2SE_VERSION(vm)) {\n+\n+\t\t\tIDATA eanbled = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXENABLEORIGINALJDK8HEAPSIZECOMPATIBILITY, NULL);\n+\t\t\tIDATA disabled = FIND_AND_CONSUME_ARG(EXACT_MATCH, VMOPT_XXDISABLEORIGINALJDK8HEAPSIZECOMPATIBILITY, NULL);\n+\t\t\tif (eanbled > disabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQxMzc3MA=="}, "originalCommit": {"oid": "48e8b1ee22abeae971017a9668287bc2cd190f7b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDkxNjM0OnYy", "diffSide": "RIGHT", "path": "runtime/gc_base/GCExtensions.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzozMTowNVrOFrwoyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOToxNjo1OFrOFr0OtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQyOTk2Mw==", "bodyText": "I'm fine with removing the call to EnvBase::computeDefaultMaxHeap here. Just commenting for clarification purposes - it will still be called during EnvBase::initialize.", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r381429963", "createdAt": "2020-02-19T17:31:05Z", "author": {"login": "amicic"}, "path": "runtime/gc_base/GCExtensions.cpp", "diffHunk": "@@ -235,11 +235,9 @@ MM_GCExtensions::updateIdentityHashDataForSaltIndex(UDATA index)\n }\n \n void\n-MM_GCExtensions::computeDefaultMaxHeap(MM_EnvironmentBase *env)\n+MM_GCExtensions::computeDefaultMaxHeapForJava(bool eanbleOriginalJDK8HeapSizeCompatibilityOption)\n {\n-\tOMRPORT_ACCESS_FROM_OMRPORT(env->getPortLibrary());\n-\n-\tMM_GCExtensionsBase::computeDefaultMaxHeap(env);\n+\tOMRPORT_ACCESS_FROM_OMRVM(_omrVM);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48e8b1ee22abeae971017a9668287bc2cd190f7b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ4ODgyMQ==", "bodyText": "done", "url": "https://github.com/eclipse-openj9/openj9/pull/8498#discussion_r381488821", "createdAt": "2020-02-19T19:16:58Z", "author": {"login": "LinHu2016"}, "path": "runtime/gc_base/GCExtensions.cpp", "diffHunk": "@@ -235,11 +235,9 @@ MM_GCExtensions::updateIdentityHashDataForSaltIndex(UDATA index)\n }\n \n void\n-MM_GCExtensions::computeDefaultMaxHeap(MM_EnvironmentBase *env)\n+MM_GCExtensions::computeDefaultMaxHeapForJava(bool eanbleOriginalJDK8HeapSizeCompatibilityOption)\n {\n-\tOMRPORT_ACCESS_FROM_OMRPORT(env->getPortLibrary());\n-\n-\tMM_GCExtensionsBase::computeDefaultMaxHeap(env);\n+\tOMRPORT_ACCESS_FROM_OMRVM(_omrVM);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQyOTk2Mw=="}, "originalCommit": {"oid": "48e8b1ee22abeae971017a9668287bc2cd190f7b"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 694, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}