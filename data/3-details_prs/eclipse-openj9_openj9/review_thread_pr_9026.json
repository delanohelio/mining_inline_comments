{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NzY1OTkx", "number": 9026, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODowNToxMlrODtOd8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDo0MzoyOVrODuHjWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NzQ5NTU1OnYy", "diffSide": "RIGHT", "path": "runtime/vm/resolvefield.cpp", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODowNToxMlrOF-h4PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODo1MjozOFrOF-joBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExMTEwMA==", "bodyText": "Would it be better to change the definition of referenceSize to be a U_32?", "url": "https://github.com/eclipse-openj9/openj9/pull/9026#discussion_r401111100", "createdAt": "2020-03-31T18:05:12Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/resolvefield.cpp", "diffHunk": "@@ -675,7 +675,7 @@ fieldOffsetsStartDo(J9JavaVM *vm, J9ROMClass *romClass, J9Class *superClazz, J9R\n \t\t */\n \t\tif ((LOCKWORD_NEEDED == lockwordNeeded)||(NO_LOCKWORD_NEEDED == lockwordNeeded)) {\n \t\t\tif ((NULL != superClazz) && ((UDATA)-1 != superClazz->lockOffset) && (0 == J9CLASS_DEPTH(superClazz))) {\n-\t\t\t\tU_32 newSuperSize = fieldInfo.getSuperclassFieldsSize() - referenceSize;\n+\t\t\t\tU_32 newSuperSize = fieldInfo.getSuperclassFieldsSize() - (U_32)referenceSize;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8337248c6ccb1b28aec000fa2c6194d8f0ba40"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzODM1OQ==", "bodyText": "It could probably be done, but this was the minimal change. It's used in a bunch of other places.", "url": "https://github.com/eclipse-openj9/openj9/pull/9026#discussion_r401138359", "createdAt": "2020-03-31T18:50:14Z", "author": {"login": "gacholio"}, "path": "runtime/vm/resolvefield.cpp", "diffHunk": "@@ -675,7 +675,7 @@ fieldOffsetsStartDo(J9JavaVM *vm, J9ROMClass *romClass, J9Class *superClazz, J9R\n \t\t */\n \t\tif ((LOCKWORD_NEEDED == lockwordNeeded)||(NO_LOCKWORD_NEEDED == lockwordNeeded)) {\n \t\t\tif ((NULL != superClazz) && ((UDATA)-1 != superClazz->lockOffset) && (0 == J9CLASS_DEPTH(superClazz))) {\n-\t\t\t\tU_32 newSuperSize = fieldInfo.getSuperclassFieldsSize() - referenceSize;\n+\t\t\t\tU_32 newSuperSize = fieldInfo.getSuperclassFieldsSize() - (U_32)referenceSize;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExMTEwMA=="}, "originalCommit": {"oid": "ba8337248c6ccb1b28aec000fa2c6194d8f0ba40"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzOTcxOQ==", "bodyText": "If you request the change below, I'll try this one as well. It should be safe when mixed with UDATA math.", "url": "https://github.com/eclipse-openj9/openj9/pull/9026#discussion_r401139719", "createdAt": "2020-03-31T18:52:38Z", "author": {"login": "gacholio"}, "path": "runtime/vm/resolvefield.cpp", "diffHunk": "@@ -675,7 +675,7 @@ fieldOffsetsStartDo(J9JavaVM *vm, J9ROMClass *romClass, J9Class *superClazz, J9R\n \t\t */\n \t\tif ((LOCKWORD_NEEDED == lockwordNeeded)||(NO_LOCKWORD_NEEDED == lockwordNeeded)) {\n \t\t\tif ((NULL != superClazz) && ((UDATA)-1 != superClazz->lockOffset) && (0 == J9CLASS_DEPTH(superClazz))) {\n-\t\t\t\tU_32 newSuperSize = fieldInfo.getSuperclassFieldsSize() - referenceSize;\n+\t\t\t\tU_32 newSuperSize = fieldInfo.getSuperclassFieldsSize() - (U_32)referenceSize;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTExMTEwMA=="}, "originalCommit": {"oid": "ba8337248c6ccb1b28aec000fa2c6194d8f0ba40"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NzU1NzI0OnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxODoyMjoyMFrOF-ifQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxOTowMTowM1rOF-j8iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMTA5MQ==", "bodyText": "Can this move this late?  Its being moved after the if (JNI_OK != configureRasDump(vm)) { call....", "url": "https://github.com/eclipse-openj9/openj9/pull/9026#discussion_r401121091", "createdAt": "2020-03-31T18:22:20Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -6096,6 +6088,12 @@ protectedInitializeJavaVM(J9PortLibrary* portLibrary, void * userData)\n \t}\n \n \t/* Must be done after the compressed/full determination has been made */\n+#ifdef J9VM_RAS_EYECATCHERS\n+\tJ9RASInitialize(vm);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8337248c6ccb1b28aec000fa2c6194d8f0ba40"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzMTMyNA==", "bodyText": "This seems like it would make early crashes harder to debug.", "url": "https://github.com/eclipse-openj9/openj9/pull/9026#discussion_r401131324", "createdAt": "2020-03-31T18:38:53Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -6096,6 +6088,12 @@ protectedInitializeJavaVM(J9PortLibrary* portLibrary, void * userData)\n \t}\n \n \t/* Must be done after the compressed/full determination has been made */\n+#ifdef J9VM_RAS_EYECATCHERS\n+\tJ9RASInitialize(vm);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMTA5MQ=="}, "originalCommit": {"oid": "ba8337248c6ccb1b28aec000fa2c6194d8f0ba40"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzNzYyNw==", "bodyText": "I think I understand the problem now - the major concern is whether other code will be trying to modify the vm->j9ras struct before this happens.", "url": "https://github.com/eclipse-openj9/openj9/pull/9026#discussion_r401137627", "createdAt": "2020-03-31T18:49:01Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -6096,6 +6088,12 @@ protectedInitializeJavaVM(J9PortLibrary* portLibrary, void * userData)\n \t}\n \n \t/* Must be done after the compressed/full determination has been made */\n+#ifdef J9VM_RAS_EYECATCHERS\n+\tJ9RASInitialize(vm);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMTA5MQ=="}, "originalCommit": {"oid": "ba8337248c6ccb1b28aec000fa2c6194d8f0ba40"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEzOTI1MA==", "bodyText": "Simply put, the VM does not crash that early in the real world, so I'm not concerned about that - all platforms sanity passes with these changes.\nIt might be better to move the parsing up (rather than the rest of it down), but I think that had problems the last time I tried. If you want, I'll try it again.", "url": "https://github.com/eclipse-openj9/openj9/pull/9026#discussion_r401139250", "createdAt": "2020-03-31T18:51:48Z", "author": {"login": "gacholio"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -6096,6 +6088,12 @@ protectedInitializeJavaVM(J9PortLibrary* portLibrary, void * userData)\n \t}\n \n \t/* Must be done after the compressed/full determination has been made */\n+#ifdef J9VM_RAS_EYECATCHERS\n+\tJ9RASInitialize(vm);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMTA5MQ=="}, "originalCommit": {"oid": "ba8337248c6ccb1b28aec000fa2c6194d8f0ba40"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTE0NDk2OQ==", "bodyText": "The final decision will depend on heap sizes as well so I don't now that moving the parsing up will help unless that includes the GC's parsing as well.\nI'm willing to accept this as is as I don't have a better suggestion", "url": "https://github.com/eclipse-openj9/openj9/pull/9026#discussion_r401144969", "createdAt": "2020-03-31T19:01:03Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -6096,6 +6088,12 @@ protectedInitializeJavaVM(J9PortLibrary* portLibrary, void * userData)\n \t}\n \n \t/* Must be done after the compressed/full determination has been made */\n+#ifdef J9VM_RAS_EYECATCHERS\n+\tJ9RASInitialize(vm);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEyMTA5MQ=="}, "originalCommit": {"oid": "ba8337248c6ccb1b28aec000fa2c6194d8f0ba40"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Njg0ODI1OnYy", "diffSide": "RIGHT", "path": "runtime/vm/rasdump.c", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDo0MzoyOVrOF_8WXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzo1OTozOFrOGAWvRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5MzM3NA==", "bodyText": "I think this condition should be:\n\tif (!ALLOCATE_RAS_DATA_IN_SUBALLOCATOR && !J9JAVAVM_COMPRESS_OBJECT_REFERENCES(javaVM)) {\n\nI'll open a PR to fix this shortly.", "url": "https://github.com/eclipse-openj9/openj9/pull/9026#discussion_r402593374", "createdAt": "2020-04-02T20:43:29Z", "author": {"login": "keithc-ca"}, "path": "runtime/vm/rasdump.c", "diffHunk": "@@ -443,8 +445,8 @@ allocateRASStruct(J9JavaVM *javaVM)\n \t *\n \t * Compressed references: the RAS data is relocated to the JVM suballocator once the latter is created.\n \t */\n-#if !defined(USE_STATIC_RAS_STRUCT) && !defined(ALLOCATE_RAS_DATA_IN_SUBALLOCATOR)\n-\tif (!J9JAVAVM_COMPRESS_OBJECT_REFERENCES(javaVM)) {\n+#if !defined(USE_STATIC_RAS_STRUCT)\n+\tif (!(ALLOCATE_RAS_DATA_IN_SUBALLOCATOR && J9JAVAVM_COMPRESS_OBJECT_REFERENCES(javaVM))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e4701ef7a2b9d969c0b1eadfd41f020f485abbe"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY4OTUwOQ==", "bodyText": "This is not correct - the original ifdef was the two platforms and compressed. The original code above was !ALLOCATE_IN_SUBALLOC, so the code above is correct (don't forget that this is not the first code change - look back before I made the previous mistake and you'll see what I mean).", "url": "https://github.com/eclipse-openj9/openj9/pull/9026#discussion_r402689509", "createdAt": "2020-04-03T01:37:42Z", "author": {"login": "gacholio"}, "path": "runtime/vm/rasdump.c", "diffHunk": "@@ -443,8 +445,8 @@ allocateRASStruct(J9JavaVM *javaVM)\n \t *\n \t * Compressed references: the RAS data is relocated to the JVM suballocator once the latter is created.\n \t */\n-#if !defined(USE_STATIC_RAS_STRUCT) && !defined(ALLOCATE_RAS_DATA_IN_SUBALLOCATOR)\n-\tif (!J9JAVAVM_COMPRESS_OBJECT_REFERENCES(javaVM)) {\n+#if !defined(USE_STATIC_RAS_STRUCT)\n+\tif (!(ALLOCATE_RAS_DATA_IN_SUBALLOCATOR && J9JAVAVM_COMPRESS_OBJECT_REFERENCES(javaVM))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5MzM3NA=="}, "originalCommit": {"oid": "5e4701ef7a2b9d969c0b1eadfd41f020f485abbe"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAyNTczMw==", "bodyText": "Yes, ALLOCATE_RAS_DATA_IN_SUBALLOCATOR replaces the first two terms of\n!defined(J9ZOS390) && !defined(J9ZTPF) && defined(OMR_GC_COMPRESSED_POINTERS)\n\nso code that tested defined(ALLOCATE_RAS_DATA_IN_SUBALLOCATOR) must instead test\nALLOCATE_RAS_DATA_IN_SUBALLOCATOR && J9JAVAVM_COMPRESS_OBJECT_REFERENCES(javaVM)\n\nso !defined(ALLOCATE_RAS_DATA_IN_SUBALLOCATOR) must become\n!(ALLOCATE_RAS_DATA_IN_SUBALLOCATOR && J9JAVAVM_COMPRESS_OBJECT_REFERENCES(javaVM))\n\nSorry for the interruption.", "url": "https://github.com/eclipse-openj9/openj9/pull/9026#discussion_r403025733", "createdAt": "2020-04-03T13:59:38Z", "author": {"login": "keithc-ca"}, "path": "runtime/vm/rasdump.c", "diffHunk": "@@ -443,8 +445,8 @@ allocateRASStruct(J9JavaVM *javaVM)\n \t *\n \t * Compressed references: the RAS data is relocated to the JVM suballocator once the latter is created.\n \t */\n-#if !defined(USE_STATIC_RAS_STRUCT) && !defined(ALLOCATE_RAS_DATA_IN_SUBALLOCATOR)\n-\tif (!J9JAVAVM_COMPRESS_OBJECT_REFERENCES(javaVM)) {\n+#if !defined(USE_STATIC_RAS_STRUCT)\n+\tif (!(ALLOCATE_RAS_DATA_IN_SUBALLOCATOR && J9JAVAVM_COMPRESS_OBJECT_REFERENCES(javaVM))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU5MzM3NA=="}, "originalCommit": {"oid": "5e4701ef7a2b9d969c0b1eadfd41f020f485abbe"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 449, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}