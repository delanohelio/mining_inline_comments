{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NDc1ODY5", "number": 11158, "title": "Add Java11 support for snapshot/restore", "bodyText": "Add Java11 support for snapshot/restore\nAdd support for persisting the module and packages. Modify the restore\nsequence to not initialize classes that aren't used in Java11\nSigned-off-by: Tobi Ajila atobia@ca.ibm.com", "createdAt": "2020-11-11T22:03:19Z", "url": "https://github.com/eclipse-openj9/openj9/pull/11158", "merged": true, "mergeCommit": {"oid": "ea3726d156e119ba1c26e936373cb1f61318287e"}, "closed": true, "closedAt": "2020-11-14T16:15:41Z", "author": {"login": "tajila"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdb283qgFqTUyOTM3MDg1Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcJ9JdgFqTUzMDIyMDIyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MzcwODUy", "url": "https://github.com/eclipse-openj9/openj9/pull/11158#pullrequestreview-529370852", "createdAt": "2020-11-12T18:26:29Z", "commit": {"oid": "4792a5ce113f8d646c83b039cff49655fcf38bc6"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODoyNjoyOVrOHyIDig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxODozNDoyNFrOHyIWzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyMjgyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tif (IS_SNAPSHOT_RUN(vm)) {\n          \n          \n            \n            \t\t\t\t\tvm->modularityPool = pool_new(OMR_MAX(sizeof(J9Package), sizeof(J9Module)),  0, 0, 0, J9_GET_CALLSITE(), J9MEM_CATEGORY_MODULES, POOL_FOR_PORT(VMSNAPSHOTIMPL_OMRPORT_FROM_JAVAVM(vm)));\n          \n          \n            \n            \t\t\t\t} else if (!IS_RESTORE_RUN(vm))\n          \n          \n            \n            \t\t\t\tif (IS_SNAPSHOT_RUN(vm)) {\n          \n          \n            \n            \t\t\t\t\tvm->modularityPool = pool_new(OMR_MAX(sizeof(J9Package), sizeof(J9Module)),  0, 0, 0, J9_GET_CALLSITE(), J9MEM_CATEGORY_MODULES, POOL_FOR_PORT(VMSNAPSHOTIMPL_OMRPORT_FROM_JAVAVM(vm)));\n          \n          \n            \n            \t\t\t\t} else if (IS_RESTORE_RUN(vm)) {\n          \n          \n            \n            \t\t\t\t\t/* vm->modularityPool is already initialized as part of the restore */\n          \n          \n            \n            \t\t\t\t} else\n          \n      \n    \n    \n  \n\nMake the 3 cases {snapshot, restore, normal jvm} explicit.", "url": "https://github.com/eclipse-openj9/openj9/pull/11158#discussion_r522322826", "createdAt": "2020-11-12T18:26:29Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2359,7 +2359,14 @@ IDATA VMInitStages(J9JavaVM *vm, IDATA stage, void* reserved) {\n \t\t\t}\n \n \t\t\tif (J2SE_VERSION(vm) >= J2SE_V11) {\n-\t\t\t\tvm->modularityPool = pool_new(OMR_MAX(sizeof(J9Package),sizeof(J9Module)),  0, 0, 0, J9_GET_CALLSITE(), J9MEM_CATEGORY_MODULES, POOL_FOR_PORT(vm->portLibrary));\n+#if defined(J9VM_OPT_SNAPSHOTS)\n+\t\t\t\tif (IS_SNAPSHOT_RUN(vm)) {\n+\t\t\t\t\tvm->modularityPool = pool_new(OMR_MAX(sizeof(J9Package), sizeof(J9Module)),  0, 0, 0, J9_GET_CALLSITE(), J9MEM_CATEGORY_MODULES, POOL_FOR_PORT(VMSNAPSHOTIMPL_OMRPORT_FROM_JAVAVM(vm)));\n+\t\t\t\t} else if (!IS_RESTORE_RUN(vm))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4792a5ce113f8d646c83b039cff49655fcf38bc6"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNjk2NQ==", "bodyText": "Why is this required?  It inits the static fields {platformEncoding, fileEncoding, osEncoding} in System.java.  Aren't they saved in an initialized state?  Why do we reset them on a restore run?", "url": "https://github.com/eclipse-openj9/openj9/pull/11158#discussion_r522326965", "createdAt": "2020-11-12T18:33:07Z", "author": {"login": "DanHeidinga"}, "path": "runtime/jcl/common/stdinit.c", "diffHunk": "@@ -169,6 +173,12 @@ restoreRunStandardInit(J9JavaVM *vm)\n #endif /* !J9VM_INTERP_MINIMAL_JCL */\n #endif /* J9VM_OPT_SIDECAR */\n \n+#if JAVA_SPEC_VERSION >= 11\n+\tvmFuncs->internalAcquireVMAccess(vmThread);\n+\tvmFuncs->sendInitEncodings(vmThread);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4792a5ce113f8d646c83b039cff49655fcf38bc6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjMyNzc1OA==", "bodyText": "The other caller of this API looks like:\n/* Run the JCL initialization code (what used to be JNI_OnLoad) */\n\tjniVersion = nativeLibrary->send_lifecycle_event(vmThread, nativeLibrary, \"JCL_OnLoad\", JNI_VERSION_1_1);\n\tif (!vmFuncs->jniVersionIsValid(jniVersion)) {\n\t\treturn 1;\n\t}\n\nShould this code validate the JNI version as well?", "url": "https://github.com/eclipse-openj9/openj9/pull/11158#discussion_r522327758", "createdAt": "2020-11-12T18:34:24Z", "author": {"login": "DanHeidinga"}, "path": "runtime/jcl/common/stdinit.c", "diffHunk": "@@ -161,6 +162,9 @@ restoreRunStandardInit(J9JavaVM *vm)\n \t}\n \t((J9NativeLibrary*)nativeLibrary)->flags |= J9NATIVELIB_FLAG_ALLOW_INL;\n \n+\t/* Run the JCL initialization code (what used to be JNI_OnLoad) */\n+\tnativeLibrary->send_lifecycle_event(vmThread, nativeLibrary, \"JCL_OnLoad\", JNI_VERSION_1_1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4792a5ce113f8d646c83b039cff49655fcf38bc6"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4792a5ce113f8d646c83b039cff49655fcf38bc6", "author": {"user": {"login": "tajila", "name": "Tobi"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4792a5ce113f8d646c83b039cff49655fcf38bc6", "committedDate": "2020-11-11T22:02:31Z", "message": "Add Java11 support for snapshot/restore\n\nAdd support for persisting the module and packages. Modify the restore\nsequence to not initialize classes that aren't used in Java11\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>"}, "afterCommit": {"oid": "a2c7ee871252d64ca61084f2a69fade258ff2332", "author": {"user": {"login": "tajila", "name": "Tobi"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a2c7ee871252d64ca61084f2a69fade258ff2332", "committedDate": "2020-11-13T14:03:16Z", "message": "Add Java11 support for snapshot/restore\n\nAdd support for persisting the module and packages. Modify the restore\nsequence to not initialize classes that aren't used in Java11\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17b1bd88ae4e42aa2e317e9845e3baa9be39ae12", "author": {"user": {"login": "tajila", "name": "Tobi"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/17b1bd88ae4e42aa2e317e9845e3baa9be39ae12", "committedDate": "2020-11-13T16:40:59Z", "message": "Add Java11 support for snapshot/restore\n\nAdd support for persisting the module and packages. Modify the restore\nsequence to not initialize classes that aren't used in Java11\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2c7ee871252d64ca61084f2a69fade258ff2332", "author": {"user": {"login": "tajila", "name": "Tobi"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a2c7ee871252d64ca61084f2a69fade258ff2332", "committedDate": "2020-11-13T14:03:16Z", "message": "Add Java11 support for snapshot/restore\n\nAdd support for persisting the module and packages. Modify the restore\nsequence to not initialize classes that aren't used in Java11\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>"}, "afterCommit": {"oid": "17b1bd88ae4e42aa2e317e9845e3baa9be39ae12", "author": {"user": {"login": "tajila", "name": "Tobi"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/17b1bd88ae4e42aa2e317e9845e3baa9be39ae12", "committedDate": "2020-11-13T16:40:59Z", "message": "Add Java11 support for snapshot/restore\n\nAdd support for persisting the module and packages. Modify the restore\nsequence to not initialize classes that aren't used in Java11\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMjIwMjI1", "url": "https://github.com/eclipse-openj9/openj9/pull/11158#pullrequestreview-530220225", "createdAt": "2020-11-13T16:43:03Z", "commit": {"oid": "17b1bd88ae4e42aa2e317e9845e3baa9be39ae12"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1546, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}