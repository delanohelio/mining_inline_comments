{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMzE4OTA4", "number": 11482, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzowMDozMlrOFFs4dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzowMDozMlrOFFs4dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTIyNTUxOnYy", "diffSide": "RIGHT", "path": "test/functional/Java14andUp/src/org/openj9/test/jep358/NPEMessageTests.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzowMDozMlrOIGV3iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxOToxODoxMlrOIGb6oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUyMDY1MQ==", "bodyText": "Can we keep the references to jdk internal ASM to avoid updating external asm.jar file later?\nA workaround for IllegalAccessError could be something like --add-exports java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED.", "url": "https://github.com/eclipse-openj9/openj9/pull/11482#discussion_r543520651", "createdAt": "2020-12-15T17:00:32Z", "author": {"login": "JasonFengJ9"}, "path": "test/functional/Java14andUp/src/org/openj9/test/jep358/NPEMessageTests.java", "diffHunk": "@@ -26,26 +26,26 @@\n \n import org.testng.Assert;\n \n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Label;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n-import jdk.internal.org.objectweb.asm.Type;\n+import org.objectweb.asm.ClassWriter;\n+import org.objectweb.asm.Label;\n+import org.objectweb.asm.MethodVisitor;\n+import org.objectweb.asm.Opcodes;\n+import org.objectweb.asm.Type;\n \n import static java.lang.invoke.MethodHandles.lookup;\n \n-import static jdk.internal.org.objectweb.asm.Opcodes.ACC_PUBLIC;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ACC_SUPER;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ACONST_NULL;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ALOAD;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ASTORE;\n-import static jdk.internal.org.objectweb.asm.Opcodes.GETFIELD;\n-import static jdk.internal.org.objectweb.asm.Opcodes.GETSTATIC;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ICONST_1;\n-import static jdk.internal.org.objectweb.asm.Opcodes.INVOKESPECIAL;\n-import static jdk.internal.org.objectweb.asm.Opcodes.INVOKEVIRTUAL;\n-import static jdk.internal.org.objectweb.asm.Opcodes.IRETURN;\n-import static jdk.internal.org.objectweb.asm.Opcodes.RETURN;\n+import static org.objectweb.asm.Opcodes.ACC_PUBLIC;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c943834e1d84d52258e3360ff518e11283f2035a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU2OTYxNw==", "bodyText": "Hi @JasonFengJ9 , currently  the --add-exports has already exist in the build.xml, but it still has IllegalAccessError, could you specify where we also need to add this? Thanks.", "url": "https://github.com/eclipse-openj9/openj9/pull/11482#discussion_r543569617", "createdAt": "2020-12-15T18:06:46Z", "author": {"login": "LongyuZhang"}, "path": "test/functional/Java14andUp/src/org/openj9/test/jep358/NPEMessageTests.java", "diffHunk": "@@ -26,26 +26,26 @@\n \n import org.testng.Assert;\n \n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Label;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n-import jdk.internal.org.objectweb.asm.Type;\n+import org.objectweb.asm.ClassWriter;\n+import org.objectweb.asm.Label;\n+import org.objectweb.asm.MethodVisitor;\n+import org.objectweb.asm.Opcodes;\n+import org.objectweb.asm.Type;\n \n import static java.lang.invoke.MethodHandles.lookup;\n \n-import static jdk.internal.org.objectweb.asm.Opcodes.ACC_PUBLIC;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ACC_SUPER;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ACONST_NULL;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ALOAD;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ASTORE;\n-import static jdk.internal.org.objectweb.asm.Opcodes.GETFIELD;\n-import static jdk.internal.org.objectweb.asm.Opcodes.GETSTATIC;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ICONST_1;\n-import static jdk.internal.org.objectweb.asm.Opcodes.INVOKESPECIAL;\n-import static jdk.internal.org.objectweb.asm.Opcodes.INVOKEVIRTUAL;\n-import static jdk.internal.org.objectweb.asm.Opcodes.IRETURN;\n-import static jdk.internal.org.objectweb.asm.Opcodes.RETURN;\n+import static org.objectweb.asm.Opcodes.ACC_PUBLIC;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUyMDY1MQ=="}, "originalCommit": {"oid": "c943834e1d84d52258e3360ff518e11283f2035a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4NTM2Ng==", "bodyText": "--add-exports has already exist in the build.xml\n\nThat's for compilation, it need to be set for runtime after JDK tights its access control.\nThe option can be set at https://github.com/eclipse/openj9/blob/67bb44416a1caafdbcebdff6a2463b44d82f13cd/test/functional/Java14andUp/playlist.xml#L83\nJEP358NPEMessageTests-noDebugInfo needs similar change as well.", "url": "https://github.com/eclipse-openj9/openj9/pull/11482#discussion_r543585366", "createdAt": "2020-12-15T18:30:04Z", "author": {"login": "JasonFengJ9"}, "path": "test/functional/Java14andUp/src/org/openj9/test/jep358/NPEMessageTests.java", "diffHunk": "@@ -26,26 +26,26 @@\n \n import org.testng.Assert;\n \n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Label;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n-import jdk.internal.org.objectweb.asm.Type;\n+import org.objectweb.asm.ClassWriter;\n+import org.objectweb.asm.Label;\n+import org.objectweb.asm.MethodVisitor;\n+import org.objectweb.asm.Opcodes;\n+import org.objectweb.asm.Type;\n \n import static java.lang.invoke.MethodHandles.lookup;\n \n-import static jdk.internal.org.objectweb.asm.Opcodes.ACC_PUBLIC;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ACC_SUPER;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ACONST_NULL;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ALOAD;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ASTORE;\n-import static jdk.internal.org.objectweb.asm.Opcodes.GETFIELD;\n-import static jdk.internal.org.objectweb.asm.Opcodes.GETSTATIC;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ICONST_1;\n-import static jdk.internal.org.objectweb.asm.Opcodes.INVOKESPECIAL;\n-import static jdk.internal.org.objectweb.asm.Opcodes.INVOKEVIRTUAL;\n-import static jdk.internal.org.objectweb.asm.Opcodes.IRETURN;\n-import static jdk.internal.org.objectweb.asm.Opcodes.RETURN;\n+import static org.objectweb.asm.Opcodes.ACC_PUBLIC;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUyMDY1MQ=="}, "originalCommit": {"oid": "c943834e1d84d52258e3360ff518e11283f2035a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYxOTc0NQ==", "bodyText": "The commit has been updated, and it passed on all platforms. Thanks a lot!", "url": "https://github.com/eclipse-openj9/openj9/pull/11482#discussion_r543619745", "createdAt": "2020-12-15T19:18:12Z", "author": {"login": "LongyuZhang"}, "path": "test/functional/Java14andUp/src/org/openj9/test/jep358/NPEMessageTests.java", "diffHunk": "@@ -26,26 +26,26 @@\n \n import org.testng.Assert;\n \n-import jdk.internal.org.objectweb.asm.ClassWriter;\n-import jdk.internal.org.objectweb.asm.Label;\n-import jdk.internal.org.objectweb.asm.MethodVisitor;\n-import jdk.internal.org.objectweb.asm.Opcodes;\n-import jdk.internal.org.objectweb.asm.Type;\n+import org.objectweb.asm.ClassWriter;\n+import org.objectweb.asm.Label;\n+import org.objectweb.asm.MethodVisitor;\n+import org.objectweb.asm.Opcodes;\n+import org.objectweb.asm.Type;\n \n import static java.lang.invoke.MethodHandles.lookup;\n \n-import static jdk.internal.org.objectweb.asm.Opcodes.ACC_PUBLIC;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ACC_SUPER;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ACONST_NULL;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ALOAD;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ASTORE;\n-import static jdk.internal.org.objectweb.asm.Opcodes.GETFIELD;\n-import static jdk.internal.org.objectweb.asm.Opcodes.GETSTATIC;\n-import static jdk.internal.org.objectweb.asm.Opcodes.ICONST_1;\n-import static jdk.internal.org.objectweb.asm.Opcodes.INVOKESPECIAL;\n-import static jdk.internal.org.objectweb.asm.Opcodes.INVOKEVIRTUAL;\n-import static jdk.internal.org.objectweb.asm.Opcodes.IRETURN;\n-import static jdk.internal.org.objectweb.asm.Opcodes.RETURN;\n+import static org.objectweb.asm.Opcodes.ACC_PUBLIC;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUyMDY1MQ=="}, "originalCommit": {"oid": "c943834e1d84d52258e3360ff518e11283f2035a"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 876, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}