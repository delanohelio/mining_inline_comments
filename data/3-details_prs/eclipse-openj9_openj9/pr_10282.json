{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4NDk3NDk5", "number": 10282, "title": "Adding Injection of Interfaces and IdentityObject Interface", "bodyText": "Added a new JVM mechanism to inject an interfacae into a class.\n\ninterfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\nMax number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\nSigned-off-by: Oussama Saoudi oussama.saoudi@ibm.com", "createdAt": "2020-07-29T15:01:02Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10282", "merged": true, "mergeCommit": {"oid": "cc57d80d8cb4350c29443388f65714f30ef85f09"}, "closed": true, "closedAt": "2021-02-22T22:21:14Z", "author": {"login": "OussamaSaoudi"}, "timelineItems": {"totalCount": 91, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCtt6xABqjM2OTU0Mzg3NDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd8p7xQgBqjQzNjA1Mzk1MjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b88ed29b69fab2b91b8106aec03bd81dd2543aa5", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b88ed29b69fab2b91b8106aec03bd81dd2543aa5", "committedDate": "2020-07-29T14:56:01Z", "message": "Adding injection of interfaces\nAdding injection of interfaces into classfiles for new IdentityObject interface\nas well as any other interface that must be injected.\n\nModified JPP configuration to add INLINETYPES Java flag for version.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "1f9081cc4d4ec0ed03d12ba9e82f36e93214cf63", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1f9081cc4d4ec0ed03d12ba9e82f36e93214cf63", "committedDate": "2020-08-26T15:40:50Z", "message": "temp"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f9081cc4d4ec0ed03d12ba9e82f36e93214cf63", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1f9081cc4d4ec0ed03d12ba9e82f36e93214cf63", "committedDate": "2020-08-26T15:40:50Z", "message": "temp"}, "afterCommit": {"oid": "21b670d3187c8ff16f2156d2dff4dafcb32bd624", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/21b670d3187c8ff16f2156d2dff4dafcb32bd624", "committedDate": "2020-08-27T00:47:05Z", "message": "temp"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21b670d3187c8ff16f2156d2dff4dafcb32bd624", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/21b670d3187c8ff16f2156d2dff4dafcb32bd624", "committedDate": "2020-08-27T00:47:05Z", "message": "temp"}, "afterCommit": {"oid": "ae04a99a6306774118c6cef390b01a9588ad077a", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ae04a99a6306774118c6cef390b01a9588ad077a", "committedDate": "2020-08-31T15:57:57Z", "message": "Adding injection of interfaces\n\nAdding ability to inject interfaces to a class on top of interfaces\nalready defined in the class file.\n\nInjects IdentityObject interface to all objects which are not\nValue Types if the object does not have it to begin with.\n\nInjecting interfaces has the following assumptions:\n- interfaces to be injected do not already exist in the class file\n- IdentityObject does not need to be explicitly injected"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6349f02ea353040542eb8919c65c39e7070c8780", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6349f02ea353040542eb8919c65c39e7070c8780", "committedDate": "2020-09-03T18:51:26Z", "message": "Merge branch 'identityObject' of github.com:OussamaSaoudi/openj9 into identityObject"}, "afterCommit": {"oid": "b15280a294ffb1a453b19efcc52c58bca022485b", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b15280a294ffb1a453b19efcc52c58bca022485b", "committedDate": "2020-09-09T13:29:00Z", "message": "Removed optimization to allow debugging"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b15280a294ffb1a453b19efcc52c58bca022485b", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b15280a294ffb1a453b19efcc52c58bca022485b", "committedDate": "2020-09-09T13:29:00Z", "message": "Removed optimization to allow debugging"}, "afterCommit": {"oid": "b65691a702870445e48c8ba695991c68abea63fe", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b65691a702870445e48c8ba695991c68abea63fe", "committedDate": "2020-09-10T19:14:54Z", "message": "Added jitHelpers for store and load\n\nAdded jitHelpers for loading and storing flattenable array\nelement with a slow and fast variant.\n-old_fast-jitLoadFlattenableArrayElement: Attempts to use fast\npath to load array element. If it fails calls the slow variant.\n-old_slow_jitLoadFlattenableArrayElement: Proceeds thorugh slow\npath for loading, throwing appropriate exceptions when needed.\n-old_fast_jitStoreFlattenableArrayElement: Attempts to use fast\npath to store value into array. If it fails, calls the slow\\\nvariant.\n-old_slow_jitStoreFlattenableArrayElement: Proceeds through\nsllow path for storing, throws appropriate exceptions when\nneeded.\n\nMoved ByteCodeInterpreter helper to  VMHelpers to check if\nstoring object in an array is allowed. Replaced occurence\nin ByteCodeInterpreter to new version.\n-objectArrayStoreAllowed\n\nAdded ValueTypeHelpers loadFlattenableArrayElement and\nstoreFlattenableArrayElement which perform aaload and\naastore functions respectively. Both handle flattened and\nunflattened cases. Both contain an option for either a fast\nor a slow variant.\n-loadFlattenableArrayElement: Loads flattenable array element\n-storeFlattenableArrayElement: Stores flattenable array element\n-loadFlattenableArrayElement: c function that initializes\nrequired objects and calls loadFlattenableArrayElement\n-storeFlattenableArrayElement: c function that initializes\nrequired objects and calls storeFlattenableArrayElement\n\nReplaced existing code in aaload and aastore functions in\nByteCodeInterpreter.hpp with calls to loadFlattenableArrayElement\nand storeFlattenableArrayElement. Functionality remains the same.\n\nRelated to: https://github.com/eclipse/openj9/issues/9627\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b65691a702870445e48c8ba695991c68abea63fe", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b65691a702870445e48c8ba695991c68abea63fe", "committedDate": "2020-09-10T19:14:54Z", "message": "Added jitHelpers for store and load\n\nAdded jitHelpers for loading and storing flattenable array\nelement with a slow and fast variant.\n-old_fast-jitLoadFlattenableArrayElement: Attempts to use fast\npath to load array element. If it fails calls the slow variant.\n-old_slow_jitLoadFlattenableArrayElement: Proceeds thorugh slow\npath for loading, throwing appropriate exceptions when needed.\n-old_fast_jitStoreFlattenableArrayElement: Attempts to use fast\npath to store value into array. If it fails, calls the slow\\\nvariant.\n-old_slow_jitStoreFlattenableArrayElement: Proceeds through\nsllow path for storing, throws appropriate exceptions when\nneeded.\n\nMoved ByteCodeInterpreter helper to  VMHelpers to check if\nstoring object in an array is allowed. Replaced occurence\nin ByteCodeInterpreter to new version.\n-objectArrayStoreAllowed\n\nAdded ValueTypeHelpers loadFlattenableArrayElement and\nstoreFlattenableArrayElement which perform aaload and\naastore functions respectively. Both handle flattened and\nunflattened cases. Both contain an option for either a fast\nor a slow variant.\n-loadFlattenableArrayElement: Loads flattenable array element\n-storeFlattenableArrayElement: Stores flattenable array element\n-loadFlattenableArrayElement: c function that initializes\nrequired objects and calls loadFlattenableArrayElement\n-storeFlattenableArrayElement: c function that initializes\nrequired objects and calls storeFlattenableArrayElement\n\nReplaced existing code in aaload and aastore functions in\nByteCodeInterpreter.hpp with calls to loadFlattenableArrayElement\nand storeFlattenableArrayElement. Functionality remains the same.\n\nRelated to: https://github.com/eclipse/openj9/issues/9627\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "df7585b634ab27f9032ac9e626a12c94e2cde659", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/df7585b634ab27f9032ac9e626a12c94e2cde659", "committedDate": "2020-09-14T19:27:46Z", "message": "tmep"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df7585b634ab27f9032ac9e626a12c94e2cde659", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/df7585b634ab27f9032ac9e626a12c94e2cde659", "committedDate": "2020-09-14T19:27:46Z", "message": "tmep"}, "afterCommit": {"oid": "e1f984342ddb63eebb69e02cde494c3807dc272b", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e1f984342ddb63eebb69e02cde494c3807dc272b", "committedDate": "2020-09-15T00:17:38Z", "message": "tmep"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1f984342ddb63eebb69e02cde494c3807dc272b", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e1f984342ddb63eebb69e02cde494c3807dc272b", "committedDate": "2020-09-15T00:17:38Z", "message": "tmep"}, "afterCommit": {"oid": "fa1bfb8339634419e52e21a15e12a2ef431c094e", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/fa1bfb8339634419e52e21a15e12a2ef431c094e", "committedDate": "2020-09-15T00:42:25Z", "message": "tmep"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa1bfb8339634419e52e21a15e12a2ef431c094e", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/fa1bfb8339634419e52e21a15e12a2ef431c094e", "committedDate": "2020-09-15T00:42:25Z", "message": "tmep"}, "afterCommit": {"oid": "1f10642c942fd4392103a96f2973dc6458c220d3", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1f10642c942fd4392103a96f2973dc6458c220d3", "committedDate": "2020-09-16T13:57:15Z", "message": "tmep"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f10642c942fd4392103a96f2973dc6458c220d3", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1f10642c942fd4392103a96f2973dc6458c220d3", "committedDate": "2020-09-16T13:57:15Z", "message": "tmep"}, "afterCommit": {"oid": "c18ddff6af342e224d0285621aa767cf322199f8", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c18ddff6af342e224d0285621aa767cf322199f8", "committedDate": "2020-09-16T20:23:47Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- Interfaces to be injected can be specified with the new\nfunction setInterfacesToInject in ROMClassCreationContext.\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c18ddff6af342e224d0285621aa767cf322199f8", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c18ddff6af342e224d0285621aa767cf322199f8", "committedDate": "2020-09-16T20:23:47Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- Interfaces to be injected can be specified with the new\nfunction setInterfacesToInject in ROMClassCreationContext.\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "691de960576d711bdd5002d9c1faa6ee9f6c13fa", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/691de960576d711bdd5002d9c1faa6ee9f6c13fa", "committedDate": "2020-09-17T21:02:26Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- Interfaces to be injected can be specified with the new\nfunction setInterfacesToInject in ROMClassCreationContext.\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "691de960576d711bdd5002d9c1faa6ee9f6c13fa", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/691de960576d711bdd5002d9c1faa6ee9f6c13fa", "committedDate": "2020-09-17T21:02:26Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- Interfaces to be injected can be specified with the new\nfunction setInterfacesToInject in ROMClassCreationContext.\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "804970e36f74c070be8c1eedcf12a7dcfce2f34f", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/804970e36f74c070be8c1eedcf12a7dcfce2f34f", "committedDate": "2020-09-21T19:05:16Z", "message": "pass to classfilewriter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "804970e36f74c070be8c1eedcf12a7dcfce2f34f", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/804970e36f74c070be8c1eedcf12a7dcfce2f34f", "committedDate": "2020-09-21T19:05:16Z", "message": "pass to classfilewriter"}, "afterCommit": {"oid": "647708b94568a026dba88360302c5e7a18d2c5fd", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/647708b94568a026dba88360302c5e7a18d2c5fd", "committedDate": "2020-09-21T01:49:04Z", "message": "dummy interface"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cfb32d2a9bf1c74ab3c317bebe784183c0546ccc", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/cfb32d2a9bf1c74ab3c317bebe784183c0546ccc", "committedDate": "2020-09-22T13:30:41Z", "message": "passing to classfilewriter"}, "afterCommit": {"oid": "7a9a39b4fcae7a396bed437a299252c1c2f5bbc9", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7a9a39b4fcae7a396bed437a299252c1c2f5bbc9", "committedDate": "2020-09-22T13:33:16Z", "message": "passing to classfilewriter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a9a39b4fcae7a396bed437a299252c1c2f5bbc9", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7a9a39b4fcae7a396bed437a299252c1c2f5bbc9", "committedDate": "2020-09-22T13:33:16Z", "message": "passing to classfilewriter"}, "afterCommit": {"oid": "d939735a31f8492f04bb42f2d795528b169cd77f", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d939735a31f8492f04bb42f2d795528b169cd77f", "committedDate": "2020-09-23T17:02:25Z", "message": "memory fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d939735a31f8492f04bb42f2d795528b169cd77f", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d939735a31f8492f04bb42f2d795528b169cd77f", "committedDate": "2020-09-23T17:02:25Z", "message": "memory fix"}, "afterCommit": {"oid": "ce37f56b4db41478d7687617c3533554b3bcd5d5", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ce37f56b4db41478d7687617c3533554b3bcd5d5", "committedDate": "2020-09-24T20:38:02Z", "message": "memory fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce37f56b4db41478d7687617c3533554b3bcd5d5", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ce37f56b4db41478d7687617c3533554b3bcd5d5", "committedDate": "2020-09-24T20:38:02Z", "message": "memory fix"}, "afterCommit": {"oid": "46b53c4e61e988f0c9b54e528f7e658e463ed3ac", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/46b53c4e61e988f0c9b54e528f7e658e463ed3ac", "committedDate": "2020-09-25T03:00:57Z", "message": "memory fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "46b53c4e61e988f0c9b54e528f7e658e463ed3ac", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/46b53c4e61e988f0c9b54e528f7e658e463ed3ac", "committedDate": "2020-09-25T03:00:57Z", "message": "memory fix"}, "afterCommit": {"oid": "1a66987031e265095e9255854ede8106d5f57279", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1a66987031e265095e9255854ede8106d5f57279", "committedDate": "2020-09-28T15:09:06Z", "message": "memory fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dab126ca0b012c9a45e0296174289b12bda041d2", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/dab126ca0b012c9a45e0296174289b12bda041d2", "committedDate": "2020-09-28T16:45:39Z", "message": "Turned J9UTF8's to static, added initialization bool"}, "afterCommit": {"oid": "be9babe6e7fd085efaab333319d84091abfacbe6", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/be9babe6e7fd085efaab333319d84091abfacbe6", "committedDate": "2020-09-28T19:53:54Z", "message": "Turned J9UTF8's to static, added initialization bool"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be9babe6e7fd085efaab333319d84091abfacbe6", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/be9babe6e7fd085efaab333319d84091abfacbe6", "committedDate": "2020-09-28T19:53:54Z", "message": "Turned J9UTF8's to static, added initialization bool"}, "afterCommit": {"oid": "b97870a6b41588ae35a9b985486d5775f49b9aab", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b97870a6b41588ae35a9b985486d5775f49b9aab", "committedDate": "2020-09-29T21:11:46Z", "message": "Turned J9UTF8's to static, added initialization bool"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b97870a6b41588ae35a9b985486d5775f49b9aab", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b97870a6b41588ae35a9b985486d5775f49b9aab", "committedDate": "2020-09-29T21:11:46Z", "message": "Turned J9UTF8's to static, added initialization bool"}, "afterCommit": {"oid": "ef216dcc7db88b654838996f4ece5d0d9540f5a5", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ef216dcc7db88b654838996f4ece5d0d9540f5a5", "committedDate": "2020-10-01T15:27:36Z", "message": "Fixed ClassFileWriter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef216dcc7db88b654838996f4ece5d0d9540f5a5", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ef216dcc7db88b654838996f4ece5d0d9540f5a5", "committedDate": "2020-10-01T15:27:36Z", "message": "Fixed ClassFileWriter"}, "afterCommit": {"oid": "9e7b71068743350d0c44f1ec657e5c96d56b3909", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9e7b71068743350d0c44f1ec657e5c96d56b3909", "committedDate": "2020-10-01T20:04:23Z", "message": "Fixed ClassFileWriter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "65ec4ce189c7170eb196f3a76e5e6833e128ab4a", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/65ec4ce189c7170eb196f3a76e5e6833e128ab4a", "committedDate": "2020-10-05T15:07:15Z", "message": "Do checks before creating interface Array"}, "afterCommit": {"oid": "fd75700658ae0317708f64b61368af89f01c5265", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/fd75700658ae0317708f64b61368af89f01c5265", "committedDate": "2020-10-05T17:23:23Z", "message": "fix static allocation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd75700658ae0317708f64b61368af89f01c5265", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/fd75700658ae0317708f64b61368af89f01c5265", "committedDate": "2020-10-05T17:23:23Z", "message": "fix static allocation"}, "afterCommit": {"oid": "ea412e564af644f09399fb172d5c73db37acc305", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ea412e564af644f09399fb172d5c73db37acc305", "committedDate": "2020-10-05T18:49:15Z", "message": "fix static allocation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88b48b7b154062fdf3b4da40761cfb6fa20e0764", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/88b48b7b154062fdf3b4da40761cfb6fa20e0764", "committedDate": "2020-10-08T20:41:17Z", "message": "changed to singleton injection array"}, "afterCommit": {"oid": "78541118718b711fd2ea345cb1a4d1b63947b3dc", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/78541118718b711fd2ea345cb1a4d1b63947b3dc", "committedDate": "2020-10-08T20:50:58Z", "message": "changed to singleton injection array"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78541118718b711fd2ea345cb1a4d1b63947b3dc", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/78541118718b711fd2ea345cb1a4d1b63947b3dc", "committedDate": "2020-10-08T20:50:58Z", "message": "changed to singleton injection array"}, "afterCommit": {"oid": "20751ba8afcb96b19d7beef272e0e567e3d60c76", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/20751ba8afcb96b19d7beef272e0e567e3d60c76", "committedDate": "2020-10-09T18:42:14Z", "message": "changed to singleton injection array"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20751ba8afcb96b19d7beef272e0e567e3d60c76", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/20751ba8afcb96b19d7beef272e0e567e3d60c76", "committedDate": "2020-10-09T18:42:14Z", "message": "changed to singleton injection array"}, "afterCommit": {"oid": "3b6ee2c4929af5c5e7058caa79584d08a7d3f8a6", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3b6ee2c4929af5c5e7058caa79584d08a7d3f8a6", "committedDate": "2020-10-13T19:03:53Z", "message": "changed to singleton injection array"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b6ee2c4929af5c5e7058caa79584d08a7d3f8a6", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3b6ee2c4929af5c5e7058caa79584d08a7d3f8a6", "committedDate": "2020-10-13T19:03:53Z", "message": "changed to singleton injection array"}, "afterCommit": {"oid": "57018be2fff1e7cade914b2c2bcbca2dfa63cc4f", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/57018be2fff1e7cade914b2c2bcbca2dfa63cc4f", "committedDate": "2020-10-16T20:15:19Z", "message": "changed to singleton injection array"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c3c50dd2cf0f3fd5b57b5cb0e0790383e3d2a88", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0c3c50dd2cf0f3fd5b57b5cb0e0790383e3d2a88", "committedDate": "2020-10-19T14:20:43Z", "message": "Comparing cursor fix"}, "afterCommit": {"oid": "f5b612947b48ae5e600b0a0398ee59ab6f1a1321", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f5b612947b48ae5e600b0a0398ee59ab6f1a1321", "committedDate": "2020-10-19T16:17:41Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5b612947b48ae5e600b0a0398ee59ab6f1a1321", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f5b612947b48ae5e600b0a0398ee59ab6f1a1321", "committedDate": "2020-10-19T16:17:41Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "3db96308e599ea030eb69b3ef857182923b88576", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3db96308e599ea030eb69b3ef857182923b88576", "committedDate": "2020-10-19T18:41:12Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3db96308e599ea030eb69b3ef857182923b88576", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3db96308e599ea030eb69b3ef857182923b88576", "committedDate": "2020-10-19T18:41:12Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "54613c5467280cd710b8111609c044136837bd2c", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/54613c5467280cd710b8111609c044136837bd2c", "committedDate": "2020-10-19T18:58:14Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54613c5467280cd710b8111609c044136837bd2c", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/54613c5467280cd710b8111609c044136837bd2c", "committedDate": "2020-10-19T18:58:14Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "3100f7b706422ee3852e828163555ceffd90bb3b", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3100f7b706422ee3852e828163555ceffd90bb3b", "committedDate": "2020-10-19T19:19:35Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3100f7b706422ee3852e828163555ceffd90bb3b", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3100f7b706422ee3852e828163555ceffd90bb3b", "committedDate": "2020-10-19T19:19:35Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "92d803d4f2569e2a83b8b2a6085189d5fc70729c", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/92d803d4f2569e2a83b8b2a6085189d5fc70729c", "committedDate": "2020-10-19T21:15:29Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92d803d4f2569e2a83b8b2a6085189d5fc70729c", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/92d803d4f2569e2a83b8b2a6085189d5fc70729c", "committedDate": "2020-10-19T21:15:29Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "3a48f7eefef6345d4499a12c29afb3a086a7da61", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3a48f7eefef6345d4499a12c29afb3a086a7da61", "committedDate": "2020-10-20T13:53:25Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a48f7eefef6345d4499a12c29afb3a086a7da61", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3a48f7eefef6345d4499a12c29afb3a086a7da61", "committedDate": "2020-10-20T13:53:25Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "edac384f4db63f09f7ff6abcc763b9739fb98471", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/edac384f4db63f09f7ff6abcc763b9739fb98471", "committedDate": "2020-10-20T18:58:03Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "edac384f4db63f09f7ff6abcc763b9739fb98471", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/edac384f4db63f09f7ff6abcc763b9739fb98471", "committedDate": "2020-10-20T18:58:03Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "d844b6dcdc28edff73d9c6125255b8263a345c96", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d844b6dcdc28edff73d9c6125255b8263a345c96", "committedDate": "2020-10-20T19:01:04Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d844b6dcdc28edff73d9c6125255b8263a345c96", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d844b6dcdc28edff73d9c6125255b8263a345c96", "committedDate": "2020-10-20T19:01:04Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "f3fe2b0a117deca8e45f54358e2fca94e441b362", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f3fe2b0a117deca8e45f54358e2fca94e441b362", "committedDate": "2020-10-20T19:35:19Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNzQ0MDc3", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-513744077", "createdAt": "2020-10-21T14:22:14Z", "commit": {"oid": "f3fe2b0a117deca8e45f54358e2fca94e441b362"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDoyMjoxNFrOHlvGRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDoyMjoxNFrOHlvGRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzMTAxNQ==", "bodyText": "@tajila\nShould I add a boolean to represent injection, or is it fine to continue to check if injection is needed by doing _injectionInfo->numOfInterfaces > 0?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r509331015", "createdAt": "2020-10-21T14:22:14Z", "author": {"login": "OussamaSaoudi"}, "path": "runtime/bcutil/ROMClassBuilder.hpp", "diffHunk": "@@ -37,6 +37,12 @@\n #include \"ClassFileParser.hpp\"  /* included to obtain definition of VerifyClassFunction */\n #include \"StringInternTable.hpp\"\n \n+#define MAX_INTERFACE_INJECTION 2\n+typedef struct InjectionInfo{\n+\tJ9UTF8 *interfaces[MAX_INTERFACE_INJECTION];\n+\tU_16 numOfInterfaces;\n+} InjectionInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3fe2b0a117deca8e45f54358e2fca94e441b362"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNzU0ODc2", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-513754876", "createdAt": "2020-10-21T14:31:47Z", "commit": {"oid": "f3fe2b0a117deca8e45f54358e2fca94e441b362"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDozMTo0N1rOHlvm1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxNDozMTo0N1rOHlvm1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTMzOTM1MA==", "bodyText": "Would this cause an issue if J9VM_OPT_VALHALLA_VALUE_TYPES is not defined?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r509339350", "createdAt": "2020-10-21T14:31:47Z", "author": {"login": "OussamaSaoudi"}, "path": "runtime/oti/vmconstantpool.xml", "diffHunk": "@@ -31,6 +31,8 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n \t<classref name=\"java/lang/InstantiationError\"/>\n \t<classref name=\"java/lang/UnsatisfiedLinkError\"/>\n \t<classref name=\"java/lang/InternalError\"/>\n+\t<classref name=\"java/lang/IdentityObject\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3fe2b0a117deca8e45f54358e2fca94e441b362"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3fe2b0a117deca8e45f54358e2fca94e441b362", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f3fe2b0a117deca8e45f54358e2fca94e441b362", "committedDate": "2020-10-20T19:35:19Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "9f7d2611e4605e90d1a88ff8aff883ba6a2d5413", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9f7d2611e4605e90d1a88ff8aff883ba6a2d5413", "committedDate": "2020-10-21T14:33:07Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f7d2611e4605e90d1a88ff8aff883ba6a2d5413", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9f7d2611e4605e90d1a88ff8aff883ba6a2d5413", "committedDate": "2020-10-21T14:33:07Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "0818464c83e22d53d2dfee8d49916cf409209b7c", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0818464c83e22d53d2dfee8d49916cf409209b7c", "committedDate": "2020-10-21T15:32:10Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0818464c83e22d53d2dfee8d49916cf409209b7c", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0818464c83e22d53d2dfee8d49916cf409209b7c", "committedDate": "2020-10-21T15:32:10Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "2a63e75a7546c6129c01c137e35ab11b2baa1ab5", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2a63e75a7546c6129c01c137e35ab11b2baa1ab5", "committedDate": "2020-10-21T16:35:52Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf5210b4c6f34b68e5498850243be4b4aa893d44", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/cf5210b4c6f34b68e5498850243be4b4aa893d44", "committedDate": "2020-10-30T15:41:16Z", "message": "Checking for empty class"}, "afterCommit": {"oid": "2a63e75a7546c6129c01c137e35ab11b2baa1ab5", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2a63e75a7546c6129c01c137e35ab11b2baa1ab5", "committedDate": "2020-10-21T16:35:52Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "235760f893c35bcdf5c97112cae1d2fd20b225f0", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/235760f893c35bcdf5c97112cae1d2fd20b225f0", "committedDate": "2020-10-30T16:53:25Z", "message": "removed Dummy Interface"}, "afterCommit": {"oid": "2a80328443fa5124658aee0dcb798ea9bc97f637", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2a80328443fa5124658aee0dcb798ea9bc97f637", "committedDate": "2020-10-30T22:58:32Z", "message": "removed Dummy Interface"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a80328443fa5124658aee0dcb798ea9bc97f637", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2a80328443fa5124658aee0dcb798ea9bc97f637", "committedDate": "2020-10-30T22:58:32Z", "message": "removed Dummy Interface"}, "afterCommit": {"oid": "3e271c1a89fa16f15606c59fa3d74c7ce18103fa", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3e271c1a89fa16f15606c59fa3d74c7ce18103fa", "committedDate": "2020-10-30T22:57:55Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e271c1a89fa16f15606c59fa3d74c7ce18103fa", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3e271c1a89fa16f15606c59fa3d74c7ce18103fa", "committedDate": "2020-10-30T22:57:55Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "3f8b234cec562737f28dd512d848513c238a8c81", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3f8b234cec562737f28dd512d848513c238a8c81", "committedDate": "2020-11-03T14:36:39Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "644da07e2c515567aa115ce0a9ec2914e6a812c6", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/644da07e2c515567aa115ce0a9ec2914e6a812c6", "committedDate": "2020-11-03T15:00:37Z", "message": "remove dummyobject"}, "afterCommit": {"oid": "b9cbbe2ac8523cb4f3383733d13ee5707578792e", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b9cbbe2ac8523cb4f3383733d13ee5707578792e", "committedDate": "2020-11-04T14:57:28Z", "message": "remove dummyobject"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac3f9624db556a069c8220ddb2fc7214a0dc9718", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ac3f9624db556a069c8220ddb2fc7214a0dc9718", "committedDate": "2020-11-04T18:34:52Z", "message": "enable valuetypes"}, "afterCommit": {"oid": "7286ab7e77bec67a029b4256ad4e5008c2f0f931", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7286ab7e77bec67a029b4256ad4e5008c2f0f931", "committedDate": "2020-11-05T17:56:05Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7286ab7e77bec67a029b4256ad4e5008c2f0f931", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7286ab7e77bec67a029b4256ad4e5008c2f0f931", "committedDate": "2020-11-05T17:56:05Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "e1d9db5cfd6acd190c8825c976a1b0d8db449bc0", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e1d9db5cfd6acd190c8825c976a1b0d8db449bc0", "committedDate": "2020-11-05T19:12:51Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e1d9db5cfd6acd190c8825c976a1b0d8db449bc0", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e1d9db5cfd6acd190c8825c976a1b0d8db449bc0", "committedDate": "2020-11-05T19:12:51Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0ae7b5592728ca6b8ccd1af13003e946b2a507c7", "committedDate": "2020-11-06T20:01:29Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNTMwMjMy", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-532530232", "createdAt": "2020-11-17T16:06:10Z", "commit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjowNjoxMVrOH08uLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNjo0MTowNFrOH0-dUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4Mjg2Mg==", "bodyText": "for consistency please change all IdentityObject -> IdentityInterface", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525282862", "createdAt": "2020-11-17T16:06:11Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.cpp", "diffHunk": "@@ -656,6 +660,9 @@ class ClassFileOracle::InterfaceVisitor : public ClassFileOracle::ConstantPoolIn\n \tInterfaceVisitor(ClassFileOracle *classFileOracle, ConstantPoolMap *constantPoolMap) :\n \t\t_classFileOracle(classFileOracle),\n \t\t_constantPoolMap(constantPoolMap),\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t\t_wasIdentityObjectSeen(false),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4NDA0NA==", "bodyText": "No longer true, InlineObject is not in the current plans", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525284044", "createdAt": "2020-11-17T16:07:41Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.cpp", "diffHunk": "@@ -693,9 +714,24 @@ ClassFileOracle::walkInterfaces()\n \tROMClassVerbosePhase v(_context, ClassFileInterfacesAnalysis);\n \n \tInterfaceVisitor interfaceVisitor(this, _constantPoolMap);\n-\tinterfacesDo(&interfaceVisitor);\n+\tinterfacesDo(&interfaceVisitor, 0);\n \t_isCloneable = interfaceVisitor.wasCloneableSeen();\n \t_isSerializable = interfaceVisitor.wasSerializableSeen();\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t/* TODO current prototype still uses the flag, this will be updated to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4NTIzMA==", "bodyText": "Update the comment to describe how numOfInjectedInterfaces is being used", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525285230", "createdAt": "2020-11-17T16:09:13Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.hpp", "diffHunk": "@@ -813,13 +813,16 @@ class RecordComponentIterator\n \t/*\n \t * Iterate over the constant pool indices corresponding to interface names (UTF8s).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4NzE3Mg==", "bodyText": "the actual name hasn't been determined yet", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525287172", "createdAt": "2020-11-17T16:11:33Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.cpp", "diffHunk": "@@ -656,6 +660,9 @@ class ClassFileOracle::InterfaceVisitor : public ClassFileOracle::ConstantPoolIn\n \tInterfaceVisitor(ClassFileOracle *classFileOracle, ConstantPoolMap *constantPoolMap) :\n \t\t_classFileOracle(classFileOracle),\n \t\t_constantPoolMap(constantPoolMap),\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\t\t_wasIdentityObjectSeen(false),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4Mjg2Mg=="}, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI4ODI0Mw==", "bodyText": "there is no need for both _injectedInterfaces and _numOfInjectedInterfaces", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525288243", "createdAt": "2020-11-17T16:13:05Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileWriter.hpp", "diffHunk": "@@ -74,6 +74,8 @@ class ClassFileWriter {\n \tbool _isAnon;\n \tJ9UTF8* _anonClassName;\n \tJ9UTF8* _originalClassName;\n+\tbool _injectedInterfaces;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5MTI1Ng==", "bodyText": "instead of doings you could just check if (cpIndex > classFileMaxCPIndex), if so then skip the check", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525291256", "createdAt": "2020-11-17T16:16:57Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,16 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n-\n-\t\t\t\t\tif ( J9UTF8_LENGTH(utf8) != _classFileOracle->getUTF8Length(cpIndex) ) {\n+\t\t\t\t\tbool isInjected = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTI5MjEwMQ==", "bodyText": "rename to InterfaceInjectionInfo *_interfaceInjectionInfo; for clarity", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525292101", "createdAt": "2020-11-17T16:18:00Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.hpp", "diffHunk": "@@ -121,8 +127,10 @@ class ROMClassBuilder\n \tUDATA _anonClassNameBufferSize;\n \tU_8 *_bufferManagerBuffer;\n \tStringInternTable _stringInternTable;\n+\tInjectionInfo *_injectionInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMwOTkyMg==", "bodyText": "formatting InjectionInfo {", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525309922", "createdAt": "2020-11-17T16:39:39Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.hpp", "diffHunk": "@@ -37,6 +37,12 @@\n #include \"ClassFileParser.hpp\"  /* included to obtain definition of VerifyClassFunction */\n #include \"StringInternTable.hpp\"\n \n+#define MAX_INTERFACE_INJECTION 1\n+typedef struct InjectionInfo{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMxMTMxMw==", "bodyText": "i think you can avaoid the allocation all together by just declaring it as an inline struct", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r525311313", "createdAt": "2020-11-17T16:41:04Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -248,7 +252,31 @@ ROMClassBuilder::buildROMClass(ROMClassCreationContext *context)\n \tcontext->recordLoadEnd(result);\n \treturn result;\n }\n+BuildResult\n+ROMClassBuilder::injectInterfaces(ClassFileOracle *classFileOracle)\n+{\n+\tPORT_ACCESS_FROM_PORT(_portLibrary);\n+\tif (NULL == _injectionInfo) {\n+\t\t_injectionInfo = (InjectionInfo *) j9mem_allocate_memory(sizeof(InjectionInfo), J9MEM_CATEGORY_CLASSES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ae7b5592728ca6b8ccd1af13003e946b2a507c7", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0ae7b5592728ca6b8ccd1af13003e946b2a507c7", "committedDate": "2020-11-06T20:01:29Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "74dafc27deba8ea7f577163bb48c905bb77e2f96", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/74dafc27deba8ea7f577163bb48c905bb77e2f96", "committedDate": "2020-11-18T17:06:42Z", "message": "changed _injectedInterfaces in ClassFileWriter to use optionalFlags instead of extraModifiers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f7f4316a7224bbe994cdf64887d9f13f6f228ad", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7f7f4316a7224bbe994cdf64887d9f13f6f228ad", "committedDate": "2020-11-18T18:57:22Z", "message": "change injectionInfo to interfaceInjectionInfo"}, "afterCommit": {"oid": "f0479dbd93a9c4bdfa3a35f47fe60519633c0bf9", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f0479dbd93a9c4bdfa3a35f47fe60519633c0bf9", "committedDate": "2020-11-18T21:17:16Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0479dbd93a9c4bdfa3a35f47fe60519633c0bf9", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f0479dbd93a9c4bdfa3a35f47fe60519633c0bf9", "committedDate": "2020-11-18T21:17:16Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "a4a963f00f7f9da9390737ee069361f88d1cf8bf", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a4a963f00f7f9da9390737ee069361f88d1cf8bf", "committedDate": "2020-11-19T17:47:10Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4a963f00f7f9da9390737ee069361f88d1cf8bf", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a4a963f00f7f9da9390737ee069361f88d1cf8bf", "committedDate": "2020-11-19T17:47:10Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "10ac63984cf072c71a0de0dd86e3a262d43537b1", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/10ac63984cf072c71a0de0dd86e3a262d43537b1", "committedDate": "2020-11-19T20:02:07Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10ac63984cf072c71a0de0dd86e3a262d43537b1", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/10ac63984cf072c71a0de0dd86e3a262d43537b1", "committedDate": "2020-11-19T20:02:07Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "9f400b00e226916325d1428b38be270bc68e4932", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9f400b00e226916325d1428b38be270bc68e4932", "committedDate": "2020-11-23T20:11:56Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f400b00e226916325d1428b38be270bc68e4932", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9f400b00e226916325d1428b38be270bc68e4932", "committedDate": "2020-11-23T20:11:56Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "a4a963f00f7f9da9390737ee069361f88d1cf8bf", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a4a963f00f7f9da9390737ee069361f88d1cf8bf", "committedDate": "2020-11-19T17:47:10Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4a963f00f7f9da9390737ee069361f88d1cf8bf", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a4a963f00f7f9da9390737ee069361f88d1cf8bf", "committedDate": "2020-11-19T17:47:10Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "9f400b00e226916325d1428b38be270bc68e4932", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9f400b00e226916325d1428b38be270bc68e4932", "committedDate": "2020-11-23T20:11:56Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f400b00e226916325d1428b38be270bc68e4932", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9f400b00e226916325d1428b38be270bc68e4932", "committedDate": "2020-11-23T20:11:56Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "15afa91e4682160f4cf9229db568bae9ca74fd3b", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/15afa91e4682160f4cf9229db568bae9ca74fd3b", "committedDate": "2021-01-04T17:49:02Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "15afa91e4682160f4cf9229db568bae9ca74fd3b", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/15afa91e4682160f4cf9229db568bae9ca74fd3b", "committedDate": "2021-01-04T17:49:02Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "6a24bed1e81216dc7b7c0e08f2a2bacda6f998f7", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6a24bed1e81216dc7b7c0e08f2a2bacda6f998f7", "committedDate": "2021-01-04T19:28:31Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a24bed1e81216dc7b7c0e08f2a2bacda6f998f7", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6a24bed1e81216dc7b7c0e08f2a2bacda6f998f7", "committedDate": "2021-01-04T19:28:31Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "351cfbca1c6c6217f2122b7212acebb01e9d88c7", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/351cfbca1c6c6217f2122b7212acebb01e9d88c7", "committedDate": "2021-01-04T19:36:05Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "351cfbca1c6c6217f2122b7212acebb01e9d88c7", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/351cfbca1c6c6217f2122b7212acebb01e9d88c7", "committedDate": "2021-01-04T19:36:05Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/921c0842c1d22c240269580cd7e338b982621440", "committedDate": "2021-01-04T21:28:40Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNDY4NDY1", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-561468465", "createdAt": "2021-01-05T02:04:06Z", "commit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "state": "COMMENTED", "comments": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjowNDowNlrOIOHkDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwMjoyMDo1NVrOIOH2JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NDg5Mg==", "bodyText": "needs ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551674892", "createdAt": "2021-01-05T02:04:06Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileWriter.cpp", "diffHunk": "@@ -78,6 +78,10 @@ ClassFileWriter::analyzeROMClass()\n \t\treturn;\n \t}\n \n+\tif (J9_ARE_ALL_BITS_SET(_romClass->optionalFlags,J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NDk3NQ==", "bodyText": "needs ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551674975", "createdAt": "2021-01-05T02:04:26Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.hpp", "diffHunk": "@@ -812,14 +812,19 @@ class RecordComponentIterator\n \n \t/*\n \t * Iterate over the constant pool indices corresponding to interface names (UTF8s).\n+\t * Also iterates over the injected interface names (UTF8s) in the \"extra\" cp slots.\n+\t * numOfInjectedInterfaces represents the number of extra slots containing the UTF8s.\n \t */\n-\tvoid interfacesDo(ConstantPoolIndexVisitor *visitor)\n+\tvoid interfacesDo(ConstantPoolIndexVisitor *visitor, U_16 numOfInjectedInterfaces)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTAwNw==", "bodyText": "same here", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675007", "createdAt": "2021-01-05T02:04:32Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.hpp", "diffHunk": "@@ -812,14 +812,19 @@ class RecordComponentIterator\n \n \t/*\n \t * Iterate over the constant pool indices corresponding to interface names (UTF8s).\n+\t * Also iterates over the injected interface names (UTF8s) in the \"extra\" cp slots.\n+\t * numOfInjectedInterfaces represents the number of extra slots containing the UTF8s.\n \t */\n-\tvoid interfacesDo(ConstantPoolIndexVisitor *visitor)\n+\tvoid interfacesDo(ConstantPoolIndexVisitor *visitor, U_16 numOfInjectedInterfaces)\n \t{\n \t\tU_16 *end = _classFile->interfaces + getInterfacesCount();\n \t\tfor (U_16 *interface = _classFile->interfaces; interface != end; ++interface) {\n \t\t\t/* Each interface is a constantClass, use slot1 to get at the underlying UTF8 */\n \t\t\tvisitor->visitConstantPoolIndex(U_16(_classFile->constantPool[ *interface ].slot1));\n \t\t}\n+\t\tfor (int i = 0; i < numOfInjectedInterfaces; i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTA4NA==", "bodyText": "same in this file", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675084", "createdAt": "2021-01-05T02:04:56Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileWriter.cpp", "diffHunk": "@@ -340,7 +344,7 @@ void\n ClassFileWriter::analyzeInterfaces()\n {\n \tJ9SRP * interfaceNames = J9ROMCLASS_INTERFACES(_romClass);\n-\tUDATA interfaceCount = _romClass->interfaceCount;\n+\tUDATA interfaceCount = _romClass->interfaceCount - _numOfInjectedInterfaces;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTIwOA==", "bodyText": "put a space after _romClass->optionalFlags,", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675208", "createdAt": "2021-01-05T02:05:18Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileWriter.cpp", "diffHunk": "@@ -78,6 +78,10 @@ ClassFileWriter::analyzeROMClass()\n \t\treturn;\n \t}\n \n+\tif (J9_ARE_ALL_BITS_SET(_romClass->optionalFlags,J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTMzMw==", "bodyText": "ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675333", "createdAt": "2021-01-05T02:05:51Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileWriter.hpp", "diffHunk": "@@ -74,6 +74,7 @@ class ClassFileWriter {\n \tbool _isAnon;\n \tJ9UTF8* _anonClassName;\n \tJ9UTF8* _originalClassName;\n+\tU_32 _numOfInjectedInterfaces;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTUwNg==", "bodyText": "space before 0 !=  is not needed", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675506", "createdAt": "2021-01-05T02:06:30Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,13 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n+\t\t\t\t\tif ( cpIndex > _classFileOracle->getConstantPoolCount() ) {\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n \n \t\t\t\t\tif ( J9UTF8_LENGTH(utf8) != _classFileOracle->getUTF8Length(cpIndex) ) {\n \t\t\t\t\t\tmarkUnEqual();\n-\t\t\t\t\t} else if (0 != memcmp(J9UTF8_DATA(utf8), _classFileOracle->getUTF8Data(cpIndex), J9UTF8_LENGTH(utf8))) {\n+\t\t\t\t\t} else if ( 0 != memcmp(J9UTF8_DATA(utf8), _classFileOracle->getUTF8Data(cpIndex), J9UTF8_LENGTH(utf8)) ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTU3Mw==", "bodyText": "space after  J9UTF8_LENGTH(utf8)) is not needed", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675573", "createdAt": "2021-01-05T02:06:43Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,13 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n+\t\t\t\t\tif ( cpIndex > _classFileOracle->getConstantPoolCount() ) {\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n \n \t\t\t\t\tif ( J9UTF8_LENGTH(utf8) != _classFileOracle->getUTF8Length(cpIndex) ) {\n \t\t\t\t\t\tmarkUnEqual();\n-\t\t\t\t\t} else if (0 != memcmp(J9UTF8_DATA(utf8), _classFileOracle->getUTF8Data(cpIndex), J9UTF8_LENGTH(utf8))) {\n+\t\t\t\t\t} else if ( 0 != memcmp(J9UTF8_DATA(utf8), _classFileOracle->getUTF8Data(cpIndex), J9UTF8_LENGTH(utf8)) ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTUwNg=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTc4Mw==", "bodyText": "ah I see the coding standard is different in this file", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675783", "createdAt": "2021-01-05T02:07:27Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,13 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n+\t\t\t\t\tif ( cpIndex > _classFileOracle->getConstantPoolCount() ) {\n+\t\t\t\t\t\tbreak;\n+\t\t\t\t\t}\n \n \t\t\t\t\tif ( J9UTF8_LENGTH(utf8) != _classFileOracle->getUTF8Length(cpIndex) ) {\n \t\t\t\t\t\tmarkUnEqual();\n-\t\t\t\t\t} else if (0 != memcmp(J9UTF8_DATA(utf8), _classFileOracle->getUTF8Data(cpIndex), J9UTF8_LENGTH(utf8))) {\n+\t\t\t\t\t} else if ( 0 != memcmp(J9UTF8_DATA(utf8), _classFileOracle->getUTF8Data(cpIndex), J9UTF8_LENGTH(utf8)) ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTUwNg=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTgxNg==", "bodyText": "needs ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551675816", "createdAt": "2021-01-05T02:07:36Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,13 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n+\t\t\t\t\tif ( cpIndex > _classFileOracle->getConstantPoolCount() ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NjEyOQ==", "bodyText": "should this be >= ?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551676129", "createdAt": "2021-01-05T02:08:41Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,13 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n+\t\t\t\t\tif ( cpIndex > _classFileOracle->getConstantPoolCount() ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTgxNg=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NjMyOQ==", "bodyText": "also add a comment indicating that cp index's aboive the cpCount are injected interfaces which should not be written into the classfile bytes", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551676329", "createdAt": "2021-01-05T02:09:33Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ComparingCursor.cpp", "diffHunk": "@@ -212,10 +212,13 @@ ComparingCursor::writeSRP(UDATA srpKey, DataType dataType)\n \t\t\t\t\tmarkUnEqual();\n \t\t\t\t} else {\n \t\t\t\t\tU_16 cpIndex = _srpKeyProducer->mapKeyToCfrConstantPoolIndex(srpKey);\n+\t\t\t\t\tif ( cpIndex > _classFileOracle->getConstantPoolCount() ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NTgxNg=="}, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NjU3MQ==", "bodyText": "the if check is not needed, j9mem_free_memory is going to do a NULL check", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551676571", "createdAt": "2021-01-05T02:10:20Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -84,6 +85,9 @@ ROMClassBuilder::~ROMClassBuilder()\n \tj9mem_free_memory(_classFileBuffer);\n \tj9mem_free_memory(_bufferManagerBuffer);\n \tj9mem_free_memory(_anonClassNameBuffer);\n+\tif (NULL != _interfaceInjectionInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NjU5NQ==", "bodyText": "ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551676595", "createdAt": "2021-01-05T02:10:25Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -66,7 +66,8 @@ ROMClassBuilder::ROMClassBuilder(J9JavaVM *javaVM, J9PortLibrary *portLibrary, U\n \t_bufferManagerBuffer(NULL),\n \t_anonClassNameBuffer(NULL),\n \t_anonClassNameBufferSize(0),\n-\t_stringInternTable(javaVM, portLibrary, maxStringInternTableSize)\n+\t_stringInternTable(javaVM, portLibrary, maxStringInternTableSize),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3NzM2MQ==", "bodyText": "this allocation can be avoided entirely since the number of interfaces is known statically", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551677361", "createdAt": "2021-01-05T02:13:24Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -248,7 +252,31 @@ ROMClassBuilder::buildROMClass(ROMClassCreationContext *context)\n \tcontext->recordLoadEnd(result);\n \treturn result;\n }\n+BuildResult\n+ROMClassBuilder::injectInterfaces(ClassFileOracle *classFileOracle)\n+{\n+\tPORT_ACCESS_FROM_PORT(_portLibrary);\n+\tif (NULL == _interfaceInjectionInfo) {\n+\t\t_interfaceInjectionInfo = (InterfaceInjectionInfo *) j9mem_allocate_memory(sizeof(InterfaceInjectionInfo), J9MEM_CATEGORY_CLASSES);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODEwNQ==", "bodyText": "You can reuse the BuildResult result = OK above. In fact BuildResult res = handleAnonClassName is an error, there is no need to define multiple BuildResult", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551678105", "createdAt": "2021-01-05T02:15:54Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -457,13 +485,18 @@ ROMClassBuilder::prepareAndLaydown( BufferManager *bufferManager, ClassFileParse\n \t\treturn classFileOracle.getBuildResult();\n \t}\n \n-\tSRPKeyProducer srpKeyProducer(&classFileOracle);\n+\tBuildResult injectRes = injectInterfaces(&classFileOracle);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODIzNg==", "bodyText": "ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551678236", "createdAt": "2021-01-05T02:16:19Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -84,6 +85,9 @@ ROMClassBuilder::~ROMClassBuilder()\n \tj9mem_free_memory(_classFileBuffer);\n \tj9mem_free_memory(_bufferManagerBuffer);\n \tj9mem_free_memory(_anonClassNameBuffer);\n+\tif (NULL != _interfaceInjectionInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODI2MA==", "bodyText": "ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551678260", "createdAt": "2021-01-05T02:16:25Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -248,7 +252,31 @@ ROMClassBuilder::buildROMClass(ROMClassCreationContext *context)\n \tcontext->recordLoadEnd(result);\n \treturn result;\n }\n+BuildResult", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODM2NA==", "bodyText": "ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551678364", "createdAt": "2021-01-05T02:16:43Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -457,13 +485,18 @@ ROMClassBuilder::prepareAndLaydown( BufferManager *bufferManager, ClassFileParse\n \t\treturn classFileOracle.getBuildResult();\n \t}\n \n-\tSRPKeyProducer srpKeyProducer(&classFileOracle);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3ODQ3MQ==", "bodyText": "ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551678471", "createdAt": "2021-01-05T02:17:01Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.hpp", "diffHunk": "@@ -121,8 +127,10 @@ class ROMClassBuilder\n \tUDATA _anonClassNameBufferSize;\n \tU_8 *_bufferManagerBuffer;\n \tStringInternTable _stringInternTable;\n+\tInterfaceInjectionInfo *_interfaceInjectionInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3OTQ1Nw==", "bodyText": "use IDENTITY_OBJECT_NAME instead", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551679457", "createdAt": "2021-01-05T02:20:38Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.cpp", "diffHunk": "@@ -684,16 +691,30 @@ class ClassFileOracle::InterfaceVisitor : public ClassFileOracle::ConstantPoolIn\n \t\t\t_wasSerializableSeen = true;\n \t\t}\n #undef SERIALIZABLE_NAME\n+\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+#define JAVA_LANG_IDENTITYINTERFACE \"java/lang/IdentityInterface\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTY3OTUyNQ==", "bodyText": "use JAVA_LANG_IDENTITYINTERFACE instead", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r551679525", "createdAt": "2021-01-05T02:20:55Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -248,7 +252,31 @@ ROMClassBuilder::buildROMClass(ROMClassCreationContext *context)\n \tcontext->recordLoadEnd(result);\n \treturn result;\n }\n+BuildResult\n+ROMClassBuilder::injectInterfaces(ClassFileOracle *classFileOracle)\n+{\n+\tPORT_ACCESS_FROM_PORT(_portLibrary);\n+\tif (NULL == _interfaceInjectionInfo) {\n+\t\t_interfaceInjectionInfo = (InterfaceInjectionInfo *) j9mem_allocate_memory(sizeof(InterfaceInjectionInfo), J9MEM_CATEGORY_CLASSES);\n+\t\tif (NULL == _interfaceInjectionInfo) {\n+\t\t\tBuildResult res = OutOfMemory;\n+\t\t\treturn res;\n+\t\t}\n+\t}\n+\tU_32 numOfInterfaces = 0;\n \n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\tif (classFileOracle->needsIdentityInterface()) {\n+#define JAVA_LANG_IDENTITYINTERFACE \"java/lang/IdentityInterface\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "921c0842c1d22c240269580cd7e338b982621440", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/921c0842c1d22c240269580cd7e338b982621440", "committedDate": "2021-01-04T21:28:40Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "02b4ad45bf43751e51816e5cf054416294aa015c", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/02b4ad45bf43751e51816e5cf054416294aa015c", "committedDate": "2021-01-06T20:55:54Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02b4ad45bf43751e51816e5cf054416294aa015c", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/02b4ad45bf43751e51816e5cf054416294aa015c", "committedDate": "2021-01-06T20:55:54Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "1351c2f77affeb7c5f5d4f1aea621acc37e03417", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1351c2f77affeb7c5f5d4f1aea621acc37e03417", "committedDate": "2021-01-07T15:58:51Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1351c2f77affeb7c5f5d4f1aea621acc37e03417", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1351c2f77affeb7c5f5d4f1aea621acc37e03417", "committedDate": "2021-01-07T15:58:51Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b6e57ef700d9820d24b9125ba96f9ef3f710f205", "committedDate": "2021-01-07T17:53:00Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY0MzM3OTkz", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-564337993", "createdAt": "2021-01-08T15:16:22Z", "commit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNToxNjoyMlrOIQVrUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQxNToxODo0M1rOIQVxAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwMzI4Mw==", "bodyText": "I dont think the preprocessor macros work for DDR code. @JasonFengJ9 can you confirm?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r554003283", "createdAt": "2021-01-08T15:16:22Z", "author": {"login": "tajila"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "diffHunk": "@@ -27,6 +27,9 @@\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_ENCLOSING_METHOD;\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_GENERIC_SIGNATURE;\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE;\n+/*[IF INLINE-TYPES]*/\n+import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwMzk1OA==", "bodyText": "dont need ifdefs for flags", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r554003958", "createdAt": "2021-01-08T15:17:29Z", "author": {"login": "tajila"}, "path": "runtime/oti/cfr.h", "diffHunk": "@@ -948,6 +948,10 @@ typedef struct J9CfrClassFile {\n #define CFR_FOUND_CHARS_IN_EXTENDED_MUE_FORM 0x1\n #define CFR_FOUND_SEPARATOR_IN_MUE_FORM 0x2\n \n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwNDA5OA==", "bodyText": "dont need ifdefs for flags", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r554004098", "createdAt": "2021-01-08T15:17:41Z", "author": {"login": "tajila"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -252,6 +252,9 @@\n #define J9_ROMCLASS_OPTINFO_TYPE_ANNOTATION_INFO 0x400000\n #define J9_ROMCLASS_OPTINFO_RECORD_ATTRIBUTE 0x800000\n #define J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE 0x1000000\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwNDQxMQ==", "bodyText": "You can define the flag unconditionally in j9nonbuilder.h", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r554004411", "createdAt": "2021-01-08T15:18:09Z", "author": {"login": "tajila"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/OptInfo.java", "diffHunk": "@@ -27,6 +27,9 @@\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_ENCLOSING_METHOD;\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_GENERIC_SIGNATURE;\n import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_PERMITTEDSUBCLASSES_ATTRIBUTE;\n+/*[IF INLINE-TYPES]*/\n+import static com.ibm.j9ddr.vm29.structure.J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwMzI4Mw=="}, "originalCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDAwNDczNg==", "bodyText": "look at openj9/debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/ValueTypeHelper.java you can use areValueTypesSupported to determine if VT is enabled for the core file", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r554004736", "createdAt": "2021-01-08T15:18:43Z", "author": {"login": "tajila"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -702,7 +702,12 @@ void allSlotsInOptionalInfoDo() throws CorruptDataException\n \t\t\tpermittedSubclassAttributeDo(U32Pointer.cast(cursor.get()));\n \t\t\tcursor = cursor.add(1);\n \t\t}\n-\n+/*[IF INLINE-TYPES]*/\n+\t\tif (romClass.optionalFlags().allBitsIn(J9NonbuilderConstants.J9_ROMCLASS_OPTINFO_INJECTED_INTERFACE_INFO)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6e57ef700d9820d24b9125ba96f9ef3f710f205", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b6e57ef700d9820d24b9125ba96f9ef3f710f205", "committedDate": "2021-01-07T17:53:00Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>"}, "afterCommit": {"oid": "63a850076dfbbf46e10a9c84c4027d1f205b5875", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/63a850076dfbbf46e10a9c84c4027d1f205b5875", "committedDate": "2021-01-11T16:24:55Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3Mjk1MDAx", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-567295001", "createdAt": "2021-01-13T14:49:01Z", "commit": {"oid": "63a850076dfbbf46e10a9c84c4027d1f205b5875"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNDo0OTowMVrOISynXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNDo1NDoxOVrOISy4PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU3NDU1OQ==", "bodyText": "space between if and (, same with ){", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r556574559", "createdAt": "2021-01-13T14:49:01Z", "author": {"login": "tajila"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -702,7 +703,12 @@ void allSlotsInOptionalInfoDo() throws CorruptDataException\n \t\t\tpermittedSubclassAttributeDo(U32Pointer.cast(cursor.get()));\n \t\t\tcursor = cursor.add(1);\n \t\t}\n-\n+\t\tif(ValueTypeHelper.getValueTypeHelper().areValueTypesSupported()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63a850076dfbbf46e10a9c84c4027d1f205b5875"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU3ODYwMw==", "bodyText": "dont need to define this here since its defined in cfr.h", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r556578603", "createdAt": "2021-01-13T14:53:59Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ClassFileOracle.cpp", "diffHunk": "@@ -684,16 +691,30 @@ class ClassFileOracle::InterfaceVisitor : public ClassFileOracle::ConstantPoolIn\n \t\t\t_wasSerializableSeen = true;\n \t\t}\n #undef SERIALIZABLE_NAME\n+\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+#define IDENTITY_OBJECT_NAME \"java/lang/IdentityInterface\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63a850076dfbbf46e10a9c84c4027d1f205b5875"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjU3ODg3Nw==", "bodyText": "same here", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r556578877", "createdAt": "2021-01-13T14:54:19Z", "author": {"login": "tajila"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -249,6 +249,21 @@ ROMClassBuilder::buildROMClass(ROMClassCreationContext *context)\n \treturn result;\n }\n \n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+BuildResult\n+ROMClassBuilder::injectInterfaces(ClassFileOracle *classFileOracle)\n+{\n+\tU_32 numOfInterfaces = 0;\n+\tif (classFileOracle->needsIdentityInterface()) {\n+#define IDENTITY_OBJECT_NAME \"java/lang/IdentityInterface\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63a850076dfbbf46e10a9c84c4027d1f205b5875"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63a850076dfbbf46e10a9c84c4027d1f205b5875", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/63a850076dfbbf46e10a9c84c4027d1f205b5875", "committedDate": "2021-01-11T16:24:55Z", "message": "Adding Injection of Interfaces and IdentityObject Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityObject which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "7e0466f341b5fc6430c6ed9b4b0c0a4b9d95faf4", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7e0466f341b5fc6430c6ed9b4b0c0a4b9d95faf4", "committedDate": "2021-01-13T20:12:30Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e0466f341b5fc6430c6ed9b4b0c0a4b9d95faf4", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7e0466f341b5fc6430c6ed9b4b0c0a4b9d95faf4", "committedDate": "2021-01-13T20:12:30Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/839f2642af2f1b9f5ad5cf414dd766100598a524", "committedDate": "2021-01-13T20:17:47Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3NTg5ODEy", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-567589812", "createdAt": "2021-01-13T20:24:30Z", "commit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDoyNDozMFrOITAxQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDoyNDozMFrOITAxQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgwNjQ2Nw==", "bodyText": "@tajila I created an abstract class here to check if it contains the IdentityInterface. Is there another way to test the abstract class, or is this fine? Would I want to populate the class with methods and fields, or simply leave it blank?", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r556806467", "createdAt": "2021-01-13T20:24:30Z", "author": {"login": "OussamaSaoudi"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -3029,7 +3030,41 @@ static public void testUnresolvedPutFieldUse() throws Throwable {\n \t\t\t}\n \t\t}\n \t}\n-\t\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnValueType() throws Throwable {\n+\t\tString fields[] = {\"longField:J\"};\n+\t\tClass valueClass = ValueTypeGenerator.generateValueClass(\"testIdentityObjectOnValueType\", fields);\n+\t\tassertFalse(Arrays.asList(valueClass.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnAbstract() throws Throwable {\n+\t\tassertFalse(Arrays.asList(AbstractClass.class.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\tprivate static abstract class AbstractClass {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczMzQ5ODU2", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-573349856", "createdAt": "2021-01-21T13:55:26Z", "commit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxMzo1NToyNlrOIX3itw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxMzo1OToyMFrOIX3ucQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTg5ODE2Nw==", "bodyText": "formatting with ){", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r561898167", "createdAt": "2021-01-21T13:55:26Z", "author": {"login": "tajila"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/tools/ddrinteractive/RomClassWalker.java", "diffHunk": "@@ -702,7 +703,12 @@ void allSlotsInOptionalInfoDo() throws CorruptDataException\n \t\t\tpermittedSubclassAttributeDo(U32Pointer.cast(cursor.get()));\n \t\t\tcursor = cursor.add(1);\n \t\t}\n-\n+\t\tif (ValueTypeHelper.getValueTypeHelper().areValueTypesSupported()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTkwMDk0Mw==", "bodyText": "naming: call this refClass", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r561900943", "createdAt": "2021-01-21T13:59:00Z", "author": {"login": "tajila"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -3029,7 +3030,41 @@ static public void testUnresolvedPutFieldUse() throws Throwable {\n \t\t\t}\n \t\t}\n \t}\n-\t\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnValueType() throws Throwable {\n+\t\tString fields[] = {\"longField:J\"};\n+\t\tClass valueClass = ValueTypeGenerator.generateValueClass(\"testIdentityObjectOnValueType\", fields);\n+\t\tassertFalse(Arrays.asList(valueClass.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnAbstract() throws Throwable {\n+\t\tassertFalse(Arrays.asList(AbstractClass.class.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\tprivate static abstract class AbstractClass {\n+\t\tprivate int x;\n+\t\tprivate int y;\n+\t\tpublic int getX(){\n+\t\t\treturn x;\n+\t\t}\n+\t\tpublic int getY(){\n+\t\t\treturn y;\n+\t\t}\n+\t}\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnJLObject() throws Throwable {\n+\t\tassertFalse(Arrays.asList(Object.class.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnRef() throws Throwable {\n+\t\tString fields[] = {\"longField:J\"};\n+\t\tClass valueClass = ValueTypeGenerator.generateRefClass(\"testIdentityObjectOnRef\", fields);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTkwMTE2OQ==", "bodyText": "thats fine", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r561901169", "createdAt": "2021-01-21T13:59:20Z", "author": {"login": "tajila"}, "path": "test/functional/Valhalla/src/org/openj9/test/lworld/ValueTypeTests.java", "diffHunk": "@@ -3029,7 +3030,41 @@ static public void testUnresolvedPutFieldUse() throws Throwable {\n \t\t\t}\n \t\t}\n \t}\n-\t\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnValueType() throws Throwable {\n+\t\tString fields[] = {\"longField:J\"};\n+\t\tClass valueClass = ValueTypeGenerator.generateValueClass(\"testIdentityObjectOnValueType\", fields);\n+\t\tassertFalse(Arrays.asList(valueClass.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\n+\t@Test(priority = 1)\n+\tstatic public void testIdentityObjectOnAbstract() throws Throwable {\n+\t\tassertFalse(Arrays.asList(AbstractClass.class.getInterfaces()).contains(IdentityInterface.class));\n+\t}\n+\tprivate static abstract class AbstractClass {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjgwNjQ2Nw=="}, "originalCommit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "839f2642af2f1b9f5ad5cf414dd766100598a524", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/839f2642af2f1b9f5ad5cf414dd766100598a524", "committedDate": "2021-01-13T20:17:47Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "eb47c02581385a9dd3eed3f38775244942a98129", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/eb47c02581385a9dd3eed3f38775244942a98129", "committedDate": "2021-01-21T14:38:15Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb47c02581385a9dd3eed3f38775244942a98129", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/eb47c02581385a9dd3eed3f38775244942a98129", "committedDate": "2021-01-21T14:38:15Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "b29fe15df252a58ef40ad8a872c313a0cf1554e6", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b29fe15df252a58ef40ad8a872c313a0cf1554e6", "committedDate": "2021-01-21T14:39:54Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3NzEzNjYz", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-577713663", "createdAt": "2021-01-27T20:04:58Z", "commit": {"oid": "b29fe15df252a58ef40ad8a872c313a0cf1554e6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b29fe15df252a58ef40ad8a872c313a0cf1554e6", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b29fe15df252a58ef40ad8a872c313a0cf1554e6", "committedDate": "2021-01-21T14:39:54Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "007ef9f95da477bb5bcc0a2a7579696ae08e436a", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/007ef9f95da477bb5bcc0a2a7579696ae08e436a", "committedDate": "2021-01-29T16:15:22Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "007ef9f95da477bb5bcc0a2a7579696ae08e436a", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/007ef9f95da477bb5bcc0a2a7579696ae08e436a", "committedDate": "2021-01-29T16:15:22Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "647fa4f4e620053c1a36687cd7c7fcf8d1577a49", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/647fa4f4e620053c1a36687cd7c7fcf8d1577a49", "committedDate": "2021-02-01T17:57:15Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "647fa4f4e620053c1a36687cd7c7fcf8d1577a49", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/647fa4f4e620053c1a36687cd7c7fcf8d1577a49", "committedDate": "2021-02-01T17:57:15Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "796263508b2ea9425c9ea4ef09bbf45076fba781", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/796263508b2ea9425c9ea4ef09bbf45076fba781", "committedDate": "2021-02-01T20:03:36Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgxNDg4MjE3", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-581488217", "createdAt": "2021-02-02T15:49:11Z", "commit": {"oid": "796263508b2ea9425c9ea4ef09bbf45076fba781"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxNTo0OToxMVrOIeXW6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQxNTo0OToxMVrOIeXW6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODcxMDg5MQ==", "bodyText": "Why is this being force loaded earlier than it would be by the default loading of the vmconstantpool classes?\nIt would be good to add a comment to describe why it's necessary this early (if it is)", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r568710891", "createdAt": "2021-02-02T15:49:11Z", "author": {"login": "DanHeidinga"}, "path": "runtime/jcl/common/jclcinit.c", "diffHunk": "@@ -632,6 +635,12 @@ initializeRequiredClasses(J9VMThread *vmThread, char* dllName)\n \tif (NULL == objectClass) {\n \t\treturn 1;\n \t}\n+#if defined(J9VM_OPT_VALHALLA_VALUE_TYPES)\n+\tidentityInterfaceClass = vmFuncs->internalFindKnownClass(vmThread, J9VMCONSTANTPOOL_JAVALANGIDENTITYINTERFACE, J9_FINDKNOWNCLASS_FLAG_NON_FATAL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "796263508b2ea9425c9ea4ef09bbf45076fba781"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "796263508b2ea9425c9ea4ef09bbf45076fba781", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/796263508b2ea9425c9ea4ef09bbf45076fba781", "committedDate": "2021-02-01T20:03:36Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "c8b434f767aeea0c5b4c6cfd11ea2fcec8e8f5d5", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c8b434f767aeea0c5b4c6cfd11ea2fcec8e8f5d5", "committedDate": "2021-02-03T15:08:55Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c8b434f767aeea0c5b4c6cfd11ea2fcec8e8f5d5", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c8b434f767aeea0c5b4c6cfd11ea2fcec8e8f5d5", "committedDate": "2021-02-03T15:08:55Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "38200858feca32e716a97e1b8ac4fb06911e5b3a", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/38200858feca32e716a97e1b8ac4fb06911e5b3a", "committedDate": "2021-02-03T15:22:09Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38200858feca32e716a97e1b8ac4fb06911e5b3a", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/38200858feca32e716a97e1b8ac4fb06911e5b3a", "committedDate": "2021-02-03T15:22:09Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "375cc6c4676290ea9f98b4092b425b59704ac5b3", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/375cc6c4676290ea9f98b4092b425b59704ac5b3", "committedDate": "2021-02-03T15:23:03Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgyNDg3NTQ3", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-582487547", "createdAt": "2021-02-03T15:27:14Z", "commit": {"oid": "375cc6c4676290ea9f98b4092b425b59704ac5b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QxNToyNzoxNFrOIfH6ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QxNToyNzoxNFrOIfH6ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTUwNjQ0Mg==", "bodyText": "we dont need this anymore, since we arent explicitly loading it", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r569506442", "createdAt": "2021-02-03T15:27:14Z", "author": {"login": "tajila"}, "path": "runtime/oti/vmconstantpool.xml", "diffHunk": "@@ -31,6 +31,7 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n \t<classref name=\"java/lang/InstantiationError\"/>\n \t<classref name=\"java/lang/UnsatisfiedLinkError\"/>\n \t<classref name=\"java/lang/InternalError\"/>\n+\t<classref name=\"java/lang/IdentityInterface\" flags=\"opt_valhallaValueTypes\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "375cc6c4676290ea9f98b4092b425b59704ac5b3"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "375cc6c4676290ea9f98b4092b425b59704ac5b3", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/375cc6c4676290ea9f98b4092b425b59704ac5b3", "committedDate": "2021-02-03T15:23:03Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "e010f60ce5c9bfa4a765708225582955f1b6d975", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e010f60ce5c9bfa4a765708225582955f1b6d975", "committedDate": "2021-02-03T15:57:13Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3NTc4Mzc5", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-587578379", "createdAt": "2021-02-10T12:59:07Z", "commit": {"oid": "e010f60ce5c9bfa4a765708225582955f1b6d975"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e010f60ce5c9bfa4a765708225582955f1b6d975", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e010f60ce5c9bfa4a765708225582955f1b6d975", "committedDate": "2021-02-03T15:57:13Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "d81541bdd0b0e5f4d7a81a3b7ca5aaaf8b3e3805", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d81541bdd0b0e5f4d7a81a3b7ca5aaaf8b3e3805", "committedDate": "2021-02-16T16:08:31Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d81541bdd0b0e5f4d7a81a3b7ca5aaaf8b3e3805", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d81541bdd0b0e5f4d7a81a3b7ca5aaaf8b3e3805", "committedDate": "2021-02-16T16:08:31Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "b86a0ab100c4af324a9cef553ee6be42762cd7bf", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b86a0ab100c4af324a9cef553ee6be42762cd7bf", "committedDate": "2021-02-16T18:40:11Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTk1NDY0NDY2", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#pullrequestreview-595464466", "createdAt": "2021-02-22T15:23:39Z", "commit": {"oid": "b86a0ab100c4af324a9cef553ee6be42762cd7bf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQxNToyMzozOVrOIpc-Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0yMlQxNToyMzozOVrOIpc-Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4MDMzNzIwMw==", "bodyText": "@tajila", "url": "https://github.com/eclipse-openj9/openj9/pull/10282#discussion_r580337203", "createdAt": "2021-02-22T15:23:39Z", "author": {"login": "OussamaSaoudi"}, "path": "test/functional/Java8andUp/src_110_up/org/openj9/test/java/lang/Test_Class.java", "diffHunk": "@@ -446,6 +446,7 @@ public void test_getMethods_subtest6() throws Exception {\n \tClzImpl clzImpl = new ClzImpl();\n \tfor (Method method : clzImpl.getClass().getMethods()) {\n \t\tfor (Class<?> anInterface : method.getDeclaringClass().getInterfaces()) {\n+\t\t\tif (anInterface == IdentityInterface.class) continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b86a0ab100c4af324a9cef553ee6be42762cd7bf"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c02fbad6e22d6b422ec7ea55f8d3e2bd83c73b45", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c02fbad6e22d6b422ec7ea55f8d3e2bd83c73b45", "committedDate": "2021-02-22T16:03:55Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b86a0ab100c4af324a9cef553ee6be42762cd7bf", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b86a0ab100c4af324a9cef553ee6be42762cd7bf", "committedDate": "2021-02-16T18:40:11Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}, "afterCommit": {"oid": "c02fbad6e22d6b422ec7ea55f8d3e2bd83c73b45", "author": {"user": {"login": "OussamaSaoudi", "name": null}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c02fbad6e22d6b422ec7ea55f8d3e2bd83c73b45", "committedDate": "2021-02-22T16:03:55Z", "message": "Adding Injection of Interfaces and IdentityInterface Interface\n\nAdded a new JVM mechanism to inject an interfacae into a class.\n- interfaces to be injected must be specified in the injectInterfaces\nmethod in ROMClassBuilder.cpp\n- Max number of interfaces defined by MAX_INTERFACE_INJECTION\n\nAdded a new interface IdentityInterface which specifies all non\nValueType objects. This interface is automatically injected\ninto any class which is not a ValueType.\n\nAdded testing to check that IdentityInterface is added to\nreference types and not abstract classes, valuetypes, or\njava/lang/Object.\n\nComparingCursor.cpp writeSRP function has case for SRP_TO_UTF8\nto skip equality check with the classFile.\n\nAdded new SRP to OPTInfo to carry information of the number of\ninterfaced that are to be injected.\n\nSigned-off-by: Oussama Saoudi <oussama.saoudi@ibm.com>\n\nsrpkeyproducer changes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 397, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}