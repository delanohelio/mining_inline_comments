{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MjEzNTIw", "number": 9568, "title": "Resolve classref in checkcast if Qtype", "bodyText": "Resolve classref in checkcast if Qtype\nCurrently, if the receiver for a checkcast is NULL the VM does not\nbother to resolve the classref and the checkcast test passes. With VTs this\nbehaviour is not allowed as NULL cannot be assigned to VTs. VTs will\nalways have Qsignatures, therefore, if the classref of a checkcast has\na qsignature it must be resolved, regardless of what the receiver is.\nSigned-off-by: Tobi Ajila atobia@ca.ibm.com", "createdAt": "2020-05-14T19:52:48Z", "url": "https://github.com/eclipse-openj9/openj9/pull/9568", "merged": true, "mergeCommit": {"oid": "2d9d45a8755b1ae99399d357b40b0228949a5e94"}, "closed": true, "closedAt": "2020-05-15T22:58:51Z", "author": {"login": "tajila"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchS_i8gFqTQxMjEzNTg1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABchipRTAFqTQxMjY4MTEzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMTM1ODU4", "url": "https://github.com/eclipse-openj9/openj9/pull/9568#pullrequestreview-412135858", "createdAt": "2020-05-14T19:53:17Z", "commit": {"oid": "e4476f0740986b53ecac8ae32c5e470a6c87829b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTo1MzoxN1rOGVr49Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTo1MzoxN1rOGVr49Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5MjM3Mw==", "bodyText": "@cathyzhyi Is this helper fine?", "url": "https://github.com/eclipse-openj9/openj9/pull/9568#discussion_r425392373", "createdAt": "2020-05-14T19:53:17Z", "author": {"login": "tajila"}, "path": "runtime/oti/j9nonbuilder.h", "diffHunk": "@@ -4535,6 +4535,7 @@ typedef struct J9InternalVMFunctions {\n #endif /* J9VM_OPT_JITSERVER */\n \tIDATA ( *createJoinableThreadWithCategory)(omrthread_t* handle, UDATA stacksize, UDATA priority, UDATA suspend, omrthread_entrypoint_t entrypoint, void* entryarg, U_32 category) ;\n \tBOOLEAN ( *valueTypeCapableAcmp)(struct J9VMThread *currentThread, j9object_t lhs, j9object_t rhs) ;\n+\tBOOLEAN ( *isClassRefQtypeHelper)(struct J9Class *cpContextClass, U_16 cpIndex) ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4476f0740986b53ecac8ae32c5e470a6c87829b"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjE0MzA1", "url": "https://github.com/eclipse-openj9/openj9/pull/9568#pullrequestreview-412214305", "createdAt": "2020-05-14T21:57:16Z", "commit": {"oid": "e4476f0740986b53ecac8ae32c5e470a6c87829b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMTo1NzoxNlrOGVvp8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQyMTo1NzoxNlrOGVvp8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTQ1NDA2NA==", "bodyText": "I'd rather this wasn't named \"helper\" - I don't think there would be a conflict with the inline C++ version.", "url": "https://github.com/eclipse-openj9/openj9/pull/9568#discussion_r425454064", "createdAt": "2020-05-14T21:57:16Z", "author": {"login": "gacholio"}, "path": "runtime/vm/ValueTypeHelpers.cpp", "diffHunk": "@@ -63,4 +63,10 @@ valueTypeCapableAcmp(J9VMThread *currentThread, j9object_t lhs, j9object_t rhs)\n \tMM_ObjectAccessBarrierAPI objectAccessBarrier(currentThread);\n \treturn VM_ValueTypeHelpers::acmp(currentThread, objectAccessBarrier, lhs, rhs);\n }\n+\n+BOOLEAN\n+isClassRefQtypeHelper(J9Class *cpContextClass, U_16 cpIndex)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4476f0740986b53ecac8ae32c5e470a6c87829b"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMjk5NzIx", "url": "https://github.com/eclipse-openj9/openj9/pull/9568#pullrequestreview-412299721", "createdAt": "2020-05-15T02:05:09Z", "commit": {"oid": "e4476f0740986b53ecac8ae32c5e470a6c87829b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjowNTowOVrOGV0Chw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwMjowNTowOVrOGV0Chw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTUyNTg5NQ==", "bodyText": "Is there a verifier constraint that the length will never be 0?", "url": "https://github.com/eclipse-openj9/openj9/pull/9568#discussion_r425525895", "createdAt": "2020-05-15T02:05:09Z", "author": {"login": "gacholio"}, "path": "runtime/vm/ValueTypeHelpers.hpp", "diffHunk": "@@ -236,6 +236,24 @@ class VM_ValueTypeHelpers {\n \t\treturn acmpResult;\n \t}\n \n+\tstatic VMINLINE bool\n+\tisClassRefQtype(J9ConstantPool *ramCP, U_16 cpIndex)\n+\t{\n+\t\tJ9ROMStringRef *romStringRef = (J9ROMStringRef *)&ramCP->romConstantPool[cpIndex];\n+\t\tJ9UTF8 *classNameWrapper = J9ROMSTRINGREF_UTF8DATA(romStringRef);\n+\t\tU_16 classNameLength = J9UTF8_LENGTH(classNameWrapper);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4476f0740986b53ecac8ae32c5e470a6c87829b"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eabb7d09cf94ec0eea0d4c572013b00b0ad4c940", "author": {"user": {"login": "tajila", "name": "Tobi"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/eabb7d09cf94ec0eea0d4c572013b00b0ad4c940", "committedDate": "2020-05-15T13:03:48Z", "message": "Resolve classref in checkcast if Qtype\n\nCurrently, if the receiver for a checkcast is NULL the VM does not\nbother resolve the classref and the checkcast test passes. With VTs this\nbehaviour is not allowed as NULL cannot be assigned to VTs. VTs will\nalways have Qsignatures, therefore, if the classref oin a checkcast has\na qsignature it must be resolved, regardless of what the receiver is.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4476f0740986b53ecac8ae32c5e470a6c87829b", "author": {"user": {"login": "tajila", "name": "Tobi"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e4476f0740986b53ecac8ae32c5e470a6c87829b", "committedDate": "2020-05-14T19:37:38Z", "message": "Resolve classref in checkcast if Qtype\n\nCurrently, if the receiver for a checkcast is NULL the VM does not\nbother resolve the classref and the checkcast test passes. With VTs this\nbehaviour is not allowed as NULL cannot be assigned to VTs. VTs will\nalways have Qsignatures, therefore, if the classref oin a checkcast has\na qsignature it must be resolved, regardless of what the receiver is.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>"}, "afterCommit": {"oid": "eabb7d09cf94ec0eea0d4c572013b00b0ad4c940", "author": {"user": {"login": "tajila", "name": "Tobi"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/eabb7d09cf94ec0eea0d4c572013b00b0ad4c940", "committedDate": "2020-05-15T13:03:48Z", "message": "Resolve classref in checkcast if Qtype\n\nCurrently, if the receiver for a checkcast is NULL the VM does not\nbother resolve the classref and the checkcast test passes. With VTs this\nbehaviour is not allowed as NULL cannot be assigned to VTs. VTs will\nalways have Qsignatures, therefore, if the classref oin a checkcast has\na qsignature it must be resolved, regardless of what the receiver is.\n\nSigned-off-by: Tobi Ajila <atobia@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNjgxMTM5", "url": "https://github.com/eclipse-openj9/openj9/pull/9568#pullrequestreview-412681139", "createdAt": "2020-05-15T14:07:26Z", "commit": {"oid": "eabb7d09cf94ec0eea0d4c572013b00b0ad4c940"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 935, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}