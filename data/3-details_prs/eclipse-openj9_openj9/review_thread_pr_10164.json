{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MDk0ODQ3", "number": 10164, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowMDoyMlrOERHLXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzowNDoxNFrOETxIKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2Mzc4ODQ1OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/CollectionSetDelegate.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowMDoyMlrOG1pNbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjowMDoyMlrOG1pNbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkwMjg5Mg==", "bodyText": "I presume tarokEnableCopyForwardHybrid flag  will be removed altogether (with a followup OMR change)? if so, referring to it in this comment does not make sense.\nAlso the comment referring to non-CopyForwardHybrid also should be removed, right?\nEven explicitely referring to CopyForwardHybrid (as it will stay as the only mode) is redundant. The whole comment should collapse to:\n\"We allow eden regions, which have jniCritical, to be part of nursery collectionSet; those regions would be marked instead of copyforwarded.\"", "url": "https://github.com/eclipse-openj9/openj9/pull/10164#discussion_r458902892", "createdAt": "2020-07-22T16:00:22Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/CollectionSetDelegate.cpp", "diffHunk": "@@ -166,7 +166,8 @@ MM_CollectionSetDelegate::createNurseryCollectionSet(MM_EnvironmentVLHGC *env)\n \n \t\t\t/* For CopyForwardHybrid mode we allow eden regions, which has jniCritical,to be part of nursery collectionSet, those regions would be marked instead of copyforwarded.\n \t\t\t * For Non CopyForwardHybrid mode we do not check Eden regions with jniCritical here, because we have already set MarkCompact PGC mode for the case in early. */\n-\t\t\tif (region->getRememberedSetCardList()->isAccurate() && (!isSelectionForCopyForward || !regionHasCriticalRegions || (regionHasCriticalRegions && (_extensions->tarokEnableCopyForwardHybrid || (0 != _extensions->fvtest_forceCopyForwardHybridRatio)) && region->isEden()))) {\n+\t\t\t/* _extensions->tarokEnableCopyForwardHybrid always is true */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e781f9f0b819be2e787d3b78883c479fa29c1a0f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDAxNTA3OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/RegionBasedOverflowVLHGC.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjo1MjoxNFrOG1rdUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjo1MjoxNFrOG1rdUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkzOTcyOA==", "bodyText": "I remember discussing this long ago... So we agreed even if real hybrid mode was performed (there was real regions that were Marked) we will gather all relevant stats under _copyForwardStats? I think I'm ok with it, I just want to make sure that's what we agreed on and we stick with the decision everywhere (soft ref stats etc). We should probably state it somewhere in the code as well, as a comment (in declaration of _copyForwardStats in EnvVLHGC?).", "url": "https://github.com/eclipse-openj9/openj9/pull/10164#discussion_r458939728", "createdAt": "2020-07-22T16:52:14Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/RegionBasedOverflowVLHGC.cpp", "diffHunk": "@@ -224,7 +224,7 @@ MM_RegionBasedOverflowVLHGC::overflowItemInternal(MM_EnvironmentBase *env, void\n \t\t\t\t * To avoid adding constructing object \n \t\t\t\t */\n \t\t\t\tenvVLHGC->getGCEnvironment()->_ownableSynchronizerObjectBuffer->add(envVLHGC, objectPtr);\n-\t\t\t\tif (envVLHGC->_cycleState->_shouldRunCopyForward) {\n+\t\t\t\tif (MM_CycleState::CT_PARTIAL_GARBAGE_COLLECTION == envVLHGC->_cycleState->_collectionType) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e781f9f0b819be2e787d3b78883c479fa29c1a0f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDE5OTUxOnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MTowNlrOG1tQ2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzo0MTowNlrOG1tQ2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk2OTMwNA==", "bodyText": "make this C style comment", "url": "https://github.com/eclipse-openj9/openj9/pull/10164#discussion_r458969304", "createdAt": "2020-07-22T17:41:06Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "diffHunk": "@@ -2428,39 +2318,14 @@ MM_IncrementalGenerationalGC::reportGlobalGCMarkEnd(MM_EnvironmentBase *env)\n \t\t&static_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_vlhgcIncrementStats._workPacketStats);\n }\n \n-void\n-MM_IncrementalGenerationalGC::reportPGCMarkStart(MM_EnvironmentBase *env)\n-{\n-\treportMarkStart(env);\n-\n-\tTRIGGER_J9HOOK_MM_PRIVATE_PGC_MARK_START(\n-\t\t_extensions->privateHookInterface,\n-\t\tenv->getOmrVMThread(),\n-\t\t&static_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_vlhgcIncrementStats._markStats,\n-\t\t&static_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_vlhgcIncrementStats._workPacketStats);\n-}\n-\n-void\n-MM_IncrementalGenerationalGC::reportPGCMarkEnd(MM_EnvironmentBase *env)\n-{\n-\treportMarkEnd(env);\n-\n-\tTRIGGER_J9HOOK_MM_PRIVATE_PGC_MARK_END(\n-\t\t_extensions->privateHookInterface,\n-\t\tenv->getOmrVMThread(),\n-\t\t&static_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_vlhgcIncrementStats._markStats,\n-\t\t&static_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_vlhgcIncrementStats._workPacketStats,\n-\t\t&static_cast<MM_CycleStateVLHGC*>(env->_cycleState)->_vlhgcIncrementStats._irrsStats);\n-}\n-\n void\n MM_IncrementalGenerationalGC::collectorExpanded(MM_EnvironmentBase *envBase, MM_MemorySubSpace *subSpace, UDATA expandSize)\n {\n \tMM_EnvironmentVLHGC* env = MM_EnvironmentVLHGC::getEnvironment(envBase);\n \n \t/* this even can only happen during a copy-forward PGC */\n \tAssert_MM_true(MM_CycleState::CT_PARTIAL_GARBAGE_COLLECTION == env->_cycleState->_collectionType);\n-\tAssert_MM_true(env->_cycleState->_shouldRunCopyForward);\n+\tAssert_MM_true(env->_cycleState->_shouldRunCopyForward); // if _shouldRunCopyForward == false, it is copyforwardhybrid with all regions need to be marked/compacted, for this case we don't need to collectorExpanded.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e781f9f0b819be2e787d3b78883c479fa29c1a0f"}, "originalPosition": 235}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTYyNDA3OnYy", "diffSide": "LEFT", "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzowMTozOFrOG5r7Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzowMTozOFrOG5r7Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0MTY1MQ==", "bodyText": "please fix alignment for lines below (shift left)", "url": "https://github.com/eclipse-openj9/openj9/pull/10164#discussion_r463141651", "createdAt": "2020-07-30T17:01:38Z", "author": {"login": "dmitripivkine"}, "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "diffHunk": "@@ -555,8 +548,6 @@ MM_IncrementalGenerationalGC::heapAddRange(MM_EnvironmentBase *env, MM_MemorySub\n \tif (result) {\n \t\tresult = _globalMarkDelegate.heapAddRange(envVLHGC, subspace, size, lowAddress, highAddress);\n \t\tif (result) {\n-\t\t\tresult = _partialMarkDelegate.heapAddRange(envVLHGC, subspace, size, lowAddress, highAddress);\n-\t\t\tif (result) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "347e170b9fbe331a44cfcd3133014ded90055015"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTYzMzA0OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzowNDoxNFrOG5sA4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxNzowNDoxNFrOG5sA4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE0MzEzOA==", "bodyText": "please fix alignment for this line (shift right)", "url": "https://github.com/eclipse-openj9/openj9/pull/10164#discussion_r463143138", "createdAt": "2020-07-30T17:04:14Z", "author": {"login": "dmitripivkine"}, "path": "runtime/gc_vlhgc/IncrementalGenerationalGC.cpp", "diffHunk": "@@ -1326,8 +1286,8 @@ MM_IncrementalGenerationalGC::partialGarbageCollectUsingCopyForward(MM_Environme\n \t\testimatedReguiredSurvivorRegions = estimatedReguiredSurvivorRegions * (100 - extensions->fvtest_forceCopyForwardHybridRatio) / 100;\n \t}\n \n-\tif ((_extensions->tarokEnableCopyForwardHybrid || (0 != _extensions->fvtest_forceCopyForwardHybridRatio)) && (_schedulingDelegate.isPGCAbortDuringGMP() || _schedulingDelegate.isFirstPGCAfterGMP()) && (estimatedReguiredSurvivorRegions > freeRegions)) {\n-\t\tdouble edenSurvivorRate = _schedulingDelegate.getAvgEdenSurvivalRateCopyForward(env);\n+\tif ((_schedulingDelegate.isPGCAbortDuringGMP() || _schedulingDelegate.isFirstPGCAfterGMP()) && (estimatedReguiredSurvivorRegions > freeRegions)) {\n+\tdouble edenSurvivorRate = _schedulingDelegate.getAvgEdenSurvivalRateCopyForward(env);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "347e170b9fbe331a44cfcd3133014ded90055015"}, "originalPosition": 117}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4768, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}