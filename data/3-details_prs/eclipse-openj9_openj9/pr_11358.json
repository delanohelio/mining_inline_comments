{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMTQ2NzU5", "number": 11358, "title": "Handle monitor enter/exit on value based instances (X86)", "bodyText": "Add areValueBasedMonitorChecksEnabled which calls VM to check if value based class monitor check is enabled.\nAdd isValueBasedClass and isMonitorValueBased to determine if a monitor object is a value based class instance.\nIf the monitor object type is value based class, VM will either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\nIf the monitor object type is unkonwn, insert a runtime memory check in monitor enter/exit on the class flag J9ClassIsValueBased.\nIf the monitor object type is not value based class, proceed as how it is handled today.\nRelated to JEP390 #10620", "createdAt": "2020-12-03T22:04:04Z", "url": "https://github.com/eclipse-openj9/openj9/pull/11358", "merged": true, "mergeCommit": {"oid": "1541ca67e11f3ea83b731d83f1610327c0a09b1c"}, "closed": true, "closedAt": "2020-12-17T12:40:41Z", "author": {"login": "a7ehuo"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkNXRxABqjQwODU4NDEyMTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnC29FgFqTU1NDU2NTgyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d39bdb3c779a56ca22ab3a9efec48909a89dd1e", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2d39bdb3c779a56ca22ab3a9efec48909a89dd1e", "committedDate": "2020-12-03T20:52:13Z", "message": "Handle monitor enter/exit on value based instances\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "3b44a9e833681f5914bc4d10690fbe7107393329", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3b44a9e833681f5914bc4d10690fbe7107393329", "committedDate": "2020-12-08T17:12:15Z", "message": "Handle monitor enter/exit on value based instances\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NDc3OTIz", "url": "https://github.com/eclipse-openj9/openj9/pull/11358#pullrequestreview-547477923", "createdAt": "2020-12-08T17:46:25Z", "commit": {"oid": "3b44a9e833681f5914bc4d10690fbe7107393329"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNzo0NjoyNVrOIBs0iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxODo1MjoyOFrOIBwzCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY1MzgzMg==", "bodyText": "I would suggest adding Doxygen comments to describe what this does.", "url": "https://github.com/eclipse-openj9/openj9/pull/11358#discussion_r538653832", "createdAt": "2020-12-08T17:46:25Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/codegen/J9CodeGenerator.hpp", "diffHunk": "@@ -333,6 +333,8 @@ class OMR_EXTENSIBLE CodeGenerator : public OMR::CodeGeneratorConnector\n     */\n    TR_YesNoMaybe isMonitorValueType(TR::Node* monNode);\n \n+   TR_YesNoMaybe isMonitorValueBased(TR::Node* monNode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b44a9e833681f5914bc4d10690fbe7107393329"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY2MjE3NQ==", "bodyText": "What if the class is an interface or abstract class that a value-based class could implement or be derived from, respectively?  For example, java.lang.Comparable.  I think the current implementation of this method will return TR_no in that case.", "url": "https://github.com/eclipse-openj9/openj9/pull/11358#discussion_r538662175", "createdAt": "2020-12-08T17:54:07Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/codegen/J9CodeGenerator.cpp", "diffHunk": "@@ -5376,3 +5376,21 @@ J9::CodeGenerator::isMonitorValueType(TR::Node* monNode)\n \n    return TR_no;\n    }\n+\n+TR_YesNoMaybe\n+J9::CodeGenerator::isMonitorValueBased(TR::Node* monNode)\n+   {\n+   if (_monitorMapping.find(monNode->getGlobalIndex()) == _monitorMapping.end())\n+      return TR_maybe;\n+\n+   TR_OpaqueClassBlock *clazz = _monitorMapping[monNode->getGlobalIndex()];\n+\n+   //java.lang.Object class is only set when monitor is java.lang.Object but not its subclass\n+   if (clazz == self()->comp()->getObjectClassPointer())\n+      return TR_no;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b44a9e833681f5914bc4d10690fbe7107393329"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY4MjgyOQ==", "bodyText": "I would suggest adding a Doxygen comment for this method", "url": "https://github.com/eclipse-openj9/openj9/pull/11358#discussion_r538682829", "createdAt": "2020-12-08T18:14:20Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/env/J9ObjectModel.hpp", "diffHunk": "@@ -62,6 +62,7 @@ class ObjectModel : public OMR::ObjectModelConnector\n    bool mayRequireSpineChecks();\n \n    bool areValueTypesEnabled();\n+   bool areValueBasedMonitorChecksEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b44a9e833681f5914bc4d10690fbe7107393329"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODY5NDQ4Ng==", "bodyText": "Once value types are ultimately supported, is it at all possible for both value types to be enabled and value-based monitor checks to be enabled at the same time?  If so, it might be worthwhile combining these two checks into a single check, to avoid testing the class flags twice.\nI think we need Tobi's @tajila feedback on the likelihood of that possibility.", "url": "https://github.com/eclipse-openj9/openj9/pull/11358#discussion_r538694486", "createdAt": "2020-12-08T18:25:28Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/x/codegen/J9TreeEvaluator.cpp", "diffHunk": "@@ -5193,8 +5206,13 @@ TR::Register\n    TR::LabelSymbol *fallThru   = generateLabelSymbol(cg);\n    // Create the monitor exit snippet\n    TR::LabelSymbol *snippetLabel = generateLabelSymbol(cg);\n-   if (TR::Compiler->om.areValueTypesEnabled())\n-       TR::TreeEvaluator::generateCheckForValueTypeMonitorEnterOrExit(node, snippetLabel, cg);\n+\n+   if (TR::Compiler->om.areValueTypesEnabled() && (cg->isMonitorValueType(node) == TR_maybe))\n+      TR::TreeEvaluator::generateCheckForValueMonitorEnterOrExit(node, J9ClassIsValueType, snippetLabel, cg);\n+\n+   if (TR::Compiler->om.areValueBasedMonitorChecksEnabled() && (cg->isMonitorValueBased(node) == TR_maybe))\n+      TR::TreeEvaluator::generateCheckForValueMonitorEnterOrExit(node, J9ClassIsValueBased, snippetLabel, cg);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b44a9e833681f5914bc4d10690fbe7107393329"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODcxODk4Ng==", "bodyText": "The comments for this method declaration only talk about value types.  They need to be updated to include value-based type checking.", "url": "https://github.com/eclipse-openj9/openj9/pull/11358#discussion_r538718986", "createdAt": "2020-12-08T18:52:28Z", "author": {"login": "hzongaro"}, "path": "runtime/compiler/x/codegen/J9TreeEvaluator.hpp", "diffHunk": "@@ -109,7 +109,7 @@ class OMR_EXTENSIBLE TreeEvaluator: public J9::TreeEvaluator\n    *     This method only handles the cases where, at compile time, it's unknown whether the\n    *     object is reference type or value type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b44a9e833681f5914bc4d10690fbe7107393329"}, "originalPosition": 2}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b44a9e833681f5914bc4d10690fbe7107393329", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3b44a9e833681f5914bc4d10690fbe7107393329", "committedDate": "2020-12-08T17:12:15Z", "message": "Handle monitor enter/exit on value based instances\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "62ca7a213178e56c8ca612cf812f25bacede3dfe", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/62ca7a213178e56c8ca612cf812f25bacede3dfe", "committedDate": "2020-12-09T16:15:30Z", "message": "Handle monitor enter/exit on value based instances in x86\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nValue based class and value type are mutually exclusive.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "62ca7a213178e56c8ca612cf812f25bacede3dfe", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/62ca7a213178e56c8ca612cf812f25bacede3dfe", "committedDate": "2020-12-09T16:15:30Z", "message": "Handle monitor enter/exit on value based instances in x86\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nValue based class and value type are mutually exclusive.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "ea1a96f4e1fb068ae6b91d52d999002f897104e4", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ea1a96f4e1fb068ae6b91d52d999002f897104e4", "committedDate": "2020-12-09T16:28:16Z", "message": "Handle monitor enter/exit on value based instances in x86\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nValue based class and value type are mutually exclusive.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea1a96f4e1fb068ae6b91d52d999002f897104e4", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/ea1a96f4e1fb068ae6b91d52d999002f897104e4", "committedDate": "2020-12-09T16:28:16Z", "message": "Handle monitor enter/exit on value based instances in x86\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nValue based class and value type are mutually exclusive.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "a9e59293e48ca2d78e19ff1716bc7a3cb2eefd1a", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a9e59293e48ca2d78e19ff1716bc7a3cb2eefd1a", "committedDate": "2020-12-09T16:46:00Z", "message": "Handle monitor enter/exit on value based instances in x86\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nValue based class and value type are mutually exclusive.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MzUyNTk0", "url": "https://github.com/eclipse-openj9/openj9/pull/11358#pullrequestreview-549352594", "createdAt": "2020-12-10T16:05:15Z", "commit": {"oid": "a9e59293e48ca2d78e19ff1716bc7a3cb2eefd1a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxOTA4NzM1", "url": "https://github.com/eclipse-openj9/openj9/pull/11358#pullrequestreview-551908735", "createdAt": "2020-12-14T21:29:50Z", "commit": {"oid": "a9e59293e48ca2d78e19ff1716bc7a3cb2eefd1a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMToyOTo1MVrOIFqlRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMTo1MTowNlrOIFr-pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgxMTQ2Mw==", "bodyText": "Can the above lines be re-written using the existing API?  Something like:\n   TR_OpaqueClassBlock *clazz = self()->getMonClass(monNode);\n   if (!clazz)\n      return TR_maybe;", "url": "https://github.com/eclipse-openj9/openj9/pull/11358#discussion_r542811463", "createdAt": "2020-12-14T21:29:51Z", "author": {"login": "0xdaryl"}, "path": "runtime/compiler/codegen/J9CodeGenerator.cpp", "diffHunk": "@@ -5376,3 +5376,24 @@ J9::CodeGenerator::isMonitorValueType(TR::Node* monNode)\n \n    return TR_no;\n    }\n+\n+TR_YesNoMaybe\n+J9::CodeGenerator::isMonitorValueBased(TR::Node* monNode)\n+   {\n+   if (_monitorMapping.find(monNode->getGlobalIndex()) == _monitorMapping.end())\n+      return TR_maybe;\n+\n+   TR_OpaqueClassBlock *clazz = _monitorMapping[monNode->getGlobalIndex()];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e59293e48ca2d78e19ff1716bc7a3cb2eefd1a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgxNjE2NA==", "bodyText": "Should be a TR_FATAL_ASSERT, especially under debug.", "url": "https://github.com/eclipse-openj9/openj9/pull/11358#discussion_r542816164", "createdAt": "2020-12-14T21:33:45Z", "author": {"login": "0xdaryl"}, "path": "runtime/compiler/env/J9ClassEnv.cpp", "diffHunk": "@@ -825,6 +825,29 @@ J9::ClassEnv::isValueTypeClassFlattened(TR_OpaqueClassBlock *clazz)\n    return (clazz && J9_IS_J9CLASS_FLATTENED(reinterpret_cast<J9Class*>(clazz)));\n    }\n \n+bool\n+J9::ClassEnv::isValueBasedClass(TR_OpaqueClassBlock *clazz)\n+   {\n+#if defined(J9VM_OPT_JITSERVER)\n+   if (auto stream = TR::CompilationInfo::getStream())\n+      {\n+      uintptr_t classFlags = 0;\n+      JITServerHelpers::getAndCacheRAMClassInfo((J9Class *)clazz, TR::compInfoPT->getClientData(), stream, JITServerHelpers::CLASSINFO_CLASS_FLAGS, (void *)&classFlags);\n+#ifdef DEBUG\n+      stream->write(JITServer::MessageType::ClassEnv_classFlagsValue, clazz);\n+      uintptr_t classFlagsRemote = std::get<0>(stream->read<uintptr_t>());\n+      // Check that class flags from remote call is equal to the cached ones\n+      classFlags = classFlags & J9ClassIsValueBased;\n+      classFlagsRemote = classFlagsRemote & J9ClassIsValueBased;\n+      TR_ASSERT(classFlags == classFlagsRemote, \"remote call class flags is not equal to cached class flags\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e59293e48ca2d78e19ff1716bc7a3cb2eefd1a"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjgzNDM0Mg==", "bodyText": "Just so I understand, the reason we can't combine these two into a single check is because the VM helper that will ultimately be called is only expecting one flag value or the other.  That is, it currently can't handle the situation when both flag values are set but it could be adapted to do so.", "url": "https://github.com/eclipse-openj9/openj9/pull/11358#discussion_r542834342", "createdAt": "2020-12-14T21:51:06Z", "author": {"login": "0xdaryl"}, "path": "runtime/compiler/x/codegen/J9TreeEvaluator.cpp", "diffHunk": "@@ -5193,8 +5206,13 @@ TR::Register\n    TR::LabelSymbol *fallThru   = generateLabelSymbol(cg);\n    // Create the monitor exit snippet\n    TR::LabelSymbol *snippetLabel = generateLabelSymbol(cg);\n-   if (TR::Compiler->om.areValueTypesEnabled())\n-       TR::TreeEvaluator::generateCheckForValueTypeMonitorEnterOrExit(node, snippetLabel, cg);\n+\n+   if (TR::Compiler->om.areValueTypesEnabled() && (cg->isMonitorValueType(node) == TR_maybe))\n+      TR::TreeEvaluator::generateCheckForValueMonitorEnterOrExit(node, J9ClassIsValueType, snippetLabel, cg);\n+\n+   if (TR::Compiler->om.areValueBasedMonitorChecksEnabled() && (cg->isMonitorValueBased(node) == TR_maybe))\n+      TR::TreeEvaluator::generateCheckForValueMonitorEnterOrExit(node, J9ClassIsValueBased, snippetLabel, cg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e59293e48ca2d78e19ff1716bc7a3cb2eefd1a"}, "originalPosition": 90}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a9e59293e48ca2d78e19ff1716bc7a3cb2eefd1a", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a9e59293e48ca2d78e19ff1716bc7a3cb2eefd1a", "committedDate": "2020-12-09T16:46:00Z", "message": "Handle monitor enter/exit on value based instances in x86\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nValue based class and value type are mutually exclusive.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "07845c8049b409f552935661f429f919eee956d8", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/07845c8049b409f552935661f429f919eee956d8", "committedDate": "2020-12-15T18:47:59Z", "message": "Handle monitor enter/exit on value based instances in x86\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nValue based class and value type are mutually exclusive.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05d5976831d528f2422cf28eb449a2ca03a0e970", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/05d5976831d528f2422cf28eb449a2ca03a0e970", "committedDate": "2020-12-15T20:41:50Z", "message": "Add utility functions in JIT for value based classes\n\nAdd `areValueBasedMonitorChecksEnabled` which calls VM\nto check if value based class monitor check is enabled.\nAdd `isValueBasedClass` and `isMonitorValueBased` to\ndetermine if a monitor object is a value based class\ninstance.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "881cddc6feda6b6c33fa1f1644d4fe5170088e0f", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/881cddc6feda6b6c33fa1f1644d4fe5170088e0f", "committedDate": "2020-12-15T20:41:50Z", "message": "Handle monitor enter/exit on value based instances in x86\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nValue based class and value type are mutually exclusive.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07845c8049b409f552935661f429f919eee956d8", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/07845c8049b409f552935661f429f919eee956d8", "committedDate": "2020-12-15T18:47:59Z", "message": "Handle monitor enter/exit on value based instances in x86\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nValue based class and value type are mutually exclusive.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}, "afterCommit": {"oid": "881cddc6feda6b6c33fa1f1644d4fe5170088e0f", "author": {"user": {"login": "a7ehuo", "name": "Annabelle Huo"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/881cddc6feda6b6c33fa1f1644d4fe5170088e0f", "committedDate": "2020-12-15T20:41:50Z", "message": "Handle monitor enter/exit on value based instances in x86\n\nIf the monitor object type is value based class, VM\nwill either issue a warning or throw an exception\nbased on -XX:ValueBasedClassCheck option.\n\nIf the monitor object type is unkonwn, insert a runtime\nmemory check in monitor enter/exit on the class flag\nJ9ClassIsValueBased.\n\nIf the monitor object type is not value based class,\nproceed as how it is handled today.\n\nValue based class and value type are mutually exclusive.\n\nRelated to JEP390\n\nSigned-off-by: Annabelle Huo <Annabelle.Huo@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NTY1ODI4", "url": "https://github.com/eclipse-openj9/openj9/pull/11358#pullrequestreview-554565828", "createdAt": "2020-12-17T12:40:07Z", "commit": {"oid": "881cddc6feda6b6c33fa1f1644d4fe5170088e0f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1430, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}