{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNzA2Mjc4", "number": 8254, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNjo1NjoyNVrODW663A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNTowMDoyMlrODXLYow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MzYwNjA0OnYy", "diffSide": "RIGHT", "path": "runtime/gc_modron_startup/mminit.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNjo1NjoyNVrOFb82uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNjo1NjoyNVrOFb82uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDg1MjkyMA==", "bodyText": "spaces should be tabs", "url": "https://github.com/eclipse-openj9/openj9/pull/8254#discussion_r364852920", "createdAt": "2020-01-09T16:56:25Z", "author": {"login": "DanHeidinga"}, "path": "runtime/gc_modron_startup/mminit.cpp", "diffHunk": "@@ -319,6 +319,10 @@ j9gc_initialize_heap(J9JavaVM *vm, IDATA *memoryParameterTable, UDATA heapBytesR\n \tvm->initializeSlotsOnTLHAllocate = (extensions->batchClearTLH == 0) ? 1 : 0;\n #endif /* J9VM_GC_BATCH_CLEAR_TLH */\n \n+#if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n+        OMRPORT_ACCESS_FROM_J9PORT(privatePortLibrary);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5684b505bfbac28bdc4438d9cf384309615bd16"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NDE3ODU2OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/ConfigurationIncrementalGenerational.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMDoyODo1M1rOFcCfuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQyMDo0NTo0NFrOFcC41w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk0NTMzNw==", "bodyText": "May sound overkill, but I'm thinking to extend this logic a bit more....\nLet's introduce config param in Extension called doubleMappingRequested (currently false by default, but soon to change for supported platforms). This is what command line option would blindly control.\nAnd then we have the existing status param in indexableObjectModel where the info is if we obeyed the request or not. Currently there is only one reason to not obey, but perhaps there will be more (well, I hope there will be less - which makes this change overkill).\nHere, at early startup instead of querying if status is already set, we query if it's requested. The rest of the code (mid run) would query the status flag.\nThe control flag could reside in ExtensionsVLHGC, hence no need to touch OMR.", "url": "https://github.com/eclipse-openj9/openj9/pull/8254#discussion_r364945337", "createdAt": "2020-01-09T20:28:53Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/ConfigurationIncrementalGenerational.cpp", "diffHunk": "@@ -132,6 +132,20 @@ MM_ConfigurationIncrementalGenerational::createHeapWithManager(MM_EnvironmentBas\n \t}\n #endif /* defined(OMR_GC_VLHGC_CONCURRENT_COPY_FORWARD) */\n \n+#if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n+\t/* Disable double map if requested page sizes used is equal to huge pages.\n+\t * Currently double map is not supported when huge pages are used.\n+\t */\n+\tif (NULL != heap) {\n+\t\tif (extensions->memoryManager->isLargePage(env, heap->getPageSize())) {\n+\t\t\tGC_ArrayObjectModel *indexableObjectModel = &extensions->indexableObjectModel;\n+\t\t\tif (indexableObjectModel->isDoubleMappingEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fe8b8795a3b0ea748c880b22f44b72247d4ed3d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk1MTc2Nw==", "bodyText": "I'd move the code up just after MM_HeapVirtualMemory::newInstance() (if that's the spot where we determine effective page size)", "url": "https://github.com/eclipse-openj9/openj9/pull/8254#discussion_r364951767", "createdAt": "2020-01-09T20:45:44Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/ConfigurationIncrementalGenerational.cpp", "diffHunk": "@@ -132,6 +132,20 @@ MM_ConfigurationIncrementalGenerational::createHeapWithManager(MM_EnvironmentBas\n \t}\n #endif /* defined(OMR_GC_VLHGC_CONCURRENT_COPY_FORWARD) */\n \n+#if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n+\t/* Disable double map if requested page sizes used is equal to huge pages.\n+\t * Currently double map is not supported when huge pages are used.\n+\t */\n+\tif (NULL != heap) {\n+\t\tif (extensions->memoryManager->isLargePage(env, heap->getPageSize())) {\n+\t\t\tGC_ArrayObjectModel *indexableObjectModel = &extensions->indexableObjectModel;\n+\t\t\tif (indexableObjectModel->isDoubleMappingEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDk0NTMzNw=="}, "originalCommit": {"oid": "0fe8b8795a3b0ea748c880b22f44b72247d4ed3d"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjEzMDk2OnYy", "diffSide": "RIGHT", "path": "runtime/gc_modron_startup/mmparseXXgc.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNDowMjo0NVrOFcU6RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNDowMjo0NVrOFcU6RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI0NzA0NQ==", "bodyText": "we should be setting only control flag here, not status. status is set always to false by constructor of indexableObjectModel", "url": "https://github.com/eclipse-openj9/openj9/pull/8254#discussion_r365247045", "createdAt": "2020-01-10T14:02:45Z", "author": {"login": "amicic"}, "path": "runtime/gc_modron_startup/mmparseXXgc.cpp", "diffHunk": "@@ -167,10 +167,12 @@ gcParseXXgcArguments(J9JavaVM *vm, char *optArg)\n #if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n \t\tif (try_scan(&scan_start, \"enableDoubleMapping\")) {\n \t\t\textensions->indexableObjectModel.setEnableDoubleMapping(true);\n+\t\t\textensions->indexableObjectModel.setEnableDoubleMappingStatus(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64083c004d42e275da7fe606624ea51721ad12c9"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjEzMjUzOnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/ConfigurationIncrementalGenerational.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNDowMzoyN1rOFcU7PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNDowMzoyN1rOFcU7PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI0NzI5Mw==", "bodyText": "I guess, I was not clear enough, we should query control flag here.", "url": "https://github.com/eclipse-openj9/openj9/pull/8254#discussion_r365247293", "createdAt": "2020-01-10T14:03:27Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/ConfigurationIncrementalGenerational.cpp", "diffHunk": "@@ -97,6 +97,23 @@ MM_ConfigurationIncrementalGenerational::createHeapWithManager(MM_EnvironmentBas\n \t\treturn NULL;\n \t}\n \n+#if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n+\t/* Disable double map if requested page sizes used is equal to huge pages.\n+\t * Currently double map is not supported when huge pages are used.\n+\t * Note that we keep two double map fields: one for requested and another for\n+\t * status. If large pages is enabled, it  will only change the STATUS of double\n+\t * mapping, keeping the REQUESTED double mapping field intact.\n+\t */\n+\tif (NULL != heap) {\n+\t\tif (extensions->memoryManager->isLargePage(env, heap->getPageSize())) {\n+\t\t\tGC_ArrayObjectModel *indexableObjectModel = &extensions->indexableObjectModel;\n+\t\t\tif (indexableObjectModel->isDoubleMappingStatusEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64083c004d42e275da7fe606624ea51721ad12c9"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjEzNjU2OnYy", "diffSide": "RIGHT", "path": "runtime/gc_glue_java/ArrayletObjectModelBase.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNDowNDo1N1rOFcU9kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNDowNDo1N1rOFcU9kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI0Nzg5MQ==", "bodyText": "no really need to for this wrapper. command line option parser can change isDoubleMapRequested  directly", "url": "https://github.com/eclipse-openj9/openj9/pull/8254#discussion_r365247891", "createdAt": "2020-01-10T14:04:57Z", "author": {"login": "amicic"}, "path": "runtime/gc_glue_java/ArrayletObjectModelBase.cpp", "diffHunk": "@@ -74,6 +74,15 @@ GC_ArrayletObjectModelBase::expandArrayletSubSpaceRange(MM_MemorySubSpace * subS\n \t}\n }\n \n+#if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n+void\n+GC_ArrayletObjectModelBase::setEnableDoubleMapping(bool enableDoubleMapping)\n+{\n+\tMM_GCExtensionsBase* extensions = MM_GCExtensionsBase::getExtensions(_omrVM);\n+\textensions->isDoubleMapRequested = enableDoubleMapping;\n+}\n+#endif /* J9VM_GC_ENABLE_DOUBLE_MAP */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64083c004d42e275da7fe606624ea51721ad12c9"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjI3MTY3OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/ConfigurationIncrementalGenerational.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNDo0OTozMVrOFcWQbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNDo0OTozMVrOFcWQbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI2OTEwMA==", "bodyText": "not really needed. since we return if NULL prior to even possibly reaching this point.", "url": "https://github.com/eclipse-openj9/openj9/pull/8254#discussion_r365269100", "createdAt": "2020-01-10T14:49:31Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/ConfigurationIncrementalGenerational.cpp", "diffHunk": "@@ -97,6 +97,22 @@ MM_ConfigurationIncrementalGenerational::createHeapWithManager(MM_EnvironmentBas\n \t\treturn NULL;\n \t}\n \n+#if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n+\t/* Disable double map if requested page sizes used is equal to huge pages.\n+\t * Currently double map is not supported when huge pages are used.\n+\t * Note that we keep two double map fields: one for requested and another for\n+\t * status. If large pages is enabled, it  will only change the STATUS of double\n+\t * mapping, keeping the REQUESTED double mapping field intact.\n+\t */\n+\tif (NULL != heap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c505eb095e6f7342aa615519cdda8257aaffb69"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjMwMzcxOnYy", "diffSide": "RIGHT", "path": "runtime/gc_modron_startup/mmparseXXgc.cpp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNTowMDoyMlrOFcWkzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNTowMDoyMlrOFcWkzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTI3NDMxNg==", "bodyText": "let's be more specific and rename the control flag and the options with appending Arraylet(Double...)\nstatus flag name is ok as is, since it's in the domain of IndexibleModel class.", "url": "https://github.com/eclipse-openj9/openj9/pull/8254#discussion_r365274316", "createdAt": "2020-01-10T15:00:22Z", "author": {"login": "amicic"}, "path": "runtime/gc_modron_startup/mmparseXXgc.cpp", "diffHunk": "@@ -166,11 +166,11 @@ gcParseXXgcArguments(J9JavaVM *vm, char *optArg)\n \t\t}\n #if defined(J9VM_GC_ENABLE_DOUBLE_MAP)\n \t\tif (try_scan(&scan_start, \"enableDoubleMapping\")) {\n-\t\t\textensions->indexableObjectModel.setEnableDoubleMapping(true);\n+\t\t\textensions->isDoubleMapRequested = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c505eb095e6f7342aa615519cdda8257aaffb69"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 725, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}