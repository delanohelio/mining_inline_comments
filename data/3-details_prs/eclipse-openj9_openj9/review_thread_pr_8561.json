{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0Mzk2ODM1", "number": 8561, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjozMzozOVrODfP3OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNDozNzo1NVrODjsYiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDkyMzQ0OnYy", "diffSide": "RIGHT", "path": "runtime/j9vm/jvm.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjozMzo0MFrOFo1xJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjozMzo0MFrOFo1xJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM2ODI5Mw==", "bodyText": "We can delay declaring this void* to the point we use it.", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r378368293", "createdAt": "2020-02-12T16:33:40Z", "author": {"login": "r30shah"}, "path": "runtime/j9vm/jvm.c", "diffHunk": "@@ -984,7 +984,7 @@ removeSuffix(char *string, const char *suffix)\n static BOOLEAN\n preloadLibraries(void)\n {\n-\tvoid *vmDLL, *threadDLL, *portDLL;\n+\tvoid *vmDLL, *threadDLL, *portDLL, *zlibDLL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f49f5589860ec427e57197894499ece4c1087393"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTE3OTU3OnYy", "diffSide": "RIGHT", "path": "runtime/j9vm/jvm.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzo0MzowMFrOFo4SvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNzo0MzowMFrOFo4SvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQwOTY2MQ==", "bodyText": "This should be void *", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r378409661", "createdAt": "2020-02-12T17:43:00Z", "author": {"login": "r30shah"}, "path": "runtime/j9vm/jvm.c", "diffHunk": "@@ -1189,6 +1189,11 @@ preloadLibraries(void)\n \t * location if not preloaded. */\n \tpreloadLibrary(J9_HARMONY_PORT_LIBRARY_SHIM_DLL_NAME, TRUE);\n #endif /* J9VM_OPT_HARMONY */\n+\tvoid zlibDLL = preloadLibrary(J9_ZIP_DLL_NAME, TRUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e6a18ee288c9de2428acfc694e22f0ffd2761c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODA2NDQ0OnYy", "diffSide": "RIGHT", "path": "runtime/j9vm/jvm.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNTozMzozMFrOFp6iKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjowMDowMlrOFp7dFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ5NDk1Mw==", "bodyText": "libj9zlib29.so shouldn't be hard coded, use j9zlib or is J9_ZIP_DLL_NAME sufficient?", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r379494953", "createdAt": "2020-02-14T15:33:30Z", "author": {"login": "pshipton"}, "path": "runtime/j9vm/jvm.c", "diffHunk": "@@ -1189,6 +1189,14 @@ preloadLibraries(void)\n \t * location if not preloaded. */\n \tpreloadLibrary(J9_HARMONY_PORT_LIBRARY_SHIM_DLL_NAME, TRUE);\n #endif /* J9VM_OPT_HARMONY */\n+\n+#if (defined(S390) && defined(LINUX))\n+\tvoid *zlibDLL = preloadLibrary(J9_ZIP_DLL_NAME, TRUE);\n+\tif (NULL == zlibDLL) {\n+\t\tfprintf(stderr,\"libj9zlib29.so failed to load: %s\\n\", J9_ZIP_DLL_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1229e123c2cfcb4442175c3ea3ca6c656d0db3a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUxMDAzOQ==", "bodyText": "libj9zlib29.so shouldn't be hard coded, use j9zlib or is J9_ZIP_DLL_NAME sufficient?\n\nDiscussed offline with @r30shah , the decision is to go with J9_ZIP_DLL_NAME.", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r379510039", "createdAt": "2020-02-14T16:00:02Z", "author": {"login": "simonameng"}, "path": "runtime/j9vm/jvm.c", "diffHunk": "@@ -1189,6 +1189,14 @@ preloadLibraries(void)\n \t * location if not preloaded. */\n \tpreloadLibrary(J9_HARMONY_PORT_LIBRARY_SHIM_DLL_NAME, TRUE);\n #endif /* J9VM_OPT_HARMONY */\n+\n+#if (defined(S390) && defined(LINUX))\n+\tvoid *zlibDLL = preloadLibrary(J9_ZIP_DLL_NAME, TRUE);\n+\tif (NULL == zlibDLL) {\n+\t\tfprintf(stderr,\"libj9zlib29.so failed to load: %s\\n\", J9_ZIP_DLL_NAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTQ5NDk1Mw=="}, "originalCommit": {"oid": "c1229e123c2cfcb4442175c3ea3ca6c656d0db3a"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODM5NjA4OnYy", "diffSide": "RIGHT", "path": "runtime/j9vm/jvm.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzoxNjoxOFrOFp90wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNzoxNjoxOFrOFp90wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTU0ODg2NA==", "bodyText": "It would be useful to document why this is only done on Linux on Z and why we are preloading this DLL in the first place as the reason is non-obvious.", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r379548864", "createdAt": "2020-02-14T17:16:18Z", "author": {"login": "fjeremic"}, "path": "runtime/j9vm/jvm.c", "diffHunk": "@@ -1189,6 +1189,14 @@ preloadLibraries(void)\n \t * location if not preloaded. */\n \tpreloadLibrary(J9_HARMONY_PORT_LIBRARY_SHIM_DLL_NAME, TRUE);\n #endif /* J9VM_OPT_HARMONY */\n+\n+#if (defined(S390) && defined(LINUX))\n+\tvoid *zlibDLL = preloadLibrary(J9_ZIP_DLL_NAME, TRUE);\n+\tif (NULL == zlibDLL) {\n+\t\tfprintf(stderr,\"Failed to load: %s\\n\", J9_ZIP_DLL_NAME);\n+\t\texit( -1 );\t/* failed */\n+\t}\n+#endif /* defined(S390) && defined(LINUX) */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0103a6e4b665f5e614e1b20b65c92d2e336d514"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTUwODE4OnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyMDozNVrOFuvxfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyMDozNVrOFuvxfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2MTUzMw==", "bodyText": "Multi-line comments should be consistent with the rest of the codebase. I've also amended the comment slightly to improve the grammar:\n\t\t\t/*\n\t\t\t * On Linux on Z libj9jit dynamically loads libj9zlib as it is used for AOT method data compression\n\t\t\t * which is currently only enabled on Z platform. We want to ensure that when the JVM loads libj9jit,\n\t\t\t * libj9zlib is already loaded. See eclipse/openj9#8561 for more details.\n\t\t\t */", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r384561533", "createdAt": "2020-02-26T15:20:35Z", "author": {"login": "fjeremic"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2844,6 +2844,23 @@ modifyDllLoadTable(J9JavaVM * vm, J9Pool* loadTable, J9VMInitArgs* j9vm_args)\n \t\t\t\t\treturn JNI_ERR;\n \t\t\t\t}\n \t\t\t}\n+\n+\t\t\t/*\n+\t\t\tOn Linux on Z it needs to open the libj9zlib to load libj9jit as it is used for AOT method\n+\t\t\tdata compression which is currently only enabled on Z platform. To make sure when JVM loads \n+\t\t\tlibj9jit, libj9zlib is already loaded, we are openning it.\n+\t\t\tFor more details see OpenJ9 PR#8561\n+\t\t\t*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "530d10b8fa2143e0ad268d5b5e5274121f65318c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTUxMDY5OnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyMTowOFrOFuvzCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyMTowOFrOFuvzCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2MTkzMA==", "bodyText": "Ifdefs should begin at column 0 (no indentation) to be consistent with other ifdefs.", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r384561930", "createdAt": "2020-02-26T15:21:08Z", "author": {"login": "fjeremic"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2844,6 +2844,23 @@ modifyDllLoadTable(J9JavaVM * vm, J9Pool* loadTable, J9VMInitArgs* j9vm_args)\n \t\t\t\t\treturn JNI_ERR;\n \t\t\t\t}\n \t\t\t}\n+\n+\t\t\t/*\n+\t\t\tOn Linux on Z it needs to open the libj9zlib to load libj9jit as it is used for AOT method\n+\t\t\tdata compression which is currently only enabled on Z platform. To make sure when JVM loads \n+\t\t\tlibj9jit, libj9zlib is already loaded, we are openning it.\n+\t\t\tFor more details see OpenJ9 PR#8561\n+\t\t\t*/\n+\t\t\t#if (defined(S390) && defined(LINUX))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "530d10b8fa2143e0ad268d5b5e5274121f65318c"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTUxNDk3OnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyMjowNFrOFuv1mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNToyMjowNFrOFuv1mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2MjU4NQ==", "bodyText": "Are we able to use j9str_printf here? See an example 6 lines below. Let's try to be safe by passing the length of the temporary buffer so we don't have buffer overflows here.", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r384562585", "createdAt": "2020-02-26T15:22:04Z", "author": {"login": "fjeremic"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2844,6 +2844,23 @@ modifyDllLoadTable(J9JavaVM * vm, J9Pool* loadTable, J9VMInitArgs* j9vm_args)\n \t\t\t\t\treturn JNI_ERR;\n \t\t\t\t}\n \t\t\t}\n+\n+\t\t\t/*\n+\t\t\tOn Linux on Z it needs to open the libj9zlib to load libj9jit as it is used for AOT method\n+\t\t\tdata compression which is currently only enabled on Z platform. To make sure when JVM loads \n+\t\t\tlibj9jit, libj9zlib is already loaded, we are openning it.\n+\t\t\tFor more details see OpenJ9 PR#8561\n+\t\t\t*/\n+\t\t\t#if (defined(S390) && defined(LINUX))\n+\t\t\t\tchar zlibDll[EsMaxPath];\n+\t\t\t\tchar *zlibDllDir = zlibDll;\n+\t\t\t\tstrcpy(zlibDllDir, vm->j9libvmDirectory);\n+\t\t\t\tstrncat(zlibDllDir, DIR_SEPARATOR_STR, sizeof(DIR_SEPARATOR_STR)-1);\n+\t\t\t\tstrncat(zlibDllDir, J9_ZIP_DLL_NAME, sizeof(J9_ZIP_DLL_NAME)-1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "530d10b8fa2143e0ad268d5b5e5274121f65318c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTU1Mzk1OnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozMDoxOVrOFuwNzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozMDoxOVrOFuwNzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2ODc4MQ==", "bodyText": "please introduce a scope as c89 requires that variables are defined at the top of a scope", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r384568781", "createdAt": "2020-02-26T15:30:19Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2844,6 +2844,23 @@ modifyDllLoadTable(J9JavaVM * vm, J9Pool* loadTable, J9VMInitArgs* j9vm_args)\n \t\t\t\t\treturn JNI_ERR;\n \t\t\t\t}\n \t\t\t}\n+\n+\t\t\t/*\n+\t\t\tOn Linux on Z it needs to open the libj9zlib to load libj9jit as it is used for AOT method\n+\t\t\tdata compression which is currently only enabled on Z platform. To make sure when JVM loads \n+\t\t\tlibj9jit, libj9zlib is already loaded, we are openning it.\n+\t\t\tFor more details see OpenJ9 PR#8561\n+\t\t\t*/\n+\t\t\t#if (defined(S390) && defined(LINUX))\n+\t\t\t\tchar zlibDll[EsMaxPath];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "530d10b8fa2143e0ad268d5b5e5274121f65318c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTU1OTg1OnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozMTozNlrOFuwRag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozMTozNlrOFuwRag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU2OTcwNg==", "bodyText": "Please always use opening and closing { & } curly braces for control flow.  It's too easy to indent code that looks like it should be part of the if and isn't if the braces aren't there.", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r384569706", "createdAt": "2020-02-26T15:31:36Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2844,6 +2844,23 @@ modifyDllLoadTable(J9JavaVM * vm, J9Pool* loadTable, J9VMInitArgs* j9vm_args)\n \t\t\t\t\treturn JNI_ERR;\n \t\t\t\t}\n \t\t\t}\n+\n+\t\t\t/*\n+\t\t\tOn Linux on Z it needs to open the libj9zlib to load libj9jit as it is used for AOT method\n+\t\t\tdata compression which is currently only enabled on Z platform. To make sure when JVM loads \n+\t\t\tlibj9jit, libj9zlib is already loaded, we are openning it.\n+\t\t\tFor more details see OpenJ9 PR#8561\n+\t\t\t*/\n+\t\t\t#if (defined(S390) && defined(LINUX))\n+\t\t\t\tchar zlibDll[EsMaxPath];\n+\t\t\t\tchar *zlibDllDir = zlibDll;\n+\t\t\t\tstrcpy(zlibDllDir, vm->j9libvmDirectory);\n+\t\t\t\tstrncat(zlibDllDir, DIR_SEPARATOR_STR, sizeof(DIR_SEPARATOR_STR)-1);\n+\t\t\t\tstrncat(zlibDllDir, J9_ZIP_DLL_NAME, sizeof(J9_ZIP_DLL_NAME)-1);\n+\t\t\t\tif (0 != j9sl_open_shared_library(zlibDllDir, &(entry->descriptor), openFlags))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "530d10b8fa2143e0ad268d5b5e5274121f65318c"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTU2MjE5OnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozMjoxNVrOFuwTBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTozMjoxNVrOFuwTBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU3MDExOQ==", "bodyText": "If the preload fails, shouldn't this return an error and prevent the VM from starting?", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r384570119", "createdAt": "2020-02-26T15:32:15Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2844,6 +2844,23 @@ modifyDllLoadTable(J9JavaVM * vm, J9Pool* loadTable, J9VMInitArgs* j9vm_args)\n \t\t\t\t\treturn JNI_ERR;\n \t\t\t\t}\n \t\t\t}\n+\n+\t\t\t/*\n+\t\t\tOn Linux on Z it needs to open the libj9zlib to load libj9jit as it is used for AOT method\n+\t\t\tdata compression which is currently only enabled on Z platform. To make sure when JVM loads \n+\t\t\tlibj9jit, libj9zlib is already loaded, we are openning it.\n+\t\t\tFor more details see OpenJ9 PR#8561\n+\t\t\t*/\n+\t\t\t#if (defined(S390) && defined(LINUX))\n+\t\t\t\tchar zlibDll[EsMaxPath];\n+\t\t\t\tchar *zlibDllDir = zlibDll;\n+\t\t\t\tstrcpy(zlibDllDir, vm->j9libvmDirectory);\n+\t\t\t\tstrncat(zlibDllDir, DIR_SEPARATOR_STR, sizeof(DIR_SEPARATOR_STR)-1);\n+\t\t\t\tstrncat(zlibDllDir, J9_ZIP_DLL_NAME, sizeof(J9_ZIP_DLL_NAME)-1);\n+\t\t\t\tif (0 != j9sl_open_shared_library(zlibDllDir, &(entry->descriptor), openFlags))\n+ \t\t\t\t\tj9tty_printf(PORTLIB, \"Error: Failed to open zlib DLL %s (%s)\\n\", zlibDllDir, j9error_last_error_message());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "530d10b8fa2143e0ad268d5b5e5274121f65318c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4Mzg5NjUyOnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjozMjo0OVrOFvGmCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjozMjo0OVrOFvGmCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNTQzNA==", "bodyText": "where does this memory get freed?  Likely needs to be added at the end of the scope", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r384935434", "createdAt": "2020-02-27T06:32:49Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2843,8 +2843,41 @@ modifyDllLoadTable(J9JavaVM * vm, J9Pool* loadTable, J9VMInitArgs* j9vm_args)\n \t\t\t\t\treturn JNI_ERR;\n \t\t\t\t}\n \t\t\t}\n+\n+\t\t\t/*\n+\t\t\t* On Linux on Z libj9jit dynamically loads libj9zlib as it is used for AOT method data compression\n+\t\t\t* which is currently only enabled on Z platform. We want to ensure that when the JVM loads libj9jit,\n+\t\t\t* libj9zlib is already loaded. See eclipse/openj9#8561 for more details.\n+\t\t\t*/\n+#if (defined(S390) && defined(LINUX))\n+\t\t\t{\n+\t\t\tchar zlibDll[EsMaxPath];\n+\t\t\tchar *zlibDllDir = zlibDll;\n+\t\t\tUDATA expectedZlibPathLength = 0;\n+\t\t\tUDATA zlibDllLength = 0;\n+\t\t\tUDATA zlibFileHandle = 0;\n+\t\t\t\n+\t\t\tzlibDllLength = strlen(vm->j9libvmDirectory);\n+\t\t\texpectedZlibPathLength = zlibDllLength + (sizeof(DIR_SEPARATOR_STR) - 1) + strlen(J9_ZIP_DLL_NAME) + 1;\n+\t\t\tif (expectedZlibPathLength > EsMaxPath) {\n+\t\t\t\tzlibDllDir = j9mem_allocate_memory(expectedZlibPathLength, OMRMEM_CATEGORY_VM);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "986aa314b060cef51709e4fd8949dad95861a2ef"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzkwMDAwOnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjozNDoyMlrOFvGoCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjozNDoyMlrOFvGoCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNTk0Ng==", "bodyText": "Vaguely this code to do the free\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t}\n          \n          \n            \n            \t\t\t}\n          \n          \n            \n            \t\t\tif (zlibDllDir != zlibDll) {\n          \n          \n            \n            \t\t\t\tj9_mem_free_memory(zlibDllDir);\n          \n          \n            \n            \t\t\t\tzlibDllDir = NULL;\n          \n          \n            \n            \t\t\t}", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r384935946", "createdAt": "2020-02-27T06:34:22Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2843,8 +2843,41 @@ modifyDllLoadTable(J9JavaVM * vm, J9Pool* loadTable, J9VMInitArgs* j9vm_args)\n \t\t\t\t\treturn JNI_ERR;\n \t\t\t\t}\n \t\t\t}\n+\n+\t\t\t/*\n+\t\t\t* On Linux on Z libj9jit dynamically loads libj9zlib as it is used for AOT method data compression\n+\t\t\t* which is currently only enabled on Z platform. We want to ensure that when the JVM loads libj9jit,\n+\t\t\t* libj9zlib is already loaded. See eclipse/openj9#8561 for more details.\n+\t\t\t*/\n+#if (defined(S390) && defined(LINUX))\n+\t\t\t{\n+\t\t\tchar zlibDll[EsMaxPath];\n+\t\t\tchar *zlibDllDir = zlibDll;\n+\t\t\tUDATA expectedZlibPathLength = 0;\n+\t\t\tUDATA zlibDllLength = 0;\n+\t\t\tUDATA zlibFileHandle = 0;\n+\t\t\t\n+\t\t\tzlibDllLength = strlen(vm->j9libvmDirectory);\n+\t\t\texpectedZlibPathLength = zlibDllLength + (sizeof(DIR_SEPARATOR_STR) - 1) + strlen(J9_ZIP_DLL_NAME) + 1;\n+\t\t\tif (expectedZlibPathLength > EsMaxPath) {\n+\t\t\t\tzlibDllDir = j9mem_allocate_memory(expectedZlibPathLength, OMRMEM_CATEGORY_VM);\n+\t\t\t\tif (NULL == zlibDllDir) {\n+\t\t\t\t\treturn JNI_ERR;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tj9str_printf(PORTLIB, zlibDllDir, expectedZlibPathLength, \"%s%s%s\",\n+\t\t\t\t\tvm->j9libvmDirectory, DIR_SEPARATOR_STR, J9_ZIP_DLL_NAME);\n+\t\t\tzlibFileHandle = j9sl_open_shared_library(zlibDllDir, &(entry->descriptor), openFlags);\n+\t\t\tif (0 != zlibFileHandle) {\n+\t\t\t\tj9tty_printf(PORTLIB, \"Error: Failed to open zlib DLL %s (%s)\\n\", zlibDllDir, j9error_last_error_message());\n+\t\t\t\treturn JNI_ERR;\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "986aa314b060cef51709e4fd8949dad95861a2ef"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzkwNzQ0OnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjozODoyN1rOFvGslA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjozODoyN1rOFvGslA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDkzNzEwOA==", "bodyText": "This block of code splits the existing code to calculate the dllCheckPathPtr in half.  It would be better to put the new code immediately after the openFlags = 0 line so the rest of the existing code is kept in a logical block", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r384937108", "createdAt": "2020-02-27T06:38:27Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2843,8 +2843,41 @@ modifyDllLoadTable(J9JavaVM * vm, J9Pool* loadTable, J9VMInitArgs* j9vm_args)\n \t\t\t\t\treturn JNI_ERR;\n \t\t\t\t}\n \t\t\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "986aa314b060cef51709e4fd8949dad95861a2ef"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzUzODc4OnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNDozNzoyMFrOFvpTnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNDozNzoyMFrOFvpTnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNDE1Nw==", "bodyText": "Shouldn't this be checking and freeing zlibDllDir?", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r385504157", "createdAt": "2020-02-28T04:37:20Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2827,6 +2827,45 @@ modifyDllLoadTable(J9JavaVM * vm, J9Pool* loadTable, J9VMInitArgs* j9vm_args)\n \t\t\tUDATA openFlags = (entry->loadFlags & XRUN_LIBRARY) ? J9PORT_SLOPEN_DECORATE | J9PORT_SLOPEN_LAZY : J9PORT_SLOPEN_DECORATE;\n \t\t\tUDATA jitFileHandle = 0;\n \t\t\tUDATA rc = 0;\n+\n+\t\t\t/*\n+\t\t\t* On Linux on Z libj9jit dynamically loads libj9zlib as it is used for AOT method data compression\n+\t\t\t* which is currently only enabled on Z platform. We want to ensure that when the JVM loads libj9jit,\n+\t\t\t* libj9zlib is already loaded. See eclipse/openj9#8561 for more details.\n+\t\t\t*/\n+#if (defined(S390) && defined(LINUX))\n+\t\t\t{\n+\t\t\tchar zlibDll[EsMaxPath];\n+\t\t\tchar *zlibDllDir = zlibDll;\n+\t\t\tUDATA expectedZlibPathLength = 0;\n+\t\t\tUDATA zlibDllLength = 0;\n+\t\t\tUDATA zlibFileHandle = 0;\n+\t\t\tUDATA zlibRC = 0;\n+\t\t\t\n+\t\t\tzlibDllLength = strlen(vm->j9libvmDirectory);\n+\t\t\texpectedZlibPathLength = zlibDllLength + (sizeof(DIR_SEPARATOR_STR) - 1) + strlen(J9_ZIP_DLL_NAME) + 1;\n+\t\t\tif (expectedZlibPathLength > EsMaxPath) {\n+\t\t\t\tzlibDllDir = j9mem_allocate_memory(expectedZlibPathLength, OMRMEM_CATEGORY_VM);\n+\t\t\t\tif (NULL == zlibDllDir) {\n+\t\t\t\t\treturn JNI_ERR;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t\tj9str_printf(PORTLIB, zlibDllDir, expectedZlibPathLength, \"%s%s%s\",\n+\t\t\t\t\tvm->j9libvmDirectory, DIR_SEPARATOR_STR, J9_ZIP_DLL_NAME);\n+\t\t\tzlibFileHandle = j9sl_open_shared_library(zlibDllDir, &(entry->descriptor), openFlags);\n+\t\t\tif (0 != zlibFileHandle) {\n+\t\t\t\tj9tty_printf(PORTLIB, \"Error: Failed to open zlib DLL %s (%s)\\n\", zlibDllDir, j9error_last_error_message());\n+\t\t\t\tzlibRC = JNI_ERR;\n+\t\t\t}\n+\t\t\tif (dllCheckPath != dllCheckPathPtr) {\n+\t\t\t\tj9mem_free_memory(dllCheckPathPtr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a89449f2f40886f87f752cd1906190c63fb59c9c"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzUzOTI4OnYy", "diffSide": "RIGHT", "path": "runtime/vm/jvminit.c", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNDozNzo1NVrOFvpT-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNDozNzo1NVrOFvpT-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNDI1MA==", "bodyText": "please remove this and the newline below as they aren't necessary", "url": "https://github.com/eclipse-openj9/openj9/pull/8561#discussion_r385504250", "createdAt": "2020-02-28T04:37:55Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/jvminit.c", "diffHunk": "@@ -2843,8 +2882,10 @@ modifyDllLoadTable(J9JavaVM * vm, J9Pool* loadTable, J9VMInitArgs* j9vm_args)\n \t\t\t\t\treturn JNI_ERR;\n \t\t\t\t}\n \t\t\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a89449f2f40886f87f752cd1906190c63fb59c9c"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 716, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}