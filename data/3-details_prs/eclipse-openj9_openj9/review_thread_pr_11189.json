{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNjM4MjU1", "number": 11189, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODozNDoxOFrOE5n17Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMDo0NzoyOVrOE6Opwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODU3MDY5OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODozNDoxOVrOH0MJVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODozNDoxOVrOH0MJVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ4Njk5Ng==", "bodyText": "Please add a leading underscore to this variable", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r524486996", "createdAt": "2020-11-16T18:34:19Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.hpp", "diffHunk": "@@ -526,9 +526,11 @@ class ClientSessionHT\n    PersistentUnorderedMap<uint64_t, ClientSessionData*> _clientSessionMap;\n \n    uint64_t _timeOfLastPurge;\n+   TR::CompilationInfo *compInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8757fa378a9d13ee2d5bc3460caa68e1aaed2813"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODU3NDk3OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODozNTozMFrOH0ML-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODozNTozMFrOH0ML-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ4NzY3NQ==", "bodyText": "Let's group OLD_AGE and OLD_AGE_UNDER_LOW_MEMORY", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r524487675", "createdAt": "2020-11-16T18:35:30Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -680,8 +680,10 @@ ClientSessionHT::allocate()\n    }\n \n ClientSessionHT::ClientSessionHT() : _clientSessionMap(decltype(_clientSessionMap)::allocator_type(TR::Compiler->persistentAllocator())),\n-                                     TIME_BETWEEN_PURGES(1000*60*30), // JITServer TODO: this must come from options\n-                                     OLD_AGE(1000*60*1000) // 1000 minutes\n+                                     TIME_BETWEEN_PURGES(1000*60*1), // JITServer TODO: this must come from options\n+                                     OLD_AGE(1000*60*1000), // 1000 minutes\n+                                     compInfo(TR::CompilationController::getCompilationInfo()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8757fa378a9d13ee2d5bc3460caa68e1aaed2813"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODU4Nzk3OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODozOTowM1rOH0MURw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODozOTowM1rOH0MURw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ4OTc5OQ==", "bodyText": "This code should be moved under the following if statement (where lowMemory is used) so that we don't execute it for nothing.", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r524489799", "createdAt": "2020-11-16T18:39:03Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -786,20 +788,44 @@ ClientSessionHT::purgeOldDataIfNeeded()\n    {\n    PORT_ACCESS_FROM_PORT(TR::Compiler->portLib);\n    int64_t crtTime = j9time_current_time_millis();\n+   bool incomplete;\n+   bool lowMemory = false;\n+   uint64_t freePhysicalMemory = compInfo->computeAndCacheFreePhysicalMemory(incomplete, 20); //check if memory is free\n+   if (freePhysicalMemory != OMRPORT_MEMINFO_NOT_AVAILABLE && !incomplete)\n+      {\n+      if (freePhysicalMemory < TR::Options::getSafeReservePhysicalMemoryValue())\n+         {\n+         lowMemory = true;\n+         }\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8757fa378a9d13ee2d5bc3460caa68e1aaed2813"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODU5OTcyOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODo0MTo0NVrOH0MbWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODo0MTo0NVrOH0MbWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ5MTYxMQ==", "bodyText": "To avoid duplicating the code you have a variable oldAge that receives either OLD_AGE or OLD_AGE_UNDER_LOW_MEMORY depending on the situation.", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r524491611", "createdAt": "2020-11-16T18:41:45Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -786,20 +788,44 @@ ClientSessionHT::purgeOldDataIfNeeded()\n    {\n    PORT_ACCESS_FROM_PORT(TR::Compiler->portLib);\n    int64_t crtTime = j9time_current_time_millis();\n+   bool incomplete;\n+   bool lowMemory = false;\n+   uint64_t freePhysicalMemory = compInfo->computeAndCacheFreePhysicalMemory(incomplete, 20); //check if memory is free\n+   if (freePhysicalMemory != OMRPORT_MEMINFO_NOT_AVAILABLE && !incomplete)\n+      {\n+      if (freePhysicalMemory < TR::Options::getSafeReservePhysicalMemoryValue())\n+         {\n+         lowMemory = true;\n+         }\n+      }\n    if (crtTime - _timeOfLastPurge > TIME_BETWEEN_PURGES)\n       {\n       // Time for a purge operation.\n       // Scan the entire table and delete old elements that are not in use\n       for (auto iter = _clientSessionMap.begin(); iter != _clientSessionMap.end(); ++iter)\n          {\n          TR_ASSERT(iter->second->getInUse() >= 0, \"_inUse=%d must be positive\\n\", iter->second->getInUse());\n-         if (iter->second->getInUse() == 0 &&\n-             crtTime - iter->second->getTimeOflastAccess() > OLD_AGE)\n+         if(!lowMemory)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8757fa378a9d13ee2d5bc3460caa68e1aaed2813"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDI2MjcxOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/J9Options.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMzo1Nzo0MFrOH0d4Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMzo1Nzo0MFrOH0d4Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc3NzQ4Ng==", "bodyText": "Since this is used only for JITServer we need to protect these lines with ifdef", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r524777486", "createdAt": "2020-11-16T23:57:40Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/J9Options.cpp", "diffHunk": "@@ -122,6 +122,8 @@ int32_t J9::Options::_bigAppSampleThresholdAdjust = 3; //amount to shift the hot\n int32_t J9::Options::_availableCPUPercentage = 100;\n int32_t J9::Options::_cpuCompTimeExpensiveThreshold = 4000;\n uintptr_t J9::Options::_compThreadAffinityMask = 0;\n+int64_t J9::Options::_oldAge = 1000*60*1000; // 1000 minutes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d94252cb3fdd3801b5e7b12e889c33ddb1c005"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDI3NzcxOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/J9Options.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDowMDoyN1rOH0eCuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDowMDoyN1rOH0eCuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc4MDIxNw==", "bodyText": "oldAge is not used hen memory is low. We need to options here one that corresponds to OLD_AGE and another one that corresponds to OLD_AGE_UNDER_LOW_MEMORY", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r524780217", "createdAt": "2020-11-17T00:00:27Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/J9Options.cpp", "diffHunk": "@@ -903,6 +905,8 @@ TR::OptionTable OMR::Options::_feOptions[] = {\n         TR::Options::setStaticNumeric, (intptr_t)&TR::Options::_numDLTBufferMatchesToEagerlyIssueCompReq, 0, \"F%d\", NOT_IN_SUBSET},\n    {\"numInterpCompReqToExitIdleMode=\", \"M<nnn>\\tNumber of first time comp. req. that takes the JIT out of idle mode\",\n         TR::Options::setStaticNumeric, (intptr_t)&TR::Options::_numFirstTimeCompilationsToExitIdleMode, 0, \"F%d\", NOT_IN_SUBSET },\n+   {\"oldAge=\", \" \\tDefines what an old entry means when memory is low\", ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d94252cb3fdd3801b5e7b12e889c33ddb1c005"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDI4NTU3OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDowMTo1NFrOH0eIKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDowMTo1NFrOH0eIKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc4MTYxMQ==", "bodyText": "Let's put OLD_AGE and OLD_AGE_UNDER_LOW_MEMORY one after another because they are related", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r524781611", "createdAt": "2020-11-17T00:01:54Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -680,8 +680,10 @@ ClientSessionHT::allocate()\n    }\n \n ClientSessionHT::ClientSessionHT() : _clientSessionMap(decltype(_clientSessionMap)::allocator_type(TR::Compiler->persistentAllocator())),\n-                                     TIME_BETWEEN_PURGES(1000*60*30), // JITServer TODO: this must come from options\n-                                     OLD_AGE(1000*60*1000) // 1000 minutes\n+                                     TIME_BETWEEN_PURGES(TR::Options::_timeBetweenPurges), // JITServer TODO: this must come from options\n+                                     OLD_AGE(TR::Options::_oldAge), // 1000 minutes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d94252cb3fdd3801b5e7b12e889c33ddb1c005"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDI5Nzk4OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDowNDoxMlrOH0eRIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDowNDoxMlrOH0eRIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDc4MzkwNw==", "bodyText": "The value for OLD_AGE_UNDER_LOW_MEMORY should also come from a JIT option.", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r524783907", "createdAt": "2020-11-17T00:04:12Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -680,8 +680,10 @@ ClientSessionHT::allocate()\n    }\n \n ClientSessionHT::ClientSessionHT() : _clientSessionMap(decltype(_clientSessionMap)::allocator_type(TR::Compiler->persistentAllocator())),\n-                                     TIME_BETWEEN_PURGES(1000*60*30), // JITServer TODO: this must come from options\n-                                     OLD_AGE(1000*60*1000) // 1000 minutes\n+                                     TIME_BETWEEN_PURGES(TR::Options::_timeBetweenPurges), // JITServer TODO: this must come from options\n+                                     OLD_AGE(TR::Options::_oldAge), // 1000 minutes\n+                                     _compInfo(TR::CompilationController::getCompilationInfo()),\n+                                     OLD_AGE_UNDER_LOW_MEMORY(1000*60*5) // 5 minutes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d94252cb3fdd3801b5e7b12e889c33ddb1c005"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDQ4MzEzOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDo1ODowOFrOH0gMRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDo1ODowOFrOH0gMRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxNTQzMA==", "bodyText": "We can omit the last parameter of this call to use the default value of 500 ms.", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r524815430", "createdAt": "2020-11-17T00:58:08Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -786,15 +788,26 @@ ClientSessionHT::purgeOldDataIfNeeded()\n    {\n    PORT_ACCESS_FROM_PORT(TR::Compiler->portLib);\n    int64_t crtTime = j9time_current_time_millis();\n+   bool incomplete;\n+   int64_t oldAge = OLD_AGE;\n+\n    if (crtTime - _timeOfLastPurge > TIME_BETWEEN_PURGES)\n       {\n+      uint64_t freePhysicalMemory = _compInfo->computeAndCacheFreePhysicalMemory(incomplete, 20); //check if memory is free", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d94252cb3fdd3801b5e7b12e889c33ddb1c005"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDQ4NzM0OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDo1OTo0N1rOH0gOlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDo1OTo0N1rOH0gOlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxNjAyMQ==", "bodyText": "Maybe change the message here to also show how old the data was", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r524816021", "createdAt": "2020-11-17T00:59:47Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -786,15 +788,26 @@ ClientSessionHT::purgeOldDataIfNeeded()\n    {\n    PORT_ACCESS_FROM_PORT(TR::Compiler->portLib);\n    int64_t crtTime = j9time_current_time_millis();\n+   bool incomplete;\n+   int64_t oldAge = OLD_AGE;\n+\n    if (crtTime - _timeOfLastPurge > TIME_BETWEEN_PURGES)\n       {\n+      uint64_t freePhysicalMemory = _compInfo->computeAndCacheFreePhysicalMemory(incomplete, 20); //check if memory is free\n+      if (freePhysicalMemory != OMRPORT_MEMINFO_NOT_AVAILABLE && !incomplete)\n+         {\n+         if (freePhysicalMemory < TR::Options::getSafeReservePhysicalMemoryValue())\n+            {\n+            oldAge = OLD_AGE_UNDER_LOW_MEMORY; //memory is low\n+            }\n+         }\n       // Time for a purge operation.\n       // Scan the entire table and delete old elements that are not in use\n       for (auto iter = _clientSessionMap.begin(); iter != _clientSessionMap.end(); ++iter)\n          {\n          TR_ASSERT(iter->second->getInUse() >= 0, \"_inUse=%d must be positive\\n\", iter->second->getInUse());\n          if (iter->second->getInUse() == 0 &&\n-             crtTime - iter->second->getTimeOflastAccess() > OLD_AGE)\n+            crtTime - iter->second->getTimeOflastAccess() > oldAge)\n             {\n             if (TR::Options::getVerboseOption(TR_VerboseJITServer))\n                TR_VerboseLog::writeLineLocked(TR_Vlog_JITServer, \"Server will purge session data for clientUID %llu\", (unsigned long long)iter->first);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d94252cb3fdd3801b5e7b12e889c33ddb1c005"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDU1Nzg2OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/J9Options.hpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTo0NzoyNFrOH1G6dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTo0NzoyNFrOH1G6dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ0OTg0NA==", "bodyText": "#if defined(J9VM_OPT_JITSERVER) needed here as well", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r525449844", "createdAt": "2020-11-17T19:47:24Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/J9Options.hpp", "diffHunk": "@@ -257,6 +257,9 @@ class OMR_EXTENSIBLE Options : public OMR::OptionsConnector\n    static int32_t _TLHPrefetchBoundaryLineCount;\n    static int32_t _TLHPrefetchTLHEndLineCount;\n    static int32_t _numFirstTimeCompilationsToExitIdleMode; // use large number to disable the feature\n+   static int64_t _oldAge;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af333d558c8505db23df8d83106988653095b67"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDU2MzQxOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/runtime/JITClientSession.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTo0ODoxNVrOH1G-bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxOTo0ODoxNVrOH1G-bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTQ1MDg2MQ==", "bodyText": "Please remove the TODO comment", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r525450861", "createdAt": "2020-11-17T19:48:15Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/runtime/JITClientSession.cpp", "diffHunk": "@@ -680,8 +680,10 @@ ClientSessionHT::allocate()\n    }\n \n ClientSessionHT::ClientSessionHT() : _clientSessionMap(decltype(_clientSessionMap)::allocator_type(TR::Compiler->persistentAllocator())),\n-                                     TIME_BETWEEN_PURGES(1000*60*30), // JITServer TODO: this must come from options\n-                                     OLD_AGE(1000*60*1000) // 1000 minutes\n+                                     TIME_BETWEEN_PURGES(TR::Options::_timeBetweenPurges), // JITServer TODO: this must come from options", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af333d558c8505db23df8d83106988653095b67"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDkyOTMwOnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/J9Options.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMDo0NzoyOVrOH1K1sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMDo0NzoyOVrOH1K1sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTUxNDE2Mg==", "bodyText": "I think we need to provide a bit of context for someone that reads the help for this option:\n\"Defines what an old JITServer cache entry means\"\nSimilarly below.", "url": "https://github.com/eclipse-openj9/openj9/pull/11189#discussion_r525514162", "createdAt": "2020-11-17T20:47:29Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/J9Options.cpp", "diffHunk": "@@ -903,6 +908,12 @@ TR::OptionTable OMR::Options::_feOptions[] = {\n         TR::Options::setStaticNumeric, (intptr_t)&TR::Options::_numDLTBufferMatchesToEagerlyIssueCompReq, 0, \"F%d\", NOT_IN_SUBSET},\n    {\"numInterpCompReqToExitIdleMode=\", \"M<nnn>\\tNumber of first time comp. req. that takes the JIT out of idle mode\",\n         TR::Options::setStaticNumeric, (intptr_t)&TR::Options::_numFirstTimeCompilationsToExitIdleMode, 0, \"F%d\", NOT_IN_SUBSET },\n+#if defined(J9VM_OPT_JITSERVER)\n+   {\"oldAge=\", \" \\tDefines what an old entry means\", ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af333d558c8505db23df8d83106988653095b67"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 925, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}