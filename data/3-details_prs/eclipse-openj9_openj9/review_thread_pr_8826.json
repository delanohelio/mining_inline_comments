{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2Mzk4MjU2", "number": 8826, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTowOTo0MVrODnHgyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTo0OToxNVrODnIn7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzQ0MTM3OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTowOTo0MVrOF07UPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTozNDowOVrOF08cdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MjExMQ==", "bodyText": "The name 'MIXED_MODE' is a little generic; it would be better if it mentioned 'references'.", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391042111", "createdAt": "2020-03-11T15:09:41Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java", "diffHunk": "@@ -71,6 +71,8 @@\n \n \tpublic static final String MM_OBJECT_ACCESS_BARRIER_VERSION = \"ALG_MM_OBJECT_ACCESS_BARRIER_VERSION\";\n \n+\tpublic static final String MIXED_MODE = \"MIXED_MODE\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e3895a5c6d4ecbdda7dd09f4c5e35c1a8544532"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2MDU5OQ==", "bodyText": "Fixed (along with the java final variable).", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391060599", "createdAt": "2020-03-11T15:34:09Z", "author": {"login": "gacholio"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/j9/AlgorithmVersion.java", "diffHunk": "@@ -71,6 +71,8 @@\n \n \tpublic static final String MM_OBJECT_ACCESS_BARRIER_VERSION = \"ALG_MM_OBJECT_ACCESS_BARRIER_VERSION\";\n \n+\tpublic static final String MIXED_MODE = \"MIXED_MODE\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MjExMQ=="}, "originalCommit": {"oid": "8e3895a5c6d4ecbdda7dd09f4c5e35c1a8544532"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzQ2Nzg4OnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNToxNTo0NFrOF07lmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTozMzo1MVrOF08bhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0NjU1Mg==", "bodyText": "formatting: space after catch", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391046552", "createdAt": "2020-03-11T15:15:44Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "diffHunk": "@@ -44,14 +52,27 @@\n \tprivate static int[] counts;\n \tprivate static long probes;\n \tprivate static long hits;\n-\t\n+\tpublic static final boolean mixedMode;\n+\tpublic static final boolean compressObjectReferences;\n+\n \t/**\n \t * Determines whether java/lang/String is backed by a byte[] array if true or char[] if false.\n \t */\n \tprivate static Boolean isStringBackedByByteArray = null;\n \t\n \tstatic {\n \t\tinitializeCache();\n+\t\ttry {\n+\t\t\tmixedMode = AlgorithmVersion.getVersionOf(AlgorithmVersion.MIXED_MODE).getAlgorithmVersion() > 0;\n+\t\t\tif (mixedMode) {\n+\t\t\t\tJ9JavaVMPointer vm = J9RASHelper.getVM(DataType.getJ9RASPointer());\n+\t\t\t\tcompressObjectReferences = vm.extendedRuntimeFlags2().anyBitsIn(J9_EXTENDED_RUNTIME2_COMPRESS_OBJECT_REFERENCES);\n+\t\t\t} else {\n+\t\t\t\tcompressObjectReferences = J9BuildFlags.gc_compressedPointers;\n+\t\t\t}\n+\t\t} catch(CorruptDataException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e3895a5c6d4ecbdda7dd09f4c5e35c1a8544532"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2MDM1Ng==", "bodyText": "Fixed.", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391060356", "createdAt": "2020-03-11T15:33:51Z", "author": {"login": "gacholio"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "diffHunk": "@@ -44,14 +52,27 @@\n \tprivate static int[] counts;\n \tprivate static long probes;\n \tprivate static long hits;\n-\t\n+\tpublic static final boolean mixedMode;\n+\tpublic static final boolean compressObjectReferences;\n+\n \t/**\n \t * Determines whether java/lang/String is backed by a byte[] array if true or char[] if false.\n \t */\n \tprivate static Boolean isStringBackedByByteArray = null;\n \t\n \tstatic {\n \t\tinitializeCache();\n+\t\ttry {\n+\t\t\tmixedMode = AlgorithmVersion.getVersionOf(AlgorithmVersion.MIXED_MODE).getAlgorithmVersion() > 0;\n+\t\t\tif (mixedMode) {\n+\t\t\t\tJ9JavaVMPointer vm = J9RASHelper.getVM(DataType.getJ9RASPointer());\n+\t\t\t\tcompressObjectReferences = vm.extendedRuntimeFlags2().anyBitsIn(J9_EXTENDED_RUNTIME2_COMPRESS_OBJECT_REFERENCES);\n+\t\t\t} else {\n+\t\t\t\tcompressObjectReferences = J9BuildFlags.gc_compressedPointers;\n+\t\t\t}\n+\t\t} catch(CorruptDataException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0NjU1Mg=="}, "originalCommit": {"oid": "8e3895a5c6d4ecbdda7dd09f4c5e35c1a8544532"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzQ4NjYzOnYy", "diffSide": "LEFT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNToxOTo1OVrOF07xkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTozNjoyNVrOF08jPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0OTYxNg==", "bodyText": "Is interp_flagsInClassSlot another of those flags that can't be turned off?", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391049616", "createdAt": "2020-03-11T15:19:59Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "diffHunk": "@@ -68,27 +89,44 @@ public static boolean isIndexable(J9ObjectPointer objPointer) throws CorruptData\n \tpublic static U32 flags(J9ObjectPointer objPointer) throws CorruptDataException\n \t{\t\t\n \t\tif(J9BuildFlags.interp_flagsInClassSlot) {\n-\t\t\tlong bitmask = (J9Consts.J9_REQUIRED_CLASS_ALIGNMENT - 1);\n-\t\t\tJ9ClassPointer clazz = objPointer.clazz();\n+\t\t\tlong bitmask = J9Consts.J9_REQUIRED_CLASS_ALIGNMENT - 1;\n+\t\t\tUDATA clazz = rawClazz(objPointer);\n \t\t\t\n-\t\t\treturn new U32(UDATA.cast(clazz).bitAnd(bitmask));\n+\t\t\treturn new U32(clazz.bitAnd(bitmask));\n \t\t} else {\n \t\t\tthrow new UnsupportedOperationException(\"Only builds with interp_flagsInClassSlot currently supported.\");\n \t\t}\n \t}\n \n+\tpublic static long headerSize()\n+\t{\n+\t\tif (mixedMode) {\n+\t\t\tif (compressObjectReferences) {\n+\t\t\t\treturn J9ObjectCompressed.SIZEOF;\n+\t\t\t}\n+\t\t\treturn J9ObjectFull.SIZEOF;\n+\t\t}\n+\t\treturn J9Object.SIZEOF;\n+\t}\n+\n+\tpublic static UDATA rawClazz(J9ObjectPointer objPointer) throws CorruptDataException\n+\t{\n+\t\tif (mixedMode) {\n+\t\t\tif (compressObjectReferences) {\n+\t\t\t\treturn J9ObjectCompressedPointer.cast(objPointer).clazz();\n+\t\t\t}\n+\t\t\treturn J9ObjectFullPointer.cast(objPointer).clazz();\n+\t\t}\n+\t\treturn UDATA.cast(objPointer.clazz());\n+\t}\n+\n \tpublic static J9ClassPointer clazz(J9ObjectPointer objPointer) throws CorruptDataException\n \t{\n \t\tJ9ClassPointer classPointer = checkClassCache(objPointer);\n \t\tif(null == classPointer) {\n-\t\t\tif(J9BuildFlags.interp_flagsInClassSlot) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e3895a5c6d4ecbdda7dd09f4c5e35c1a8544532"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA1NzUwNA==", "bodyText": "Yes - I'm not fixing anything to do with this in this PR.", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391057504", "createdAt": "2020-03-11T15:30:14Z", "author": {"login": "gacholio"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "diffHunk": "@@ -68,27 +89,44 @@ public static boolean isIndexable(J9ObjectPointer objPointer) throws CorruptData\n \tpublic static U32 flags(J9ObjectPointer objPointer) throws CorruptDataException\n \t{\t\t\n \t\tif(J9BuildFlags.interp_flagsInClassSlot) {\n-\t\t\tlong bitmask = (J9Consts.J9_REQUIRED_CLASS_ALIGNMENT - 1);\n-\t\t\tJ9ClassPointer clazz = objPointer.clazz();\n+\t\t\tlong bitmask = J9Consts.J9_REQUIRED_CLASS_ALIGNMENT - 1;\n+\t\t\tUDATA clazz = rawClazz(objPointer);\n \t\t\t\n-\t\t\treturn new U32(UDATA.cast(clazz).bitAnd(bitmask));\n+\t\t\treturn new U32(clazz.bitAnd(bitmask));\n \t\t} else {\n \t\t\tthrow new UnsupportedOperationException(\"Only builds with interp_flagsInClassSlot currently supported.\");\n \t\t}\n \t}\n \n+\tpublic static long headerSize()\n+\t{\n+\t\tif (mixedMode) {\n+\t\t\tif (compressObjectReferences) {\n+\t\t\t\treturn J9ObjectCompressed.SIZEOF;\n+\t\t\t}\n+\t\t\treturn J9ObjectFull.SIZEOF;\n+\t\t}\n+\t\treturn J9Object.SIZEOF;\n+\t}\n+\n+\tpublic static UDATA rawClazz(J9ObjectPointer objPointer) throws CorruptDataException\n+\t{\n+\t\tif (mixedMode) {\n+\t\t\tif (compressObjectReferences) {\n+\t\t\t\treturn J9ObjectCompressedPointer.cast(objPointer).clazz();\n+\t\t\t}\n+\t\t\treturn J9ObjectFullPointer.cast(objPointer).clazz();\n+\t\t}\n+\t\treturn UDATA.cast(objPointer.clazz());\n+\t}\n+\n \tpublic static J9ClassPointer clazz(J9ObjectPointer objPointer) throws CorruptDataException\n \t{\n \t\tJ9ClassPointer classPointer = checkClassCache(objPointer);\n \t\tif(null == classPointer) {\n-\t\t\tif(J9BuildFlags.interp_flagsInClassSlot) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0OTYxNg=="}, "originalCommit": {"oid": "8e3895a5c6d4ecbdda7dd09f4c5e35c1a8544532"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA2MjMzMg==", "bodyText": "That's fine with me; I just wanted to be sure that the removal of the test of interp_flagsInClassSlot was intended and will be safe.", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391062332", "createdAt": "2020-03-11T15:36:25Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "diffHunk": "@@ -68,27 +89,44 @@ public static boolean isIndexable(J9ObjectPointer objPointer) throws CorruptData\n \tpublic static U32 flags(J9ObjectPointer objPointer) throws CorruptDataException\n \t{\t\t\n \t\tif(J9BuildFlags.interp_flagsInClassSlot) {\n-\t\t\tlong bitmask = (J9Consts.J9_REQUIRED_CLASS_ALIGNMENT - 1);\n-\t\t\tJ9ClassPointer clazz = objPointer.clazz();\n+\t\t\tlong bitmask = J9Consts.J9_REQUIRED_CLASS_ALIGNMENT - 1;\n+\t\t\tUDATA clazz = rawClazz(objPointer);\n \t\t\t\n-\t\t\treturn new U32(UDATA.cast(clazz).bitAnd(bitmask));\n+\t\t\treturn new U32(clazz.bitAnd(bitmask));\n \t\t} else {\n \t\t\tthrow new UnsupportedOperationException(\"Only builds with interp_flagsInClassSlot currently supported.\");\n \t\t}\n \t}\n \n+\tpublic static long headerSize()\n+\t{\n+\t\tif (mixedMode) {\n+\t\t\tif (compressObjectReferences) {\n+\t\t\t\treturn J9ObjectCompressed.SIZEOF;\n+\t\t\t}\n+\t\t\treturn J9ObjectFull.SIZEOF;\n+\t\t}\n+\t\treturn J9Object.SIZEOF;\n+\t}\n+\n+\tpublic static UDATA rawClazz(J9ObjectPointer objPointer) throws CorruptDataException\n+\t{\n+\t\tif (mixedMode) {\n+\t\t\tif (compressObjectReferences) {\n+\t\t\t\treturn J9ObjectCompressedPointer.cast(objPointer).clazz();\n+\t\t\t}\n+\t\t\treturn J9ObjectFullPointer.cast(objPointer).clazz();\n+\t\t}\n+\t\treturn UDATA.cast(objPointer.clazz());\n+\t}\n+\n \tpublic static J9ClassPointer clazz(J9ObjectPointer objPointer) throws CorruptDataException\n \t{\n \t\tJ9ClassPointer classPointer = checkClassCache(objPointer);\n \t\tif(null == classPointer) {\n-\t\t\tif(J9BuildFlags.interp_flagsInClassSlot) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0OTYxNg=="}, "originalCommit": {"oid": "8e3895a5c6d4ecbdda7dd09f4c5e35c1a8544532"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzYyMzUxOnYy", "diffSide": "RIGHT", "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTo0OToxNVrOF09JWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjowMTo1MVrOF09vhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3MjA5MA==", "bodyText": "Since you removed the test of interp_flagsInClassSlot below, perhaps you should remove it here too?", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391072090", "createdAt": "2020-03-11T15:49:15Z", "author": {"login": "keithc-ca"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "diffHunk": "@@ -68,27 +89,44 @@ public static boolean isIndexable(J9ObjectPointer objPointer) throws CorruptData\n \tpublic static U32 flags(J9ObjectPointer objPointer) throws CorruptDataException\n \t{\t\t\n \t\tif(J9BuildFlags.interp_flagsInClassSlot) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c29749bbd0bb5d109223ee772b10e5f35b9b87c7"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA4MTg2Mg==", "bodyText": "Done.", "url": "https://github.com/eclipse-openj9/openj9/pull/8826#discussion_r391081862", "createdAt": "2020-03-11T16:01:51Z", "author": {"login": "gacholio"}, "path": "debugtools/DDR_VM/src/com/ibm/j9ddr/vm29/pointer/helper/J9ObjectHelper.java", "diffHunk": "@@ -68,27 +89,44 @@ public static boolean isIndexable(J9ObjectPointer objPointer) throws CorruptData\n \tpublic static U32 flags(J9ObjectPointer objPointer) throws CorruptDataException\n \t{\t\t\n \t\tif(J9BuildFlags.interp_flagsInClassSlot) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA3MjA5MA=="}, "originalCommit": {"oid": "c29749bbd0bb5d109223ee772b10e5f35b9b87c7"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 516, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}