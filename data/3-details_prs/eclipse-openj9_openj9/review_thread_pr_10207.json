{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NTg1NjE2", "number": 10207, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo0NzowN1rOEQtavA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNToxMDowMlrOERFylQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTU2Nzk2OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo0NzowN1rOG1A4Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTozMDo1NFrOG1GuZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MjA1NQ==", "bodyText": "I would prefer these new flags follow the convention - start with J9AccClass", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458242055", "createdAt": "2020-07-21T16:47:07Z", "author": {"login": "gacholio"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -1059,17 +1059,17 @@ ROMClassBuilder::finishPrepareAndLaydown(\n  *                                  + UNUSED\n  *                                 + UNUSED\n  *                                + UNUSED\n- *                               + UNUSED\n+ *                              + J9AccHiddenClassOptionNestmate", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzNzg5Mw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458337893", "createdAt": "2020-07-21T19:30:54Z", "author": {"login": "hangshao0"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -1059,17 +1059,17 @@ ROMClassBuilder::finishPrepareAndLaydown(\n  *                                  + UNUSED\n  *                                 + UNUSED\n  *                                + UNUSED\n- *                               + UNUSED\n+ *                              + J9AccHiddenClassOptionNestmate", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MjA1NQ=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTU3MTY3OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassSegmentAllocationStrategy.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo0ODowMlrOG1A6Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTozMToyNVrOG1GvdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MjYxOA==", "bodyText": "Brackets please.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458242618", "createdAt": "2020-07-21T16:48:02Z", "author": {"login": "gacholio"}, "path": "runtime/bcutil/ROMClassSegmentAllocationStrategy.cpp", "diffHunk": "@@ -34,9 +34,10 @@ ROMClassSegmentAllocationStrategy::allocate(UDATA bytesRequired)\n \t/* Scan existing segments for one large enough to hold the new ROM class */\n \n \tJ9MemorySegment* segment = NULL;\n-\tbool isLoadedByAnonClassLoader = _classLoader == _javaVM->anonClassLoader;\n \t/* always make a new segment if its an anonClass */\n-\tif (!isLoadedByAnonClassLoader) {\n+\tbool allocNewSegment = (_allocNewSeg || _classLoader == _javaVM->anonClassLoader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzODE2NA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458338164", "createdAt": "2020-07-21T19:31:25Z", "author": {"login": "hangshao0"}, "path": "runtime/bcutil/ROMClassSegmentAllocationStrategy.cpp", "diffHunk": "@@ -34,9 +34,10 @@ ROMClassSegmentAllocationStrategy::allocate(UDATA bytesRequired)\n \t/* Scan existing segments for one large enough to hold the new ROM class */\n \n \tJ9MemorySegment* segment = NULL;\n-\tbool isLoadedByAnonClassLoader = _classLoader == _javaVM->anonClassLoader;\n \t/* always make a new segment if its an anonClass */\n-\tif (!isLoadedByAnonClassLoader) {\n+\tbool allocNewSegment = (_allocNewSeg || _classLoader == _javaVM->anonClassLoader);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0MjYxOA=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTU3OTk5OnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/clsldr.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MDowNFrOG1A_Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTozMTo1MlrOG1GwTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0Mzg5OQ==", "bodyText": "Extra blank", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458243899", "createdAt": "2020-07-21T16:50:04Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/clsldr.cpp", "diffHunk": "@@ -85,6 +93,66 @@ Java_java_lang_ClassLoader_defineClassImpl(JNIEnv *env, jobject receiver, jstrin\n \treturn result;\n }\n \n+#if JAVA_SPEC_VERSION >= 15\n+jclass JNICALL\n+Java_java_lang_ClassLoader_defineClassImpl1(JNIEnv *env, jobject receiver, jclass hostClass, jstring className, jbyteArray classRep, jobject protectionDomain, jboolean init, jint flags, jobject obj)\n+{\n+\tJ9VMThread *currentThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = currentThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tUDATA options = 0;\n+\t\n+\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\tif (NULL == classRep) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGNULLPOINTEREXCEPTION, NULL);\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t\treturn NULL;\n+\t}\n+\tif (NULL == hostClass) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGILLEGALARGUMENTEXCEPTION, NULL);\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t\treturn NULL;\n+\t}\n+\n+\tj9object_t hostClassObject = J9_JNI_UNWRAP_REFERENCE(hostClass);\n+\tJ9Class *hostClazz =  J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, hostClassObject);\n+\n+\tvmFuncs->internalExitVMToJNI(currentThread);\n+\n+\toptions |= (J9_FINDCLASS_FLAG_HIDDEN | J9_FINDCLASS_FLAG_UNSAFE | J9_FINDCLASS_FLAG_ANON);\n+\tif (J9_ARE_ALL_BITS_SET(flags, CLASSOPTION_FLAG_NESTMATE)) {\n+\t\toptions |= J9_FINDCLASS_FLAG_CLASS_OPTION_NESTMATE;\n+\t}\n+\tif (J9_ARE_ALL_BITS_SET(flags, CLASSOPTION_FLAG_STRONG )) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzODM4MQ==", "bodyText": "Fixed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458338381", "createdAt": "2020-07-21T19:31:52Z", "author": {"login": "hangshao0"}, "path": "runtime/jcl/common/clsldr.cpp", "diffHunk": "@@ -85,6 +93,66 @@ Java_java_lang_ClassLoader_defineClassImpl(JNIEnv *env, jobject receiver, jstrin\n \treturn result;\n }\n \n+#if JAVA_SPEC_VERSION >= 15\n+jclass JNICALL\n+Java_java_lang_ClassLoader_defineClassImpl1(JNIEnv *env, jobject receiver, jclass hostClass, jstring className, jbyteArray classRep, jobject protectionDomain, jboolean init, jint flags, jobject obj)\n+{\n+\tJ9VMThread *currentThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = currentThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tUDATA options = 0;\n+\t\n+\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\tif (NULL == classRep) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGNULLPOINTEREXCEPTION, NULL);\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t\treturn NULL;\n+\t}\n+\tif (NULL == hostClass) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGILLEGALARGUMENTEXCEPTION, NULL);\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t\treturn NULL;\n+\t}\n+\n+\tj9object_t hostClassObject = J9_JNI_UNWRAP_REFERENCE(hostClass);\n+\tJ9Class *hostClazz =  J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, hostClassObject);\n+\n+\tvmFuncs->internalExitVMToJNI(currentThread);\n+\n+\toptions |= (J9_FINDCLASS_FLAG_HIDDEN | J9_FINDCLASS_FLAG_UNSAFE | J9_FINDCLASS_FLAG_ANON);\n+\tif (J9_ARE_ALL_BITS_SET(flags, CLASSOPTION_FLAG_NESTMATE)) {\n+\t\toptions |= J9_FINDCLASS_FLAG_CLASS_OPTION_NESTMATE;\n+\t}\n+\tif (J9_ARE_ALL_BITS_SET(flags, CLASSOPTION_FLAG_STRONG )) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0Mzg5OQ=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTU4MTM1OnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/clsldr.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MDoyM1rOG1BACw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTozMjoyMFrOG1GxIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NDEwNw==", "bodyText": "Extra line", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458244107", "createdAt": "2020-07-21T16:50:23Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/clsldr.cpp", "diffHunk": "@@ -85,6 +93,66 @@ Java_java_lang_ClassLoader_defineClassImpl(JNIEnv *env, jobject receiver, jstrin\n \treturn result;\n }\n \n+#if JAVA_SPEC_VERSION >= 15\n+jclass JNICALL\n+Java_java_lang_ClassLoader_defineClassImpl1(JNIEnv *env, jobject receiver, jclass hostClass, jstring className, jbyteArray classRep, jobject protectionDomain, jboolean init, jint flags, jobject obj)\n+{\n+\tJ9VMThread *currentThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = currentThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tUDATA options = 0;\n+\t\n+\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\tif (NULL == classRep) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGNULLPOINTEREXCEPTION, NULL);\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t\treturn NULL;\n+\t}\n+\tif (NULL == hostClass) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGILLEGALARGUMENTEXCEPTION, NULL);\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t\treturn NULL;\n+\t}\n+\n+\tj9object_t hostClassObject = J9_JNI_UNWRAP_REFERENCE(hostClass);\n+\tJ9Class *hostClazz =  J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, hostClassObject);\n+\n+\tvmFuncs->internalExitVMToJNI(currentThread);\n+\n+\toptions |= (J9_FINDCLASS_FLAG_HIDDEN | J9_FINDCLASS_FLAG_UNSAFE | J9_FINDCLASS_FLAG_ANON);\n+\tif (J9_ARE_ALL_BITS_SET(flags, CLASSOPTION_FLAG_NESTMATE)) {\n+\t\toptions |= J9_FINDCLASS_FLAG_CLASS_OPTION_NESTMATE;\n+\t}\n+\tif (J9_ARE_ALL_BITS_SET(flags, CLASSOPTION_FLAG_STRONG )) {\n+\t\toptions |= J9_FINDCLASS_FLAG_CLASS_OPTION_STRONG;\n+\t}\n+\t\n+\tjsize length = env->GetArrayLength(classRep);\n+\n+\tjclass result = defineClassCommon(env, receiver, className, classRep, 0, length, protectionDomain, options, hostClazz, NULL);\n+\tif (env->ExceptionCheck()) {\n+\t\treturn NULL;\n+\t} else if (NULL == result) {\n+\t\tthrowNewInternalError(env, NULL);\n+\t\treturn NULL;\n+\t}\n+\n+\tif (init) {\n+\t\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\t\tj9object_t classObject = J9_JNI_UNWRAP_REFERENCE(result);\n+\t\tJ9Class *j9clazz =  J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, classObject);\n+\t\tif (VM_VMHelpers::classRequiresInitialization(currentThread, j9clazz)) {\n+\t\t\tvmFuncs->initializeClass(currentThread, j9clazz);\n+\t\t}\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODMzODU5Mg==", "bodyText": "Removed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458338592", "createdAt": "2020-07-21T19:32:20Z", "author": {"login": "hangshao0"}, "path": "runtime/jcl/common/clsldr.cpp", "diffHunk": "@@ -85,6 +93,66 @@ Java_java_lang_ClassLoader_defineClassImpl(JNIEnv *env, jobject receiver, jstrin\n \treturn result;\n }\n \n+#if JAVA_SPEC_VERSION >= 15\n+jclass JNICALL\n+Java_java_lang_ClassLoader_defineClassImpl1(JNIEnv *env, jobject receiver, jclass hostClass, jstring className, jbyteArray classRep, jobject protectionDomain, jboolean init, jint flags, jobject obj)\n+{\n+\tJ9VMThread *currentThread = (J9VMThread *)env;\n+\tJ9JavaVM *vm = currentThread->javaVM;\n+\tJ9InternalVMFunctions *vmFuncs = vm->internalVMFunctions;\n+\tUDATA options = 0;\n+\t\n+\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\tif (NULL == classRep) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGNULLPOINTEREXCEPTION, NULL);\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t\treturn NULL;\n+\t}\n+\tif (NULL == hostClass) {\n+\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGILLEGALARGUMENTEXCEPTION, NULL);\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t\treturn NULL;\n+\t}\n+\n+\tj9object_t hostClassObject = J9_JNI_UNWRAP_REFERENCE(hostClass);\n+\tJ9Class *hostClazz =  J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, hostClassObject);\n+\n+\tvmFuncs->internalExitVMToJNI(currentThread);\n+\n+\toptions |= (J9_FINDCLASS_FLAG_HIDDEN | J9_FINDCLASS_FLAG_UNSAFE | J9_FINDCLASS_FLAG_ANON);\n+\tif (J9_ARE_ALL_BITS_SET(flags, CLASSOPTION_FLAG_NESTMATE)) {\n+\t\toptions |= J9_FINDCLASS_FLAG_CLASS_OPTION_NESTMATE;\n+\t}\n+\tif (J9_ARE_ALL_BITS_SET(flags, CLASSOPTION_FLAG_STRONG )) {\n+\t\toptions |= J9_FINDCLASS_FLAG_CLASS_OPTION_STRONG;\n+\t}\n+\t\n+\tjsize length = env->GetArrayLength(classRep);\n+\n+\tjclass result = defineClassCommon(env, receiver, className, classRep, 0, length, protectionDomain, options, hostClazz, NULL);\n+\tif (env->ExceptionCheck()) {\n+\t\treturn NULL;\n+\t} else if (NULL == result) {\n+\t\tthrowNewInternalError(env, NULL);\n+\t\treturn NULL;\n+\t}\n+\n+\tif (init) {\n+\t\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\t\tj9object_t classObject = J9_JNI_UNWRAP_REFERENCE(result);\n+\t\tJ9Class *j9clazz =  J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, classObject);\n+\t\tif (VM_VMHelpers::classRequiresInitialization(currentThread, j9clazz)) {\n+\t\t\tvmFuncs->initializeClass(currentThread, j9clazz);\n+\t\t}\n+\t\tvmFuncs->internalExitVMToJNI(currentThread);\n+\t}\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NDEwNw=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTU4NDM2OnYy", "diffSide": "LEFT", "path": "runtime/jcl/common/java_lang_Class.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MTowNFrOG1BB1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTo0NjozN1rOG1HN4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NDU2Ng==", "bodyText": "Why is this code being removed?", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458244566", "createdAt": "2020-07-21T16:51:04Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/java_lang_Class.cpp", "diffHunk": "@@ -1812,17 +1812,6 @@ Java_java_lang_Class_getNestHostImpl(JNIEnv *env, jobject recv)\n \n \tif (NULL == nestHost) {\n \t\tJ9Class *clazzToUse = clazz;\n-#if JAVA_SPEC_VERSION >= 15", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0NTk1Mg==", "bodyText": "Our previous implementation used Unsafe.defineAnonymousClass() to define hidden classes. It did not take ClassOption.NESTMATE that is passed in, so we returned the nest host of hostClass for anonymous classes here as a temporary workaround to make java -version working. Change in this PR is taking care of the ClassOption.NESTMATE and setting J9AccHiddenClassOptionNestmate. The change in loadAndVerifyNestHost() in this PR is now checking J9AccHiddenClassOptionNestmate and returning the correct nest host for hidden classes, so this piece of code can be removed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458345952", "createdAt": "2020-07-21T19:46:37Z", "author": {"login": "hangshao0"}, "path": "runtime/jcl/common/java_lang_Class.cpp", "diffHunk": "@@ -1812,17 +1812,6 @@ Java_java_lang_Class_getNestHostImpl(JNIEnv *env, jobject recv)\n \n \tif (NULL == nestHost) {\n \t\tJ9Class *clazzToUse = clazz;\n-#if JAVA_SPEC_VERSION >= 15", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NDU2Ng=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTU4Njc0OnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/java_lang_Class.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MTozN1rOG1BDSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTo0NzoyOFrOG1HPxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NDkzOA==", "bodyText": "Please us the macro from j9modifiers_api.h", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458244938", "createdAt": "2020-07-21T16:51:37Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/java_lang_Class.cpp", "diffHunk": "@@ -1937,4 +1926,22 @@ Java_java_lang_Class_getNestMembersImpl(JNIEnv *env, jobject recv)\n #endif /* JAVA_SPEC_VERSION >= 11 */\n }\n \n+jboolean JNICALL \n+Java_java_lang_Class_isHiddenImpl(JNIEnv *env, jobject recv)\n+{\n+#if JAVA_SPEC_VERSION >= 15\n+\tjboolean result = JNI_FALSE;\n+\tJ9VMThread *currentThread = (J9VMThread*)env;\n+\tJ9InternalVMFunctions *vmFuncs = currentThread->javaVM->internalVMFunctions;\n+\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\tJ9Class *clazz = J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, J9_JNI_UNWRAP_REFERENCE(recv));\n+\tresult = J9_ARE_ALL_BITS_SET(clazz->romClass->extraModifiers, J9AccClassHiddenClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0NjQzOA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458346438", "createdAt": "2020-07-21T19:47:28Z", "author": {"login": "hangshao0"}, "path": "runtime/jcl/common/java_lang_Class.cpp", "diffHunk": "@@ -1937,4 +1926,22 @@ Java_java_lang_Class_getNestMembersImpl(JNIEnv *env, jobject recv)\n #endif /* JAVA_SPEC_VERSION >= 11 */\n }\n \n+jboolean JNICALL \n+Java_java_lang_Class_isHiddenImpl(JNIEnv *env, jobject recv)\n+{\n+#if JAVA_SPEC_VERSION >= 15\n+\tjboolean result = JNI_FALSE;\n+\tJ9VMThread *currentThread = (J9VMThread*)env;\n+\tJ9InternalVMFunctions *vmFuncs = currentThread->javaVM->internalVMFunctions;\n+\tvmFuncs->internalEnterVMFromJNI(currentThread);\n+\tJ9Class *clazz = J9VM_J9CLASS_FROM_HEAPCLASS(currentThread, J9_JNI_UNWRAP_REFERENCE(recv));\n+\tresult = J9_ARE_ALL_BITS_SET(clazz->romClass->extraModifiers, J9AccClassHiddenClass);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NDkzOA=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTU4OTAwOnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/jcldefine.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MjoxMVrOG1BEpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTo0NzozOFrOG1HQEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NTI4Ng==", "bodyText": "Please move this comment above the if.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458245286", "createdAt": "2020-07-21T16:52:11Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/jcldefine.c", "diffHunk": "@@ -131,14 +131,17 @@ defineClassCommon(JNIEnv *env, jobject classLoaderObject,\n retry:\n \n \tomrthread_monitor_enter(vm->classTableMutex);\n-\n-\tif (vmFuncs->hashClassTableAt(classLoader, utf8Name, utf8Length) != NULL) {\n-\t\t/* Bad, we have already defined this class - fail */\n-\t\tomrthread_monitor_exit(vm->classTableMutex);\n-\t\tif (J9_ARE_NO_BITS_SET(options, J9_FINDCLASS_FLAG_NAME_IS_INVALID)) {\n-\t\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGLINKAGEERROR, (UDATA *)*(j9object_t*)className);\n+\t\n+\tif (J9_ARE_NO_BITS_SET(options, J9_FINDCLASS_FLAG_HIDDEN)) {\n+\t\t/* Hidden class is never added into the hash table */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0NjUxMg==", "bodyText": "Fixed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458346512", "createdAt": "2020-07-21T19:47:38Z", "author": {"login": "hangshao0"}, "path": "runtime/jcl/common/jcldefine.c", "diffHunk": "@@ -131,14 +131,17 @@ defineClassCommon(JNIEnv *env, jobject classLoaderObject,\n retry:\n \n \tomrthread_monitor_enter(vm->classTableMutex);\n-\n-\tif (vmFuncs->hashClassTableAt(classLoader, utf8Name, utf8Length) != NULL) {\n-\t\t/* Bad, we have already defined this class - fail */\n-\t\tomrthread_monitor_exit(vm->classTableMutex);\n-\t\tif (J9_ARE_NO_BITS_SET(options, J9_FINDCLASS_FLAG_NAME_IS_INVALID)) {\n-\t\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGLINKAGEERROR, (UDATA *)*(j9object_t*)className);\n+\t\n+\tif (J9_ARE_NO_BITS_SET(options, J9_FINDCLASS_FLAG_HIDDEN)) {\n+\t\t/* Hidden class is never added into the hash table */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NTI4Ng=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTU5MDAxOnYy", "diffSide": "RIGHT", "path": "runtime/jcl/common/jcldefine.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1MjoyNVrOG1BFRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDowOTowOVrOG1H77A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NTQ0Nw==", "bodyText": "NULL !=", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458245447", "createdAt": "2020-07-21T16:52:25Z", "author": {"login": "gacholio"}, "path": "runtime/jcl/common/jcldefine.c", "diffHunk": "@@ -131,14 +131,17 @@ defineClassCommon(JNIEnv *env, jobject classLoaderObject,\n retry:\n \n \tomrthread_monitor_enter(vm->classTableMutex);\n-\n-\tif (vmFuncs->hashClassTableAt(classLoader, utf8Name, utf8Length) != NULL) {\n-\t\t/* Bad, we have already defined this class - fail */\n-\t\tomrthread_monitor_exit(vm->classTableMutex);\n-\t\tif (J9_ARE_NO_BITS_SET(options, J9_FINDCLASS_FLAG_NAME_IS_INVALID)) {\n-\t\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGLINKAGEERROR, (UDATA *)*(j9object_t*)className);\n+\t\n+\tif (J9_ARE_NO_BITS_SET(options, J9_FINDCLASS_FLAG_HIDDEN)) {\n+\t\t/* Hidden class is never added into the hash table */\n+\t\tif (vmFuncs->hashClassTableAt(classLoader, utf8Name, utf8Length) != NULL) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1Nzc0MA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458357740", "createdAt": "2020-07-21T20:09:09Z", "author": {"login": "hangshao0"}, "path": "runtime/jcl/common/jcldefine.c", "diffHunk": "@@ -131,14 +131,17 @@ defineClassCommon(JNIEnv *env, jobject classLoaderObject,\n retry:\n \n \tomrthread_monitor_enter(vm->classTableMutex);\n-\n-\tif (vmFuncs->hashClassTableAt(classLoader, utf8Name, utf8Length) != NULL) {\n-\t\t/* Bad, we have already defined this class - fail */\n-\t\tomrthread_monitor_exit(vm->classTableMutex);\n-\t\tif (J9_ARE_NO_BITS_SET(options, J9_FINDCLASS_FLAG_NAME_IS_INVALID)) {\n-\t\t\tvmFuncs->setCurrentException(currentThread, J9VMCONSTANTPOOL_JAVALANGLINKAGEERROR, (UDATA *)*(j9object_t*)className);\n+\t\n+\tif (J9_ARE_NO_BITS_SET(options, J9_FINDCLASS_FLAG_HIDDEN)) {\n+\t\t/* Hidden class is never added into the hash table */\n+\t\tif (vmFuncs->hashClassTableAt(classLoader, utf8Name, utf8Length) != NULL) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NTQ0Nw=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTU5NjAyOnYy", "diffSide": "RIGHT", "path": "runtime/oti/j9.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1NDowMVrOG1BJFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxOTo1MDoyNlrOG1HWKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NjQyMw==", "bodyText": "Has this case been tested? It took a while to get this right the first time.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458246423", "createdAt": "2020-07-21T16:54:01Z", "author": {"login": "gacholio"}, "path": "runtime/oti/j9.h", "diffHunk": "@@ -124,7 +124,7 @@ typedef struct J9ClassLoaderWalkState {\n #define J9CLASS_IS_MIXED(ramClass) (((J9CLASS_FLAGS(ramClass) >> J9AccClassRAMShapeShift) & OBJECT_HEADER_SHAPE_MASK) == OBJECT_HEADER_SHAPE_MIXED)\n \n #define J9CLASS_IS_EXEMPT_FROM_VALIDATION(clazz) \\\n-\t(J9ROMCLASS_IS_UNSAFE((clazz)->romClass) || J9_ARE_ANY_BITS_SET((clazz)->classFlags, J9ClassIsExemptFromValidation))\n+\t((J9ROMCLASS_IS_UNSAFE((clazz)->romClass) && !J9ROMCLASS_IS_HIDDEN((clazz)->romClass)) || (J9_ARE_ANY_BITS_SET((clazz)->classFlags, J9ClassIsExemptFromValidation)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM0ODA3NQ==", "bodyText": "Yes, it is tested. This does not change behavior for all unsafe non-hidden classes.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458348075", "createdAt": "2020-07-21T19:50:26Z", "author": {"login": "hangshao0"}, "path": "runtime/oti/j9.h", "diffHunk": "@@ -124,7 +124,7 @@ typedef struct J9ClassLoaderWalkState {\n #define J9CLASS_IS_MIXED(ramClass) (((J9CLASS_FLAGS(ramClass) >> J9AccClassRAMShapeShift) & OBJECT_HEADER_SHAPE_MASK) == OBJECT_HEADER_SHAPE_MIXED)\n \n #define J9CLASS_IS_EXEMPT_FROM_VALIDATION(clazz) \\\n-\t(J9ROMCLASS_IS_UNSAFE((clazz)->romClass) || J9_ARE_ANY_BITS_SET((clazz)->classFlags, J9ClassIsExemptFromValidation))\n+\t((J9ROMCLASS_IS_UNSAFE((clazz)->romClass) && !J9ROMCLASS_IS_HIDDEN((clazz)->romClass)) || (J9_ARE_ANY_BITS_SET((clazz)->classFlags, J9ClassIsExemptFromValidation)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NjQyMw=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTYwMzcxOnYy", "diffSide": "RIGHT", "path": "runtime/oti/j9javaaccessflags.h", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1NTo1MlrOG1BN7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDozOTozNVrOG1I7Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NzY2Mw==", "bodyText": "Are you sure these bits are available? I see overlap with varags (likely doesn't apply to classes) and ValueType.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458247663", "createdAt": "2020-07-21T16:55:52Z", "author": {"login": "gacholio"}, "path": "runtime/oti/j9javaaccessflags.h", "diffHunk": "@@ -118,6 +119,8 @@\n #define J9AccVolatile 0x40\n #define J9AccRecord 0x400\n #define J9AccSealed 0x200\n+#define J9AccHiddenClassOptionNestmate 0x80", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1MzI0Nw==", "bodyText": "I see the value of varags and ValueType. But they are set to romClass->modifiers. The new J9AccClassXXXX this PR added are set to romClass->extraModifiers.\nHowever, I noticed both J9AccVarArgs and J9AccTransient are 0x80, and they are both set to romClass->modifiers. Incorrect ?", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458353247", "createdAt": "2020-07-21T20:00:02Z", "author": {"login": "hangshao0"}, "path": "runtime/oti/j9javaaccessflags.h", "diffHunk": "@@ -118,6 +119,8 @@\n #define J9AccVolatile 0x40\n #define J9AccRecord 0x400\n #define J9AccSealed 0x200\n+#define J9AccHiddenClassOptionNestmate 0x80", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NzY2Mw=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3Mzk0Mg==", "bodyText": "However, I noticed both J9AccVarArgs and J9AccTransient are 0x80, and they are both set to romClass->modifiers.\n\nThis comment can be ignored. After a closer look, they are setting to romMethod->modifiers and romField->modifiers.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458373942", "createdAt": "2020-07-21T20:39:35Z", "author": {"login": "hangshao0"}, "path": "runtime/oti/j9javaaccessflags.h", "diffHunk": "@@ -118,6 +119,8 @@\n #define J9AccVolatile 0x40\n #define J9AccRecord 0x400\n #define J9AccSealed 0x200\n+#define J9AccHiddenClassOptionNestmate 0x80", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0NzY2Mw=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTYxMTMxOnYy", "diffSide": "RIGHT", "path": "runtime/util/hshelp.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1Nzo0NlrOG1BSoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDowMDowOVrOG1HqmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0ODg2NQ==", "bodyText": "macro please", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458248865", "createdAt": "2020-07-21T16:57:46Z", "author": {"login": "gacholio"}, "path": "runtime/util/hshelp.c", "diffHunk": "@@ -2469,8 +2469,15 @@ recreateRAMClasses(J9VMThread * currentThread, J9HashTable * classHashTable, J9H\n \t\tif (fastHCR) {\n \t\t\toptions |= J9_FINDCLASS_FLAG_FAST_HCR;\n \t\t}\n-\n-\t\tif (J9_ARE_ALL_BITS_SET(originalRAMClass->classFlags, J9ClassIsAnonymous)) {\n+\t\tif (J9_ARE_ANY_BITS_SET(originalRAMClass->romClass->extraModifiers, J9AccClassHiddenClass)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1MzMwNA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458353304", "createdAt": "2020-07-21T20:00:09Z", "author": {"login": "hangshao0"}, "path": "runtime/util/hshelp.c", "diffHunk": "@@ -2469,8 +2469,15 @@ recreateRAMClasses(J9VMThread * currentThread, J9HashTable * classHashTable, J9H\n \t\tif (fastHCR) {\n \t\t\toptions |= J9_FINDCLASS_FLAG_FAST_HCR;\n \t\t}\n-\n-\t\tif (J9_ARE_ALL_BITS_SET(originalRAMClass->classFlags, J9ClassIsAnonymous)) {\n+\t\tif (J9_ARE_ANY_BITS_SET(originalRAMClass->romClass->extraModifiers, J9AccClassHiddenClass)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0ODg2NQ=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTYxMjY3OnYy", "diffSide": "RIGHT", "path": "runtime/util/hshelp.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1ODowOFrOG1BTgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDowMDozOVrOG1HrkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0OTA4OQ==", "bodyText": "macro please", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458249089", "createdAt": "2020-07-21T16:58:08Z", "author": {"login": "gacholio"}, "path": "runtime/util/hshelp.c", "diffHunk": "@@ -3440,7 +3447,16 @@ reloadROMClasses(J9VMThread * currentThread, jint class_count, const jvmtiClassD\n \t\t\toptions = options | J9_FINDCLASS_FLAG_UNSAFE;\n \t\t}\n \t\tloadData.classLoader = originalRAMClass->classLoader;\n-\t\tif (J9_ARE_ALL_BITS_SET(originalRAMClass->classFlags, J9ClassIsAnonymous)) {\n+\t\tif (J9_ARE_ANY_BITS_SET(originalRAMClass->romClass->extraModifiers, J9AccClassHiddenClass)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1MzU1Mw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458353553", "createdAt": "2020-07-21T20:00:39Z", "author": {"login": "hangshao0"}, "path": "runtime/util/hshelp.c", "diffHunk": "@@ -3440,7 +3447,16 @@ reloadROMClasses(J9VMThread * currentThread, jint class_count, const jvmtiClassD\n \t\t\toptions = options | J9_FINDCLASS_FLAG_UNSAFE;\n \t\t}\n \t\tloadData.classLoader = originalRAMClass->classLoader;\n-\t\tif (J9_ARE_ALL_BITS_SET(originalRAMClass->classFlags, J9ClassIsAnonymous)) {\n+\t\tif (J9_ARE_ANY_BITS_SET(originalRAMClass->romClass->extraModifiers, J9AccClassHiddenClass)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0OTA4OQ=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTYxNDQ4OnYy", "diffSide": "RIGHT", "path": "runtime/util/hshelp.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNjo1ODozNlrOG1BUrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDowMDozMFrOG1HrUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0OTM5MQ==", "bodyText": "These tests could also be macros in j9modifiers_api.h", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458249391", "createdAt": "2020-07-21T16:58:36Z", "author": {"login": "gacholio"}, "path": "runtime/util/hshelp.c", "diffHunk": "@@ -2469,8 +2469,15 @@ recreateRAMClasses(J9VMThread * currentThread, J9HashTable * classHashTable, J9H\n \t\tif (fastHCR) {\n \t\t\toptions |= J9_FINDCLASS_FLAG_FAST_HCR;\n \t\t}\n-\n-\t\tif (J9_ARE_ALL_BITS_SET(originalRAMClass->classFlags, J9ClassIsAnonymous)) {\n+\t\tif (J9_ARE_ANY_BITS_SET(originalRAMClass->romClass->extraModifiers, J9AccClassHiddenClass)) {\n+\t\t\toptions |= (J9_FINDCLASS_FLAG_HIDDEN | J9_FINDCLASS_FLAG_UNSAFE | J9_FINDCLASS_FLAG_ANON);\n+\t\t\tif (J9_ARE_ANY_BITS_SET(originalRAMClass->romClass->extraModifiers, J9AccHiddenClassOptionNestmate)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1MzQ5MQ==", "bodyText": "Added macros.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458353491", "createdAt": "2020-07-21T20:00:30Z", "author": {"login": "hangshao0"}, "path": "runtime/util/hshelp.c", "diffHunk": "@@ -2469,8 +2469,15 @@ recreateRAMClasses(J9VMThread * currentThread, J9HashTable * classHashTable, J9H\n \t\tif (fastHCR) {\n \t\t\toptions |= J9_FINDCLASS_FLAG_FAST_HCR;\n \t\t}\n-\n-\t\tif (J9_ARE_ALL_BITS_SET(originalRAMClass->classFlags, J9ClassIsAnonymous)) {\n+\t\tif (J9_ARE_ANY_BITS_SET(originalRAMClass->romClass->extraModifiers, J9AccClassHiddenClass)) {\n+\t\t\toptions |= (J9_FINDCLASS_FLAG_HIDDEN | J9_FINDCLASS_FLAG_UNSAFE | J9_FINDCLASS_FLAG_ANON);\n+\t\t\tif (J9_ARE_ANY_BITS_SET(originalRAMClass->romClass->extraModifiers, J9AccHiddenClassOptionNestmate)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI0OTM5MQ=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTYyNDAwOnYy", "diffSide": "RIGHT", "path": "runtime/vm/ClassInitialization.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowMTowNFrOG1Bamw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDowODo0MlrOG1H7LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MDkwNw==", "bodyText": "Why does the EXEMPT macro allow hidden classes only to have them excluded here? Seems confusing.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458250907", "createdAt": "2020-07-21T17:01:04Z", "author": {"login": "gacholio"}, "path": "runtime/vm/ClassInitialization.cpp", "diffHunk": "@@ -157,11 +157,14 @@ performVerification(J9VMThread *currentThread, J9Class *clazz)\n \t\t/* See if this class should be verified:\n \t\t *\n \t\t * - Do not verify any class created by sun.misc.Unsafe\n+\t\t * - Do not verify hidden classes\n \t\t * - Do not verify any class which is marked for exclusion in the optional flags\n \t\t * - Verify every class whose bytecodes have been modified\n \t\t * - Do not verify bootstrap classes if the appropriate runtime flag is set\n \t\t */\n-\t\tif (!J9CLASS_IS_EXEMPT_FROM_VALIDATION(clazz) && J9_ARE_NO_BITS_SET(romClass->optionalFlags, J9_ROMCLASS_OPTINFO_VERIFY_EXCLUDE)) {\n+\t\tif (((!J9CLASS_IS_EXEMPT_FROM_VALIDATION(clazz)) && J9_ARE_NO_BITS_SET(romClass->extraModifiers, J9AccClassHiddenClass))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1NzU0OQ==", "bodyText": "If I allow J9AccClassHiddenClass go through this, we will eventually go into https://github.com/eclipse/openj9/blob/master/runtime/bcverify/vrfyhelp.c#L957. As hidden class is not in the hashtable, we won't be find the ramclass, causing crash later inside the verifier.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458357549", "createdAt": "2020-07-21T20:08:42Z", "author": {"login": "hangshao0"}, "path": "runtime/vm/ClassInitialization.cpp", "diffHunk": "@@ -157,11 +157,14 @@ performVerification(J9VMThread *currentThread, J9Class *clazz)\n \t\t/* See if this class should be verified:\n \t\t *\n \t\t * - Do not verify any class created by sun.misc.Unsafe\n+\t\t * - Do not verify hidden classes\n \t\t * - Do not verify any class which is marked for exclusion in the optional flags\n \t\t * - Verify every class whose bytecodes have been modified\n \t\t * - Do not verify bootstrap classes if the appropriate runtime flag is set\n \t\t */\n-\t\tif (!J9CLASS_IS_EXEMPT_FROM_VALIDATION(clazz) && J9_ARE_NO_BITS_SET(romClass->optionalFlags, J9_ROMCLASS_OPTINFO_VERIFY_EXCLUDE)) {\n+\t\tif (((!J9CLASS_IS_EXEMPT_FROM_VALIDATION(clazz)) && J9_ARE_NO_BITS_SET(romClass->extraModifiers, J9AccClassHiddenClass))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MDkwNw=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTYyNTYwOnYy", "diffSide": "RIGHT", "path": "runtime/vm/classsupport.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowMToyN1rOG1BbjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDowMDo1OFrOG1HsPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MTE0OA==", "bodyText": "macros please", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458251148", "createdAt": "2020-07-21T17:01:27Z", "author": {"login": "gacholio"}, "path": "runtime/vm/classsupport.c", "diffHunk": "@@ -223,7 +223,15 @@ internalCreateArrayClass(J9VMThread* vmThread, J9ROMArrayClass* romClass, J9Clas\n #endif /* defined(J9VM_OPT_VALHALLA_VALUE_TYPES) */\n \n \tif (elementInitSuccess) {\n-\t\tif (J9_ARE_ANY_BITS_SET(elementClass->classFlags, J9ClassIsAnonymous)) {\n+\t\tif (J9_ARE_ANY_BITS_SET(elementClass->romClass->extraModifiers, J9AccClassHiddenClass)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1MzcyNg==", "bodyText": "Fixed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458353726", "createdAt": "2020-07-21T20:00:58Z", "author": {"login": "hangshao0"}, "path": "runtime/vm/classsupport.c", "diffHunk": "@@ -223,7 +223,15 @@ internalCreateArrayClass(J9VMThread* vmThread, J9ROMArrayClass* romClass, J9Clas\n #endif /* defined(J9VM_OPT_VALHALLA_VALUE_TYPES) */\n \n \tif (elementInitSuccess) {\n-\t\tif (J9_ARE_ANY_BITS_SET(elementClass->classFlags, J9ClassIsAnonymous)) {\n+\t\tif (J9_ARE_ANY_BITS_SET(elementClass->romClass->extraModifiers, J9AccClassHiddenClass)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MTE0OA=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTYyOTQxOnYy", "diffSide": "RIGHT", "path": "runtime/vm/visible.c", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzowMjoyNlrOG1Bd3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDowMTowN1rOG1Hsgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MTc0MQ==", "bodyText": "brackets please", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458251741", "createdAt": "2020-07-21T17:02:26Z", "author": {"login": "gacholio"}, "path": "runtime/vm/visible.c", "diffHunk": "@@ -283,9 +283,20 @@ loadAndVerifyNestHost(J9VMThread *vmThread, J9Class *clazz, UDATA options)\n \t\tJ9UTF8 *nestHostName = J9ROMCLASS_NESTHOSTNAME(romClass);\n \t\tBOOLEAN canRunJavaCode = J9_ARE_NO_BITS_SET(options, J9_LOOK_NO_JAVA);\n \t\tBOOLEAN throwException = canRunJavaCode && J9_ARE_NO_BITS_SET(options, J9_LOOK_NO_THROW);\n+\t\tBOOLEAN hiddenNestMate = J9_ARE_ALL_BITS_SET(romClass->extraModifiers, J9AccHiddenClassOptionNestmate);\n+\n+\t\tJ9Class* curClazz = clazz;\n+\t\tBOOLEAN isCurClassHiddenNestMate = hiddenNestMate;\n+\t\twhile (isCurClassHiddenNestMate && curClazz != curClazz->hostClass) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM1Mzc5NA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458353794", "createdAt": "2020-07-21T20:01:07Z", "author": {"login": "hangshao0"}, "path": "runtime/vm/visible.c", "diffHunk": "@@ -283,9 +283,20 @@ loadAndVerifyNestHost(J9VMThread *vmThread, J9Class *clazz, UDATA options)\n \t\tJ9UTF8 *nestHostName = J9ROMCLASS_NESTHOSTNAME(romClass);\n \t\tBOOLEAN canRunJavaCode = J9_ARE_NO_BITS_SET(options, J9_LOOK_NO_JAVA);\n \t\tBOOLEAN throwException = canRunJavaCode && J9_ARE_NO_BITS_SET(options, J9_LOOK_NO_THROW);\n+\t\tBOOLEAN hiddenNestMate = J9_ARE_ALL_BITS_SET(romClass->extraModifiers, J9AccHiddenClassOptionNestmate);\n+\n+\t\tJ9Class* curClazz = clazz;\n+\t\tBOOLEAN isCurClassHiddenNestMate = hiddenNestMate;\n+\t\twhile (isCurClassHiddenNestMate && curClazz != curClazz->hostClass) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI1MTc0MQ=="}, "originalCommit": {"oid": "67b5c5ccaa30e00b57873e4ef88845d18d564fd7"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MzU2MTE3OnYy", "diffSide": "RIGHT", "path": "runtime/bcutil/ROMClassBuilder.cpp", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNToxMDowMlrOG1m-nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODo0Mjo0MlrOG1vfJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg2NjMzMg==", "bodyText": "The trailing Class here seems superfluous.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458866332", "createdAt": "2020-07-22T15:10:02Z", "author": {"login": "gacholio"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -1059,17 +1059,17 @@ ROMClassBuilder::finishPrepareAndLaydown(\n  *                                  + UNUSED\n  *                                 + UNUSED\n  *                                + UNUSED\n- *                               + UNUSED\n+ *                              + J9AccClassHiddenOptionNestmate\n  *\n- *                             + UNUSED\n+ *                             + J9AccClassHiddenOptionStrong\n  *                            + AccSealed\n  *                           + AccRecord\n  *                          + AccClassAnonClass\n  *\n  *                        + AccSynthetic (matches Oracle modifier position)\n  *                       + AccClassUseBisectionSearch\n  *                      + AccClassInnerClass\n- *                     + UNUSED\n+ *                     + J9AccClassHiddenClass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3e8431939d03e1a10cb4d210a0264353355b68b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNjA4Ng==", "bodyText": "I'd still like this changed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458916086", "createdAt": "2020-07-22T16:20:04Z", "author": {"login": "gacholio"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -1059,17 +1059,17 @@ ROMClassBuilder::finishPrepareAndLaydown(\n  *                                  + UNUSED\n  *                                 + UNUSED\n  *                                + UNUSED\n- *                               + UNUSED\n+ *                              + J9AccClassHiddenOptionNestmate\n  *\n- *                             + UNUSED\n+ *                             + J9AccClassHiddenOptionStrong\n  *                            + AccSealed\n  *                           + AccRecord\n  *                          + AccClassAnonClass\n  *\n  *                        + AccSynthetic (matches Oracle modifier position)\n  *                       + AccClassUseBisectionSearch\n  *                      + AccClassInnerClass\n- *                     + UNUSED\n+ *                     + J9AccClassHiddenClass", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg2NjMzMg=="}, "originalCommit": {"oid": "b3e8431939d03e1a10cb4d210a0264353355b68b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNzc1OQ==", "bodyText": "I'd still like this changed.\n\nYes, I will change this. But after lunch.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r458917759", "createdAt": "2020-07-22T16:22:08Z", "author": {"login": "hangshao0"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -1059,17 +1059,17 @@ ROMClassBuilder::finishPrepareAndLaydown(\n  *                                  + UNUSED\n  *                                 + UNUSED\n  *                                + UNUSED\n- *                               + UNUSED\n+ *                              + J9AccClassHiddenOptionNestmate\n  *\n- *                             + UNUSED\n+ *                             + J9AccClassHiddenOptionStrong\n  *                            + AccSealed\n  *                           + AccRecord\n  *                          + AccClassAnonClass\n  *\n  *                        + AccSynthetic (matches Oracle modifier position)\n  *                       + AccClassUseBisectionSearch\n  *                      + AccClassInnerClass\n- *                     + UNUSED\n+ *                     + J9AccClassHiddenClass", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg2NjMzMg=="}, "originalCommit": {"oid": "b3e8431939d03e1a10cb4d210a0264353355b68b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTAwNTczNA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse-openj9/openj9/pull/10207#discussion_r459005734", "createdAt": "2020-07-22T18:42:42Z", "author": {"login": "hangshao0"}, "path": "runtime/bcutil/ROMClassBuilder.cpp", "diffHunk": "@@ -1059,17 +1059,17 @@ ROMClassBuilder::finishPrepareAndLaydown(\n  *                                  + UNUSED\n  *                                 + UNUSED\n  *                                + UNUSED\n- *                               + UNUSED\n+ *                              + J9AccClassHiddenOptionNestmate\n  *\n- *                             + UNUSED\n+ *                             + J9AccClassHiddenOptionStrong\n  *                            + AccSealed\n  *                           + AccRecord\n  *                          + AccClassAnonClass\n  *\n  *                        + AccSynthetic (matches Oracle modifier position)\n  *                       + AccClassUseBisectionSearch\n  *                      + AccClassInnerClass\n- *                     + UNUSED\n+ *                     + J9AccClassHiddenClass", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg2NjMzMg=="}, "originalCommit": {"oid": "b3e8431939d03e1a10cb4d210a0264353355b68b"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4790, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}