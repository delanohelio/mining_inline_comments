{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMDgyOTE1", "number": 8501, "title": "JEP-370 Implementation (Part 3)", "bodyText": "Closes: #8292.\n1. Use OpenJDK ViewHandles in Java14+ to support JEP-370\nOpenJDK implementation of ByteArrayViewHandle and ByteBufferViewHandle\nis used to support JEP-370 in Java14+.\nOpenJ9 ViewHandles don't handle memory scopes properly. Example:\ntry (MemorySegment segment = MemorySegment.allocateNative(bytes)) {\n   ByteBuffer byteBuffer = segment.asByteBuffer();\n   MethodHandle handle = Derived from ByteBuffer & ByteBufferViewHandle;\n   handle.invoke();\n}\n\nInvoking handle.invoke() outside the memory scope should result in\nIllegalStateException, which is thrown from jdk.internal.foreign.MemoryScope.\nWith OpenJ9 ViewHandles, the IllegalStateException is not thrown. The\ncorrect behavior is achieved by using OpenJDK ViewHandles.\nThe deficiency in OpenJ9 ViewHandles could not be identified.\n2. Handle NULL VarHandle.handleTable entries in VarHandle.accessModeType\n3. Handle NULL VarHandle.handleTable entries in (Bytecode|MH)Interpreter\n4. Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n5. Support isAccessModeSupportedHelper method with VarForm constructor\nOpenJ9 ViewVarHandles have their own implementation for the\nisAccessModeSupported method. OpenJDK ViewVarHandles are used in OpenJ9\nJava 14+ which rely upon VarHandle.isAccessModeSupported instead of\nhaving their own isAccessModeSupported implementation.\nVarHandle.isAccessModeSupported is updated to support OpenJDK\nVarHandles, which rely upon OpenJ9's VarHandle(VarForm varForm)\nconstructor.\nSigned-off-by: Babneet Singh sbabneet@ca.ibm.com", "createdAt": "2020-02-04T22:30:24Z", "url": "https://github.com/eclipse-openj9/openj9/pull/8501", "merged": true, "mergeCommit": {"oid": "dd6fe85d444ab871e396a5538d41e9a6be703208"}, "closed": true, "closedAt": "2020-03-01T19:50:55Z", "author": {"login": "babsingh"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBJdtQABqjMwMDc5ODE4MDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJvy9aAFqTM2NzMwOTAxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ffffeca1261a6fd6afc5dac00f58dd8bfa7ce29", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8ffffeca1261a6fd6afc5dac00f58dd8bfa7ce29", "committedDate": "2020-02-04T21:51:42Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "21a245c6554eb140e6e9adc861013d0298c96477", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/21a245c6554eb140e6e9adc861013d0298c96477", "committedDate": "2020-02-04T22:40:05Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21a245c6554eb140e6e9adc861013d0298c96477", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/21a245c6554eb140e6e9adc861013d0298c96477", "committedDate": "2020-02-04T22:40:05Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "d721d801dfeb56975eea117c09c88cdad5457825", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d721d801dfeb56975eea117c09c88cdad5457825", "committedDate": "2020-02-05T00:55:52Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d721d801dfeb56975eea117c09c88cdad5457825", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d721d801dfeb56975eea117c09c88cdad5457825", "committedDate": "2020-02-05T00:55:52Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "1d24c19e1f497a72445f10422d61f4e13248b952", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1d24c19e1f497a72445f10422d61f4e13248b952", "committedDate": "2020-02-05T01:28:17Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzODg0OTUx", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#pullrequestreview-353884951", "createdAt": "2020-02-05T17:02:33Z", "commit": {"oid": "1d24c19e1f497a72445f10422d61f4e13248b952"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNzowMjozM1rOFl_tXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNzowMjozM1rOFl_tXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTM4NTQzOQ==", "bodyText": "Would be good to comment here on why this is being done", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r375385439", "createdAt": "2020-02-05T17:02:33Z", "author": {"login": "DanHeidinga"}, "path": "runtime/bcutil/ConstantPoolMap.cpp", "diffHunk": "@@ -302,6 +302,14 @@ ConstantPoolMap::computeConstantPoolMapAndSizes()\n \t\t\t}\n \t\t}\n \t}\n+\n+\tJ9ClassPatchMap *map = _context->patchMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d24c19e1f497a72445f10422d61f4e13248b952"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1d24c19e1f497a72445f10422d61f4e13248b952", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1d24c19e1f497a72445f10422d61f4e13248b952", "committedDate": "2020-02-05T01:28:17Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "5efc135983dcb26d248f2c97fe75b6767021ec21", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/5efc135983dcb26d248f2c97fe75b6767021ec21", "committedDate": "2020-02-13T21:22:29Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5efc135983dcb26d248f2c97fe75b6767021ec21", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/5efc135983dcb26d248f2c97fe75b6767021ec21", "committedDate": "2020-02-13T21:22:29Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "3a4672ab7f03d4440988c82758ada838292dfb64", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3a4672ab7f03d4440988c82758ada838292dfb64", "committedDate": "2020-02-14T16:35:59Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5Mjk4ODc0", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#pullrequestreview-359298874", "createdAt": "2020-02-15T02:46:31Z", "commit": {"oid": "3a4672ab7f03d4440988c82758ada838292dfb64"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMjo0NjozMVrOFqHzHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNVQwMjo0Njo1OFrOFqHzOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxMjI4NQ==", "bodyText": "Does this need to use the vmconstantpool?  Can we look up the class here if it's needed as it will only be used in error cases?\nI prefer not to grow the vmconstantpool if we can avoid it as every class in the pool is loaded at startup.", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r379712285", "createdAt": "2020-02-15T02:46:31Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/MHInterpreter.cpp", "diffHunk": "@@ -555,6 +555,13 @@ VM_MHInterpreter::dispatchLoop(j9object_t methodHandle)\n \t\t\t/* Get MethodHandle for this operation from the VarHandle's handleTable */\n \t\t\tj9object_t handleTable = J9VMJAVALANGINVOKEVARHANDLE_HANDLETABLE(_currentThread, varHandle);\n \t\t\tj9object_t methodHandleFromTable = J9JAVAARRAYOFOBJECT_LOAD(_currentThread, handleTable, operation);\n+\n+\t\t\tif (NULL == methodHandleFromTable) {\n+\t\t\t\tprepareForExceptionThrow(_currentThread);\n+\t\t\t\tsetCurrentExceptionUTF(_currentThread, J9VMCONSTANTPOOL_JAVALANGUNSUPPORTEDOPERATIONEXCEPTION, NULL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a4672ab7f03d4440988c82758ada838292dfb64"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTcxMjMxNQ==", "bodyText": "See comment below - this should be removed or if it can't be, have a version tag added", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r379712315", "createdAt": "2020-02-15T02:46:58Z", "author": {"login": "DanHeidinga"}, "path": "runtime/oti/vmconstantpool.xml", "diffHunk": "@@ -110,6 +110,7 @@ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0 OR GPL-2.0 WITH Classpath-excepti\n \t<classref name=\"java/lang/invoke/MutableCallSite\" flags=\"opt_methodHandle\"/>\n \t<classref name=\"java/lang/invoke/MethodType\" flags=\"opt_methodHandle\"/>\n \t<classref name=\"java/lang/invoke/WrongMethodTypeException\" flags=\"opt_methodHandle\"/>\n+\t<classref name=\"java/lang/UnsupportedOperationException\" flags=\"opt_methodHandle\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a4672ab7f03d4440988c82758ada838292dfb64"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35c892cf91ba20699ad0d4c17d55a67811857f49", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/35c892cf91ba20699ad0d4c17d55a67811857f49", "committedDate": "2020-02-18T03:03:34Z", "message": "Use OpenJDK ViewHandles in Java14+ to support JEP-370\n\nOpenJDK implementation of ByteArrayViewHandle and ByteBufferViewHandle\nis used to support JEP-370 in Java14+.\n\nOpenJ9 ViewHandles don't handle memory scopes properly. Example:\n\ntry (MemorySegment segment = MemorySegment.allocateNative(bytes)) {\n   ByteBuffer byteBuffer = segment.asByteBuffer();\n   MethodHandle handle = Derived from ByteBuffer & ByteBufferViewHandle;\n   handle.invoke();\n}\n\nInvoking handle.invoke() outside the memory scope should result in\nIllegalStateException, which is thrown from\njdk.internal.foreign.MemoryScope.\n\nWith OpenJ9 ViewHandles, the IllegalStateException is not thrown. The\naforementioned behavior is achieved by using OpenJDK ViewHandles.\n\nThe deficiency in OpenJ9 ViewHandles could not be identified.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "acea87e0dc94dd5c37aabf6b979573de5b6d9537", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/acea87e0dc94dd5c37aabf6b979573de5b6d9537", "committedDate": "2020-02-18T03:03:34Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.accessModeType\n\nIn OpenJ9, derived VarHandle classes define all AccessMode operations,\nand UnsupportedOperationException is thrown from the operation methods\nthat are not supported. All OpenJ9 VarHandle.handleTable entries are\nnon-null when supporting derived OpenJ9 VarHandle classes.\n\nIn OpenJDK, derived VarHandle classes do not define unsupported\nAccessMode operations. Thus, OpenJ9 VarHandle.handleTable entries are\nnull for unsupported AccessMode operations when supporting derived\nOpenJDK VarHandle classes.\n\nVarHandle.accessModeType relies upon VarHandle.handleTable to derive the\nAccessMode MethodType. When supporting derived OpenJDK VarHandle\nclasses, accessModeTypeUncached is used to retrieve the AccessMode\nMethodType in case VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a4672ab7f03d4440988c82758ada838292dfb64", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3a4672ab7f03d4440988c82758ada838292dfb64", "committedDate": "2020-02-14T16:35:59Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "a894bae9343cac6483ce71465abbfabdd7c8c071", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a894bae9343cac6483ce71465abbfabdd7c8c071", "committedDate": "2020-02-18T03:03:34Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a894bae9343cac6483ce71465abbfabdd7c8c071", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a894bae9343cac6483ce71465abbfabdd7c8c071", "committedDate": "2020-02-18T03:03:34Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "1f80a9f22c1c11619e080a683720251f74e6d0ad", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1f80a9f22c1c11619e080a683720251f74e6d0ad", "committedDate": "2020-02-18T20:59:13Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MjY4NDk5", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#pullrequestreview-364268499", "createdAt": "2020-02-25T16:08:40Z", "commit": {"oid": "1f80a9f22c1c11619e080a683720251f74e6d0ad"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNjowODo0MFrOFuMOHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNjoxNDowNVrOFuMchA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk3OTAzOQ==", "bodyText": "The stack needs to be walkable at this point as looking up the class may cause a GC or another exception to occur.\nThis gives us two options, move the prepareForExceptionThrow call before looking up the exception class so we have a clean stack, or build a MT frame here.\nMy preference is to build the MT frame as it will be easier to debug & service as the VarHandle will still be on the stack and findable with DDR.", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r383979039", "createdAt": "2020-02-25T16:08:40Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/MHInterpreter.cpp", "diffHunk": "@@ -555,6 +555,26 @@ VM_MHInterpreter::dispatchLoop(j9object_t methodHandle)\n \t\t\t/* Get MethodHandle for this operation from the VarHandle's handleTable */\n \t\t\tj9object_t handleTable = J9VMJAVALANGINVOKEVARHANDLE_HANDLETABLE(_currentThread, varHandle);\n \t\t\tj9object_t methodHandleFromTable = J9JAVAARRAYOFOBJECT_LOAD(_currentThread, handleTable, operation);\n+\n+\t\t\tif (NULL == methodHandleFromTable) {\n+\t\t\t\tconst char *exceptionClassName = \"java/lang/UnsupportedOperationException\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f80a9f22c1c11619e080a683720251f74e6d0ad"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk4MjcyNA==", "bodyText": "Note, we won't tear down the frame as throwing the exception will handle it appropritately", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r383982724", "createdAt": "2020-02-25T16:14:05Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/MHInterpreter.cpp", "diffHunk": "@@ -555,6 +555,26 @@ VM_MHInterpreter::dispatchLoop(j9object_t methodHandle)\n \t\t\t/* Get MethodHandle for this operation from the VarHandle's handleTable */\n \t\t\tj9object_t handleTable = J9VMJAVALANGINVOKEVARHANDLE_HANDLETABLE(_currentThread, varHandle);\n \t\t\tj9object_t methodHandleFromTable = J9JAVAARRAYOFOBJECT_LOAD(_currentThread, handleTable, operation);\n+\n+\t\t\tif (NULL == methodHandleFromTable) {\n+\t\t\t\tconst char *exceptionClassName = \"java/lang/UnsupportedOperationException\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk3OTAzOQ=="}, "originalCommit": {"oid": "1f80a9f22c1c11619e080a683720251f74e6d0ad"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f80a9f22c1c11619e080a683720251f74e6d0ad", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1f80a9f22c1c11619e080a683720251f74e6d0ad", "committedDate": "2020-02-18T20:59:13Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "8b055bed7941f2870839df408a34068bd7685752", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8b055bed7941f2870839df408a34068bd7685752", "committedDate": "2020-02-25T19:19:22Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NjA4MjMx", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#pullrequestreview-364608231", "createdAt": "2020-02-26T03:51:22Z", "commit": {"oid": "8b055bed7941f2870839df408a34068bd7685752"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b055bed7941f2870839df408a34068bd7685752", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8b055bed7941f2870839df408a34068bd7685752", "committedDate": "2020-02-25T19:19:22Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "8caf911fe4154563ee39a61f42d357b43a547b7b", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8caf911fe4154563ee39a61f42d357b43a547b7b", "committedDate": "2020-02-26T16:18:16Z", "message": "Support isAccessModeSupportedHelper method with VarForm constructor\n\nOpenJ9 ViewVarHandles have their own implementation for the\nisAccessModeSupported method. OpenJDK ViewVarHandles are used in OpenJ9\nJava 14+ which rely upon VarHandle.isAccessModeSupported instead of\ntheir own isAccessModeSupported implementation. \n\nVarHandle.isAccessModeSupported is updated to support OpenJDK\nVarHandles, which rely upon OpenJ9's VarHandle(VarForm varForm)\nconstructor.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MDYyMTIw", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#pullrequestreview-365062120", "createdAt": "2020-02-26T16:43:11Z", "commit": {"oid": "8caf911fe4154563ee39a61f42d357b43a547b7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNjo0MzoxMVrOFuzV4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNjo0MzoxMVrOFuzV4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYyMDAwMA==", "bodyText": "@DanHeidinga New code to address the segfault seen in the four View-(BE|LE)-(On|Off)Heap_0 testcases. I couldn't build a method type frame since no method type is available. So, I ended up moving prepareForExceptionThrow before looking up the exception class.\nNew code is included in the following commit:\n\nHandle NULL VarHandle.handleTable entries in (Bytecode|MH)Interpreter", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r384620000", "createdAt": "2020-02-26T16:43:11Z", "author": {"login": "babsingh"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -8269,6 +8269,29 @@ done:;\n \t\t\t/* Get MethodHandle for this operation from the VarHandles handleTable */\n \t\t\tj9object_t handleTable = J9VMJAVALANGINVOKEVARHANDLE_HANDLETABLE(_currentThread, varHandle);\n \t\t\tj9object_t methodHandle = J9JAVAARRAYOFOBJECT_LOAD(_currentThread, handleTable, operation);\n+\n+\t\t\tif (NULL == methodHandle) {\n+\t\t\t\tprepareForExceptionThrow(_currentThread);\n+\n+\t\t\t\tconst char *exceptionClassName = \"java/lang/UnsupportedOperationException\";\n+\t\t\t\tJ9Class *exceptionClass = internalFindClassUTF8(\n+\t\t\t\t\t\t_currentThread,\n+\t\t\t\t\t\t(U_8 *)exceptionClassName,\n+\t\t\t\t\t\tstrlen(exceptionClassName),\n+\t\t\t\t\t\t_currentThread->javaVM->systemClassLoader,\n+\t\t\t\t\t\tJ9_FINDCLASS_FLAG_THROW_ON_FAIL);\n+\n+\t\t\t\tj9object_t exception = _objectAllocate.inlineAllocateObject(_currentThread, exceptionClass);\n+\t\t\t\tif (NULL == exception) {\n+\t\t\t\t\trc = THROW_HEAP_OOM;\n+\t\t\t\t\tgoto done;\n+\t\t\t\t}\n+\n+\t\t\t\tVM_VMHelpers::setExceptionPending(_currentThread, exception);\n+\t\t\t\trc = GOTO_THROW_CURRENT_EXCEPTION;\n+\t\t\t\tgoto done;\n+\t\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8caf911fe4154563ee39a61f42d357b43a547b7b"}, "originalPosition": 25}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8caf911fe4154563ee39a61f42d357b43a547b7b", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8caf911fe4154563ee39a61f42d357b43a547b7b", "committedDate": "2020-02-26T16:18:16Z", "message": "Support isAccessModeSupportedHelper method with VarForm constructor\n\nOpenJ9 ViewVarHandles have their own implementation for the\nisAccessModeSupported method. OpenJDK ViewVarHandles are used in OpenJ9\nJava 14+ which rely upon VarHandle.isAccessModeSupported instead of\ntheir own isAccessModeSupported implementation. \n\nVarHandle.isAccessModeSupported is updated to support OpenJDK\nVarHandles, which rely upon OpenJ9's VarHandle(VarForm varForm)\nconstructor.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "1802734f729f8928588429aea01e55406b4584cd", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1802734f729f8928588429aea01e55406b4584cd", "committedDate": "2020-02-26T16:49:59Z", "message": "Support isAccessModeSupportedHelper method with VarForm constructor\n\nOpenJ9 ViewVarHandles have their own implementation for the\nisAccessModeSupported method. OpenJDK ViewVarHandles are used in OpenJ9\nJava 14+ which rely upon VarHandle.isAccessModeSupported instead of\nhaving their own isAccessModeSupported implementation. \n\nVarHandle.isAccessModeSupported is updated to support OpenJDK\nVarHandles, which rely upon OpenJ9's VarHandle(VarForm varForm)\nconstructor.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NDQ4MTM1", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#pullrequestreview-365448135", "createdAt": "2020-02-27T06:55:01Z", "commit": {"oid": "1802734f729f8928588429aea01e55406b4584cd"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNjo1NTowMlrOFvG9qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNzowOToxMVrOFvHORQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk0MTQ4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\tif (NULL == methodHandle) {\n          \n          \n            \n            \t\t\tif (NULL == methodHandle) {\n          \n          \n            \n            \t\t\t\tupdateVMStruct(REGISTER_ARGS);", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r384941483", "createdAt": "2020-02-27T06:55:02Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -8269,6 +8269,29 @@ done:;\n \t\t\t/* Get MethodHandle for this operation from the VarHandles handleTable */\n \t\t\tj9object_t handleTable = J9VMJAVALANGINVOKEVARHANDLE_HANDLETABLE(_currentThread, varHandle);\n \t\t\tj9object_t methodHandle = J9JAVAARRAYOFOBJECT_LOAD(_currentThread, handleTable, operation);\n+\n+\t\t\tif (NULL == methodHandle) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1802734f729f8928588429aea01e55406b4584cd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk0MjU5Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\tJ9_FINDCLASS_FLAG_THROW_ON_FAIL);\n          \n          \n            \n            \t\t\t\t\t\tJ9_FINDCLASS_FLAG_THROW_ON_FAIL);\n          \n          \n            \n            \t\t\t\tVMStructHasBeenUpdated(REGISTER_ARGS);", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r384942596", "createdAt": "2020-02-27T06:58:26Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -8269,6 +8269,29 @@ done:;\n \t\t\t/* Get MethodHandle for this operation from the VarHandles handleTable */\n \t\t\tj9object_t handleTable = J9VMJAVALANGINVOKEVARHANDLE_HANDLETABLE(_currentThread, varHandle);\n \t\t\tj9object_t methodHandle = J9JAVAARRAYOFOBJECT_LOAD(_currentThread, handleTable, operation);\n+\n+\t\t\tif (NULL == methodHandle) {\n+\t\t\t\tprepareForExceptionThrow(_currentThread);\n+\n+\t\t\t\tconst char *exceptionClassName = \"java/lang/UnsupportedOperationException\";\n+\t\t\t\tJ9Class *exceptionClass = internalFindClassUTF8(\n+\t\t\t\t\t\t_currentThread,\n+\t\t\t\t\t\t(U_8 *)exceptionClassName,\n+\t\t\t\t\t\tstrlen(exceptionClassName),\n+\t\t\t\t\t\t_currentThread->javaVM->systemClassLoader,\n+\t\t\t\t\t\tJ9_FINDCLASS_FLAG_THROW_ON_FAIL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1802734f729f8928588429aea01e55406b4584cd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk0NTI0OA==", "bodyText": "A null return here says that we can't allocate without doing a GC.  It's not going to have an exception pending.  Since we're on an error path, better to use the out of line allocate _vm->memoryManagerFunctions->J9AllocateObject(.\nThe prepareForExceptionThrow will have built a special frame for us already so we don't have to build another one here.\nWe will need to add a VMStructHasBeenUpdated(REGISTER_ARGS); after the J9AllocateObject call", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r384945248", "createdAt": "2020-02-27T07:07:52Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -8269,6 +8269,29 @@ done:;\n \t\t\t/* Get MethodHandle for this operation from the VarHandles handleTable */\n \t\t\tj9object_t handleTable = J9VMJAVALANGINVOKEVARHANDLE_HANDLETABLE(_currentThread, varHandle);\n \t\t\tj9object_t methodHandle = J9JAVAARRAYOFOBJECT_LOAD(_currentThread, handleTable, operation);\n+\n+\t\t\tif (NULL == methodHandle) {\n+\t\t\t\tprepareForExceptionThrow(_currentThread);\n+\n+\t\t\t\tconst char *exceptionClassName = \"java/lang/UnsupportedOperationException\";\n+\t\t\t\tJ9Class *exceptionClass = internalFindClassUTF8(\n+\t\t\t\t\t\t_currentThread,\n+\t\t\t\t\t\t(U_8 *)exceptionClassName,\n+\t\t\t\t\t\tstrlen(exceptionClassName),\n+\t\t\t\t\t\t_currentThread->javaVM->systemClassLoader,\n+\t\t\t\t\t\tJ9_FINDCLASS_FLAG_THROW_ON_FAIL);\n+\n+\t\t\t\tj9object_t exception = _objectAllocate.inlineAllocateObject(_currentThread, exceptionClass);\n+\t\t\t\tif (NULL == exception) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1802734f729f8928588429aea01e55406b4584cd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk0NTczMw==", "bodyText": "Same issue here - the inlineAllocateObject only indicates if we can allocate without a GC or not.  When it returns null, we usually need to build a frame / make the stack walkable & then call the gc'ing version of the allocate helpers", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r384945733", "createdAt": "2020-02-27T07:09:11Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/MHInterpreter.cpp", "diffHunk": "@@ -555,6 +555,33 @@ VM_MHInterpreter::dispatchLoop(j9object_t methodHandle)\n \t\t\t/* Get MethodHandle for this operation from the VarHandle's handleTable */\n \t\t\tj9object_t handleTable = J9VMJAVALANGINVOKEVARHANDLE_HANDLETABLE(_currentThread, varHandle);\n \t\t\tj9object_t methodHandleFromTable = J9JAVAARRAYOFOBJECT_LOAD(_currentThread, handleTable, operation);\n+\n+\t\t\tif (NULL == methodHandleFromTable) {\n+\t\t\t\t/* Building a method type (MT) frame makes the stack walkable since looking up the class below may\n+\t\t\t\t * cause a GC or another exception. Also, the MT frame will make it easier to debug and service the\n+\t\t\t\t * error as the VarHandle will be on the stack and findable with DDR. The MT frame does not need to\n+\t\t\t\t * be restored since throwing the exception will handle it appropriately.\n+\t\t\t\t */\n+\t\t\t\tbuildMethodTypeFrame(_currentThread, type);\n+\n+\t\t\t\tconst char *exceptionClassName = \"java/lang/UnsupportedOperationException\";\n+\t\t\t\tJ9Class *exceptionClass = internalFindClassUTF8(\n+\t\t\t\t\t\t_currentThread,\n+\t\t\t\t\t\t(U_8 *)exceptionClassName,\n+\t\t\t\t\t\tstrlen(exceptionClassName),\n+\t\t\t\t\t\t_currentThread->javaVM->systemClassLoader,\n+\t\t\t\t\t\tJ9_FINDCLASS_FLAG_THROW_ON_FAIL);\n+\n+\t\t\t\tj9object_t exception = _objectAllocate->inlineAllocateObject(_currentThread, exceptionClass);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1802734f729f8928588429aea01e55406b4584cd"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1ODc0Njc3", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#pullrequestreview-365874677", "createdAt": "2020-02-27T17:55:41Z", "commit": {"oid": "1802734f729f8928588429aea01e55406b4584cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzo1NTo0MVrOFvbSeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzo1NTo0MVrOFvbSeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI3NDQ4OA==", "bodyText": "Although the compiler will likely fold it, you can use the LITERAL_STRLEN macro instead of strlen here.", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r385274488", "createdAt": "2020-02-27T17:55:41Z", "author": {"login": "gacholio"}, "path": "runtime/vm/BytecodeInterpreter.hpp", "diffHunk": "@@ -8269,6 +8269,29 @@ done:;\n \t\t\t/* Get MethodHandle for this operation from the VarHandles handleTable */\n \t\t\tj9object_t handleTable = J9VMJAVALANGINVOKEVARHANDLE_HANDLETABLE(_currentThread, varHandle);\n \t\t\tj9object_t methodHandle = J9JAVAARRAYOFOBJECT_LOAD(_currentThread, handleTable, operation);\n+\n+\t\t\tif (NULL == methodHandle) {\n+\t\t\t\tprepareForExceptionThrow(_currentThread);\n+\n+\t\t\t\tconst char *exceptionClassName = \"java/lang/UnsupportedOperationException\";\n+\t\t\t\tJ9Class *exceptionClass = internalFindClassUTF8(\n+\t\t\t\t\t\t_currentThread,\n+\t\t\t\t\t\t(U_8 *)exceptionClassName,\n+\t\t\t\t\t\tstrlen(exceptionClassName),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1802734f729f8928588429aea01e55406b4584cd"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1802734f729f8928588429aea01e55406b4584cd", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1802734f729f8928588429aea01e55406b4584cd", "committedDate": "2020-02-26T16:49:59Z", "message": "Support isAccessModeSupportedHelper method with VarForm constructor\n\nOpenJ9 ViewVarHandles have their own implementation for the\nisAccessModeSupported method. OpenJDK ViewVarHandles are used in OpenJ9\nJava 14+ which rely upon VarHandle.isAccessModeSupported instead of\nhaving their own isAccessModeSupported implementation. \n\nVarHandle.isAccessModeSupported is updated to support OpenJDK\nVarHandles, which rely upon OpenJ9's VarHandle(VarForm varForm)\nconstructor.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "1b56e1aaa07c0ae7b4935b885ed2a035b24beb29", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1b56e1aaa07c0ae7b4935b885ed2a035b24beb29", "committedDate": "2020-02-27T22:36:17Z", "message": "Support isAccessModeSupportedHelper method with VarForm constructor\n\nOpenJ9 ViewVarHandles have their own implementation for the\nisAccessModeSupported method. OpenJDK ViewVarHandles are used in OpenJ9\nJava 14+ which rely upon VarHandle.isAccessModeSupported instead of\nhaving their own isAccessModeSupported implementation. \n\nVarHandle.isAccessModeSupported is updated to support OpenJDK\nVarHandles, which rely upon OpenJ9's VarHandle(VarForm varForm)\nconstructor.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NjU1NjUw", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#pullrequestreview-366655650", "createdAt": "2020-02-28T20:08:26Z", "commit": {"oid": "1b56e1aaa07c0ae7b4935b885ed2a035b24beb29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDowODoyNlrOFwBbfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDowODoyNlrOFwBbfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg5OTM4OQ==", "bodyText": "This still needs a methodtype frame to be built as we don't know what MH operations have lead to this point.  The stack needs to be kept walkable here", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r385899389", "createdAt": "2020-02-28T20:08:26Z", "author": {"login": "DanHeidinga"}, "path": "runtime/vm/MHInterpreter.cpp", "diffHunk": "@@ -555,6 +555,12 @@ VM_MHInterpreter::dispatchLoop(j9object_t methodHandle)\n \t\t\t/* Get MethodHandle for this operation from the VarHandle's handleTable */\n \t\t\tj9object_t handleTable = J9VMJAVALANGINVOKEVARHANDLE_HANDLETABLE(_currentThread, varHandle);\n \t\t\tj9object_t methodHandleFromTable = J9JAVAARRAYOFOBJECT_LOAD(_currentThread, handleTable, operation);\n+\n+\t\t\tif (NULL == methodHandleFromTable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b56e1aaa07c0ae7b4935b885ed2a035b24beb29"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfe3828eaeb91de9adecd1cefaf9e5b85c8fb56c", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/bfe3828eaeb91de9adecd1cefaf9e5b85c8fb56c", "committedDate": "2020-02-28T20:32:20Z", "message": "Handle NULL VarHandle.handleTable entries in (Bytecode|MH)Interpreter\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nVM_MHInterpreter::dispatchLoop and BytecodeInterpreter::invokevarhandle\nlook up entries in VarHandle.handleTable to invoke the operation method.\nA null handleTable entry reflects a unsupported AccessMode operation. In\nthis case, an UnsupportedOperationException should be thrown.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f2e7c857929108754643da8b2ced19519594c4f", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6f2e7c857929108754643da8b2ced19519594c4f", "committedDate": "2020-02-28T20:32:49Z", "message": "Handle NULL VarHandle.handleTable entries in VarHandle.toMethodHandle\n\nOpenJ9 VarHandle.handleTable entries are null for unsupported AccessMode\noperations when supporting derived OpenJDK VarHandle classes.\n\nWhen supporting derived OpenJDK VarHandle classes,\naccessModeTypeUncached is used to retrieve the AccessMode MethodType in\ncase VarHandle.handleTable entries are null.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c32d79501136a9b352bcb353c9fbbc4e3a145c0", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0c32d79501136a9b352bcb353c9fbbc4e3a145c0", "committedDate": "2020-02-28T20:32:49Z", "message": "Support isAccessModeSupportedHelper method with VarForm constructor\n\nOpenJ9 ViewVarHandles have their own implementation for the\nisAccessModeSupported method. OpenJDK ViewVarHandles are used in OpenJ9\nJava 14+ which rely upon VarHandle.isAccessModeSupported instead of\nhaving their own isAccessModeSupported implementation. \n\nVarHandle.isAccessModeSupported is updated to support OpenJDK\nVarHandles, which rely upon OpenJ9's VarHandle(VarForm varForm)\nconstructor.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b56e1aaa07c0ae7b4935b885ed2a035b24beb29", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1b56e1aaa07c0ae7b4935b885ed2a035b24beb29", "committedDate": "2020-02-27T22:36:17Z", "message": "Support isAccessModeSupportedHelper method with VarForm constructor\n\nOpenJ9 ViewVarHandles have their own implementation for the\nisAccessModeSupported method. OpenJDK ViewVarHandles are used in OpenJ9\nJava 14+ which rely upon VarHandle.isAccessModeSupported instead of\nhaving their own isAccessModeSupported implementation. \n\nVarHandle.isAccessModeSupported is updated to support OpenJDK\nVarHandles, which rely upon OpenJ9's VarHandle(VarForm varForm)\nconstructor.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}, "afterCommit": {"oid": "0c32d79501136a9b352bcb353c9fbbc4e3a145c0", "author": {"user": {"login": "babsingh", "name": "Babneet Singh"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0c32d79501136a9b352bcb353c9fbbc4e3a145c0", "committedDate": "2020-02-28T20:32:49Z", "message": "Support isAccessModeSupportedHelper method with VarForm constructor\n\nOpenJ9 ViewVarHandles have their own implementation for the\nisAccessModeSupported method. OpenJDK ViewVarHandles are used in OpenJ9\nJava 14+ which rely upon VarHandle.isAccessModeSupported instead of\nhaving their own isAccessModeSupported implementation. \n\nVarHandle.isAccessModeSupported is updated to support OpenJDK\nVarHandles, which rely upon OpenJ9's VarHandle(VarForm varForm)\nconstructor.\n\nSigned-off-by: Babneet Singh <sbabneet@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2ODM1MzAx", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#pullrequestreview-366835301", "createdAt": "2020-03-01T04:57:06Z", "commit": {"oid": "0c32d79501136a9b352bcb353c9fbbc4e3a145c0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MzA5MDE0", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#pullrequestreview-367309014", "createdAt": "2020-03-02T15:52:35Z", "commit": {"oid": "0c32d79501136a9b352bcb353c9fbbc4e3a145c0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTo1MjozNVrOFwkuqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTo1MjozNVrOFwkuqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ3NzczOA==", "bodyText": "Other callers of internalFindClassUTF8 that use J9_FINDCLASS_FLAG_THROW_ON_FAIL anticipate a NULL return value; J9AllocateObject will crash if exceptionClass  is NULL.", "url": "https://github.com/eclipse-openj9/openj9/pull/8501#discussion_r386477738", "createdAt": "2020-03-02T15:52:35Z", "author": {"login": "keithc-ca"}, "path": "runtime/vm/exceptionsupport.c", "diffHunk": "@@ -82,6 +82,33 @@ setCurrentExceptionNLS(J9VMThread * vmThread, UDATA exceptionNumber, U_32 module\n \tsetCurrentExceptionUTF(vmThread, exceptionNumber, msg);\n }\n \n+void\n+prepareExceptionUsingClassName(J9VMThread *vmThread, const char *exceptionClassName)\n+{\n+\tJ9Class *exceptionClass = NULL;\n+\tj9object_t exception = NULL;\n+\n+\tprepareForExceptionThrow(vmThread);\n+\n+\texceptionClass = internalFindClassUTF8(\n+\t\t\tvmThread,\n+\t\t\t(U_8 *)exceptionClassName,\n+\t\t\tstrlen(exceptionClassName),\n+\t\t\tvmThread->javaVM->systemClassLoader,\n+\t\t\tJ9_FINDCLASS_FLAG_THROW_ON_FAIL);\n+\n+\texception = vmThread->javaVM->memoryManagerFunctions->J9AllocateObject(\n+\t\t\tvmThread,\n+\t\t\texceptionClass,\n+\t\t\tJ9_GC_ALLOCATE_OBJECT_NON_INSTRUMENTABLE);\n+\n+\tif (J9_UNEXPECTED(NULL == exception)) {\n+\t\tsetHeapOutOfMemoryError(vmThread);\n+\t} else {\n+\t\tvmThread->currentException = exception;\n+\t\tvmThread->privateFlags |= J9_PRIVATE_FLAGS_REPORT_EXCEPTION_THROW;\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c32d79501136a9b352bcb353c9fbbc4e3a145c0"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 754, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}