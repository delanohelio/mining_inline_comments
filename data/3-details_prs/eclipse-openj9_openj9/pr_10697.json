{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyNzE4NDgz", "number": 10697, "title": "Mask off unused cpu features", "bodyText": "Guard cpu feature tests against old version cpu feature detection on x86 with an environment variable.\nRemove redundant assertion tests on x86.\nEliminate applyUserOptions().\n\nDisassociate the options from TR::CPU.\nIssue with applyUserOptions() is that the options are not initialized when TR::CPU is initialized which means if the user calls applyUserOptions() at the incorrect place the options queries that it contains will either crash the program or not take effect. I want to eliminate this risk of incorrect usage.\n\n\nIntroduce new API called TR::CPU::customize(OMRProcessorDesc processorDescription)\n\nit's a static factory method that takes in an OMRProcessorDesc from user and output a TR::CPU object\nThe design is that we do not give user to ability to modify the fields of TR::CPU object in place. You will need to go through a factory method to change TR::CPU. This makes it easier for us to keep track where TR::CPU is modified and eliminate any unintentional illegal TR::CPU modifications from user which can be disastrous.\n\n\nIntroduce new API called TR::CPU::enableFeatureMasks()\n\nYou can turn on \"featureMasks\" support using this API\nOnce \"featureMasks\" support is turned on, we will mask out all cpu features that are not used by the current compiler from the OMRProcessorDesc struct in TR::CPU which allows to do CPU compatibility checks for AOT more correctly\nFor each platform, we keep track of the utilized cpu features inside TR::CPU::enableFeatureMasks()\nIf developer utilizes a previously unused feature, they need to add it to TR::CPU::enableFeatureMasks()\nWe have assert tests in place to detect queries to unused feature\n\nThe purpose of this detection is to minimize the risk of masking out cpu features that are being used.\n\n\n\n\nSummary of current design:\n\nTR::CPU::detect(omrPortLib): static factory method that gives you the TR::CPU object based on port library\nTR::CPU::customize(processorDescription): static factory method that gives you the TR::CPU object based on a processorDescription provided by user\n\n\n\nIssue: #10683\nSigned-off-by: Harry Yu harryyu1994@gmail.com", "createdAt": "2020-09-24T21:51:28Z", "url": "https://github.com/eclipse-openj9/openj9/pull/10697", "merged": true, "mergeCommit": {"oid": "48b2173e2187c460d5404d6cb8e889a2a2f92171"}, "closed": true, "closedAt": "2020-10-07T13:23:50Z", "author": {"login": "harryyu1994"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMIcjIgBqjM4MDUyMjgzMzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP9G9zgBqjM4NDcwODcxNzQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7dfb8d4288c277340dc997bf03565077f0c40556", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7dfb8d4288c277340dc997bf03565077f0c40556", "committedDate": "2020-09-24T21:51:06Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will notify the developer if they used a disabled feature.\nDevelopers need to add the new feature to the enabled feature list in TR::CPU::applyUserOptions()\nbefore using it.\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "9ffc98d69b92f8db48584e3c87514bce5c15240b", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9ffc98d69b92f8db48584e3c87514bce5c15240b", "committedDate": "2020-09-24T21:54:02Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ffc98d69b92f8db48584e3c87514bce5c15240b", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/9ffc98d69b92f8db48584e3c87514bce5c15240b", "committedDate": "2020-09-24T21:54:02Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "a88e0ca505e5018dd8444af19e64e590f64c7299", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a88e0ca505e5018dd8444af19e64e590f64c7299", "committedDate": "2020-09-24T22:09:27Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a88e0ca505e5018dd8444af19e64e590f64c7299", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a88e0ca505e5018dd8444af19e64e590f64c7299", "committedDate": "2020-09-24T22:09:27Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "50ed62f16bb8626dd3ab60ee1e4ced193a730471", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/50ed62f16bb8626dd3ab60ee1e4ced193a730471", "committedDate": "2020-09-25T16:22:49Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50ed62f16bb8626dd3ab60ee1e4ced193a730471", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/50ed62f16bb8626dd3ab60ee1e4ced193a730471", "committedDate": "2020-09-25T16:22:49Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "8506493ffd1add6653155ae371d918c87d9b3c75", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8506493ffd1add6653155ae371d918c87d9b3c75", "committedDate": "2020-09-25T16:30:30Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8506493ffd1add6653155ae371d918c87d9b3c75", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/8506493ffd1add6653155ae371d918c87d9b3c75", "committedDate": "2020-09-25T16:30:30Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "bac0108e169bab31c6dc8656ee2bc95c4a3f78cc", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/bac0108e169bab31c6dc8656ee2bc95c4a3f78cc", "committedDate": "2020-09-25T16:32:39Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bac0108e169bab31c6dc8656ee2bc95c4a3f78cc", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/bac0108e169bab31c6dc8656ee2bc95c4a3f78cc", "committedDate": "2020-09-25T16:32:39Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "cdb8776994e1e658ae1e04aa0f3c75233332fe9e", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/cdb8776994e1e658ae1e04aa0f3c75233332fe9e", "committedDate": "2020-09-25T16:35:27Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cdb8776994e1e658ae1e04aa0f3c75233332fe9e", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/cdb8776994e1e658ae1e04aa0f3c75233332fe9e", "committedDate": "2020-09-25T16:35:27Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "c7db8e200d4a3ad1acbfed9b5eae08b2295e4ad7", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c7db8e200d4a3ad1acbfed9b5eae08b2295e4ad7", "committedDate": "2020-09-25T16:46:34Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7db8e200d4a3ad1acbfed9b5eae08b2295e4ad7", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c7db8e200d4a3ad1acbfed9b5eae08b2295e4ad7", "committedDate": "2020-09-25T16:46:34Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "e93094b4c40471d60b6cc7c298b89135d5313b36", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e93094b4c40471d60b6cc7c298b89135d5313b36", "committedDate": "2020-09-25T17:36:49Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e93094b4c40471d60b6cc7c298b89135d5313b36", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e93094b4c40471d60b6cc7c298b89135d5313b36", "committedDate": "2020-09-25T17:36:49Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "004837e78c4f68458393343216356d4a97875778", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/004837e78c4f68458393343216356d4a97875778", "committedDate": "2020-09-25T17:52:57Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "004837e78c4f68458393343216356d4a97875778", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/004837e78c4f68458393343216356d4a97875778", "committedDate": "2020-09-25T17:52:57Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "a06f0872f6a190b29270a79eccd9d5ae82f12ea8", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a06f0872f6a190b29270a79eccd9d5ae82f12ea8", "committedDate": "2020-09-25T17:57:28Z", "message": "Add mechanisms to disable unexploited features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "845136bfa4d00c90482d738f46039ad6a9f217c0", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/845136bfa4d00c90482d738f46039ad6a9f217c0", "committedDate": "2020-09-25T21:22:23Z", "message": "dede"}, "afterCommit": {"oid": "599bf6fcdca3bb851351f26d2129d4368ea18a8b", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/599bf6fcdca3bb851351f26d2129d4368ea18a8b", "committedDate": "2020-09-25T21:25:26Z", "message": "debug 2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "599bf6fcdca3bb851351f26d2129d4368ea18a8b", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/599bf6fcdca3bb851351f26d2129d4368ea18a8b", "committedDate": "2020-09-25T21:25:26Z", "message": "debug 2"}, "afterCommit": {"oid": "4d0b3066a6acf617b548cdf12fcd71d3371f93f8", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4d0b3066a6acf617b548cdf12fcd71d3371f93f8", "committedDate": "2020-09-25T21:28:38Z", "message": "debug 2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d0b3066a6acf617b548cdf12fcd71d3371f93f8", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4d0b3066a6acf617b548cdf12fcd71d3371f93f8", "committedDate": "2020-09-25T21:28:38Z", "message": "debug 2"}, "afterCommit": {"oid": "baa95b00b9a398521f4a3dd35e84886257a9b7f7", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/baa95b00b9a398521f4a3dd35e84886257a9b7f7", "committedDate": "2020-09-25T21:28:38Z", "message": "Remove redundant cpu detection assertion tests\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "baa95b00b9a398521f4a3dd35e84886257a9b7f7", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/baa95b00b9a398521f4a3dd35e84886257a9b7f7", "committedDate": "2020-09-25T21:28:38Z", "message": "Remove redundant cpu detection assertion tests\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "a251381bde18f953f5dd9007b68712d573ac6c92", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a251381bde18f953f5dd9007b68712d573ac6c92", "committedDate": "2020-09-26T00:05:32Z", "message": "Remove redundant cpu detection assertion tests\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a251381bde18f953f5dd9007b68712d573ac6c92", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a251381bde18f953f5dd9007b68712d573ac6c92", "committedDate": "2020-09-26T00:05:32Z", "message": "Remove redundant cpu detection assertion tests\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "dcaa137269b609bef309c9c917e70bb120657c1b", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/dcaa137269b609bef309c9c917e70bb120657c1b", "committedDate": "2020-09-28T19:10:51Z", "message": "Add mechanisms to disable unused cpu features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dcaa137269b609bef309c9c917e70bb120657c1b", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/dcaa137269b609bef309c9c917e70bb120657c1b", "committedDate": "2020-09-28T19:10:51Z", "message": "Add mechanisms to disable unused cpu features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "6e33cf97cd15799432c6b23ec0f86a9d5a4f6612", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/6e33cf97cd15799432c6b23ec0f86a9d5a4f6612", "committedDate": "2020-09-28T20:04:17Z", "message": "Add mechanisms to disable unused cpu features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3OTk2NzA0", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#pullrequestreview-497996704", "createdAt": "2020-09-29T01:13:21Z", "commit": {"oid": "6e33cf97cd15799432c6b23ec0f86a9d5a4f6612"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMToxMzoyMVrOHZU4jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMTozNzoyOFrOHZVR_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMxODYwNg==", "bodyText": "I would like some comments on the meaning of the parameters and what this function is supposed to do", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#discussion_r496318606", "createdAt": "2020-09-29T01:13:21Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9CPU.hpp", "diffHunk": "@@ -45,12 +45,17 @@ class OMR_EXTENSIBLE CPU : public OMR::CPUConnector\n    CPU() : OMR::CPUConnector() {}\n    CPU(const OMRProcessorDesc& processorDescription) : OMR::CPUConnector(processorDescription) {}\n \n+   static OMRProcessorDesc _featureMasks;\n+   static bool _shouldUseFeatureMasks; \n+   static void applyFeatureMasks(OMRProcessorDesc& processorDescription, const uint32_t* enabledFeatures, size_t size); ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e33cf97cd15799432c6b23ec0f86a9d5a4f6612"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMxODYxMw==", "bodyText": "In c++ initializing all elements wit 0 can be done with array[10] = {0} or even array[10]={}", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#discussion_r496318613", "createdAt": "2020-09-29T01:13:22Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9CPU.cpp", "diffHunk": "@@ -28,8 +28,9 @@\n #include \"env/CompilerEnv.hpp\"\n #include \"env/CPU.hpp\"\n #include \"env/VMJ9.h\"\n-#include \"j9.h\"\n-#include \"j9port.h\"\n+\n+OMRProcessorDesc J9::CPU::_featureMasks = {OMR_PROCESSOR_UNDEFINED, OMR_PROCESSOR_UNDEFINED, {0, 0, 0, 0, 0}};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e33cf97cd15799432c6b23ec0f86a9d5a4f6612"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMyMjAwNg==", "bodyText": "Since _featureMasks are reset and created in this routine just to be copied over to processorDescription why don't we declare the _featureMasks as a local in this function?", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#discussion_r496322006", "createdAt": "2020-09-29T01:25:38Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9CPU.cpp", "diffHunk": "@@ -43,3 +44,29 @@ J9::CPU::getProcessorDescription()\n #endif /* defined(J9VM_OPT_JITSERVER) */\n    return _processorDescription;\n    }\n+\n+void\n+J9::CPU::applyFeatureMasks(OMRProcessorDesc& processorDescription, const uint32_t* enabledFeatures, size_t size)\n+   {\n+   OMRPORT_ACCESS_FROM_OMRPORT(TR::Compiler->omrPortLib);\n+   memset(_featureMasks.features, 0, OMRPORT_SYSINFO_FEATURES_SIZE*sizeof(uint32_t));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e33cf97cd15799432c6b23ec0f86a9d5a4f6612"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMyMjYwNA==", "bodyText": "Note that statics are risky for multiple compilation threads and they usually don't work with JITServer", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#discussion_r496322604", "createdAt": "2020-09-29T01:28:01Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9CPU.cpp", "diffHunk": "@@ -28,8 +28,9 @@\n #include \"env/CompilerEnv.hpp\"\n #include \"env/CPU.hpp\"\n #include \"env/VMJ9.h\"\n-#include \"j9.h\"\n-#include \"j9port.h\"\n+\n+OMRProcessorDesc J9::CPU::_featureMasks = {OMR_PROCESSOR_UNDEFINED, OMR_PROCESSOR_UNDEFINED, {0, 0, 0, 0, 0}};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMxODYxMw=="}, "originalCommit": {"oid": "6e33cf97cd15799432c6b23ec0f86a9d5a4f6612"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMyNTExOQ==", "bodyText": "Note: if applyFeatureMasks can be executed by multiple threads, you cannot expect the features you set previously to remain set in the presence of multiple compilation threads.", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#discussion_r496325119", "createdAt": "2020-09-29T01:37:28Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9CPU.cpp", "diffHunk": "@@ -43,3 +44,29 @@ J9::CPU::getProcessorDescription()\n #endif /* defined(J9VM_OPT_JITSERVER) */\n    return _processorDescription;\n    }\n+\n+void\n+J9::CPU::applyFeatureMasks(OMRProcessorDesc& processorDescription, const uint32_t* enabledFeatures, size_t size)\n+   {\n+   OMRPORT_ACCESS_FROM_OMRPORT(TR::Compiler->omrPortLib);\n+   memset(_featureMasks.features, 0, OMRPORT_SYSINFO_FEATURES_SIZE*sizeof(uint32_t));\n+   for (size_t i = 0; i < size; i++)\n+      {\n+      omrsysinfo_processor_set_feature(&_featureMasks, enabledFeatures[i], TRUE);\n+      }\n+   _shouldUseFeatureMasks = true;\n+   \n+   for (size_t i = 0; i < OMRPORT_SYSINFO_FEATURES_SIZE; i++)\n+      {\n+      processorDescription.features[i] &= _featureMasks.features[i];\n+      }\n+   }\n+\n+bool\n+J9::CPU::supportsFeature(uint32_t feature)\n+   {\n+   OMRPORT_ACCESS_FROM_OMRPORT(TR::Compiler->omrPortLib);\n+   if (_shouldUseFeatureMasks)\n+      TR_ASSERT_FATAL(TRUE == omrsysinfo_processor_has_feature(&_featureMasks, feature), \"new feature usage detected, please enable feature %d in TR::CPU::applyUserOptions()\\n\", feature);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e33cf97cd15799432c6b23ec0f86a9d5a4f6612"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d067fb6e965da3a7345eb75f0154ac62ff49760c", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d067fb6e965da3a7345eb75f0154ac62ff49760c", "committedDate": "2020-09-30T15:59:07Z", "message": "more changes"}, "afterCommit": {"oid": "f409a7cb3b383c5a20e8a90d0949ae31f2e3b7f2", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f409a7cb3b383c5a20e8a90d0949ae31f2e3b7f2", "committedDate": "2020-09-30T16:13:17Z", "message": "more changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f409a7cb3b383c5a20e8a90d0949ae31f2e3b7f2", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f409a7cb3b383c5a20e8a90d0949ae31f2e3b7f2", "committedDate": "2020-09-30T16:13:17Z", "message": "more changes"}, "afterCommit": {"oid": "642f328ba6fe499c95dee7f6cea7a88f6a598a0b", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/642f328ba6fe499c95dee7f6cea7a88f6a598a0b", "committedDate": "2020-09-30T16:37:28Z", "message": "more changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5983ee192ab5fd4559d6297be3af811597ec2a4", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a5983ee192ab5fd4559d6297be3af811597ec2a4", "committedDate": "2020-09-30T21:02:40Z", "message": "Remove redundant cpu detection assertion tests\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c05b2dab03c651da244f788d4d9cfa342ccc239f", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c05b2dab03c651da244f788d4d9cfa342ccc239f", "committedDate": "2020-09-30T20:57:22Z", "message": "sss"}, "afterCommit": {"oid": "0e3403761cdabd011e9697838c4bdb9cc66eeb10", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/0e3403761cdabd011e9697838c4bdb9cc66eeb10", "committedDate": "2020-09-30T21:03:48Z", "message": "Add mechanisms to disable unused cpu features\n\nThe mechanism will assert if it detects usage of a disabled feature.\nThis will effectively prevent us from accidentally disabling an exploited feature.\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa6cbb4c93d9c9f246c9c7f6e4a3c5b1adf8b141", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/fa6cbb4c93d9c9f246c9c7f6e4a3c5b1adf8b141", "committedDate": "2020-10-01T00:04:56Z", "message": "stuff"}, "afterCommit": {"oid": "93de6d4c9b641e89f7e18b4a27eae03805e70e9b", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/93de6d4c9b641e89f7e18b4a27eae03805e70e9b", "committedDate": "2020-10-01T15:34:31Z", "message": "Add various improvements to TR::CPU class\n\n- Eliminate `applyUserOptions()`.\n  - Disassociate the options from `TR::CPU`.\n  - Issue with `applyUserOptions()` is that the options are not initialized when `TR::CPU` is initialized which means if the user calls `applyUserOptions()` at the incorrect place the options queries that it contains will either crash the program or not take effect. I want to eliminate this risk of incorrect usage.\n- Introduce new API called `TR::CPU::customize(OMRProcessorDesc processorDescription)`\n  - it's a static factory method that takes in an `OMRProcessorDesc` from user and output a `TR::CPU` object\n  - The design is that we do not give user to ability to modify the fields of TR::CPU object in place. You will need to go through a factory method to change TR::CPU. This makes it easier for us to keep track where TR::CPU is modified and eliminate any unintentional illegal TR::CPU modifications from user which can be disastrous.\n- Introduce new API called `TR::CPU::enableFeatureMasks()`\n  - You can turn on \"featureMasks\" support using this API\n  - Once \"featureMasks\" support is turned on, we will mask out all cpu features that are not used by the current compiler from the OMRProcessorDesc struct in TR::CPU which allows to do CPU compatibility checks for AOT more correctly\n  - For each platform, we keep track of the utilized cpu features inside `TR::CPU::enableFeatureMasks()`\n  - If developer utilizes a previously unused feature, they need to add it to `TR::CPU::enableFeatureMasks()`\n  - We have assert tests in place to detect queries to unused feature\n    - The purpose of this detection is to minimize the risk of masking out cpu features that are being used.\n- Guard cpu feature tests against old version cpu feature detection on x86 with an environment variable.\n- Summary of current design:\n  - `TR::CPU::detect(omrPortLib)`: static factory method that gives you the TR::CPU object based on port library\n  - `TR::CPU::customize(processorDescription)`: static factory method that gives you the TR::CPU object based on a processorDescription provided by user\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3da62521c64fb20d3e3e48ca3bc21d8bf278c07c", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3da62521c64fb20d3e3e48ca3bc21d8bf278c07c", "committedDate": "2020-10-01T15:38:40Z", "message": "Add various improvements to TR::CPU class\n\n- Eliminate `applyUserOptions()`.\n  - Disassociate the options from `TR::CPU`.\n  - Issue with `applyUserOptions()` is that the options are not initialized when\n    `TR::CPU` is initialized which means if the user calls `applyUserOptions()`\n    at the incorrect place the options queries that it contains will either crash\n    the program or not take effect. I want to eliminate this risk of incorrect usage.\n- Introduce new API called `TR::CPU::customize(OMRProcessorDesc processorDescription)`\n  - it's a static factory method that takes in an `OMRProcessorDesc` from user and\n    output a `TR::CPU` object\n  - The design is that we do not give user to ability to modify the fields of TR::CPU\n    object in place. You will need to go through a factory method to change TR::CPU.\n    This makes it easier for us to keep track where TR::CPU is modified and eliminate\n    any unintentional illegal TR::CPU modifications from user which can be disastrous.\n- Introduce new API called `TR::CPU::enableFeatureMasks()`\n  - You can turn on \"featureMasks\" support using this API\n  - Once \"featureMasks\" support is turned on, we will mask out all cpu features that\n    are not used by the current compiler from the OMRProcessorDesc struct in TR::CPU\n    which allows to do CPU compatibility checks for AOT more correctly\n  - For each platform, we keep track of the utilized cpu features inside\n    `TR::CPU::enableFeatureMasks()`\n  - If developer utilizes a previously unused feature, they need to add it to\n    `TR::CPU::enableFeatureMasks()`\n  - We have assert tests in place to detect queries to unused feature\n    - The purpose of this detection is to minimize the risk of masking out cpu\n      features that are being used.\n- Guard cpu feature tests against old version cpu feature detection on x86 with an\n  environment variable.\n- Summary of current design:\n  - `TR::CPU::detect(omrPortLib)`: static factory method that gives you the TR::CPU\n    object based on port library\n  - `TR::CPU::customize(processorDescription)`: static factory method that gives you\n    the TR::CPU object based on a processorDescription provided by user\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93de6d4c9b641e89f7e18b4a27eae03805e70e9b", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/93de6d4c9b641e89f7e18b4a27eae03805e70e9b", "committedDate": "2020-10-01T15:34:31Z", "message": "Add various improvements to TR::CPU class\n\n- Eliminate `applyUserOptions()`.\n  - Disassociate the options from `TR::CPU`.\n  - Issue with `applyUserOptions()` is that the options are not initialized when `TR::CPU` is initialized which means if the user calls `applyUserOptions()` at the incorrect place the options queries that it contains will either crash the program or not take effect. I want to eliminate this risk of incorrect usage.\n- Introduce new API called `TR::CPU::customize(OMRProcessorDesc processorDescription)`\n  - it's a static factory method that takes in an `OMRProcessorDesc` from user and output a `TR::CPU` object\n  - The design is that we do not give user to ability to modify the fields of TR::CPU object in place. You will need to go through a factory method to change TR::CPU. This makes it easier for us to keep track where TR::CPU is modified and eliminate any unintentional illegal TR::CPU modifications from user which can be disastrous.\n- Introduce new API called `TR::CPU::enableFeatureMasks()`\n  - You can turn on \"featureMasks\" support using this API\n  - Once \"featureMasks\" support is turned on, we will mask out all cpu features that are not used by the current compiler from the OMRProcessorDesc struct in TR::CPU which allows to do CPU compatibility checks for AOT more correctly\n  - For each platform, we keep track of the utilized cpu features inside `TR::CPU::enableFeatureMasks()`\n  - If developer utilizes a previously unused feature, they need to add it to `TR::CPU::enableFeatureMasks()`\n  - We have assert tests in place to detect queries to unused feature\n    - The purpose of this detection is to minimize the risk of masking out cpu features that are being used.\n- Guard cpu feature tests against old version cpu feature detection on x86 with an environment variable.\n- Summary of current design:\n  - `TR::CPU::detect(omrPortLib)`: static factory method that gives you the TR::CPU object based on port library\n  - `TR::CPU::customize(processorDescription)`: static factory method that gives you the TR::CPU object based on a processorDescription provided by user\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "3da62521c64fb20d3e3e48ca3bc21d8bf278c07c", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/3da62521c64fb20d3e3e48ca3bc21d8bf278c07c", "committedDate": "2020-10-01T15:38:40Z", "message": "Add various improvements to TR::CPU class\n\n- Eliminate `applyUserOptions()`.\n  - Disassociate the options from `TR::CPU`.\n  - Issue with `applyUserOptions()` is that the options are not initialized when\n    `TR::CPU` is initialized which means if the user calls `applyUserOptions()`\n    at the incorrect place the options queries that it contains will either crash\n    the program or not take effect. I want to eliminate this risk of incorrect usage.\n- Introduce new API called `TR::CPU::customize(OMRProcessorDesc processorDescription)`\n  - it's a static factory method that takes in an `OMRProcessorDesc` from user and\n    output a `TR::CPU` object\n  - The design is that we do not give user to ability to modify the fields of TR::CPU\n    object in place. You will need to go through a factory method to change TR::CPU.\n    This makes it easier for us to keep track where TR::CPU is modified and eliminate\n    any unintentional illegal TR::CPU modifications from user which can be disastrous.\n- Introduce new API called `TR::CPU::enableFeatureMasks()`\n  - You can turn on \"featureMasks\" support using this API\n  - Once \"featureMasks\" support is turned on, we will mask out all cpu features that\n    are not used by the current compiler from the OMRProcessorDesc struct in TR::CPU\n    which allows to do CPU compatibility checks for AOT more correctly\n  - For each platform, we keep track of the utilized cpu features inside\n    `TR::CPU::enableFeatureMasks()`\n  - If developer utilizes a previously unused feature, they need to add it to\n    `TR::CPU::enableFeatureMasks()`\n  - We have assert tests in place to detect queries to unused feature\n    - The purpose of this detection is to minimize the risk of masking out cpu\n      features that are being used.\n- Guard cpu feature tests against old version cpu feature detection on x86 with an\n  environment variable.\n- Summary of current design:\n  - `TR::CPU::detect(omrPortLib)`: static factory method that gives you the TR::CPU\n    object based on port library\n  - `TR::CPU::customize(processorDescription)`: static factory method that gives you\n    the TR::CPU object based on a processorDescription provided by user\n\nIssue: #10683\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTM1NzY5", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#pullrequestreview-501535769", "createdAt": "2020-10-03T10:07:29Z", "commit": {"oid": "3da62521c64fb20d3e3e48ca3bc21d8bf278c07c"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjgwOTU1", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#pullrequestreview-502280955", "createdAt": "2020-10-05T17:43:15Z", "commit": {"oid": "3da62521c64fb20d3e3e48ca3bc21d8bf278c07c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzo0MzoxNVrOHcnU3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzo0MzoxNVrOHcnU3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2NjQ5NQ==", "bodyText": "A better name for this is _supportedFeatureMasks", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#discussion_r499766495", "createdAt": "2020-10-05T17:43:15Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9CPU.hpp", "diffHunk": "@@ -45,12 +45,43 @@ class OMR_EXTENSIBLE CPU : public OMR::CPUConnector\n    CPU() : OMR::CPUConnector() {}\n    CPU(const OMRProcessorDesc& processorDescription) : OMR::CPUConnector(processorDescription) {}\n \n+   /**\n+    * @brief Contain the list of processor features utlizied by the compiler, initialized via TR::CPU::initializeFeatureMasks()\n+    */\n+   static OMRProcessorDesc _featureMasks;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3da62521c64fb20d3e3e48ca3bc21d8bf278c07c"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMzkwNTUw", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#pullrequestreview-502390550", "createdAt": "2020-10-05T20:20:20Z", "commit": {"oid": "d90a2b1094af1e1ddd44002d720b3e78e001059d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDoyMDoyMFrOHcsXIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDoyMDoyMFrOHcsXIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg0ODk5NA==", "bodyText": "This is not ideal. JITServer should obey exactly what the client tells it to do and not add any customization of its own.", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#discussion_r499848994", "createdAt": "2020-10-05T20:20:20Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -8514,7 +8514,7 @@ TR::CompilationInfoPerThreadBase::wrappedCompile(J9PortLibrary *portLib, void *\n          if (that->_methodBeingCompiled->isOutOfProcessCompReq())\n             {\n             OMRProcessorDesc JITClientProcessorDesc = TR::Compiler->target.cpu.getProcessorDescription();\n-            target.cpu = TR::CPU(JITClientProcessorDesc);\n+            target.cpu = TR::CPU::customize(JITClientProcessorDesc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d90a2b1094af1e1ddd44002d720b3e78e001059d"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d90a2b1094af1e1ddd44002d720b3e78e001059d", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d90a2b1094af1e1ddd44002d720b3e78e001059d", "committedDate": "2020-10-05T19:09:38Z", "message": "Rename _featureMasks to _supportedFeatureMasks\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "a0a31bce37df45bf95e4d870a65887143b393e58", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a0a31bce37df45bf95e4d870a65887143b393e58", "committedDate": "2020-10-05T21:14:06Z", "message": "Mark TR::CPU constructors protected\n\nForce users to use factory methods (\"TR::CPU::detect()\" and \"TR::CPU::customize()\")\nto construct TR::CPU() objects\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0a31bce37df45bf95e4d870a65887143b393e58", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a0a31bce37df45bf95e4d870a65887143b393e58", "committedDate": "2020-10-05T21:14:06Z", "message": "Mark TR::CPU constructors protected\n\nForce users to use factory methods (\"TR::CPU::detect()\" and \"TR::CPU::customize()\")\nto construct TR::CPU() objects\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "2a5d0b883a72720f016b848ae8bfad36c1df1d3c", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2a5d0b883a72720f016b848ae8bfad36c1df1d3c", "committedDate": "2020-10-05T21:21:26Z", "message": "Use TR::CPU factory methods instead of TR::CPU constructors\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a5d0b883a72720f016b848ae8bfad36c1df1d3c", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/2a5d0b883a72720f016b848ae8bfad36c1df1d3c", "committedDate": "2020-10-05T21:21:26Z", "message": "Use TR::CPU factory methods instead of TR::CPU constructors\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "bd12a39886cf2a1d7f88dc70ee940c48f07d05aa", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/bd12a39886cf2a1d7f88dc70ee940c48f07d05aa", "committedDate": "2020-10-05T21:31:40Z", "message": "Rename _featureMasks to _supportedFeatureMasks\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd12a39886cf2a1d7f88dc70ee940c48f07d05aa", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/bd12a39886cf2a1d7f88dc70ee940c48f07d05aa", "committedDate": "2020-10-05T21:31:40Z", "message": "Rename _featureMasks to _supportedFeatureMasks\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "d32765bb793f9d50793f0667429bc5358be68f78", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d32765bb793f9d50793f0667429bc5358be68f78", "committedDate": "2020-10-05T21:36:19Z", "message": "Rename _featureMasks to _supportedFeatureMasks\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84d0268ca7c4cd377ed156477be6ea3442709063", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/84d0268ca7c4cd377ed156477be6ea3442709063", "committedDate": "2020-10-05T22:18:15Z", "message": "Rename _featureMasks to _supportedFeatureMasks\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb132e7bad49d320de299e9582ef5188373ba562", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/eb132e7bad49d320de299e9582ef5188373ba562", "committedDate": "2020-10-05T22:18:27Z", "message": "Use TR::CPU factory methods instead of TR::CPU constructors\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d32765bb793f9d50793f0667429bc5358be68f78", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/d32765bb793f9d50793f0667429bc5358be68f78", "committedDate": "2020-10-05T21:36:19Z", "message": "Rename _featureMasks to _supportedFeatureMasks\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "eb132e7bad49d320de299e9582ef5188373ba562", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/eb132e7bad49d320de299e9582ef5188373ba562", "committedDate": "2020-10-05T22:18:27Z", "message": "Use TR::CPU factory methods instead of TR::CPU constructors\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDc0OTQ4", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#pullrequestreview-502474948", "createdAt": "2020-10-05T22:53:45Z", "commit": {"oid": "eb132e7bad49d320de299e9582ef5188373ba562"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjo1Mzo0NlrOHcwYbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjo1Mzo0NlrOHcwYbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNDg2Mg==", "bodyText": "Typos: \"Contain\" --> \"Contains\", \"utlizied\" --> \"utilizied\"", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#discussion_r499914862", "createdAt": "2020-10-05T22:53:46Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9CPU.hpp", "diffHunk": "@@ -45,12 +45,43 @@ class OMR_EXTENSIBLE CPU : public OMR::CPUConnector\n    CPU() : OMR::CPUConnector() {}\n    CPU(const OMRProcessorDesc& processorDescription) : OMR::CPUConnector(processorDescription) {}\n \n+   /**\n+    * @brief Contain the list of processor features utlizied by the compiler, initialized via TR::CPU::initializeFeatureMasks()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb132e7bad49d320de299e9582ef5188373ba562"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNDc2NTkz", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#pullrequestreview-502476593", "createdAt": "2020-10-05T22:57:55Z", "commit": {"oid": "eb132e7bad49d320de299e9582ef5188373ba562"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjo1Nzo1NVrOHcwdkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMjo1Nzo1NVrOHcwdkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTkxNjE3Nw==", "bodyText": "I would replace \"Disable\" with \"Sets\".\nDo we actually look at user options? I thought this was done in another part of the code which you showed it to me.", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#discussion_r499916177", "createdAt": "2020-10-05T22:57:55Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/J9CPU.hpp", "diffHunk": "@@ -45,12 +45,43 @@ class OMR_EXTENSIBLE CPU : public OMR::CPUConnector\n    CPU() : OMR::CPUConnector() {}\n    CPU(const OMRProcessorDesc& processorDescription) : OMR::CPUConnector(processorDescription) {}\n \n+   /**\n+    * @brief Contain the list of processor features utlizied by the compiler, initialized via TR::CPU::initializeFeatureMasks()\n+    */\n+   static OMRProcessorDesc _supportedFeatureMasks;\n+\n+   /**\n+    * @brief _isSupportedFeatureMasksEnabled tells you whether _supportedFeatureMasks was used for masking out unused processor features\n+    */\n+   static bool _isSupportedFeatureMasksEnabled;\n+\n public:\n \n+   /** \n+    * @brief Returns the processor type and features that will be used by JIT and AOT compilations\n+    * @param[in] omrPortLib : the port library\n+    * @return TR::CPU\n+    */\n+   static TR::CPU detect(OMRPortLibrary * const omrPortLib);\n+\n+   /** \n+    * @brief Disable processor features based on input processor description, user options and whether they are utilized by the compiler", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb132e7bad49d320de299e9582ef5188373ba562"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNTMxNzY2", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#pullrequestreview-502531766", "createdAt": "2020-10-06T01:51:40Z", "commit": {"oid": "5dda8b90e1cb2b89af62fba8d8071413aeea5924"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5dda8b90e1cb2b89af62fba8d8071413aeea5924", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/5dda8b90e1cb2b89af62fba8d8071413aeea5924", "committedDate": "2020-10-06T01:40:47Z", "message": "Add descriptions for TR::CPU::detect() and TR::CPU::customize()\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "fb73d08eb5233cb5e754d354b0855d25e69f84b9", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/fb73d08eb5233cb5e754d354b0855d25e69f84b9", "committedDate": "2020-10-06T18:13:00Z", "message": "Add descriptions for TR::CPU::detect() and TR::CPU::customize()\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjM4Mjgy", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#pullrequestreview-503238282", "createdAt": "2020-10-06T18:17:49Z", "commit": {"oid": "fb73d08eb5233cb5e754d354b0855d25e69f84b9"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fb73d08eb5233cb5e754d354b0855d25e69f84b9", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/fb73d08eb5233cb5e754d354b0855d25e69f84b9", "committedDate": "2020-10-06T18:13:00Z", "message": "Add descriptions for TR::CPU::detect() and TR::CPU::customize()\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "e24c54850b57e9eae7b040332f13cd0d499e5cc2", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e24c54850b57e9eae7b040332f13cd0d499e5cc2", "committedDate": "2020-10-06T18:19:39Z", "message": "Add descriptions for TR::CPU::detect() and TR::CPU::customize()\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMjUwNzcw", "url": "https://github.com/eclipse-openj9/openj9/pull/10697#pullrequestreview-503250770", "createdAt": "2020-10-06T18:33:04Z", "commit": {"oid": "e24c54850b57e9eae7b040332f13cd0d499e5cc2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e24c54850b57e9eae7b040332f13cd0d499e5cc2", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e24c54850b57e9eae7b040332f13cd0d499e5cc2", "committedDate": "2020-10-06T18:19:39Z", "message": "Add descriptions for TR::CPU::detect() and TR::CPU::customize()\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "c7b487f48799ad4c4427907690cfb94603d4a16f", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c7b487f48799ad4c4427907690cfb94603d4a16f", "committedDate": "2020-10-06T18:56:02Z", "message": "Add descriptions for TR::CPU::detect() and TR::CPU::customize()\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6c0fba3c4ace8f7a4c90d4367fe273eaa2ffe71", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e6c0fba3c4ace8f7a4c90d4367fe273eaa2ffe71", "committedDate": "2020-10-06T18:57:32Z", "message": "Add descriptions for TR::CPU::detect() and TR::CPU::customize()\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7b487f48799ad4c4427907690cfb94603d4a16f", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/c7b487f48799ad4c4427907690cfb94603d4a16f", "committedDate": "2020-10-06T18:56:02Z", "message": "Add descriptions for TR::CPU::detect() and TR::CPU::customize()\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}, "afterCommit": {"oid": "e6c0fba3c4ace8f7a4c90d4367fe273eaa2ffe71", "author": {"user": {"login": "harryyu1994", "name": "Harry Yu"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e6c0fba3c4ace8f7a4c90d4367fe273eaa2ffe71", "committedDate": "2020-10-06T18:57:32Z", "message": "Add descriptions for TR::CPU::detect() and TR::CPU::customize()\n\nSigned-off-by: Harry Yu <harryyu1994@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 308, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}