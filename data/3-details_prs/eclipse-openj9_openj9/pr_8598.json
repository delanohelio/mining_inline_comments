{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NjY3NzMy", "number": 8598, "title": "Handle unexpected bytecodes in method handle thunk", "bodyText": "This change fixes a bug in interpreter emulator. When loading an\nauto check the index to make sure it's an argument before goes ahead\nextracting arg type info from it.\nThis change also makes two small improvements\n1.stops recursive inlining if a method handle thunk contains\nunexpected bytecodes.\n2. dont use interpreter emulator with state for targeted inlining since the\ninterpreter emulator with state is intended for method handle inlining in general inlining.\nfixes: #8553\nfixes: #8694\nSigned-off-by: Yi Zhang yizhang@ca.ibm.com", "createdAt": "2020-02-18T15:03:31Z", "url": "https://github.com/eclipse-openj9/openj9/pull/8598", "merged": true, "mergeCommit": {"oid": "120a8519864e428347b5236a4c78f78826fa251e"}, "closed": true, "closedAt": "2020-03-02T22:56:18Z", "author": {"login": "cathyzhyi"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFjU1KABqjMwNDc1MjA1NDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJw_7MAFqTM2NzM3NzM5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c588a2122acc48e505f0c077948456c67191e6fe", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/c588a2122acc48e505f0c077948456c67191e6fe", "committedDate": "2020-02-18T15:02:50Z", "message": "Handle unexpected bytecodes in method handle thunk\n\nStop recursive inlining if a method handle thunk contains unexpected\nbytecodes.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}, "afterCommit": {"oid": "70b8822e3dbddc673bbba4553c2626a694d4f763", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/70b8822e3dbddc673bbba4553c2626a694d4f763", "committedDate": "2020-02-18T15:05:03Z", "message": "Handle unexpected bytecodes in method handle thunk\n\nStop recursive inlining if a method handle thunk contains unexpected\nbytecodes.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODYzNDAz", "url": "https://github.com/eclipse-openj9/openj9/pull/8598#pullrequestreview-362863403", "createdAt": "2020-02-21T19:27:32Z", "commit": {"oid": "70b8822e3dbddc673bbba4553c2626a694d4f763"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOToyNzozMlrOFtCEFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOToyNzozMlrOFtCEFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2NDA1Mg==", "bodyText": "why 7?", "url": "https://github.com/eclipse-openj9/openj9/pull/8598#discussion_r382764052", "createdAt": "2020-02-21T19:27:32Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/optimizer/J9EstimateCodeSize.cpp", "diffHunk": "@@ -1277,7 +1277,11 @@ TR_J9EstimateCodeSize::realEstimateCodeSize(TR_CallTarget *calltarget, TR_CallSt\n       {\n       bci.prepareToFindAndCreateCallsites(blocks, flags, callSites, &cfg, &newBCInfo, _recursionDepth, &callStack);\n       bool iteratorWithState = isCalleeMethodHandleThunk && !mhInlineWithPeeking;\n-      bci.findAndCreateCallsitesFromBytecodes(wasPeekingSuccessfull, iteratorWithState);\n+      if (!bci.findAndCreateCallsitesFromBytecodes(wasPeekingSuccessfull, iteratorWithState))\n+         {\n+         heuristicTrace(tracer(), \"*** Depth %d: ECS end for target %p signature %s. bci.findAndCreateCallsitesFromBytecode failed\", _recursionDepth, calltarget, callerName);\n+         return returnCleanup(7);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70b8822e3dbddc673bbba4553c2626a694d4f763"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODYzOTM4", "url": "https://github.com/eclipse-openj9/openj9/pull/8598#pullrequestreview-362863938", "createdAt": "2020-02-21T19:28:28Z", "commit": {"oid": "70b8822e3dbddc673bbba4553c2626a694d4f763"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOToyODoyOFrOFtCFtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOToyODoyOFrOFtCFtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2NDQ2OA==", "bodyText": "would false be better as meaning some error occurred - eg an unexpected bytecode?", "url": "https://github.com/eclipse-openj9/openj9/pull/8598#discussion_r382764468", "createdAt": "2020-02-21T19:28:28Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/optimizer/InterpreterEmulator.hpp", "diffHunk": "@@ -224,8 +226,10 @@ class InterpreterEmulator : public TR_ByteCodeIteratorWithState<TR_J9ByteCode, J\n       void initializeIteratorWithState();\n       /*\n        * push and pop operands on stack according to given bytecode\n+       *\n+       * \\return whether maintainStack succeed. Return false if there is any unexpected bytecode.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70b8822e3dbddc673bbba4553c2626a694d4f763"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODY0MzIy", "url": "https://github.com/eclipse-openj9/openj9/pull/8598#pullrequestreview-362864322", "createdAt": "2020-02-21T19:29:10Z", "commit": {"oid": "70b8822e3dbddc673bbba4553c2626a694d4f763"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOToyOToxMFrOFtCG9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOToyOToxMFrOFtCG9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2NDc4OQ==", "bodyText": "formatting - return on new line please", "url": "https://github.com/eclipse-openj9/openj9/pull/8598#discussion_r382764789", "createdAt": "2020-02-21T19:29:10Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/optimizer/InterpreterEmulator.cpp", "diffHunk": "@@ -439,13 +441,15 @@ InterpreterEmulator::findAndCreateCallsitesFromBytecodes(bool wasPeekingSuccessf\n \n       if (_iteratorWithState)\n          {\n-         maintainStack(bc);\n-         dumpStack();\n+         if (maintainStack(bc))\n+            dumpStack();\n+         else return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70b8822e3dbddc673bbba4553c2626a694d4f763"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODY0ODM1", "url": "https://github.com/eclipse-openj9/openj9/pull/8598#pullrequestreview-362864835", "createdAt": "2020-02-21T19:30:02Z", "commit": {"oid": "70b8822e3dbddc673bbba4553c2626a694d4f763"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTozMDowMlrOFtCIfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTozMDowMlrOFtCIfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2NTE4Mg==", "bodyText": "might also be worht having a static debug counter - possibly even one that counts the specific bytecodes that caused failures. An envvar for a fatal assert might not be a bad idea for development to make finding missing bytecodes easier.", "url": "https://github.com/eclipse-openj9/openj9/pull/8598#discussion_r382765182", "createdAt": "2020-02-21T19:30:02Z", "author": {"login": "andrewcraik"}, "path": "runtime/compiler/optimizer/InterpreterEmulator.cpp", "diffHunk": "@@ -216,8 +216,10 @@ InterpreterEmulator::maintainStack(TR_J9ByteCode bc)\n       case J9BCinvokestaticsplit:\n          break;\n       default:\n-         TR_ASSERT_FATAL(0, \"unexpected bytecode in thunk archetype %p at bcIndex %d %s (%d)\\n\", _calltarget, bcIndex(), comp()->fej9()->getByteCodeName(nextByte(0)), bc);\n+         debugTrace(tracer(), \"unexpected bytecode in thunk archetype %p at bcIndex %d %s (%d)\\n\", _calltarget, bcIndex(), comp()->fej9()->getByteCodeName(nextByte(0)), bc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70b8822e3dbddc673bbba4553c2626a694d4f763"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70b8822e3dbddc673bbba4553c2626a694d4f763", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/70b8822e3dbddc673bbba4553c2626a694d4f763", "committedDate": "2020-02-18T15:05:03Z", "message": "Handle unexpected bytecodes in method handle thunk\n\nStop recursive inlining if a method handle thunk contains unexpected\nbytecodes.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}, "afterCommit": {"oid": "eb114f3ddb14811a14567525c1eeba71a8f3b092", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/eb114f3ddb14811a14567525c1eeba71a8f3b092", "committedDate": "2020-02-24T16:39:51Z", "message": "Handle unexpected bytecodes in method handle thunk\n\nStop recursive inlining if a method handle thunk contains unexpected\nbytecodes.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb114f3ddb14811a14567525c1eeba71a8f3b092", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/eb114f3ddb14811a14567525c1eeba71a8f3b092", "committedDate": "2020-02-24T16:39:51Z", "message": "Handle unexpected bytecodes in method handle thunk\n\nStop recursive inlining if a method handle thunk contains unexpected\nbytecodes.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}, "afterCommit": {"oid": "49f59f18b5627b6b05841b17ca7f1639f3f7f12c", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/49f59f18b5627b6b05841b17ca7f1639f3f7f12c", "committedDate": "2020-02-24T17:03:58Z", "message": "Handle unexpected bytecodes in method handle thunk\n\nStop recursive inlining if a method handle thunk contains unexpected\nbytecodes.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "49f59f18b5627b6b05841b17ca7f1639f3f7f12c", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/49f59f18b5627b6b05841b17ca7f1639f3f7f12c", "committedDate": "2020-02-24T17:03:58Z", "message": "Handle unexpected bytecodes in method handle thunk\n\nStop recursive inlining if a method handle thunk contains unexpected\nbytecodes.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}, "afterCommit": {"oid": "fe4f1c9c508f52602e9a5b0db7bcff2b867f1a7d", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/fe4f1c9c508f52602e9a5b0db7bcff2b867f1a7d", "committedDate": "2020-02-24T17:09:03Z", "message": "Handle unexpected bytecodes in method handle thunk\n\nStop recursive inlining if a method handle thunk contains unexpected\nbytecodes.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe4f1c9c508f52602e9a5b0db7bcff2b867f1a7d", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/fe4f1c9c508f52602e9a5b0db7bcff2b867f1a7d", "committedDate": "2020-02-24T17:09:03Z", "message": "Handle unexpected bytecodes in method handle thunk\n\nStop recursive inlining if a method handle thunk contains unexpected\nbytecodes.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}, "afterCommit": {"oid": "bc3d724f481a2afd0cd965bfe609fd8be3e3aa88", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/bc3d724f481a2afd0cd965bfe609fd8be3e3aa88", "committedDate": "2020-02-26T15:55:25Z", "message": "Handle unexpected bytecodes in method handle thunk\n\nStop recursive inlining if a method handle thunk contains unexpected\nbytecodes.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "905f73868a18b7edc092c62392adc6e03c7bbbbd", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/905f73868a18b7edc092c62392adc6e03c7bbbbd", "committedDate": "2020-03-02T15:55:55Z", "message": "Fix method handle inlining and small improvements\n\nThis change fixes a bug in interpreter emulator. When loading an\nauto check the index to make sure it's an argument before goes ahead\nextracting arg type info from it.\n\nThis change also makes to small improvements\n1.stops recursive inlining if a method handle thunk contains\nunexpected bytecodes.\n2. dont use interpreter emulator for targeted inlining since the\ninterpreter emulator is intended for general inlining.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc3d724f481a2afd0cd965bfe609fd8be3e3aa88", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/bc3d724f481a2afd0cd965bfe609fd8be3e3aa88", "committedDate": "2020-02-26T15:55:25Z", "message": "Handle unexpected bytecodes in method handle thunk\n\nStop recursive inlining if a method handle thunk contains unexpected\nbytecodes.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}, "afterCommit": {"oid": "905f73868a18b7edc092c62392adc6e03c7bbbbd", "author": {"user": null}, "url": "https://github.com/eclipse-openj9/openj9/commit/905f73868a18b7edc092c62392adc6e03c7bbbbd", "committedDate": "2020-03-02T15:55:55Z", "message": "Fix method handle inlining and small improvements\n\nThis change fixes a bug in interpreter emulator. When loading an\nauto check the index to make sure it's an argument before goes ahead\nextracting arg type info from it.\n\nThis change also makes to small improvements\n1.stops recursive inlining if a method handle thunk contains\nunexpected bytecodes.\n2. dont use interpreter emulator for targeted inlining since the\ninterpreter emulator is intended for general inlining.\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>\n\nSigned-off-by: Yi Zhang <yizhang@ca.ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3Mzc3Mzk1", "url": "https://github.com/eclipse-openj9/openj9/pull/8598#pullrequestreview-367377395", "createdAt": "2020-03-02T17:16:40Z", "commit": {"oid": "905f73868a18b7edc092c62392adc6e03c7bbbbd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 548, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}