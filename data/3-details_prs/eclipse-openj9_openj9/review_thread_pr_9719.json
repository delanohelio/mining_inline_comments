{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MTE3MDYy", "number": 9719, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzowNzozOVrOEAThdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzowNzozOVrOEAThdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzU1MzE3OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/control/CompilationThread.cpp", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMzowNzozOVrOGbgM9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNTo1NTo1MVrOGb74JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MjM0Mw==", "bodyText": "If I understand the scenario correctly, these flags will never be seen in the metadata for a \"live\" compiled method. They serve only as a temporary hint passed to addFreeBlock to not print some problematic field. The only downside I see is occupying some bits in the metaData->flags.  If it's not too much hassle, maybe a we should add another parameter to addFreeBlock", "url": "https://github.com/eclipse-openj9/openj9/pull/9719#discussion_r431492343", "createdAt": "2020-05-27T23:07:39Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -10371,6 +10371,11 @@ TR::CompilationInfo::compilationEnd(J9VMThread * vmThread, TR::IlGeneratorMethod\n                   J9JITDataCacheHeader *exceptionTableCacheEntry = (J9JITDataCacheHeader *)((U_8 *)cacheEntry + aotMethodHeaderEntry->offsetToExceptionTable);\n                   J9JITExceptionTable *metaData = (J9JITExceptionTable *) (exceptionTableCacheEntry + 1);\n \n+                  if (!canRelocateMethod)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa554528c3630ebc74ce4ec55abd49b48839414c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU1OTEwOA==", "bodyText": "Yeah I'll take a look to do that.", "url": "https://github.com/eclipse-openj9/openj9/pull/9719#discussion_r431559108", "createdAt": "2020-05-28T03:17:04Z", "author": {"login": "dsouzai"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -10371,6 +10371,11 @@ TR::CompilationInfo::compilationEnd(J9VMThread * vmThread, TR::IlGeneratorMethod\n                   J9JITDataCacheHeader *exceptionTableCacheEntry = (J9JITDataCacheHeader *)((U_8 *)cacheEntry + aotMethodHeaderEntry->offsetToExceptionTable);\n                   J9JITExceptionTable *metaData = (J9JITExceptionTable *) (exceptionTableCacheEntry + 1);\n \n+                  if (!canRelocateMethod)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MjM0Mw=="}, "originalCommit": {"oid": "aa554528c3630ebc74ce4ec55abd49b48839414c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk0NTc2NQ==", "bodyText": "Adding a parameter is a bit cumbersome actually, because while J9::CodeCacheManager::addFreeBlock is only an OpenJ9 API, J9::CodeCache::addFreeBlock is an extensible API (ie there is a counterpart for this API in OMR), which means I'd have to also open an OMR PR.\nPerhaps what's better is that I just add a single flag, namely JIT_METADATA_IS_UNINITIALIZED, and set that where we first allocate it, and reset it when we properly initialize the metadata. It'll only be for AOT compilations, because technically we do store an uninitialized metadata into the SCC, so I think it's not a bad bit to have.", "url": "https://github.com/eclipse-openj9/openj9/pull/9719#discussion_r431945765", "createdAt": "2020-05-28T15:55:51Z", "author": {"login": "dsouzai"}, "path": "runtime/compiler/control/CompilationThread.cpp", "diffHunk": "@@ -10371,6 +10371,11 @@ TR::CompilationInfo::compilationEnd(J9VMThread * vmThread, TR::IlGeneratorMethod\n                   J9JITDataCacheHeader *exceptionTableCacheEntry = (J9JITDataCacheHeader *)((U_8 *)cacheEntry + aotMethodHeaderEntry->offsetToExceptionTable);\n                   J9JITExceptionTable *metaData = (J9JITExceptionTable *) (exceptionTableCacheEntry + 1);\n \n+                  if (!canRelocateMethod)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ5MjM0Mw=="}, "originalCommit": {"oid": "aa554528c3630ebc74ce4ec55abd49b48839414c"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 75, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}