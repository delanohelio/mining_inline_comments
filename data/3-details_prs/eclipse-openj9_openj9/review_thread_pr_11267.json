{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2Nzg4Mjk0", "number": 11267, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowNzo1M1rOE88q6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjo1ODoyOVrOE8-o8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzQ0MDQyOnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/java/lang/invoke/NativeMethodHandle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowNzo1M1rOH5Xxlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowNzo1M1rOH5Xxlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkyMDQwNg==", "bodyText": "All uses of OpenJDKCompileStubThrowError() should be in a throw statement:\n  throw OpenJDKCompileStub.OpenJDKCompileStubThrowError();", "url": "https://github.com/eclipse-openj9/openj9/pull/11267#discussion_r529920406", "createdAt": "2020-11-24T22:07:53Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/java/lang/invoke/NativeMethodHandle.java", "diffHunk": "@@ -112,3 +113,25 @@ void compareWithNative(NativeMethodHandle left, Comparator c) {\n \t\tc.compareStructuralParameter(left.vmSlot, this.vmSlot);\n \t}\n }\n+/*[ELSE]*/\n+import java.util.List;\n+import jdk.internal.invoke.NativeEntryPoint;\n+\n+class NativeMethodHandle extends MethodHandle {\n+\tpublic static MethodHandle make(NativeEntryPoint entryPoint, MethodHandle mh) {\n+\t\tOpenJDKCompileStub.OpenJDKCompileStubThrowError();\n+\t\treturn null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dd2aa48fe20f5eb77893b0d99e4a08dcece337"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzQ0NDMwOnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/java/lang/invoke/NativeMethodHandle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowODozMFrOH5X0CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowODozMFrOH5X0CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkyMTAzMw==", "bodyText": "This should repeat the condition:\n/*[ELSE] Panama */", "url": "https://github.com/eclipse-openj9/openj9/pull/11267#discussion_r529921033", "createdAt": "2020-11-24T22:08:30Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/java/lang/invoke/NativeMethodHandle.java", "diffHunk": "@@ -112,3 +113,25 @@ void compareWithNative(NativeMethodHandle left, Comparator c) {\n \t\tc.compareStructuralParameter(left.vmSlot, this.vmSlot);\n \t}\n }\n+/*[ELSE]*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dd2aa48fe20f5eb77893b0d99e4a08dcece337"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzQ1MzkzOnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/java/lang/invoke/NativeMethodHandle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowOTo1M1rOH5X6HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjowOTo1M1rOH5X6HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTkyMjU4OA==", "bodyText": "Please use spaces around binary operators, just like you would in C code:\n/*[INCLUDE-IF Panama | (JAVA_SPEC_VERSION >= 16)]*/", "url": "https://github.com/eclipse-openj9/openj9/pull/11267#discussion_r529922588", "createdAt": "2020-11-24T22:09:53Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/java/lang/invoke/NativeMethodHandle.java", "diffHunk": "@@ -1,4 +1,4 @@\n-/*[INCLUDE-IF Panama]*/\n+/*[INCLUDE-IF Panama|(JAVA_SPEC_VERSION >= 16)]*/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12dd2aa48fe20f5eb77893b0d99e4a08dcece337"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMzc2MzA2OnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/java/lang/invoke/NativeMethodHandle.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjo1ODoyOVrOH5bBUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQyMjo1ODoyOVrOH5bBUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTk3MzU4NA==", "bodyText": "This won't compile: the return here (and in addRelatedMHs()) is unreachable.", "url": "https://github.com/eclipse-openj9/openj9/pull/11267#discussion_r529973584", "createdAt": "2020-11-24T22:58:29Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/java.base/share/classes/java/lang/invoke/NativeMethodHandle.java", "diffHunk": "@@ -112,3 +113,25 @@ void compareWithNative(NativeMethodHandle left, Comparator c) {\n \t\tc.compareStructuralParameter(left.vmSlot, this.vmSlot);\n \t}\n }\n+/*[ELSE] Panama */\n+import java.util.List;\n+import jdk.internal.invoke.NativeEntryPoint;\n+\n+class NativeMethodHandle extends MethodHandle {\n+\tpublic static MethodHandle make(NativeEntryPoint entryPoint, MethodHandle mh) {\n+\t\tthrow OpenJDKCompileStub.OpenJDKCompileStubThrowError();\n+\t\treturn null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d80b3b73bce482ba5a67177dd4bd7e752515161"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 966, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}