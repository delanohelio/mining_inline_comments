{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0OTc2OTk3", "number": 10909, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMDo0MToyMFrOEurTDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMDo0MToyMFrOEurTDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3Mzc5MzQxOnYy", "diffSide": "RIGHT", "path": "test/functional/Java10andUp/src/org/openj9/test/java/lang/management/ThreadMXBean/APITestJava10.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMDo0MToyMFrOHjPMNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMToxNzoyNFrOHjQDKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxMTA5Mg==", "bodyText": "This line is over-indented.", "url": "https://github.com/eclipse-openj9/openj9/pull/10909#discussion_r506711092", "createdAt": "2020-10-16T20:41:20Z", "author": {"login": "gacholio"}, "path": "test/functional/Java10andUp/src/org/openj9/test/java/lang/management/ThreadMXBean/APITestJava10.java", "diffHunk": "@@ -207,6 +207,22 @@ public void testDumpLimitsWithLambdas() {\n \t\tcheckThreadInfo(REQUESTED_DEPTH, t);\n \t}\n \n+\t/* ThreadInfo objects contain MonitorInfo objects which carry stack depth info that can be higher than\n+\t * max depth passed to dumpAllThreads. dumpAllThreads should still produce the ThreadInfo objects.\n+\t * See https://github.com/eclipse/openj9/issues/10796\n+\t */\n+\t@Test(groups = { \"level.extended\" })\n+\tpublic void testDumpWithMonitorDepthHigherThanLimit() {\n+\t\ttry {\n+\t\t\tThreadInfo[] threads = myBean.dumpAllThreads(true, true, 1);\n+\t\t\tfor (ThreadInfo thInfo : threads) {\n+\t\t\t\t\tAssert.assertTrue(thInfo.getStackTrace().length <= 1, \"Stack depth should be truncated to 1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e8952652dc7209ebcb564ed9ac484c78676dd30"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcyNTE2MA==", "bodyText": "Updated the PR.", "url": "https://github.com/eclipse-openj9/openj9/pull/10909#discussion_r506725160", "createdAt": "2020-10-16T21:17:24Z", "author": {"login": "mikezhang1234567890"}, "path": "test/functional/Java10andUp/src/org/openj9/test/java/lang/management/ThreadMXBean/APITestJava10.java", "diffHunk": "@@ -207,6 +207,22 @@ public void testDumpLimitsWithLambdas() {\n \t\tcheckThreadInfo(REQUESTED_DEPTH, t);\n \t}\n \n+\t/* ThreadInfo objects contain MonitorInfo objects which carry stack depth info that can be higher than\n+\t * max depth passed to dumpAllThreads. dumpAllThreads should still produce the ThreadInfo objects.\n+\t * See https://github.com/eclipse/openj9/issues/10796\n+\t */\n+\t@Test(groups = { \"level.extended\" })\n+\tpublic void testDumpWithMonitorDepthHigherThanLimit() {\n+\t\ttry {\n+\t\t\tThreadInfo[] threads = myBean.dumpAllThreads(true, true, 1);\n+\t\t\tfor (ThreadInfo thInfo : threads) {\n+\t\t\t\t\tAssert.assertTrue(thInfo.getStackTrace().length <= 1, \"Stack depth should be truncated to 1\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjcxMTA5Mg=="}, "originalCommit": {"oid": "7e8952652dc7209ebcb564ed9ac484c78676dd30"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1162, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}