{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MzM1NDI4", "number": 9902, "title": "Improve group caching of resolved methods", "bodyText": "We already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n\nGroup cache all callees of the method being compiled during ILGen\nSince callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a time-to-live, which is set at the moment of caching.\nWhen ttl expires, the entry is deleted from cache.", "createdAt": "2020-06-16T16:30:54Z", "url": "https://github.com/eclipse-openj9/openj9/pull/9902", "merged": true, "mergeCommit": {"oid": "96b89ea9895cf29b9435c26726ad3ea8b36c6e48"}, "closed": true, "closedAt": "2020-06-24T00:56:52Z", "author": {"login": "dmitry-ten"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcr34pugBqjM0NDk4NjYwOTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuIgX8AFqTQzNTk3OTIyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "146efb454c70feff99d42aae28cb0f5825902557", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/146efb454c70feff99d42aae28cb0f5825902557", "committedDate": "2020-06-16T16:29:18Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}, "afterCommit": {"oid": "4ae073ec74e7621b15d662187c45f2d413c13613", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4ae073ec74e7621b15d662187c45f2d413c13613", "committedDate": "2020-06-16T16:31:02Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ae073ec74e7621b15d662187c45f2d413c13613", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/4ae073ec74e7621b15d662187c45f2d413c13613", "committedDate": "2020-06-16T16:31:02Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}, "afterCommit": {"oid": "b49d74cbaa25cb4b3b0fc43a499ed22abd39270a", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b49d74cbaa25cb4b3b0fc43a499ed22abd39270a", "committedDate": "2020-06-16T16:34:23Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNzg3MDk5", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#pullrequestreview-431787099", "createdAt": "2020-06-16T18:32:42Z", "commit": {"oid": "b49d74cbaa25cb4b3b0fc43a499ed22abd39270a"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODozMjo0MlrOGkoN8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODo1NzoxNVrOGkpDTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MDg0OQ==", "bodyText": "To avoid bugs, let's change the test to if (methodCacheEntry.ttlForUnresolved <= 0)", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#discussion_r441060849", "createdAt": "2020-06-16T18:32:42Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/JITServerCompilationThread.cpp", "diffHunk": "@@ -1024,8 +1028,16 @@ TR::CompilationInfoPerThreadRemote::getCachedResolvedMethod(TR_ResolvedMethodKey\n       auto comp = getCompilation();\n       TR_OpaqueMethodBlock *method = methodCacheEntry.method;\n \n+      // if method == NULL, cached unresolved method\n       if (!method)\n+         {\n+         // decrement time-to-live of this unresolved entry\n+         methodCacheEntry.ttlForUnresolved--;\n+\n+         if (methodCacheEntry.ttlForUnresolved == 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b49d74cbaa25cb4b3b0fc43a499ed22abd39270a"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MjgzMw==", "bodyText": "Maybe expand the comment to something like: \"method==NULL means we have cached an unresolved method; purge the cache entry if the time-to-live for this entry has expired\"", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#discussion_r441062833", "createdAt": "2020-06-16T18:36:03Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/JITServerCompilationThread.cpp", "diffHunk": "@@ -1024,8 +1028,16 @@ TR::CompilationInfoPerThreadRemote::getCachedResolvedMethod(TR_ResolvedMethodKey\n       auto comp = getCompilation();\n       TR_OpaqueMethodBlock *method = methodCacheEntry.method;\n \n+      // if method == NULL, cached unresolved method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b49d74cbaa25cb4b3b0fc43a499ed22abd39270a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2NDI1MQ==", "bodyText": "The original code seems to allow unresolved entries into the cache (method==NULL). This new implementation seems to be deleting from the cache such entries that were are added with a default ttl=-1.\nIt's true that we add more entries in walker and J9EstimateCodeSize, but is there room for improvement? Should the default value of TTL be larger?", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#discussion_r441064251", "createdAt": "2020-06-16T18:38:29Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/JITServerCompilationThread.cpp", "diffHunk": "@@ -1024,8 +1028,16 @@ TR::CompilationInfoPerThreadRemote::getCachedResolvedMethod(TR_ResolvedMethodKey\n       auto comp = getCompilation();\n       TR_OpaqueMethodBlock *method = methodCacheEntry.method;\n \n+      // if method == NULL, cached unresolved method", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA2MjgzMw=="}, "originalCommit": {"oid": "b49d74cbaa25cb4b3b0fc43a499ed22abd39270a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA3NDUxMA==", "bodyText": "Above, at step 3. maybe we should add & to those 3 local vectors to make them references. Don't know if it's make a difference, but it doesn't hurt.", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#discussion_r441074510", "createdAt": "2020-06-16T18:57:15Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/env/j9methodServer.cpp", "diffHunk": "@@ -1871,8 +1876,7 @@ TR_ResolvedJ9JITServerMethod::cacheResolvedMethodsCallees()\n       TR_ResolvedMethodType type = methodTypes[i];\n       TR_ResolvedMethod *resolvedMethod;\n       TR_ResolvedMethodKey key = compInfoPT->getResolvedMethodKey(type, (TR_OpaqueClassBlock *) _ramClass, cpIndices[i]);\n-      if (std::get<0>(methodInfos[i]).remoteMirror &&\n-         !compInfoPT->getCachedResolvedMethod(\n+      if (!compInfoPT->getCachedResolvedMethod(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b49d74cbaa25cb4b3b0fc43a499ed22abd39270a"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b49d74cbaa25cb4b3b0fc43a499ed22abd39270a", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/b49d74cbaa25cb4b3b0fc43a499ed22abd39270a", "committedDate": "2020-06-16T16:34:23Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}, "afterCommit": {"oid": "e8ff98f9a1714622b58a18fb1b9bae27cc6a6fc3", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e8ff98f9a1714622b58a18fb1b9bae27cc6a6fc3", "committedDate": "2020-06-17T16:02:39Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNzA4NzM3", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#pullrequestreview-432708737", "createdAt": "2020-06-17T19:27:17Z", "commit": {"oid": "e8ff98f9a1714622b58a18fb1b9bae27cc6a6fc3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODAxODQw", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#pullrequestreview-432801840", "createdAt": "2020-06-17T21:50:04Z", "commit": {"oid": "e8ff98f9a1714622b58a18fb1b9bae27cc6a6fc3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo1MDowNFrOGlYoUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo1MDowNFrOGlYoUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1NDAzMg==", "bodyText": "Typo: putge --> purge", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#discussion_r441854032", "createdAt": "2020-06-17T21:50:04Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/JITServerCompilationThread.cpp", "diffHunk": "@@ -1024,8 +1028,17 @@ TR::CompilationInfoPerThreadRemote::getCachedResolvedMethod(TR_ResolvedMethodKey\n       auto comp = getCompilation();\n       TR_OpaqueMethodBlock *method = methodCacheEntry.method;\n \n+      // if method == NULL means we have cached an unresolved method;\n+      // putge the cached entry if time-to-live has expired.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8ff98f9a1714622b58a18fb1b9bae27cc6a6fc3"}, "originalPosition": 25}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e8ff98f9a1714622b58a18fb1b9bae27cc6a6fc3", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/e8ff98f9a1714622b58a18fb1b9bae27cc6a6fc3", "committedDate": "2020-06-17T16:02:39Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}, "afterCommit": {"oid": "7c2b4d40551cb5729d6463fb7b2443f81ec068db", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7c2b4d40551cb5729d6463fb7b2443f81ec068db", "committedDate": "2020-06-18T17:07:53Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MTI3MTYx", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#pullrequestreview-435127161", "createdAt": "2020-06-22T17:20:17Z", "commit": {"oid": "7c2b4d40551cb5729d6463fb7b2443f81ec068db"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzoyMDoxN1rOGnKDVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzoyMDoxN1rOGnKDVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxMjM0MQ==", "bodyText": "This needs to be protected by #if defined(J9VM_OPT_JITSERVER)", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#discussion_r443712341", "createdAt": "2020-06-22T17:20:17Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/ilgen/Walker.cpp", "diffHunk": "@@ -48,6 +48,7 @@\n #include \"ilgen/J9ByteCodeIlGenerator.hpp\"\n #include \"infra/Bit.hpp\"               //for trailingZeroes\n #include \"env/JSR292Methods.h\"\n+#include \"env/j9methodServer.hpp\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c2b4d40551cb5729d6463fb7b2443f81ec068db"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c2b4d40551cb5729d6463fb7b2443f81ec068db", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/7c2b4d40551cb5729d6463fb7b2443f81ec068db", "committedDate": "2020-06-18T17:07:53Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}, "afterCommit": {"oid": "f759082311e623f2429fd5979a6e788fe5dd44cc", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f759082311e623f2429fd5979a6e788fe5dd44cc", "committedDate": "2020-06-22T17:33:04Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f759082311e623f2429fd5979a6e788fe5dd44cc", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/f759082311e623f2429fd5979a6e788fe5dd44cc", "committedDate": "2020-06-22T17:33:04Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}, "afterCommit": {"oid": "a63bad837310865ff494996a1be301c5f8634e86", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a63bad837310865ff494996a1be301c5f8634e86", "committedDate": "2020-06-22T17:34:49Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a63bad837310865ff494996a1be301c5f8634e86", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/a63bad837310865ff494996a1be301c5f8634e86", "committedDate": "2020-06-22T17:34:49Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}, "afterCommit": {"oid": "be088bc76a3629692227a8e3e73f03ff6d1886b1", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/be088bc76a3629692227a8e3e73f03ff6d1886b1", "committedDate": "2020-06-22T17:39:35Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MjE3MTM3", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#pullrequestreview-435217137", "createdAt": "2020-06-22T19:36:54Z", "commit": {"oid": "be088bc76a3629692227a8e3e73f03ff6d1886b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTozNjo1NFrOGnOT1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxOTozNjo1NFrOGnOT1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc4MjEwMA==", "bodyText": "jitGetImproperInterfaceMethodFromCP takes vTableOffset as a pointer to UDATA, but the local above is declared to be uint32_t vTableOffset = 0;\nI think this is dangerous in that jitGetImproperInterfaceMethodFromCP may copy a 64-bit entity and silently corrupt the stack around  vTableOffset local.\nWe need to declare vTableOffset as UDATA and if we really have to, cast that into a uint32_t when storing into vTableOffsets vector (assuming the offset is never exceeding 32-bit)", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#discussion_r443782100", "createdAt": "2020-06-22T19:36:54Z", "author": {"login": "mpirvu"}, "path": "runtime/compiler/control/JITClientCompilationThread.cpp", "diffHunk": "@@ -1806,6 +1806,17 @@ handleServerMessage(JITServer::ClientStream *client, TR_J9VM *fe, JITServer::Mes\n                   if (ramMethod) createMethod = true;\n                   break;\n                   }\n+               case TR_ResolvedMethodType::ImproperInterface:\n+                  {\n+                  TR::VMAccessCriticalSection getResolvedHandleMethod(fe);\n+                  ramMethod = jitGetImproperInterfaceMethodFromCP(\n+                     fe->vmThread(),\n+                     owningMethod->cp(),\n+                     cpIndex,\n+                     reinterpret_cast<UDATA *>(&vTableOffset));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be088bc76a3629692227a8e3e73f03ff6d1886b1"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be088bc76a3629692227a8e3e73f03ff6d1886b1", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/be088bc76a3629692227a8e3e73f03ff6d1886b1", "committedDate": "2020-06-22T17:39:35Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}, "afterCommit": {"oid": "33fe6f1d23c997a71de35f80e819a519972cfe7a", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/33fe6f1d23c997a71de35f80e819a519972cfe7a", "committedDate": "2020-06-22T20:44:23Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e8dc95174f3a12b858f311e48276f7e7d74e34c", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1e8dc95174f3a12b858f311e48276f7e7d74e34c", "committedDate": "2020-06-23T15:55:22Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "33fe6f1d23c997a71de35f80e819a519972cfe7a", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/33fe6f1d23c997a71de35f80e819a519972cfe7a", "committedDate": "2020-06-22T20:44:23Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}, "afterCommit": {"oid": "1e8dc95174f3a12b858f311e48276f7e7d74e34c", "author": {"user": {"login": "dmitry-ten", "name": "Dmitry Ten"}}, "url": "https://github.com/eclipse-openj9/openj9/commit/1e8dc95174f3a12b858f311e48276f7e7d74e34c", "committedDate": "2020-06-23T15:55:22Z", "message": "Improve group caching of resolved methods\n\nWe already perform caching of method's callees during inlining\nin one message. This commit builds on that strategy in the following\nways:\n- Group cache all callees of the method being compiled during ILGen\n- Since callees are cached right before they are used, we could\ncache even unresolved methods, not having to worry about them becoming\nresolved in-between calls. Thus, every cached unresolved method entry\nnow has a `time-to-live`, which is set at the moment of caching.\nWhen `ttl` expires, the entry is deleted from cache.\n- Cache interface methods during group caching\n\nSigned-off-by: Dmitry Ten <Dmitry.Ten@ibm.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1OTc5MjIy", "url": "https://github.com/eclipse-openj9/openj9/pull/9902#pullrequestreview-435979222", "createdAt": "2020-06-23T17:01:12Z", "commit": {"oid": "1e8dc95174f3a12b858f311e48276f7e7d74e34c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 701, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}