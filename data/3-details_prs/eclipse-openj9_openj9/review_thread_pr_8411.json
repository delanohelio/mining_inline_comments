{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MDU1ODE3", "number": 8411, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTo0MDo0OFrODbRI2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTo0MDo0OFrODbRI2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5OTE4OTM5OnYy", "diffSide": "RIGHT", "path": "runtime/gc_vlhgc/VLHGCAccessBarrier.cpp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTo0MDo0OFrOFip0Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNTo0NToxOVrOFiqAmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg4MTAzNA==", "bodyText": "I think it should be &indexableObjectModel->getArrayoidPointer(arrayObject) instead of just arrayObject.\nWe go one (the only, empty) arroyid slot past the beginning of the arroyoid, to get to the end of the object.", "url": "https://github.com/eclipse-openj9/openj9/pull/8411#discussion_r371881034", "createdAt": "2020-01-28T15:40:48Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/VLHGCAccessBarrier.cpp", "diffHunk": "@@ -314,7 +314,10 @@ MM_VLHGCAccessBarrier::jniGetPrimitiveArrayCritical(J9VMThread* vmThread, jarray\n \t\t\t\tGC_SlotObject objectSlot(env->getOmrVM(), &indexableObjectModel->getArrayoidPointer(arrayObject)[0]);\n \t\t\t\tdata = objectSlot.readReferenceFromSlot();\n \t\t\t} else {\n-\t\t\t\t/* Possible to reach here if arraylet leaf has one leaf and no elements in it */\n+\t\t\t\t/* Possible to reach here if arraylet leaf has one leaf and no elements in it.\n+\t\t\t\t * Even though there are no elements in it the caller expects a non NULL value\n+\t\t\t\t * therefore we just return the address after the object header. */\n+\t\t\t\tdata = (void *)GC_SlotObject::addToSlotAddress((fomrobject_t*)arrayObject, 1, env->compressObjectReferences());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfd60d5e2bf1c3ccf7f4955fad0cb3f45d0194b1"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg4NDE4NQ==", "bodyText": "You can store arroyid pointer (or ObjectSlot based on it) into a local at the beginning of 'if double mapping' block, since it's being referenced a few times.", "url": "https://github.com/eclipse-openj9/openj9/pull/8411#discussion_r371884185", "createdAt": "2020-01-28T15:45:19Z", "author": {"login": "amicic"}, "path": "runtime/gc_vlhgc/VLHGCAccessBarrier.cpp", "diffHunk": "@@ -314,7 +314,10 @@ MM_VLHGCAccessBarrier::jniGetPrimitiveArrayCritical(J9VMThread* vmThread, jarray\n \t\t\t\tGC_SlotObject objectSlot(env->getOmrVM(), &indexableObjectModel->getArrayoidPointer(arrayObject)[0]);\n \t\t\t\tdata = objectSlot.readReferenceFromSlot();\n \t\t\t} else {\n-\t\t\t\t/* Possible to reach here if arraylet leaf has one leaf and no elements in it */\n+\t\t\t\t/* Possible to reach here if arraylet leaf has one leaf and no elements in it.\n+\t\t\t\t * Even though there are no elements in it the caller expects a non NULL value\n+\t\t\t\t * therefore we just return the address after the object header. */\n+\t\t\t\tdata = (void *)GC_SlotObject::addToSlotAddress((fomrobject_t*)arrayObject, 1, env->compressObjectReferences());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg4MTAzNA=="}, "originalCommit": {"oid": "dfd60d5e2bf1c3ccf7f4955fad0cb3f45d0194b1"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 794, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}