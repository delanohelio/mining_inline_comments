{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNTMwNzg0", "number": 11049, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDozNToxNFrOEzePOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDozNToxNFrOEzePOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNDA4MjQ4OnYy", "diffSide": "RIGHT", "path": "jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/commands/OpenCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDozNToxNFrOHqtpFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMDo0MjowNlrOHqt3cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU1MDAzNw==", "bodyText": "I'm thinking it could be useful to print the warning even if one of the names is null.", "url": "https://github.com/eclipse-openj9/openj9/pull/11049#discussion_r514550037", "createdAt": "2020-10-29T20:35:14Z", "author": {"login": "pshipton"}, "path": "jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/commands/OpenCommand.java", "diffHunk": "@@ -210,18 +212,29 @@ private void createContexts(Image loadedImage, String coreFilePath) {\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\n \t\tif (!hasContexts) {\n \t\t\tif (ctx.hasPropertyBeenSet(VERBOSE_MODE_PROPERTY)) {\n \t\t\t\tout.println(\"Warning: no contexts were found, is this a valid core file?\");\n \t\t\t}\n+\t\t} else if (loadedImage.isTruncated()) {\n+\t\t\tout.println(\"Warning: dump file is truncated. Extracted information may be incomplete.\");\n+\t\t\tout.println();\n \t\t} else {\n-\t\t\tif (loadedImage.isTruncated()) {\n-\t\t\t\tout.println(\"Warning: dump file is truncated. Extracted information may be incomplete.\");\n-\t\t\t\tout.println();\n+\t\t\t// check compatibility of this VM with the VM that created the core file\n+\t\t\tString thisVmName = System.getProperty(\"java.vm.name\");\n+\t\t\tString coreVmName = ctx.getProperties().getProperty(\"java.vm.name\");\n+\n+\t\t\tif (thisVmName != null && coreVmName != null && !thisVmName.equals(coreVmName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ee26f780e19d687063a709be4da080e47fc5444"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU1MzcxMg==", "bodyText": "Sure, I can do that.", "url": "https://github.com/eclipse-openj9/openj9/pull/11049#discussion_r514553712", "createdAt": "2020-10-29T20:42:06Z", "author": {"login": "keithc-ca"}, "path": "jcl/src/openj9.dtfjview/share/classes/com/ibm/jvm/dtfjview/commands/OpenCommand.java", "diffHunk": "@@ -210,18 +212,29 @@ private void createContexts(Image loadedImage, String coreFilePath) {\n \t\t\t\t}\n \t\t\t}\n \t\t}\n+\n \t\tif (!hasContexts) {\n \t\t\tif (ctx.hasPropertyBeenSet(VERBOSE_MODE_PROPERTY)) {\n \t\t\t\tout.println(\"Warning: no contexts were found, is this a valid core file?\");\n \t\t\t}\n+\t\t} else if (loadedImage.isTruncated()) {\n+\t\t\tout.println(\"Warning: dump file is truncated. Extracted information may be incomplete.\");\n+\t\t\tout.println();\n \t\t} else {\n-\t\t\tif (loadedImage.isTruncated()) {\n-\t\t\t\tout.println(\"Warning: dump file is truncated. Extracted information may be incomplete.\");\n-\t\t\t\tout.println();\n+\t\t\t// check compatibility of this VM with the VM that created the core file\n+\t\t\tString thisVmName = System.getProperty(\"java.vm.name\");\n+\t\t\tString coreVmName = ctx.getProperties().getProperty(\"java.vm.name\");\n+\n+\t\t\tif (thisVmName != null && coreVmName != null && !thisVmName.equals(coreVmName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU1MDAzNw=="}, "originalCommit": {"oid": "0ee26f780e19d687063a709be4da080e47fc5444"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1047, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}