{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3Njk0NDg2", "number": 8421, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNToxODozOVrODb8_Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo0MjozNlrODb9jew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjM3MzY3OnYy", "diffSide": "RIGHT", "path": "buildenv/jenkins/common/variables-functions.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNToxODozOVrOFjuyvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo1ODozOFrOFjwVRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAxMTEzNQ==", "bodyText": "Please combine the 2 case statements, e.g. case ['sanity', 'extended'].", "url": "https://github.com/eclipse-openj9/openj9/pull/8421#discussion_r373011135", "createdAt": "2020-01-30T15:18:39Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -637,14 +637,38 @@ def get_date() {\n }\n \n /*\n-* Set TESTS_TARGETS, indicating the level of testing\n-* and sets TEST_FLAG for all targets if defined in variable file\n+* Set TESTS_TARGETS, indicating the level of testing.\n */\n def set_test_targets() {\n-    TESTS_TARGETS = params.TESTS_TARGETS\n-    if (!TESTS_TARGETS) {\n-        // set default TESTS_TARGETS for pipeline job (fetch from variables file)\n-        TESTS_TARGETS = get_default_test_targets()\n+    TESTS_TARGETS = (params.TESTS_TARGETS) ? params.TESTS_TARGETS.trim() : \"none\"\n+    TARGET_NAMES = []\n+\n+    if (TESTS_TARGETS != 'none') {\n+        for (target in TESTS_TARGETS.replaceAll(\"\\\\s\",\"\").toLowerCase().tokenize(',')) {\n+            switch (target) {\n+                case \"sanity\":", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7726aa5c1eba0b39993ff86d9316f297ebe58788"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzNjM1Ng==", "bodyText": "done", "url": "https://github.com/eclipse-openj9/openj9/pull/8421#discussion_r373036356", "createdAt": "2020-01-30T15:58:38Z", "author": {"login": "AdamBrousseau"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -637,14 +637,38 @@ def get_date() {\n }\n \n /*\n-* Set TESTS_TARGETS, indicating the level of testing\n-* and sets TEST_FLAG for all targets if defined in variable file\n+* Set TESTS_TARGETS, indicating the level of testing.\n */\n def set_test_targets() {\n-    TESTS_TARGETS = params.TESTS_TARGETS\n-    if (!TESTS_TARGETS) {\n-        // set default TESTS_TARGETS for pipeline job (fetch from variables file)\n-        TESTS_TARGETS = get_default_test_targets()\n+    TESTS_TARGETS = (params.TESTS_TARGETS) ? params.TESTS_TARGETS.trim() : \"none\"\n+    TARGET_NAMES = []\n+\n+    if (TESTS_TARGETS != 'none') {\n+        for (target in TESTS_TARGETS.replaceAll(\"\\\\s\",\"\").toLowerCase().tokenize(',')) {\n+            switch (target) {\n+                case \"sanity\":", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAxMTEzNQ=="}, "originalCommit": {"oid": "7726aa5c1eba0b39993ff86d9316f297ebe58788"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjQxMDM3OnYy", "diffSide": "RIGHT", "path": "buildenv/jenkins/common/variables-functions.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNToyNzo1NVrOFjvJ1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo1ODo0MlrOFjwVaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAxNzA0Nw==", "bodyText": "\"none\" and 'none' be consistent. As there is no no interpolation single quotes will do.", "url": "https://github.com/eclipse-openj9/openj9/pull/8421#discussion_r373017047", "createdAt": "2020-01-30T15:27:55Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -637,14 +637,38 @@ def get_date() {\n }\n \n /*\n-* Set TESTS_TARGETS, indicating the level of testing\n-* and sets TEST_FLAG for all targets if defined in variable file\n+* Set TESTS_TARGETS, indicating the level of testing.\n */\n def set_test_targets() {\n-    TESTS_TARGETS = params.TESTS_TARGETS\n-    if (!TESTS_TARGETS) {\n-        // set default TESTS_TARGETS for pipeline job (fetch from variables file)\n-        TESTS_TARGETS = get_default_test_targets()\n+    TESTS_TARGETS = (params.TESTS_TARGETS) ? params.TESTS_TARGETS.trim() : \"none\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7726aa5c1eba0b39993ff86d9316f297ebe58788"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzNjM5NQ==", "bodyText": "done", "url": "https://github.com/eclipse-openj9/openj9/pull/8421#discussion_r373036395", "createdAt": "2020-01-30T15:58:42Z", "author": {"login": "AdamBrousseau"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -637,14 +637,38 @@ def get_date() {\n }\n \n /*\n-* Set TESTS_TARGETS, indicating the level of testing\n-* and sets TEST_FLAG for all targets if defined in variable file\n+* Set TESTS_TARGETS, indicating the level of testing.\n */\n def set_test_targets() {\n-    TESTS_TARGETS = params.TESTS_TARGETS\n-    if (!TESTS_TARGETS) {\n-        // set default TESTS_TARGETS for pipeline job (fetch from variables file)\n-        TESTS_TARGETS = get_default_test_targets()\n+    TESTS_TARGETS = (params.TESTS_TARGETS) ? params.TESTS_TARGETS.trim() : \"none\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAxNzA0Nw=="}, "originalCommit": {"oid": "7726aa5c1eba0b39993ff86d9316f297ebe58788"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjQ1MzU0OnYy", "diffSide": "RIGHT", "path": "buildenv/jenkins/common/variables-functions.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTozOToyMlrOFjvlOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo1OToyMVrOFjwXMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAyNDA1OA==", "bodyText": "Extra test labels can be added only in the variables file, no build parameters available. Should users be able to set them in the UI when a build is launched?", "url": "https://github.com/eclipse-openj9/openj9/pull/8421#discussion_r373024058", "createdAt": "2020-01-30T15:39:22Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -637,14 +637,38 @@ def get_date() {\n }\n \n /*\n-* Set TESTS_TARGETS, indicating the level of testing\n-* and sets TEST_FLAG for all targets if defined in variable file\n+* Set TESTS_TARGETS, indicating the level of testing.\n */\n def set_test_targets() {\n-    TESTS_TARGETS = params.TESTS_TARGETS\n-    if (!TESTS_TARGETS) {\n-        // set default TESTS_TARGETS for pipeline job (fetch from variables file)\n-        TESTS_TARGETS = get_default_test_targets()\n+    TESTS_TARGETS = (params.TESTS_TARGETS) ? params.TESTS_TARGETS.trim() : \"none\"\n+    TARGET_NAMES = []\n+\n+    if (TESTS_TARGETS != 'none') {\n+        for (target in TESTS_TARGETS.replaceAll(\"\\\\s\",\"\").toLowerCase().tokenize(',')) {\n+            switch (target) {\n+                case \"sanity\":\n+                case \"extended\":\n+                    TARGET_NAMES.add(\"${target}.functional\")\n+                    break\n+                default:\n+                    TARGET_NAMES.add(target)\n+            }\n+        }\n+    }\n+}\n+\n+/*\n+* Set TEST_FLAG for all targets if defined in variable file.\n+* Set EXCLUDED_TESTS if defined in variable file.\n+* Set EXTRA_TEST_LABELS map if defined in variable file.\n+*/\n+def set_test_misc() {\n+    EXTRA_TEST_LABELS = [:]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7726aa5c1eba0b39993ff86d9316f297ebe58788"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzNjg1MQ==", "bodyText": "I don't think it's a necessary use case. Can be added later if needed. Use in a grinder would be more likely.", "url": "https://github.com/eclipse-openj9/openj9/pull/8421#discussion_r373036851", "createdAt": "2020-01-30T15:59:21Z", "author": {"login": "AdamBrousseau"}, "path": "buildenv/jenkins/common/variables-functions.groovy", "diffHunk": "@@ -637,14 +637,38 @@ def get_date() {\n }\n \n /*\n-* Set TESTS_TARGETS, indicating the level of testing\n-* and sets TEST_FLAG for all targets if defined in variable file\n+* Set TESTS_TARGETS, indicating the level of testing.\n */\n def set_test_targets() {\n-    TESTS_TARGETS = params.TESTS_TARGETS\n-    if (!TESTS_TARGETS) {\n-        // set default TESTS_TARGETS for pipeline job (fetch from variables file)\n-        TESTS_TARGETS = get_default_test_targets()\n+    TESTS_TARGETS = (params.TESTS_TARGETS) ? params.TESTS_TARGETS.trim() : \"none\"\n+    TARGET_NAMES = []\n+\n+    if (TESTS_TARGETS != 'none') {\n+        for (target in TESTS_TARGETS.replaceAll(\"\\\\s\",\"\").toLowerCase().tokenize(',')) {\n+            switch (target) {\n+                case \"sanity\":\n+                case \"extended\":\n+                    TARGET_NAMES.add(\"${target}.functional\")\n+                    break\n+                default:\n+                    TARGET_NAMES.add(target)\n+            }\n+        }\n+    }\n+}\n+\n+/*\n+* Set TEST_FLAG for all targets if defined in variable file.\n+* Set EXCLUDED_TESTS if defined in variable file.\n+* Set EXTRA_TEST_LABELS map if defined in variable file.\n+*/\n+def set_test_misc() {\n+    EXTRA_TEST_LABELS = [:]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAyNDA1OA=="}, "originalCommit": {"oid": "7726aa5c1eba0b39993ff86d9316f297ebe58788"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjQ2NjUxOnYy", "diffSide": "RIGHT", "path": "buildenv/jenkins/jobs/pipelines/Pipeline-Build-Test-All.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo0MjozNlrOFjvtUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo1OToyNVrOFjwXag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAyNjEzMQ==", "bodyText": "TESTS_TARGETS are set by set_test_targets() function in variables-functions.groovy. This  is not necessary.", "url": "https://github.com/eclipse-openj9/openj9/pull/8421#discussion_r373026131", "createdAt": "2020-01-30T15:42:36Z", "author": {"login": "vsebe"}, "path": "buildenv/jenkins/jobs/pipelines/Pipeline-Build-Test-All.groovy", "diffHunk": "@@ -136,7 +136,7 @@ SHORT_NAMES = ['all' : ['ppc64le_linux','ppc64le_linux_xl','s390x_linux','s390x_\n echo \"Initialize all PARAMETERS...\"\n SETUP_LABEL = (params.SETUP_LABEL) ? params.SETUP_LABEL : \"worker\"\n echo \"Setup SETUP_LABEL:'${SETUP_LABEL}'\"\n-TESTS_TARGETS = (params.TESTS_TARGETS) ? params.TESTS_TARGETS : \"\"\n+TESTS_TARGETS = (params.TESTS_TARGETS) ? params.TESTS_TARGETS : \"none\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7726aa5c1eba0b39993ff86d9316f297ebe58788"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzNjkwNg==", "bodyText": "Done", "url": "https://github.com/eclipse-openj9/openj9/pull/8421#discussion_r373036906", "createdAt": "2020-01-30T15:59:25Z", "author": {"login": "AdamBrousseau"}, "path": "buildenv/jenkins/jobs/pipelines/Pipeline-Build-Test-All.groovy", "diffHunk": "@@ -136,7 +136,7 @@ SHORT_NAMES = ['all' : ['ppc64le_linux','ppc64le_linux_xl','s390x_linux','s390x_\n echo \"Initialize all PARAMETERS...\"\n SETUP_LABEL = (params.SETUP_LABEL) ? params.SETUP_LABEL : \"worker\"\n echo \"Setup SETUP_LABEL:'${SETUP_LABEL}'\"\n-TESTS_TARGETS = (params.TESTS_TARGETS) ? params.TESTS_TARGETS : \"\"\n+TESTS_TARGETS = (params.TESTS_TARGETS) ? params.TESTS_TARGETS : \"none\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAyNjEzMQ=="}, "originalCommit": {"oid": "7726aa5c1eba0b39993ff86d9316f297ebe58788"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 664, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}