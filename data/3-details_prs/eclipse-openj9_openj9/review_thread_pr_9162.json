{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNDU1NDA5", "number": 9162, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMDozODozN1rODvu22g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMDozODozN1rODvu22g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzc3MzcwOnYy", "diffSide": "RIGHT", "path": "jcl/src/java.base/share/classes/java/lang/Class.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMDozODozN1rOGCVMFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMjoxNjowMFrOGCcoVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA5NzQ5NA==", "bodyText": "Why add the new API in VM?  Wouldn't doing Class.class.getModule() here work?", "url": "https://github.com/eclipse-openj9/openj9/pull/9162#discussion_r405097494", "createdAt": "2020-04-07T20:38:37Z", "author": {"login": "DanHeidinga"}, "path": "jcl/src/java.base/share/classes/java/lang/Class.java", "diffHunk": "@@ -2019,7 +2019,9 @@ private boolean useModularSearch(String absoluteResName, Module thisModule, Clas\n \tboolean visible = false;\n \n \tif (thisModule.isNamed()) {\n-\t\tfinal Module callerModule = callerClass.getModule();\n+\t\t// when the caller class is null, assuming it is loaded by module java.base\n+\t\t// See https://github.com/eclipse/openj9/issues/8993 for more info\n+\t\tfinal Module callerModule = callerClass == null ? VM.getJavabaseModule() : callerClass.getModule();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0ebfe650e436c9fac3a4a3c714ecfd74b560654"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNTUzMg==", "bodyText": "Class.class.getModule() works as well. VM.getJavabaseModule() intended to cache the java.base module and avoid repetition of Class.class.getModule().\nDepending on the number of calls j.l.Class.useModularSearch(), the saving might vary.\nIf it is not preferred to add a new API in VM,  Class.class.getModule() can be used instead.", "url": "https://github.com/eclipse-openj9/openj9/pull/9162#discussion_r405125532", "createdAt": "2020-04-07T21:31:17Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/java/lang/Class.java", "diffHunk": "@@ -2019,7 +2019,9 @@ private boolean useModularSearch(String absoluteResName, Module thisModule, Clas\n \tboolean visible = false;\n \n \tif (thisModule.isNamed()) {\n-\t\tfinal Module callerModule = callerClass.getModule();\n+\t\t// when the caller class is null, assuming it is loaded by module java.base\n+\t\t// See https://github.com/eclipse/openj9/issues/8993 for more info\n+\t\tfinal Module callerModule = callerClass == null ? VM.getJavabaseModule() : callerClass.getModule();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA5NzQ5NA=="}, "originalCommit": {"oid": "d0ebfe650e436c9fac3a4a3c714ecfd74b560654"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIxMzg5MA==", "bodyText": "getModule() is a simple getter, so it's faster than the cache code anyway. Only a final static would be faster, and that only by a few bytecodes.", "url": "https://github.com/eclipse-openj9/openj9/pull/9162#discussion_r405213890", "createdAt": "2020-04-08T01:56:17Z", "author": {"login": "gacholio"}, "path": "jcl/src/java.base/share/classes/java/lang/Class.java", "diffHunk": "@@ -2019,7 +2019,9 @@ private boolean useModularSearch(String absoluteResName, Module thisModule, Clas\n \tboolean visible = false;\n \n \tif (thisModule.isNamed()) {\n-\t\tfinal Module callerModule = callerClass.getModule();\n+\t\t// when the caller class is null, assuming it is loaded by module java.base\n+\t\t// See https://github.com/eclipse/openj9/issues/8993 for more info\n+\t\tfinal Module callerModule = callerClass == null ? VM.getJavabaseModule() : callerClass.getModule();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA5NzQ5NA=="}, "originalCommit": {"oid": "d0ebfe650e436c9fac3a4a3c714ecfd74b560654"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIxOTQxMg==", "bodyText": "Agreed, PR updated.\n@DanHeidinga @gacholio please have another look.", "url": "https://github.com/eclipse-openj9/openj9/pull/9162#discussion_r405219412", "createdAt": "2020-04-08T02:16:00Z", "author": {"login": "JasonFengJ9"}, "path": "jcl/src/java.base/share/classes/java/lang/Class.java", "diffHunk": "@@ -2019,7 +2019,9 @@ private boolean useModularSearch(String absoluteResName, Module thisModule, Clas\n \tboolean visible = false;\n \n \tif (thisModule.isNamed()) {\n-\t\tfinal Module callerModule = callerClass.getModule();\n+\t\t// when the caller class is null, assuming it is loaded by module java.base\n+\t\t// See https://github.com/eclipse/openj9/issues/8993 for more info\n+\t\tfinal Module callerModule = callerClass == null ? VM.getJavabaseModule() : callerClass.getModule();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA5NzQ5NA=="}, "originalCommit": {"oid": "d0ebfe650e436c9fac3a4a3c714ecfd74b560654"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 364, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}