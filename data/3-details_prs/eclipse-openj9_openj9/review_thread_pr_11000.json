{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMjk1NDUy", "number": 11000, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMDo0Nzo0MlrOEyFM0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMDo1MjozNFrOEyFTyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTQ5NDU4OnYy", "diffSide": "RIGHT", "path": "runtime/oti/jnichk_api.h", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMDo0Nzo0MlrOHohv5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMzo0MzoxOFrOHomXQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI1ODAyMg==", "bodyText": "At some point we should switch to hex before somebody tries to use a bogus value like 8096.", "url": "https://github.com/eclipse-openj9/openj9/pull/11000#discussion_r512258022", "createdAt": "2020-10-26T20:47:42Z", "author": {"login": "pshipton"}, "path": "runtime/oti/jnichk_api.h", "diffHunk": "@@ -51,6 +51,7 @@ extern \"C\" {\n #define JNICHK_NOVALIST 256\n #define JNICHK_INCLUDEBOOT 512\n #define JNICHK_ALWAYSCOPY 1024\n+#define JNICHK_CRASHONERROR 2048", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ef274d04e17b3cfb0ab7c1cd79f6aa39c1585f6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMzMzYzMg==", "bodyText": "Done.", "url": "https://github.com/eclipse-openj9/openj9/pull/11000#discussion_r512333632", "createdAt": "2020-10-26T23:43:18Z", "author": {"login": "gacholio"}, "path": "runtime/oti/jnichk_api.h", "diffHunk": "@@ -51,6 +51,7 @@ extern \"C\" {\n #define JNICHK_NOVALIST 256\n #define JNICHK_INCLUDEBOOT 512\n #define JNICHK_ALWAYSCOPY 1024\n+#define JNICHK_CRASHONERROR 2048", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI1ODAyMg=="}, "originalCommit": {"oid": "7ef274d04e17b3cfb0ab7c1cd79f6aa39c1585f6"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTUxMjQzOnYy", "diffSide": "RIGHT", "path": "runtime/jnichk/jnicheck.c", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMDo1MjozNFrOHoh6iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMzo0Mzo1MFrOHomX1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI2MDc0NA==", "bodyText": "Not sure this is guaranteed to crash on all platforms, in particular for 32-bit. Does calling abort() generate dumps, or is that only SIGABRT?\nHow about using a hook like the following, except use J9RAS_DUMP_ON_GP_FAULT or J9RAS_DUMP_ON_ABORT_SIGNAL when triggering the dump.\nhttps://github.com/eclipse/openj9/blob/master/runtime/rasdump/trigger.c#L1152", "url": "https://github.com/eclipse-openj9/openj9/pull/11000#discussion_r512260744", "createdAt": "2020-10-26T20:52:34Z", "author": {"login": "pshipton"}, "path": "runtime/jnichk/jnicheck.c", "diffHunk": "@@ -2198,6 +2204,10 @@ jniCheckFatalErrorNLS(JNIEnv* env, U_32 nlsModule, U_32 nlsIndex, ...)\n \t\t} else {\n \t\t\tj9nls_printf(PORTLIB, J9NLS_ERROR, J9NLS_JNICHK_FATAL_ERROR);\n \t\t\tj9nls_printf(PORTLIB, J9NLS_INFO, J9NLS_JNICHK_FATAL_ERROR_ADVICE);\n+\t\t\tif (J9_ARE_ANY_BITS_SET(options, JNICHK_CRASHONERROR)) {\n+\t\t\t\tj9nls_printf(PORTLIB, J9NLS_ERROR, J9NLS_JNICHK_FATAL_ERROR_CRASH);\n+\t\t\t\t*(UDATA*)UDATA_MAX = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ef274d04e17b3cfb0ab7c1cd79f6aa39c1585f6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI3MzI2NA==", "bodyText": "I'll take a look - now that you mention it, this won't work in the presence of -Xrs which is also the reason I did not use the GP handler solution for the internal class ref check.", "url": "https://github.com/eclipse-openj9/openj9/pull/11000#discussion_r512273264", "createdAt": "2020-10-26T21:15:48Z", "author": {"login": "gacholio"}, "path": "runtime/jnichk/jnicheck.c", "diffHunk": "@@ -2198,6 +2204,10 @@ jniCheckFatalErrorNLS(JNIEnv* env, U_32 nlsModule, U_32 nlsIndex, ...)\n \t\t} else {\n \t\t\tj9nls_printf(PORTLIB, J9NLS_ERROR, J9NLS_JNICHK_FATAL_ERROR);\n \t\t\tj9nls_printf(PORTLIB, J9NLS_INFO, J9NLS_JNICHK_FATAL_ERROR_ADVICE);\n+\t\t\tif (J9_ARE_ANY_BITS_SET(options, JNICHK_CRASHONERROR)) {\n+\t\t\t\tj9nls_printf(PORTLIB, J9NLS_ERROR, J9NLS_JNICHK_FATAL_ERROR_CRASH);\n+\t\t\t\t*(UDATA*)UDATA_MAX = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI2MDc0NA=="}, "originalCommit": {"oid": "7ef274d04e17b3cfb0ab7c1cd79f6aa39c1585f6"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjMzMzc4MQ==", "bodyText": "Now manually invoking the abort handler (rather than trusting the C abort() call).", "url": "https://github.com/eclipse-openj9/openj9/pull/11000#discussion_r512333781", "createdAt": "2020-10-26T23:43:50Z", "author": {"login": "gacholio"}, "path": "runtime/jnichk/jnicheck.c", "diffHunk": "@@ -2198,6 +2204,10 @@ jniCheckFatalErrorNLS(JNIEnv* env, U_32 nlsModule, U_32 nlsIndex, ...)\n \t\t} else {\n \t\t\tj9nls_printf(PORTLIB, J9NLS_ERROR, J9NLS_JNICHK_FATAL_ERROR);\n \t\t\tj9nls_printf(PORTLIB, J9NLS_INFO, J9NLS_JNICHK_FATAL_ERROR_ADVICE);\n+\t\t\tif (J9_ARE_ANY_BITS_SET(options, JNICHK_CRASHONERROR)) {\n+\t\t\t\tj9nls_printf(PORTLIB, J9NLS_ERROR, J9NLS_JNICHK_FATAL_ERROR_CRASH);\n+\t\t\t\t*(UDATA*)UDATA_MAX = 0;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI2MDc0NA=="}, "originalCommit": {"oid": "7ef274d04e17b3cfb0ab7c1cd79f6aa39c1585f6"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1016, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}