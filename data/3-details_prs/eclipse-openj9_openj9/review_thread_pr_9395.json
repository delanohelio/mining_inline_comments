{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNDE2MzE5", "number": 9395, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzoyODoxN1rOD3oFGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzoyODoxN1rOD3oFGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NjU0OTM4OnYy", "diffSide": "RIGHT", "path": "runtime/gc_glue_java/ScavengerDelegate.cpp", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzoyODoxN1rOGN-yIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxMzoyODoxN1rOGN-yIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzMxMzMxNA==", "bodyText": "please add extra pair of brackets (NULL != link)", "url": "https://github.com/eclipse-openj9/openj9/pull/9395#discussion_r417313314", "createdAt": "2020-04-29T13:28:17Z", "author": {"login": "dmitripivkine"}, "path": "runtime/gc_glue_java/ScavengerDelegate.cpp", "diffHunk": "@@ -604,12 +604,12 @@ MM_ScavengerDelegate::private_addOwnableSynchronizerObjectInList(MM_EnvironmentS\n \tomrobjectptr_t link = MM_GCExtensions::getExtensions(_extensions)->accessBarrier->isObjectInOwnableSynchronizerList(object);\n \t/* if isObjectInOwnableSynchronizerList() return NULL, it means the object isn't in OwnableSynchronizerList,\n \t * it could be the constructing object which would be added in the list after the construction finish later. ignore the object to avoid duplicated reference in the list.\n-\t * For concurrent scavenger, an object that doesn't finish constructing before the start of the STW phase will be added to the list after, during the concurrent phase.\n-\t * In this case, the object may already be added to the list. */\n-\tif (NULL != link && (!_extensions->isConcurrentScavengerEnabled() || (_extensions->isConcurrentScavengerEnabled() && !_extensions->scavenger->isObjectInNewSpace(link)))) {\n+\t * For concurrent scavenger, an object that doesn't finish constructing before the start of the STW phase will be added to the list after. As a result, the object may already\n+\t * be added to the list (non NULL link) when we scan it during the concurrent phase. We must not add it again here, so check link before proceeding */\n+\tif (NULL != link && (!_extensions->isConcurrentScavengerEnabled() || (_extensions->isConcurrentScavengerEnabled() && _extensions->scavenger->isObjectInEvacuateMemory(link)))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a75046219d9c3dd61a9dd5f43ce616475fc44314"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 282, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}