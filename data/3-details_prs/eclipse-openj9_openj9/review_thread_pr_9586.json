{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NzMxNjU4", "number": 9586, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOToyMzowN1rOD8_V5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOToyMzowN1rOD8_V5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Mjc4OTQ5OnYy", "diffSide": "RIGHT", "path": "runtime/compiler/optimizer/IdiomTransformations.cpp", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxOToyMzowN1rOGWRK4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMzoyOTo0MlrOGWWUUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAwMzE2OQ==", "bodyText": "Can we make these private member functions and just use trace() to avoid the complexity of additional parameters? Similarly for other functions modified.", "url": "https://github.com/eclipse-openj9/openj9/pull/9586#discussion_r426003169", "createdAt": "2020-05-15T19:23:07Z", "author": {"login": "fjeremic"}, "path": "runtime/compiler/optimizer/IdiomTransformations.cpp", "diffHunk": "@@ -846,44 +846,50 @@ usedInLoopTest(TR::Compilation *comp, TR::Node *loopTestNode, TR::SymbolReferenc\n    }\n \n static bool\n-indexContainsArray(TR::Compilation *comp, TR::Node *index, vcount_t visitCount)\n+indexContainsArray(TR::Compilation *comp, TR::Node *index, vcount_t visitCount, bool shouldTrace)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f8fd0df101627acdf13a8df3b10f240727b75f1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4NzUwNw==", "bodyText": "Fixed additional parameter in 4a94f30\nAs we talked today, they weren't made private member functions because they are called from other functions.", "url": "https://github.com/eclipse-openj9/openj9/pull/9586#discussion_r426087507", "createdAt": "2020-05-15T23:29:42Z", "author": {"login": "rmnattas"}, "path": "runtime/compiler/optimizer/IdiomTransformations.cpp", "diffHunk": "@@ -846,44 +846,50 @@ usedInLoopTest(TR::Compilation *comp, TR::Node *loopTestNode, TR::SymbolReferenc\n    }\n \n static bool\n-indexContainsArray(TR::Compilation *comp, TR::Node *index, vcount_t visitCount)\n+indexContainsArray(TR::Compilation *comp, TR::Node *index, vcount_t visitCount, bool shouldTrace)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAwMzE2OQ=="}, "originalCommit": {"oid": "6f8fd0df101627acdf13a8df3b10f240727b75f1"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 173, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}