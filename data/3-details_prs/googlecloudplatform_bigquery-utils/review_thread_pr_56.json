{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MjE4MjM3", "number": 56, "reviewThreads": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODo1MTo1NlrOD582zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0OTo1M1rOEZnBmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDkyNDk0OnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_etl_audit_log_v2.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODo1MTo1NlrOGRg21g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODo1MTo1NlrOGRg21g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTAxNzMwMg==", "bodyText": "Remove obfuscation", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r421017302", "createdAt": "2020-05-06T18:51:56Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_etl_audit_log_v2.sql", "diffHunk": "@@ -0,0 +1,1142 @@\n+*\n+ * Script: BQ Audit Version 2\n+ * Author: NamrataShah5, danieldeleo\n+ * Description:\n+ * This SQL script parses ETL job events from\n+ * the newer BigQueryAuditMetadata Stackdriver logs.\n+ * Reference for BigQueryAuditMetadata: https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata\n+ */\n+\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.requestMetadata.callerIp') AS callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    COALESCE(\n+      CONCAT(\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+        \":\",\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+      ),\n+      CONCAT(\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+        \":\",\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+      )\n+    ) AS jobId,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName')) AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.jobState'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.jobState')\n+    ) AS jobStatusJobState,\n+    SPLIT(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult'),JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.code')),\"/\")[SAFE_OFFSET(1)],\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.code'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.code')\n+    ) AS jobStatusErrorResultCode,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.message'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.message')\n+    ) AS jobStatusErrorResultMessage,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.details'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.details')\n+    ) AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errors'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors')\n+      ),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errors'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors')\n+      ),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobInsertion.job.jobStats.createTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime'))\n+    ) AS jobStatsCreateTime,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobInsertion.job.jobStats.startTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime'))\n+    ) AS jobStatsStartTime,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime'))\n+    ) AS jobStatsEndTime,\n+    COALESCE(\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.totalSlotMs') AS INT64),\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.totalSlotMs') AS INT64)\n+    ) AS jobStatsTotalSlotMs,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.reservationUsage.name'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.reservationUsage.name')\n+    ) AS jobStatsReservationUsageName,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.reservationUsage.slotMs'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.reservationUsage.slotMs')\n+    ) AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.totalProcessedBytes'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.totalProcessedBytes')\n+    ) AS queryJobStatsTotalProcessedBytes,\n+    COALESCE(\n+      CAST(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.totalBilledBytes') AS INT64),\n+       CAST(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64)\n+    ) AS queryJobStatsTotalBilledBytes,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.billingTier'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.billingTier')\n+    ) AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedTables'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedTables')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedViews'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedViews')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedRoutines'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedRoutines')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.outputRowCount'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.outputRowCount')\n+    ) AS queryJobStatsOutputRowCount,\n+    CAST(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.cacheHit'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.cacheHit')\n+    ) AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    COALESCE(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobInsertion.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobInsertion.job.jobStats.startTime')),\n+        MILLISECOND),\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobChange.job.jobStats.startTime')),\n+        MILLISECOND)\n+      ) AS jobStatsRuntimeMs,\n+    COALESCE(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.startTime')),\n+        SECOND),\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND)\n+      ) AS jobStatsRuntimeSecs,\n+    COALESCE(\n+      CAST(CEILING(\n+        TIMESTAMP_DIFF(\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobInsertion.job.jobStats.endTime')),\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobInsertion.job.jobStats.startTime')),\n+          SECOND) / 60 ) AS INT64),\n+      CAST(CEILING(\n+        TIMESTAMP_DIFF(\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobChange.job.jobStats.endTime')),\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobChange.job.jobStats.startTime')),\n+          SECOND) / 60) AS INT64)\n+      ) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.query'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.query')) AS queryConfigQuery,\n+    CAST(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.queryTruncated'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.queryTruncated')) AS BOOL) AS queryConfigQueryTruncated,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTable'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable')) AS queryConfigDestinationTable,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.createDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.createDisposition')) AS queryConfigCreateDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.writeDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.writeDisposition')) AS queryConfigWriteDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.defaultDataset'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.defaultDataset')) AS queryConfigDefaultDataset,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.priority'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority')) AS queryConfigPriority,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName')\n+      ) AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.statementType'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType')) AS queryConfigStatementType,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(1)] AS queryConfigDestinationTableProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(3)] AS queryConfigDestinationTableDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(5)] AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.sourceUris'),\n+      '[\"'), '\"]'), '\",\"') AS loadConfigSourceUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.sourceUrisTruncated') AS BOOL) AS loadConfigSourceUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson') AS loadConfigSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL) AS loadConfigSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable') AS loadConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition') AS loadConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition') AS loadConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName'\n+      ) AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+      '[\"'), '\"]'), '\",\"') AS extractConfigDestinationUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated')\n+       AS BOOL) AS extractConfigDestinationUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable') AS extractConfigSourceTable,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(1)] AS extractConfigSourceTableProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(3)] AS extractConfigSourceTableDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(5)] AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    SPLIT(TRIM(TRIM(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+      '[\"'),'\"]') ,'\",\"') AS tableCopySourceTables,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated')\n+      AS BOOL) AS tableCopyConfigSourceTablesTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable') AS tableCopyConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.createDisposition') AS tableCopyConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.writeDisposition') AS tableCopyConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName'\n+    ) AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)] AS tableCopyConfigProjectId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)] AS tableCopyConfigDatasetId,\n+    SPLIT(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)] AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableCreation: Table creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecreation\n+ */\n+tableCreationEvent AS (\n+  SELECT\n+    CONCAT(\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableCreation.jobName'),\"/\")[SAFE_OFFSET(1)],\n+       \":\",\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableCreation.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+    '$.tableCreation.jobName') AS tableCreationJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableName') AS tableCreationTableName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.friendlyName') AS tableCreationTableFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.description') AS tableCreationTableDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.tableInfo.labels') AS tableCreationTableLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.schemaJson') AS tableCreationTableSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableCreation.table.schemaJsonTruncated') AS BOOL) AS tableCreationTableSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.view.query') AS tableCreationViewDefinitionQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.view.queryTruncated') AS BOOL) AS tableCreationViewDefinitionTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.expireTime') AS tableCreationTableExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.createTime') AS tableCreationTableCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCrhange.table.updateTime') AS tableCreationTableUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.truncateTime') AS tableCreationTableTruncateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.table.encryption.kmsKeyName') AS tableCreationTableKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCreation.reason')  AS tableCreationReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access` ),\n+/*\n+ * TableChange: Table metadata change event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#TableChange\n+ */\n+tableChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableChange.jobName'),\"/\")[SAFE_OFFSET(1)],\n+       \":\",\n+     SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableChange.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+    '$.tableChange.jobName') AS tableChangeJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableName') AS tableChangeTableName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.friendlyName') AS tableChangeTableFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.description') AS tableChangeTableDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.tableInfo.labels') AS tableChangeTableLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.schemaJson') AS tableChangeTableSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+     '$.tableChange.table.schemaJsonTruncated') AS BOOL) AS tableChangeTableSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.view.query') AS tableChangeViewDefinitionQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.view.queryTruncated') AS BOOL) AS tableChangeViewDefinitionTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.expireTime') AS tableChangeTableExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.createTime') AS tableChangeTableCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableCrhange.table.updateTime') AS tableChangeTableUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.truncateTime') AS tableChangeTableTruncateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.table.encryption.kmsKeyName') AS tableChangeTableKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.reason')  AS tableChangeReason,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableChange.truncated') AS BOOL) AS tableChangeTruncated\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access` ),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.table.reason') AS tableDeletionReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`),\n+/*\n+ * TableDataRead: Data from tableDataRead audit logs\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n+ */\n+tableDataReadEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields')),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadFields,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fieldsTruncated') AS BOOL) AS tableDataReadFieldsTruncated,\n+     SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categories'),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadCategories,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categoriesTruncated') AS BOOL) AS tableDataReadCategoriesTruncated,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.reason') AS tableDataReadReason,\n+     JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName') AS tableDataReadJobName,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.sessionName') AS tableDataReadSessionName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDataChange: Table data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledatachange\n+ */\n+tableDataChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDataChange.jobName'),\n+      \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataChange.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.deletedRowsCount') AS tableDataChangeDeletedRowsCount,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.datasetCreation.dataset.insertedRowsCount') AS tableDataChangeInsertedRowsCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.truncated') AS BOOL) AS tableDataChangeTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.reason') AS tableDataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.jobName') AS tableDataChangeJobName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelDeletion: Model deletion event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modeldeletion\n+ */\n+modelDeletionEvent AS (\n+  SELECT\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.reason') AS modelDeletionReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.jobName') AS modelDeletionJobName,\n+    CONCAT(\n+     SPLIT(\n+       JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+           '$.modelDeletion.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+     \":\",\n+     SPLIT(\n+       JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.modelDeletion.jobName'),\n+           \"/\")[SAFE_OFFSET(3)]\n+   ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelCreation: Model creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modelcreation\n+ */\n+modelCreationEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.reason')  AS modelCreationReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.jobName') AS modelCreationJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelCreation.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelCreation.jobName'),\n+         \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelName')  AS modelCreationModelName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.friendlyName')  AS modelCreationEntityInfoFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.description')  AS modelCreationEntityInfoDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.modelInfo.entityInfo.labels')  AS modelCreationEntityInfoLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.expireTime')  AS modelCreationModelExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.createTime')  AS modelCreationModelCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.updateTime')  AS modelCreationModelUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelCreation.model.encryption.kmsKeyName')  AS modelCreationEncryptionKmsKeyName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelMetadataChange: Model metadata change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modelmetadatachange\n+ */\n+modelMetadataChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.reason') AS modelMetadataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.jobName') AS modelMetadataChangeJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelMetadataChange.jobName'),\n+           \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelMetadataChange.jobName'),\n+         \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelName') AS modelMetadataChangeModelName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.friendlyName') AS modelMetadataChangeEntityInfoFriendlyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.description') AS modelMetadataChangeEntityInfoDescription,\n+    JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.modelInfo.entityInfo.labels') AS modelMetadataChangeEntityInfoLabels,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.expireTime') AS modelMetadataChangeModelExpireTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.createTime') AS modelMetadataChangeModelCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.updateTime') AS modelMetadataChangeModelUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.modelMetadataChange.model.encryption.kmsKeyName') AS modelMetadataChangeEncryptionKmsKeyName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * ModelDataChange: Model data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#modeldatachange\n+ */\n+modelDataChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.modelDataChange.reason')\n+    AS modelDataChangeReason,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.modelDataChange.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.modelDataChange.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineCreation: Routine creation event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinecreation\n+ */\n+routineCreationEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.routineName') AS routineCreationName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.createTime') AS routineCreationCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.routine.updateTime') AS routineCreationUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.reason') AS routineCreationReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineCreation.jobName') AS routineCreationJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineCreation.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineCreation.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineChange: Routine change event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinechange\n+ */\n+routineChangeEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.routineName') AS routineChangeName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.createTime') AS routineChangeCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.routine.updateTime') AS routineChangeUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.reason') AS routineChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineChange.jobName') AS routineChangeJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineChange.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineChange.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * RoutineDeletion: Routine deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#routinedeletion\n+ */\n+routineDeletionEvent AS (\n+  SELECT\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.routineName') AS routineDeletionName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.createTime') AS routineDeletionCreateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.routine.updateTime') AS routineDeletionUpdateTime,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.reason') AS routineDeletionReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.routineDeletion.jobName') AS routineDeletionJobName,\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.routineDeletion.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.routineDeletion.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+) -- End of WITH clauses\n+SELECT\n+  SHA1(principalEmail) AS principalEmail,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecc1e40f22208279465d7e1758debc959a277a1a"}, "originalPosition": 762}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTA4NDE2OnYy", "diffSide": "LEFT", "path": "views/audit/query_audit.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxOToyMjo0NlrOGcDPQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxOToyMjo0NlrOGcDPQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjA2NjM2OQ==", "bodyText": "Don't delete this file as part of this PR", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r432066369", "createdAt": "2020-05-28T19:22:46Z", "author": {"login": "danieldeleo"}, "path": "views/audit/query_audit.sql", "diffHunk": "@@ -1,140 +0,0 @@\n-/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5045c1f2128744f307b47da87d650bae245caf89"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDU1NTUyOnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_elt_script_logging.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODoyNDozM1rOGwBJHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODoyNDozM1rOGwBJHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwMzU0OQ==", "bodyText": "missing comma at end", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r453003549", "createdAt": "2020-07-10T18:24:33Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,785 @@\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.requestMetadata.callerIp') AS callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    COALESCE(\n+      CONCAT(\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+        \":\",\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+      ),\n+      CONCAT(\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+        \":\",\n+        SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+      )\n+    ) AS jobId,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobInsertion.job.jobName')) AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.jobState'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.jobState')\n+    ) AS jobStatusJobState,\n+    SPLIT(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult'),JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.code')),\"/\")[SAFE_OFFSET(1)],\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.code'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.code')\n+    ) AS jobStatusErrorResultCode,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.message'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.message')\n+    ) AS jobStatusErrorResultMessage,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errorResult.details'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errorResult.details')\n+    ) AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errors'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors')\n+      ),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStatus.errors'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors')\n+      ),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobInsertion.job.jobStats.createTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime'))\n+    ) AS jobStatsCreateTime,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobInsertion.job.jobStats.startTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(\n+       protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime'))\n+    ) AS jobStatsStartTime,\n+    COALESCE(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime'))\n+    ) AS jobStatsEndTime,\n+    COALESCE(\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.totalSlotMs') AS INT64),\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.totalSlotMs') AS INT64)\n+    ) AS jobStatsTotalSlotMs,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.reservationUsage.name'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.reservationUsage.name')\n+    ) AS jobStatsReservationUsageName,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.reservationUsage.slotMs'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.reservationUsage.slotMs')\n+    ) AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.totalProcessedBytes'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.totalProcessedBytes')\n+    ) AS queryJobStatsTotalProcessedBytes,\n+    COALESCE(\n+      CAST(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.totalBilledBytes') AS INT64),\n+       CAST(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64)\n+    ) AS queryJobStatsTotalBilledBytes,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.billingTier'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.billingTier')\n+    ) AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedTables'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedTables')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedViews'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedViews')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.queryStats.referencedRoutines'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.queryStats.referencedRoutines')\n+      ), '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.outputRowCount'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.outputRowCount')\n+    ) AS queryJobStatsOutputRowCount,\n+    CAST(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobStats.queryStats.cacheHit'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.queryStats.cacheHit')\n+    ) AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    COALESCE(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobInsertion.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobInsertion.job.jobStats.startTime')),\n+        MILLISECOND),\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+         '$.jobChange.job.jobStats.startTime')),\n+        MILLISECOND)\n+      ) AS jobStatsRuntimeMs,\n+    COALESCE(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobStats.startTime')),\n+        SECOND),\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND)\n+      ) AS jobStatsRuntimeSecs,\n+    COALESCE(\n+      CAST(CEILING(\n+        TIMESTAMP_DIFF(\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobInsertion.job.jobStats.endTime')),\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobInsertion.job.jobStats.startTime')),\n+          SECOND) / 60 ) AS INT64),\n+      CAST(CEILING(\n+        TIMESTAMP_DIFF(\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobChange.job.jobStats.endTime')),\n+          TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.jobChange.job.jobStats.startTime')),\n+          SECOND) / 60) AS INT64)\n+      ) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.query'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.query')) AS queryConfigQuery,\n+    CAST(COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.queryTruncated'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.queryTruncated')) AS BOOL) AS queryConfigQueryTruncated,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTable'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable')) AS queryConfigDestinationTable,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.createDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.createDisposition')) AS queryConfigCreateDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.writeDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.writeDisposition')) AS queryConfigWriteDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.defaultDataset'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.defaultDataset')) AS queryConfigDefaultDataset,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.priority'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority')) AS queryConfigPriority,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName')\n+      ) AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.statementType'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType')) AS queryConfigStatementType,\n+    COALESCE(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.queryConfig.destinationTable'),\n+        \"/\")[SAFE_OFFSET(1)]\n+    ) AS queryConfigDestinationTableProjectId,\n+    COALESCE(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+          \"/\")[SAFE_OFFSET(3)],\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobConfig.queryConfig.destinationTable'),\n+          \"/\")[SAFE_OFFSET(3)]\n+    ) AS queryConfigDestinationTableDatasetId,\n+    COALESCE(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+          \"/\")[SAFE_OFFSET(5)],\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobConfig.queryConfig.destinationTable'),\n+          \"/\")[SAFE_OFFSET(5)]\n+    ) AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    COALESCE(\n+      SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobConfig.loadConfig.sourceUris'),\n+        '[\"'), '\"]'), '\",\"'),\n+      SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobConfig.loadConfig.sourceUris'),\n+        '[\"'), '\"]'), '\",\"')\n+    ) AS loadConfigSourceUris,\n+    COALESCE(\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceUrisTruncated') AS BOOL),\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.extractConfig.sourceUrisTruncated') AS BOOL)\n+    ) AS loadConfigSourceUrisTruncated,\n+    COALESCE(\n+       JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson'),\n+       JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobInsertion.job.jobConfig.loadConfig.schemaJson')\n+    ) AS loadConfigSchemaJson,\n+    COALESCE(\n+     CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL),\n+     CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobInsertion.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL)\n+    ) AS loadConfigSchemaJsonTruncated,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobInsertion.job.jobConfig.loadConfig.destinationTable')\n+    ) AS loadConfigDestinationTable,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobInsertion.job.jobConfig.loadConfig.createDisposition')\n+    ) AS loadConfigCreateDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobInsertion.job.jobConfig.loadConfig.writeDisposition')\n+    ) AS loadConfigWriteDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobInsertion.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName')\n+    ) AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    COALESCE(\n+      SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+        '[\"'), '\"]'), '\",\"'),\n+      SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobConfig.extractConfig.destinationUris'),\n+        '[\"'), '\"]'), '\",\"')\n+    ) AS extractConfigDestinationUris,\n+    COALESCE(\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated') AS BOOL),\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.extractConfig.destinationUrisTruncated') AS BOOL)\n+    ) AS extractConfigDestinationUrisTruncated,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.extractConfig.sourceTable')\n+    ) AS extractConfigSourceTable,\n+    COALESCE(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+          \",\")[SAFE_OFFSET(1)],\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobConfig.extractConfig.sourceTable'),\n+        \",\")[SAFE_OFFSET(1)]\n+    ) AS extractConfigSourceTableProjectId,\n+    COALESCE(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+        \",\")[SAFE_OFFSET(3)],\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.extractConfig.sourceTable'),\n+        \",\")[SAFE_OFFSET(3)]\n+    ) AS extractConfigSourceTableDatasetId,\n+    COALESCE(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+        \",\")[SAFE_OFFSET(5)],\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.extractConfig.sourceTable'),\n+        \",\")[SAFE_OFFSET(5)]\n+    ) AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    COALESCE(\n+      SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+        '[\"'),'\"]') ,'\",\"'),\n+      SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.jobInsertion.job.jobConfig.tableCopyConfig.sourceTables'),\n+        '[\"'),'\"]') ,'\",\"')\n+    ) AS tableCopySourceTables,\n+    COALESCE(\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated')\n+      AS BOOL),\n+      CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.tableCopyConfig.sourceTablesTruncated')\n+      AS BOOL)\n+    ) AS tableCopyConfigSourceTablesTruncated,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.tableCopyConfig.destinationTable')\n+    ) AS tableCopyConfigDestinationTable,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.createDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.createDisposition')\n+    ) AS tableCopyConfigCreateDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.writeDisposition'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.writeDisposition')\n+    ) AS tableCopyConfigWriteDisposition,\n+    COALESCE(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName'),\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName')\n+    ) AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    COALESCE(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)],\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)]\n+    ) AS tableCopyConfigProjectId,\n+    COALESCE(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)],\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)]\n+    ) AS tableCopyConfigDatasetId,\n+    COALESCE(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)],\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobInsertion.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)]\n+    ) AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.table.reason') AS tableDeletionReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_system_event`\n+),\n+/*\n+ * TableDataRead: Data from tableDataRead audit logs\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n+ */\n+tableDataReadEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields')),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadFields,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fieldsTruncated') AS BOOL) AS tableDataReadFieldsTruncated,\n+     SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categories'),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadCategories,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categoriesTruncated') AS BOOL) AS tableDataReadCategoriesTruncated,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.reason') AS tableDataReadReason,\n+     JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName') AS tableDataReadJobName,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.sessionName') AS tableDataReadSessionName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDataChange: Table data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledatachange\n+ */\n+tableDataChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDataChange.jobName'),\n+      \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataChange.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.deletedRowsCount') AS tableDataChangeDeletedRowsCount,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.insertedRowsCount') AS tableDataChangeInsertedRowsCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.truncated') AS BOOL) AS tableDataChangeTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.reason') AS tableDataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.jobName') AS tableDataChangeJobName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+)\n+ -- End of WITH clauses\n+SELECT\n+  principalEmail,\n+  callerIp,\n+  serviceName,\n+  methodName,\n+  eventName,\n+  projectId,\n+  jobId,\n+  IF(jobChangeJobName IS NULL, False, True) AS hasJobChangeEvent,\n+  IF(tableDeletionJobName is NULL, False, True) AS hasTableDeletionEvent,\n+  IF(tableDataReadJobName IS NULL, False, True) AS hasTableDataReadEvent,\n+  IF(tableDataChangeJobName IS NULL, False, True) AS hasTableDataChangeEvent,\n+  STRUCT(\n+    EXTRACT(MINUTE FROM jobStatsStartTime) AS minuteOfDay,\n+    EXTRACT(HOUR FROM jobStatsStartTime) AS hourOfDay,\n+    EXTRACT(DAYOFWEEK FROM jobStatsStartTime) - 1 AS dayOfWeek,\n+    EXTRACT(DAYOFYEAR FROM jobStatsStartTime) AS dayOfYear,\n+    EXTRACT(WEEK FROM jobStatsStartTime) AS week,\n+    EXTRACT(MONTH FROM jobStatsStartTime) AS month,\n+    EXTRACT(QUARTER FROM jobStatsStartTime) AS quarter,\n+    EXTRACT(YEAR FROM jobStatsStartTime) AS year\n+  ) AS jobStartDate,\n+  jobStatsRuntimeMs AS jobRuntimeMs,\n+  jobStatsRuntimeSecs AS jobRuntimeSec,\n+  REGEXP_CONTAINS(jobId, 'beam') AS isBeamJob,\n+  REGEXP_CONTAINS(queryConfigQuery, 'cloudaudit_googleapis_com_data_access') AS isAuditDashboardQuery,\n+  jobStatsTotalSlotMs / jobStatsRuntimeMs AS avgSlots,\n+  /*\n+   * The following statement breaks down the query into minute buckets\n+   * and provides the average slot usage within that minute. This is a\n+   * crude way of making it so you can retrieve the average slot utilization\n+   * for a particular minute across multiple queries.\n+   */\n+  ARRAY(\n+    SELECT\n+      STRUCT(\n+        TIMESTAMP_TRUNC(\n+          TIMESTAMP_ADD(jobStatsStartTime, INTERVAL bucket_num MINUTE), MINUTE\n+        ) AS time,\n+        jobStatsTotalSlotMs / jobStatsRuntimeMs AS avgSlotUsage\n+      )\n+    FROM UNNEST(GENERATE_ARRAY(1, jobStatsExecutionMinuteBuckets)) AS bucket_num\n+  ) AS jobExecutionTimeline,\n+  ARRAY_LENGTH(queryJobStatsReferencedTables) AS totalTablesProcessed,\n+  ARRAY_LENGTH(queryJobStatsReferencedViews) AS totalViewsProcessed,\n+  (queryJobStatsTotalBilledBytes / pow(2,30)) AS totalBilledGigabytes,\n+  (queryJobStatsTotalBilledBytes / pow(2,40)) AS totalBilledTerabytes,\n+  (queryJobStatsTotalBilledBytes / pow(2,40)) * 5 AS estimatedCostUsd,\n+  CONCAT(\n+    queryConfigDestinationTableDatasetId, '.',\n+    queryConfigDestinationTableId) AS queryDestinationTableRelativePath,\n+  CONCAT(\n+    queryConfigDestinationTableProjectId, '.',\n+    queryConfigDestinationTableDatasetId, '.',\n+    queryConfigDestinationTableId) AS queryDestinationTableAbsolutePath,\n+  queryConfigDestinationTableProjectId AS queryDestinationTableProjectId,\n+  queryConfigDestinationTableDatasetId AS queryDestinationTableDatasetId,\n+  queryConfigDestinationTableId AS queryDestinationTableId,\n+  /*\n+   * jobChange STRUCT\n+   * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobchange\n+  */\n+  STRUCT(\n+    jobChangeJobName AS jobName,\n+    /*\n+     * jobConfig STRUCT\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobconfig\n+     */\n+    STRUCT(\n+      /*\n+       * queryConfig STRUCT\n+       * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+       */\n+      STRUCT(\n+        queryConfigQuery AS query,\n+        queryConfigQueryTruncated AS queryTruncated,\n+        queryConfigDestinationTable AS destinationTable,\n+        queryConfigCreateDisposition AS createDisposition,\n+        queryConfigWriteDisposition AS writeDisposition,\n+        queryConfigDefaultDataset AS defaultDataset,\n+        --TODO Add tableDefinitions\n+        queryConfigPriority AS priority,\n+        STRUCT(\n+          queryConfigDestinationTableEncryptionKmsKeyName AS kmsKeyName\n+        ) AS destinationTableEncryption,\n+        queryConfigStatementType AS statementType\n+      ) AS queryConfig,\n+      /*\n+       * loadConfig STRUCT\n+       * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+       */\n+      STRUCT(\n+        loadConfigSourceUris AS sourceUris,\n+        loadConfigSourceUrisTruncated AS sourceUrisTruncated,\n+        loadConfigSchemaJson AS schemaJson,\n+        loadConfigSchemaJsonTruncated AS schemaJsonTruncated,\n+        loadConfigDestinationTable AS destinationTable,\n+        loadConfigCreateDisposition AS createDisposition,\n+        loadConfigWriteDisposition AS writeDisposition,\n+        STRUCT(\n+          loadConfigDestinationTableEncryptionKmsKeyName AS kmsKeyName\n+        ) AS destinationTableEncryption\n+      ) AS loadConfig,\n+      /*\n+       * extractConfig STRUCT\n+       * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+       */\n+      STRUCT(\n+        extractConfigDestinationUris AS destinationUris,\n+        extractConfigDestinationUrisTruncated AS destinationUrisTruncated,\n+        extractConfigSourceTable AS sourceTable\n+      ) AS extractConfig,\n+      /*\n+       * tableCopyConfig STRUCT\n+       * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+       */\n+      STRUCT(\n+        tableCopySourceTables AS sourceTables,\n+        tableCopyConfigSourceTablesTruncated AS configSourceTablesTruncated,\n+        tableCopyConfigDestinationTable AS configDestinationTable,\n+        tableCopyConfigCreateDisposition AS configCreateDisposition,\n+        tableCopyConfigWriteDisposition AS configWriteDisposition,\n+        STRUCT(\n+          tableCopyConfigDestinationTableEncryptionKmsKeyName AS kmsKeyName\n+        ) AS destinationTableEncryption\n+      ) AS tableCopyConfig\n+    ) AS jobConfig,\n+    /*\n+     * JobStatus STRUCT\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#JobStatus\n+     */\n+    STRUCT(\n+      jobStatusJobState AS jobState,\n+      STRUCT(\n+        jobStatusErrorResultCode AS code,\n+        jobStatusErrorResultMessage AS message,\n+        jobStatusErrorResultDetails AS details\n+      ) AS errorResult,\n+      jobStatusEncounteredErrorMessages AS encounteredErrorMessages,\n+      jobStatusEncounteredErrorCodes AS encounteredErrorCodes\n+    ) AS jobStatus,\n+    /*\n+     * JobStats STRUCT\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    STRUCT(\n+      jobStatsCreateTime AS createTime,\n+      jobStatsStartTime AS startTime,\n+      jobStatsEndTime AS endTime,\n+      jobStatsTotalSlotMs AS totalSlotMs,\n+      jobStatsParentJobName as parentJobName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bac516f0e9b8793547f74a9bf257ecc63f4b0114"}, "originalPosition": 716}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDU3MzIwOnYy", "diffSide": "RIGHT", "path": "views/audit/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODozMDo0NFrOGwBUcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTowMTo0NFrOGwCkWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNjQ1MA==", "bodyText": "Add parentJobName in your examples and order the child statements in order of execution since the whole point is to track script execution", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r453006450", "createdAt": "2020-07-10T18:30:44Z", "author": {"login": "danieldeleo"}, "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,98 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql)\n+\n+Customers who run scripts in legacy data warehouses such as Teradata, understandably want to track statement results and metrics. For example, tracking the number of rows affected after a set of DML queries are executed. In order to collect this information for analysis, customers would have to write a statement by setting variables within the script after each query statement, to collect this information. Essentially, users are in charge of managing their own metrics for monitoring. This can become very tedious for users who run thousands, if not more, scripts in a day.  With BigQuery, you no longer have to log your SQL statement results because Cloud Logging allows you to store, search, analyze, monitor, and set alerts on all your BigQuery scripting activity. The new version of Cloud Logging logs for BigQuery, BigQueryAuditMetadata, provides rich insights into the execution of your scripts. This data can give you insight into your script performance, modifications of your data, and more. This is a BigQuery SELECT statement that has extracted and formatted BigQueryMetaData events, allowing you to write simple queries to monitor your BigQuery jobs.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+        gcloud alpha logging sinks create my-example-sink \\ \n+        bigquery.googleapis.com/projects/my-project-id/datasets/auditlog_dataset \\\n+        --log-filter='protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobInsertion.job.jobConfig.queryConfig.statementType=\"SCRIPT\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason=\"QUERY\")' \\ \n+        --use-partitioned-tables\n+        ``` \n+        Note: gcloud **alpha** is needed in order to use the parameter `--use-partitioned-tables` \n+    *   [Cloud Console Logs Viewer](https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create)\n+        Use this filter:\n+        #### protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobInsertion.job.jobConfig.queryConfig.statementType=\"SCRIPT\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason!=\"\" OR protoPayload.metadata.tableDataRead.reason!=\"\"  OR protoPayload.metadata.tableDeletion.reason!=\"\" )\n+        *   Make sure to select\n+            [partitioning](https://cloud.google.com/logging/docs/export/bigquery#partition-tables)\n+            for your BigQuery destination\n+            \n+    Note: You can create a log sink at the folder, billing account, or organization level using an \n+    [aggregated sink](https://cloud.google.com/logging/docs/export/aggregated_sinks#creating_an_aggregated_sink).\n+1.  The log sink will immediately create the BigQuery dataset but the table will\n+    be created once you run a BigQuery job post log sink creation.\n+1.  To use the SELECT statement in\n+    [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql), change\n+    all occurrences of\n+    `project_id.dataset_id.cloudaudit_googleapis_com_data_access` to be the full\n+    table path you created in step 1.\n+    *   `sed\n+        's/project_id.dataset_id.cloudaudit_googleapis_com_data_access/YOUR_PROJECT.YOUR_DATASET.YOUR_TABLE/'\n+        big_query_elt_audit_log_v2.sql`\n+1.  From here, you can do further analysis in BigQuery by querying the view, or\n+    you can connect it to a BI tool such as DataStudio as a data source and\n+    build dashboards.\n+    \n+#### Usage Examples", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bac516f0e9b8793547f74a9bf257ecc63f4b0114"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyNjkwNQ==", "bodyText": "SELECT\njobChange.jobStats.parentJobName,\nARRAY_AGG(jobChange.jobConfig.queryConfig.statementType\nIGNORE NULLS ORDER BY jobChange.jobStats.startTime),\nARRAY_AGG(tableDataChange.jobName\nIGNORE NULLS ORDER BY jobChange.jobStats.startTime),\nARRAY_AGG(jobChange.jobConfig.queryConfig.query\nIGNORE NULLS ORDER BY jobChange.jobStats.startTime),\nARRAY_AGG(jobChange.jobStats.createTime\nIGNORE NULLS ORDER BY jobChange.jobStats.startTime),\nARRAY_AGG(jobChange.jobStats.startTime\nIGNORE NULLS ORDER BY jobChange.jobStats.startTime),\nARRAY_AGG(jobChange.jobStats.endTime\nIGNORE NULLS ORDER BY jobChange.jobStats.startTime),\nARRAY_AGG(jobRuntimeMs\nIGNORE NULLS ORDER BY jobChange.jobStats.startTime),\nARRAY_AGG(tableDataChange.deletedRowsCount\nIGNORE NULLS ORDER BY jobChange.jobStats.startTime),\nARRAY_AGG(tableDataChange.insertedRowsCount\nIGNORE NULLS ORDER BY jobChange.jobStats.startTime),\nARRAY_AGG(jobChange.jobStats.queryStats.totalBilledBytes\nIGNORE NULLS ORDER BY jobChange.jobStats.startTime),\nFROM YOUR_VIEW\nWHERE\n(jobChange.jobConfig.queryConfig.statementType=\"INSERT\" OR\njobChange.jobConfig.queryConfig.statementType=\"DELETE\" OR\njobChange.jobConfig.queryConfig.statementType=\"UPDATE\" OR\njobChange.jobConfig.queryConfig.statementType=\"MERGE\")\nAND jobChange.jobStats.parentJobName IS NOT NULL\nGROUP BY 1", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r453026905", "createdAt": "2020-07-10T19:01:44Z", "author": {"login": "danieldeleo"}, "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,98 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql)\n+\n+Customers who run scripts in legacy data warehouses such as Teradata, understandably want to track statement results and metrics. For example, tracking the number of rows affected after a set of DML queries are executed. In order to collect this information for analysis, customers would have to write a statement by setting variables within the script after each query statement, to collect this information. Essentially, users are in charge of managing their own metrics for monitoring. This can become very tedious for users who run thousands, if not more, scripts in a day.  With BigQuery, you no longer have to log your SQL statement results because Cloud Logging allows you to store, search, analyze, monitor, and set alerts on all your BigQuery scripting activity. The new version of Cloud Logging logs for BigQuery, BigQueryAuditMetadata, provides rich insights into the execution of your scripts. This data can give you insight into your script performance, modifications of your data, and more. This is a BigQuery SELECT statement that has extracted and formatted BigQueryMetaData events, allowing you to write simple queries to monitor your BigQuery jobs.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+        gcloud alpha logging sinks create my-example-sink \\ \n+        bigquery.googleapis.com/projects/my-project-id/datasets/auditlog_dataset \\\n+        --log-filter='protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobInsertion.job.jobConfig.queryConfig.statementType=\"SCRIPT\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason=\"QUERY\")' \\ \n+        --use-partitioned-tables\n+        ``` \n+        Note: gcloud **alpha** is needed in order to use the parameter `--use-partitioned-tables` \n+    *   [Cloud Console Logs Viewer](https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create)\n+        Use this filter:\n+        #### protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobInsertion.job.jobConfig.queryConfig.statementType=\"SCRIPT\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason!=\"\" OR protoPayload.metadata.tableDataRead.reason!=\"\"  OR protoPayload.metadata.tableDeletion.reason!=\"\" )\n+        *   Make sure to select\n+            [partitioning](https://cloud.google.com/logging/docs/export/bigquery#partition-tables)\n+            for your BigQuery destination\n+            \n+    Note: You can create a log sink at the folder, billing account, or organization level using an \n+    [aggregated sink](https://cloud.google.com/logging/docs/export/aggregated_sinks#creating_an_aggregated_sink).\n+1.  The log sink will immediately create the BigQuery dataset but the table will\n+    be created once you run a BigQuery job post log sink creation.\n+1.  To use the SELECT statement in\n+    [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql), change\n+    all occurrences of\n+    `project_id.dataset_id.cloudaudit_googleapis_com_data_access` to be the full\n+    table path you created in step 1.\n+    *   `sed\n+        's/project_id.dataset_id.cloudaudit_googleapis_com_data_access/YOUR_PROJECT.YOUR_DATASET.YOUR_TABLE/'\n+        big_query_elt_audit_log_v2.sql`\n+1.  From here, you can do further analysis in BigQuery by querying the view, or\n+    you can connect it to a BI tool such as DataStudio as a data source and\n+    build dashboards.\n+    \n+#### Usage Examples", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAwNjQ1MA=="}, "originalCommit": {"oid": "bac516f0e9b8793547f74a9bf257ecc63f4b0114"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDcyNjM3OnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_elt_script_logging.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTowOTo0NVrOGwCxzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTowOTo0NVrOGwCxzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAzMDM0OA==", "bodyText": "wrap the whole SQL in CREATE OR REPLACE VIEW and add README steps to replace view name with user-desired value", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r453030348", "createdAt": "2020-07-10T19:09:45Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,785 @@\n+WITH jobChangeEvent AS (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bac516f0e9b8793547f74a9bf257ecc63f4b0114"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTE4Mzc1OnYy", "diffSide": "RIGHT", "path": "views/audit/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNTowOTowOVrOG97uuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNTowOTowOVrOG97uuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDkzOQ==", "bodyText": "We no longer need jobInsertion events to pass into our sink", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r467594939", "createdAt": "2020-08-09T15:09:09Z", "author": {"login": "danieldeleo"}, "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,108 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql)\n+\n+Customers who run scripts in legacy data warehouses such as Teradata, understandably want to track statement results and metrics. For example, tracking the number of rows affected after a set of DML queries are executed. In order to collect this information for analysis, users would have to set system variables and make logging calls after each DML statement. Essentially, users are in charge of managing monitoring. This can become very tedious for users who run thousands, if not more, scripts in a day.  With BigQuery, you no longer have to log your SQL statement results because Cloud Logging allows you to store, search, analyze, monitor, and set alerts on all your BigQuery scripting activity. The new version of Cloud Logging logs for BigQuery, BigQueryAuditMetadata, provides rich insights into the execution of your scripts. This data can give you insight into your script performance, modifications of your data, and more. This is a BigQuery SELECT statement that has extracted and formatted BigQueryMetaData events, allowing you to write simple queries to monitor your BigQuery jobs.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+        gcloud alpha logging sinks create my-example-sink \\ \n+        bigquery.googleapis.com/projects/my-project-id/datasets/auditlog_dataset \\\n+        --log-filter='protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobInsertion.job.jobConfig.queryConfig.statementType=\"SCRIPT\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason=\"QUERY\")' \\ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ac5055e9cc0c3003b2781ef8d219cb1e1f1ee9b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTE4NDI3OnYy", "diffSide": "RIGHT", "path": "views/audit/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNTowOToyNlrOG97u9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNTowOToyNlrOG97u9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU5NDk5OQ==", "bodyText": "Update filter here too", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r467594999", "createdAt": "2020-08-09T15:09:26Z", "author": {"login": "danieldeleo"}, "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,108 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql)\n+\n+Customers who run scripts in legacy data warehouses such as Teradata, understandably want to track statement results and metrics. For example, tracking the number of rows affected after a set of DML queries are executed. In order to collect this information for analysis, users would have to set system variables and make logging calls after each DML statement. Essentially, users are in charge of managing monitoring. This can become very tedious for users who run thousands, if not more, scripts in a day.  With BigQuery, you no longer have to log your SQL statement results because Cloud Logging allows you to store, search, analyze, monitor, and set alerts on all your BigQuery scripting activity. The new version of Cloud Logging logs for BigQuery, BigQueryAuditMetadata, provides rich insights into the execution of your scripts. This data can give you insight into your script performance, modifications of your data, and more. This is a BigQuery SELECT statement that has extracted and formatted BigQueryMetaData events, allowing you to write simple queries to monitor your BigQuery jobs.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+        gcloud alpha logging sinks create my-example-sink \\ \n+        bigquery.googleapis.com/projects/my-project-id/datasets/auditlog_dataset \\\n+        --log-filter='protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobInsertion.job.jobConfig.queryConfig.statementType=\"SCRIPT\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason=\"QUERY\")' \\ \n+        --use-partitioned-tables\n+        ``` \n+        Note: gcloud **alpha** is needed in order to use the parameter `--use-partitioned-tables` \n+    *   [Cloud Console Logs Viewer](https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create)\n+        Use this filter:\n+        #### protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobInsertion.job.jobConfig.queryConfig.statementType=\"SCRIPT\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason!=\"\" OR protoPayload.metadata.tableDataRead.reason!=\"\"  OR protoPayload.metadata.tableDeletion.reason!=\"\" )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ac5055e9cc0c3003b2781ef8d219cb1e1f1ee9b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTI0NzQ0OnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_elt_script_logging.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNjoyNzowNFrOG98NEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNjoyNzowNFrOG98NEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYwMjcwNw==", "bodyText": "tableDeletion.table.reason tableDeletion.reason", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r467602707", "createdAt": "2020-08-09T16:27:04Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,525 @@\n+CREATE OR REPLACE VIEW `project_id.dataset_id.view_name` AS (\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.requestMetadata.callerIp') AS callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    CONCAT(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName') AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.jobState') AS jobStatusJobState,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult'),\"/\")[SAFE_OFFSET(1)],\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.code') AS jobStatusErrorResultCode,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.message') AS jobStatusErrorResultMessage,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.details') AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime')) AS jobStatsCreateTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime')) AS jobStatsStartTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.endTime')) AS jobStatsEndTime,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.totalSlotMs') AS INT64) AS jobStatsTotalSlotMs,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"slotMs\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalProcessedBytes') AS queryJobStatsTotalProcessedBytes,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64) AS queryJobStatsTotalBilledBytes,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.billingTier') AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.referencedTables'),\n+      '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedViews'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedRoutines'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.outputRowCount') AS queryJobStatsOutputRowCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.cacheHit') AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.startTime')),\n+      MILLISECOND) AS jobStatsRuntimeMs,\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.startTime')),\n+      SECOND) AS jobStatsRuntimeSecs,\n+    CAST(CEILING(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND) / 60 ) AS INT64) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.query') AS queryConfigQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.queryTruncated') AS BOOL) AS queryConfigQueryTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable') AS queryConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.createDisposition') AS queryConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.writeDisposition') AS queryConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.defaultDataset') AS queryConfigDefaultDataset,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS tableDefinitionsName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"sourceUris\":\\\"(.*?)\\\"}') AS tableDefinitionsSourceUris,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority') AS queryConfigPriority,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName') AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType') AS queryConfigStatementType,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(1)] AS queryConfigDestinationTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(3)] AS queryConfigDestinationTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+       \"/\")[SAFE_OFFSET(5)] AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.sourceUris'),\n+      '[\"'), '\"]'), '\",\"') AS loadConfigSourceUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceUrisTruncated') AS BOOL) AS loadConfigSourceUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson') AS loadConfigSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL) AS loadConfigSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable') AS loadConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition') AS loadConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition') AS loadConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName') AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+      '[\"'), '\"]'), '\",\"') AS extractConfigDestinationUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated') AS BOOL) AS extractConfigDestinationUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable') AS extractConfigSourceTable,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(1)] AS extractConfigSourceTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(3)] AS extractConfigSourceTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(5)] AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+      '[\"'),'\"]') ,'\",\"') AS tableCopySourceTables,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated') \n+      AS BOOL) AS tableCopyConfigSourceTablesTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable') AS tableCopyConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.createDisposition') AS tableCopyConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.writeDisposition') AS tableCopyConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName') AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)] AS tableCopyConfigProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)]  AS tableCopyConfigDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)] AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.table.reason') AS tableDeletionReason,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ac5055e9cc0c3003b2781ef8d219cb1e1f1ee9b"}, "originalPosition": 235}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTI1MzMxOnYy", "diffSide": "RIGHT", "path": "views/audit/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNjozNDo1N1rOG98P9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNjozNDo1N1rOG98P9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYwMzQ0NA==", "bodyText": "Rename to match file", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r467603444", "createdAt": "2020-08-09T16:34:57Z", "author": {"login": "danieldeleo"}, "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,108 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ac5055e9cc0c3003b2781ef8d219cb1e1f1ee9b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTI1NzU2OnYy", "diffSide": "RIGHT", "path": "views/audit/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNjo0MDoxOFrOG98R9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNjo0MDoxOFrOG98R9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYwMzk1OQ==", "bodyText": "Customers who run scripts in legacy data warehouses such as Teradata, understandably want to track statement results and metrics. For example, tracking the number of rows affected after a set of DML queries are executed. In order to collect this information for analysis, users would have to set system variables and make logging calls after each DML statement. Essentially, users are in charge of managing monitoring. This can become very tedious for users who run thousands, if not more, scripts in a day.\nA common pattern in data warehousing for tracking results of DML statements is to collect system variable values after each DML statement and write them to a separate logging table. With BigQuery...", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r467603959", "createdAt": "2020-08-09T16:40:18Z", "author": {"login": "danieldeleo"}, "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,108 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql)\n+\n+Customers who run scripts in legacy data warehouses such as Teradata, understandably want to track statement results and metrics. For example, tracking the number of rows affected after a set of DML queries are executed. In order to collect this information for analysis, users would have to set system variables and make logging calls after each DML statement. Essentially, users are in charge of managing monitoring. This can become very tedious for users who run thousands, if not more, scripts in a day.  With BigQuery, you no longer have to log your SQL statement results because Cloud Logging allows you to store, search, analyze, monitor, and set alerts on all your BigQuery scripting activity. The new version of Cloud Logging logs for BigQuery, BigQueryAuditMetadata, provides rich insights into the execution of your scripts. This data can give you insight into your script performance, modifications of your data, and more. This is a BigQuery SELECT statement that has extracted and formatted BigQueryMetaData events, allowing you to write simple queries to monitor your BigQuery jobs.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ac5055e9cc0c3003b2781ef8d219cb1e1f1ee9b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTI1OTI3OnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_elt_script_logging.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNjo0MjoxNFrOG98SwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNjo0MjoxNFrOG98SwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYwNDE2MA==", "bodyText": "let's add timestamp right after callerIp since partitioning is based off timestamp.\nThis will let us minimize the amount of data read by view", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r467604160", "createdAt": "2020-08-09T16:42:14Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,525 @@\n+CREATE OR REPLACE VIEW `project_id.dataset_id.view_name` AS (\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.requestMetadata.callerIp') AS callerIp,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ac5055e9cc0c3003b2781ef8d219cb1e1f1ee9b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTI1OTUxOnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_elt_script_logging.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNjo0MjozNlrOG98S3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxNjo0MjozNlrOG98S3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYwNDE5MQ==", "bodyText": "add timestamp after callerIp,", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r467604191", "createdAt": "2020-08-09T16:42:36Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,525 @@\n+CREATE OR REPLACE VIEW `project_id.dataset_id.view_name` AS (\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.requestMetadata.callerIp') AS callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    CONCAT(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName') AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.jobState') AS jobStatusJobState,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult'),\"/\")[SAFE_OFFSET(1)],\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.code') AS jobStatusErrorResultCode,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.message') AS jobStatusErrorResultMessage,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.details') AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime')) AS jobStatsCreateTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime')) AS jobStatsStartTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.endTime')) AS jobStatsEndTime,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.totalSlotMs') AS INT64) AS jobStatsTotalSlotMs,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"slotMs\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalProcessedBytes') AS queryJobStatsTotalProcessedBytes,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64) AS queryJobStatsTotalBilledBytes,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.billingTier') AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.referencedTables'),\n+      '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedViews'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedRoutines'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.outputRowCount') AS queryJobStatsOutputRowCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.cacheHit') AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.startTime')),\n+      MILLISECOND) AS jobStatsRuntimeMs,\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.startTime')),\n+      SECOND) AS jobStatsRuntimeSecs,\n+    CAST(CEILING(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND) / 60 ) AS INT64) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.query') AS queryConfigQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.queryTruncated') AS BOOL) AS queryConfigQueryTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable') AS queryConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.createDisposition') AS queryConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.writeDisposition') AS queryConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.defaultDataset') AS queryConfigDefaultDataset,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS tableDefinitionsName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"sourceUris\":\\\"(.*?)\\\"}') AS tableDefinitionsSourceUris,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority') AS queryConfigPriority,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName') AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType') AS queryConfigStatementType,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(1)] AS queryConfigDestinationTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(3)] AS queryConfigDestinationTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+       \"/\")[SAFE_OFFSET(5)] AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.sourceUris'),\n+      '[\"'), '\"]'), '\",\"') AS loadConfigSourceUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceUrisTruncated') AS BOOL) AS loadConfigSourceUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson') AS loadConfigSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL) AS loadConfigSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable') AS loadConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition') AS loadConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition') AS loadConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName') AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+      '[\"'), '\"]'), '\",\"') AS extractConfigDestinationUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated') AS BOOL) AS extractConfigDestinationUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable') AS extractConfigSourceTable,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(1)] AS extractConfigSourceTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(3)] AS extractConfigSourceTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(5)] AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+      '[\"'),'\"]') ,'\",\"') AS tableCopySourceTables,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated') \n+      AS BOOL) AS tableCopyConfigSourceTablesTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable') AS tableCopyConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.createDisposition') AS tableCopyConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.writeDisposition') AS tableCopyConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName') AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)] AS tableCopyConfigProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)]  AS tableCopyConfigDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)] AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.table.reason') AS tableDeletionReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_system_event`\n+),\n+/*\n+ * TableDataRead: Data from tableDataRead audit logs\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n+ */\n+tableDataReadEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields'),\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fields')),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadFields,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.fieldsTruncated') AS BOOL) AS tableDataReadFieldsTruncated,\n+     SPLIT(TRIM(TRIM(\n+        JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categories'),\n+        '[\"'),'\"]'),'\",\"') AS tableDataReadCategories,\n+     CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.categoriesTruncated') AS BOOL) AS tableDataReadCategoriesTruncated,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.reason') AS tableDataReadReason,\n+     JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName') AS tableDataReadJobName,\n+     JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.sessionName') AS tableDataReadSessionName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDataChange: Table data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledatachange\n+ */\n+tableDataChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDataChange.jobName'),\n+      \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataChange.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.deletedRowsCount') AS tableDataChangeDeletedRowsCount,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.insertedRowsCount') AS tableDataChangeInsertedRowsCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.truncated') AS BOOL) AS tableDataChangeTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.reason') AS tableDataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.jobName') AS tableDataChangeJobName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+)\n+ -- End of WITH clauses\n+SELECT\n+  principalEmail,\n+  callerIp,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ac5055e9cc0c3003b2781ef8d219cb1e1f1ee9b"}, "originalPosition": 309}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTM1MzAxOnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_elt_script_logging.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxODo0NTozMVrOG98_fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxODo0NTozMVrOG98_fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYxNTYxMg==", "bodyText": "Remove coalesce as it's redundant", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r467615612", "createdAt": "2020-08-09T18:45:31Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,525 @@\n+CREATE OR REPLACE VIEW `project_id.dataset_id.view_name` AS (\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.requestMetadata.callerIp') AS callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    CONCAT(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName') AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.jobState') AS jobStatusJobState,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult'),\"/\")[SAFE_OFFSET(1)],\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.code') AS jobStatusErrorResultCode,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.message') AS jobStatusErrorResultMessage,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.details') AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime')) AS jobStatsCreateTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime')) AS jobStatsStartTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.endTime')) AS jobStatsEndTime,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.totalSlotMs') AS INT64) AS jobStatsTotalSlotMs,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"slotMs\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalProcessedBytes') AS queryJobStatsTotalProcessedBytes,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64) AS queryJobStatsTotalBilledBytes,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.billingTier') AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.referencedTables'),\n+      '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedViews'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedRoutines'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.outputRowCount') AS queryJobStatsOutputRowCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.cacheHit') AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.startTime')),\n+      MILLISECOND) AS jobStatsRuntimeMs,\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.startTime')),\n+      SECOND) AS jobStatsRuntimeSecs,\n+    CAST(CEILING(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND) / 60 ) AS INT64) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.query') AS queryConfigQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.queryTruncated') AS BOOL) AS queryConfigQueryTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable') AS queryConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.createDisposition') AS queryConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.writeDisposition') AS queryConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.defaultDataset') AS queryConfigDefaultDataset,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS tableDefinitionsName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"sourceUris\":\\\"(.*?)\\\"}') AS tableDefinitionsSourceUris,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority') AS queryConfigPriority,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName') AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType') AS queryConfigStatementType,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(1)] AS queryConfigDestinationTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(3)] AS queryConfigDestinationTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+       \"/\")[SAFE_OFFSET(5)] AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.sourceUris'),\n+      '[\"'), '\"]'), '\",\"') AS loadConfigSourceUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceUrisTruncated') AS BOOL) AS loadConfigSourceUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson') AS loadConfigSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL) AS loadConfigSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable') AS loadConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition') AS loadConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition') AS loadConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName') AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+      '[\"'), '\"]'), '\",\"') AS extractConfigDestinationUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated') AS BOOL) AS extractConfigDestinationUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable') AS extractConfigSourceTable,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(1)] AS extractConfigSourceTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(3)] AS extractConfigSourceTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(5)] AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+      '[\"'),'\"]') ,'\",\"') AS tableCopySourceTables,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated') \n+      AS BOOL) AS tableCopyConfigSourceTablesTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable') AS tableCopyConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.createDisposition') AS tableCopyConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.writeDisposition') AS tableCopyConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName') AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)] AS tableCopyConfigProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)]  AS tableCopyConfigDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)] AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.table.reason') AS tableDeletionReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_system_event`\n+),\n+/*\n+ * TableDataRead: Data from tableDataRead audit logs\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n+ */\n+tableDataReadEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    SPLIT(TRIM(TRIM(\n+      COALESCE(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ac5055e9cc0c3003b2781ef8d219cb1e1f1ee9b"}, "originalPosition": 256}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMTM3MTIwOnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_elt_script_logging.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wOVQxOTowODoxNFrOG99H9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMjoyNjo1M1rOG-mI1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYxNzc4MA==", "bodyText": "Turns out tableDataReadEvents have an row entry for each table that a job reads. We have to tweak this and any other metadata events that are similar. Below shows an example of pulling all rows into one.\n/*\n\nTableDataRead: Data from tableDataRead audit logs\nhttps://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n*/\ntableDataReadEvent AS (\nSELECT\nCONCAT(\nSPLIT(\nJSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n'$.tableDataRead.jobName'),\n\"/\")[SAFE_OFFSET(1)],\n\":\",\nSPLIT(\nJSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n'$.tableDataRead.jobName'),\n\"/\")[SAFE_OFFSET(3)]\n) AS jobId,\nARRAY_AGG(protopayload_auditlog.resourceName IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableName,\nARRAY_AGG(STRUCT(SPLIT(TRIM(TRIM(\nJSON_EXTRACT(protopayload_auditlog.metadataJson,\n'$.tableDataRead.fields'),\n'[\"'),'\"]'),'\",\"') AS fields) IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadFields,\nARRAY_AGG(CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n'$.tableDataRead.fieldsTruncated') AS BOOL) IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadFieldsTruncated,\nARRAY_AGG(STRUCT(SPLIT(TRIM(TRIM(\nJSON_EXTRACT(protopayload_auditlog.metadataJson,\n'$.tableDataRead.categories'),\n'[\"'),'\"]'),'\",\"') AS categories) IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadCategories,\nARRAY_AGG(CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n'$.tableDataRead.categoriesTruncated') AS BOOL) IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadCategoriesTruncated,\nARRAY_AGG(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n'$.tableDataRead.reason') IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadReason,\nARRAY_AGG(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n'$.tableDataRead.jobName') IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadJobName,\nARRAY_AGG(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n'$.tableDataRead.sessionName') IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadSessionName,\nFROM project_id.dataset_id.cloudaudit_googleapis_com_data_access\nGROUP BY 1\n),", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r467617780", "createdAt": "2020-08-09T19:08:14Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,525 @@\n+CREATE OR REPLACE VIEW `project_id.dataset_id.view_name` AS (\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.requestMetadata.callerIp') AS callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    CONCAT(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName') AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.jobState') AS jobStatusJobState,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult'),\"/\")[SAFE_OFFSET(1)],\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.code') AS jobStatusErrorResultCode,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.message') AS jobStatusErrorResultMessage,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.details') AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime')) AS jobStatsCreateTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime')) AS jobStatsStartTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.endTime')) AS jobStatsEndTime,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.totalSlotMs') AS INT64) AS jobStatsTotalSlotMs,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"slotMs\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalProcessedBytes') AS queryJobStatsTotalProcessedBytes,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64) AS queryJobStatsTotalBilledBytes,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.billingTier') AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.referencedTables'),\n+      '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedViews'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedRoutines'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.outputRowCount') AS queryJobStatsOutputRowCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.cacheHit') AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.startTime')),\n+      MILLISECOND) AS jobStatsRuntimeMs,\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.startTime')),\n+      SECOND) AS jobStatsRuntimeSecs,\n+    CAST(CEILING(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND) / 60 ) AS INT64) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.query') AS queryConfigQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.queryTruncated') AS BOOL) AS queryConfigQueryTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable') AS queryConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.createDisposition') AS queryConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.writeDisposition') AS queryConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.defaultDataset') AS queryConfigDefaultDataset,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS tableDefinitionsName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"sourceUris\":\\\"(.*?)\\\"}') AS tableDefinitionsSourceUris,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority') AS queryConfigPriority,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName') AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType') AS queryConfigStatementType,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(1)] AS queryConfigDestinationTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(3)] AS queryConfigDestinationTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+       \"/\")[SAFE_OFFSET(5)] AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.sourceUris'),\n+      '[\"'), '\"]'), '\",\"') AS loadConfigSourceUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceUrisTruncated') AS BOOL) AS loadConfigSourceUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson') AS loadConfigSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL) AS loadConfigSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable') AS loadConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition') AS loadConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition') AS loadConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName') AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+      '[\"'), '\"]'), '\",\"') AS extractConfigDestinationUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated') AS BOOL) AS extractConfigDestinationUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable') AS extractConfigSourceTable,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(1)] AS extractConfigSourceTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(3)] AS extractConfigSourceTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(5)] AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+      '[\"'),'\"]') ,'\",\"') AS tableCopySourceTables,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated') \n+      AS BOOL) AS tableCopyConfigSourceTablesTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable') AS tableCopyConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.createDisposition') AS tableCopyConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.writeDisposition') AS tableCopyConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName') AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)] AS tableCopyConfigProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)]  AS tableCopyConfigDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)] AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.table.reason') AS tableDeletionReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_system_event`\n+),\n+/*\n+ * TableDataRead: Data from tableDataRead audit logs\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n+ */\n+tableDataReadEvent AS (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ac5055e9cc0c3003b2781ef8d219cb1e1f1ee9b"}, "originalPosition": 242}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI4OTc0OQ==", "bodyText": "In the example you gave, I think we need to group \"ARRAY_AGG(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n'$.tableDataRead.jobName') IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadJobName\" as well right?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r468289749", "createdAt": "2020-08-11T02:26:53Z", "author": {"login": "NamrataShah5"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,525 @@\n+CREATE OR REPLACE VIEW `project_id.dataset_id.view_name` AS (\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.requestMetadata.callerIp') AS callerIp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    CONCAT(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName') AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.jobState') AS jobStatusJobState,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult'),\"/\")[SAFE_OFFSET(1)],\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.code') AS jobStatusErrorResultCode,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.message') AS jobStatusErrorResultMessage,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.details') AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime')) AS jobStatsCreateTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime')) AS jobStatsStartTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.endTime')) AS jobStatsEndTime,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.totalSlotMs') AS INT64) AS jobStatsTotalSlotMs,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"slotMs\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalProcessedBytes') AS queryJobStatsTotalProcessedBytes,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64) AS queryJobStatsTotalBilledBytes,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.billingTier') AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.referencedTables'),\n+      '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedViews'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedRoutines'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.outputRowCount') AS queryJobStatsOutputRowCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.cacheHit') AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.startTime')),\n+      MILLISECOND) AS jobStatsRuntimeMs,\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.startTime')),\n+      SECOND) AS jobStatsRuntimeSecs,\n+    CAST(CEILING(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND) / 60 ) AS INT64) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.query') AS queryConfigQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.queryTruncated') AS BOOL) AS queryConfigQueryTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable') AS queryConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.createDisposition') AS queryConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.writeDisposition') AS queryConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.defaultDataset') AS queryConfigDefaultDataset,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS tableDefinitionsName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"sourceUris\":\\\"(.*?)\\\"}') AS tableDefinitionsSourceUris,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority') AS queryConfigPriority,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName') AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType') AS queryConfigStatementType,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(1)] AS queryConfigDestinationTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(3)] AS queryConfigDestinationTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+       \"/\")[SAFE_OFFSET(5)] AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.sourceUris'),\n+      '[\"'), '\"]'), '\",\"') AS loadConfigSourceUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceUrisTruncated') AS BOOL) AS loadConfigSourceUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson') AS loadConfigSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL) AS loadConfigSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable') AS loadConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition') AS loadConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition') AS loadConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName') AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+      '[\"'), '\"]'), '\",\"') AS extractConfigDestinationUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated') AS BOOL) AS extractConfigDestinationUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable') AS extractConfigSourceTable,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(1)] AS extractConfigSourceTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(3)] AS extractConfigSourceTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(5)] AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+      '[\"'),'\"]') ,'\",\"') AS tableCopySourceTables,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated') \n+      AS BOOL) AS tableCopyConfigSourceTablesTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable') AS tableCopyConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.createDisposition') AS tableCopyConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.writeDisposition') AS tableCopyConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName') AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)] AS tableCopyConfigProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)]  AS tableCopyConfigDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)] AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.table.reason') AS tableDeletionReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_system_event`\n+),\n+/*\n+ * TableDataRead: Data from tableDataRead audit logs\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n+ */\n+tableDataReadEvent AS (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzYxNzc4MA=="}, "originalCommit": {"oid": "6ac5055e9cc0c3003b2781ef8d219cb1e1f1ee9b"}, "originalPosition": 242}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjI1MTQ1OnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_elt_script_logging.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNTo1Nzo0MFrOHCbPJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNTo1Nzo0MFrOHCbPJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwNTQ0NQ==", "bodyText": "give the view a more useful name, one which users would likely keep. e.g. \"bq_scripting_logs\"", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r472305445", "createdAt": "2020-08-18T15:57:40Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,533 @@\n+CREATE OR REPLACE VIEW `project_id.dataset_id.view_name` AS (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "229496eaba78d55db4ed014653887362807674c3"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjI1NTM2OnYy", "diffSide": "RIGHT", "path": "views/audit/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNTo1ODozNFrOHCbRhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNTo1ODozNFrOHCbRhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwNjA1NQ==", "bodyText": "for scripts that use reservations", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r472306055", "createdAt": "2020-08-18T15:58:34Z", "author": {"login": "danieldeleo"}, "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,119 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [big_query_elt_script_logging.sql](/views/audit/big_query_elt_script_logging.sql)\n+\n+A common pattern in data warehousing for tracking results of DML statements is to collect system variable values after each DML statement and write them to a separate logging table. With BigQuery, you no longer have to log your SQL statement results because Cloud Logging allows you to store, search, analyze, monitor, and set alerts on all your BigQuery scripting activity. The new version of Cloud Logging logs for BigQuery, BigQueryAuditMetadata, provides rich insights into the execution of your scripts. This data can give you insight into your script performance, modifications of your data, and more. This is a BigQuery SELECT statement that has extracted and formatted BigQueryMetaData events, allowing you to write simple queries to monitor your BigQuery jobs.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+        gcloud alpha logging sinks create my-example-sink \\ \n+        bigquery.googleapis.com/projects/my-project-id/datasets/auditlog_dataset \\\n+        --log-filter='protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobChange.job.jobConfig.queryConfig.statementType=\"SCRIPT\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason=\"QUERY\")' \\ \n+        --use-partitioned-tables\n+        ``` \n+        Note: gcloud **alpha** is needed in order to use the parameter `--use-partitioned-tables` \n+    *   [Cloud Console Logs Viewer](https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create)\n+        Use this filter:\n+        #### protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobChange.job.jobConfig.queryConfig.statementType=\"SCRIPT\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason!=\"\" OR protoPayload.metadata.tableDataRead.reason!=\"\"  OR protoPayload.metadata.tableDeletion.reason!=\"\" )\n+        *   [Partitioning](https://cloud.google.com/logging/docs/export/bigquery#partition-tables)\n+            is not required, but it is strongly recommended to select it for your BigQuery destination\n+            \n+    Note: You can create a log sink at the folder, billing account, or organization level using an \n+    [aggregated sink](https://cloud.google.com/logging/docs/export/aggregated_sinks#creating_an_aggregated_sink).\n+1.  The log sink will immediately create the BigQuery dataset but the table will\n+    be created once you run a BigQuery job post log sink creation.\n+1.  To use the SELECT statement in\n+    [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql), change\n+    all occurrences of\n+    `project_id.dataset_id.cloudaudit_googleapis_com_data_access` to be the full\n+    table path you created in step 1.\n+    *   `sed\n+        's/project_id.dataset_id.cloudaudit_googleapis_com_data_access/YOUR_PROJECT.YOUR_DATASET.YOUR_TABLE/'\n+        big_query_elt_audit_log_v2.sql`\n+1.  From here, you can do further analysis in BigQuery by querying the view, or\n+    you can connect it to a BI tool such as DataStudio as a data source and\n+    build dashboards.\n+    \n+#### Usage Examples\n+Change all occurrences of `YOUR_VIEW` to the full path to the view. \n+\n+* Run this query to see job name, query, total number of billed bytes, job creation time, job start time, job end time, job runtime, and count of inserted rows and deleted rows for DML queries in a script.\n+  \n+  \n+  ```  \n+  SELECT \n+   COALESCE(jobChange.jobStats.parentJobName, jobId) AS common_script_job_id,\n+   jobChange.jobConfig.queryConfig.query,\n+   jobChange.jobStats.queryStats.totalBilledBytes,\n+   jobChange.jobConfig.queryConfig.statementType,\n+   jobChange.jobStats.createTime,\n+   jobChange.jobStats.startTime,\n+   jobChange.jobStats.endTime,\n+   jobRuntimeMs,\n+   tableDataChange.deletedRowsCount,\n+   tableDataChange.insertedRowsCount,\n+  FROM YOUR_VIEW \n+  WHERE \n+  hasJobChangeEvent AND\n+  hasTableDataChangeEvent AND\n+  (jobChange.jobStats.parentJobName IS NOT NULL OR jobChange.jobConfig.queryConfig.statementType = 'SCRIPT')\n+  ORDER BY \n+   jobChange.jobStats.startTime DESC,\n+   common_script_job_id\n+   \n+  ```\n+\n+* Run this query to see job name, query, total number of billed bytes, job creation time, job start time, job end time, and job runtime table read queries in a script.\n+\n+```  \n+  SELECT \n+   COALESCE(jobChange.jobStats.parentJobName, jobId) AS common_script_job_id,\n+   jobChange.jobConfig.queryConfig.query,\n+   jobChange.jobStats.queryStats.totalBilledBytes,\n+   jobChange.jobConfig.queryConfig.statementType,\n+   jobChange.jobStats.createTime,\n+   jobChange.jobStats.startTime,\n+   jobChange.jobStats.endTime,\n+   jobRuntimeMs,\n+  FROM YOUR_VIEW \n+  WHERE \n+  hasJobChangeEvent AND \n+  hasTableDataReadEvent AND\n+  (jobChange.jobStats.parentJobName IS NOT NULL OR jobChange.jobConfig.queryConfig.statementType = 'SCRIPT')\n+  ORDER BY \n+   jobChange.jobStats.startTime DESC,\n+   common_script_job_id\n+   \n+  ```\n+\n+* Run this query to see slot usage for query that uses reservations.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "229496eaba78d55db4ed014653887362807674c3"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjI3NDU1OnYy", "diffSide": "RIGHT", "path": "views/audit/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjowMzoxOVrOHCbd1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjowNDoxMFrOHCbgEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwOTIwNw==", "bodyText": "Better descriptions needed for these usage examples. Don't list out columns being read in the description, but rather explain concisely what this is useful for.\ne.g. Execute the following query to list out all scripts which modified data in tables.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r472309207", "createdAt": "2020-08-18T16:03:19Z", "author": {"login": "danieldeleo"}, "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,119 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [big_query_elt_script_logging.sql](/views/audit/big_query_elt_script_logging.sql)\n+\n+A common pattern in data warehousing for tracking results of DML statements is to collect system variable values after each DML statement and write them to a separate logging table. With BigQuery, you no longer have to log your SQL statement results because Cloud Logging allows you to store, search, analyze, monitor, and set alerts on all your BigQuery scripting activity. The new version of Cloud Logging logs for BigQuery, BigQueryAuditMetadata, provides rich insights into the execution of your scripts. This data can give you insight into your script performance, modifications of your data, and more. This is a BigQuery SELECT statement that has extracted and formatted BigQueryMetaData events, allowing you to write simple queries to monitor your BigQuery jobs.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+        gcloud alpha logging sinks create my-example-sink \\ \n+        bigquery.googleapis.com/projects/my-project-id/datasets/auditlog_dataset \\\n+        --log-filter='protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobChange.job.jobConfig.queryConfig.statementType=\"SCRIPT\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason=\"QUERY\")' \\ \n+        --use-partitioned-tables\n+        ``` \n+        Note: gcloud **alpha** is needed in order to use the parameter `--use-partitioned-tables` \n+    *   [Cloud Console Logs Viewer](https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create)\n+        Use this filter:\n+        #### protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobChange.job.jobConfig.queryConfig.statementType=\"SCRIPT\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason!=\"\" OR protoPayload.metadata.tableDataRead.reason!=\"\"  OR protoPayload.metadata.tableDeletion.reason!=\"\" )\n+        *   [Partitioning](https://cloud.google.com/logging/docs/export/bigquery#partition-tables)\n+            is not required, but it is strongly recommended to select it for your BigQuery destination\n+            \n+    Note: You can create a log sink at the folder, billing account, or organization level using an \n+    [aggregated sink](https://cloud.google.com/logging/docs/export/aggregated_sinks#creating_an_aggregated_sink).\n+1.  The log sink will immediately create the BigQuery dataset but the table will\n+    be created once you run a BigQuery job post log sink creation.\n+1.  To use the SELECT statement in\n+    [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql), change\n+    all occurrences of\n+    `project_id.dataset_id.cloudaudit_googleapis_com_data_access` to be the full\n+    table path you created in step 1.\n+    *   `sed\n+        's/project_id.dataset_id.cloudaudit_googleapis_com_data_access/YOUR_PROJECT.YOUR_DATASET.YOUR_TABLE/'\n+        big_query_elt_audit_log_v2.sql`\n+1.  From here, you can do further analysis in BigQuery by querying the view, or\n+    you can connect it to a BI tool such as DataStudio as a data source and\n+    build dashboards.\n+    \n+#### Usage Examples\n+Change all occurrences of `YOUR_VIEW` to the full path to the view. \n+\n+* Run this query to see job name, query, total number of billed bytes, job creation time, job start time, job end time, job runtime, and count of inserted rows and deleted rows for DML queries in a script.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "229496eaba78d55db4ed014653887362807674c3"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwOTc3Ng==", "bodyText": "Focus on explaining the WHERE filters you're using as well as the ORDER BY", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r472309776", "createdAt": "2020-08-18T16:04:10Z", "author": {"login": "danieldeleo"}, "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,119 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [big_query_elt_script_logging.sql](/views/audit/big_query_elt_script_logging.sql)\n+\n+A common pattern in data warehousing for tracking results of DML statements is to collect system variable values after each DML statement and write them to a separate logging table. With BigQuery, you no longer have to log your SQL statement results because Cloud Logging allows you to store, search, analyze, monitor, and set alerts on all your BigQuery scripting activity. The new version of Cloud Logging logs for BigQuery, BigQueryAuditMetadata, provides rich insights into the execution of your scripts. This data can give you insight into your script performance, modifications of your data, and more. This is a BigQuery SELECT statement that has extracted and formatted BigQueryMetaData events, allowing you to write simple queries to monitor your BigQuery jobs.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+        gcloud alpha logging sinks create my-example-sink \\ \n+        bigquery.googleapis.com/projects/my-project-id/datasets/auditlog_dataset \\\n+        --log-filter='protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobChange.job.jobConfig.queryConfig.statementType=\"SCRIPT\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason=\"QUERY\")' \\ \n+        --use-partitioned-tables\n+        ``` \n+        Note: gcloud **alpha** is needed in order to use the parameter `--use-partitioned-tables` \n+    *   [Cloud Console Logs Viewer](https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create)\n+        Use this filter:\n+        #### protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobChange.job.jobConfig.queryConfig.statementType=\"SCRIPT\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason!=\"\" OR protoPayload.metadata.tableDataRead.reason!=\"\"  OR protoPayload.metadata.tableDeletion.reason!=\"\" )\n+        *   [Partitioning](https://cloud.google.com/logging/docs/export/bigquery#partition-tables)\n+            is not required, but it is strongly recommended to select it for your BigQuery destination\n+            \n+    Note: You can create a log sink at the folder, billing account, or organization level using an \n+    [aggregated sink](https://cloud.google.com/logging/docs/export/aggregated_sinks#creating_an_aggregated_sink).\n+1.  The log sink will immediately create the BigQuery dataset but the table will\n+    be created once you run a BigQuery job post log sink creation.\n+1.  To use the SELECT statement in\n+    [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql), change\n+    all occurrences of\n+    `project_id.dataset_id.cloudaudit_googleapis_com_data_access` to be the full\n+    table path you created in step 1.\n+    *   `sed\n+        's/project_id.dataset_id.cloudaudit_googleapis_com_data_access/YOUR_PROJECT.YOUR_DATASET.YOUR_TABLE/'\n+        big_query_elt_audit_log_v2.sql`\n+1.  From here, you can do further analysis in BigQuery by querying the view, or\n+    you can connect it to a BI tool such as DataStudio as a data source and\n+    build dashboards.\n+    \n+#### Usage Examples\n+Change all occurrences of `YOUR_VIEW` to the full path to the view. \n+\n+* Run this query to see job name, query, total number of billed bytes, job creation time, job start time, job end time, job runtime, and count of inserted rows and deleted rows for DML queries in a script.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwOTIwNw=="}, "originalCommit": {"oid": "229496eaba78d55db4ed014653887362807674c3"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjI4NzE1OnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_elt_script_logging.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjowNjozNFrOHCbmHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjowNjozNFrOHCbmHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMxMTMyNQ==", "bodyText": "keep here as \"timestamp\" only. You alias it in the SELECT below", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r472311325", "createdAt": "2020-08-18T16:06:34Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,533 @@\n+CREATE OR REPLACE VIEW `project_id.dataset_id.view_name` AS (\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.requestMetadata.callerIp') AS callerIp,\n+    timestamp as eventTimestamp,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "229496eaba78d55db4ed014653887362807674c3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjM1MDQ5OnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_elt_script_logging.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjoyMjozN1rOHCcOIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNjoyMjozN1rOHCcOIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMyMTU3MQ==", "bodyText": "pull this from activity table. refer to my PR for the change", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r472321571", "createdAt": "2020-08-18T16:22:37Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,533 @@\n+CREATE OR REPLACE VIEW `project_id.dataset_id.bq_script_logs` AS (\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.requestMetadata.callerIp') AS callerIp,\n+    timestamp as eventTimestamp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    CONCAT(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName') AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.jobState') AS jobStatusJobState,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult'),\"/\")[SAFE_OFFSET(1)],\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.code') AS jobStatusErrorResultCode,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.message') AS jobStatusErrorResultMessage,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.details') AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime')) AS jobStatsCreateTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime')) AS jobStatsStartTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.endTime')) AS jobStatsEndTime,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.totalSlotMs') AS INT64) AS jobStatsTotalSlotMs,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"slotMs\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalProcessedBytes') AS queryJobStatsTotalProcessedBytes,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64) AS queryJobStatsTotalBilledBytes,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.billingTier') AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.referencedTables'),\n+      '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedViews'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedRoutines'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.outputRowCount') AS queryJobStatsOutputRowCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.cacheHit') AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.startTime')),\n+      MILLISECOND) AS jobStatsRuntimeMs,\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.startTime')),\n+      SECOND) AS jobStatsRuntimeSecs,\n+    CAST(CEILING(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND) / 60 ) AS INT64) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.query') AS queryConfigQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.queryTruncated') AS BOOL) AS queryConfigQueryTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable') AS queryConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.createDisposition') AS queryConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.writeDisposition') AS queryConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.defaultDataset') AS queryConfigDefaultDataset,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS tableDefinitionsName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"sourceUris\":\\\"(.*?)\\\"}') AS tableDefinitionsSourceUris,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority') AS queryConfigPriority,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName') AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType') AS queryConfigStatementType,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(1)] AS queryConfigDestinationTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(3)] AS queryConfigDestinationTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+       \"/\")[SAFE_OFFSET(5)] AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.sourceUris'),\n+      '[\"'), '\"]'), '\",\"') AS loadConfigSourceUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceUrisTruncated') AS BOOL) AS loadConfigSourceUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson') AS loadConfigSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL) AS loadConfigSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable') AS loadConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition') AS loadConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition') AS loadConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName') AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+      '[\"'), '\"]'), '\",\"') AS extractConfigDestinationUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated') AS BOOL) AS extractConfigDestinationUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable') AS extractConfigSourceTable,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(1)] AS extractConfigSourceTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(3)] AS extractConfigSourceTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(5)] AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+      '[\"'),'\"]') ,'\",\"') AS tableCopySourceTables,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated') \n+      AS BOOL) AS tableCopyConfigSourceTablesTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable') AS tableCopyConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.createDisposition') AS tableCopyConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.writeDisposition') AS tableCopyConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName') AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)] AS tableCopyConfigProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)]  AS tableCopyConfigDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)] AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.reason') AS tableDeletionReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_system_event`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7477c5c65f0345dce1a1c5f21d1bf8e4dac306d"}, "originalPosition": 237}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjg3MDEyOnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_elt_script_logging.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0MzowN1rOHChV2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0MzowN1rOHChV2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwNTQ2Nw==", "bodyText": "bigquery-utils/views/audit/bigquery_audit_log_v2.sql\n    \n    \n         Line 659\n      in\n      91dfd4a\n    \n    \n    \n    \n\n        \n          \n           parentJobId, \n        \n    \n  \n\n\nAdd parentJobId as a field below jobId", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r472405467", "createdAt": "2020-08-18T18:43:07Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,533 @@\n+CREATE OR REPLACE VIEW `project_id.dataset_id.bq_script_logs` AS (\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.requestMetadata.callerIp') AS callerIp,\n+    timestamp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    CONCAT(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName') AS jobChangeJobName,\n+    /*\n+     * JobStatus: Running state of a job\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstatus\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.jobState') AS jobStatusJobState,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult'),\"/\")[SAFE_OFFSET(1)],\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.code') AS jobStatusErrorResultCode,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.message') AS jobStatusErrorResultMessage,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStatus.errorResult.details') AS jobStatusErrorResultDetails,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"message\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorMessages,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStatus.errors'),r'\"code\":\\\"(.*?)\\\"}'\n+    ) AS jobStatusEncounteredErrorCodes,\n+    /*\n+     * JobStats: Job statistics that may change after job starts.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#jobstats\n+     */\n+    JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.parentJobName') AS jobStatsParentJobName,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.createTime')) AS jobStatsCreateTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(\n+      protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.startTime')) AS jobStatsStartTime,\n+    TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.endTime')) AS jobStatsEndTime,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.totalSlotMs') AS INT64) AS jobStatsTotalSlotMs,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobStats.reservationUsage'),\n+      r'\"slotMs\":\\\"(.*?)\\\"}') AS jobStatsReservationUsageSlotMs,\n+    /*\n+     * Query: Query job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query_1\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalProcessedBytes') AS queryJobStatsTotalProcessedBytes,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.totalBilledBytes') AS INT64) AS queryJobStatsTotalBilledBytes,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.billingTier') AS queryJobStatsBillingTier,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.referencedTables'),\n+      '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedTables,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedViews'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedViews,\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.queryStats.referencedRoutines'),\n+       '[\"'), '\"]'), '\",\"') AS queryJobStatsReferencedRoutines,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.outputRowCount') AS queryJobStatsOutputRowCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.queryStats.cacheHit') AS BOOL) AS queryJobStatsCacheHit,\n+    /*\n+     * Load: Load job statistics\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load_1\n+     */\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobStats.loadStats.totalOutputBytes') AS INT64 ) AS loadJobStatsTotalOutputBytes,\n+    /*\n+     * JobStats convenience custom fields\n+     */\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobStats.startTime')),\n+      MILLISECOND) AS jobStatsRuntimeMs,\n+    TIMESTAMP_DIFF(\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.endTime')),\n+      TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobStats.startTime')),\n+      SECOND) AS jobStatsRuntimeSecs,\n+    CAST(CEILING(\n+      TIMESTAMP_DIFF(\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.endTime')),\n+        TIMESTAMP(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.jobChange.job.jobStats.startTime')),\n+        SECOND) / 60 ) AS INT64) AS jobStatsExecutionMinuteBuckets,\n+    /*\n+     * Describes a query job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#query\n+     */\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.query') AS queryConfigQuery,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.queryTruncated') AS BOOL) AS queryConfigQueryTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable') AS queryConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.createDisposition') AS queryConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.writeDisposition') AS queryConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.defaultDataset') AS queryConfigDefaultDataset,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"name\":\\\"(.*?)\\\"}') AS tableDefinitionsName,\n+    REGEXP_EXTRACT_ALL(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,'$.jobChange.job.jobConfig.queryConfig.tableDefinitions'),\n+      r'\"sourceUris\":\\\"(.*?)\\\"}') AS tableDefinitionsSourceUris,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.priority') AS queryConfigPriority,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.destinationTableEncryption.kmsKeyName') AS queryConfigDestinationTableEncryptionKmsKeyName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.queryConfig.statementType') AS queryConfigStatementType,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(1)] AS queryConfigDestinationTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+      \"/\")[SAFE_OFFSET(3)] AS queryConfigDestinationTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+       '$.jobChange.job.jobConfig.queryConfig.destinationTable'),\n+       \"/\")[SAFE_OFFSET(5)] AS queryConfigDestinationTableId,\n+    /*\n+     * Describes a load job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#load\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.sourceUris'),\n+      '[\"'), '\"]'), '\",\"') AS loadConfigSourceUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+        '$.jobChange.job.jobConfig.extractConfig.sourceUrisTruncated') AS BOOL) AS loadConfigSourceUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJson') AS loadConfigSchemaJson,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.schemaJsonUrisTruncated') AS BOOL) AS loadConfigSchemaJsonTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTable') AS loadConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.createDisposition') AS loadConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.writeDisposition') AS loadConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.loadConfig.destinationTableEncryption.kmsKeyName') AS loadConfigDestinationTableEncryptionKmsKeyName,\n+    /*\n+     * Describes an extract job.\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#extract\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUris'),\n+      '[\"'), '\"]'), '\",\"') AS extractConfigDestinationUris,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.destinationUrisTruncated') AS BOOL) AS extractConfigDestinationUrisTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable') AS extractConfigSourceTable,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(1)] AS extractConfigSourceTableProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(3)] AS extractConfigSourceTableDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.extractConfig.sourceTable'),\n+      \",\")[SAFE_OFFSET(5)] AS extractConfigSourceTableId,\n+    /*\n+     * Describes a copy job, which copies an existing table to another table\n+     * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tablecopy\n+     */\n+    SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTables'),\n+      '[\"'),'\"]') ,'\",\"') AS tableCopySourceTables,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.sourceTablesTruncated') \n+      AS BOOL) AS tableCopyConfigSourceTablesTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable') AS tableCopyConfigDestinationTable,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.createDisposition') AS tableCopyConfigCreateDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.writeDisposition') AS tableCopyConfigWriteDisposition,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTableEncryption.kmsKeyName') AS tableCopyConfigDestinationTableEncryptionKmsKeyName,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(1)] AS tableCopyConfigProjectId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(2)]  AS tableCopyConfigDatasetId,\n+    SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.jobChange.job.jobConfig.tableCopyConfig.destinationTable'),\n+      \".\")[SAFE_OFFSET(3)] AS tableCopyConfigTableId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.before') AS jobChangeBefore,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.after') AS jobChangeAfter,\n+    REGEXP_EXTRACT(protopayload_auditlog.metadataJson, r'BigQueryAuditMetadata\",\"(.*?)\":') AS eventName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+),\n+/*\n+ * TableDeletion: Table deletion event\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledeletion\n+ */\n+tableDeletionEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+      ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDeletion.jobName') AS tableDeletionJobName,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDeletion.reason') AS tableDeletionReason,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_activity`\n+),\n+/*\n+ * TableDataRead: Data from tableDataRead audit logs\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledataread\n+ */\n+tableDataReadEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+            '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataRead.jobName'),\n+            \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    ARRAY_AGG(\n+      protopayload_auditlog.resourceName\n+      IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadTableName,\n+    ARRAY_AGG(STRUCT(\n+      SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson, '$.tableDataRead.fields'),\n+      '[\"'),'\"]'),'\",\"')\n+      AS fields) IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadFields,\n+    ARRAY_AGG(\n+      CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson, '$.tableDataRead.fieldsTruncated') AS BOOL)\n+      IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadFieldsTruncated,\n+    ARRAY_AGG(STRUCT(\n+      SPLIT(TRIM(TRIM(JSON_EXTRACT(protopayload_auditlog.metadataJson,'$.tableDataRead.categories'),\n+      '[\"'),'\"]'),'\",\"')\n+      AS categories) IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadCategories,\n+    ARRAY_AGG(\n+      CAST(JSON_EXTRACT(protopayload_auditlog.metadataJson, '$.tableDataRead.categoriesTruncated') AS BOOL)\n+      IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadCategoriesTruncated,\n+    ARRAY_AGG(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson, '$.tableDataRead.reason')\n+      IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadReason,\n+    ARRAY_AGG(\n+      JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDataRead.jobName')\n+      IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadJobName,\n+    ARRAY_AGG(\n+      JSON_EXTRACT(protopayload_auditlog.metadataJson, '$.tableDataRead.sessionName')\n+      IGNORE NULLS ORDER BY protopayload_auditlog.resourceName) AS tableDataReadSessionName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+  GROUP BY jobId\n+),\n+/*\n+ * TableDataChange: Table data change event.\n+ * https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata#tabledatachange\n+ */\n+tableDataChangeEvent AS (\n+  SELECT\n+    CONCAT(\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.tableDataChange.jobName'),\n+      \"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(\n+        JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+          '$.tableDataChange.jobName'),\n+        \"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.deletedRowsCount') AS tableDataChangeDeletedRowsCount,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.insertedRowsCount') AS tableDataChangeInsertedRowsCount,\n+    CAST(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.truncated') AS BOOL) AS tableDataChangeTruncated,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.reason') AS tableDataChangeReason,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson,\n+      '$.tableDataChange.jobName') AS tableDataChangeJobName,\n+  FROM `project_id.dataset_id.cloudaudit_googleapis_com_data_access`\n+)\n+ -- End of WITH clauses\n+SELECT\n+  principalEmail,\n+  callerIp,\n+  timestamp as eventTimestamp,\n+  serviceName,\n+  methodName,\n+  eventName,\n+  projectId,\n+  jobId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d57fafb711a9007ddebb1650873d94a732ac4c"}, "originalPosition": 322}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjg3MjE0OnYy", "diffSide": "RIGHT", "path": "views/audit/big_query_elt_script_logging.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0Mzo0OVrOHChXNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0Mzo0OVrOHChXNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwNTgxMw==", "bodyText": "bigquery-utils/views/audit/bigquery_audit_log_v2.sql\n    \n    \n         Line 39\n      in\n      91dfd4a\n    \n    \n    \n    \n\n        \n          \n           CONCAT( \n        \n    \n  \n\n\nAdd parentJobId below", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r472405813", "createdAt": "2020-08-18T18:43:49Z", "author": {"login": "danieldeleo"}, "path": "views/audit/big_query_elt_script_logging.sql", "diffHunk": "@@ -0,0 +1,533 @@\n+CREATE OR REPLACE VIEW `project_id.dataset_id.bq_script_logs` AS (\n+WITH jobChangeEvent AS (\n+  SELECT\n+    protopayload_auditlog.authenticationInfo.principalEmail,\n+    resource.labels.project_id AS projectId,\n+    JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.requestMetadata.callerIp') AS callerIp,\n+    timestamp,\n+    protopayload_auditlog.serviceName,\n+    protopayload_auditlog.methodName,\n+    CONCAT(\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(1)],\n+      \":\",\n+      SPLIT(JSON_EXTRACT_SCALAR(protopayload_auditlog.metadataJson, '$.jobChange.job.jobName'),\"/\")[SAFE_OFFSET(3)]\n+    ) AS jobId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d57fafb711a9007ddebb1650873d94a732ac4c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjg5MDMwOnYy", "diffSide": "RIGHT", "path": "views/audit/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0OToxN1rOHChiqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOToyNzozOFrOHCi0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwODc0Ng==", "bodyText": "Remove DESC from ORDER BY", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r472408746", "createdAt": "2020-08-18T18:49:17Z", "author": {"login": "danieldeleo"}, "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,119 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [big_query_elt_script_logging.sql](/views/audit/big_query_elt_script_logging.sql)\n+\n+A common pattern in data warehousing for tracking results of DML statements is to collect system variable values after each DML statement and write them to a separate logging table. With BigQuery, you no longer have to log your SQL statement results because Cloud Logging allows you to store, search, analyze, monitor, and set alerts on all your BigQuery scripting activity. The new version of Cloud Logging logs for BigQuery, BigQueryAuditMetadata, provides rich insights into the execution of your scripts. This data can give you insight into your script performance, modifications of your data, and more. This is a BigQuery SELECT statement that has extracted and formatted BigQueryMetaData events, allowing you to write simple queries to monitor your BigQuery jobs.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+        gcloud alpha logging sinks create my-example-sink \\ \n+        bigquery.googleapis.com/projects/my-project-id/datasets/auditlog_dataset \\\n+        --log-filter='protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobChange.job.jobConfig.queryConfig.statementType=\"SCRIPT\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason=\"QUERY\")' \\ \n+        --use-partitioned-tables\n+        ``` \n+        Note: gcloud **alpha** is needed in order to use the parameter `--use-partitioned-tables` \n+    *   [Cloud Console Logs Viewer](https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create)\n+        Use this filter:\n+        #### protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobChange.job.jobConfig.queryConfig.statementType=\"SCRIPT\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason!=\"\" OR protoPayload.metadata.tableDataRead.reason!=\"\"  OR protoPayload.metadata.tableDeletion.reason!=\"\" )\n+        *   [Partitioning](https://cloud.google.com/logging/docs/export/bigquery#partition-tables)\n+            is not required, but it is strongly recommended to select it for your BigQuery destination\n+            \n+    Note: You can create a log sink at the folder, billing account, or organization level using an \n+    [aggregated sink](https://cloud.google.com/logging/docs/export/aggregated_sinks#creating_an_aggregated_sink).\n+1.  The log sink will immediately create the BigQuery dataset but the table will\n+    be created once you run a BigQuery job post log sink creation.\n+1.  To use the SELECT statement in\n+    [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql), change\n+    all occurrences of\n+    `project_id.dataset_id.cloudaudit_googleapis_com_data_access` to be the full\n+    table path you created in step 1.\n+    *   `sed\n+        's/project_id.dataset_id.cloudaudit_googleapis_com_data_access/YOUR_PROJECT.YOUR_DATASET.YOUR_TABLE/'\n+        big_query_elt_audit_log_v2.sql`\n+1.  From here, you can do further analysis in BigQuery by querying the view, or\n+    you can connect it to a BI tool such as DataStudio as a data source and\n+    build dashboards.\n+    \n+#### Usage Examples\n+Change all occurrences of `YOUR_VIEW` to the full path to the view. \n+\n+* Run this query to see a detailed list of scripts which modified tables. The results are ordered with the most recent script runs first, and then further ordering is applied using the script's job id.\n+  \n+  \n+  ```  \n+  SELECT \n+   COALESCE(jobChange.jobStats.parentJobName, jobId) AS common_script_job_id,\n+   jobChange.jobConfig.queryConfig.query,\n+   jobChange.jobStats.queryStats.totalBilledBytes,\n+   jobChange.jobConfig.queryConfig.statementType,\n+   jobChange.jobStats.createTime,\n+   jobChange.jobStats.startTime,\n+   jobChange.jobStats.endTime,\n+   jobRuntimeMs,\n+   tableDataChange.deletedRowsCount,\n+   tableDataChange.insertedRowsCount,\n+  FROM YOUR_VIEW \n+  WHERE \n+  hasJobChangeEvent AND\n+  hasTableDataChangeEvent AND\n+  (jobChange.jobStats.parentJobName IS NOT NULL OR jobChange.jobConfig.queryConfig.statementType = 'SCRIPT')\n+  ORDER BY \n+   jobChange.jobStats.startTime DESC,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d57fafb711a9007ddebb1650873d94a732ac4c"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyOTYxNw==", "bodyText": "Actually use this ordering instead:\nORDER BY\ncommon_script_job_id,\neventTimestamp DESC,\njobChange.jobStats.startTime", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r472429617", "createdAt": "2020-08-18T19:27:38Z", "author": {"login": "danieldeleo"}, "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,119 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [big_query_elt_script_logging.sql](/views/audit/big_query_elt_script_logging.sql)\n+\n+A common pattern in data warehousing for tracking results of DML statements is to collect system variable values after each DML statement and write them to a separate logging table. With BigQuery, you no longer have to log your SQL statement results because Cloud Logging allows you to store, search, analyze, monitor, and set alerts on all your BigQuery scripting activity. The new version of Cloud Logging logs for BigQuery, BigQueryAuditMetadata, provides rich insights into the execution of your scripts. This data can give you insight into your script performance, modifications of your data, and more. This is a BigQuery SELECT statement that has extracted and formatted BigQueryMetaData events, allowing you to write simple queries to monitor your BigQuery jobs.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+        gcloud alpha logging sinks create my-example-sink \\ \n+        bigquery.googleapis.com/projects/my-project-id/datasets/auditlog_dataset \\\n+        --log-filter='protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobChange.job.jobConfig.queryConfig.statementType=\"SCRIPT\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason=\"QUERY\")' \\ \n+        --use-partitioned-tables\n+        ``` \n+        Note: gcloud **alpha** is needed in order to use the parameter `--use-partitioned-tables` \n+    *   [Cloud Console Logs Viewer](https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create)\n+        Use this filter:\n+        #### protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobChange.job.jobConfig.queryConfig.statementType=\"SCRIPT\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason!=\"\" OR protoPayload.metadata.tableDataRead.reason!=\"\"  OR protoPayload.metadata.tableDeletion.reason!=\"\" )\n+        *   [Partitioning](https://cloud.google.com/logging/docs/export/bigquery#partition-tables)\n+            is not required, but it is strongly recommended to select it for your BigQuery destination\n+            \n+    Note: You can create a log sink at the folder, billing account, or organization level using an \n+    [aggregated sink](https://cloud.google.com/logging/docs/export/aggregated_sinks#creating_an_aggregated_sink).\n+1.  The log sink will immediately create the BigQuery dataset but the table will\n+    be created once you run a BigQuery job post log sink creation.\n+1.  To use the SELECT statement in\n+    [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql), change\n+    all occurrences of\n+    `project_id.dataset_id.cloudaudit_googleapis_com_data_access` to be the full\n+    table path you created in step 1.\n+    *   `sed\n+        's/project_id.dataset_id.cloudaudit_googleapis_com_data_access/YOUR_PROJECT.YOUR_DATASET.YOUR_TABLE/'\n+        big_query_elt_audit_log_v2.sql`\n+1.  From here, you can do further analysis in BigQuery by querying the view, or\n+    you can connect it to a BI tool such as DataStudio as a data source and\n+    build dashboards.\n+    \n+#### Usage Examples\n+Change all occurrences of `YOUR_VIEW` to the full path to the view. \n+\n+* Run this query to see a detailed list of scripts which modified tables. The results are ordered with the most recent script runs first, and then further ordering is applied using the script's job id.\n+  \n+  \n+  ```  \n+  SELECT \n+   COALESCE(jobChange.jobStats.parentJobName, jobId) AS common_script_job_id,\n+   jobChange.jobConfig.queryConfig.query,\n+   jobChange.jobStats.queryStats.totalBilledBytes,\n+   jobChange.jobConfig.queryConfig.statementType,\n+   jobChange.jobStats.createTime,\n+   jobChange.jobStats.startTime,\n+   jobChange.jobStats.endTime,\n+   jobRuntimeMs,\n+   tableDataChange.deletedRowsCount,\n+   tableDataChange.insertedRowsCount,\n+  FROM YOUR_VIEW \n+  WHERE \n+  hasJobChangeEvent AND\n+  hasTableDataChangeEvent AND\n+  (jobChange.jobStats.parentJobName IS NOT NULL OR jobChange.jobConfig.queryConfig.statementType = 'SCRIPT')\n+  ORDER BY \n+   jobChange.jobStats.startTime DESC,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwODc0Ng=="}, "originalCommit": {"oid": "39d57fafb711a9007ddebb1650873d94a732ac4c"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Mjg5MjQxOnYy", "diffSide": "RIGHT", "path": "views/audit/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0OTo1M1rOHChj-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxODo0OTo1M1rOHChj-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQwOTA4MA==", "bodyText": "once you add the parentJobId, use that in the COALESCE with jobId", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/56#discussion_r472409080", "createdAt": "2020-08-18T18:49:53Z", "author": {"login": "danieldeleo"}, "path": "views/audit/README.md", "diffHunk": "@@ -0,0 +1,119 @@\n+This directory contains helper SELECT statements to query BigQuery audit logs \\\n+More information regarding each is detailed below:\n+\n+\n+### [big_query_elt_script_logging.sql](/views/audit/big_query_elt_script_logging.sql)\n+\n+A common pattern in data warehousing for tracking results of DML statements is to collect system variable values after each DML statement and write them to a separate logging table. With BigQuery, you no longer have to log your SQL statement results because Cloud Logging allows you to store, search, analyze, monitor, and set alerts on all your BigQuery scripting activity. The new version of Cloud Logging logs for BigQuery, BigQueryAuditMetadata, provides rich insights into the execution of your scripts. This data can give you insight into your script performance, modifications of your data, and more. This is a BigQuery SELECT statement that has extracted and formatted BigQueryMetaData events, allowing you to write simple queries to monitor your BigQuery jobs.\n+\n+#### Prerequisites\n+\n+[BigQueryAuditMetadata](https://cloud.google.com/bigquery/docs/reference/auditlogs/rest/Shared.Types/BigQueryAuditMetadata)\n+\n+1.  Define a BigQuery log sink using any of the following methods:\n+    *   [gcloud command](https://cloud.google.com/bigquery/docs/reference/auditlogs#defining_a_bigquery_log_sink_using_gcloud)\n+        ```\n+        gcloud alpha logging sinks create my-example-sink \\ \n+        bigquery.googleapis.com/projects/my-project-id/datasets/auditlog_dataset \\\n+        --log-filter='protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobChange.job.jobConfig.queryConfig.statementType=\"SCRIPT\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason=\"QUERY\")' \\ \n+        --use-partitioned-tables\n+        ``` \n+        Note: gcloud **alpha** is needed in order to use the parameter `--use-partitioned-tables` \n+    *   [Cloud Console Logs Viewer](https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create)\n+        Use this filter:\n+        #### protoPayload.metadata.@type=\"type.googleapis.com/google.cloud.audit.BigQueryAuditMetadata\" AND ( (protoPayload.metadata.jobChange.job.jobConfig.queryConfig.statementType=\"SCRIPT\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\" ) OR ( protoPayload.metadata.jobChange.job.jobStats.parentJobName!=\"\" AND protoPayload.metadata.jobChange.job.jobStatus.jobState=\"DONE\") OR protoPayload.metadata.tableDataChange.reason!=\"\" OR protoPayload.metadata.tableDataRead.reason!=\"\"  OR protoPayload.metadata.tableDeletion.reason!=\"\" )\n+        *   [Partitioning](https://cloud.google.com/logging/docs/export/bigquery#partition-tables)\n+            is not required, but it is strongly recommended to select it for your BigQuery destination\n+            \n+    Note: You can create a log sink at the folder, billing account, or organization level using an \n+    [aggregated sink](https://cloud.google.com/logging/docs/export/aggregated_sinks#creating_an_aggregated_sink).\n+1.  The log sink will immediately create the BigQuery dataset but the table will\n+    be created once you run a BigQuery job post log sink creation.\n+1.  To use the SELECT statement in\n+    [big_query_elt_audit_log_v2.sql](/views/audit/big_query_elt_audit_log_v2.sql), change\n+    all occurrences of\n+    `project_id.dataset_id.cloudaudit_googleapis_com_data_access` to be the full\n+    table path you created in step 1.\n+    *   `sed\n+        's/project_id.dataset_id.cloudaudit_googleapis_com_data_access/YOUR_PROJECT.YOUR_DATASET.YOUR_TABLE/'\n+        big_query_elt_audit_log_v2.sql`\n+1.  From here, you can do further analysis in BigQuery by querying the view, or\n+    you can connect it to a BI tool such as DataStudio as a data source and\n+    build dashboards.\n+    \n+#### Usage Examples\n+Change all occurrences of `YOUR_VIEW` to the full path to the view. \n+\n+* Run this query to see a detailed list of scripts which modified tables. The results are ordered with the most recent script runs first, and then further ordering is applied using the script's job id.\n+  \n+  \n+  ```  \n+  SELECT \n+   COALESCE(jobChange.jobStats.parentJobName, jobId) AS common_script_job_id,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d57fafb711a9007ddebb1650873d94a732ac4c"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3140, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}