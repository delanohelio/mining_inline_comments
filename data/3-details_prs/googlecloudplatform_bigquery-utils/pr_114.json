{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MjI3NTU5", "number": 114, "title": "Addition of BigQuery System Tables Reports", "bodyText": "This PR includes the scripts and documentation for the public BigQuery System Tables Reports dashboard.", "createdAt": "2020-07-22T16:31:01Z", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114", "merged": true, "mergeCommit": {"oid": "bb3c610d2fbfbab33d4cc5b0e8b6d42021b1e65a"}, "closed": true, "closedAt": "2020-08-16T23:13:00Z", "author": {"login": "neemay"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3G1f_gH2gAyNDU1MjI3NTU5OmQ4MTI1NmI3ZmJmZjIwZGQ3ZDU3MzIzNTAxOTBkNWQyNzQ3OWY2ZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_mLs0gH2gAyNDU1MjI3NTU5OjdkN2I1Y2Q0MDkyZWRjNDU0NTE5YTExM2YyODViZWJkMTU1NTkyZWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d81256b7fbff20dd7d5732350190d5d27479f6e8", "author": {"user": {"login": "neemay", "name": "Yarden Ne'eman"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/d81256b7fbff20dd7d5732350190d5d27479f6e8", "committedDate": "2020-07-21T14:09:47Z", "message": "Added sql scripts, initial README, and initial documentation pages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "768233ee69c6f454f7ec9353591eb14ddb33394f", "author": {"user": {"login": "neemay", "name": "Yarden Ne'eman"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/768233ee69c6f454f7ec9353591eb14ddb33394f", "committedDate": "2020-07-22T00:23:33Z", "message": "Added public dashboard links to README, updated formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83608ccca82b41a32691112cff10b107e870c593", "author": {"user": {"login": "neemay", "name": "Yarden Ne'eman"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/83608ccca82b41a32691112cff10b107e870c593", "committedDate": "2020-07-22T04:02:36Z", "message": "Added images and updated documentation pages. Minor README updates."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69b26bcb44c24d4277f361b49f72b8160071c5dc", "author": {"user": {"login": "neemay", "name": "Yarden Ne'eman"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/69b26bcb44c24d4277f361b49f72b8160071c5dc", "committedDate": "2020-07-22T15:17:13Z", "message": "Clarified steps in README"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f590a228b74889eec83bdfb735b6f6664951da4", "author": {"user": {"login": "neemay", "name": "Yarden Ne'eman"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/9f590a228b74889eec83bdfb735b6f6664951da4", "committedDate": "2020-07-22T16:22:37Z", "message": "Typo fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0", "author": {"user": {"login": "ryanmcdowell", "name": "Ryan McDowell"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/723ee4143ba5cb93cfd2e3538482fe51f8c423e0", "committedDate": "2020-07-24T18:36:53Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NDU0MjE5", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#pullrequestreview-455454219", "createdAt": "2020-07-27T03:43:24Z", "commit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMzo0MzoyNVrOG3SsEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNDowNToxMVrOG3S-Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzMTA1OQ==", "bodyText": "Remove space before rcp.reservation_name", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460631059", "createdAt": "2020-07-27T03:43:25Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/current_assignments.sql", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the current reservation\n+ * assignments and associated slot capacities\n+ */\n+\n+-- This table retrieves the latest slot capacity for each reservation\n+WITH latest_slot_capacity as (\n+ SELECT\n+   rcp.reservation_name, rcp.slot_capacity\n+ FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT AS rcp\n+  WHERE\n+    -- This subquery returns the latest slot capacity for each reservation\n+    -- by extracting the reservation with the maximum timestamp\n+    ( rcp.reservation_name, rcp.change_timestamp) IN (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzMTY0OQ==", "bodyText": "Indent by two spaces\ngo/sqlstyle#joins", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460631649", "createdAt": "2020-07-27T03:46:09Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/current_assignments.sql", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the current reservation\n+ * assignments and associated slot capacities\n+ */\n+\n+-- This table retrieves the latest slot capacity for each reservation\n+WITH latest_slot_capacity as (\n+ SELECT\n+   rcp.reservation_name, rcp.slot_capacity\n+ FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT AS rcp\n+  WHERE\n+    -- This subquery returns the latest slot capacity for each reservation\n+    -- by extracting the reservation with the maximum timestamp\n+    ( rcp.reservation_name, rcp.change_timestamp) IN (\n+      SELECT AS STRUCT reservation_name, MAX(change_timestamp)\n+      FROM\n+        `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT\n+      GROUP BY\n+        reservation_name ) )\n+-- Extract information about current assignments\n+SELECT\n+  acp.assignment_id,\n+  acp.project_id,\n+  acp.reservation_name,\n+  acp.job_type,\n+  acp.assignee_id,\n+  acp.assignee_type,\n+  lsc.slot_capacity\n+FROM\n+  `region-{region_name}`.INFORMATION_SCHEMA.ASSIGNMENT_CHANGES_BY_PROJECT AS acp\n+-- Join to obtain the current slot capacities\n+LEFT JOIN\n+  latest_slot_capacity lsc\n+ON\n+  lsc.reservation_name = acp.reservation_name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzMjIxMw==", "bodyText": "We shouldn't nest WITH statements as it makes the logic hard to follow. Instead prefer to place the statement for commitments above the WITH statement for results.\ngo/sqlstyle#with-clause", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460632213", "createdAt": "2020-07-27T03:49:01Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/daily_commitments.sql", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Daily Utilization Report: Returns the slot count for active monthly and\n+ * annual capacity commitments for each day since the first commitment\n+ * was purchased.\n+ */\n+\n+-- This table limits the results to a single entry per day (the latest)\n+WITH results AS (\n+-- This table extracts the commitment history and computes the cumulative\n+-- slot count\n+WITH commitments AS (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzMjYwNA==", "bodyText": "Check your formatting\ngo/sqlstyle#line-wrapping", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460632604", "createdAt": "2020-07-27T03:50:47Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/daily_commitments.sql", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Daily Utilization Report: Returns the slot count for active monthly and\n+ * annual capacity commitments for each day since the first commitment\n+ * was purchased.\n+ */\n+\n+-- This table limits the results to a single entry per day (the latest)\n+WITH results AS (\n+-- This table extracts the commitment history and computes the cumulative\n+-- slot count\n+WITH commitments AS (\n+SELECT\n+  change_timestamp,\n+  commitment_plan,\n+  action,\n+  EXTRACT(DATE\n+  FROM\n+    change_timestamp) AS start_date,\n+  -- Compute the stop date of a commitment by looking at the following\n+  -- change_timestamp and subtracting one day. This works because monthly\n+  -- and yearly commitments cannot be deleted on the same day\n+  -- they were created.\n+  IFNULL(LEAD(DATE_SUB(EXTRACT(DATE\n+        FROM\n+          change_timestamp), INTERVAL 1 DAY)) OVER (PARTITION BY state ORDER BY change_timestamp),\n+    CURRENT_DATE()) AS stop_date,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzMjY2OQ==", "bodyText": "Check your formatting\ngo/sqlstyle#line-wrapping", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460632669", "createdAt": "2020-07-27T03:51:04Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/daily_commitments.sql", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Daily Utilization Report: Returns the slot count for active monthly and\n+ * annual capacity commitments for each day since the first commitment\n+ * was purchased.\n+ */\n+\n+-- This table limits the results to a single entry per day (the latest)\n+WITH results AS (\n+-- This table extracts the commitment history and computes the cumulative\n+-- slot count\n+WITH commitments AS (\n+SELECT\n+  change_timestamp,\n+  commitment_plan,\n+  action,\n+  EXTRACT(DATE\n+  FROM\n+    change_timestamp) AS start_date,\n+  -- Compute the stop date of a commitment by looking at the following\n+  -- change_timestamp and subtracting one day. This works because monthly\n+  -- and yearly commitments cannot be deleted on the same day\n+  -- they were created.\n+  IFNULL(LEAD(DATE_SUB(EXTRACT(DATE\n+        FROM\n+          change_timestamp), INTERVAL 1 DAY)) OVER (PARTITION BY state ORDER BY change_timestamp),\n+    CURRENT_DATE()) AS stop_date,\n+  -- In order to calculate the cumulative slots up to this point, add\n+  -- the slot count of new commitments (indicated by an UPDATE action)\n+  -- and subtract the slot count of deleted commitments\n+  SUM(CASE\n+      WHEN cccp.action = 'UPDATE' THEN cccp.slot_count\n+        ELSE\n+      cccp.slot_count * -1\n+  END\n+    )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzMjc2MQ==", "bodyText": "This looks like it'll fit on a single line", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460632761", "createdAt": "2020-07-27T03:51:31Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/daily_commitments.sql", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Daily Utilization Report: Returns the slot count for active monthly and\n+ * annual capacity commitments for each day since the first commitment\n+ * was purchased.\n+ */\n+\n+-- This table limits the results to a single entry per day (the latest)\n+WITH results AS (\n+-- This table extracts the commitment history and computes the cumulative\n+-- slot count\n+WITH commitments AS (\n+SELECT\n+  change_timestamp,\n+  commitment_plan,\n+  action,\n+  EXTRACT(DATE\n+  FROM\n+    change_timestamp) AS start_date,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzMjk3Mw==", "bodyText": "Additionally, check your indentation inside the WITH statement", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460632973", "createdAt": "2020-07-27T03:52:30Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/daily_commitments.sql", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Daily Utilization Report: Returns the slot count for active monthly and\n+ * annual capacity commitments for each day since the first commitment\n+ * was purchased.\n+ */\n+\n+-- This table limits the results to a single entry per day (the latest)\n+WITH results AS (\n+-- This table extracts the commitment history and computes the cumulative\n+-- slot count\n+WITH commitments AS (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzMjIxMw=="}, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzMzA5NA==", "bodyText": "days is the start of a new WITH statement and should be on a separate line", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460633094", "createdAt": "2020-07-27T03:53:12Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/daily_commitments.sql", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Daily Utilization Report: Returns the slot count for active monthly and\n+ * annual capacity commitments for each day since the first commitment\n+ * was purchased.\n+ */\n+\n+-- This table limits the results to a single entry per day (the latest)\n+WITH results AS (\n+-- This table extracts the commitment history and computes the cumulative\n+-- slot count\n+WITH commitments AS (\n+SELECT\n+  change_timestamp,\n+  commitment_plan,\n+  action,\n+  EXTRACT(DATE\n+  FROM\n+    change_timestamp) AS start_date,\n+  -- Compute the stop date of a commitment by looking at the following\n+  -- change_timestamp and subtracting one day. This works because monthly\n+  -- and yearly commitments cannot be deleted on the same day\n+  -- they were created.\n+  IFNULL(LEAD(DATE_SUB(EXTRACT(DATE\n+        FROM\n+          change_timestamp), INTERVAL 1 DAY)) OVER (PARTITION BY state ORDER BY change_timestamp),\n+    CURRENT_DATE()) AS stop_date,\n+  -- In order to calculate the cumulative slots up to this point, add\n+  -- the slot count of new commitments (indicated by an UPDATE action)\n+  -- and subtract the slot count of deleted commitments\n+  SUM(CASE\n+      WHEN cccp.action = 'UPDATE' THEN cccp.slot_count\n+        ELSE\n+      cccp.slot_count * -1\n+  END\n+    )\n+  -- Cumulative slots are tracked by their state and carried over from\n+  -- previous rows\n+  OVER (PARTITION BY state ORDER BY change_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS slot_cummulative,\n+  -- In the event that multiple changes occurred in one day, we keep track\n+  -- of the most recent cumulative value by using row numbers\n+  ROW_NUMBER() OVER (PARTITION BY EXTRACT(DATE FROM change_timestamp) ORDER BY change_timestamp DESC) AS rn\n+FROM\n+  `region-{region_name}`.INFORMATION_SCHEMA.CAPACITY_COMMITMENT_CHANGES_BY_PROJECT AS cccp\n+-- In this case, we only want to look at active commitments that are\n+-- monthly or annual, not flex\n+WHERE\n+  state = 'ACTIVE'\n+  AND commitment_plan != 'FLEX'\n+ORDER BY\n+  change_timestamp\n+)\n+-- Take only the most recent value for any given day\n+SELECT * FROM commitments WHERE rn = 1 ), days AS (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzMzMyNw==", "bodyText": "It doesn't look like this SELECT should be indented because it's outside the WITH statements", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460633327", "createdAt": "2020-07-27T03:54:20Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/daily_commitments.sql", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Daily Utilization Report: Returns the slot count for active monthly and\n+ * annual capacity commitments for each day since the first commitment\n+ * was purchased.\n+ */\n+\n+-- This table limits the results to a single entry per day (the latest)\n+WITH results AS (\n+-- This table extracts the commitment history and computes the cumulative\n+-- slot count\n+WITH commitments AS (\n+SELECT\n+  change_timestamp,\n+  commitment_plan,\n+  action,\n+  EXTRACT(DATE\n+  FROM\n+    change_timestamp) AS start_date,\n+  -- Compute the stop date of a commitment by looking at the following\n+  -- change_timestamp and subtracting one day. This works because monthly\n+  -- and yearly commitments cannot be deleted on the same day\n+  -- they were created.\n+  IFNULL(LEAD(DATE_SUB(EXTRACT(DATE\n+        FROM\n+          change_timestamp), INTERVAL 1 DAY)) OVER (PARTITION BY state ORDER BY change_timestamp),\n+    CURRENT_DATE()) AS stop_date,\n+  -- In order to calculate the cumulative slots up to this point, add\n+  -- the slot count of new commitments (indicated by an UPDATE action)\n+  -- and subtract the slot count of deleted commitments\n+  SUM(CASE\n+      WHEN cccp.action = 'UPDATE' THEN cccp.slot_count\n+        ELSE\n+      cccp.slot_count * -1\n+  END\n+    )\n+  -- Cumulative slots are tracked by their state and carried over from\n+  -- previous rows\n+  OVER (PARTITION BY state ORDER BY change_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS slot_cummulative,\n+  -- In the event that multiple changes occurred in one day, we keep track\n+  -- of the most recent cumulative value by using row numbers\n+  ROW_NUMBER() OVER (PARTITION BY EXTRACT(DATE FROM change_timestamp) ORDER BY change_timestamp DESC) AS rn\n+FROM\n+  `region-{region_name}`.INFORMATION_SCHEMA.CAPACITY_COMMITMENT_CHANGES_BY_PROJECT AS cccp\n+-- In this case, we only want to look at active commitments that are\n+-- monthly or annual, not flex\n+WHERE\n+  state = 'ACTIVE'\n+  AND commitment_plan != 'FLEX'\n+ORDER BY\n+  change_timestamp\n+)\n+-- Take only the most recent value for any given day\n+SELECT * FROM commitments WHERE rn = 1 ), days AS (\n+-- This subquery is used to fill in the missing days between a commitment\n+-- starting and ending so that it can be graphed properly.\n+    SELECT day\n+    FROM (\n+      SELECT\n+        start_date,\n+        stop_date\n+      FROM results\n+    ), UNNEST(GENERATE_DATE_ARRAY(start_date, stop_date)) day\n+  )\n+  SELECT TIMESTAMP(day) as date, LAST_VALUE(slot_cummulative IGNORE NULLS) OVER(ORDER BY day) slots,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzMzY1OA==", "bodyText": "Indent ON\ngo/sqlstyle#joins", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460633658", "createdAt": "2020-07-27T03:55:41Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/daily_commitments.sql", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Daily Utilization Report: Returns the slot count for active monthly and\n+ * annual capacity commitments for each day since the first commitment\n+ * was purchased.\n+ */\n+\n+-- This table limits the results to a single entry per day (the latest)\n+WITH results AS (\n+-- This table extracts the commitment history and computes the cumulative\n+-- slot count\n+WITH commitments AS (\n+SELECT\n+  change_timestamp,\n+  commitment_plan,\n+  action,\n+  EXTRACT(DATE\n+  FROM\n+    change_timestamp) AS start_date,\n+  -- Compute the stop date of a commitment by looking at the following\n+  -- change_timestamp and subtracting one day. This works because monthly\n+  -- and yearly commitments cannot be deleted on the same day\n+  -- they were created.\n+  IFNULL(LEAD(DATE_SUB(EXTRACT(DATE\n+        FROM\n+          change_timestamp), INTERVAL 1 DAY)) OVER (PARTITION BY state ORDER BY change_timestamp),\n+    CURRENT_DATE()) AS stop_date,\n+  -- In order to calculate the cumulative slots up to this point, add\n+  -- the slot count of new commitments (indicated by an UPDATE action)\n+  -- and subtract the slot count of deleted commitments\n+  SUM(CASE\n+      WHEN cccp.action = 'UPDATE' THEN cccp.slot_count\n+        ELSE\n+      cccp.slot_count * -1\n+  END\n+    )\n+  -- Cumulative slots are tracked by their state and carried over from\n+  -- previous rows\n+  OVER (PARTITION BY state ORDER BY change_timestamp ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS slot_cummulative,\n+  -- In the event that multiple changes occurred in one day, we keep track\n+  -- of the most recent cumulative value by using row numbers\n+  ROW_NUMBER() OVER (PARTITION BY EXTRACT(DATE FROM change_timestamp) ORDER BY change_timestamp DESC) AS rn\n+FROM\n+  `region-{region_name}`.INFORMATION_SCHEMA.CAPACITY_COMMITMENT_CHANGES_BY_PROJECT AS cccp\n+-- In this case, we only want to look at active commitments that are\n+-- monthly or annual, not flex\n+WHERE\n+  state = 'ACTIVE'\n+  AND commitment_plan != 'FLEX'\n+ORDER BY\n+  change_timestamp\n+)\n+-- Take only the most recent value for any given day\n+SELECT * FROM commitments WHERE rn = 1 ), days AS (\n+-- This subquery is used to fill in the missing days between a commitment\n+-- starting and ending so that it can be graphed properly.\n+    SELECT day\n+    FROM (\n+      SELECT\n+        start_date,\n+        stop_date\n+      FROM results\n+    ), UNNEST(GENERATE_DATE_ARRAY(start_date, stop_date)) day\n+  )\n+  SELECT TIMESTAMP(day) as date, LAST_VALUE(slot_cummulative IGNORE NULLS) OVER(ORDER BY day) slots,\n+FROM days\n+-- Join these results with the cumulative slot count values for each day\n+LEFT JOIN results\n+ON day = DATE(change_timestamp)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzNDU0OA==", "bodyText": "Put LEAD on a newline", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460634548", "createdAt": "2020-07-27T03:59:35Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/reservation_utilization_month.sql", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the average usage, average\n+ * capacity, current capacity, and average utilization of a reservation\n+ * for the last 30 days\n+ */\n+\n+-- This table retrieves the slot capacity history of every reservation\n+-- including the start and end time of that capacity\n+WITH reservation_slot_capacity AS (\n+  SELECT\n+    -- Concatenation is needed as RESERVATION_CHANGES_BY_PROJECT only\n+    -- includes reservation name but in order to join with\n+    -- JOBS_BY_ORGANIZATION, reservation id is required\n+    CONCAT(\"{project_id}:{location}.\", reservation_name) AS reservation_id,\n+    change_timestamp AS start_time,\n+    IFNULL(LEAD(change_timestamp) OVER (PARTITION BY reservation_name ORDER BY change_timestamp ASC),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzNDY2MQ==", "bodyText": "Remove space before rcp.reservation_name", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460634661", "createdAt": "2020-07-27T04:00:05Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/reservation_utilization_month.sql", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the average usage, average\n+ * capacity, current capacity, and average utilization of a reservation\n+ * for the last 30 days\n+ */\n+\n+-- This table retrieves the slot capacity history of every reservation\n+-- including the start and end time of that capacity\n+WITH reservation_slot_capacity AS (\n+  SELECT\n+    -- Concatenation is needed as RESERVATION_CHANGES_BY_PROJECT only\n+    -- includes reservation name but in order to join with\n+    -- JOBS_BY_ORGANIZATION, reservation id is required\n+    CONCAT(\"{project_id}:{location}.\", reservation_name) AS reservation_id,\n+    change_timestamp AS start_time,\n+    IFNULL(LEAD(change_timestamp) OVER (PARTITION BY reservation_name ORDER BY change_timestamp ASC),\n+      CURRENT_TIMESTAMP()) AS end_time,\n+    action,\n+    slot_capacity\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT ),\n+  -- This table retrieves only the current slot capacity of a reservation\n+  latest_slot_capacity AS (\n+  SELECT\n+    rcp.reservation_name,\n+    rcp.slot_capacity,\n+    CONCAT(\"{project_id}:{location}.\", rcp.reservation_name) AS reservation_id,\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT AS rcp\n+  WHERE\n+    -- This subquery returns the latest slot capacity for each reservation\n+    -- by extracting the reservation with the maximum timestamp\n+    ( rcp.reservation_name, rcp.change_timestamp) IN (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzNDc4MA==", "bodyText": "Indent 2 spaces", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460634780", "createdAt": "2020-07-27T04:00:38Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/reservation_utilization_month.sql", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the average usage, average\n+ * capacity, current capacity, and average utilization of a reservation\n+ * for the last 30 days\n+ */\n+\n+-- This table retrieves the slot capacity history of every reservation\n+-- including the start and end time of that capacity\n+WITH reservation_slot_capacity AS (\n+  SELECT\n+    -- Concatenation is needed as RESERVATION_CHANGES_BY_PROJECT only\n+    -- includes reservation name but in order to join with\n+    -- JOBS_BY_ORGANIZATION, reservation id is required\n+    CONCAT(\"{project_id}:{location}.\", reservation_name) AS reservation_id,\n+    change_timestamp AS start_time,\n+    IFNULL(LEAD(change_timestamp) OVER (PARTITION BY reservation_name ORDER BY change_timestamp ASC),\n+      CURRENT_TIMESTAMP()) AS end_time,\n+    action,\n+    slot_capacity\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT ),\n+  -- This table retrieves only the current slot capacity of a reservation\n+  latest_slot_capacity AS (\n+  SELECT\n+    rcp.reservation_name,\n+    rcp.slot_capacity,\n+    CONCAT(\"{project_id}:{location}.\", rcp.reservation_name) AS reservation_id,\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT AS rcp\n+  WHERE\n+    -- This subquery returns the latest slot capacity for each reservation\n+    -- by extracting the reservation with the maximum timestamp\n+    ( rcp.reservation_name, rcp.change_timestamp) IN (\n+      SELECT AS STRUCT reservation_name, MAX(change_timestamp)\n+      FROM\n+        `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT\n+      GROUP BY\n+        reservation_name)\n+ )\n+-- Compute the average slot utilization and average reservation utilization\n+SELECT\n+  jbo.reservation_id,\n+  -- Slot usage is calculated by aggregating total_slot_ms for all jobs\n+  -- in the last month and dividing by the number of milliseconds\n+  -- in a month\n+  SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 30) AS average_monthly_slot_usage,\n+  AVG(rsc.slot_capacity) AS average_reservation_capacity,\n+  (SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 30)) / AVG(rsc.slot_capacity) AS reservation_utilization,\n+  lsc.slot_capacity AS latest_capacity\n+FROM\n+  `region-{region_name}`.INFORMATION_SCHEMA.JOBS_BY_ORGANIZATION jbo\n+-- Join the slot capacity history\n+LEFT JOIN\n+  reservation_slot_capacity rsc\n+ON\n+  jbo.reservation_id = rsc.reservation_id\n+  AND jbo.creation_time >= rsc.start_time\n+  AND jbo.creation_time < rsc.end_time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzNDgyNw==", "bodyText": "Indent 2 spaces", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460634827", "createdAt": "2020-07-27T04:00:50Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/reservation_utilization_month.sql", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the average usage, average\n+ * capacity, current capacity, and average utilization of a reservation\n+ * for the last 30 days\n+ */\n+\n+-- This table retrieves the slot capacity history of every reservation\n+-- including the start and end time of that capacity\n+WITH reservation_slot_capacity AS (\n+  SELECT\n+    -- Concatenation is needed as RESERVATION_CHANGES_BY_PROJECT only\n+    -- includes reservation name but in order to join with\n+    -- JOBS_BY_ORGANIZATION, reservation id is required\n+    CONCAT(\"{project_id}:{location}.\", reservation_name) AS reservation_id,\n+    change_timestamp AS start_time,\n+    IFNULL(LEAD(change_timestamp) OVER (PARTITION BY reservation_name ORDER BY change_timestamp ASC),\n+      CURRENT_TIMESTAMP()) AS end_time,\n+    action,\n+    slot_capacity\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT ),\n+  -- This table retrieves only the current slot capacity of a reservation\n+  latest_slot_capacity AS (\n+  SELECT\n+    rcp.reservation_name,\n+    rcp.slot_capacity,\n+    CONCAT(\"{project_id}:{location}.\", rcp.reservation_name) AS reservation_id,\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT AS rcp\n+  WHERE\n+    -- This subquery returns the latest slot capacity for each reservation\n+    -- by extracting the reservation with the maximum timestamp\n+    ( rcp.reservation_name, rcp.change_timestamp) IN (\n+      SELECT AS STRUCT reservation_name, MAX(change_timestamp)\n+      FROM\n+        `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT\n+      GROUP BY\n+        reservation_name)\n+ )\n+-- Compute the average slot utilization and average reservation utilization\n+SELECT\n+  jbo.reservation_id,\n+  -- Slot usage is calculated by aggregating total_slot_ms for all jobs\n+  -- in the last month and dividing by the number of milliseconds\n+  -- in a month\n+  SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 30) AS average_monthly_slot_usage,\n+  AVG(rsc.slot_capacity) AS average_reservation_capacity,\n+  (SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 30)) / AVG(rsc.slot_capacity) AS reservation_utilization,\n+  lsc.slot_capacity AS latest_capacity\n+FROM\n+  `region-{region_name}`.INFORMATION_SCHEMA.JOBS_BY_ORGANIZATION jbo\n+-- Join the slot capacity history\n+LEFT JOIN\n+  reservation_slot_capacity rsc\n+ON\n+  jbo.reservation_id = rsc.reservation_id\n+  AND jbo.creation_time >= rsc.start_time\n+  AND jbo.creation_time < rsc.end_time\n+-- Join the latest slot capacity\n+LEFT JOIN\n+  latest_slot_capacity lsc\n+ON\n+  jbo.reservation_id = lsc.reservation_id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzNTI4OA==", "bodyText": "Place BETWEEN on new line indented by 2 spaces. Indent AND the same\ngo/sqlstyle#between", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460635288", "createdAt": "2020-07-27T04:03:11Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/reservation_utilization_month.sql", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the average usage, average\n+ * capacity, current capacity, and average utilization of a reservation\n+ * for the last 30 days\n+ */\n+\n+-- This table retrieves the slot capacity history of every reservation\n+-- including the start and end time of that capacity\n+WITH reservation_slot_capacity AS (\n+  SELECT\n+    -- Concatenation is needed as RESERVATION_CHANGES_BY_PROJECT only\n+    -- includes reservation name but in order to join with\n+    -- JOBS_BY_ORGANIZATION, reservation id is required\n+    CONCAT(\"{project_id}:{location}.\", reservation_name) AS reservation_id,\n+    change_timestamp AS start_time,\n+    IFNULL(LEAD(change_timestamp) OVER (PARTITION BY reservation_name ORDER BY change_timestamp ASC),\n+      CURRENT_TIMESTAMP()) AS end_time,\n+    action,\n+    slot_capacity\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT ),\n+  -- This table retrieves only the current slot capacity of a reservation\n+  latest_slot_capacity AS (\n+  SELECT\n+    rcp.reservation_name,\n+    rcp.slot_capacity,\n+    CONCAT(\"{project_id}:{location}.\", rcp.reservation_name) AS reservation_id,\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT AS rcp\n+  WHERE\n+    -- This subquery returns the latest slot capacity for each reservation\n+    -- by extracting the reservation with the maximum timestamp\n+    ( rcp.reservation_name, rcp.change_timestamp) IN (\n+      SELECT AS STRUCT reservation_name, MAX(change_timestamp)\n+      FROM\n+        `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT\n+      GROUP BY\n+        reservation_name)\n+ )\n+-- Compute the average slot utilization and average reservation utilization\n+SELECT\n+  jbo.reservation_id,\n+  -- Slot usage is calculated by aggregating total_slot_ms for all jobs\n+  -- in the last month and dividing by the number of milliseconds\n+  -- in a month\n+  SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 30) AS average_monthly_slot_usage,\n+  AVG(rsc.slot_capacity) AS average_reservation_capacity,\n+  (SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 30)) / AVG(rsc.slot_capacity) AS reservation_utilization,\n+  lsc.slot_capacity AS latest_capacity\n+FROM\n+  `region-{region_name}`.INFORMATION_SCHEMA.JOBS_BY_ORGANIZATION jbo\n+-- Join the slot capacity history\n+LEFT JOIN\n+  reservation_slot_capacity rsc\n+ON\n+  jbo.reservation_id = rsc.reservation_id\n+  AND jbo.creation_time >= rsc.start_time\n+  AND jbo.creation_time < rsc.end_time\n+-- Join the latest slot capacity\n+LEFT JOIN\n+  latest_slot_capacity lsc\n+ON\n+  jbo.reservation_id = lsc.reservation_id\n+WHERE\n+  -- Includes jobs created 31 days ago but completed 30 days ago\n+  jbo.creation_time BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 31 DAY)\n+  AND CURRENT_TIMESTAMP()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzNTMxNA==", "bodyText": "Same as above", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460635314", "createdAt": "2020-07-27T04:03:21Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/reservation_utilization_month.sql", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the average usage, average\n+ * capacity, current capacity, and average utilization of a reservation\n+ * for the last 30 days\n+ */\n+\n+-- This table retrieves the slot capacity history of every reservation\n+-- including the start and end time of that capacity\n+WITH reservation_slot_capacity AS (\n+  SELECT\n+    -- Concatenation is needed as RESERVATION_CHANGES_BY_PROJECT only\n+    -- includes reservation name but in order to join with\n+    -- JOBS_BY_ORGANIZATION, reservation id is required\n+    CONCAT(\"{project_id}:{location}.\", reservation_name) AS reservation_id,\n+    change_timestamp AS start_time,\n+    IFNULL(LEAD(change_timestamp) OVER (PARTITION BY reservation_name ORDER BY change_timestamp ASC),\n+      CURRENT_TIMESTAMP()) AS end_time,\n+    action,\n+    slot_capacity\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT ),\n+  -- This table retrieves only the current slot capacity of a reservation\n+  latest_slot_capacity AS (\n+  SELECT\n+    rcp.reservation_name,\n+    rcp.slot_capacity,\n+    CONCAT(\"{project_id}:{location}.\", rcp.reservation_name) AS reservation_id,\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT AS rcp\n+  WHERE\n+    -- This subquery returns the latest slot capacity for each reservation\n+    -- by extracting the reservation with the maximum timestamp\n+    ( rcp.reservation_name, rcp.change_timestamp) IN (\n+      SELECT AS STRUCT reservation_name, MAX(change_timestamp)\n+      FROM\n+        `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT\n+      GROUP BY\n+        reservation_name)\n+ )\n+-- Compute the average slot utilization and average reservation utilization\n+SELECT\n+  jbo.reservation_id,\n+  -- Slot usage is calculated by aggregating total_slot_ms for all jobs\n+  -- in the last month and dividing by the number of milliseconds\n+  -- in a month\n+  SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 30) AS average_monthly_slot_usage,\n+  AVG(rsc.slot_capacity) AS average_reservation_capacity,\n+  (SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 30)) / AVG(rsc.slot_capacity) AS reservation_utilization,\n+  lsc.slot_capacity AS latest_capacity\n+FROM\n+  `region-{region_name}`.INFORMATION_SCHEMA.JOBS_BY_ORGANIZATION jbo\n+-- Join the slot capacity history\n+LEFT JOIN\n+  reservation_slot_capacity rsc\n+ON\n+  jbo.reservation_id = rsc.reservation_id\n+  AND jbo.creation_time >= rsc.start_time\n+  AND jbo.creation_time < rsc.end_time\n+-- Join the latest slot capacity\n+LEFT JOIN\n+  latest_slot_capacity lsc\n+ON\n+  jbo.reservation_id = lsc.reservation_id\n+WHERE\n+  -- Includes jobs created 31 days ago but completed 30 days ago\n+  jbo.creation_time BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 31 DAY)\n+  AND CURRENT_TIMESTAMP()\n+  AND jbo.end_time BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 30 DAY)\n+  AND CURRENT_TIMESTAMP()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzNTM5NA==", "bodyText": "Place LEAD on the next line", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460635394", "createdAt": "2020-07-27T04:03:47Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/reservation_utilization_week.sql", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the average usage, average\n+ * capacity, current capacity, and average utilization of a reservation\n+ * for the last 7 days\n+ */\n+\n+-- This table retrieves the slot capacity history of every reservation\n+-- including the start and end time of that capacity\n+WITH reservation_slot_capacity AS (\n+  SELECT\n+    -- Concatenation is needed as RESERVATION_CHANGES_BY_PROJECT only\n+    -- includes reservation name but in order to join with\n+    -- JOBS_BY_ORGANIZATION, reservation id is required\n+    CONCAT(\"{project_id}:{location}.\", reservation_name) AS reservation_id,\n+    change_timestamp AS start_time,\n+    IFNULL(LEAD(change_timestamp) OVER (PARTITION BY reservation_name ORDER BY change_timestamp ASC),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzNTQ2NQ==", "bodyText": "Remove space before rcp.reservation_name", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460635465", "createdAt": "2020-07-27T04:04:11Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/reservation_utilization_week.sql", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the average usage, average\n+ * capacity, current capacity, and average utilization of a reservation\n+ * for the last 7 days\n+ */\n+\n+-- This table retrieves the slot capacity history of every reservation\n+-- including the start and end time of that capacity\n+WITH reservation_slot_capacity AS (\n+  SELECT\n+    -- Concatenation is needed as RESERVATION_CHANGES_BY_PROJECT only\n+    -- includes reservation name but in order to join with\n+    -- JOBS_BY_ORGANIZATION, reservation id is required\n+    CONCAT(\"{project_id}:{location}.\", reservation_name) AS reservation_id,\n+    change_timestamp AS start_time,\n+    IFNULL(LEAD(change_timestamp) OVER (PARTITION BY reservation_name ORDER BY change_timestamp ASC),\n+      CURRENT_TIMESTAMP()) AS end_time,\n+    action,\n+    slot_capacity\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT ),\n+  -- This table retrieves only the current slot capacity of a reservation\n+  latest_slot_capacity AS (\n+  SELECT\n+    rcp.reservation_name,\n+    rcp.slot_capacity,\n+    CONCAT(\"{project_id}:{location}.\", rcp.reservation_name) AS reservation_id,\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT AS rcp\n+  WHERE\n+    -- This subquery returns the latest slot capacity for each reservation\n+    -- by extracting the reservation with the maximum timestamp\n+    ( rcp.reservation_name, rcp.change_timestamp) IN (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzNTU3NA==", "bodyText": "Indent by 2 spaces", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460635574", "createdAt": "2020-07-27T04:04:36Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/reservation_utilization_week.sql", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the average usage, average\n+ * capacity, current capacity, and average utilization of a reservation\n+ * for the last 7 days\n+ */\n+\n+-- This table retrieves the slot capacity history of every reservation\n+-- including the start and end time of that capacity\n+WITH reservation_slot_capacity AS (\n+  SELECT\n+    -- Concatenation is needed as RESERVATION_CHANGES_BY_PROJECT only\n+    -- includes reservation name but in order to join with\n+    -- JOBS_BY_ORGANIZATION, reservation id is required\n+    CONCAT(\"{project_id}:{location}.\", reservation_name) AS reservation_id,\n+    change_timestamp AS start_time,\n+    IFNULL(LEAD(change_timestamp) OVER (PARTITION BY reservation_name ORDER BY change_timestamp ASC),\n+      CURRENT_TIMESTAMP()) AS end_time,\n+    action,\n+    slot_capacity\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT ),\n+  -- This table retrieves only the current slot capacity of a reservation\n+  latest_slot_capacity AS (\n+  SELECT\n+    rcp.reservation_name,\n+    rcp.slot_capacity,\n+    CONCAT(\"{project_id}:{location}.\", rcp.reservation_name) AS reservation_id,\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT AS rcp\n+  WHERE\n+    -- This subquery returns the latest slot capacity for each reservation\n+    -- by extracting the reservation with the maximum timestamp\n+    ( rcp.reservation_name, rcp.change_timestamp) IN (\n+      SELECT AS STRUCT reservation_name, MAX(change_timestamp)\n+      FROM\n+        `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT\n+      GROUP BY\n+        reservation_name)\n+ )\n+-- Compute the average slot utilization and average reservation utilization\n+SELECT\n+  jbo.reservation_id,\n+  -- Slot usage is calculated by aggregating total_slot_ms for all jobs\n+  -- in the last week and dividing by the number of milliseconds in a week\n+  SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 7) AS average_weekly_slot_usage,\n+  AVG(rsc.slot_capacity) AS average_reservation_capacity,\n+  (SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 7)) / AVG(rsc.slot_capacity) AS reservation_utilization,\n+  lsc.slot_capacity AS latest_capacity\n+FROM\n+  `region-{region_name}`.INFORMATION_SCHEMA.JOBS_BY_ORGANIZATION jbo\n+-- Join the slot capacity history\n+LEFT JOIN\n+  reservation_slot_capacity rsc\n+ON\n+  jbo.reservation_id = rsc.reservation_id\n+  AND jbo.creation_time >= rsc.start_time\n+  AND jbo.creation_time < rsc.end_time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzNTU5NQ==", "bodyText": "Indent by 2 spaces", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460635595", "createdAt": "2020-07-27T04:04:41Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/reservation_utilization_week.sql", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the average usage, average\n+ * capacity, current capacity, and average utilization of a reservation\n+ * for the last 7 days\n+ */\n+\n+-- This table retrieves the slot capacity history of every reservation\n+-- including the start and end time of that capacity\n+WITH reservation_slot_capacity AS (\n+  SELECT\n+    -- Concatenation is needed as RESERVATION_CHANGES_BY_PROJECT only\n+    -- includes reservation name but in order to join with\n+    -- JOBS_BY_ORGANIZATION, reservation id is required\n+    CONCAT(\"{project_id}:{location}.\", reservation_name) AS reservation_id,\n+    change_timestamp AS start_time,\n+    IFNULL(LEAD(change_timestamp) OVER (PARTITION BY reservation_name ORDER BY change_timestamp ASC),\n+      CURRENT_TIMESTAMP()) AS end_time,\n+    action,\n+    slot_capacity\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT ),\n+  -- This table retrieves only the current slot capacity of a reservation\n+  latest_slot_capacity AS (\n+  SELECT\n+    rcp.reservation_name,\n+    rcp.slot_capacity,\n+    CONCAT(\"{project_id}:{location}.\", rcp.reservation_name) AS reservation_id,\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT AS rcp\n+  WHERE\n+    -- This subquery returns the latest slot capacity for each reservation\n+    -- by extracting the reservation with the maximum timestamp\n+    ( rcp.reservation_name, rcp.change_timestamp) IN (\n+      SELECT AS STRUCT reservation_name, MAX(change_timestamp)\n+      FROM\n+        `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT\n+      GROUP BY\n+        reservation_name)\n+ )\n+-- Compute the average slot utilization and average reservation utilization\n+SELECT\n+  jbo.reservation_id,\n+  -- Slot usage is calculated by aggregating total_slot_ms for all jobs\n+  -- in the last week and dividing by the number of milliseconds in a week\n+  SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 7) AS average_weekly_slot_usage,\n+  AVG(rsc.slot_capacity) AS average_reservation_capacity,\n+  (SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 7)) / AVG(rsc.slot_capacity) AS reservation_utilization,\n+  lsc.slot_capacity AS latest_capacity\n+FROM\n+  `region-{region_name}`.INFORMATION_SCHEMA.JOBS_BY_ORGANIZATION jbo\n+-- Join the slot capacity history\n+LEFT JOIN\n+  reservation_slot_capacity rsc\n+ON\n+  jbo.reservation_id = rsc.reservation_id\n+  AND jbo.creation_time >= rsc.start_time\n+  AND jbo.creation_time < rsc.end_time\n+-- Join the latest slot capacity\n+LEFT JOIN\n+  latest_slot_capacity lsc\n+ON\n+  jbo.reservation_id = lsc.reservation_id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzNTY5MA==", "bodyText": "Place BETWEEN on new line indented by 2 spaces. Indent AND the same\ngo/sqlstyle#between", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460635690", "createdAt": "2020-07-27T04:05:03Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/reservation_utilization_week.sql", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the average usage, average\n+ * capacity, current capacity, and average utilization of a reservation\n+ * for the last 7 days\n+ */\n+\n+-- This table retrieves the slot capacity history of every reservation\n+-- including the start and end time of that capacity\n+WITH reservation_slot_capacity AS (\n+  SELECT\n+    -- Concatenation is needed as RESERVATION_CHANGES_BY_PROJECT only\n+    -- includes reservation name but in order to join with\n+    -- JOBS_BY_ORGANIZATION, reservation id is required\n+    CONCAT(\"{project_id}:{location}.\", reservation_name) AS reservation_id,\n+    change_timestamp AS start_time,\n+    IFNULL(LEAD(change_timestamp) OVER (PARTITION BY reservation_name ORDER BY change_timestamp ASC),\n+      CURRENT_TIMESTAMP()) AS end_time,\n+    action,\n+    slot_capacity\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT ),\n+  -- This table retrieves only the current slot capacity of a reservation\n+  latest_slot_capacity AS (\n+  SELECT\n+    rcp.reservation_name,\n+    rcp.slot_capacity,\n+    CONCAT(\"{project_id}:{location}.\", rcp.reservation_name) AS reservation_id,\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT AS rcp\n+  WHERE\n+    -- This subquery returns the latest slot capacity for each reservation\n+    -- by extracting the reservation with the maximum timestamp\n+    ( rcp.reservation_name, rcp.change_timestamp) IN (\n+      SELECT AS STRUCT reservation_name, MAX(change_timestamp)\n+      FROM\n+        `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT\n+      GROUP BY\n+        reservation_name)\n+ )\n+-- Compute the average slot utilization and average reservation utilization\n+SELECT\n+  jbo.reservation_id,\n+  -- Slot usage is calculated by aggregating total_slot_ms for all jobs\n+  -- in the last week and dividing by the number of milliseconds in a week\n+  SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 7) AS average_weekly_slot_usage,\n+  AVG(rsc.slot_capacity) AS average_reservation_capacity,\n+  (SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 7)) / AVG(rsc.slot_capacity) AS reservation_utilization,\n+  lsc.slot_capacity AS latest_capacity\n+FROM\n+  `region-{region_name}`.INFORMATION_SCHEMA.JOBS_BY_ORGANIZATION jbo\n+-- Join the slot capacity history\n+LEFT JOIN\n+  reservation_slot_capacity rsc\n+ON\n+  jbo.reservation_id = rsc.reservation_id\n+  AND jbo.creation_time >= rsc.start_time\n+  AND jbo.creation_time < rsc.end_time\n+-- Join the latest slot capacity\n+LEFT JOIN\n+  latest_slot_capacity lsc\n+ON\n+  jbo.reservation_id = lsc.reservation_id\n+WHERE\n+  -- Includes jobs created 8 days ago but completed 7 days ago\n+  jbo.creation_time BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 8 DAY)\n+  AND CURRENT_TIMESTAMP()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYzNTcxMA==", "bodyText": "Same as above", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#discussion_r460635710", "createdAt": "2020-07-27T04:05:11Z", "author": {"login": "ryanmcdowell"}, "path": "views/system_tables/sql/reservation_utilization_week.sql", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2020 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+/*\n+ * It is assumed that the following query will be run in the administration\n+ * project where the reservations were created. If this is not the case,\n+ * prepend the project id to the table name as follows:\n+ * `{project_id}`.`region-{region_name}`.INFORMATION_SCHEMA.{table}\n+ */\n+\n+/*\n+ * Reservation Utilization Report: Returns the average usage, average\n+ * capacity, current capacity, and average utilization of a reservation\n+ * for the last 7 days\n+ */\n+\n+-- This table retrieves the slot capacity history of every reservation\n+-- including the start and end time of that capacity\n+WITH reservation_slot_capacity AS (\n+  SELECT\n+    -- Concatenation is needed as RESERVATION_CHANGES_BY_PROJECT only\n+    -- includes reservation name but in order to join with\n+    -- JOBS_BY_ORGANIZATION, reservation id is required\n+    CONCAT(\"{project_id}:{location}.\", reservation_name) AS reservation_id,\n+    change_timestamp AS start_time,\n+    IFNULL(LEAD(change_timestamp) OVER (PARTITION BY reservation_name ORDER BY change_timestamp ASC),\n+      CURRENT_TIMESTAMP()) AS end_time,\n+    action,\n+    slot_capacity\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT ),\n+  -- This table retrieves only the current slot capacity of a reservation\n+  latest_slot_capacity AS (\n+  SELECT\n+    rcp.reservation_name,\n+    rcp.slot_capacity,\n+    CONCAT(\"{project_id}:{location}.\", rcp.reservation_name) AS reservation_id,\n+  FROM\n+    `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT AS rcp\n+  WHERE\n+    -- This subquery returns the latest slot capacity for each reservation\n+    -- by extracting the reservation with the maximum timestamp\n+    ( rcp.reservation_name, rcp.change_timestamp) IN (\n+      SELECT AS STRUCT reservation_name, MAX(change_timestamp)\n+      FROM\n+        `region-{region_name}`.INFORMATION_SCHEMA.RESERVATION_CHANGES_BY_PROJECT\n+      GROUP BY\n+        reservation_name)\n+ )\n+-- Compute the average slot utilization and average reservation utilization\n+SELECT\n+  jbo.reservation_id,\n+  -- Slot usage is calculated by aggregating total_slot_ms for all jobs\n+  -- in the last week and dividing by the number of milliseconds in a week\n+  SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 7) AS average_weekly_slot_usage,\n+  AVG(rsc.slot_capacity) AS average_reservation_capacity,\n+  (SUM(jbo.total_slot_ms) / (1000 * 60 * 60 * 24 * 7)) / AVG(rsc.slot_capacity) AS reservation_utilization,\n+  lsc.slot_capacity AS latest_capacity\n+FROM\n+  `region-{region_name}`.INFORMATION_SCHEMA.JOBS_BY_ORGANIZATION jbo\n+-- Join the slot capacity history\n+LEFT JOIN\n+  reservation_slot_capacity rsc\n+ON\n+  jbo.reservation_id = rsc.reservation_id\n+  AND jbo.creation_time >= rsc.start_time\n+  AND jbo.creation_time < rsc.end_time\n+-- Join the latest slot capacity\n+LEFT JOIN\n+  latest_slot_capacity lsc\n+ON\n+  jbo.reservation_id = lsc.reservation_id\n+WHERE\n+  -- Includes jobs created 8 days ago but completed 7 days ago\n+  jbo.creation_time BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 8 DAY)\n+  AND CURRENT_TIMESTAMP()\n+  AND jbo.end_time BETWEEN TIMESTAMP_SUB(CURRENT_TIMESTAMP(), INTERVAL 7 DAY)\n+  AND CURRENT_TIMESTAMP()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "723ee4143ba5cb93cfd2e3538482fe51f8c423e0"}, "originalPosition": 91}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39ac07cb304d678144e75124ddcaf597600c1fbf", "author": {"user": {"login": "neemay", "name": "Yarden Ne'eman"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/39ac07cb304d678144e75124ddcaf597600c1fbf", "committedDate": "2020-08-04T17:34:14Z", "message": "Renamed 'pages' subdirectory to 'docs' and added top level 'dashboard' directory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "750792db3547a4541f0c48b6fbd6fa46421367dd", "author": {"user": {"login": "neemay", "name": "Yarden Ne'eman"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/750792db3547a4541f0c48b6fbd6fa46421367dd", "committedDate": "2020-08-04T20:13:23Z", "message": "Fixed query formatting to adhere to style guide"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59db876d2bf059afce3ae538f62b5d0b4c2f707c", "author": {"user": {"login": "neemay", "name": "Yarden Ne'eman"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/59db876d2bf059afce3ae538f62b5d0b4c2f707c", "committedDate": "2020-08-04T20:14:23Z", "message": "Merge branch 'master' of https://github.com/neemay/bigquery-utils into master"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab91258385b41e3c7a5c7a435edb01133229df9b", "author": {"user": {"login": "neemay", "name": "Yarden Ne'eman"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/ab91258385b41e3c7a5c7a435edb01133229df9b", "committedDate": "2020-08-04T20:50:16Z", "message": "Formatting fix for WITH clause"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTAzMDgw", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/114#pullrequestreview-468103080", "createdAt": "2020-08-16T23:12:24Z", "commit": {"oid": "ab91258385b41e3c7a5c7a435edb01133229df9b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d7b5cd4092edc454519a113f285bebd155592ee", "author": {"user": {"login": "ryanmcdowell", "name": "Ryan McDowell"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/7d7b5cd4092edc454519a113f285bebd155592ee", "committedDate": "2020-08-16T23:12:29Z", "message": "Merge branch 'master' into master"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 687, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}