{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwNDMxMDc3", "number": 129, "title": "SQL Extraction: python analyzer", "bodyText": "Support embedded SQL query extraction from python files. The python Antlr grammar file uses the MIT license. The grammar is for python3, but I don't think there are any backwards-incompatible grammar changes from python2 to python3.", "createdAt": "2020-07-31T19:29:54Z", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/129", "merged": true, "mergeCommit": {"oid": "cd52f4f8b9b720a893cfc272fef474ab596e662f"}, "closed": true, "closedAt": "2020-08-07T22:13:46Z", "author": {"login": "creativitRy"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6ZWZngH2gAyNDYwNDMxMDc3OjMyMzY3NDdiOWFhNmQ0YzAxZWY1NjQ4ODZlMzRiZjg5MmI2YzE0Mzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8r8mjgFqTQ2MzY2NjQ3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3236747b9aa6d4c01ef564886e34bf892b6c1438", "author": {"user": {"login": "creativitRy", "name": "Gahwon Lee"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/3236747b9aa6d4c01ef564886e34bf892b6c1438", "committedDate": "2020-07-31T19:25:47Z", "message": "SQL Extraction: python analyzer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNTU2OTg2", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/129#pullrequestreview-463556986", "createdAt": "2020-08-07T19:20:47Z", "commit": {"oid": "3236747b9aa6d4c01ef564886e34bf892b6c1438"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOToyMDo0N1rOG9lPkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOToyMDo0N1rOG9lPkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIyNjUxMw==", "bodyText": "How come the result is \"(helloworld)\" and not \"helloworld\"?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/129#discussion_r467226513", "createdAt": "2020-08-07T19:20:47Z", "author": {"login": "feiling"}, "path": "tools/sql_extraction/src/test/kotlin/PythonAnalysisTest.kt", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.google.cloud.sqlecosystem.sqlextraction\n+\n+import com.google.cloud.sqlecosystem.sqlextraction.output.QueryUsages\n+import org.antlr.v4.runtime.CharStreams\n+import kotlin.test.Test\n+import kotlin.test.assertEquals\n+\n+class PythonAnalysisTest {\n+    @Test\n+    fun `simple string return`() {\n+        val program = \"\"\"\n+def test():\n+    return \"test\"\n+\"\"\"\n+\n+        val result = analyze(program)\n+\n+        assertCorrect(result, \"test\")\n+    }\n+\n+    @Test\n+    fun `simple method argument`() {\n+        val program = \"\"\"\n+import something\n+something.some_method(\"test\")\n+\"\"\"\n+\n+        val result = analyze(program)\n+\n+        assertCorrect(result, \"test\")\n+    }\n+\n+    @Test\n+    fun `literal concatenation`() {\n+        val program = \"\"\"\n+import something\n+something.some_method(\"hello\" + \"world\")\n+\"\"\"\n+\n+        val result = analyze(program)\n+\n+        assertCorrect(result, \"(helloworld)\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3236747b9aa6d4c01ef564886e34bf892b6c1438"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNTU3NTU2", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/129#pullrequestreview-463557556", "createdAt": "2020-08-07T19:21:48Z", "commit": {"oid": "3236747b9aa6d4c01ef564886e34bf892b6c1438"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOToyMTo0OFrOG9lRRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxOToyMTo0OFrOG9lRRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzIyNjk0OA==", "bodyText": "Does the analyzer support multi-line strings?  If so, please add a unit test. If not, pls add support in another PR.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/129#discussion_r467226948", "createdAt": "2020-08-07T19:21:48Z", "author": {"login": "feiling"}, "path": "tools/sql_extraction/src/test/kotlin/PythonAnalysisTest.kt", "diffHunk": "@@ -0,0 +1,66 @@\n+package com.google.cloud.sqlecosystem.sqlextraction\n+\n+import com.google.cloud.sqlecosystem.sqlextraction.output.QueryUsages\n+import org.antlr.v4.runtime.CharStreams\n+import kotlin.test.Test\n+import kotlin.test.assertEquals\n+\n+class PythonAnalysisTest {\n+    @Test\n+    fun `simple string return`() {\n+        val program = \"\"\"\n+def test():\n+    return \"test\"\n+\"\"\"\n+\n+        val result = analyze(program)\n+\n+        assertCorrect(result, \"test\")\n+    }\n+\n+    @Test\n+    fun `simple method argument`() {\n+        val program = \"\"\"\n+import something\n+something.some_method(\"test\")\n+\"\"\"\n+\n+        val result = analyze(program)\n+\n+        assertCorrect(result, \"test\")\n+    }\n+\n+    @Test\n+    fun `literal concatenation`() {\n+        val program = \"\"\"\n+import something\n+something.some_method(\"hello\" + \"world\")\n+\"\"\"\n+\n+        val result = analyze(program)\n+\n+        assertCorrect(result, \"(helloworld)\")\n+    }\n+\n+    @Test\n+    fun `variable assignment and usage`() {\n+        val program = \"\"\"\n+import something\n+a = \"test\"\n+something.some_method(a)\n+\"\"\"\n+\n+        val result = analyze(program)\n+\n+        assertCorrect(result, \"test\")\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3236747b9aa6d4c01ef564886e34bf892b6c1438"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec5bb64957f89e15680b960f132f59614634896d", "author": {"user": {"login": "creativitRy", "name": "Gahwon Lee"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/ec5bb64957f89e15680b960f132f59614634896d", "committedDate": "2020-08-07T20:11:59Z", "message": "Test multiline strings for python"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebec37506d7e2737a0e31359b3a785d6d980c79e", "author": {"user": {"login": "creativitRy", "name": "Gahwon Lee"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/ebec37506d7e2737a0e31359b3a785d6d980c79e", "committedDate": "2020-08-07T20:20:07Z", "message": "Merge branch 'master' into master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjY2NDc2", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/129#pullrequestreview-463666476", "createdAt": "2020-08-07T22:13:39Z", "commit": {"oid": "ebec37506d7e2737a0e31359b3a785d6d980c79e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 711, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}