{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMzQ1NjY2", "number": 127, "title": "Allen wang314/data generation", "bodyText": "Finished all token generation and data generation methods except Date and Timestamp", "createdAt": "2020-07-31T17:34:18Z", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/127", "merged": true, "mergeCommit": {"oid": "8677d0e2bf505430b10949bf67e3bd7f43d24691"}, "closed": true, "closedAt": "2020-08-03T16:33:49Z", "author": {"login": "AllenWang314"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6NvevgH2gAyNDYwMzQ1NjY2OjE4ZjZjODM5MDI0MTk0OGJmODM5ZGI0NWVhZTMxNDhmYjhkNTc2YmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7UraaAH2gAyNDYwMzQ1NjY2OmFlYjJlYzIwNmMwZTQwMzc2MmFhNmE2ZDI0NDRlYThmMDhiN2Y2YmY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "18f6c8390241948bf839db45eae3148fb8d576ba", "author": {"user": null}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/18f6c8390241948bf839db45eae3148fb8d576ba", "committedDate": "2020-07-31T05:54:19Z", "message": "almost done with data generation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1ce0ca967e5a098e076ca9e21889afdf5c1d0a8", "author": {"user": null}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/d1ce0ca967e5a098e076ca9e21889afdf5c1d0a8", "committedDate": "2020-07-31T16:47:14Z", "message": "added initial random data methods to Utils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5028f2f5811428c5f71a2a2b7a7fb5d61c73504", "author": {"user": null}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/d5028f2f5811428c5f71a2a2b7a7fb5d61c73504", "committedDate": "2020-07-31T17:29:38Z", "message": "finished generation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NDI0OTU3", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/127#pullrequestreview-459424957", "createdAt": "2020-07-31T19:49:19Z", "commit": {"oid": "d5028f2f5811428c5f71a2a2b7a7fb5d61c73504"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOTo0OToxOVrOG6UK7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOTo1NTowNlrOG6UUbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwMTA2OQ==", "bodyText": "As this column only need to store data for one kind of dataType, instead of a Column class with arrayList of all the types, please use Generic Class instead.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/127#discussion_r463801069", "createdAt": "2020-07-31T19:49:19Z", "author": {"login": "Bei-z"}, "path": "tools/template_based_query_generation/src/main/java/data/Column.java", "diffHunk": "@@ -0,0 +1,122 @@\n+package data;\n+\n+import parser.Utils;\n+\n+import java.math.BigDecimal;\n+import java.util.ArrayList;\n+\n+public class Column {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5028f2f5811428c5f71a2a2b7a7fb5d61c73504"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwMjYxNQ==", "bodyText": "A string with only 0s and 1s does not seem to matches this regex? Consider update this comment.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/127#discussion_r463802615", "createdAt": "2020-07-31T19:53:10Z", "author": {"login": "Bei-z"}, "path": "tools/template_based_query_generation/src/main/java/parser/Utils.java", "diffHunk": "@@ -79,6 +81,30 @@ public static String getRandomString(int length) throws IllegalArgumentException\n     return sb.toString();\n   }\n \n+  /**\n+   * Returns a random string with a specified length consisting of 0s and 1s\n+   *\n+   * @param length a nonzero integer specifying the desired length of the generated string\n+   * @return a random string that matches the regex '[a-zA-Z_]' and has the specified length", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5028f2f5811428c5f71a2a2b7a7fb5d61c73504"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwMzA3NA==", "bodyText": "Please use space here to fix the style.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/127#discussion_r463803074", "createdAt": "2020-07-31T19:54:21Z", "author": {"login": "Bei-z"}, "path": "tools/template_based_query_generation/src/main/java/parser/Utils.java", "diffHunk": "@@ -209,6 +235,127 @@ private static String getOutputDirectory(String directoryName) {\n \n     return map;\n   }\n-\n   // TODO(spoiledhua): refactor IO exception handling\n+\n+\n+  /**\n+   *\n+   * @param dataType\n+   * @return random data of type dataType\n+   * @throws IllegalArgumentException\n+   */\n+  public static int generateRandomIntegerData(DataType dataType) throws IllegalArgumentException {\n+    if (dataType == DataType.SMALL_INT) {\n+      return \trandom.nextInt(-32768,32769);\n+    } else if (dataType == DataType.INTEGER) {\n+      return \trandom.nextInt();\n+    } else if (dataType == DataType.SMALL_SERIAL) {\n+      return \trandom.nextInt(1, 32768);\n+    } else if (dataType == DataType.SERIAL) {\n+      int num = random.nextInt();\n+      if (num == Integer.MIN_VALUE) {\n+        return 0;\n+      } else {\n+        return\tMath.abs(num);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5028f2f5811428c5f71a2a2b7a7fb5d61c73504"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwMzUwMA==", "bodyText": "Please use space here to fix the style.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/127#discussion_r463803500", "createdAt": "2020-07-31T19:55:06Z", "author": {"login": "Bei-z"}, "path": "tools/template_based_query_generation/src/main/java/parser/Utils.java", "diffHunk": "@@ -209,6 +235,127 @@ private static String getOutputDirectory(String directoryName) {\n \n     return map;\n   }\n-\n   // TODO(spoiledhua): refactor IO exception handling\n+\n+\n+  /**\n+   *\n+   * @param dataType\n+   * @return random data of type dataType\n+   * @throws IllegalArgumentException\n+   */\n+  public static int generateRandomIntegerData(DataType dataType) throws IllegalArgumentException {\n+    if (dataType == DataType.SMALL_INT) {\n+      return \trandom.nextInt(-32768,32769);\n+    } else if (dataType == DataType.INTEGER) {\n+      return \trandom.nextInt();\n+    } else if (dataType == DataType.SMALL_SERIAL) {\n+      return \trandom.nextInt(1, 32768);\n+    } else if (dataType == DataType.SERIAL) {\n+      int num = random.nextInt();\n+      if (num == Integer.MIN_VALUE) {\n+        return 0;\n+      } else {\n+        return\tMath.abs(num);\n+      }\n+    } else {\n+      throw new IllegalArgumentException(\"dataType cannot be represented by an int type\");\n+    }\n+  }\n+\n+  /**\n+   *\n+   * @param dataType\n+   * @return random data of type dataType\n+   * @throws IllegalArgumentException\n+   */\n+  public static long generateRandomLongData(DataType dataType) {\n+    if (dataType == DataType.BIG_INT) {\n+      return \trandom.nextLong();\n+    } else if (dataType == DataType.BIG_SERIAL) {\n+      long num = random.nextLong();\n+      if (num == Long.MIN_VALUE) {\n+        return 0;\n+      } else {\n+        return\tMath.abs(num);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5028f2f5811428c5f71a2a2b7a7fb5d61c73504"}, "originalPosition": 89}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b973b687d0bc6573c09954a95984d1e4a2e5e9ae", "author": {"user": null}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/b973b687d0bc6573c09954a95984d1e4a2e5e9ae", "committedDate": "2020-07-31T20:33:14Z", "message": "added random date and time generation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ced14fd46905d87adc88f9a8c085ea2c0c38345a", "author": {"user": null}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/ced14fd46905d87adc88f9a8c085ea2c0c38345a", "committedDate": "2020-07-31T20:46:20Z", "message": "addressed quick fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f15df682543cbab4a2836236eccc467167978518", "author": {"user": null}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/f15df682543cbab4a2836236eccc467167978518", "committedDate": "2020-07-31T21:09:51Z", "message": "deleted column and added data and column generation to Table"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjcyNTE4", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/127#pullrequestreview-459672518", "createdAt": "2020-08-02T19:23:13Z", "commit": {"oid": "f15df682543cbab4a2836236eccc467167978518"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxOToyMzoxM1rOG6nQ9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMlQxOToyMzoxM1rOG6nQ9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDExMzkwOA==", "bodyText": "Should we still use ArrayList here?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/127#discussion_r464113908", "createdAt": "2020-08-02T19:23:13Z", "author": {"login": "Bei-z"}, "path": "tools/template_based_query_generation/src/main/java/token/Tokenizer.java", "diffHunk": "@@ -200,11 +211,34 @@ private void generateInsertExp(Token token) {\n   }\n \n   /**\n-   * TODO: needs a function to generate a few rows of data to insert into table\n+   * TODO: fix with Utils string builder to increase efficiency\n+   * sets token to be a values expression\n    * @param token\n    */\n   private void generateValuesExp(Token token) {\n-\n+    int placeHolder = generateNextPlaceHolder(token.getTokenInfo().getTokenType());\n+    int numRows = r.nextInt(this.maxNumColumnsValues) + 1;\n+    ArrayList<Column> values = this.table.generateData(numRows);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f15df682543cbab4a2836236eccc467167978518"}, "originalPosition": 119}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b694cc14311946dd780d4b980f96d58ca7c5615", "author": {"user": null}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/3b694cc14311946dd780d4b980f96d58ca7c5615", "committedDate": "2020-08-03T16:31:58Z", "message": "made changes to address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeb2ec206c0e403762aa6a6d2444ea8f08b7f6bf", "author": {"user": null}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/aeb2ec206c0e403762aa6a6d2444ea8f08b7f6bf", "committedDate": "2020-08-03T16:33:08Z", "message": "Merge branch 'master' into AllenWang314/data-generation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 708, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}