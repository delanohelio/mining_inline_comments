{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4OTExODA0", "number": 173, "title": "Auto Query Fixer: develop the java client for ZetaSQL Helper", "bodyText": "Develop the java client to call RPC functions from the ZetaSQL Helper server.\nA dokcer controller is also added to let the client automatically start and connect to the server", "createdAt": "2020-09-03T20:17:06Z", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/173", "merged": true, "mergeCommit": {"oid": "8b7b5ace6cd3b56b0fbf989ad543a5ba7cbde65f"}, "closed": true, "closedAt": "2020-09-04T02:02:44Z", "author": {"login": "mingen-pan"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFWaE3gH2gAyNDc4OTExODA0OjA0MmUwMWMyZDhjZmI5NmYzYzI2ZTE4NTIyMmQ3OGNiYzUwNDE2ZGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFbZ0vAH2gAyNDc4OTExODA0OjAxNDZiNGM0MjY3MmVjYjAyNGRkMmYwNjg4OWI1NGU3OGIxN2RkMGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "042e01c2d8cfb96f3c26e185222d78cbc50416de", "author": {"user": {"login": "mingen-pan", "name": "Mingen Pan"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/042e01c2d8cfb96f3c26e185222d78cbc50416de", "committedDate": "2020-09-03T20:13:15Z", "message": "Rebase..."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf52df23d6ce4749568b1cb4306ba0a4c6d4b703", "author": {"user": {"login": "mingen-pan", "name": "Mingen Pan"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/bf52df23d6ce4749568b1cb4306ba0a4c6d4b703", "committedDate": "2020-09-03T20:13:27Z", "message": "Implement ZetaSQL Helper java client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c5555444940bf56a36c791ae8f4c7e7ba385a41", "author": {"user": {"login": "mingen-pan", "name": "Mingen Pan"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/4c5555444940bf56a36c791ae8f4c7e7ba385a41", "committedDate": "2020-09-03T20:20:19Z", "message": "Implement ZetaSQL Helper java client"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMzA1NDk3", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/173#pullrequestreview-482305497", "createdAt": "2020-09-04T01:48:15Z", "commit": {"oid": "4c5555444940bf56a36c791ae8f4c7e7ba385a41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMTo0ODoxNVrOHM8yPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMTo0ODoxNVrOHM8yPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MDg2MQ==", "bodyText": "Can we use random port here?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/173#discussion_r483340861", "createdAt": "2020-09-04T01:48:15Z", "author": {"login": "kikkyo"}, "path": "tools/zetasql_helper/java/com/google/bigquery/utils/zetasqlhelper/Client.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.google.bigquery.utils.zetasqlhelper;\n+\n+import io.grpc.Channel;\n+\n+/**\n+ * Client to establish connections with ZetaSQL Helper server.\n+ */\n+public class Client {\n+\n+    private static ZetaSqlHelperLocalServiceGrpc.ZetaSqlHelperLocalServiceBlockingStub stub;\n+    private static int port = 50051;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5555444940bf56a36c791ae8f4c7e7ba385a41"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMzA1ODc5", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/173#pullrequestreview-482305879", "createdAt": "2020-09-04T01:49:39Z", "commit": {"oid": "4c5555444940bf56a36c791ae8f4c7e7ba385a41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMTo0OTozOVrOHM8zhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMTo0OTozOVrOHM8zhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MTE5MQ==", "bodyText": "nit: \"can\" not", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/173#discussion_r483341191", "createdAt": "2020-09-04T01:49:39Z", "author": {"login": "kikkyo"}, "path": "tools/zetasql_helper/java/com/google/bigquery/utils/zetasqlhelper/LocalServiceDockerProvider.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.google.bigquery.utils.zetasqlhelper;\n+\n+import com.github.dockerjava.api.DockerClient;\n+import com.github.dockerjava.api.command.CreateContainerResponse;\n+import com.github.dockerjava.api.model.*;\n+import com.github.dockerjava.core.DefaultDockerClientConfig;\n+import com.github.dockerjava.core.DockerClientConfig;\n+import com.github.dockerjava.core.DockerClientImpl;\n+import com.github.dockerjava.httpclient5.ApacheDockerHttpClient;\n+import com.github.dockerjava.transport.DockerHttpClient;\n+import io.grpc.Channel;\n+import io.grpc.ManagedChannelBuilder;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * A controller responsible for managing the Docker Image of ZetaSQL Helper server. It can check\n+ * if a server container is started, start a server and connect to a server.\n+ */\n+public class LocalServiceDockerProvider implements LocalServiceProvider {\n+\n+    private final static Integer SERVER_PORT = 50051;\n+    private final static String LOCAL_HOST = \"localhost:\";\n+    private static String IMAGE = \"gcr.io/sql-gravity-internship/zetasql-helper:1.0\";\n+\n+    private final static String RUNNING = \"running\";\n+    // waiting time for starting server. If the server container con not start in this period,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5555444940bf56a36c791ae8f4c7e7ba385a41"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMzA2MDI4", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/173#pullrequestreview-482306028", "createdAt": "2020-09-04T01:50:11Z", "commit": {"oid": "4c5555444940bf56a36c791ae8f4c7e7ba385a41"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMTo1MDoxMVrOHM80Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMTo1MDoxMVrOHM80Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0MTMzOQ==", "bodyText": "nit: If", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/173#discussion_r483341339", "createdAt": "2020-09-04T01:50:11Z", "author": {"login": "kikkyo"}, "path": "tools/zetasql_helper/java/com/google/bigquery/utils/zetasqlhelper/LocalServiceDockerProvider.java", "diffHunk": "@@ -0,0 +1,142 @@\n+package com.google.bigquery.utils.zetasqlhelper;\n+\n+import com.github.dockerjava.api.DockerClient;\n+import com.github.dockerjava.api.command.CreateContainerResponse;\n+import com.github.dockerjava.api.model.*;\n+import com.github.dockerjava.core.DefaultDockerClientConfig;\n+import com.github.dockerjava.core.DockerClientConfig;\n+import com.github.dockerjava.core.DockerClientImpl;\n+import com.github.dockerjava.httpclient5.ApacheDockerHttpClient;\n+import com.github.dockerjava.transport.DockerHttpClient;\n+import io.grpc.Channel;\n+import io.grpc.ManagedChannelBuilder;\n+\n+import java.util.Collections;\n+import java.util.List;\n+\n+/**\n+ * A controller responsible for managing the Docker Image of ZetaSQL Helper server. It can check\n+ * if a server container is started, start a server and connect to a server.\n+ */\n+public class LocalServiceDockerProvider implements LocalServiceProvider {\n+\n+    private final static Integer SERVER_PORT = 50051;\n+    private final static String LOCAL_HOST = \"localhost:\";\n+    private static String IMAGE = \"gcr.io/sql-gravity-internship/zetasql-helper:1.0\";\n+\n+    private final static String RUNNING = \"running\";\n+    // waiting time for starting server. If the server container con not start in this period,\n+    // it will be considered shutdown. Unit is millisecond.\n+    private final static long START_SERVER_TIMEOUT = 5000;\n+\n+    private final DockerClient client;\n+\n+    public LocalServiceDockerProvider() {\n+        DockerClientConfig config = DefaultDockerClientConfig.createDefaultConfigBuilder().build();\n+        DockerHttpClient httpClient = new ApacheDockerHttpClient.Builder()\n+                .dockerHost(config.getDockerHost())\n+                .sslConfig(config.getSSLConfig())\n+                .build();\n+\n+        client = DockerClientImpl.getInstance(config, httpClient);\n+    }\n+\n+    /**\n+     * Start a server locally at the given port number.\n+     *\n+     * @param port port number\n+     */\n+    @Override\n+    public void startServer(final Integer port) {\n+        String binding = String.format(\"%d:%d\", port, SERVER_PORT);\n+        CreateContainerResponse response =\n+                client\n+                        .createContainerCmd(IMAGE)\n+                        .withExposedPorts(ExposedPort.parse(\"\" + SERVER_PORT))\n+                        .withHostConfig(\n+                                HostConfig.newHostConfig().withPortBindings(PortBinding.parse(binding)))\n+                        .exec();\n+\n+        String containerId = response.getId();\n+        client.startContainerCmd(containerId).exec();\n+\n+        if (!waitServerToStart(containerId)) {\n+            throw new LocalServiceException(\"Unable to start ZetaSql Helper Service Docker container\");\n+        }\n+    }\n+\n+    /**\n+     * Check if a server has been started at the given port number.\n+     *\n+     * @param port port number\n+     * @return boolean of whether a server is on.\n+     */\n+    @Override\n+    public boolean isServerOn(final Integer port) {\n+        List<Container> containers = client.listContainersCmd()\n+                .withAncestorFilter(Collections.singletonList(IMAGE))\n+                .exec();\n+\n+        for (Container container : containers) {\n+            ContainerPort[] containerPorts = container.getPorts();\n+            for (ContainerPort containerPort : containerPorts) {\n+                if (SERVER_PORT.equals(containerPort.getPrivatePort()) && port.equals(containerPort.getPublicPort())) {\n+                    return true;\n+                }\n+            }\n+        }\n+        return false;\n+    }\n+\n+    /**\n+     * Connect to the server at the given port number.\n+     *\n+     * @param port port number\n+     * @return Channel to the server\n+     */\n+    @Override\n+    public Channel connect(final Integer port) {\n+        try {\n+            // if the server is not active, try to start it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c5555444940bf56a36c791ae8f4c7e7ba385a41"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyMzA2MjM2", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/173#pullrequestreview-482306236", "createdAt": "2020-09-04T01:50:48Z", "commit": {"oid": "4c5555444940bf56a36c791ae8f4c7e7ba385a41"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77c201c8d3a182bfd4c3036882dc5f8967ba218c", "author": {"user": {"login": "mingen-pan", "name": "Mingen Pan"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/77c201c8d3a182bfd4c3036882dc5f8967ba218c", "committedDate": "2020-09-04T02:02:08Z", "message": "minor fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0146b4c42672ecb024dd2f06889b54e78b17dd0d", "author": {"user": {"login": "mingen-pan", "name": "Mingen Pan"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/0146b4c42672ecb024dd2f06889b54e78b17dd0d", "committedDate": "2020-09-04T02:02:30Z", "message": "Merge branch 'master' into zetasql_helper_java_client_rebase"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 528, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}