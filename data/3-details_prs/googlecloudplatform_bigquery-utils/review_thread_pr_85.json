{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MzA0NjY0", "number": 85, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0zMFQxNToyMjo1MlrOGobCAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0zMFQxNToyNzoyOFrOGobL5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDQ1MDM5MTA1OnYy", "diffSide": "RIGHT", "path": "udfs/community/random_string.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0zMFQxNToyMjo1MlrOKaOEgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0zMFQxNToyMjo1MlrOKaOEgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU4MjE0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            (\n          \n          \n            \n              (\n          \n          \n            \n                SELECT \n          \n          \n            \n                  STRING_AGG([\n          \n          \n            \n                    'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',\n          \n          \n            \n                    'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',\n          \n          \n            \n                    '1','2','3','4','5','6','7','8','9','0'][offset(bqutil.fn.random_int(0, 62))], '')\n          \n          \n            \n                FROM \n          \n          \n            \n                  UNNEST(GENERATE_ARRAY(1, length, 1))\n          \n          \n            \n              )\n          \n          \n            \n            );\n          \n          \n            \n            ((\n          \n          \n            \n                SELECT \n          \n          \n            \n                  STRING_AGG([\n          \n          \n            \n                    'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',\n          \n          \n            \n                    'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',\n          \n          \n            \n                    '1','2','3','4','5','6','7','8','9','0'][offset(bqutil.fn.random_int(0, 62))], '')\n          \n          \n            \n                FROM \n          \n          \n            \n                  UNNEST(GENERATE_ARRAY(1, length, 1))\n          \n          \n            \n            ));", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/85#discussion_r698582144", "createdAt": "2021-08-30T15:22:52Z", "author": {"login": "danieldeleo"}, "path": "udfs/community/random_string.sql", "diffHunk": "@@ -0,0 +1,32 @@\n+/*\n+ * Copyright 2021 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+-- random_string: Returns a random string of specified length. \n+-- Individual characters are chosen uniformly at random from the following pool of characters: 0-9, a-z, A-Z.\n+-- Input: random string length INT64\n+-- Output: random string of specified length \n+CREATE OR REPLACE FUNCTION fn.random_string(length INT64) AS \n+(\n+  (\n+    SELECT \n+      STRING_AGG([\n+        'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',\n+        'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',\n+        '1','2','3','4','5','6','7','8','9','0'][offset(bqutil.fn.random_int(0, 62))], '')\n+    FROM \n+      UNNEST(GENERATE_ARRAY(1, length, 1))\n+  )\n+);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad85593a1f69923ac1f6408e0b6b20733e252899"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkNDQ1MDQxNjM4OnYy", "diffSide": "RIGHT", "path": "udfs/community/random_string.sql", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0zMFQxNToyNzoyOFrOKaOThg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOC0zMFQxNToyNzoyOFrOKaOThg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5ODU4NTk5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            CREATE OR REPLACE FUNCTION fn.random_string(length INT64) AS \n          \n          \n            \n            ((\n          \n          \n            \n                SELECT \n          \n          \n            \n                  STRING_AGG([\n          \n          \n            \n                    'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',\n          \n          \n            \n                    'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',\n          \n          \n            \n                    '1','2','3','4','5','6','7','8','9','0'][offset(bqutil.fn.random_int(0, 62))], '')\n          \n          \n            \n                FROM \n          \n          \n            \n                  UNNEST(GENERATE_ARRAY(1, length, 1))\n          \n          \n            \n            ));\n          \n          \n            \n            CREATE OR REPLACE FUNCTION fn.random_string(length INT64) AS\n          \n          \n            \n            ((\n          \n          \n            \n              SELECT \n          \n          \n            \n                STRING_AGG([\n          \n          \n            \n                  'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',\n          \n          \n            \n                  'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',\n          \n          \n            \n                  '1','2','3','4','5','6','7','8','9','0'][offset(bqutil.fn.random_int(0, 62))], '')\n          \n          \n            \n              FROM \n          \n          \n            \n                UNNEST(GENERATE_ARRAY(1, length, 1))\n          \n          \n            \n            ));", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/85#discussion_r698585990", "createdAt": "2021-08-30T15:27:28Z", "author": {"login": "danieldeleo"}, "path": "udfs/community/random_string.sql", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Copyright 2021 Google LLC\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+-- random_string: Returns a random string of specified length. \n+-- Individual characters are chosen uniformly at random from the following pool of characters: 0-9, a-z, A-Z.\n+-- Input: random string length INT64\n+-- Output: random string of specified length \n+CREATE OR REPLACE FUNCTION fn.random_string(length INT64) AS \n+((\n+    SELECT \n+      STRING_AGG([\n+        'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z',\n+        'A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z',\n+        '1','2','3','4','5','6','7','8','9','0'][offset(bqutil.fn.random_int(0, 62))], '')\n+    FROM \n+      UNNEST(GENERATE_ARRAY(1, length, 1))\n+));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e123bfac7f92916e95672dbbf46856fb718b9ff8"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2993, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}