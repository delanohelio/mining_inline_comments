{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MDc0MDE3", "number": 70, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNTozMzo0N1rOEGmqqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNTozMzo0N1rOEGmqqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MzYwNDI0OnYy", "diffSide": "RIGHT", "path": "tools/sql_extraction/src/main/kotlin/FileListExpander.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNTozMzo0N1rOGlgLnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjowNjo1NlrOGl2RFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk3Nzc1Nw==", "bodyText": "This is OK today. But pls consider what happens when there are many files to be returned. It's better in that case to use lazy evaluation and return the result in a stream.\nPls add a TODO comment for that.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/70#discussion_r441977757", "createdAt": "2020-06-18T05:33:47Z", "author": {"login": "feiling"}, "path": "tools/sql_extraction/src/main/kotlin/FileListExpander.kt", "diffHunk": "@@ -4,7 +4,20 @@ import java.nio.file.Files\n import java.nio.file.Path\n import java.util.stream.Collectors\n \n+/**\n+ * Expands a collection of file and directory paths to a list of all applicable file paths\n+ */\n class FileListExpander {\n+    /**\n+     * Converts a collection of file and directory paths to all applicable file paths\n+     *\n+     * @param[dirs] File and directory paths to consider\n+     * @param[recursive] True of visit subdirectories recursively,\n+     *     false to only visit the top-level directories\n+     * @param[includes] List of GLOB patterns to limit added output file paths\n+     * @param[excludes] List of GLOB patterns to filter out output file paths\n+     * @return Expanded and filtered collection of file paths to analyze", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6241f0f29f0ea6444006da3657c59e64ae7ab7b9"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMzOTYwNA==", "bodyText": "Wow good idea!", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/70#discussion_r442339604", "createdAt": "2020-06-18T16:06:56Z", "author": {"login": "creativitRy"}, "path": "tools/sql_extraction/src/main/kotlin/FileListExpander.kt", "diffHunk": "@@ -4,7 +4,20 @@ import java.nio.file.Files\n import java.nio.file.Path\n import java.util.stream.Collectors\n \n+/**\n+ * Expands a collection of file and directory paths to a list of all applicable file paths\n+ */\n class FileListExpander {\n+    /**\n+     * Converts a collection of file and directory paths to all applicable file paths\n+     *\n+     * @param[dirs] File and directory paths to consider\n+     * @param[recursive] True of visit subdirectories recursively,\n+     *     false to only visit the top-level directories\n+     * @param[includes] List of GLOB patterns to limit added output file paths\n+     * @param[excludes] List of GLOB patterns to filter out output file paths\n+     * @return Expanded and filtered collection of file paths to analyze", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk3Nzc1Nw=="}, "originalCommit": {"oid": "6241f0f29f0ea6444006da3657c59e64ae7ab7b9"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2954, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}