{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2Njk0Njg1", "number": 118, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzo1OToxMFrOES7O6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzo1OToxMFrOES7O6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjgwMjk3OnYy", "diffSide": "RIGHT", "path": "tools/template_based_query_generation/src/main/java/data/Table.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzo1OToxMFrOG4YKsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNzo0Mjo0OVrOG5DO1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2OTM5NA==", "bodyText": "Instead of create another hashset for generating a random, can we use the schema.keyset to get a random instead?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/118#discussion_r461769394", "createdAt": "2020-07-28T17:59:10Z", "author": {"login": "Bei-z"}, "path": "tools/template_based_query_generation/src/main/java/data/Table.java", "diffHunk": "@@ -40,5 +47,27 @@ public String getName() {\n     return this.name;\n   }\n \n+  public void setNumRows(int numRows) {\n+    this.numRows = numRows;\n+  }\n+\n+  public int getNumRows() {\n+    return this.numRows;\n+  }\n+\n+  /**\n+   *\n+   * @param datatype\n+   * @return name of random column of given datatype\n+   */\n+  public String getRandomColumn(DataType datatype) {\n+    Set<String> s = new HashSet<>();\n+    for (String col: this.schema.keySet()){\n+      if (this.schema.get(col) == datatype) {\n+        s.add(col);\n+      }\n+    }\n+    return Utils.getRandomElement(s);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ddf31f446ae95d999b81efba6ac3f238e5ae639"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ0NDE5NA==", "bodyText": "The method picks a random column of a specific datatype (the parameter is datatype). So I go through the entire schema first and find the column names that contain data of type datatype. I also added another getRandomColumn method that just picks a random column and it uses schema.keySet() directly.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/118#discussion_r462444194", "createdAt": "2020-07-29T16:52:15Z", "author": {"login": "AllenWang314"}, "path": "tools/template_based_query_generation/src/main/java/data/Table.java", "diffHunk": "@@ -40,5 +47,27 @@ public String getName() {\n     return this.name;\n   }\n \n+  public void setNumRows(int numRows) {\n+    this.numRows = numRows;\n+  }\n+\n+  public int getNumRows() {\n+    return this.numRows;\n+  }\n+\n+  /**\n+   *\n+   * @param datatype\n+   * @return name of random column of given datatype\n+   */\n+  public String getRandomColumn(DataType datatype) {\n+    Set<String> s = new HashSet<>();\n+    for (String col: this.schema.keySet()){\n+      if (this.schema.get(col) == datatype) {\n+        s.add(col);\n+      }\n+    }\n+    return Utils.getRandomElement(s);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2OTM5NA=="}, "originalCommit": {"oid": "0ddf31f446ae95d999b81efba6ac3f238e5ae639"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQ3NDk2Ng==", "bodyText": "Thank you for the explanation. Then let's use an array instead of a hashset to get the random.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/118#discussion_r462474966", "createdAt": "2020-07-29T17:42:49Z", "author": {"login": "Bei-z"}, "path": "tools/template_based_query_generation/src/main/java/data/Table.java", "diffHunk": "@@ -40,5 +47,27 @@ public String getName() {\n     return this.name;\n   }\n \n+  public void setNumRows(int numRows) {\n+    this.numRows = numRows;\n+  }\n+\n+  public int getNumRows() {\n+    return this.numRows;\n+  }\n+\n+  /**\n+   *\n+   * @param datatype\n+   * @return name of random column of given datatype\n+   */\n+  public String getRandomColumn(DataType datatype) {\n+    Set<String> s = new HashSet<>();\n+    for (String col: this.schema.keySet()){\n+      if (this.schema.get(col) == datatype) {\n+        s.add(col);\n+      }\n+    }\n+    return Utils.getRandomElement(s);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2OTM5NA=="}, "originalCommit": {"oid": "0ddf31f446ae95d999b81efba6ac3f238e5ae639"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3061, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}