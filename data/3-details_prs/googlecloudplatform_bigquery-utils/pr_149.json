{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NTgzNTA3", "number": 149, "title": "Auto Query Fixer: Implement UnrecognizedColumnFixer and FunctionNotFoundFixer", "bodyText": "Implement UnrecognizedColumnFixer and FunctionNotFoundFixer.\nTestcases are included.", "createdAt": "2020-08-13T19:13:16Z", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149", "merged": true, "mergeCommit": {"oid": "981ab6024593a9828f8ccdec003a02ae202f40d2"}, "closed": true, "closedAt": "2020-08-18T22:03:16Z", "author": {"login": "mingen-pan"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-k7kXAH2gAyNDY3NTgzNTA3OjBkZDI4MjQ3OTA1ZDRiOWFlZDY2YjY0NjU3N2NmNWRmMTNkZjA1NDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAOX2_AH2gAyNDY3NTgzNTA3OmYzYWEwMTI0YzhkZTdkYWJlM2NmNGQwYTg3OTYzYzFkNzlmNjFkZjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0dd28247905d4b9aed66b646577cf5df13df0540", "author": {"user": {"login": "mingen-pan", "name": "Mingen Pan"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/0dd28247905d4b9aed66b646577cf5df13df0540", "committedDate": "2020-08-13T19:11:02Z", "message": "Implement UnrecognizedColumnFixer and FunctionNotFoundFixer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTg3Njcy", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#pullrequestreview-468187672", "createdAt": "2020-08-17T06:15:24Z", "commit": {"oid": "0dd28247905d4b9aed66b646577cf5df13df0540"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoxNToyNVrOHBa8Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoxNToyNVrOHBa8Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI1MjAzOA==", "bodyText": "why we want this flag? What if we are not confident\uff1f\nMaybe give confidence level instead of boolean?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#discussion_r471252038", "createdAt": "2020-08-17T06:15:25Z", "author": {"login": "kikkyo"}, "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/entity/FixResult.java", "diffHunk": "@@ -27,17 +29,25 @@\n   /** The position at the query where the error occurs. */\n   Position errorPosition;\n \n+  /** Is query fixer confident about this fixing */\n+  Boolean isConfident;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dd28247905d4b9aed66b646577cf5df13df0540"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTg4NTA4", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#pullrequestreview-468188508", "createdAt": "2020-08-17T06:17:37Z", "commit": {"oid": "0dd28247905d4b9aed66b646577cf5df13df0540"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoxNzozN1rOHBa-2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoxNzozN1rOHBa-2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI1MjY5OA==", "bodyText": "Does this mean if the 'dry-run' error message doesn't provide similar function suggestions we will return error?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#discussion_r471252698", "createdAt": "2020-08-17T06:17:37Z", "author": {"login": "kikkyo"}, "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/FunctionNotFoundFixer.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.google.cloud.bigquery.utils.queryfixer.fixer;\n+\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixOption;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixResult;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.IToken;\n+import com.google.cloud.bigquery.utils.queryfixer.errors.FunctionNotFoundError;\n+import com.google.cloud.bigquery.utils.queryfixer.tokenizer.QueryTokenProcessor;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import java.util.Collections;\n+\n+/**\n+ * The fixer class responsible for unrecognized functions. It fixes the error by (1) reading the\n+ * similar function suggestion from the error message, and (2) replace the unrecognized function\n+ * with the suggested one.\n+ *\n+ * <p>If the error message does not provide similar function suggestions, the fixer will directly", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dd28247905d4b9aed66b646577cf5df13df0540"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTg4NzE1", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#pullrequestreview-468188715", "createdAt": "2020-08-17T06:18:08Z", "commit": {"oid": "0dd28247905d4b9aed66b646577cf5df13df0540"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoxODowOFrOHBa_bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoxODowOFrOHBa_bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI1Mjg0NQ==", "bodyText": "nit: If", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#discussion_r471252845", "createdAt": "2020-08-17T06:18:08Z", "author": {"login": "kikkyo"}, "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/FunctionNotFoundFixer.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.google.cloud.bigquery.utils.queryfixer.fixer;\n+\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixOption;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixResult;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.IToken;\n+import com.google.cloud.bigquery.utils.queryfixer.errors.FunctionNotFoundError;\n+import com.google.cloud.bigquery.utils.queryfixer.tokenizer.QueryTokenProcessor;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import java.util.Collections;\n+\n+/**\n+ * The fixer class responsible for unrecognized functions. It fixes the error by (1) reading the\n+ * similar function suggestion from the error message, and (2) replace the unrecognized function\n+ * with the suggested one.\n+ *\n+ * <p>If the error message does not provide similar function suggestions, the fixer will directly\n+ * return the error without providing any fix options.\n+ */\n+@AllArgsConstructor\n+@Getter\n+public class FunctionNotFoundFixer implements IFixer {\n+\n+  private final String query;\n+  private final FunctionNotFoundError err;\n+  private final QueryTokenProcessor queryTokenProcessor;\n+\n+  @Override\n+  public FixResult fix() {\n+    // if the failure does not include a suggestion, directly inform users that it cannot be auto", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dd28247905d4b9aed66b646577cf5df13df0540"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MTg5MDg5", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#pullrequestreview-468189089", "createdAt": "2020-08-17T06:19:07Z", "commit": {"oid": "0dd28247905d4b9aed66b646577cf5df13df0540"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoxOTowN1rOHBbAjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwNjoxOTowN1rOHBbAjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTI1MzEzNA==", "bodyText": "nit: If", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#discussion_r471253134", "createdAt": "2020-08-17T06:19:07Z", "author": {"login": "kikkyo"}, "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/UnrecognizedColumnFixer.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package com.google.cloud.bigquery.utils.queryfixer.fixer;\n+\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixOption;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixResult;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.IToken;\n+import com.google.cloud.bigquery.utils.queryfixer.errors.UnrecognizedColumnError;\n+import com.google.cloud.bigquery.utils.queryfixer.tokenizer.QueryTokenProcessor;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import java.util.Collections;\n+\n+/**\n+ * The fixer class responsible for unrecognized columns. It fixes the error by (1) reading the\n+ * similar column suggestion from the error message, and (2) replace the unrecognized column with\n+ * the suggested one.\n+ *\n+ * <p>If the error message does not provide similar column suggestions, the fixer will directly\n+ * return the error without providing any fix options.\n+ */\n+@AllArgsConstructor\n+@Getter\n+public class UnrecognizedColumnFixer implements IFixer {\n+\n+  private final String query;\n+  private final UnrecognizedColumnError err;\n+  private final QueryTokenProcessor queryTokenProcessor;\n+\n+  @Override\n+  public FixResult fix() {\n+    // if the failure does not include a suggestion, directly inform users that it cannot be auto\n+    // fixed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dd28247905d4b9aed66b646577cf5df13df0540"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79e7910a2ad9df57fa5243f3981629a296d87db8", "author": {"user": {"login": "mingen-pan", "name": "Mingen Pan"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/79e7910a2ad9df57fa5243f3981629a296d87db8", "committedDate": "2020-08-18T19:04:32Z", "message": "Fix based on PR."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzQ1OTI0", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#pullrequestreview-469745924", "createdAt": "2020-08-18T19:09:41Z", "commit": {"oid": "79e7910a2ad9df57fa5243f3981629a296d87db8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTowOTo0MVrOHCiNaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTowOTo0MVrOHCiNaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQxOTY4OQ==", "bodyText": "nit: fix 'failed'?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#discussion_r472419689", "createdAt": "2020-08-18T19:09:41Z", "author": {"login": "kikkyo"}, "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/entity/FixResult.java", "diffHunk": "@@ -27,17 +29,25 @@\n   /** The position at the query where the error occurs. */\n   Position errorPosition;\n \n+  /** Is query fixer confident about this fixing */\n+  Boolean isConfident;\n+\n+  /** The reason why this fix is failed. It is only not null when the Status is FAILURE. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e7910a2ad9df57fa5243f3981629a296d87db8"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzQ3MDA0", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#pullrequestreview-469747004", "createdAt": "2020-08-18T19:11:14Z", "commit": {"oid": "79e7910a2ad9df57fa5243f3981629a296d87db8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOToxMToxNFrOHCiQuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOToxMToxNFrOHCiQuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyMDUzOQ==", "bodyText": "maybe 'errorDetail' or 'failureDetail'?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#discussion_r472420539", "createdAt": "2020-08-18T19:11:14Z", "author": {"login": "kikkyo"}, "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/entity/FixResult.java", "diffHunk": "@@ -27,17 +29,25 @@\n   /** The position at the query where the error occurs. */\n   Position errorPosition;\n \n+  /** Is query fixer confident about this fixing */\n+  Boolean isConfident;\n+\n+  /** The reason why this fix is failed. It is only not null when the Status is FAILURE. */\n+  String failureReason;\n+\n   /**\n    * Create a Failure FixResult indicating that a {@link BigQuerySqlError} can not be fixed.\n    *\n    * @param error un-fixable error\n+   * @param failureReason reason why this fix is failed.\n    * @return FixResult with FAILURE Status\n    */\n-  public static FixResult failure(BigQuerySqlError error) {\n+  public static FixResult failure(BigQuerySqlError error, String failureReason) {\n     return FixResult.builder()\n         .status(Status.FAILURE)\n         .error(error.getErrorSource().getMessage())\n         .errorPosition(error.getErrorPosition())\n+        .failureReason(failureReason)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e7910a2ad9df57fa5243f3981629a296d87db8"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzQ4Njkx", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#pullrequestreview-469748691", "createdAt": "2020-08-18T19:13:47Z", "commit": {"oid": "79e7910a2ad9df57fa5243f3981629a296d87db8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOToxMzo0N1rOHCiV5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOToxMzo0N1rOHCiV5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyMTg2MQ==", "bodyText": "Do we find similar function using edit distance too or other algo?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#discussion_r472421861", "createdAt": "2020-08-18T19:13:47Z", "author": {"login": "kikkyo"}, "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/FunctionNotFoundFixer.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.google.cloud.bigquery.utils.queryfixer.fixer;\n+\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixOption;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixResult;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.IToken;\n+import com.google.cloud.bigquery.utils.queryfixer.errors.FunctionNotFoundError;\n+import com.google.cloud.bigquery.utils.queryfixer.tokenizer.QueryTokenProcessor;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import java.util.Collections;\n+\n+/**\n+ * The fixer class responsible for unrecognized functions. It fixes the error by (1) reading the\n+ * similar function suggestion from the error message, and (2) replace the unrecognized function\n+ * with the suggested one.\n+ *\n+ * <p>If the error message does not provide similar function suggestions, the fixer will directly\n+ * return the error without providing any fix options.\n+ */\n+@AllArgsConstructor\n+@Getter\n+public class FunctionNotFoundFixer implements IFixer {\n+\n+  private final String query;\n+  private final FunctionNotFoundError err;\n+  private final QueryTokenProcessor queryTokenProcessor;\n+\n+  @Override\n+  public FixResult fix() {\n+    // If the failure does not include a suggestion, directly inform users that it cannot be auto\n+    // fixed.\n+    if (!err.hasSuggestion()) {\n+      return FixResult.failure(err, \"No similar function was found.\");\n+    }\n+\n+    // TODO: If the unrecognized function looks like a UDF (i.e. proj.dataset.function), then\n+    // request BigQuery for a list of functions and find the most similar one.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e7910a2ad9df57fa5243f3981629a296d87db8"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzQ5MDMy", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#pullrequestreview-469749032", "createdAt": "2020-08-18T19:14:20Z", "commit": {"oid": "79e7910a2ad9df57fa5243f3981629a296d87db8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOToxNDoyMVrOHCiW3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOToxNDoyMVrOHCiW3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyMjEwOQ==", "bodyText": "'Replace the function'? since we are using a new function instead", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#discussion_r472422109", "createdAt": "2020-08-18T19:14:21Z", "author": {"login": "kikkyo"}, "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/fixer/FunctionNotFoundFixer.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.google.cloud.bigquery.utils.queryfixer.fixer;\n+\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixOption;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.FixResult;\n+import com.google.cloud.bigquery.utils.queryfixer.entity.IToken;\n+import com.google.cloud.bigquery.utils.queryfixer.errors.FunctionNotFoundError;\n+import com.google.cloud.bigquery.utils.queryfixer.tokenizer.QueryTokenProcessor;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+\n+import java.util.Collections;\n+\n+/**\n+ * The fixer class responsible for unrecognized functions. It fixes the error by (1) reading the\n+ * similar function suggestion from the error message, and (2) replace the unrecognized function\n+ * with the suggested one.\n+ *\n+ * <p>If the error message does not provide similar function suggestions, the fixer will directly\n+ * return the error without providing any fix options.\n+ */\n+@AllArgsConstructor\n+@Getter\n+public class FunctionNotFoundFixer implements IFixer {\n+\n+  private final String query;\n+  private final FunctionNotFoundError err;\n+  private final QueryTokenProcessor queryTokenProcessor;\n+\n+  @Override\n+  public FixResult fix() {\n+    // If the failure does not include a suggestion, directly inform users that it cannot be auto\n+    // fixed.\n+    if (!err.hasSuggestion()) {\n+      return FixResult.failure(err, \"No similar function was found.\");\n+    }\n+\n+    // TODO: If the unrecognized function looks like a UDF (i.e. proj.dataset.function), then\n+    // request BigQuery for a list of functions and find the most similar one.\n+\n+    IToken token =\n+        queryTokenProcessor.getTokenAt(\n+            query, err.getErrorPosition().getRow(), err.getErrorPosition().getColumn());\n+    String fixedQuery = queryTokenProcessor.replaceToken(query, token, err.getSuggestion());\n+    FixOption fixOption = FixOption.of(err.getSuggestion(), fixedQuery);\n+    return FixResult.success(\n+        /*suggestion= */ \"Modify the function\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e7910a2ad9df57fa5243f3981629a296d87db8"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzUwNzYz", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#pullrequestreview-469750763", "createdAt": "2020-08-18T19:16:56Z", "commit": {"oid": "79e7910a2ad9df57fa5243f3981629a296d87db8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOToxNjo1N1rOHCicPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOToxNjo1N1rOHCicPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQyMzQ4NA==", "bodyText": "We should add more test cases for each error type, consider using parameterized tests or file-based test. We need to test more complicated queries.\nFeel free to add TODO and add it later.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#discussion_r472423484", "createdAt": "2020-08-18T19:16:57Z", "author": {"login": "kikkyo"}, "path": "tools/automatic_query_fixer/src/test/java/com/google/cloud/bigquery/utils/queryfixer/FixerTest.java", "diffHunk": "@@ -74,6 +72,45 @@ public void fixTableNotFound() {\n     assertEquals(22, result.getErrorPosition().getColumn());\n   }\n \n+  @Test\n+  public void fixUnrecognizedColumn() {\n+    String query = \"SELECT state From `bigquery-public-data.austin_311.311_request` LIMIT 10\";\n+    String message = \"Unrecognized name: state; Did you mean status? at [1:8]\";\n+    BigQuerySqlError error = buildError(message);\n+\n+    IFixer fixer = fixerFactory.getFixer(query, error);\n+    assertTrue(fixer instanceof UnrecognizedColumnFixer);\n+\n+    FixResult result = fixer.fix();\n+    assertEquals(1, result.getOptions().size());\n+    assertEquals(\n+        \"SELECT status From `bigquery-public-data.austin_311.311_request` LIMIT 10\",\n+        result.getOptions().get(0).getFixedQuery());\n+\n+    assertEquals(1, result.getErrorPosition().getRow());\n+    assertEquals(8, result.getErrorPosition().getColumn());\n+  }\n+\n+  @Test\n+  public void fixFunctionNotFound() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79e7910a2ad9df57fa5243f3981629a296d87db8"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzUwODE2", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/149#pullrequestreview-469750816", "createdAt": "2020-08-18T19:17:02Z", "commit": {"oid": "79e7910a2ad9df57fa5243f3981629a296d87db8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a7fcfb7bb80197ee58d7201bd8e49903b96b7f2", "author": {"user": {"login": "mingen-pan", "name": "Mingen Pan"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/3a7fcfb7bb80197ee58d7201bd8e49903b96b7f2", "committedDate": "2020-08-18T22:01:43Z", "message": "Minor refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3aa0124c8de7dabe3cf4d0a87963c1d79f61df2", "author": {"user": {"login": "mingen-pan", "name": "Mingen Pan"}}, "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/commit/f3aa0124c8de7dabe3cf4d0a87963c1d79f61df2", "committedDate": "2020-08-18T22:01:58Z", "message": "Merge branch 'master' into add_fixer"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 741, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}