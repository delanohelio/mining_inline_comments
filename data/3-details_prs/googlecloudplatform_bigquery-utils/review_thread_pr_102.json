{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NzIxMjU2", "number": 102, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMTozNDozM1rOEO7dVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMDo1NDo0NVrOEPTT2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDg5Njg2OnYy", "diffSide": "RIGHT", "path": "tools/sql_extraction/src/main/kotlin/DataFlowSolver.kt", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMTozNDozM1rOGyW8mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMDo1MDoxNFrOGy8Sdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1Nzk0NQ==", "bodyText": "nit: should you print the filePath somewhere? $filePath doesn't have much information or it would be replaced by the actual variable?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r455457945", "createdAt": "2020-07-16T01:34:33Z", "author": {"login": "kikkyo"}, "path": "tools/sql_extraction/src/main/kotlin/DataFlowSolver.kt", "diffHunk": "@@ -29,6 +29,7 @@ class DataFlowSolver(private val frontends: List<FrontEnd>) {\n             }\n         }\n \n-        throw IllegalArgumentException(\"Cannot analyze $filePath. No frontend available.\")\n+        LOGGER.warn { \"Cannot analyze $filePath. No frontend available. Skipping file...\" }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk3NDQyOQ==", "bodyText": "$ is string interpolation in Kotlin. It should be replaced by the actual variable's toString().", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r455974429", "createdAt": "2020-07-16T18:05:12Z", "author": {"login": "creativitRy"}, "path": "tools/sql_extraction/src/main/kotlin/DataFlowSolver.kt", "diffHunk": "@@ -29,6 +29,7 @@ class DataFlowSolver(private val frontends: List<FrontEnd>) {\n             }\n         }\n \n-        throw IllegalArgumentException(\"Cannot analyze $filePath. No frontend available.\")\n+        LOGGER.warn { \"Cannot analyze $filePath. No frontend available. Skipping file...\" }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1Nzk0NQ=="}, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA2OTc1MQ==", "bodyText": "thanks!", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456069751", "createdAt": "2020-07-16T20:50:14Z", "author": {"login": "kikkyo"}, "path": "tools/sql_extraction/src/main/kotlin/DataFlowSolver.kt", "diffHunk": "@@ -29,6 +29,7 @@ class DataFlowSolver(private val frontends: List<FrontEnd>) {\n             }\n         }\n \n-        throw IllegalArgumentException(\"Cannot analyze $filePath. No frontend available.\")\n+        LOGGER.warn { \"Cannot analyze $filePath. No frontend available. Skipping file...\" }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1Nzk0NQ=="}, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDk2MzYzOnYy", "diffSide": "RIGHT", "path": "tools/sql_extraction/src/test/kotlin/DataFlowSolverTest.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjoxMDo0MVrOGyXjHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjoxMTo0OVrOGyXkUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2NzgwNA==", "bodyText": "Is it better practice to use mock annotation @mockk?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r455467804", "createdAt": "2020-07-16T02:10:41Z", "author": {"login": "kikkyo"}, "path": "tools/sql_extraction/src/test/kotlin/DataFlowSolverTest.kt", "diffHunk": "@@ -39,13 +42,16 @@ class DataFlowSolverTest {\n     }\n \n     @Test\n-    fun `solver throws without any valid frontends`() {\n+    fun `solver returns empty sequence without any valid frontends`() {\n         val frontEnd = mockk<FrontEnd>()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2ODExMw==", "bodyText": "I think it is more common in our codebase to use annotation and set up the 'shared' mock variable inside the test class, instead of creating them in each method.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r455468113", "createdAt": "2020-07-16T02:11:49Z", "author": {"login": "kikkyo"}, "path": "tools/sql_extraction/src/test/kotlin/DataFlowSolverTest.kt", "diffHunk": "@@ -39,13 +42,16 @@ class DataFlowSolverTest {\n     }\n \n     @Test\n-    fun `solver throws without any valid frontends`() {\n+    fun `solver returns empty sequence without any valid frontends`() {\n         val frontEnd = mockk<FrontEnd>()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2NzgwNA=="}, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDk3MjA4OnYy", "diffSide": "RIGHT", "path": "tools/sql_extraction/src/test/kotlin/DataFlowSolverTest.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMjoxNToyNlrOGyXn7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMDo1MToxNVrOGy8UjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2OTAzNg==", "bodyText": "curious on the style too... why not 'SolverReturnsEmptySequence....'? Is this recommended?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r455469036", "createdAt": "2020-07-16T02:15:26Z", "author": {"login": "kikkyo"}, "path": "tools/sql_extraction/src/test/kotlin/DataFlowSolverTest.kt", "diffHunk": "@@ -39,13 +42,16 @@ class DataFlowSolverTest {\n     }\n \n     @Test\n-    fun `solver throws without any valid frontends`() {\n+    fun `solver returns empty sequence without any valid frontends`() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTk3NjcxNQ==", "bodyText": "Since the language allows method names with spaces, I thought it would be more readable. I just did more reading and found unit testing best practices for Kotlin, which is recommending backticks.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r455976715", "createdAt": "2020-07-16T18:08:51Z", "author": {"login": "creativitRy"}, "path": "tools/sql_extraction/src/test/kotlin/DataFlowSolverTest.kt", "diffHunk": "@@ -39,13 +42,16 @@ class DataFlowSolverTest {\n     }\n \n     @Test\n-    fun `solver throws without any valid frontends`() {\n+    fun `solver returns empty sequence without any valid frontends`() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2OTAzNg=="}, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MDI4NQ==", "bodyText": "ok thanks!", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456070285", "createdAt": "2020-07-16T20:51:15Z", "author": {"login": "kikkyo"}, "path": "tools/sql_extraction/src/test/kotlin/DataFlowSolverTest.kt", "diffHunk": "@@ -39,13 +42,16 @@ class DataFlowSolverTest {\n     }\n \n     @Test\n-    fun `solver throws without any valid frontends`() {\n+    fun `solver returns empty sequence without any valid frontends`() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ2OTAzNg=="}, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NDgwMTExOnYy", "diffSide": "RIGHT", "path": "tools/sql_extraction/src/main/kotlin/Cli.kt", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMDo1MzozMlrOGy8ZPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMjoxNzo0NlrOGy-vHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MTQ4Nw==", "bodyText": "Do we have to specify both options to make it work?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456071487", "createdAt": "2020-07-16T20:53:32Z", "author": {"login": "kikkyo"}, "path": "tools/sql_extraction/src/main/kotlin/Cli.kt", "diffHunk": "@@ -74,13 +72,28 @@ private class Cli(\n         \"--pretty\", help = \"Pretty-print output JSON\"\n     ).flag()\n \n+    private val showProgress: Boolean by option(\n+        \"--progress\", help = \"Print progress to STDERR\"\n+    ).flag()\n+\n+    private val debug: Boolean by option(\n+        \"--debug\", \"--verbose\", help = \"Print debug logs to STDERR\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjEwOTg1Mg==", "bodyText": "It works for either one", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456109852", "createdAt": "2020-07-16T22:17:46Z", "author": {"login": "creativitRy"}, "path": "tools/sql_extraction/src/main/kotlin/Cli.kt", "diffHunk": "@@ -74,13 +72,28 @@ private class Cli(\n         \"--pretty\", help = \"Pretty-print output JSON\"\n     ).flag()\n \n+    private val showProgress: Boolean by option(\n+        \"--progress\", help = \"Print progress to STDERR\"\n+    ).flag()\n+\n+    private val debug: Boolean by option(\n+        \"--debug\", \"--verbose\", help = \"Print debug logs to STDERR\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MTQ4Nw=="}, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NDgwNDczOnYy", "diffSide": "RIGHT", "path": "tools/sql_extraction/src/main/kotlin/Cli.kt", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMDo1NDo0NVrOGy8bkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQyMjoyMzozMVrOGy-24g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MjA4MA==", "bodyText": "This setProperty looks a bit hard coded, do we have to update this if our dependency/libs change in future?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456072080", "createdAt": "2020-07-16T20:54:45Z", "author": {"login": "kikkyo"}, "path": "tools/sql_extraction/src/main/kotlin/Cli.kt", "diffHunk": "@@ -74,13 +72,28 @@ private class Cli(\n         \"--pretty\", help = \"Pretty-print output JSON\"\n     ).flag()\n \n+    private val showProgress: Boolean by option(\n+        \"--progress\", help = \"Print progress to STDERR\"\n+    ).flag()\n+\n+    private val debug: Boolean by option(\n+        \"--debug\", \"--verbose\", help = \"Print debug logs to STDERR\"\n+    ).flag()\n+\n     override fun run() {\n-        LOGGER.debug(\"Starting SQL Extraction from command line\")\n+        if (debug) {\n+            System.setProperty(org.slf4j.impl.SimpleLogger.DEFAULT_LOG_LEVEL_KEY, \"Debug\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjExMTY2Ng==", "bodyText": "Yes, this would have to change if we were to change the logging dependencies from slf4j to something else.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456111666", "createdAt": "2020-07-16T22:23:02Z", "author": {"login": "creativitRy"}, "path": "tools/sql_extraction/src/main/kotlin/Cli.kt", "diffHunk": "@@ -74,13 +72,28 @@ private class Cli(\n         \"--pretty\", help = \"Pretty-print output JSON\"\n     ).flag()\n \n+    private val showProgress: Boolean by option(\n+        \"--progress\", help = \"Print progress to STDERR\"\n+    ).flag()\n+\n+    private val debug: Boolean by option(\n+        \"--debug\", \"--verbose\", help = \"Print debug logs to STDERR\"\n+    ).flag()\n+\n     override fun run() {\n-        LOGGER.debug(\"Starting SQL Extraction from command line\")\n+        if (debug) {\n+            System.setProperty(org.slf4j.impl.SimpleLogger.DEFAULT_LOG_LEVEL_KEY, \"Debug\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MjA4MA=="}, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjExMTg0Mg==", "bodyText": "I realized I can import SimpleLogger for brevity.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/102#discussion_r456111842", "createdAt": "2020-07-16T22:23:31Z", "author": {"login": "creativitRy"}, "path": "tools/sql_extraction/src/main/kotlin/Cli.kt", "diffHunk": "@@ -74,13 +72,28 @@ private class Cli(\n         \"--pretty\", help = \"Pretty-print output JSON\"\n     ).flag()\n \n+    private val showProgress: Boolean by option(\n+        \"--progress\", help = \"Print progress to STDERR\"\n+    ).flag()\n+\n+    private val debug: Boolean by option(\n+        \"--debug\", \"--verbose\", help = \"Print debug logs to STDERR\"\n+    ).flag()\n+\n     override fun run() {\n-        LOGGER.debug(\"Starting SQL Extraction from command line\")\n+        if (debug) {\n+            System.setProperty(org.slf4j.impl.SimpleLogger.DEFAULT_LOG_LEVEL_KEY, \"Debug\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjA3MjA4MA=="}, "originalCommit": {"oid": "33960836029854fbbcbced8a42807d17ab02bc4e"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3032, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}