{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDU5NjQ1", "number": 87, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjowODo0MVrOEOHcTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjoxNTo1NVrOEOHjrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjM3NDUzOnYy", "diffSide": "RIGHT", "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/BigQueryParserFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjowODo0MVrOGxFf9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMzowNzo0NlrOGxoanA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyMzUxMQ==", "bodyText": "nit: is 'a' Babel Paser", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/87#discussion_r454123511", "createdAt": "2020-07-14T06:08:41Z", "author": {"login": "kikkyo"}, "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/BigQueryParserFactory.java", "diffHunk": "@@ -11,12 +11,13 @@\n import org.apache.commons.lang3.reflect.FieldUtils;\n \n import com.google.cloud.bigquery.utils.queryfixer.exception.ParserCreationException;\n+import com.google.common.base.Preconditions;\n \n import java.io.Reader;\n-import java.util.Objects;\n \n /**\n- * A factory to generate parsers. The fault generated parser is Babel Parser with BigQuery dialect.\n+ * A factory to generate parsers. The default generated parser is Babel Parser with BigQuery", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c41e10f848ea306e0d10842bfa3e05592798b7e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY5NTU4MA==", "bodyText": "Done.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/87#discussion_r454695580", "createdAt": "2020-07-14T23:07:46Z", "author": {"login": "mingen-pan"}, "path": "tools/automatic_query_fixer/src/main/java/com/google/cloud/bigquery/utils/queryfixer/BigQueryParserFactory.java", "diffHunk": "@@ -11,12 +11,13 @@\n import org.apache.commons.lang3.reflect.FieldUtils;\n \n import com.google.cloud.bigquery.utils.queryfixer.exception.ParserCreationException;\n+import com.google.common.base.Preconditions;\n \n import java.io.Reader;\n-import java.util.Objects;\n \n /**\n- * A factory to generate parsers. The fault generated parser is Babel Parser with BigQuery dialect.\n+ * A factory to generate parsers. The default generated parser is Babel Parser with BigQuery", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyMzUxMQ=="}, "originalCommit": {"oid": "2c41e10f848ea306e0d10842bfa3e05592798b7e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjM5MzQyOnYy", "diffSide": "RIGHT", "path": "tools/automatic_query_fixer/src/test/java/com/google/cloud/bigquery/utils/queryfixer/QueryTokenProcessorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjoxNTo1NVrOGxFq2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMzoxMTozNFrOGxofjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyNjI5Ng==", "bodyText": "Since we only need this once, you can use @BeforeClass?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/87#discussion_r454126296", "createdAt": "2020-07-14T06:15:55Z", "author": {"login": "kikkyo"}, "path": "tools/automatic_query_fixer/src/test/java/com/google/cloud/bigquery/utils/queryfixer/QueryTokenProcessorTest.java", "diffHunk": "@@ -10,21 +11,20 @@\n \n public class QueryTokenProcessorTest {\n \n-  private QueryTokenProcessor createService() {\n-    return new QueryTokenProcessor(new BigQueryParserFactory());\n+  private QueryTokenProcessor tokenService;\n+\n+  @Before", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c41e10f848ea306e0d10842bfa3e05592798b7e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY5Njg0Nw==", "bodyText": "I think @Before is better because I need it to init a member variable. @BeforeClass is a static method and cannot init a member variable.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/87#discussion_r454696847", "createdAt": "2020-07-14T23:11:34Z", "author": {"login": "mingen-pan"}, "path": "tools/automatic_query_fixer/src/test/java/com/google/cloud/bigquery/utils/queryfixer/QueryTokenProcessorTest.java", "diffHunk": "@@ -10,21 +11,20 @@\n \n public class QueryTokenProcessorTest {\n \n-  private QueryTokenProcessor createService() {\n-    return new QueryTokenProcessor(new BigQueryParserFactory());\n+  private QueryTokenProcessor tokenService;\n+\n+  @Before", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEyNjI5Ng=="}, "originalCommit": {"oid": "2c41e10f848ea306e0d10842bfa3e05592798b7e"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3001, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}