{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MDA1MDg5", "number": 147, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoxNjo1NlrOEaGNBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoyNDo0NVrOEaGXEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1ODAwMDY5OnYy", "diffSide": "RIGHT", "path": "tools/query_breakdown/src/main/java/com/google/bigquery/Main.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoxNjo1NlrOHDTvPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMTo1OToxMVrOHDb6yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzMTE2NA==", "bodyText": "Seems , PATH should not be here?", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/147#discussion_r473231164", "createdAt": "2020-08-19T18:16:56Z", "author": {"login": "feiling"}, "path": "tools/query_breakdown/src/main/java/com/google/bigquery/Main.java", "diffHunk": "@@ -2,34 +2,31 @@\n \n import static java.lang.System.exit;\n \n-import java.io.File;\n import org.apache.commons.cli.*;\n \n import java.io.IOException;\n-import java.util.Comparator;\n \n /**\n  * This file is the main file for the command line tool.\n- * Usage: query_breakdown -i <PATH> [-o <PATH>] [-l <INTEGER>]\n+ * Usage: query_breakdown -i <PATH> [-j] [-l <INTEGER>]\n  * -i, --inputFile, PATH: this command specifies the path to the file containing queries to be\n  *                    inputted into the tool. It is therefore mandatory\n- * -o, --outputFile, PATH: this command specifies the path to the file that the tool can write\n- *                    its results to. If not specified, the tool will simply print results on the\n- *                    console. It is therefore optional\n+ * -j, --json, PATH: this command specifies whether the program should output the results in a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "751716ca54416ef54ba970e83eb373ecb62b7dd0"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM2NTE5Mg==", "bodyText": "yup, changed", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/147#discussion_r473365192", "createdAt": "2020-08-19T21:59:11Z", "author": {"login": "subinbean"}, "path": "tools/query_breakdown/src/main/java/com/google/bigquery/Main.java", "diffHunk": "@@ -2,34 +2,31 @@\n \n import static java.lang.System.exit;\n \n-import java.io.File;\n import org.apache.commons.cli.*;\n \n import java.io.IOException;\n-import java.util.Comparator;\n \n /**\n  * This file is the main file for the command line tool.\n- * Usage: query_breakdown -i <PATH> [-o <PATH>] [-l <INTEGER>]\n+ * Usage: query_breakdown -i <PATH> [-j] [-l <INTEGER>]\n  * -i, --inputFile, PATH: this command specifies the path to the file containing queries to be\n  *                    inputted into the tool. It is therefore mandatory\n- * -o, --outputFile, PATH: this command specifies the path to the file that the tool can write\n- *                    its results to. If not specified, the tool will simply print results on the\n- *                    console. It is therefore optional\n+ * -j, --json, PATH: this command specifies whether the program should output the results in a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzMTE2NA=="}, "originalCommit": {"oid": "751716ca54416ef54ba970e83eb373ecb62b7dd0"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1ODAwNTc3OnYy", "diffSide": "RIGHT", "path": "tools/query_breakdown/src/main/java/com/google/bigquery/Main.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoxODozNVrOHDTyfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMTo1OToyMlrOHDb7RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzMTk5OA==", "bodyText": "Seems PATH should be INTEGER", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/147#discussion_r473231998", "createdAt": "2020-08-19T18:18:35Z", "author": {"login": "feiling"}, "path": "tools/query_breakdown/src/main/java/com/google/bigquery/Main.java", "diffHunk": "@@ -2,34 +2,31 @@\n \n import static java.lang.System.exit;\n \n-import java.io.File;\n import org.apache.commons.cli.*;\n \n import java.io.IOException;\n-import java.util.Comparator;\n \n /**\n  * This file is the main file for the command line tool.\n- * Usage: query_breakdown -i <PATH> [-o <PATH>] [-l <INTEGER>]\n+ * Usage: query_breakdown -i <PATH> [-j] [-l <INTEGER>]\n  * -i, --inputFile, PATH: this command specifies the path to the file containing queries to be\n  *                    inputted into the tool. It is therefore mandatory\n- * -o, --outputFile, PATH: this command specifies the path to the file that the tool can write\n- *                    its results to. If not specified, the tool will simply print results on the\n- *                    console. It is therefore optional\n+ * -j, --json, PATH: this command specifies whether the program should output the results in a\n+ *                   json format. It is therefore optional\n  * -l, --limit, PATH: this command specifies the path to an integer that the tool takes as a", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "751716ca54416ef54ba970e83eb373ecb62b7dd0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM2NTMxNw==", "bodyText": "yup, changed!", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/147#discussion_r473365317", "createdAt": "2020-08-19T21:59:22Z", "author": {"login": "subinbean"}, "path": "tools/query_breakdown/src/main/java/com/google/bigquery/Main.java", "diffHunk": "@@ -2,34 +2,31 @@\n \n import static java.lang.System.exit;\n \n-import java.io.File;\n import org.apache.commons.cli.*;\n \n import java.io.IOException;\n-import java.util.Comparator;\n \n /**\n  * This file is the main file for the command line tool.\n- * Usage: query_breakdown -i <PATH> [-o <PATH>] [-l <INTEGER>]\n+ * Usage: query_breakdown -i <PATH> [-j] [-l <INTEGER>]\n  * -i, --inputFile, PATH: this command specifies the path to the file containing queries to be\n  *                    inputted into the tool. It is therefore mandatory\n- * -o, --outputFile, PATH: this command specifies the path to the file that the tool can write\n- *                    its results to. If not specified, the tool will simply print results on the\n- *                    console. It is therefore optional\n+ * -j, --json, PATH: this command specifies whether the program should output the results in a\n+ *                   json format. It is therefore optional\n  * -l, --limit, PATH: this command specifies the path to an integer that the tool takes as a", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzMTk5OA=="}, "originalCommit": {"oid": "751716ca54416ef54ba970e83eb373ecb62b7dd0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1ODAyNjQwOnYy", "diffSide": "RIGHT", "path": "tools/query_breakdown/src/main/java/com/google/bigquery/QueryBreakdown.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxODoyNDo0NVrOHDT_OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQyMDoxNjo1OVrOHE7h4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNTI1Nw==", "bodyText": "You should be able to simplify this by using a library like Jackson (https://en.wikipedia.org/wiki/Jackson_(API)). You can choose to do that in a future PR.", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/147#discussion_r473235257", "createdAt": "2020-08-19T18:24:45Z", "author": {"login": "feiling"}, "path": "tools/query_breakdown/src/main/java/com/google/bigquery/QueryBreakdown.java", "diffHunk": "@@ -62,23 +64,51 @@ public void run(String originalQuery, String outputFile, int errorLimit,\n       stack.push(current);\n       current = current.getParent();\n     }\n-\n-    // we then pop the stack and output results one by one\n-    while (!stack.empty()) {\n-      current = stack.pop();\n-      if (current.getErrorHandlingType().equals(\"DELETION\")) {\n-        // print out the result\n-        System.out.println(String.format(\"Unparseable portion: Start Line %1$s, End Line %2$s, \"\n-                + \"Start Column %3$s, End Column %4$s, %5$s\", current.getStartLine(),\n-            current.getEndLine(), current.getStartColumn(), current.getEndColumn(),\n-            current.getErrorHandlingType()));\n+    \n+    if (jsonOutput) {\n+      JSONArray jsonArray = new JSONArray();\n+      while(!stack.empty()) {\n+        current = stack.pop();\n+        JSONObject errorPosition = new JSONObject();\n+        errorPosition.put(\"startLine\", current.getStartLine());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "751716ca54416ef54ba970e83eb373ecb62b7dd0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM2ODE3NA==", "bodyText": "Got it, yup. Right now I might still add more to the JSON schema so I will address this in a future PR!", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/147#discussion_r473368174", "createdAt": "2020-08-19T22:03:03Z", "author": {"login": "subinbean"}, "path": "tools/query_breakdown/src/main/java/com/google/bigquery/QueryBreakdown.java", "diffHunk": "@@ -62,23 +64,51 @@ public void run(String originalQuery, String outputFile, int errorLimit,\n       stack.push(current);\n       current = current.getParent();\n     }\n-\n-    // we then pop the stack and output results one by one\n-    while (!stack.empty()) {\n-      current = stack.pop();\n-      if (current.getErrorHandlingType().equals(\"DELETION\")) {\n-        // print out the result\n-        System.out.println(String.format(\"Unparseable portion: Start Line %1$s, End Line %2$s, \"\n-                + \"Start Column %3$s, End Column %4$s, %5$s\", current.getStartLine(),\n-            current.getEndLine(), current.getStartColumn(), current.getEndColumn(),\n-            current.getErrorHandlingType()));\n+    \n+    if (jsonOutput) {\n+      JSONArray jsonArray = new JSONArray();\n+      while(!stack.empty()) {\n+        current = stack.pop();\n+        JSONObject errorPosition = new JSONObject();\n+        errorPosition.put(\"startLine\", current.getStartLine());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNTI1Nw=="}, "originalCommit": {"oid": "751716ca54416ef54ba970e83eb373ecb62b7dd0"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDkzMTY4MA==", "bodyText": "Upon looking into it, the Jackson API is not too good for the current use case since we are only selecting a subset of fields from the node object instead of turning the entire object into a JSON. The org.json.simple library seems to be better I think--will use that one instead", "url": "https://github.com/GoogleCloudPlatform/bigquery-utils/pull/147#discussion_r474931680", "createdAt": "2020-08-21T20:16:59Z", "author": {"login": "subinbean"}, "path": "tools/query_breakdown/src/main/java/com/google/bigquery/QueryBreakdown.java", "diffHunk": "@@ -62,23 +64,51 @@ public void run(String originalQuery, String outputFile, int errorLimit,\n       stack.push(current);\n       current = current.getParent();\n     }\n-\n-    // we then pop the stack and output results one by one\n-    while (!stack.empty()) {\n-      current = stack.pop();\n-      if (current.getErrorHandlingType().equals(\"DELETION\")) {\n-        // print out the result\n-        System.out.println(String.format(\"Unparseable portion: Start Line %1$s, End Line %2$s, \"\n-                + \"Start Column %3$s, End Column %4$s, %5$s\", current.getStartLine(),\n-            current.getEndLine(), current.getStartColumn(), current.getEndColumn(),\n-            current.getErrorHandlingType()));\n+    \n+    if (jsonOutput) {\n+      JSONArray jsonArray = new JSONArray();\n+      while(!stack.empty()) {\n+        current = stack.pop();\n+        JSONObject errorPosition = new JSONObject();\n+        errorPosition.put(\"startLine\", current.getStartLine());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzIzNTI1Nw=="}, "originalCommit": {"oid": "751716ca54416ef54ba970e83eb373ecb62b7dd0"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3107, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}