{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NjIzNjc0", "number": 986, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzowODowMlrOEZkzEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoyMjo1MFrOEZlKXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjUyNzU1OnYy", "diffSide": "RIGHT", "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzowODowMlrOHCd93Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzowODowMlrOHCd93Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1MDE3Mw==", "bodyText": "Should this be careTeam?", "url": "https://github.com/CMSgov/dpc-app/pull/986#discussion_r472350173", "createdAt": "2020-08-18T17:08:02Z", "author": {"login": "em1"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "diffHunk": "@@ -75,34 +88,50 @@ public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID or\n                 && eobContainsProvider\n                 && eobRelatedToOrganization;\n \n-        LOGGER.info(\"LookBack stats eobWithinLookBackLimit {}, eobContainsProvider {}, eobRelatedToOrganization {}, eobMonthsDifference {}, hasClaim {}\",\n+        LOGGER.info(\"LookBack stats eobWithinLookBackLimit={}, eobContainsProvider={}, eobRelatedToOrganization={}, eobMonthsDifference={}, hasClaim={}\",\n                 eobWithinLookBackLimit, eobContainsProvider, eobRelatedToOrganization, lookBackMonthsDifference, hasClaim);\n \n         return hasClaim;\n     }\n \n     private Set<String> extractPractionerNPIs(ExplanationOfBenefit explanationOfBenefit) {\n         Set<String> eobProviderNPIs = new HashSet<>();\n-        Optional.ofNullable(explanationOfBenefit)\n+        Optional<String> providerNPI = Optional.ofNullable(explanationOfBenefit)\n                 .map(ExplanationOfBenefit::getProvider)\n                 .map(Reference::getIdentifier)\n                 .filter(i -> DPCIdentifierSystem.NPPES.getSystem().equals(i.getSystem()))\n                 .map(Identifier::getValue)\n-                .filter(StringUtils::isNotBlank)\n-                .ifPresent(eobProviderNPIs::add);\n+                .filter(StringUtils::isNotBlank);\n+\n+        if (providerNPI.isEmpty()) {\n+            LOGGER.info(\"providerNPI=empty\");\n+        } else {\n+            LOGGER.info(\"providerNPI={}\", providerNPI.get());\n+            eobProviderNPIs.add(providerNPI.get());\n+        }\n \n-        Optional.ofNullable(explanationOfBenefit)\n-                .map(ExplanationOfBenefit::getCareTeam)\n+        Optional<List<ExplanationOfBenefit.CareTeamComponent>> careTeam = Optional.ofNullable(explanationOfBenefit)\n+                .map(ExplanationOfBenefit::getCareTeam);\n+\n+        if (providerNPI.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d0191e16856a374fdd2fe7a2721da20c1f0f315"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjU4NzE1OnYy", "diffSide": "RIGHT", "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoyMjo1MFrOHCejoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoyMjo1MFrOHCejoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1OTg0MQ==", "bodyText": "Call \"eobOrganizationID.isPresent()\" before accessing the value.", "url": "https://github.com/CMSgov/dpc-app/pull/986#discussion_r472359841", "createdAt": "2020-08-18T17:22:50Z", "author": {"login": "codeclimate"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "diffHunk": "@@ -61,6 +62,18 @@ public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID or\n \n         Set<String> eobProviderNPIs = extractPractionerNPIs(explanationOfBenefit);\n \n+        if (billingPeriod.isEmpty()) {\n+            LOGGER.info(\"billingPeriod=empty\");\n+        } else {\n+            LOGGER.info(\"billingPeriod={}\", billingPeriod.get());\n+        }\n+\n+        if (eobOrganizationID.isEmpty()) {\n+            LOGGER.info(\"eobOrganizationID=empty\");\n+        } else {\n+            LOGGER.info(\"eobOrganizationID={}\", eobOrganizationID.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d0191e16856a374fdd2fe7a2721da20c1f0f315"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjU4NzE2OnYy", "diffSide": "RIGHT", "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoyMjo1MFrOHCejog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoyMjo1MFrOHCejog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1OTg0Mg==", "bodyText": "Call \"providerNPI.isPresent()\" before accessing the value.", "url": "https://github.com/CMSgov/dpc-app/pull/986#discussion_r472359842", "createdAt": "2020-08-18T17:22:50Z", "author": {"login": "codeclimate"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "diffHunk": "@@ -75,34 +88,50 @@ public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID or\n                 && eobContainsProvider\n                 && eobRelatedToOrganization;\n \n-        LOGGER.info(\"LookBack stats eobWithinLookBackLimit {}, eobContainsProvider {}, eobRelatedToOrganization {}, eobMonthsDifference {}, hasClaim {}\",\n+        LOGGER.info(\"LookBack stats eobWithinLookBackLimit={}, eobContainsProvider={}, eobRelatedToOrganization={}, eobMonthsDifference={}, hasClaim={}\",\n                 eobWithinLookBackLimit, eobContainsProvider, eobRelatedToOrganization, lookBackMonthsDifference, hasClaim);\n \n         return hasClaim;\n     }\n \n     private Set<String> extractPractionerNPIs(ExplanationOfBenefit explanationOfBenefit) {\n         Set<String> eobProviderNPIs = new HashSet<>();\n-        Optional.ofNullable(explanationOfBenefit)\n+        Optional<String> providerNPI = Optional.ofNullable(explanationOfBenefit)\n                 .map(ExplanationOfBenefit::getProvider)\n                 .map(Reference::getIdentifier)\n                 .filter(i -> DPCIdentifierSystem.NPPES.getSystem().equals(i.getSystem()))\n                 .map(Identifier::getValue)\n-                .filter(StringUtils::isNotBlank)\n-                .ifPresent(eobProviderNPIs::add);\n+                .filter(StringUtils::isNotBlank);\n+\n+        if (providerNPI.isEmpty()) {\n+            LOGGER.info(\"providerNPI=empty\");\n+        } else {\n+            LOGGER.info(\"providerNPI={}\", providerNPI.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d0191e16856a374fdd2fe7a2721da20c1f0f315"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MjU4NzE3OnYy", "diffSide": "RIGHT", "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoyMjo1MFrOHCejow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNzoyMjo1MFrOHCejow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjM1OTg0Mw==", "bodyText": "Call \"billingPeriod.isPresent()\" before accessing the value.", "url": "https://github.com/CMSgov/dpc-app/pull/986#discussion_r472359843", "createdAt": "2020-08-18T17:22:50Z", "author": {"login": "codeclimate"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "diffHunk": "@@ -61,6 +62,18 @@ public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID or\n \n         Set<String> eobProviderNPIs = extractPractionerNPIs(explanationOfBenefit);\n \n+        if (billingPeriod.isEmpty()) {\n+            LOGGER.info(\"billingPeriod=empty\");\n+        } else {\n+            LOGGER.info(\"billingPeriod={}\", billingPeriod.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d0191e16856a374fdd2fe7a2721da20c1f0f315"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 58, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}