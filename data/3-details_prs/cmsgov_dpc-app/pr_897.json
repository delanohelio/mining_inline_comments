{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTIxMzcw", "number": 897, "title": "DPC-518 log lookback stats, add jobid, batchid and patient mbi hash to mdc", "bodyText": "Fixes DPC-518\n\nProposed Changes\n\nAdd jobID, batchID and patient MBI Hash to MDC for logs\nLog lookBack stats for each patient\n\nChange Details\n\nSecurity Implications\nMake sure MBI Hash is not PII\n\n new software dependencies\n\n\n\n security controls or supporting software altered\n\n\n\n new data stored or transmitted\n\n\n\n security checklist is completed for this change\n\n\n\n requires more information or team discussion to evaluate security implications\n\n\n\n no PHI/PII is affected by this change\n\n\nAcceptance Validation\n\n\n{\"level\":\"INFO\",\"logger\":\"gov.cms.dpc.aggregation.engine.AggregationEngine\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"Processing job, exporting to: /tmp.\",\"mdc\":{\"jobID\":\"c925679a-ff7f-4a33-862c-14e46388b3d5\",\"batchID\":\"1de6b574-5bd5-4b57-8a2f-a5a3597d1206\"},\"timestamp\":\"2020-07-09T14:44:35.087+0000\"}\n{\"level\":\"INFO\",\"logger\":\"gov.cms.dpc.aggregation.service.LookBackService\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"LookBack stats eobWithinLookBackLimit true, eobContainsProvider true, eobRelatedToOrganization true, eobMonthsDifference 2, hasClaim true\",\"mdc\":{\"batchID\":\"1de6b574-5bd5-4b57-8a2f-a5a3597d1206\",\"jobID\":\"c925679a-ff7f-4a33-862c-14e46388b3d5\",\"patientID\":\"d35350fce12f555089f938c0323a13122622123038e8af057a4191fd450c2b90\"},\"timestamp\":\"2020-07-09T14:44:35.722+0000\"}\n{\"level\":\"INFO\",\"logger\":\"gov.cms.dpc.aggregation.service.LookBackService\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"LookBack stats eobWithinLookBackLimit true, eobContainsProvider true, eobRelatedToOrganization true, eobMonthsDifference 6, hasClaim true\",\"mdc\":{\"jobID\":\"c925679a-ff7f-4a33-862c-14e46388b3d5\",\"batchID\":\"1de6b574-5bd5-4b57-8a2f-a5a3597d1206\",\"patientID\":\"41af07535e0a66226cf2f0e6c551c0a15bd49192fc055aa5cd2e63f31f90a419\"},\"timestamp\":\"2020-07-09T14:44:36.311+0000\"}\n{\"level\":\"INFO\",\"logger\":\"gov.cms.dpc.aggregation.service.LookBackService\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"eob BillingPeriod or job providerID or job organizationID or eob OrganizationID are null\",\"mdc\":{\"jobID\":\"c925679a-ff7f-4a33-862c-14e46388b3d5\",\"batchID\":\"1de6b574-5bd5-4b57-8a2f-a5a3597d1206\",\"patientID\":\"e411277fd31da392eaa9a45df53b0c429e365626182f50d9f35810d77f0e2756\"},\"timestamp\":\"2020-07-09T14:44:36.616+0000\"}\n{\"level\":\"INFO\",\"logger\":\"gov.cms.dpc.aggregation.service.LookBackService\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"LookBack stats eobWithinLookBackLimit true, eobContainsProvider true, eobRelatedToOrganization true, eobMonthsDifference 3, hasClaim true\",\"mdc\":{\"jobID\":\"c925679a-ff7f-4a33-862c-14e46388b3d5\",\"batchID\":\"1de6b574-5bd5-4b57-8a2f-a5a3597d1206\",\"patientID\":\"e411277fd31da392eaa9a45df53b0c429e365626182f50d9f35810d77f0e2756\"},\"timestamp\":\"2020-07-09T14:44:36.621+0000\"}\n{\"exception\":\"java.lang.NullPointerException: null\\n\\tat java.base/java.util.Objects.requireNonNull(Objects.java:221)\\n\\tat java.base/java.util.ImmutableCollections$MapN.containsValue(ImmutableCollections.java:847)\\n\\tat gov.cms.dpc.bluebutton.client.MockBlueButtonClient.loadResource(MockBlueButtonClient.java:156)\\n\\tat gov.cms.dpc.bluebutton.client.MockBlueButtonClient.loadBundle(MockBlueButtonClient.java:139)\\n\\tat gov.cms.dpc.bluebutton.client.MockBlueButtonClient.requestPatientFromServerByMbi(MockBlueButtonClient.java:63)\\n\\tat gov.cms.dpc.aggregation.engine.ResourceFetcher.fetchPatient(ResourceFetcher.java:151)\\n\\tat gov.cms.dpc.aggregation.engine.ResourceFetcher.fetchFirst(ResourceFetcher.java:128)\\n\\tat gov.cms.dpc.aggregation.engine.ResourceFetcher.lambda$fetchResources$0(ResourceFetcher.java:72)\\n\\tat io.reactivex.internal.operators.flowable.FlowableFromCallable.subscribeActual(FlowableFromCallable.java:39)\\n\\tat io.reactivex.Flowable.subscribe(Flowable.java:14935)\\n\\tat io.reactivex.internal.operators.flowable.FlowableOnErrorNext.subscribeActual(FlowableOnErrorNext.java:40)\\n\\tat io.reactivex.Flowable.subscribe(Flowable.java:14935)\\n\\tat io.reactivex.internal.operators.flowable.FlowableFlatMap.subscribeActual(FlowableFlatMap.java:53)\\n\\tat io.reactivex.Flowable.subscribe(Flowable.java:14935)\\n\\tat io.reactivex.internal.operators.flowable.FlowableFilter.subscribeActual(FlowableFilter.java:37)\\n\\tat io.reactivex.Flowable.subscribe(Flowable.java:14935)\\n\\tat io.reactivex.internal.operators.flowable.FlowableAnySingle.subscribeActual(FlowableAnySingle.java:37)\\n\\tat io.reactivex.Single.subscribe(Single.java:3666)\\n\\tat io.reactivex.internal.operators.single.SingleOnErrorReturn.subscribeActual(SingleOnErrorReturn.java:38)\\n\\tat io.reactivex.Single.subscribe(Single.java:3666)\\n\\tat io.reactivex.Single.blockingGet(Single.java:2869)\\n\\tat gov.cms.dpc.aggregation.engine.AggregationEngine.isValidLookBack(AggregationEngine.java:208)\\n\\tat gov.cms.dpc.aggregation.engine.AggregationEngine.processPatient(AggregationEngine.java:189)\\n\\tat gov.cms.dpc.aggregation.engine.AggregationEngine.processJobBatch(AggregationEngine.java:163)\\n\\tat io.reactivex.internal.observers.LambdaObserver.onNext(LambdaObserver.java:63)\\n\\tat io.reactivex.internal.operators.observable.ObservableMap$MapObserver.onNext(ObservableMap.java:62)\\n\\tat io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver.onNext(ObservableFilter.java:52)\\n\\tat io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver.onNext(ObservableRetryPredicate.java:69)\\n\\tat io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver.onNext(ObservableDoOnEach.java:101)\\n\\tat io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver.onNext(ObservableDoOnEach.java:101)\\n\\tat io.reactivex.internal.util.HalfSerializer.onNext(HalfSerializer.java:107)\\n\\tat io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver.onNext(ObservableRepeatWhen.java:100)\\n\\tat io.reactivex.internal.observers.DeferredScalarDisposable.complete(DeferredScalarDisposable.java:82)\\n\\tat io.reactivex.internal.operators.observable.ObservableFromCallable.subscribeActual(ObservableFromCallable.java:53)\\n\\tat io.reactivex.Observable.subscribe(Observable.java:12284)\\n\\tat io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver.subscribeNext(ObservableRepeatWhen.java:151)\\n\\tat io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver.innerNext(ObservableRepeatWhen.java:128)\\n\\tat io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver.onNext(ObservableRepeatWhen.java:168)\\n\\tat io.reactivex.observers.SerializedObserver.onNext(SerializedObserver.java:111)\\n\\tat io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext.run(ObservableDelay.java:114)\\n\\tat io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\\n\\tat io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\\n\\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\\n\\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\n\",\"level\":\"ERROR\",\"logger\":\"gov.cms.dpc.aggregation.engine.ResourceFetcher\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"Turning error into OperationOutcome.\",\"mdc\":{\"jobID\":\"c925679a-ff7f-4a33-862c-14e46388b3d5\",\"batchID\":\"1de6b574-5bd5-4b57-8a2f-a5a3597d1206\",\"patientID\":\"e411277fd31da392eaa9a45df53b0c429e365626182f50d9f35810d77f0e2756\"},\"timestamp\":\"2020-07-09T14:44:36.892+0000\"}\n{\"level\":\"INFO\",\"logger\":\"gov.cms.dpc.aggregation.engine.AggregationEngine\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"COMPLETED job\",\"mdc\":{\"jobID\":\"c925679a-ff7f-4a33-862c-14e46388b3d5\",\"batchID\":\"1de6b574-5bd5-4b57-8a2f-a5a3597d1206\"},\"timestamp\":\"2020-07-09T14:44:36.895+0000\"}\n{\"level\":\"INFO\",\"logger\":\"gov.cms.dpc.aggregation.engine.AggregationEngine\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"Processing job, exporting to: /tmp.\",\"mdc\":{\"batchID\":\"1700017d-05fe-4eaf-9d1c-403feedf11e7\",\"jobID\":\"f84a5c0e-587e-45fb-83d0-8529ef9bdb3d\"},\"timestamp\":\"2020-07-09T14:44:39.711+0000\"}\n{\"level\":\"INFO\",\"logger\":\"gov.cms.dpc.aggregation.engine.AggregationEngine\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"COMPLETED job\",\"mdc\":{\"batchID\":\"1700017d-05fe-4eaf-9d1c-403feedf11e7\",\"jobID\":\"f84a5c0e-587e-45fb-83d0-8529ef9bdb3d\"},\"timestamp\":\"2020-07-09T14:44:39.711+0000\"}\n{\"level\":\"INFO\",\"logger\":\"gov.cms.dpc.aggregation.engine.AggregationEngine\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"Processing job, exporting to: /tmp.\",\"mdc\":{\"batchID\":\"4f871117-24a5-4cbb-8698-d9c5fe71ca78\",\"jobID\":\"73bf6362-0925-482e-a498-c8ed73809d06\"},\"timestamp\":\"2020-07-09T14:44:42.286+0000\"}\n{\"level\":\"INFO\",\"logger\":\"gov.cms.dpc.aggregation.engine.AggregationEngine\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"COMPLETED job\",\"mdc\":{\"batchID\":\"4f871117-24a5-4cbb-8698-d9c5fe71ca78\",\"jobID\":\"73bf6362-0925-482e-a498-c8ed73809d06\"},\"timestamp\":\"2020-07-09T14:44:42.287+0000\"}\n{\"level\":\"INFO\",\"logger\":\"gov.cms.dpc.aggregation.engine.AggregationEngine\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"Processing job, exporting to: /tmp.\",\"mdc\":{\"batchID\":\"d1d7e45a-7bee-40ae-bb29-625906acdf73\",\"jobID\":\"c0439095-1ba3-4971-b074-5dc23bf491c8\"},\"timestamp\":\"2020-07-09T14:44:45.895+0000\"}\n{\"exception\":\"java.lang.NullPointerException: null\\n\\tat java.base/java.util.Objects.requireNonNull(Objects.java:221)\\n\\tat java.base/java.util.ImmutableCollections$MapN.containsValue(ImmutableCollections.java:847)\\n\\tat gov.cms.dpc.bluebutton.client.MockBlueButtonClient.loadResource(MockBlueButtonClient.java:156)\\n\\tat gov.cms.dpc.bluebutton.client.MockBlueButtonClient.loadBundle(MockBlueButtonClient.java:139)\\n\\tat gov.cms.dpc.bluebutton.client.MockBlueButtonClient.requestPatientFromServerByMbi(MockBlueButtonClient.java:63)\\n\\tat gov.cms.dpc.aggregation.engine.ResourceFetcher.fetchPatient(ResourceFetcher.java:151)\\n\\tat gov.cms.dpc.aggregation.engine.ResourceFetcher.fetchFirst(ResourceFetcher.java:128)\\n\\tat gov.cms.dpc.aggregation.engine.ResourceFetcher.lambda$fetchResources$0(ResourceFetcher.java:72)\\n\\tat io.reactivex.internal.operators.flowable.FlowableFromCallable.subscribeActual(FlowableFromCallable.java:39)\\n\\tat io.reactivex.Flowable.subscribe(Flowable.java:14935)\\n\\tat io.reactivex.internal.operators.flowable.FlowableOnErrorNext.subscribeActual(FlowableOnErrorNext.java:40)\\n\\tat io.reactivex.Flowable.subscribe(Flowable.java:14935)\\n\\tat io.reactivex.internal.operators.flowable.FlowableFlatMap.subscribeActual(FlowableFlatMap.java:53)\\n\\tat io.reactivex.Flowable.subscribe(Flowable.java:14935)\\n\\tat io.reactivex.internal.operators.flowable.FlowableFilter.subscribeActual(FlowableFilter.java:37)\\n\\tat io.reactivex.Flowable.subscribe(Flowable.java:14935)\\n\\tat io.reactivex.internal.operators.flowable.FlowableAnySingle.subscribeActual(FlowableAnySingle.java:37)\\n\\tat io.reactivex.Single.subscribe(Single.java:3666)\\n\\tat io.reactivex.internal.operators.single.SingleOnErrorReturn.subscribeActual(SingleOnErrorReturn.java:38)\\n\\tat io.reactivex.Single.subscribe(Single.java:3666)\\n\\tat io.reactivex.Single.blockingGet(Single.java:2869)\\n\\tat gov.cms.dpc.aggregation.engine.AggregationEngine.isValidLookBack(AggregationEngine.java:208)\\n\\tat gov.cms.dpc.aggregation.engine.AggregationEngine.processPatient(AggregationEngine.java:189)\\n\\tat gov.cms.dpc.aggregation.engine.AggregationEngine.processJobBatch(AggregationEngine.java:163)\\n\\tat io.reactivex.internal.observers.LambdaObserver.onNext(LambdaObserver.java:63)\\n\\tat io.reactivex.internal.operators.observable.ObservableMap$MapObserver.onNext(ObservableMap.java:62)\\n\\tat io.reactivex.internal.operators.observable.ObservableFilter$FilterObserver.onNext(ObservableFilter.java:52)\\n\\tat io.reactivex.internal.operators.observable.ObservableRetryPredicate$RepeatObserver.onNext(ObservableRetryPredicate.java:69)\\n\\tat io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver.onNext(ObservableDoOnEach.java:101)\\n\\tat io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver.onNext(ObservableDoOnEach.java:101)\\n\\tat io.reactivex.internal.util.HalfSerializer.onNext(HalfSerializer.java:107)\\n\\tat io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver.onNext(ObservableRepeatWhen.java:100)\\n\\tat io.reactivex.internal.observers.DeferredScalarDisposable.complete(DeferredScalarDisposable.java:82)\\n\\tat io.reactivex.internal.operators.observable.ObservableFromCallable.subscribeActual(ObservableFromCallable.java:53)\\n\\tat io.reactivex.Observable.subscribe(Observable.java:12284)\\n\\tat io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver.subscribeNext(ObservableRepeatWhen.java:151)\\n\\tat io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver.innerNext(ObservableRepeatWhen.java:128)\\n\\tat io.reactivex.internal.operators.observable.ObservableRepeatWhen$RepeatWhenObserver$InnerRepeatObserver.onNext(ObservableRepeatWhen.java:168)\\n\\tat io.reactivex.observers.SerializedObserver.onNext(SerializedObserver.java:111)\\n\\tat io.reactivex.internal.operators.observable.ObservableDelay$DelayObserver$OnNext.run(ObservableDelay.java:114)\\n\\tat io.reactivex.internal.schedulers.ScheduledRunnable.run(ScheduledRunnable.java:66)\\n\\tat io.reactivex.internal.schedulers.ScheduledRunnable.call(ScheduledRunnable.java:57)\\n\\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\\n\\tat java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\\n\\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\\n\\tat java.base/java.lang.Thread.run(Thread.java:834)\\n\",\"level\":\"ERROR\",\"logger\":\"gov.cms.dpc.aggregation.engine.ResourceFetcher\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"Turning error into OperationOutcome.\",\"mdc\":{\"batchID\":\"d1d7e45a-7bee-40ae-bb29-625906acdf73\",\"jobID\":\"c0439095-1ba3-4971-b074-5dc23bf491c8\"},\"timestamp\":\"2020-07-09T14:44:45.904+0000\"}\n{\"level\":\"INFO\",\"logger\":\"gov.cms.dpc.aggregation.engine.AggregationEngine\",\"thread\":\"RxComputationThreadPool-1\",\"message\":\"COMPLETED job\",\"mdc\":{\"batchID\":\"d1d7e45a-7bee-40ae-bb29-625906acdf73\",\"jobID\":\"c0439095-1ba3-4971-b074-5dc23bf491c8\"},\"timestamp\":\"2020-07-09T14:44:45.904+0000\"}\n\nFeedback Requested", "createdAt": "2020-07-08T22:41:50Z", "url": "https://github.com/CMSgov/dpc-app/pull/897", "merged": true, "mergeCommit": {"oid": "c492838942d8337dd4532557f5b7cba6a0203633"}, "closed": true, "closedAt": "2020-07-09T17:29:32Z", "author": {"login": "MrBilnon"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczCVyvAH2gAyNDQ2NTIxMzcwOmM5NDZjZmQzZTVkMjIxNzdhNmYwYzFhOTc3ZWNjNDhkOTUxNDFmMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczRD_hAH2gAyNDQ2NTIxMzcwOjU3ZjE3OWEwZGQ2N2U4ZWMyMDgwOWQxN2E4MWM5NjZkZDUwZjUxZWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c946cfd3e5d22177a6f0c1a977ecc48d95141f21", "author": {"user": {"login": "MrBilnon", "name": "Will H"}}, "url": "https://github.com/CMSgov/dpc-app/commit/c946cfd3e5d22177a6f0c1a977ecc48d95141f21", "committedDate": "2020-07-08T22:39:50Z", "message": "log lookback stats, add jobid, batchid and patient mbi hash to mdc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "539e7ab69c26846201112275e96df2cbd5d75a95", "author": {"user": {"login": "MrBilnon", "name": "Will H"}}, "url": "https://github.com/CMSgov/dpc-app/commit/539e7ab69c26846201112275e96df2cbd5d75a95", "committedDate": "2020-07-08T22:42:09Z", "message": "Merge branch 'master' into wh/DPC-518-log-lookback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MTg0NzE1", "url": "https://github.com/CMSgov/dpc-app/pull/897#pullrequestreview-445184715", "createdAt": "2020-07-08T23:01:18Z", "commit": {"oid": "539e7ab69c26846201112275e96df2cbd5d75a95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzowMToxOFrOGu8BhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzowMToxOFrOGu8BhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3MTEwOQ==", "bodyText": "Could you include some example log output in the PR description?  I'd like to be certain all these log statements can be correlated.", "url": "https://github.com/CMSgov/dpc-app/pull/897#discussion_r451871109", "createdAt": "2020-07-08T23:01:18Z", "author": {"login": "dhgreene"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/AggregationEngine.java", "diffHunk": "@@ -159,19 +163,21 @@ protected void processJobBatch(JobQueueBatch job) {\n                 nextPatientID = processPatient(job, patientId);\n             }\n \n+            //Clear last patient seen from MDC\n+            MDC.remove(MDCConstants.PATIENT_ID);\n             // Finish processing the batch\n             if (this.isRunning()) {\n-                logger.info(\"COMPLETED job {} batch {}\", job.getJobID(), job.getBatchID());\n+                logger.info(\"COMPLETED job\");\n                 // Calculate metadata for the file (length and checksum)\n                 calculateFileMetadata(job);\n                 this.queue.completeBatch(job, aggregatorID);\n             } else {\n-                logger.info(\"PAUSED job {} batch {}\", job.getJobID(), job.getBatchID());\n+                logger.info(\"PAUSED job\");\n                 this.queue.pauseBatch(job, aggregatorID);\n             }\n         } catch (Exception error) {\n             try {\n-                logger.error(\"FAILED job {} batch {}\", job.getJobID(), job.getBatchID(), error);\n+                logger.error(\"FAILED job\", error);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "539e7ab69c26846201112275e96df2cbd5d75a95"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjIwMjE0", "url": "https://github.com/CMSgov/dpc-app/pull/897#pullrequestreview-445220214", "createdAt": "2020-07-09T00:50:51Z", "commit": {"oid": "539e7ab69c26846201112275e96df2cbd5d75a95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDo1MDo1MVrOGu99CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDo1MDo1MVrOGu99CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwMjcyOA==", "bodyText": "Call \"billingPeriod.isPresent()\" before accessing the value.", "url": "https://github.com/CMSgov/dpc-app/pull/897#discussion_r451902728", "createdAt": "2020-07-09T00:50:51Z", "author": {"login": "codeclimate"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "diffHunk": "@@ -57,12 +61,24 @@ public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID or\n \n         Set<String> eobProviderNPIs = extractPractionerNPIs(explanationOfBenefit);\n \n-        return billingPeriod.isPresent()\n-                && providerID.isPresent()\n-                && organizationID.isPresent() && eobOrganizationID.isPresent()\n-                && getMonthsDifference(billingPeriod.get(), operationsConfig.getLookBackDate()) < withinMonth\n-                && eobProviderNPIs.contains(providerID.get())\n-                && organizationID.get().equals(eobOrganizationID.get());\n+        if (billingPeriod.isEmpty() || providerID.isEmpty() || organizationID.isEmpty() || eobOrganizationID.isEmpty()) {\n+            LOGGER.info(\"eob BillingPeriod or job providerID or job organizationID or eob OrganizationID are null\");\n+            return false;\n+        }\n+\n+        long lookBackMonthsDifference = getMonthsDifference(billingPeriod.get(), operationsConfig.getLookBackDate());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "539e7ab69c26846201112275e96df2cbd5d75a95"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d2cacb213965fa46d86bdc76da8be536a8ae09f", "author": {"user": {"login": "MrBilnon", "name": "Will H"}}, "url": "https://github.com/CMSgov/dpc-app/commit/6d2cacb213965fa46d86bdc76da8be536a8ae09f", "committedDate": "2020-07-09T14:46:37Z", "message": "Merge branch 'master' into wh/DPC-518-log-lookback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1NzE4MDYw", "url": "https://github.com/CMSgov/dpc-app/pull/897#pullrequestreview-445718060", "createdAt": "2020-07-09T15:16:22Z", "commit": {"oid": "6d2cacb213965fa46d86bdc76da8be536a8ae09f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57f179a0dd67e8ec20809d17a81c966dd50f51ee", "author": {"user": {"login": "MrBilnon", "name": "Will H"}}, "url": "https://github.com/CMSgov/dpc-app/commit/57f179a0dd67e8ec20809d17a81c966dd50f51ee", "committedDate": "2020-07-09T15:48:58Z", "message": "Merge branch 'master' into wh/DPC-518-log-lookback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 405, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}