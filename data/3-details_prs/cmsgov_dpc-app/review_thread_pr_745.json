{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjQzMDgy", "number": 745, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTozNTo0OFrOD0crIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTozNTo0OFrOD0crIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MzIyMzM5OnYy", "diffSide": "RIGHT", "path": "dpc-web/spec/features/registration/new_user_signs_up_for_account_spec.rb", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMTozNTo0OVrOGJZgcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNjo1NDoxNVrOGKySEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODI3Mw==", "bodyText": "I believe that if last_email is not present the test will fail on line 36 unless you add :aggregate_failures", "url": "https://github.com/CMSgov/dpc-app/pull/745#discussion_r412508273", "createdAt": "2020-04-21T21:35:49Z", "author": {"login": "SMLuthi"}, "path": "dpc-web/spec/features/registration/new_user_signs_up_for_account_spec.rb", "diffHunk": "@@ -24,15 +26,30 @@\n       select 'New York', from: :user_state\n       fill_in :user_zip, with: '10033'\n       check :user_agree_to_terms\n-\n+  \n       click_on('Sign up')\n+    end\n+\n+    scenario 'user is sent a confirmation email with confirmation token' do\n+      :confirmation_token.should_not be_nil\n+\n+      ctoken = last_email.body.match(/confirmation_token=\\w*/)\n+\n+      expect(last_email).to be_present", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2591a0e67f0314f7d2ff2c523702da27240a698"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzNTExOA==", "bodyText": "It does pass without :aggregate_failures, is this something you anticipate to fail sometimes?", "url": "https://github.com/CMSgov/dpc-app/pull/745#discussion_r413835118", "createdAt": "2020-04-23T14:18:03Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/spec/features/registration/new_user_signs_up_for_account_spec.rb", "diffHunk": "@@ -24,15 +26,30 @@\n       select 'New York', from: :user_state\n       fill_in :user_zip, with: '10033'\n       check :user_agree_to_terms\n-\n+  \n       click_on('Sign up')\n+    end\n+\n+    scenario 'user is sent a confirmation email with confirmation token' do\n+      :confirmation_token.should_not be_nil\n+\n+      ctoken = last_email.body.match(/confirmation_token=\\w*/)\n+\n+      expect(last_email).to be_present", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODI3Mw=="}, "originalCommit": {"oid": "c2591a0e67f0314f7d2ff2c523702da27240a698"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg5NTE4OA==", "bodyText": "I meant more in terms of if something were to change that would result in last_email to not be present. The test would error out on line 36 instead of propagating to line 38 were the expect block would throw an error. Either I would switch the two lines or, if last_email will always be present, I would just remove line 38.", "url": "https://github.com/CMSgov/dpc-app/pull/745#discussion_r413895188", "createdAt": "2020-04-23T15:26:55Z", "author": {"login": "SMLuthi"}, "path": "dpc-web/spec/features/registration/new_user_signs_up_for_account_spec.rb", "diffHunk": "@@ -24,15 +26,30 @@\n       select 'New York', from: :user_state\n       fill_in :user_zip, with: '10033'\n       check :user_agree_to_terms\n-\n+  \n       click_on('Sign up')\n+    end\n+\n+    scenario 'user is sent a confirmation email with confirmation token' do\n+      :confirmation_token.should_not be_nil\n+\n+      ctoken = last_email.body.match(/confirmation_token=\\w*/)\n+\n+      expect(last_email).to be_present", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODI3Mw=="}, "originalCommit": {"oid": "c2591a0e67f0314f7d2ff2c523702da27240a698"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkxOTE1NQ==", "bodyText": "If we remove last_email line would we still require :aggregate_failures?", "url": "https://github.com/CMSgov/dpc-app/pull/745#discussion_r413919155", "createdAt": "2020-04-23T15:56:40Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/spec/features/registration/new_user_signs_up_for_account_spec.rb", "diffHunk": "@@ -24,15 +26,30 @@\n       select 'New York', from: :user_state\n       fill_in :user_zip, with: '10033'\n       check :user_agree_to_terms\n-\n+  \n       click_on('Sign up')\n+    end\n+\n+    scenario 'user is sent a confirmation email with confirmation token' do\n+      :confirmation_token.should_not be_nil\n+\n+      ctoken = last_email.body.match(/confirmation_token=\\w*/)\n+\n+      expect(last_email).to be_present", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODI3Mw=="}, "originalCommit": {"oid": "c2591a0e67f0314f7d2ff2c523702da27240a698"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzkxOTY5OQ==", "bodyText": "Also it seems I still can't request you to review a PR or your approval doesn't mean I can merge the PR.", "url": "https://github.com/CMSgov/dpc-app/pull/745#discussion_r413919699", "createdAt": "2020-04-23T15:57:18Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/spec/features/registration/new_user_signs_up_for_account_spec.rb", "diffHunk": "@@ -24,15 +26,30 @@\n       select 'New York', from: :user_state\n       fill_in :user_zip, with: '10033'\n       check :user_agree_to_terms\n-\n+  \n       click_on('Sign up')\n+    end\n+\n+    scenario 'user is sent a confirmation email with confirmation token' do\n+      :confirmation_token.should_not be_nil\n+\n+      ctoken = last_email.body.match(/confirmation_token=\\w*/)\n+\n+      expect(last_email).to be_present", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODI3Mw=="}, "originalCommit": {"oid": "c2591a0e67f0314f7d2ff2c523702da27240a698"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk2MjQ3NA==", "bodyText": "No, if the last_email check is removed we probably wouldn't require :aggregate_failures anymore. However, its not a bad practice to include that in any specs that have multiple expect blocks that check different things (i.e. a test that populates multiple entities). That way if a test fails, it will show ALL the exceptions... and it can be easier to deduce and issue.", "url": "https://github.com/CMSgov/dpc-app/pull/745#discussion_r413962474", "createdAt": "2020-04-23T16:53:51Z", "author": {"login": "SMLuthi"}, "path": "dpc-web/spec/features/registration/new_user_signs_up_for_account_spec.rb", "diffHunk": "@@ -24,15 +26,30 @@\n       select 'New York', from: :user_state\n       fill_in :user_zip, with: '10033'\n       check :user_agree_to_terms\n-\n+  \n       click_on('Sign up')\n+    end\n+\n+    scenario 'user is sent a confirmation email with confirmation token' do\n+      :confirmation_token.should_not be_nil\n+\n+      ctoken = last_email.body.match(/confirmation_token=\\w*/)\n+\n+      expect(last_email).to be_present", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODI3Mw=="}, "originalCommit": {"oid": "c2591a0e67f0314f7d2ff2c523702da27240a698"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk2Mjc2OQ==", "bodyText": "And yea, I requested write access a little bit ago so hopefully that will be approved soon, sorry!", "url": "https://github.com/CMSgov/dpc-app/pull/745#discussion_r413962769", "createdAt": "2020-04-23T16:54:15Z", "author": {"login": "SMLuthi"}, "path": "dpc-web/spec/features/registration/new_user_signs_up_for_account_spec.rb", "diffHunk": "@@ -24,15 +26,30 @@\n       select 'New York', from: :user_state\n       fill_in :user_zip, with: '10033'\n       check :user_agree_to_terms\n-\n+  \n       click_on('Sign up')\n+    end\n+\n+    scenario 'user is sent a confirmation email with confirmation token' do\n+      :confirmation_token.should_not be_nil\n+\n+      ctoken = last_email.body.match(/confirmation_token=\\w*/)\n+\n+      expect(last_email).to be_present", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjUwODI3Mw=="}, "originalCommit": {"oid": "c2591a0e67f0314f7d2ff2c523702da27240a698"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4853, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}