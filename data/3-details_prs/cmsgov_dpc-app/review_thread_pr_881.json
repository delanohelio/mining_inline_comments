{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMTM2MjY5", "number": 881, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MDo0NVrOEI1vZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMToyMjoyMlrOEI7bOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzA0NTUxOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/organization.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MDo0NVrOGpC93w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MDo0NVrOGpC93w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5MzQwNw==", "bodyText": "Useless assignment to variable - reg_org.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445693407", "createdAt": "2020-06-25T16:40:45Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -71,34 +63,20 @@ def prod_sbx?\n     ENV['ENV'] == 'prod-sbx'\n   end\n \n-  def update_registered_organizations\n+  def update_registered_organization\n     return unless npi.present? || sandbox_id.present?\n \n-    registered_organizations.each(&:update_api_organization)\n-  end\n-\n-  def sandbox_enabled?\n-    sandbox_registered_organization.present?\n-  end\n-\n-  def sandbox_registered_organization\n-    registered_organizations.find_by(api_env: 'sandbox')\n-  end\n-\n-  def sandbox_fhir_endpoint\n-    sandbox_registered_organization.fhir_endpoint\n-  end\n-\n-  def production_enabled?\n-    production_registered_organization.present?\n+    registered_organization.update_api_organization\n   end\n \n-  def production_registered_organization\n-    registered_organizations.find_by(api_env: 'production')\n+  def reg_org\n+    if registered_organization.present?\n+      return reg_org = registered_organization", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b179f6d3b5c59aafbf78b52be1985a79f198e7c"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzA0NTUzOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/organization.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MDo0NlrOGpC94Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MDo0NlrOGpC94Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5MzQwOQ==", "bodyText": "Use a guard clause instead of wrapping the code inside a conditional expression.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445693409", "createdAt": "2020-06-25T16:40:46Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -71,34 +63,20 @@ def prod_sbx?\n     ENV['ENV'] == 'prod-sbx'\n   end\n \n-  def update_registered_organizations\n+  def update_registered_organization\n     return unless npi.present? || sandbox_id.present?\n \n-    registered_organizations.each(&:update_api_organization)\n-  end\n-\n-  def sandbox_enabled?\n-    sandbox_registered_organization.present?\n-  end\n-\n-  def sandbox_registered_organization\n-    registered_organizations.find_by(api_env: 'sandbox')\n-  end\n-\n-  def sandbox_fhir_endpoint\n-    sandbox_registered_organization.fhir_endpoint\n-  end\n-\n-  def production_enabled?\n-    production_registered_organization.present?\n+    registered_organization.update_api_organization\n   end\n \n-  def production_registered_organization\n-    registered_organizations.find_by(api_env: 'production')\n+  def reg_org\n+    if registered_organization.present?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b179f6d3b5c59aafbf78b52be1985a79f198e7c"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzA0NTU0OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/organization.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MDo0NlrOGpC94w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MDo0NlrOGpC94w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5MzQxMQ==", "bodyText": "Redundant return detected.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445693411", "createdAt": "2020-06-25T16:40:46Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -71,34 +63,20 @@ def prod_sbx?\n     ENV['ENV'] == 'prod-sbx'\n   end\n \n-  def update_registered_organizations\n+  def update_registered_organization\n     return unless npi.present? || sandbox_id.present?\n \n-    registered_organizations.each(&:update_api_organization)\n-  end\n-\n-  def sandbox_enabled?\n-    sandbox_registered_organization.present?\n-  end\n-\n-  def sandbox_registered_organization\n-    registered_organizations.find_by(api_env: 'sandbox')\n-  end\n-\n-  def sandbox_fhir_endpoint\n-    sandbox_registered_organization.fhir_endpoint\n-  end\n-\n-  def production_enabled?\n-    production_registered_organization.present?\n+    registered_organization.update_api_organization\n   end\n \n-  def production_registered_organization\n-    registered_organizations.find_by(api_env: 'production')\n+  def reg_org\n+    if registered_organization.present?\n+      return reg_org = registered_organization", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b179f6d3b5c59aafbf78b52be1985a79f198e7c"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzA0NTU1OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/internal/registered_organizations_controller.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MDo0NlrOGpC95Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MDo0NlrOGpC95Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5MzQxMw==", "bodyText": "Prefer single-quoted strings when you don't need string interpolation or special symbols.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445693413", "createdAt": "2020-06-25T16:40:46Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/controllers/internal/registered_organizations_controller.rb", "diffHunk": "@@ -17,49 +16,45 @@ def new\n \n     def create\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations\n-                                              .build(registered_organization_params)\n-      @api_env = params[:api_env] || @registered_organization.api_env\n+      @registered_organization = @organization.build_registered_organization(registered_organization_params)\n \n       if @registered_organization.save\n-        flash[:notice] = \"Access to #{@registered_organization.api_env} enabled.\"\n+        flash[:notice] = \"Organization has been enabled.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b179f6d3b5c59aafbf78b52be1985a79f198e7c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzA0NTU2OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/internal/registered_organizations_controller.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MDo0NlrOGpC95w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MDo0NlrOGpC95w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5MzQxNQ==", "bodyText": "Prefer single-quoted strings when you don't need string interpolation or special symbols.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445693415", "createdAt": "2020-06-25T16:40:46Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/controllers/internal/registered_organizations_controller.rb", "diffHunk": "@@ -17,49 +16,45 @@ def new\n \n     def create\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations\n-                                              .build(registered_organization_params)\n-      @api_env = params[:api_env] || @registered_organization.api_env\n+      @registered_organization = @organization.build_registered_organization(registered_organization_params)\n \n       if @registered_organization.save\n-        flash[:notice] = \"Access to #{@registered_organization.api_env} enabled.\"\n+        flash[:notice] = \"Organization has been enabled.\"\n         redirect_to internal_organization_path(@organization)\n       else\n-        flash[:alert] = \"Access to #{@registered_organization.api_env} could not be enabled:\n+        flash[:alert] = \"Organization could not be enabled:\n                         #{model_error_string(@registered_organization)}.\"\n         render :new\n       end\n     end\n \n     def edit\n-      @api_env = params[:api_env]\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations.find(params[:id])\n+      @registered_organization = @organization.registered_organization\n     end\n \n     def update\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations.find(params[:id])\n-      @api_env = @registered_organization.api_env\n+      @registered_organization = @organization.registered_organization\n \n       if @registered_organization.update(registered_organization_params)\n-        flash[:notice] = \"#{@registered_organization.api_env.capitalize} access updated.\"\n+        flash[:notice] = \"Organization access updated.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b179f6d3b5c59aafbf78b52be1985a79f198e7c"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzA0NzI5OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/internal/registered_organizations_controller.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MToxNFrOGpC_BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MToxNFrOGpC_BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5MzcwMA==", "bodyText": "Prefer single-quoted strings when you don't need string interpolation or special symbols.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445693700", "createdAt": "2020-06-25T16:41:14Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/controllers/internal/registered_organizations_controller.rb", "diffHunk": "@@ -17,49 +16,45 @@ def new\n \n     def create\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations\n-                                              .build(registered_organization_params)\n-      @api_env = params[:api_env] || @registered_organization.api_env\n+      @registered_organization = @organization.build_registered_organization(registered_organization_params)\n \n       if @registered_organization.save\n-        flash[:notice] = \"Access to #{@registered_organization.api_env} enabled.\"\n+        flash[:notice] = \"Organization has been enabled.\"\n         redirect_to internal_organization_path(@organization)\n       else\n-        flash[:alert] = \"Access to #{@registered_organization.api_env} could not be enabled:\n+        flash[:alert] = \"Organization could not be enabled:\n                         #{model_error_string(@registered_organization)}.\"\n         render :new\n       end\n     end\n \n     def edit\n-      @api_env = params[:api_env]\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations.find(params[:id])\n+      @registered_organization = @organization.registered_organization\n     end\n \n     def update\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations.find(params[:id])\n-      @api_env = @registered_organization.api_env\n+      @registered_organization = @organization.registered_organization\n \n       if @registered_organization.update(registered_organization_params)\n-        flash[:notice] = \"#{@registered_organization.api_env.capitalize} access updated.\"\n+        flash[:notice] = \"Organization access updated.\"\n         redirect_to internal_organization_path(@organization)\n       else\n-        flash[:alert] = \"#{@registered_organization.api_env.capitalize} access could not be\n+        flash[:alert] = \"Organization access could not be\n                         updated: #{model_error_string(@registered_organization)}.\"\n         render :edit\n       end\n     end\n \n     def destroy\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations.find(params[:id])\n+      @registered_organization = @organization.registered_organization\n \n       if @registered_organization.destroy\n-        flash[:notice] = \"#{@registered_organization.api_env.capitalize} access disabled.\"\n+        flash[:notice] = \"Organization access disabled.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b179f6d3b5c59aafbf78b52be1985a79f198e7c"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzA0NzMxOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/services/api_client.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MToxNVrOGpC_Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0MToxNVrOGpC_Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5MzcwNw==", "bodyText": "Prefer single-quoted strings when you don't need string interpolation or special symbols.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445693707", "createdAt": "2020-06-25T16:41:15Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/services/api_client.rb", "diffHunk": "@@ -110,7 +103,7 @@ def delegated_macaroon(reg_org_api_id)\n   end\n \n   def golden_macaroon\n-    @golden_macaroon ||= ENV.fetch(\"GOLDEN_MACAROON_#{api_env.upcase}\")\n+    @golden_macaroon ||= ENV.fetch(\"GOLDEN_MACAROON_SANDBOX\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b179f6d3b5c59aafbf78b52be1985a79f198e7c"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzkwOTUxOnYy", "diffSide": "RIGHT", "path": "dpc-web/spec/models/organization_user_assignment_spec.rb", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDo1OTozMVrOGpLmUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjozMzoxN1rOGpfKOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzNDgzNQ==", "bodyText": "Names with \"sandbox\" in them retain the old view of the app--in this case, that we need to differentiate sandbox-related emails from, say, prod-related emails.  How hard is it to rename this method and the tests that call it?", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445834835", "createdAt": "2020-06-25T20:59:31Z", "author": {"login": "dhgreene"}, "path": "dpc-web/spec/models/organization_user_assignment_spec.rb", "diffHunk": "@@ -3,13 +3,18 @@\n require 'rails_helper'\n \n RSpec.describe OrganizationUserAssignment, type: :model do\n+  include APIClientSupport\n+\n   describe 'callbacks' do\n     describe '#send_organization_sandbox_email' do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0ODQ0Nw==", "bodyText": "Currently we dont have prod emailing setup at all. It just doesnt exist. Im assuming, at some point, we will introduce that. We can make changes now or wait till that work comes down the pipeline.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445848447", "createdAt": "2020-06-25T21:28:14Z", "author": {"login": "SMLuthi"}, "path": "dpc-web/spec/models/organization_user_assignment_spec.rb", "diffHunk": "@@ -3,13 +3,18 @@\n require 'rails_helper'\n \n RSpec.describe OrganizationUserAssignment, type: :model do\n+  include APIClientSupport\n+\n   describe 'callbacks' do\n     describe '#send_organization_sandbox_email' do", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzNDgzNQ=="}, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE1NTMyMA==", "bodyText": "Also right now the emails sent to sandbox have language specific to the sandbox environment (i.e. naming it, reminding users not to use real patient data etc etc.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r446155320", "createdAt": "2020-06-26T12:33:17Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/spec/models/organization_user_assignment_spec.rb", "diffHunk": "@@ -3,13 +3,18 @@\n require 'rails_helper'\n \n RSpec.describe OrganizationUserAssignment, type: :model do\n+  include APIClientSupport\n+\n   describe 'callbacks' do\n     describe '#send_organization_sandbox_email' do", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzNDgzNQ=="}, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzkxNDc4OnYy", "diffSide": "RIGHT", "path": "dpc-web/spec/models/organization_user_assignment_spec.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTowMTowOVrOGpLpmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNTozNjowNVrOGplbpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzNTY3NQ==", "bodyText": "Do we still need this property (and a test for it), since we're now automatically allowing all new sandbox users?  I see references to :sandbox_enabled? being replaced with :api_enabled?.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445835675", "createdAt": "2020-06-25T21:01:09Z", "author": {"login": "dhgreene"}, "path": "dpc-web/spec/models/organization_user_assignment_spec.rb", "diffHunk": "@@ -3,13 +3,18 @@\n require 'rails_helper'\n \n RSpec.describe OrganizationUserAssignment, type: :model do\n+  include APIClientSupport\n+\n   describe 'callbacks' do\n     describe '#send_organization_sandbox_email' do\n       it 'sends email if org is sandbox_enabled' do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjI1ODA4NA==", "bodyText": "Changed.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r446258084", "createdAt": "2020-06-26T15:36:05Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/spec/models/organization_user_assignment_spec.rb", "diffHunk": "@@ -3,13 +3,18 @@\n require 'rails_helper'\n \n RSpec.describe OrganizationUserAssignment, type: :model do\n+  include APIClientSupport\n+\n   describe 'callbacks' do\n     describe '#send_organization_sandbox_email' do\n       it 'sends email if org is sandbox_enabled' do", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzNTY3NQ=="}, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Nzk0MDA0OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/views/internal/registered_organizations/new.html.erb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTowOToyNVrOGpL47A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMTowOToyNVrOGpL47A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzOTU5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  Enable PI access for <%= @organization.name %>\n          \n          \n            \n                  Enable API access for <%= @organization.name %>", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445839596", "createdAt": "2020-06-25T21:09:25Z", "author": {"login": "dhgreene"}, "path": "dpc-web/app/views/internal/registered_organizations/new.html.erb", "diffHunk": "@@ -3,8 +3,8 @@\n <div class=\"ds-l-container ds-u-padding-x--0\">\n   <section class=\"ds-u-display--flex ds-u-justify-content--between ds-u-align-items--center\">\n \n-    <h1 class=\"ds-u-font-size--title ds-u-font-weight--normal ds-u-margin--0\" data-test=\"new-reg-org-<%= @registered_organization.api_env %>\">\n-      Enable <%= @api_env.capitalize %> API access for <%= @organization.name %>\n+    <h1 class=\"ds-u-font-size--title ds-u-font-weight--normal ds-u-margin--0\" data-test=\"new-reg-org\" >\n+      Enable PI access for <%= @organization.name %>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Nzk1MTcxOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/views/dashboard/_assigned_content.html.erb", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMToxMzozMlrOGpMAYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDo1MToyMVrOGpj2PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0MTUwNA==", "bodyText": "We don't have a web app for pilot", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445841504", "createdAt": "2020-06-25T21:13:32Z", "author": {"login": "dhgreene"}, "path": "dpc-web/app/views/dashboard/_assigned_content.html.erb", "diffHunk": "@@ -1,4 +1,11 @@\n-<p class=\"ds-text--lead ds-u-measure--wide ds-u-margin-top--2\">Welcome to the Data at the Point of Care Pilot. You have been assigned to the organizations below to start using the APIs in a synthetic, or test, sandbox. <strong>Remember</strong>, do NOT add any real patient information to the sandbox environment. </p>\n+<p class=\"ds-text--lead ds-u-measure--wide ds-u-margin-top--2\">\n+  <% if prod_sbx? %>\n+    Welcome to the Data at the Point of Care Sandbox. You have been assigned to the organizations below to start using the APIs in a synthetic, or test, sandbox. <strong>Remember</strong>, do NOT add any real patient information to the sandbox environment.\n+  <% else %>\n+    <%# Need to speak with Product/H Team about welcome for pilot %>\n+    Welcome to the Data at the Point of Care Pilot.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIxOTI2Mw==", "bodyText": "Will it always be sandbox?", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r446219263", "createdAt": "2020-06-26T14:29:41Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/app/views/dashboard/_assigned_content.html.erb", "diffHunk": "@@ -1,4 +1,11 @@\n-<p class=\"ds-text--lead ds-u-measure--wide ds-u-margin-top--2\">Welcome to the Data at the Point of Care Pilot. You have been assigned to the organizations below to start using the APIs in a synthetic, or test, sandbox. <strong>Remember</strong>, do NOT add any real patient information to the sandbox environment. </p>\n+<p class=\"ds-text--lead ds-u-measure--wide ds-u-margin-top--2\">\n+  <% if prod_sbx? %>\n+    Welcome to the Data at the Point of Care Sandbox. You have been assigned to the organizations below to start using the APIs in a synthetic, or test, sandbox. <strong>Remember</strong>, do NOT add any real patient information to the sandbox environment.\n+  <% else %>\n+    <%# Need to speak with Product/H Team about welcome for pilot %>\n+    Welcome to the Data at the Point of Care Pilot.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0MTUwNA=="}, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIzMjEyNQ==", "bodyText": "Reverted, but right now the language does say that they are working in Sandbox and to not upload real patient data to the API. Will the pilot users ever use the web app?", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r446232125", "createdAt": "2020-06-26T14:51:21Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/app/views/dashboard/_assigned_content.html.erb", "diffHunk": "@@ -1,4 +1,11 @@\n-<p class=\"ds-text--lead ds-u-measure--wide ds-u-margin-top--2\">Welcome to the Data at the Point of Care Pilot. You have been assigned to the organizations below to start using the APIs in a synthetic, or test, sandbox. <strong>Remember</strong>, do NOT add any real patient information to the sandbox environment. </p>\n+<p class=\"ds-text--lead ds-u-measure--wide ds-u-margin-top--2\">\n+  <% if prod_sbx? %>\n+    Welcome to the Data at the Point of Care Sandbox. You have been assigned to the organizations below to start using the APIs in a synthetic, or test, sandbox. <strong>Remember</strong>, do NOT add any real patient information to the sandbox environment.\n+  <% else %>\n+    <%# Need to speak with Product/H Team about welcome for pilot %>\n+    Welcome to the Data at the Point of Care Pilot.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0MTUwNA=="}, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Nzk1NDU1OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/services/api_client.rb", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMToxNDozN1rOGpMCTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMToyNTo1MVrOGpMWlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0MTk5Ng==", "bodyText": "Is it worth renaming this to GOLDEN_MACAROON?  It would require an associated ops PR, but decrease cognitive dissonance in dev and test to see GOLDEN_MACAROON_SANDBOX.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445841996", "createdAt": "2020-06-25T21:14:37Z", "author": {"login": "dhgreene"}, "path": "dpc-web/app/services/api_client.rb", "diffHunk": "@@ -110,7 +103,7 @@ def delegated_macaroon(reg_org_api_id)\n   end\n \n   def golden_macaroon\n-    @golden_macaroon ||= ENV.fetch(\"GOLDEN_MACAROON_#{api_env.upcase}\")\n+    @golden_macaroon ||= ENV.fetch('GOLDEN_MACAROON_SANDBOX')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NzE5MQ==", "bodyText": "Yes, I've taken notes on a few things like this. I didnt include them in this PR because I figured a separate, smaller PR with an associated ops PR would be a little cleaner... rather than trying to dump it all in this one giant one", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445847191", "createdAt": "2020-06-25T21:25:51Z", "author": {"login": "SMLuthi"}, "path": "dpc-web/app/services/api_client.rb", "diffHunk": "@@ -110,7 +103,7 @@ def delegated_macaroon(reg_org_api_id)\n   end\n \n   def golden_macaroon\n-    @golden_macaroon ||= ENV.fetch(\"GOLDEN_MACAROON_#{api_env.upcase}\")\n+    @golden_macaroon ||= ENV.fetch('GOLDEN_MACAROON_SANDBOX')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0MTk5Ng=="}, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Nzk3MTIxOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/internal/registered_organizations_controller.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMToyMDoyOFrOGpMMzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNDozNDoyMVrOGpjPEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NDY4NQ==", "bodyText": "Should \"Organization\" be \"API\" in this and the following alerts?", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445844685", "createdAt": "2020-06-25T21:20:28Z", "author": {"login": "dhgreene"}, "path": "dpc-web/app/controllers/internal/registered_organizations_controller.rb", "diffHunk": "@@ -17,49 +16,45 @@ def new\n \n     def create\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations\n-                                              .build(registered_organization_params)\n-      @api_env = params[:api_env] || @registered_organization.api_env\n+      @registered_organization = @organization.build_registered_organization(registered_organization_params)\n \n       if @registered_organization.save\n-        flash[:notice] = \"Access to #{@registered_organization.api_env} enabled.\"\n+        flash[:notice] = 'Organization has been enabled.'\n         redirect_to internal_organization_path(@organization)\n       else\n-        flash[:alert] = \"Access to #{@registered_organization.api_env} could not be enabled:\n+        flash[:alert] = \"Organization could not be enabled:\n                         #{model_error_string(@registered_organization)}.\"\n         render :new\n       end\n     end\n \n     def edit\n-      @api_env = params[:api_env]\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations.find(params[:id])\n+      @registered_organization = @organization.registered_organization\n     end\n \n     def update\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations.find(params[:id])\n-      @api_env = @registered_organization.api_env\n+      @registered_organization = @organization.registered_organization\n \n       if @registered_organization.update(registered_organization_params)\n-        flash[:notice] = \"#{@registered_organization.api_env.capitalize} access updated.\"\n+        flash[:notice] = 'Organization access updated.'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjIyMjA5OA==", "bodyText": "Changed!", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r446222098", "createdAt": "2020-06-26T14:34:21Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/app/controllers/internal/registered_organizations_controller.rb", "diffHunk": "@@ -17,49 +16,45 @@ def new\n \n     def create\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations\n-                                              .build(registered_organization_params)\n-      @api_env = params[:api_env] || @registered_organization.api_env\n+      @registered_organization = @organization.build_registered_organization(registered_organization_params)\n \n       if @registered_organization.save\n-        flash[:notice] = \"Access to #{@registered_organization.api_env} enabled.\"\n+        flash[:notice] = 'Organization has been enabled.'\n         redirect_to internal_organization_path(@organization)\n       else\n-        flash[:alert] = \"Access to #{@registered_organization.api_env} could not be enabled:\n+        flash[:alert] = \"Organization could not be enabled:\n                         #{model_error_string(@registered_organization)}.\"\n         render :new\n       end\n     end\n \n     def edit\n-      @api_env = params[:api_env]\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations.find(params[:id])\n+      @registered_organization = @organization.registered_organization\n     end\n \n     def update\n       @organization = Organization.find(org_id_param)\n-      @registered_organization = @organization.registered_organizations.find(params[:id])\n-      @api_env = @registered_organization.api_env\n+      @registered_organization = @organization.registered_organization\n \n       if @registered_organization.update(registered_organization_params)\n-        flash[:notice] = \"#{@registered_organization.api_env.capitalize} access updated.\"\n+        flash[:notice] = 'Organization access updated.'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NDY4NQ=="}, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Nzk3Njg4OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/organization.rb", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMToyMjoyMlrOGpMQQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjo1MzowOFrOGpfwDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NTU2OQ==", "bodyText": "Does it still make sense to have two separate models/tables?", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445845569", "createdAt": "2020-06-25T21:22:22Z", "author": {"login": "dhgreene"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -6,7 +6,7 @@ class Organization < ApplicationRecord\n   has_one :address, as: :addressable, dependent: :destroy\n   has_many :organization_user_assignments, dependent: :destroy\n   has_many :users, through: :organization_user_assignments\n-  has_many :registered_organizations, dependent: :destroy\n+  has_one :registered_organization, dependent: :destroy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0Nzg1Mw==", "bodyText": "Good question. I could go either way on this tbh. On one hand it contains a clean separation between an org and a registered organization but on the other hand we could just incorporate them together and allow for blank columns. Im open for suggestions.", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r445847853", "createdAt": "2020-06-25T21:27:13Z", "author": {"login": "SMLuthi"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -6,7 +6,7 @@ class Organization < ApplicationRecord\n   has_one :address, as: :addressable, dependent: :destroy\n   has_many :organization_user_assignments, dependent: :destroy\n   has_many :users, through: :organization_user_assignments\n-  has_many :registered_organizations, dependent: :destroy\n+  has_one :registered_organization, dependent: :destroy", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NTU2OQ=="}, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE2NTAwNA==", "bodyText": "This was something that we were definitely talking about during our work.\nMy understanding is a registered organization is what exists in the API (and is copied from & updated w/ the organization model).", "url": "https://github.com/CMSgov/dpc-app/pull/881#discussion_r446165004", "createdAt": "2020-06-26T12:53:08Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -6,7 +6,7 @@ class Organization < ApplicationRecord\n   has_one :address, as: :addressable, dependent: :destroy\n   has_many :organization_user_assignments, dependent: :destroy\n   has_many :users, through: :organization_user_assignments\n-  has_many :registered_organizations, dependent: :destroy\n+  has_one :registered_organization, dependent: :destroy", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0NTU2OQ=="}, "originalCommit": {"oid": "4a46687a9df6a1e11c7a7766f3b5730676814c42"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 99, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}