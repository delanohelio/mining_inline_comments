{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzMTE3NjU5", "number": 848, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDo0NToxNFrOEI6v9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDo1ODoxOVrOEI6_YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3Nzg2NjE1OnYy", "diffSide": "RIGHT", "path": "dpc-api/src/test/java/gov/cms/dpc/api/APITestHelpers.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDo0NToxNFrOGpLKpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDo0NToxNFrOGpLKpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgyNzc0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static Practitioner createPractitionerResource(String NPI, String orgID) {\n          \n          \n            \n                public static Practitioner createPractitionerResource(String npi, String orgID) {\n          \n      \n    \n    \n  \n\nWould you be okay with making this and the MBI parameter in createPatientResource() lowercase? Might get mistaken for constants if someone is scanning the code quickly.", "url": "https://github.com/CMSgov/dpc-app/pull/848#discussion_r445827749", "createdAt": "2020-06-25T20:45:14Z", "author": {"login": "em1"}, "path": "dpc-api/src/test/java/gov/cms/dpc/api/APITestHelpers.java", "diffHunk": "@@ -199,4 +198,33 @@ private static Validator provideValidator(InjectingConstraintValidatorFactory fa\n                 .configure().constraintValidatorFactory(factory)\n                 .buildValidatorFactory().getValidator();\n     }\n+\n+    public static Practitioner createPractitionerResource(String NPI, String orgID) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fa6758be80591449d927c33d92f5ae22eb228dc"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NzkwNTYwOnYy", "diffSide": "RIGHT", "path": "dpc-api/src/test/java/gov/cms/dpc/api/resources/v1/PatientResourceTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMDo1ODoxOVrOGpLkBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQyMToxNjoyM1rOGpMFjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzNDI0NQ==", "bodyText": "Do these need to be Location and Last-Modified? Or is it case insensitive?", "url": "https://github.com/CMSgov/dpc-app/pull/848#discussion_r445834245", "createdAt": "2020-06-25T20:58:19Z", "author": {"login": "em1"}, "path": "dpc-api/src/test/java/gov/cms/dpc/api/resources/v1/PatientResourceTest.java", "diffHunk": "@@ -245,4 +244,33 @@ void testCreateInvalidPatient() throws IOException, URISyntaxException {\n \n         conn.disconnect();\n     }\n+\n+    @Test\n+    public void testCreatePatientReturnsAppropriateHeaders() {\n+        IGenericClient client = APIAuthHelpers.buildAuthenticatedClient(ctx, getBaseURL(), ORGANIZATION_TOKEN, PUBLIC_KEY_ID, PRIVATE_KEY);\n+        Patient patient = APITestHelpers.createPatientResource(\"4S41C00AA00\", APITestHelpers.ORGANIZATION_ID);\n+\n+        MethodOutcome methodOutcome = client.create()\n+                .resource(patient)\n+                .encodedJson()\n+                .execute();\n+\n+        String location = methodOutcome.getResponseHeaders().get(\"location\").get(0);\n+        String date = methodOutcome.getResponseHeaders().get(\"last-modified\").get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6227935c2c8f60c746642af5d19c52ef0ef438e0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0MTU0Mg==", "bodyText": "Do these need to be Location and Last-Modified? Or is it case insensitive?\n\n@EmBh I went with the capitalized version originally but for some reason, the IGenericClient returns lower case from the response headers.", "url": "https://github.com/CMSgov/dpc-app/pull/848#discussion_r445841542", "createdAt": "2020-06-25T21:13:37Z", "author": {"login": "MrBilnon"}, "path": "dpc-api/src/test/java/gov/cms/dpc/api/resources/v1/PatientResourceTest.java", "diffHunk": "@@ -245,4 +244,33 @@ void testCreateInvalidPatient() throws IOException, URISyntaxException {\n \n         conn.disconnect();\n     }\n+\n+    @Test\n+    public void testCreatePatientReturnsAppropriateHeaders() {\n+        IGenericClient client = APIAuthHelpers.buildAuthenticatedClient(ctx, getBaseURL(), ORGANIZATION_TOKEN, PUBLIC_KEY_ID, PRIVATE_KEY);\n+        Patient patient = APITestHelpers.createPatientResource(\"4S41C00AA00\", APITestHelpers.ORGANIZATION_ID);\n+\n+        MethodOutcome methodOutcome = client.create()\n+                .resource(patient)\n+                .encodedJson()\n+                .execute();\n+\n+        String location = methodOutcome.getResponseHeaders().get(\"location\").get(0);\n+        String date = methodOutcome.getResponseHeaders().get(\"last-modified\").get(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzNDI0NQ=="}, "originalCommit": {"oid": "6227935c2c8f60c746642af5d19c52ef0ef438e0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTg0MjgzMA==", "bodyText": "Oh weird! That's good to know. \ud83d\udc4d", "url": "https://github.com/CMSgov/dpc-app/pull/848#discussion_r445842830", "createdAt": "2020-06-25T21:16:23Z", "author": {"login": "em1"}, "path": "dpc-api/src/test/java/gov/cms/dpc/api/resources/v1/PatientResourceTest.java", "diffHunk": "@@ -245,4 +244,33 @@ void testCreateInvalidPatient() throws IOException, URISyntaxException {\n \n         conn.disconnect();\n     }\n+\n+    @Test\n+    public void testCreatePatientReturnsAppropriateHeaders() {\n+        IGenericClient client = APIAuthHelpers.buildAuthenticatedClient(ctx, getBaseURL(), ORGANIZATION_TOKEN, PUBLIC_KEY_ID, PRIVATE_KEY);\n+        Patient patient = APITestHelpers.createPatientResource(\"4S41C00AA00\", APITestHelpers.ORGANIZATION_ID);\n+\n+        MethodOutcome methodOutcome = client.create()\n+                .resource(patient)\n+                .encodedJson()\n+                .execute();\n+\n+        String location = methodOutcome.getResponseHeaders().get(\"location\").get(0);\n+        String date = methodOutcome.getResponseHeaders().get(\"last-modified\").get(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTgzNDI0NQ=="}, "originalCommit": {"oid": "6227935c2c8f60c746642af5d19c52ef0ef438e0"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 162, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}