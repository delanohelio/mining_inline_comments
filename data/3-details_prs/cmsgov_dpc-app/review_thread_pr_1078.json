{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2MzgxODUw", "number": 1078, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNjozNToyOVrOEpjZWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNzoyNjowOFrOEpkZEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDA3MDAyOnYy", "diffSide": "RIGHT", "path": "dpc-smoketest/src/main/java/gov/cms/dpc/testing/smoketests/ClientUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNjozNToyOVrOHbSg2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNjo0Nzo1N1rOHbS7eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM3NjkyMQ==", "bodyText": "is it possible to comment out the entire call to .peek()?", "url": "https://github.com/CMSgov/dpc-app/pull/1078#discussion_r498376921", "createdAt": "2020-10-01T16:35:29Z", "author": {"login": "jonfulk"}, "path": "dpc-smoketest/src/main/java/gov/cms/dpc/testing/smoketests/ClientUtils.java", "diffHunk": "@@ -62,8 +62,9 @@ static void handleExportJob(IGenericClient exportClient, List<String> providerNP\n                 .map(search -> (Group) search.getEntryFirstRep().getResource())\n                 .map(group -> jobCompletionLambda(exportClient, httpClient, group, overrideURL))\n                 .peek(jobResponse -> {\n-                    if (jobResponse.getError().size() > 0)\n-                        throw new IllegalStateException(\"Export job completed, but with errors\");\n+                    //TODO: ignore until we can skip lookback per request and switch over to use real bfd client\n+//                    if (jobResponse.getError().size() > 0)\n+//                        throw new IllegalStateException(\"Export job completed, but with errors\");\n                 })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c9285a916fdfd3f73ff2ff56da7a57d08ee3d0"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4MzczOA==", "bodyText": "good point, I'll do that", "url": "https://github.com/CMSgov/dpc-app/pull/1078#discussion_r498383738", "createdAt": "2020-10-01T16:47:57Z", "author": {"login": "MrBilnon"}, "path": "dpc-smoketest/src/main/java/gov/cms/dpc/testing/smoketests/ClientUtils.java", "diffHunk": "@@ -62,8 +62,9 @@ static void handleExportJob(IGenericClient exportClient, List<String> providerNP\n                 .map(search -> (Group) search.getEntryFirstRep().getResource())\n                 .map(group -> jobCompletionLambda(exportClient, httpClient, group, overrideURL))\n                 .peek(jobResponse -> {\n-                    if (jobResponse.getError().size() > 0)\n-                        throw new IllegalStateException(\"Export job completed, but with errors\");\n+                    //TODO: ignore until we can skip lookback per request and switch over to use real bfd client\n+//                    if (jobResponse.getError().size() > 0)\n+//                        throw new IllegalStateException(\"Export job completed, but with errors\");\n                 })", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM3NjkyMQ=="}, "originalCommit": {"oid": "f9c9285a916fdfd3f73ff2ff56da7a57d08ee3d0"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDA5MTE1OnYy", "diffSide": "RIGHT", "path": "dpc-smoketest/src/main/java/gov/cms/dpc/testing/smoketests/ClientUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNjo0MTo0NFrOHbSuog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNjo0MTo0NFrOHbSuog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM4MDQ1MA==", "bodyText": "This block of commented-out lines of code should be removed.", "url": "https://github.com/CMSgov/dpc-app/pull/1078#discussion_r498380450", "createdAt": "2020-10-01T16:41:44Z", "author": {"login": "codeclimate"}, "path": "dpc-smoketest/src/main/java/gov/cms/dpc/testing/smoketests/ClientUtils.java", "diffHunk": "@@ -62,8 +62,9 @@ static void handleExportJob(IGenericClient exportClient, List<String> providerNP\n                 .map(search -> (Group) search.getEntryFirstRep().getResource())\n                 .map(group -> jobCompletionLambda(exportClient, httpClient, group, overrideURL))\n                 .peek(jobResponse -> {\n-                    if (jobResponse.getError().size() > 0)\n-                        throw new IllegalStateException(\"Export job completed, but with errors\");\n+                    //TODO: ignore until we can skip lookback per request and switch over to use real bfd client\n+//                    if (jobResponse.getError().size() > 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c9285a916fdfd3f73ff2ff56da7a57d08ee3d0"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMDIzMzE0OnYy", "diffSide": "RIGHT", "path": "dpc-smoketest/src/main/java/gov/cms/dpc/testing/smoketests/ClientUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNzoyNjowOFrOHbUNNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNzoyNjowOFrOHbUNNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQwNDY2MQ==", "bodyText": "This block of commented-out lines of code should be removed.", "url": "https://github.com/CMSgov/dpc-app/pull/1078#discussion_r498404661", "createdAt": "2020-10-01T17:26:08Z", "author": {"login": "codeclimate"}, "path": "dpc-smoketest/src/main/java/gov/cms/dpc/testing/smoketests/ClientUtils.java", "diffHunk": "@@ -61,10 +61,11 @@ static void handleExportJob(IGenericClient exportClient, List<String> providerNP\n                 .map(npi -> exportRequestDispatcher(exportClient, npi))\n                 .map(search -> (Group) search.getEntryFirstRep().getResource())\n                 .map(group -> jobCompletionLambda(exportClient, httpClient, group, overrideURL))\n-                .peek(jobResponse -> {\n-                    if (jobResponse.getError().size() > 0)\n-                        throw new IllegalStateException(\"Export job completed, but with errors\");\n-                })\n+                //TODO: ignore until we can skip lookback per request and switch over to use real bfd client\n+//                .peek(jobResponse -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d697c704c5b895e80bf66f4b5268aa135566cc9d"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4989, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}