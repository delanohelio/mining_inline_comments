{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjE1NjMz", "number": 1147, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODoyNDoyMVrOFHTACw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxOTowNTozNlrOFHT5GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMTk1NjU5OnYy", "diffSide": "RIGHT", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODoyNDoyMVrOIIt1lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMjozOToyN1rOII0xNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxMDUxOA==", "bodyText": "Is this name consistent with other search or fetch methods in other DAOs? I like the shorter name, but maybe it could be more descriptive?", "url": "https://github.com/CMSgov/dpc-app/pull/1147#discussion_r546010518", "createdAt": "2020-12-18T18:24:21Z", "author": {"login": "jonfulk"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java", "diffHunk": "@@ -27,15 +29,22 @@ public EndpointEntity persistEndpoint(EndpointEntity endpointEntity) {\n         return Optional.ofNullable(get(endpointID));\n     }\n \n-    public List<EndpointEntity> findByOrganization(UUID organizationID) {\n+    public List<EndpointEntity> search(UUID organizationID, UUID endpointId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d65222fccd9d5cf8dacc8793a4e803e75706737"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEyNDA4Ng==", "bodyText": "changed for consistency.", "url": "https://github.com/CMSgov/dpc-app/pull/1147#discussion_r546124086", "createdAt": "2020-12-18T22:39:27Z", "author": {"login": "MrMorie"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java", "diffHunk": "@@ -27,15 +29,22 @@ public EndpointEntity persistEndpoint(EndpointEntity endpointEntity) {\n         return Optional.ofNullable(get(endpointID));\n     }\n \n-    public List<EndpointEntity> findByOrganization(UUID organizationID) {\n+    public List<EndpointEntity> search(UUID organizationID, UUID endpointId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAxMDUxOA=="}, "originalCommit": {"oid": "7d65222fccd9d5cf8dacc8793a4e803e75706737"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjEwMjY0OnYy", "diffSide": "RIGHT", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxOTowNTozNlrOIIvOjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMjo0NDozN1rOII027g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAzMzI5NQ==", "bodyText": "in the case where the organizationID and/or the endpointID is/are null, do we want to throw some sort of error? Otherwise, wouldn't we end up just not filtering the results by those predicates?", "url": "https://github.com/CMSgov/dpc-app/pull/1147#discussion_r546033295", "createdAt": "2020-12-18T19:05:36Z", "author": {"login": "jonfulk"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java", "diffHunk": "@@ -27,15 +29,22 @@ public EndpointEntity persistEndpoint(EndpointEntity endpointEntity) {\n         return Optional.ofNullable(get(endpointID));\n     }\n \n-    public List<EndpointEntity> findByOrganization(UUID organizationID) {\n+    public List<EndpointEntity> search(UUID organizationID, UUID endpointId) {\n         // Build a selection query to get records from the database\n         final CriteriaBuilder builder = currentSession().getCriteriaBuilder();\n         final CriteriaQuery<EndpointEntity> query = builder.createQuery(EndpointEntity.class);\n         final Root<EndpointEntity> root = query.from(EndpointEntity.class);\n         query.select(root);\n \n+        final List<Predicate> predicates = Lists.newArrayList();\n \n-        query.where(builder.equal(root.get(\"organization\").get(\"id\"), organizationID));\n+        if(organizationID!=null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d65222fccd9d5cf8dacc8793a4e803e75706737"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjEyNTU1MA==", "bodyText": "Thats right, no predicates would just translate to a select.\nIn the rest of the DAOs we do the same. Not allowing a search without filters is more of a business requirement and probably does not belong in the DAOs.", "url": "https://github.com/CMSgov/dpc-app/pull/1147#discussion_r546125550", "createdAt": "2020-12-18T22:44:37Z", "author": {"login": "MrMorie"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/jdbi/EndpointDAO.java", "diffHunk": "@@ -27,15 +29,22 @@ public EndpointEntity persistEndpoint(EndpointEntity endpointEntity) {\n         return Optional.ofNullable(get(endpointID));\n     }\n \n-    public List<EndpointEntity> findByOrganization(UUID organizationID) {\n+    public List<EndpointEntity> search(UUID organizationID, UUID endpointId) {\n         // Build a selection query to get records from the database\n         final CriteriaBuilder builder = currentSession().getCriteriaBuilder();\n         final CriteriaQuery<EndpointEntity> query = builder.createQuery(EndpointEntity.class);\n         final Root<EndpointEntity> root = query.from(EndpointEntity.class);\n         query.select(root);\n \n+        final List<Predicate> predicates = Lists.newArrayList();\n \n-        query.where(builder.equal(root.get(\"organization\").get(\"id\"), organizationID));\n+        if(organizationID!=null){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAzMzI5NQ=="}, "originalCommit": {"oid": "7d65222fccd9d5cf8dacc8793a4e803e75706737"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 51, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}