{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDMxODE5", "number": 667, "title": "DPC-1119: Stuck jobs fixes: change exceptions in ResourceFetcher; remove RetryTransformer", "bodyText": "Why\nJobs are getting stuck in the queue when they contain MBIs that are not in BFD.\nWhat Changed\n\nReplace some JobQueueFailure exceptions with ResourceNotFoundExceptions so jobs won't be marked as failed in response to BFD 404s\nRemove .compose(RetryTransformer.of(retry)) from fetchResources() Flowable\n\nTickets closed:\nDPC-1119\nFuture Work\nWe may wish to revisit our approach to retries.\nChecklist\n\n All tests are passing via make ci-app (app change) and make ci-web (website change)\n Swagger documentation has been updated\n FHIR documentation has been updated\n Any required dpc-ops changes have a PR submitted and mentioned in this ticket\n Any manual migration steps are documented, scripts written (where applicable), and tested\n Before merging, any required dpc-ops changes have been approved and merged into master of the dpc-ops repo", "createdAt": "2020-03-06T21:35:51Z", "url": "https://github.com/CMSgov/dpc-app/pull/667", "merged": true, "mergeCommit": {"oid": "68f949e9f00ca7eb832e06877bab5609e093f9ba"}, "closed": true, "closedAt": "2020-03-12T18:51:55Z", "author": {"login": "em1"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLHM-AgFqTM3MDY0NDYzMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM-GCegFqTM3MzY4NjAyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNjQ0NjMx", "url": "https://github.com/CMSgov/dpc-app/pull/667#pullrequestreview-370644631", "createdAt": "2020-03-06T21:42:44Z", "commit": {"oid": "f761ddc888391cf8c7983405ef5cea3396ca5dd7"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTo0Mjo0NFrOFzIXFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTo0Mjo0NVrOFzIXGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1ODY3OA==", "bodyText": "Define and throw a dedicated exception instead of using a generic one.", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r389158678", "createdAt": "2020-03-06T21:42:44Z", "author": {"login": "codeclimate"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -137,7 +137,7 @@ private Resource fetchFirst(String mbi) {\n                 beneId = getBeneIdFromPatient(patient);\n                 return blueButtonClient.requestCoverageFromServer(beneId);\n             default:\n-                throw new JobQueueFailure(jobID, batchID, \"Unexpected resource type: \" + resourceType.toString());\n+                throw new RuntimeException(String.format(\"Job %s, batch %s: Unexpected resource type: %s\", jobID, batchID, resourceType.toString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f761ddc888391cf8c7983405ef5cea3396ca5dd7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1ODY4MA==", "bodyText": "Define and throw a dedicated exception instead of using a generic one.", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r389158680", "createdAt": "2020-03-06T21:42:44Z", "author": {"login": "codeclimate"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -146,22 +146,22 @@ private Patient fetchPatient(String mbi) {\n         try {\n             patients = blueButtonClient.requestPatientFromServerByMbi(mbi);\n         } catch (GeneralSecurityException e) {\n-            throw new JobQueueFailure(jobID, batchID, \"Failed to retrieve Patient\");\n+            throw new RuntimeException(String.format(\"Job %s, batch %s: Failed to retrieve Patient\", jobID, batchID));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f761ddc888391cf8c7983405ef5cea3396ca5dd7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1ODY4Mg==", "bodyText": "Define and throw a dedicated exception instead of using a generic one.", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r389158682", "createdAt": "2020-03-06T21:42:45Z", "author": {"login": "codeclimate"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -146,22 +146,22 @@ private Patient fetchPatient(String mbi) {\n         try {\n             patients = blueButtonClient.requestPatientFromServerByMbi(mbi);\n         } catch (GeneralSecurityException e) {\n-            throw new JobQueueFailure(jobID, batchID, \"Failed to retrieve Patient\");\n+            throw new RuntimeException(String.format(\"Job %s, batch %s: Failed to retrieve Patient\", jobID, batchID));\n         }\n \n         if (patients.getTotal() == 1) {\n             return (Patient) patients.getEntryFirstRep().getResource();\n         }\n \n-        throw new JobQueueFailure(jobID, batchID, String.format(\"Expected 1 Patient to match MBI but found %d\", patients.getTotal()));\n+        throw new RuntimeException(String.format(\"Job %s, batch %s: Expected 1 Patient to match MBI but found %d\", jobID, batchID, patients.getTotal()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f761ddc888391cf8c7983405ef5cea3396ca5dd7"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f761ddc888391cf8c7983405ef5cea3396ca5dd7", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/f761ddc888391cf8c7983405ef5cea3396ca5dd7", "committedDate": "2020-03-06T21:24:19Z", "message": "Replace job queue failures with runtime exceptions to cause jobs to complete with operation outcomes"}, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMjMzOTQ2", "url": "https://github.com/CMSgov/dpc-app/pull/667#pullrequestreview-371233946", "createdAt": "2020-03-09T14:32:48Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDozMjo0OFrOFzrH0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDo0MzoyM1rOFzrjwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcyODIwOA==", "bodyText": "I don't think we want to change this behavior. A JobQueueFailure still makes sense if we get an unknown resource type, as this would be an indication of a problem with our code, and not something the user could accidentally request.", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r389728208", "createdAt": "2020-03-09T14:32:48Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -137,7 +137,7 @@ private Resource fetchFirst(String mbi) {\n                 beneId = getBeneIdFromPatient(patient);\n                 return blueButtonClient.requestCoverageFromServer(beneId);\n             default:\n-                throw new JobQueueFailure(jobID, batchID, \"Unexpected resource type: \" + resourceType.toString());\n+                throw new ResourceNotFoundException(String.format(\"Job %s, batch %s: Unexpected resource type: %s\", jobID, batchID, resourceType.toString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTczMTI1Nw==", "bodyText": "Can we wrap the ResourceNotFoundException with the caught GeneralSecurityException so we can still debug the original exception?\nAdditionally, the ResourceNotFoundException will end up in the OperationalOutcome files, so it might makes sense to log out the job failure information with a logger.error and then remove the job and batch information from the exception message, so it doesn't become user facing.", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r389731257", "createdAt": "2020-03-09T14:37:31Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -146,22 +146,22 @@ private Patient fetchPatient(String mbi) {\n         try {\n             patients = blueButtonClient.requestPatientFromServerByMbi(mbi);\n         } catch (GeneralSecurityException e) {\n-            throw new JobQueueFailure(jobID, batchID, \"Failed to retrieve Patient\");\n+            throw new ResourceNotFoundException(String.format(\"Job %s, batch %s: Failed to retrieve Patient\", jobID, batchID));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTczMjczMA==", "bodyText": "Same as above. We should use logger.error to log out our IDs, and update the exception message to be more user friendly. Perhaps Patient not found matching MBI %s?", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r389732730", "createdAt": "2020-03-09T14:39:44Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -146,22 +146,22 @@ private Patient fetchPatient(String mbi) {\n         try {\n             patients = blueButtonClient.requestPatientFromServerByMbi(mbi);\n         } catch (GeneralSecurityException e) {\n-            throw new JobQueueFailure(jobID, batchID, \"Failed to retrieve Patient\");\n+            throw new ResourceNotFoundException(String.format(\"Job %s, batch %s: Failed to retrieve Patient\", jobID, batchID));\n         }\n \n         if (patients.getTotal() == 1) {\n             return (Patient) patients.getEntryFirstRep().getResource();\n         }\n \n-        throw new JobQueueFailure(jobID, batchID, String.format(\"Expected 1 Patient to match MBI but found %d\", patients.getTotal()));\n+        throw new ResourceNotFoundException(String.format(\"Job %s, batch %s: Expected 1 Patient to match MBI but found %d\", jobID, batchID, patients.getTotal()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTczMjk3Mg==", "bodyText": "Same suggestions as above.", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r389732972", "createdAt": "2020-03-09T14:40:02Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -146,22 +146,22 @@ private Patient fetchPatient(String mbi) {\n         try {\n             patients = blueButtonClient.requestPatientFromServerByMbi(mbi);\n         } catch (GeneralSecurityException e) {\n-            throw new JobQueueFailure(jobID, batchID, \"Failed to retrieve Patient\");\n+            throw new ResourceNotFoundException(String.format(\"Job %s, batch %s: Failed to retrieve Patient\", jobID, batchID));\n         }\n \n         if (patients.getTotal() == 1) {\n             return (Patient) patients.getEntryFirstRep().getResource();\n         }\n \n-        throw new JobQueueFailure(jobID, batchID, String.format(\"Expected 1 Patient to match MBI but found %d\", patients.getTotal()));\n+        throw new ResourceNotFoundException(String.format(\"Job %s, batch %s: Expected 1 Patient to match MBI but found %d\", jobID, batchID, patients.getTotal()));\n     }\n \n     private String getBeneIdFromPatient(Patient patient) {\n         return patient.getIdentifier().stream()\n                 .filter(id -> DPCIdentifierSystem.BENE_ID.getSystem().equals(id.getSystem()))\n                 .findFirst()\n                 .map(Identifier::getValue)\n-                .orElseThrow(() -> new JobQueueFailure(jobID, batchID, \"No bene_id found in Patient resource\"));\n+                .orElseThrow(() -> new ResourceNotFoundException(String.format(\"Job %s, batch %s: No bene_id found in Patient resource\", jobID, batchID)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTczNTM2MQ==", "bodyText": "Assuming this is the test for the unknown resource type, the expected result should still be FAILED.\nI think we need a new test (with some changes to the mocked BlueButton client) to support trigger the scenario found on line 156 of ResourceFetcher.\nAdditionally, we should update the postman / smoke tests to add an invalid ID to the roster, and verify we get a success on the job and an operation outcome file (in addition to the expected resources).", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r389735361", "createdAt": "2020-03-09T14:43:23Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-aggregation/src/test/java/gov/cms/dpc/aggregation/engine/AggregationEngineTest.java", "diffHunk": "@@ -297,7 +297,7 @@ void badJobTest() {\n \n         // Look at the result\n         assertAll(() -> assertTrue(queue.getJobBatches(jobID).stream().findFirst().isPresent(), \"Unable to retrieve job from queue.\"),\n-                () -> assertEquals(JobStatus.FAILED, queue.getJobBatches(jobID).stream().findFirst().get().getStatus()));\n+                () -> assertEquals(JobStatus.COMPLETED, queue.getJobBatches(jobID).stream().findFirst().get().getStatus()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "e93832b10eaf177d90432039e10b99491e9bbbac", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/e93832b10eaf177d90432039e10b99491e9bbbac", "committedDate": "2020-03-12T13:45:17Z", "message": "Replace job queue failures with runtime exceptions to cause jobs to complete with operation outcomes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d08a8ef17218908d384be668c2f04ca039a4777f", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/d08a8ef17218908d384be668c2f04ca039a4777f", "committedDate": "2020-03-12T13:45:17Z", "message": "Exception and logging adjustments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6ff9fbd5f23eb3f4b61611d1d24c74c91df4077", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/e6ff9fbd5f23eb3f4b61611d1d24c74c91df4077", "committedDate": "2020-03-12T13:45:17Z", "message": "Add test to confirm job completes with OperationOutcome when two Patients match provided MBI"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b803476030b212fc4c25ecf367e56f97abe5212", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/4b803476030b212fc4c25ecf367e56f97abe5212", "committedDate": "2020-03-12T13:45:18Z", "message": "Add new Patient not in BFD to Postman test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a64e89f56190c529838b087e692e5418b3bdd56", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/8a64e89f56190c529838b087e692e5418b3bdd56", "committedDate": "2020-03-12T13:45:18Z", "message": "Error message tweaks, continuing to work on Postman improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e4da37f444b222d3c5a8a2d2705ca3306ad0c93", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/8e4da37f444b222d3c5a8a2d2705ca3306ad0c93", "committedDate": "2020-03-12T13:45:18Z", "message": "Remove env vars from docker-compose.yml that are pulled from local.env file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42f352b3b30a9eaad9c53f04a96daed5bf030b14", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/42f352b3b30a9eaad9c53f04a96daed5bf030b14", "committedDate": "2020-03-12T13:45:18Z", "message": "MockBlueButtonClient getPatient fix; logging and comments fixes in ResourceFetcher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77561a0d59d013fdd4f3b7f93c9dffbc56a3d906", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/77561a0d59d013fdd4f3b7f93c9dffbc56a3d906", "committedDate": "2020-03-12T13:45:18Z", "message": "Remove RetryTransformer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "77561a0d59d013fdd4f3b7f93c9dffbc56a3d906", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/77561a0d59d013fdd4f3b7f93c9dffbc56a3d906", "committedDate": "2020-03-12T13:45:18Z", "message": "Remove RetryTransformer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d266be16e583d5b0266c06114516a99f16c87f9", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/1d266be16e583d5b0266c06114516a99f16c87f9", "committedDate": "2020-03-12T13:49:47Z", "message": "Update Postman test to expect error file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4a9c2967cfc4c34a7cb4423c34d818b937b37ea", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/a4a9c2967cfc4c34a7cb4423c34d818b937b37ea", "committedDate": "2020-03-12T13:58:59Z", "message": "One more Postman adjustment for number of Patients"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddbd09ef6869cd9a61f464e4b51cfca7e9632040", "author": {"user": {"login": "em1", "name": null}}, "url": "https://github.com/CMSgov/dpc-app/commit/ddbd09ef6869cd9a61f464e4b51cfca7e9632040", "committedDate": "2020-03-12T15:07:19Z", "message": "Test adjustments for retry removal"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjgzMjEx", "url": "https://github.com/CMSgov/dpc-app/pull/667#pullrequestreview-373683211", "createdAt": "2020-03-12T15:54:52Z", "commit": {"oid": "ddbd09ef6869cd9a61f464e4b51cfca7e9632040"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTo1NDo1MlrOF1kn1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTo1NDo1MlrOF1kn1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxODg3MQ==", "bodyText": "are these not needed anymore to start the service?", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r391718871", "createdAt": "2020-03-12T15:54:52Z", "author": {"login": "MrBilnon"}, "path": "docker-compose.yml", "diffHunk": "@@ -22,9 +22,6 @@ services:\n     environment:\n       - ENV=local\n       - JACOCO=${REPORT_COVERAGE}\n-      - BFD_HASH_ITER=${BFD_HASH_ITER}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddbd09ef6869cd9a61f464e4b51cfca7e9632040"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNjg2MDIz", "url": "https://github.com/CMSgov/dpc-app/pull/667#pullrequestreview-373686023", "createdAt": "2020-03-12T15:57:55Z", "commit": {"oid": "ddbd09ef6869cd9a61f464e4b51cfca7e9632040"}, "state": "APPROVED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTo1ODowOVrOF1kwxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNjoxMzo0NlrOF1lYBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyMTE1OA==", "bodyText": "The fix! Looks great!", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r391721158", "createdAt": "2020-03-12T15:58:09Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -73,7 +65,6 @@\n                 return List.of(firstFetched);\n             }\n         })\n-                .compose(RetryTransformer.of(retry))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddbd09ef6869cd9a61f464e4b51cfca7e9632040"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyMTYzNw==", "bodyText": "Great job on the logging here and elsewhere. We're now returning the correct exception. \ud83d\udcaf", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r391721637", "createdAt": "2020-03-12T15:58:50Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -146,22 +137,27 @@ private Patient fetchPatient(String mbi) {\n         try {\n             patients = blueButtonClient.requestPatientFromServerByMbi(mbi);\n         } catch (GeneralSecurityException e) {\n-            throw new JobQueueFailure(jobID, batchID, \"Failed to retrieve Patient\");\n+            logger.error(\"Job {}, batch {}: Failed to retrieve Patient\", jobID, batchID, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddbd09ef6869cd9a61f464e4b51cfca7e9632040"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyMTkyMw==", "bodyText": "Great job updating the tests without retrying.", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r391721923", "createdAt": "2020-03-12T15:59:17Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-aggregation/src/test/java/gov/cms/dpc/aggregation/engine/AggregationEngineTest.java", "diffHunk": "@@ -364,9 +364,9 @@ void badPatientIDTest() throws GeneralSecurityException {\n         Mockito.verify(bbclient, atLeastOnce()).requestPatientFromServerByMbi(idCaptor.capture());\n         Mockito.verify(bbclient, atLeastOnce()).requestEOBFromServer(idCaptor.capture());\n         var values = idCaptor.getAllValues();\n-        assertEquals(6,\n+        assertEquals(2,\n                 values.stream().filter(value -> value.equals(\"-1\")).count(),\n-                \"Should be 6 invalid ids, 3 retries per method x 2 method calls x 1 bad-id\");\n+                \"Should be 2 invalid ids, 2 method calls x 1 bad-id\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddbd09ef6869cd9a61f464e4b51cfca7e9632040"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcyMjM2NQ==", "bodyText": "New test looks great, and is asserting a COMPLETED state.", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r391722365", "createdAt": "2020-03-12T15:59:56Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-aggregation/src/test/java/gov/cms/dpc/aggregation/engine/AggregationEngineTest.java", "diffHunk": "@@ -378,6 +378,34 @@ void badPatientIDTest() throws GeneralSecurityException {\n                 () -> assertTrue(Files.exists(Path.of(expectedErrorPath)), \"expected an error file\"));\n     }\n \n+    @Test\n+    void multiplePatientsMatchTest() throws GeneralSecurityException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddbd09ef6869cd9a61f464e4b51cfca7e9632040"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMDgyMg==", "bodyText": "Nice work reproducing the issue in a postman test!", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r391730822", "createdAt": "2020-03-12T16:13:12Z", "author": {"login": "ronaldheft-usds"}, "path": "src/test/EndToEndRequestTest.postman_collection.json", "diffHunk": "@@ -1,6 +1,6 @@\n {\n \t\"info\": {\n-\t\t\"_postman_id\": \"8ac802cc-ada3-4dbe-bc0e-66efad8c06fc\",\n+\t\t\"_postman_id\": \"4b1e96d7-5669-45a9-a10d-9c5a94234719\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddbd09ef6869cd9a61f464e4b51cfca7e9632040"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTczMTIwNA==", "bodyText": "I've seen the same thing, and I've had to remove them locally. Good with removing them.", "url": "https://github.com/CMSgov/dpc-app/pull/667#discussion_r391731204", "createdAt": "2020-03-12T16:13:46Z", "author": {"login": "ronaldheft-usds"}, "path": "docker-compose.yml", "diffHunk": "@@ -22,9 +22,6 @@ services:\n     environment:\n       - ENV=local\n       - JACOCO=${REPORT_COVERAGE}\n-      - BFD_HASH_ITER=${BFD_HASH_ITER}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxODg3MQ=="}, "originalCommit": {"oid": "ddbd09ef6869cd9a61f464e4b51cfca7e9632040"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 175, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}