{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5ODAzNjM1", "number": 1127, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo1MjoxMlrOE-1kIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTo0MjoyOVrOE_x-Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzI0NzY5OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/concerns/csv_generator.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo1MjoxMlrOH8NX4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo1MjoxMlrOH8NX4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5NTcxMg==", "bodyText": "Align the elements of an array literal if they span more than one line.", "url": "https://github.com/CMSgov/dpc-app/pull/1127#discussion_r532895712", "createdAt": "2020-11-30T20:52:12Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/controllers/concerns/csv_generator.rb", "diffHunk": "@@ -0,0 +1,28 @@\n+# frozen_string_literal: true\n+\n+module CsvGenerator\n+\n+  ATTRS = %w[id first_name last_name email requested_organization requested_organization_type\n+    address_1 address_2 city state zip agree_to_terms requested_num_providers created_at updated_at].freeze", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4339f971e8d2f3f1c55376facac177c08fcdbcde"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzI0NzczOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/concerns/csv_generator.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo1MjoxM1rOH8NX5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo1MjoxM1rOH8NX5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5NTcxOA==", "bodyText": "Extra empty line detected at module body beginning.", "url": "https://github.com/CMSgov/dpc-app/pull/1127#discussion_r532895718", "createdAt": "2020-11-30T20:52:13Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/controllers/concerns/csv_generator.rb", "diffHunk": "@@ -0,0 +1,28 @@\n+# frozen_string_literal: true\n+\n+module CsvGenerator\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4339f971e8d2f3f1c55376facac177c08fcdbcde"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzI0Nzc1OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/concerns/csv_generator.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo1MjoxM1rOH8NX6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo1MjoxM1rOH8NX6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5NTcyMQ==", "bodyText": "Extra empty line detected at module body end.", "url": "https://github.com/CMSgov/dpc-app/pull/1127#discussion_r532895721", "createdAt": "2020-11-30T20:52:13Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/controllers/concerns/csv_generator.rb", "diffHunk": "@@ -0,0 +1,28 @@\n+# frozen_string_literal: true\n+\n+module CsvGenerator\n+\n+  ATTRS = %w[id first_name last_name email requested_organization requested_organization_type\n+    address_1 address_2 city state zip agree_to_terms requested_num_providers created_at updated_at].freeze\n+\n+  # html escape these fields for XSS protection\n+  ESCAPED_ATTRS = %w[first_name last_name requested_organization address_1 address_2 city].freeze\n+\n+  def cvs_convert(users)\n+    CSV.generate(headers:true) do |csv|\n+      csv << ATTRS\n+      users.each do |user|\n+        attributes = user.attributes\n+        escaped_attributes = attributes.map do |k, v|\n+          if ESCAPED_ATTRS.include? k\n+            v = ERB::Util.html_escape(v)\n+          end\n+\n+          [k, v]\n+        end.to_h\n+        csv << escaped_attributes.values_at(*ATTRS)\n+      end\n+    end\n+  end\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4339f971e8d2f3f1c55376facac177c08fcdbcde"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzI0Nzc3OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/concerns/csv_generator.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo1MjoxM1rOH8NX6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo1MjoxM1rOH8NX6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5NTcyMw==", "bodyText": "Space missing after colon.", "url": "https://github.com/CMSgov/dpc-app/pull/1127#discussion_r532895723", "createdAt": "2020-11-30T20:52:13Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/controllers/concerns/csv_generator.rb", "diffHunk": "@@ -0,0 +1,28 @@\n+# frozen_string_literal: true\n+\n+module CsvGenerator\n+\n+  ATTRS = %w[id first_name last_name email requested_organization requested_organization_type\n+    address_1 address_2 city state zip agree_to_terms requested_num_providers created_at updated_at].freeze\n+\n+  # html escape these fields for XSS protection\n+  ESCAPED_ATTRS = %w[first_name last_name requested_organization address_1 address_2 city].freeze\n+\n+  def cvs_convert(users)\n+    CSV.generate(headers:true) do |csv|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4339f971e8d2f3f1c55376facac177c08fcdbcde"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzE0NTEwOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/user.rb", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTo0MjoyOVrOH9rSDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTo0MjoyOVrOH9rSDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzNDMxOQ==", "bodyText": "Method has too many lines. [20/15]", "url": "https://github.com/CMSgov/dpc-app/pull/1127#discussion_r534434319", "createdAt": "2020-12-02T19:42:29Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/models/user.rb", "diffHunk": "@@ -83,19 +83,28 @@ class User < ApplicationRecord\n   end\n \n   ATTRS = %w[id first_name last_name email requested_organization requested_organization_type\n-             address_1 address_2 city state zip agree_to_terms requested_num_providers created_at updated_at].freeze\n+             address_1 address_2 city state zip agree_to_terms requested_num_providers created_at\n+             updated_at tags].freeze\n \n   # html escape these fields for XSS protection\n-  ESCAPED_ATTRS = %w[first_name last_name requested_organization address_1 address_2 city].freeze\n+  ESCAPED_ATTRS = %w[first_name last_name requested_organization address_1 address_2 city tags].freeze\n \n-  def self.to_csv\n+  def self.to_csv(user_ids)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79f2ae3df482b7a5134e7189de6dcd94dd86a226"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzE0NTEyOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/user.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTo0MjoyOVrOH9rSEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTo0MjoyOVrOH9rSEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzNDMyMg==", "bodyText": "Use delete! instead of gsub!.", "url": "https://github.com/CMSgov/dpc-app/pull/1127#discussion_r534434322", "createdAt": "2020-12-02T19:42:29Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/models/user.rb", "diffHunk": "@@ -83,19 +83,28 @@ class User < ApplicationRecord\n   end\n \n   ATTRS = %w[id first_name last_name email requested_organization requested_organization_type\n-             address_1 address_2 city state zip agree_to_terms requested_num_providers created_at updated_at].freeze\n+             address_1 address_2 city state zip agree_to_terms requested_num_providers created_at\n+             updated_at tags].freeze\n \n   # html escape these fields for XSS protection\n-  ESCAPED_ATTRS = %w[first_name last_name requested_organization address_1 address_2 city].freeze\n+  ESCAPED_ATTRS = %w[first_name last_name requested_organization address_1 address_2 city tags].freeze\n \n-  def self.to_csv\n+  def self.to_csv(user_ids)\n+    users = User.find(user_ids)\n     CSV.generate(headers: true) do |csv|\n       csv << ATTRS\n-      all.each do |user|\n+      users.each do |user|\n         attributes = user.attributes\n+        attributes['tags'] = user.tags.map(&:name)\n         escaped_attributes = attributes.map do |k, v|\n           if ESCAPED_ATTRS.include? k\n             v = ERB::Util.html_escape(v)\n+\n+            if k == 'tags'\n+              v.gsub!('&quot;', '')\n+              v.gsub!('[', '')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79f2ae3df482b7a5134e7189de6dcd94dd86a226"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzE0NTE0OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/user.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTo0MjoyOVrOH9rSFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxOTo0MjoyOVrOH9rSFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQzNDMyNA==", "bodyText": "Use delete! instead of gsub!.", "url": "https://github.com/CMSgov/dpc-app/pull/1127#discussion_r534434324", "createdAt": "2020-12-02T19:42:29Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/models/user.rb", "diffHunk": "@@ -83,19 +83,28 @@ class User < ApplicationRecord\n   end\n \n   ATTRS = %w[id first_name last_name email requested_organization requested_organization_type\n-             address_1 address_2 city state zip agree_to_terms requested_num_providers created_at updated_at].freeze\n+             address_1 address_2 city state zip agree_to_terms requested_num_providers created_at\n+             updated_at tags].freeze\n \n   # html escape these fields for XSS protection\n-  ESCAPED_ATTRS = %w[first_name last_name requested_organization address_1 address_2 city].freeze\n+  ESCAPED_ATTRS = %w[first_name last_name requested_organization address_1 address_2 city tags].freeze\n \n-  def self.to_csv\n+  def self.to_csv(user_ids)\n+    users = User.find(user_ids)\n     CSV.generate(headers: true) do |csv|\n       csv << ATTRS\n-      all.each do |user|\n+      users.each do |user|\n         attributes = user.attributes\n+        attributes['tags'] = user.tags.map(&:name)\n         escaped_attributes = attributes.map do |k, v|\n           if ESCAPED_ATTRS.include? k\n             v = ERB::Util.html_escape(v)\n+\n+            if k == 'tags'\n+              v.gsub!('&quot;', '')\n+              v.gsub!('[', '')\n+              v.gsub!(']', '')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79f2ae3df482b7a5134e7189de6dcd94dd86a226"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 32, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}