{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNTExMDE0", "number": 992, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDowOToyMVrOEaOqhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTowOTo0MVrOEaqz7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1OTM4NjkyOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/organization_user_assignment.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMDowOToyMVrOHDhsVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwMTo0MDoyOFrOHDlRtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ1OTc5Ng==", "bodyText": "Use a guard clause instead of wrapping the code inside a conditional expression.", "url": "https://github.com/CMSgov/dpc-app/pull/992#discussion_r473459796", "createdAt": "2020-08-20T00:09:21Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/models/organization_user_assignment.rb", "diffHunk": "@@ -12,9 +14,13 @@ class OrganizationUserAssignment < ApplicationRecord\n   def send_organization_sandbox_email\n     return unless organization.prod_sbx? && organization.registered_organization.present?\n \n-    UserMailer\n-      .with(user: user, vendor: organization.health_it_vendor?)\n-      .organization_sandbox_email\n-      .deliver_later\n+    mail_throttle_store = RedisStore::MailThrottleStore.new\n+\n+    if mail_throttle_store.can_email? user.email", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a817ae8e16e8ce0fc76d6ef03c97b9f6ba0f5cf5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzUxODUxOA==", "bodyText": "Ironically, this yells at me if I use a guard clause because the code, even though its a single line execution, is spaced out on multiple lines.", "url": "https://github.com/CMSgov/dpc-app/pull/992#discussion_r473518518", "createdAt": "2020-08-20T01:40:28Z", "author": {"login": "SMLuthi"}, "path": "dpc-web/app/models/organization_user_assignment.rb", "diffHunk": "@@ -12,9 +14,13 @@ class OrganizationUserAssignment < ApplicationRecord\n   def send_organization_sandbox_email\n     return unless organization.prod_sbx? && organization.registered_organization.present?\n \n-    UserMailer\n-      .with(user: user, vendor: organization.health_it_vendor?)\n-      .organization_sandbox_email\n-      .deliver_later\n+    mail_throttle_store = RedisStore::MailThrottleStore.new\n+\n+    if mail_throttle_store.can_email? user.email", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ1OTc5Ng=="}, "originalCommit": {"oid": "a817ae8e16e8ce0fc76d6ef03c97b9f6ba0f5cf5"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjgzNjMwOnYy", "diffSide": "RIGHT", "path": "dpc-web/config/application.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNDoyMzozMVrOHEEB9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNTo0MDoyOVrOHEHsRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAyMjM5MA==", "bodyText": "Is this worth allowing an env var to override, in case we want to dial this back during an event?\nAlso, is 10 too high for a default?  Allowing for 1 email confirmation, 1 password reset, 1 email for future purposes, multiplied by a 2x \"oops\" factor still only gives 6 emails--and that sequence might take more than 5 minutes.", "url": "https://github.com/CMSgov/dpc-app/pull/992#discussion_r474022390", "createdAt": "2020-08-20T14:23:31Z", "author": {"login": "dhgreene"}, "path": "dpc-web/config/application.rb", "diffHunk": "@@ -53,5 +53,9 @@ class Application < Rails::Application\n     config.action_mailer.delivery_job = \"ActionMailer::MailDeliveryJob\"\n \n     config.to_prepare { Devise::Mailer.layout \"mailer\" }\n+\n+    # Mail throttling\n+    config.x.mail_throttle.limit = 10 # Limit to 10 emails before hard stop", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a817ae8e16e8ce0fc76d6ef03c97b9f6ba0f5cf5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA4MjM3NA==", "bodyText": "I've thought about this as well. The issue is that once the rails web app is running it will have loaded the config already. Meaning that even if we change the env var it wont be reflected in the running app... we'd have to either run another deploy (or perhaps just killing the current containers may do it). But it may just be worth moving this to an env var (with a default) to make it easier to manage.\nAs for the 10 limit email, that was suggested by the ticket but I agree it may be high. Maybe we should lower this to 5?\n@dhgreene", "url": "https://github.com/CMSgov/dpc-app/pull/992#discussion_r474082374", "createdAt": "2020-08-20T15:40:29Z", "author": {"login": "SMLuthi"}, "path": "dpc-web/config/application.rb", "diffHunk": "@@ -53,5 +53,9 @@ class Application < Rails::Application\n     config.action_mailer.delivery_job = \"ActionMailer::MailDeliveryJob\"\n \n     config.to_prepare { Devise::Mailer.layout \"mailer\" }\n+\n+    # Mail throttling\n+    config.x.mail_throttle.limit = 10 # Limit to 10 emails before hard stop", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAyMjM5MA=="}, "originalCommit": {"oid": "a817ae8e16e8ce0fc76d6ef03c97b9f6ba0f5cf5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2Mjg1NTQwOnYy", "diffSide": "RIGHT", "path": "dpc-web/Gemfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNDoyNzoyNlrOHEENqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNDoyNzoyNlrOHEENqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAyNTM4NA==", "bodyText": "Can you mention the new dependencies in the PR description, with some thoughts about selection criteria?", "url": "https://github.com/CMSgov/dpc-app/pull/992#discussion_r474025384", "createdAt": "2020-08-20T14:27:26Z", "author": {"login": "dhgreene"}, "path": "dpc-web/Gemfile", "diffHunk": "@@ -35,6 +35,7 @@ gem 'kaminari'\n gem 'active_model_serializers'\n gem 'macaroons'\n gem 'lograge'\n+gem 'redis-namespace'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a817ae8e16e8ce0fc76d6ef03c97b9f6ba0f5cf5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2Mzk5NjcyOnYy", "diffSide": "RIGHT", "path": "dpc-web/spec/features/confirmation/user_confirmation_email_spec.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTowOTowOFrOHEPcVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTowOTowOFrOHEPcVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwOTM2NA==", "bodyText": "Should this be setting it back to its original value, rather than 10?", "url": "https://github.com/CMSgov/dpc-app/pull/992#discussion_r474209364", "createdAt": "2020-08-20T19:09:08Z", "author": {"login": "dhgreene"}, "path": "dpc-web/spec/features/confirmation/user_confirmation_email_spec.rb", "diffHunk": "@@ -0,0 +1,78 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+\n+RSpec.feature 'user resends confirmation instructions' do\n+  let(:user) { create :user, confirmed_at: nil }\n+\n+  context 'when successful' do\n+    scenario 'user resends confirmation instructions' do\n+      visit new_user_confirmation_path\n+\n+      fill_in 'user_email', with: user.email\n+\n+      expect do\n+        find('input[data-test=\"submit\"]').click\n+        Sidekiq::Worker.drain_all\n+      end.to change(ActionMailer::Base.deliveries, :count).by(2)\n+\n+      last_delivery = ActionMailer::Base.deliveries.last\n+      email = last_delivery.body\n+\n+      expect(email).to include('Confirm my account')\n+\n+      confirmation_link = last_delivery.body.raw_source.match(%r{href=\"http:\\/\\/localhost:3000(?<path>.+?)\">})[:path]\n+\n+      visit confirmation_link\n+\n+      expect(page.body).to include(\"Welcome, #{user.first_name}!\")\n+    end\n+  end\n+\n+  context 'when incorrect email' do\n+    scenario 'user does not send confirmation instructions' do\n+      visit new_user_confirmation_path\n+\n+      fill_in 'user_email', with: 'not_a_real@email.com'\n+\n+      expect do\n+        find('input[data-test=\"submit\"]').click\n+        Sidekiq::Worker.drain_all\n+      end.to change(ActionMailer::Base.deliveries, :count).by(0)\n+\n+      expect(page.body).to include('Resend confirmation instructions')\n+    end\n+  end\n+\n+  context 'with too many emails' do\n+    before do\n+      Rails.configuration.x.mail_throttle.limit = 1\n+    end\n+\n+    after do\n+      Rails.configuration.x.mail_throttle.limit = 10", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbadf20d7004343cebeb65e3ff46bcd518caf2ca"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2Mzk5NzkxOnYy", "diffSide": "RIGHT", "path": "dpc-web/spec/lib/redis_store/mail_throttle_store_spec.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTowOToyOVrOHEPdCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTowOToyOVrOHEPdCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwOTU0NA==", "bodyText": ". . . same as above", "url": "https://github.com/CMSgov/dpc-app/pull/992#discussion_r474209544", "createdAt": "2020-08-20T19:09:29Z", "author": {"login": "dhgreene"}, "path": "dpc-web/spec/lib/redis_store/mail_throttle_store_spec.rb", "diffHunk": "@@ -0,0 +1,54 @@\n+# frozen_string_literal: true\n+\n+require 'rails_helper'\n+require './lib/redis_store/mail_throttle_store'\n+\n+describe RedisStore::MailThrottleStore do\n+  let(:mail_throttler) { described_class.new }\n+  let(:limit) { 2 }\n+  let(:expiration) { 5 }\n+\n+  before do\n+    Rails.configuration.x.mail_throttle.limit = limit\n+    Rails.configuration.x.mail_throttle.expiration = expiration\n+  end\n+\n+  after do\n+    Rails.configuration.x.mail_throttle.limit = 10", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbadf20d7004343cebeb65e3ff46bcd518caf2ca"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2Mzk5ODUzOnYy", "diffSide": "RIGHT", "path": "dpc-web/spec/models/organization_user_assignment_spec.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTowOTo0MVrOHEPdaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxOTowOTo0MVrOHEPdaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwOTY0MQ==", "bodyText": ". . . and again", "url": "https://github.com/CMSgov/dpc-app/pull/992#discussion_r474209641", "createdAt": "2020-08-20T19:09:41Z", "author": {"login": "dhgreene"}, "path": "dpc-web/spec/models/organization_user_assignment_spec.rb", "diffHunk": "@@ -36,6 +37,33 @@\n \n         expect(UserMailer).not_to have_received(:with)\n       end\n+\n+      context 'when mail rate limit has been reached' do\n+        before do\n+          Rails.configuration.x.mail_throttle.limit = 0\n+        end\n+\n+        after do\n+          Rails.configuration.x.mail_throttle.limit = 10", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbadf20d7004343cebeb65e3ff46bcd518caf2ca"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 64, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}