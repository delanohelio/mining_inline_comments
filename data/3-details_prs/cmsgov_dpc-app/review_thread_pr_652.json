{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMzM2ODYz", "number": 652, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo1OTo1NFrODjIqDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOTo1NjoyN1rODlkDvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTY4NTg5OnYy", "diffSide": "RIGHT", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/DPCAttributionConfiguration.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNTo1OTo1NFrOFuxgpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxOToyMDoxMlrOFu4vxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4OTk4OQ==", "bodyText": "Can we put a javax validation on this property? Add the null check at startup rather than on each resource call?", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384589989", "createdAt": "2020-02-26T15:59:54Z", "author": {"login": "nickrobison-usds"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/DPCAttributionConfiguration.java", "diffHunk": "@@ -43,6 +43,8 @@\n     @JsonProperty(\"swagger\")\n     private SwaggerBundleConfiguration swaggerBundleConfiguration;\n \n+    private Integer providerLimit;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "196e392c9de781b1a48dbf2daba0bce45a3a0075"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY0NjcyNw==", "bodyText": "Wouldn\u2019t that make it required to always define it in the configuration file?  I thought in some environments we didn\u2019t want to have a limit.", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384646727", "createdAt": "2020-02-26T17:26:16Z", "author": {"login": "MrBilnon"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/DPCAttributionConfiguration.java", "diffHunk": "@@ -43,6 +43,8 @@\n     @JsonProperty(\"swagger\")\n     private SwaggerBundleConfiguration swaggerBundleConfiguration;\n \n+    private Integer providerLimit;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4OTk4OQ=="}, "originalCommit": {"oid": "196e392c9de781b1a48dbf2daba0bce45a3a0075"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDcwODU0OQ==", "bodyText": "Ah yes, that makes sense. Ignore me!", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384708549", "createdAt": "2020-02-26T19:20:12Z", "author": {"login": "nickrobison-usds"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/DPCAttributionConfiguration.java", "diffHunk": "@@ -43,6 +43,8 @@\n     @JsonProperty(\"swagger\")\n     private SwaggerBundleConfiguration swaggerBundleConfiguration;\n \n+    private Integer providerLimit;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDU4OTk4OQ=="}, "originalCommit": {"oid": "196e392c9de781b1a48dbf2daba0bce45a3a0075"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTk4ODUyOnYy", "diffSide": "RIGHT", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNzoxMjoyMFrOFu0eGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNTo1NjoyNVrOFwk55w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzODQ4OQ==", "bodyText": "I'm thinking more about the 304 return code, I'm wondering if it would more sense to return a 429 or a 422 error, not sure 304 is very informative. Thoughts @DeirdreHolub @EmBh?", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384638489", "createdAt": "2020-02-26T17:12:20Z", "author": {"login": "nickrobison-usds"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "diffHunk": "@@ -70,20 +73,30 @@\n     @ApiOperation(value = \"Register provider\", notes = \"FHIR endpoint to register a provider with the system.\" +\n             \"<p>Each provider must have a metadata Tag with the responsible Organization ID included.\" +\n             \"If not, we'll reject it.\" +\n-            \"<p> If a provider is already registered with the Organization, an errorr is thrown.\")\n+            \"<p> If a provider is already registered with the Organization, an error is thrown.\" +\n+            \"<p> If a provider has already registered providers past the provider limit, then return 304\")\n     @ApiResponses(value = {\n             @ApiResponse(code = 201, message = \"New resource was created\"),\n+            @ApiResponse(code = 304, message = \"Resource was not created\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "196e392c9de781b1a48dbf2daba0bce45a3a0075"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY2NzY2NQ==", "bodyText": "Personally, I think a 429 should only be used if you are talking about rate limits, not sure if this would qualify as a rate limiting procedure. I\u2019d be more inclined towards 422 if 304 is not acceptable.", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384667665", "createdAt": "2020-02-26T18:04:20Z", "author": {"login": "MrBilnon"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "diffHunk": "@@ -70,20 +73,30 @@\n     @ApiOperation(value = \"Register provider\", notes = \"FHIR endpoint to register a provider with the system.\" +\n             \"<p>Each provider must have a metadata Tag with the responsible Organization ID included.\" +\n             \"If not, we'll reject it.\" +\n-            \"<p> If a provider is already registered with the Organization, an errorr is thrown.\")\n+            \"<p> If a provider is already registered with the Organization, an error is thrown.\" +\n+            \"<p> If a provider has already registered providers past the provider limit, then return 304\")\n     @ApiResponses(value = {\n             @ApiResponse(code = 201, message = \"New resource was created\"),\n+            @ApiResponse(code = 304, message = \"Resource was not created\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzODQ4OQ=="}, "originalCommit": {"oid": "196e392c9de781b1a48dbf2daba0bce45a3a0075"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgxMjE3MQ==", "bodyText": "Ok, I think 422 would work. Thoughts, @EmBh @DeirdreHolub", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r385812171", "createdAt": "2020-02-28T17:03:09Z", "author": {"login": "nickrobison-usds"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "diffHunk": "@@ -70,20 +73,30 @@\n     @ApiOperation(value = \"Register provider\", notes = \"FHIR endpoint to register a provider with the system.\" +\n             \"<p>Each provider must have a metadata Tag with the responsible Organization ID included.\" +\n             \"If not, we'll reject it.\" +\n-            \"<p> If a provider is already registered with the Organization, an errorr is thrown.\")\n+            \"<p> If a provider is already registered with the Organization, an error is thrown.\" +\n+            \"<p> If a provider has already registered providers past the provider limit, then return 304\")\n     @ApiResponses(value = {\n             @ApiResponse(code = 201, message = \"New resource was created\"),\n+            @ApiResponse(code = 304, message = \"Resource was not created\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzODQ4OQ=="}, "originalCommit": {"oid": "196e392c9de781b1a48dbf2daba0bce45a3a0075"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQ4MDYxNQ==", "bodyText": "Agree on using 422.", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r386480615", "createdAt": "2020-03-02T15:56:25Z", "author": {"login": "em1"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "diffHunk": "@@ -70,20 +73,30 @@\n     @ApiOperation(value = \"Register provider\", notes = \"FHIR endpoint to register a provider with the system.\" +\n             \"<p>Each provider must have a metadata Tag with the responsible Organization ID included.\" +\n             \"If not, we'll reject it.\" +\n-            \"<p> If a provider is already registered with the Organization, an errorr is thrown.\")\n+            \"<p> If a provider is already registered with the Organization, an error is thrown.\" +\n+            \"<p> If a provider has already registered providers past the provider limit, then return 304\")\n     @ApiResponses(value = {\n             @ApiResponse(code = 201, message = \"New resource was created\"),\n+            @ApiResponse(code = 304, message = \"Resource was not created\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzODQ4OQ=="}, "originalCommit": {"oid": "196e392c9de781b1a48dbf2daba0bce45a3a0075"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTk5MjI4OnYy", "diffSide": "RIGHT", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNzoxMzoxMlrOFu0gPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNzoyNjo1NVrOFu0_4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzOTAzNg==", "bodyText": "This list could get really large in the future, I wonder if it would make sense to add a new method to the DAO to return a count, rather than all the resources themselves?", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384639036", "createdAt": "2020-02-26T17:13:12Z", "author": {"login": "nickrobison-usds"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "diffHunk": "@@ -70,20 +73,30 @@\n     @ApiOperation(value = \"Register provider\", notes = \"FHIR endpoint to register a provider with the system.\" +\n             \"<p>Each provider must have a metadata Tag with the responsible Organization ID included.\" +\n             \"If not, we'll reject it.\" +\n-            \"<p> If a provider is already registered with the Organization, an errorr is thrown.\")\n+            \"<p> If a provider is already registered with the Organization, an error is thrown.\" +\n+            \"<p> If a provider has already registered providers past the provider limit, then return 304\")\n     @ApiResponses(value = {\n             @ApiResponse(code = 201, message = \"New resource was created\"),\n+            @ApiResponse(code = 304, message = \"Resource was not created\")\n     })\n     public Response submitProvider(Practitioner provider) {\n \n         final ProviderEntity entity = this.converter.fromFHIR(ProviderEntity.class, provider);\n-        final List<ProviderEntity> existingProviders = this.dao.getProviders(null, entity.getProviderNPI(), entity.getOrganization().getId());\n-        if (existingProviders.isEmpty()) {\n+        final List<ProviderEntity> existingProvidersByOrganization = this.dao.getProviders(null, null, entity.getOrganization().getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "196e392c9de781b1a48dbf2daba0bce45a3a0075"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY0NzEzOA==", "bodyText": "Yea that makes sense", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384647138", "createdAt": "2020-02-26T17:26:55Z", "author": {"login": "MrBilnon"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "diffHunk": "@@ -70,20 +73,30 @@\n     @ApiOperation(value = \"Register provider\", notes = \"FHIR endpoint to register a provider with the system.\" +\n             \"<p>Each provider must have a metadata Tag with the responsible Organization ID included.\" +\n             \"If not, we'll reject it.\" +\n-            \"<p> If a provider is already registered with the Organization, an errorr is thrown.\")\n+            \"<p> If a provider is already registered with the Organization, an error is thrown.\" +\n+            \"<p> If a provider has already registered providers past the provider limit, then return 304\")\n     @ApiResponses(value = {\n             @ApiResponse(code = 201, message = \"New resource was created\"),\n+            @ApiResponse(code = 304, message = \"Resource was not created\")\n     })\n     public Response submitProvider(Practitioner provider) {\n \n         final ProviderEntity entity = this.converter.fromFHIR(ProviderEntity.class, provider);\n-        final List<ProviderEntity> existingProviders = this.dao.getProviders(null, entity.getProviderNPI(), entity.getOrganization().getId());\n-        if (existingProviders.isEmpty()) {\n+        final List<ProviderEntity> existingProvidersByOrganization = this.dao.getProviders(null, null, entity.getOrganization().getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzOTAzNg=="}, "originalCommit": {"oid": "196e392c9de781b1a48dbf2daba0bce45a3a0075"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MTk5Mzc1OnYy", "diffSide": "RIGHT", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNzoxMzozM1rOFu0hFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxNzoxMzozM1rOFu0hFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDYzOTI1NQ==", "bodyText": "If we add the NonNull annotation to the config object, we can avoid the null check here.", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r384639255", "createdAt": "2020-02-26T17:13:33Z", "author": {"login": "nickrobison-usds"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "diffHunk": "@@ -70,20 +73,30 @@\n     @ApiOperation(value = \"Register provider\", notes = \"FHIR endpoint to register a provider with the system.\" +\n             \"<p>Each provider must have a metadata Tag with the responsible Organization ID included.\" +\n             \"If not, we'll reject it.\" +\n-            \"<p> If a provider is already registered with the Organization, an errorr is thrown.\")\n+            \"<p> If a provider is already registered with the Organization, an error is thrown.\" +\n+            \"<p> If a provider has already registered providers past the provider limit, then return 304\")\n     @ApiResponses(value = {\n             @ApiResponse(code = 201, message = \"New resource was created\"),\n+            @ApiResponse(code = 304, message = \"Resource was not created\")\n     })\n     public Response submitProvider(Practitioner provider) {\n \n         final ProviderEntity entity = this.converter.fromFHIR(ProviderEntity.class, provider);\n-        final List<ProviderEntity> existingProviders = this.dao.getProviders(null, entity.getProviderNPI(), entity.getOrganization().getId());\n-        if (existingProviders.isEmpty()) {\n+        final List<ProviderEntity> existingProvidersByOrganization = this.dao.getProviders(null, null, entity.getOrganization().getId());\n+        final List<ProviderEntity> existingProvidersByNPI = existingProvidersByOrganization.stream()\n+                .filter(providerEntity -> providerEntity.getProviderNPI().equals(entity.getProviderNPI()))\n+                .collect(Collectors.toList());\n+\n+        if (providerLimit != null && existingProvidersByOrganization.size() >= providerLimit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "196e392c9de781b1a48dbf2daba0bce45a3a0075"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzE0Njg0OnYy", "diffSide": "RIGHT", "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOTo1NjoyN1rOFyh6pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxOTo1NjoyN1rOFyh6pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODUyODgwNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"<p> If a provider has already registered providers past the provider limit, then an error is thrown\")\n          \n          \n            \n                        \"<p> If an organization has already reached the provider limit, then an error is thrown\")\n          \n      \n    \n    \n  \n\nThis might be a little clearer, since the number should never exceed the limit.", "url": "https://github.com/CMSgov/dpc-app/pull/652#discussion_r388528806", "createdAt": "2020-03-05T19:56:27Z", "author": {"login": "em1"}, "path": "dpc-attribution/src/main/java/gov/cms/dpc/attribution/resources/v1/PractitionerResource.java", "diffHunk": "@@ -70,20 +73,28 @@\n     @ApiOperation(value = \"Register provider\", notes = \"FHIR endpoint to register a provider with the system.\" +\n             \"<p>Each provider must have a metadata Tag with the responsible Organization ID included.\" +\n             \"If not, we'll reject it.\" +\n-            \"<p> If a provider is already registered with the Organization, an errorr is thrown.\")\n+            \"<p> If a provider is already registered with the Organization, an error is thrown.\" +\n+            \"<p> If a provider has already registered providers past the provider limit, then an error is thrown\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e98811935087e1e870e48496b915782885d96121"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4902, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}