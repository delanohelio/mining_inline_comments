{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MzYxNzkx", "number": 974, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMzoyODowNFrOEcEZGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMzo0MTozMVrOEcExCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODY3NTQ3OnYy", "diffSide": "RIGHT", "path": "dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/DataResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMzoyODowNFrOHGYDUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMzo0Nzo1OVrOHGY7yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ0NzU3MA==", "bodyText": "Does this mean that we will NOT return a 410 on a job if the batches are not all completed, even if expired? That sounds fine because all batches should be completed within 24 hours, but I just wanted to ask the question to be sure that there isn't a missed edge case here.", "url": "https://github.com/CMSgov/dpc-app/pull/974#discussion_r476447570", "createdAt": "2020-08-25T13:28:04Z", "author": {"login": "jonfulk"}, "path": "dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/DataResource.java", "diffHunk": "@@ -130,6 +139,17 @@ public Response downloadExportFile(@ApiParam(hidden = true) @Auth OrganizationPr\n \n         final FileManager.FilePointer filePointer = this.manager.getFile(organizationPrincipal.getID(), fileID);\n \n+        // If job is expired, the files should no longer be accessible\n+        List<JobQueueBatch> batches = queue.getJobBatches(filePointer.getJobID());\n+        Set<JobStatus> jobStatusSet = batches.stream().map(JobQueueBatch::getStatus).collect(Collectors.toSet());\n+        if (jobStatusSet.size() == 1 && jobStatusSet.contains(JobStatus.COMPLETED)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ2MjAyNQ==", "bodyText": "Great question. The job isn't considered expired until 24 hours after all of its batches are completed.", "url": "https://github.com/CMSgov/dpc-app/pull/974#discussion_r476462025", "createdAt": "2020-08-25T13:47:59Z", "author": {"login": "em1"}, "path": "dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/DataResource.java", "diffHunk": "@@ -130,6 +139,17 @@ public Response downloadExportFile(@ApiParam(hidden = true) @Auth OrganizationPr\n \n         final FileManager.FilePointer filePointer = this.manager.getFile(organizationPrincipal.getID(), fileID);\n \n+        // If job is expired, the files should no longer be accessible\n+        List<JobQueueBatch> batches = queue.getJobBatches(filePointer.getJobID());\n+        Set<JobStatus> jobStatusSet = batches.stream().map(JobQueueBatch::getStatus).collect(Collectors.toSet());\n+        if (jobStatusSet.size() == 1 && jobStatusSet.contains(JobStatus.COMPLETED)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ0NzU3MA=="}, "originalCommit": null, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3ODczNjc1OnYy", "diffSide": "RIGHT", "path": "dpc-api/src/test/java/gov/cms/dpc/api/resources/v1/JobResourceTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxMzo0MTozMVrOHGYpKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNDowNTowNFrOHGZuJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ1NzI1OA==", "bodyText": "why do you need both of these assertions? if the second is true, the first is as well.", "url": "https://github.com/CMSgov/dpc-app/pull/974#discussion_r476457258", "createdAt": "2020-08-25T13:41:31Z", "author": {"login": "jonfulk"}, "path": "dpc-api/src/test/java/gov/cms/dpc/api/resources/v1/JobResourceTest.java", "diffHunk": "@@ -129,6 +132,10 @@ public void testSuccessfulJob() {\n         final Response response = resource.checkJobStatus(organizationPrincipal, jobID.toString());\n         assertAll(() -> assertEquals(HttpStatus.OK_200, response.getStatus()));\n \n+        var expires = ZonedDateTime.parse(response.getHeaderString(\"Expires\"), JobResource.HTTP_DATE_FORMAT);\n+        assertAll(() -> expires.isAfter(ZonedDateTime.now().plusHours(23)),\n+                () -> expires.isAfter(ZonedDateTime.now().plusHours(25)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ2Mjc2OA==", "bodyText": "You may have caught a bug; that second one should be .isBefore()! Taking a closer look.", "url": "https://github.com/CMSgov/dpc-app/pull/974#discussion_r476462768", "createdAt": "2020-08-25T13:48:58Z", "author": {"login": "em1"}, "path": "dpc-api/src/test/java/gov/cms/dpc/api/resources/v1/JobResourceTest.java", "diffHunk": "@@ -129,6 +132,10 @@ public void testSuccessfulJob() {\n         final Response response = resource.checkJobStatus(organizationPrincipal, jobID.toString());\n         assertAll(() -> assertEquals(HttpStatus.OK_200, response.getStatus()));\n \n+        var expires = ZonedDateTime.parse(response.getHeaderString(\"Expires\"), JobResource.HTTP_DATE_FORMAT);\n+        assertAll(() -> expires.isAfter(ZonedDateTime.now().plusHours(23)),\n+                () -> expires.isAfter(ZonedDateTime.now().plusHours(25)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ1NzI1OA=="}, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ3NDkxNg==", "bodyText": "Fixed! Thanks for catching this.", "url": "https://github.com/CMSgov/dpc-app/pull/974#discussion_r476474916", "createdAt": "2020-08-25T14:05:04Z", "author": {"login": "em1"}, "path": "dpc-api/src/test/java/gov/cms/dpc/api/resources/v1/JobResourceTest.java", "diffHunk": "@@ -129,6 +132,10 @@ public void testSuccessfulJob() {\n         final Response response = resource.checkJobStatus(organizationPrincipal, jobID.toString());\n         assertAll(() -> assertEquals(HttpStatus.OK_200, response.getStatus()));\n \n+        var expires = ZonedDateTime.parse(response.getHeaderString(\"Expires\"), JobResource.HTTP_DATE_FORMAT);\n+        assertAll(() -> expires.isAfter(ZonedDateTime.now().plusHours(23)),\n+                () -> expires.isAfter(ZonedDateTime.now().plusHours(25)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ1NzI1OA=="}, "originalCommit": null, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 150, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}