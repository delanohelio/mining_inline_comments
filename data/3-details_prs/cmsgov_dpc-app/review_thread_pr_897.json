{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTIxMzcw", "number": 897, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzowMToxOFrOEMrsNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDo1MDo1MVrOEMs_OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzM0MTk3OnYy", "diffSide": "RIGHT", "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/AggregationEngine.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMzowMToxOFrOGu8BhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTowODoyOFrOGvVkMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3MTEwOQ==", "bodyText": "Could you include some example log output in the PR description?  I'd like to be certain all these log statements can be correlated.", "url": "https://github.com/CMSgov/dpc-app/pull/897#discussion_r451871109", "createdAt": "2020-07-08T23:01:18Z", "author": {"login": "dhgreene"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/AggregationEngine.java", "diffHunk": "@@ -159,19 +163,21 @@ protected void processJobBatch(JobQueueBatch job) {\n                 nextPatientID = processPatient(job, patientId);\n             }\n \n+            //Clear last patient seen from MDC\n+            MDC.remove(MDCConstants.PATIENT_ID);\n             // Finish processing the batch\n             if (this.isRunning()) {\n-                logger.info(\"COMPLETED job {} batch {}\", job.getJobID(), job.getBatchID());\n+                logger.info(\"COMPLETED job\");\n                 // Calculate metadata for the file (length and checksum)\n                 calculateFileMetadata(job);\n                 this.queue.completeBatch(job, aggregatorID);\n             } else {\n-                logger.info(\"PAUSED job {} batch {}\", job.getJobID(), job.getBatchID());\n+                logger.info(\"PAUSED job\");\n                 this.queue.pauseBatch(job, aggregatorID);\n             }\n         } catch (Exception error) {\n             try {\n-                logger.error(\"FAILED job {} batch {}\", job.getJobID(), job.getBatchID(), error);\n+                logger.error(\"FAILED job\", error);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "539e7ab69c26846201112275e96df2cbd5d75a95"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI4OTU4NA==", "bodyText": "Could you include some example log output in the PR description? I'd like to be certain all these log statements can be correlated.\n\ndone", "url": "https://github.com/CMSgov/dpc-app/pull/897#discussion_r452289584", "createdAt": "2020-07-09T15:08:28Z", "author": {"login": "MrBilnon"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/AggregationEngine.java", "diffHunk": "@@ -159,19 +163,21 @@ protected void processJobBatch(JobQueueBatch job) {\n                 nextPatientID = processPatient(job, patientId);\n             }\n \n+            //Clear last patient seen from MDC\n+            MDC.remove(MDCConstants.PATIENT_ID);\n             // Finish processing the batch\n             if (this.isRunning()) {\n-                logger.info(\"COMPLETED job {} batch {}\", job.getJobID(), job.getBatchID());\n+                logger.info(\"COMPLETED job\");\n                 // Calculate metadata for the file (length and checksum)\n                 calculateFileMetadata(job);\n                 this.queue.completeBatch(job, aggregatorID);\n             } else {\n-                logger.info(\"PAUSED job {} batch {}\", job.getJobID(), job.getBatchID());\n+                logger.info(\"PAUSED job\");\n                 this.queue.pauseBatch(job, aggregatorID);\n             }\n         } catch (Exception error) {\n             try {\n-                logger.error(\"FAILED job {} batch {}\", job.getJobID(), job.getBatchID(), error);\n+                logger.error(\"FAILED job\", error);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg3MTEwOQ=="}, "originalCommit": {"oid": "539e7ab69c26846201112275e96df2cbd5d75a95"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzU1NDQ5OnYy", "diffSide": "RIGHT", "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDo1MDo1MVrOGu99CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNTowODoxMlrOGvVjfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwMjcyOA==", "bodyText": "Call \"billingPeriod.isPresent()\" before accessing the value.", "url": "https://github.com/CMSgov/dpc-app/pull/897#discussion_r451902728", "createdAt": "2020-07-09T00:50:51Z", "author": {"login": "codeclimate"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "diffHunk": "@@ -57,12 +61,24 @@ public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID or\n \n         Set<String> eobProviderNPIs = extractPractionerNPIs(explanationOfBenefit);\n \n-        return billingPeriod.isPresent()\n-                && providerID.isPresent()\n-                && organizationID.isPresent() && eobOrganizationID.isPresent()\n-                && getMonthsDifference(billingPeriod.get(), operationsConfig.getLookBackDate()) < withinMonth\n-                && eobProviderNPIs.contains(providerID.get())\n-                && organizationID.get().equals(eobOrganizationID.get());\n+        if (billingPeriod.isEmpty() || providerID.isEmpty() || organizationID.isEmpty() || eobOrganizationID.isEmpty()) {\n+            LOGGER.info(\"eob BillingPeriod or job providerID or job organizationID or eob OrganizationID are null\");\n+            return false;\n+        }\n+\n+        long lookBackMonthsDifference = getMonthsDifference(billingPeriod.get(), operationsConfig.getLookBackDate());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "539e7ab69c26846201112275e96df2cbd5d75a95"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI4OTQwNw==", "bodyText": "Checking the present/absence of value here: https://github.com/CMSgov/dpc-app/pull/897/files/539e7ab69c26846201112275e96df2cbd5d75a95#diff-928f42d0deeb5304fb975977200c88e3R64\nNot sure what code climate is complaining about..", "url": "https://github.com/CMSgov/dpc-app/pull/897#discussion_r452289407", "createdAt": "2020-07-09T15:08:12Z", "author": {"login": "MrBilnon"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/service/LookBackServiceImpl.java", "diffHunk": "@@ -57,12 +61,24 @@ public boolean hasClaimWithin(ExplanationOfBenefit explanationOfBenefit, UUID or\n \n         Set<String> eobProviderNPIs = extractPractionerNPIs(explanationOfBenefit);\n \n-        return billingPeriod.isPresent()\n-                && providerID.isPresent()\n-                && organizationID.isPresent() && eobOrganizationID.isPresent()\n-                && getMonthsDifference(billingPeriod.get(), operationsConfig.getLookBackDate()) < withinMonth\n-                && eobProviderNPIs.contains(providerID.get())\n-                && organizationID.get().equals(eobOrganizationID.get());\n+        if (billingPeriod.isEmpty() || providerID.isEmpty() || organizationID.isEmpty() || eobOrganizationID.isEmpty()) {\n+            LOGGER.info(\"eob BillingPeriod or job providerID or job organizationID or eob OrganizationID are null\");\n+            return false;\n+        }\n+\n+        long lookBackMonthsDifference = getMonthsDifference(billingPeriod.get(), operationsConfig.getLookBackDate());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwMjcyOA=="}, "originalCommit": {"oid": "539e7ab69c26846201112275e96df2cbd5d75a95"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 101, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}