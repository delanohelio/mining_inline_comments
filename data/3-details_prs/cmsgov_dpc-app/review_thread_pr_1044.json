{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NTkwNjYz", "number": 1044, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTozOTo1MlrOEjyR_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMjowMDowOVrOEkQWWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1OTU5NDIzOnYy", "diffSide": "LEFT", "path": "dpc-api/src/main/java/gov/cms/dpc/api/models/TokenResponse.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTozOTo1MlrOHSVnvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMTozOTo1MlrOHSVnvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODk5MDY1Mw==", "bodyText": "This file had been abandoned, deleted it since it was not being used.", "url": "https://github.com/CMSgov/dpc-app/pull/1044#discussion_r488990653", "createdAt": "2020-09-15T21:39:52Z", "author": {"login": "MrMorie"}, "path": "dpc-api/src/main/java/gov/cms/dpc/api/models/TokenResponse.java", "diffHunk": "@@ -1,83 +0,0 @@\n-package gov.cms.dpc.api.models;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3b4f7179e4190be5a0466f286a0f918fd0f5398"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDAzMTcwOnYy", "diffSide": "RIGHT", "path": "dpc-api/src/main/java/gov/cms/dpc/api/models/TokenDto.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMzoxOTozNVrOHSaXDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQyMzoxOTozNVrOHSaXDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTA2ODMwMw==", "bodyText": "Method equals has a Cognitive Complexity of 10 (exceeds 9 allowed). Consider refactoring.", "url": "https://github.com/CMSgov/dpc-app/pull/1044#discussion_r489068303", "createdAt": "2020-09-15T23:19:35Z", "author": {"login": "codeclimate"}, "path": "dpc-api/src/main/java/gov/cms/dpc/api/models/TokenDto.java", "diffHunk": "@@ -0,0 +1,117 @@\n+package gov.cms.dpc.api.models;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import gov.cms.dpc.common.annotations.NoHtml;\n+import gov.cms.dpc.common.converters.jackson.OffsetDateTimeToStringConverter;\n+import gov.cms.dpc.common.converters.jackson.StringToOffsetDateTimeConverter;\n+\n+import java.io.Serializable;\n+import java.time.OffsetDateTime;\n+import java.util.Objects;\n+import java.util.UUID;\n+\n+\n+public class TokenDto implements Serializable {\n+\n+    private static final long serialVersionUID = 4464861101748469238L;\n+\n+    private String id;\n+\n+    private String tokenType;\n+\n+    @JsonIgnore\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    private UUID organizationID;\n+\n+    @NoHtml\n+    private String label;\n+\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    private String token;\n+\n+    @JsonSerialize(converter = OffsetDateTimeToStringConverter.class)\n+    @JsonDeserialize(converter = StringToOffsetDateTimeConverter.class)\n+    private OffsetDateTime createdAt;\n+\n+    @JsonSerialize(converter = OffsetDateTimeToStringConverter.class)\n+    @JsonDeserialize(converter = StringToOffsetDateTimeConverter.class)\n+    private OffsetDateTime expiresAt;\n+\n+    public TokenDto() {\n+        // Jackson required\n+    }\n+\n+    public String getId() {\n+        return id;\n+    }\n+\n+    public void setId(String id) {\n+        this.id = id;\n+    }\n+\n+    public String getTokenType() { return tokenType; }\n+\n+    public void setTokenType(String tokenType) { this.tokenType = tokenType; }\n+\n+    public UUID getOrganizationID() {\n+        return organizationID;\n+    }\n+\n+    public void setOrganizationID(UUID organizationID) {\n+        this.organizationID = organizationID;\n+    }\n+\n+    public String getLabel() {\n+        return label;\n+    }\n+\n+    public void setLabel(String label) {\n+        this.label = label;\n+    }\n+\n+    public String getToken() {\n+        return token;\n+    }\n+\n+    public void setToken(String token) {\n+        this.token = token;\n+    }\n+\n+    public OffsetDateTime getCreatedAt() {\n+        return createdAt;\n+    }\n+\n+    public void setCreatedAt(OffsetDateTime createdAt) {\n+        this.createdAt = createdAt;\n+    }\n+\n+    public OffsetDateTime getExpiresAt() {\n+        return expiresAt;\n+    }\n+\n+    public void setExpiresAt(OffsetDateTime expiresAt) {\n+        this.expiresAt = expiresAt;\n+    }\n+\n+    @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61c405cc2f43224b876b7a9975559d5bcdc9333b"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NDUyMDU5OnYy", "diffSide": "RIGHT", "path": "dpc-common/src/main/java/gov/cms/dpc/common/converters/jackson/MultiFormatOffsetDateTimeDeserializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMjowMDowOVrOHTFt1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQyMjowMDowOVrOHTFt1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTc3ODY0Ng==", "bodyText": "Either remove or fill this block of code.", "url": "https://github.com/CMSgov/dpc-app/pull/1044#discussion_r489778646", "createdAt": "2020-09-16T22:00:09Z", "author": {"login": "codeclimate"}, "path": "dpc-common/src/main/java/gov/cms/dpc/common/converters/jackson/MultiFormatOffsetDateTimeDeserializer.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package gov.cms.dpc.common.converters.jackson;\n+\n+import com.fasterxml.jackson.databind.util.StdConverter;\n+import gov.cms.dpc.fhir.FHIRFormatters;\n+\n+import javax.ws.rs.WebApplicationException;\n+import javax.ws.rs.core.Response;\n+import java.time.OffsetDateTime;\n+import java.time.format.DateTimeFormatter;\n+import java.time.format.DateTimeParseException;\n+\n+/**\n+ * Deserialize from the format expected in the FHIR spec. For details see https://hl7.org/fhir/2018May/datatypes.html#instant\n+ */\n+public class MultiFormatOffsetDateTimeDeserializer extends StdConverter<String, OffsetDateTime> {\n+\n+    private static final DateTimeFormatter[] supportedFormats = {FHIRFormatters.INSTANT_FORMATTER, DateTimeFormatter.ISO_OFFSET_DATE_TIME};\n+\n+    @Override\n+    public OffsetDateTime convert(String s) {\n+\n+        for(DateTimeFormatter formatter:supportedFormats){\n+            try {\n+                return OffsetDateTime.parse(s, formatter);\n+            }catch (DateTimeParseException e){}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6846f61ffa66d421a48b261a4eca5feb30044667"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 85, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}