{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NjA2ODYx", "number": 634, "title": "DPC-34 since support", "bodyText": "Why\nAdd support to the FHIR's Bulk Export _since parameter.\nWhat Changed\nThe export chain of components and structures had to be extended to ensure all batches use the same upper and lower bound. Consistency of these values is essential to ensure consecutive jobs do not have missing or duplicate resources. However, the overall structure of the export job has not changed. Batching and restarting a job remains the same.\n\nThe export API fetches the BFD's transactionTime to use as the upper bound of\nJobBatch added since and transactionTime fields\nThe AggregatorEngine and ResourceFetcher accept the new values\nThe BBClient methods have a lastUpdated parameter added\n\nOne consequence of this that API now uses the BBClient module directly, whereas only the Aggregator used this module before. Again, this choice was necessary to keep transactionTime consistent between batches. About half of the file changes were made to hook this module up.\nChoices Made\nI've added JobCompletionRecord extensions for job start and complete time. The FHIR community has encouraged experimentation with extensions.\nTickets closed:\nDPC-34:\nFuture Work\nCareJourney and others have pointed out that the _since parameter solves a major issue with data size, but creates a problem for new patients that are added to a roster. Future work should work on this issue.\nChecklist\n_since has been added to our Swagger and FHIR documentation.\n\n All tests are passing via make ci-app (app change) and make ci-web (website change)\n Swagger documentation has been updated\n FHIR documentation has been updated\n Any required dpc-ops changes have a PR submitted and mentioned in this ticket\n Any manual migration steps are documented, scripts written (where applicable), and tested\n Before merging, any required dpc-ops changes have been approved and merged into master of the dpc-ops repo", "createdAt": "2020-02-22T16:33:09Z", "url": "https://github.com/CMSgov/dpc-app/pull/634", "merged": true, "mergeCommit": {"oid": "f6e09559a6f72de88c38c0c8ea53ad6016c79562"}, "closed": true, "closedAt": "2020-03-30T20:16:03Z", "author": {"login": "RickHawesUSDS"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIO32YgBqjMwNzU3NDk4NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSy-EVABqjMxNzk5NjE5NDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MzEzODc4", "url": "https://github.com/CMSgov/dpc-app/pull/634#pullrequestreview-365313878", "createdAt": "2020-02-26T23:15:08Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzoxNTowOFrOFu_3mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzoxNTowOVrOFu_3qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyNTI0MQ==", "bodyText": "Define and throw a dedicated exception instead of using a generic one.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r384825241", "createdAt": "2020-02-26T23:15:08Z", "author": {"login": "codeclimate"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -206,4 +216,40 @@ private OperationOutcome formOperationOutcome(String patientID, Throwable ex) {\n                 .setLocation(patientLocation);\n         return outcome;\n     }\n+\n+    /**\n+     * Form a date range for the lastUpdated parameter for this export job\n+     *\n+     * @return a date range for this job\n+     */\n+    private DateRangeParam formLastUpdatedParam() {\n+        // Note: FHIR bulk spec says that since is exclusive and transactionTime is inclusive\n+        // It is also says that all resources should not have lastUpdated after the transactionTime.\n+        // This is true for the both the since and the non-since cases.\n+        // BFD will include resources that do not have a lastUpdated if there isn't a complete range.\n+        return since != null ?\n+                new DateRangeParam()\n+                        .setUpperBoundInclusive(Date.from(transactionTime.toInstant()))\n+                        .setLowerBoundExclusive(Date.from(since.toInstant())) :\n+                new DateRangeParam()\n+                        .setUpperBoundInclusive(Date.from(transactionTime.toInstant()));\n+    }\n+\n+    /**\n+     * Check the transaction time of the bundle against the transaction time of the export job\n+     *\n+     * @param bundle to check\n+     */\n+    private void checkBundleTransactionTime(Bundle bundle) {\n+        if (bundle.getMeta() == null || bundle.getMeta().getLastUpdated() == null) return;\n+        final var bundleTransactionTime = bundle.getMeta().getLastUpdated().toInstant().atOffset(ZoneOffset.UTC);\n+        if (bundleTransactionTime.isBefore(transactionTime)) {\n+            logger.info(\"About to throw an BFD Runtime: bundle {}, job {}\", bundleTransactionTime, transactionTime);\n+            /**\n+             * See BFD's RFC0004 for a discussion on why this type error may occur.\n+             * Note: Retrying after a delay may fix this problem.\n+             */\n+            throw new RuntimeException(\"BFD's transaction time regression\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyNTI0Nw==", "bodyText": "Return an empty collection instead of null.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r384825247", "createdAt": "2020-02-26T23:15:09Z", "author": {"login": "codeclimate"}, "path": "dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/JobResource.java", "diffHunk": "@@ -186,7 +195,22 @@ public Response checkJobStatus(@Auth OrganizationPrincipal organizationPrincipal\n         }\n         String formattedChecksum = String.format(\"%s:%s\", \"sha256\", stringChecksum);\n         long fileLength = batchFile.getFileLength();\n-        return List.of(new JobCompletionModel.OutputEntryExtension(JobCompletionModel.CHECKSUM_URL, formattedChecksum),\n-                new JobCompletionModel.OutputEntryExtension(JobCompletionModel.FILE_LENGTH_URL, fileLength));\n+        return List.of(new JobCompletionModel.FhirExtension(JobCompletionModel.CHECKSUM_URL, formattedChecksum),\n+                new JobCompletionModel.FhirExtension(JobCompletionModel.FILE_LENGTH_URL, fileLength));\n+    }\n+\n+    List<JobCompletionModel.FhirExtension> buildJobExtension(List<JobQueueBatch> batches) {\n+        final var submitTime = batches.stream()\n+                .map(b -> b.getSubmitTime().orElse(OffsetDateTime.MIN))\n+                .min(OffsetDateTime::compareTo)\n+                .orElse(OffsetDateTime.MIN);\n+        final var completeTime = batches.stream()\n+                .map(b -> b.getCompleteTime().orElse(OffsetDateTime.MIN))\n+                .max(OffsetDateTime::compareTo)\n+                .orElse(OffsetDateTime.MIN);\n+        if (submitTime.isEqual(OffsetDateTime.MIN) || completeTime.isEqual(OffsetDateTime.MIN)) return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyNTI1Mg==", "bodyText": "Method createJob has 6 arguments (exceeds 4 allowed). Consider refactoring.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r384825252", "createdAt": "2020-02-26T23:15:09Z", "author": {"login": "codeclimate"}, "path": "dpc-queue/src/main/java/gov/cms/dpc/queue/IJobQueue.java", "diffHunk": "@@ -21,9 +22,16 @@\n      * @param providerID    - The provider submitting the job\n      * @param mbis          - The list of MBIs of patients to fetch data for\n      * @param resourceTypes - The resource types to fetch patient data for\n+     * @param since         - The since parameter to use for the requests. May be null.\n+     * @param transactionTime - The transactionTime of the job\n      * @return The UUID of the created job\n      */\n-    UUID createJob(UUID orgID, String providerID, List<String> mbis, List<ResourceType> resourceTypes);\n+    UUID createJob(UUID orgID,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyNTI1Ng==", "bodyText": "Method createJob has 6 arguments (exceeds 4 allowed). Consider refactoring.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r384825256", "createdAt": "2020-02-26T23:15:09Z", "author": {"login": "codeclimate"}, "path": "dpc-queue/src/main/java/gov/cms/dpc/queue/JobQueueCommon.java", "diffHunk": "@@ -21,19 +22,17 @@ public JobQueueCommon(int batchSize) {\n     }\n \n     @Override\n-    public UUID createJob(UUID orgID, String providerID, List<String> patients, List<ResourceType> resourceTypes) {\n+    public UUID createJob(UUID orgID, String providerID, List<String> patients, List<ResourceType> resourceTypes, OffsetDateTime since, OffsetDateTime transactionTime) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MzUxMzE3", "url": "https://github.com/CMSgov/dpc-app/pull/634#pullrequestreview-365351317", "createdAt": "2020-02-27T00:59:30Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMTowMzowN1rOFvB7Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyOTowMVrOFvCWag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1ODkwNw==", "bodyText": "This reduces the level of noise in the aggregator logs.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r384858907", "createdAt": "2020-02-27T01:03:07Z", "author": {"login": "RickHawesUSDS"}, "path": "dpc-aggregation/src/main/resources/local.application.conf", "diffHunk": "@@ -11,14 +11,21 @@ dpc.aggregation {\n     password = dpc-safe\n   }\n \n-  bbclient.keyStore.location = \"/bb.keystore\"\n+  bbclient {\n+    keyStore {\n+      type = \"JKS\"\n+      defaultPassword = \"changeit\"\n+      location = \"/bb.keystore\"\n+    }\n+    serverBaseUrl = \"https://prod-sbx.bfdcloud.net/v1/fhir\"\n+  }\n \n   exportPath = \"/app/data\"\n \n   logging {\n     loggers {\n-      \"gov.cms.dpc\" = DEBUG\n-      \"org.hibernate.SQL\" = TRACE\n+      \"gov.cms.dpc\" = INFO", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1OTA3MA==", "bodyText": "Style change. null is redundant.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r384859070", "createdAt": "2020-02-27T01:03:39Z", "author": {"login": "RickHawesUSDS"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -123,26 +133,26 @@\n      * Based on resourceType, fetch a resource or a bundle of resources.\n      *\n      * @param mbi of the resource to fetch\n-     * @return either a single resource or the first bundle of resources\n+     * @return the first bundle of resources\n      */\n-    private Resource fetchFirst(String mbi) {\n+    private Bundle fetchFirst(String mbi) {\n         Patient patient = fetchPatient(mbi);\n+        var beneId = getBeneIdFromPatient(patient);\n+        final var lastUpdated = formLastUpdatedParam();\n         switch (resourceType) {\n             case Patient:\n-                return patient;\n+                return blueButtonClient.requestPatientFromServer(beneId, lastUpdated);\n             case ExplanationOfBenefit:\n-                String beneId = getBeneIdFromPatient(patient);\n-                return blueButtonClient.requestEOBFromServer(beneId);\n+                return blueButtonClient.requestEOBFromServer(beneId, lastUpdated);\n             case Coverage:\n-                beneId = getBeneIdFromPatient(patient);\n-                return blueButtonClient.requestCoverageFromServer(beneId);\n+                return blueButtonClient.requestCoverageFromServer(beneId, lastUpdated);\n             default:\n                 throw new JobQueueFailure(jobID, batchID, \"Unexpected resource type: \" + resourceType.toString());\n         }\n     }\n \n     private Patient fetchPatient(String mbi) {\n-        Bundle patients = null;\n+        Bundle patients;\n         try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1OTE2OQ==", "bodyText": "since and transactionTime are new.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r384859169", "createdAt": "2020-02-27T01:04:02Z", "author": {"login": "RickHawesUSDS"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/AggregationEngine.java", "diffHunk": "@@ -203,7 +203,14 @@ private void calculateFileMetadata(JobQueueBatch job) {\n      */\n     private Flowable<JobQueueBatchFile> completeResource(JobQueueBatch job, String patientID, ResourceType resourceType) {\n         // Make this flow hot (ie. only called once) when multiple subscribers attach\n-        final var fetcher = new ResourceFetcher(bbclient, job.getJobID(), job.getBatchID(), resourceType, operationsConfig);\n+        final var fetcher = new ResourceFetcher(\n+                bbclient,\n+                job.getJobID(),\n+                job.getBatchID(),\n+                resourceType,\n+                job.getSince().orElse(null),\n+                job.getTransactionTime(),\n+                operationsConfig);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2MjAwOQ==", "bodyText": "requestPatientFromServer now does a search for so we can pass lastUpdated", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r384862009", "createdAt": "2020-02-27T01:14:06Z", "author": {"login": "RickHawesUSDS"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -123,26 +133,26 @@\n      * Based on resourceType, fetch a resource or a bundle of resources.\n      *\n      * @param mbi of the resource to fetch\n-     * @return either a single resource or the first bundle of resources\n+     * @return the first bundle of resources\n      */\n-    private Resource fetchFirst(String mbi) {\n+    private Bundle fetchFirst(String mbi) {\n         Patient patient = fetchPatient(mbi);\n+        var beneId = getBeneIdFromPatient(patient);\n+        final var lastUpdated = formLastUpdatedParam();\n         switch (resourceType) {\n             case Patient:\n-                return patient;\n+                return blueButtonClient.requestPatientFromServer(beneId, lastUpdated);\n             case ExplanationOfBenefit:", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NTg5OA==", "bodyText": "This change is kind of subtle. When lastUpdated is specified an empty bundle does not mean that the beneId doesn't exist, rather it may mean that a resource didn't match the lastUpdated parameter.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r384865898", "createdAt": "2020-02-27T01:29:01Z", "author": {"login": "RickHawesUSDS"}, "path": "dpc-bluebutton/src/main/java/gov/cms/dpc/bluebutton/client/BlueButtonClientImpl.java", "diffHunk": "@@ -217,25 +219,29 @@ public String hashMbi(String mbi) throws GeneralSecurityException {\n      * @param resourceClass - FHIR Resource class\n      * @param criteria - For the resource class the correct criteria that match the patientID\n      * @param patientID - id of patient\n+     * @param lastUpdated - the lastUpdated date to search for\n      * @return FHIR Bundle resource\n      */\n     private <T extends IBaseResource> Bundle fetchBundle(Class<T> resourceClass,\n                                                          List<ICriterion<? extends IParam>> criteria,\n-                                                         String patientID) {\n+                                                         String patientID,\n+                                                         DateRangeParam lastUpdated) {\n         IQuery<IBaseBundle> query = client.search()\n                 .forResource(resourceClass)\n-                .where(criteria.remove(0));\n+                .where(criteria.get(0));\n \n-        for (ICriterion<? extends IParam> criterion : criteria) {\n+        for (ICriterion<? extends IParam> criterion : criteria.subList(1, criteria.size())) {\n             query = query.and(criterion);\n         }\n \n-        final Bundle bundle = query.count(config.getResourcesCount())\n+        final Bundle bundle = query\n+                .count(config.getResourcesCount())\n+                .lastUpdated(lastUpdated)\n                 .returnBundle(Bundle.class)\n                 .execute();\n \n         // Case where patientID does not exist at all\n-        if(!bundle.hasEntry()) {\n+        if(!bundle.hasEntry() && lastUpdated == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 133}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1NzExNTQy", "url": "https://github.com/CMSgov/dpc-app/pull/634#pullrequestreview-365711542", "createdAt": "2020-02-27T14:12:34Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNDoxMjozNFrOFvTs3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNjoyMzoxOFrOFv6yGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE1MDE3NA==", "bodyText": "Nitpick here, but would it make sense to simply pass the optional value, rather than a null?", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r385150174", "createdAt": "2020-02-27T14:12:34Z", "author": {"login": "nickrobison-usds"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/AggregationEngine.java", "diffHunk": "@@ -203,7 +203,14 @@ private void calculateFileMetadata(JobQueueBatch job) {\n      */\n     private Flowable<JobQueueBatchFile> completeResource(JobQueueBatch job, String patientID, ResourceType resourceType) {\n         // Make this flow hot (ie. only called once) when multiple subscribers attach\n-        final var fetcher = new ResourceFetcher(bbclient, job.getJobID(), job.getBatchID(), resourceType, operationsConfig);\n+        final var fetcher = new ResourceFetcher(\n+                bbclient,\n+                job.getJobID(),\n+                job.getBatchID(),\n+                resourceType,\n+                job.getSince().orElse(null),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE3NjExNA==", "bodyText": "This error message isn't very clear to me, what's it signaling?", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r385176114", "createdAt": "2020-02-27T15:09:33Z", "author": {"login": "nickrobison-usds"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -206,4 +216,40 @@ private OperationOutcome formOperationOutcome(String patientID, Throwable ex) {\n                 .setLocation(patientLocation);\n         return outcome;\n     }\n+\n+    /**\n+     * Form a date range for the lastUpdated parameter for this export job\n+     *\n+     * @return a date range for this job\n+     */\n+    private DateRangeParam formLastUpdatedParam() {\n+        // Note: FHIR bulk spec says that since is exclusive and transactionTime is inclusive\n+        // It is also says that all resources should not have lastUpdated after the transactionTime.\n+        // This is true for the both the since and the non-since cases.\n+        // BFD will include resources that do not have a lastUpdated if there isn't a complete range.\n+        return since != null ?\n+                new DateRangeParam()\n+                        .setUpperBoundInclusive(Date.from(transactionTime.toInstant()))\n+                        .setLowerBoundExclusive(Date.from(since.toInstant())) :\n+                new DateRangeParam()\n+                        .setUpperBoundInclusive(Date.from(transactionTime.toInstant()));\n+    }\n+\n+    /**\n+     * Check the transaction time of the bundle against the transaction time of the export job\n+     *\n+     * @param bundle to check\n+     */\n+    private void checkBundleTransactionTime(Bundle bundle) {\n+        if (bundle.getMeta() == null || bundle.getMeta().getLastUpdated() == null) return;\n+        final var bundleTransactionTime = bundle.getMeta().getLastUpdated().toInstant().atOffset(ZoneOffset.UTC);\n+        if (bundleTransactionTime.isBefore(transactionTime)) {\n+            logger.info(\"About to throw an BFD Runtime: bundle {}, job {}\", bundleTransactionTime, transactionTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5MDQ4OA==", "bodyText": "Probably a stylistic change, but given this ternary spreads across multiple lines, maybe it makes sense to split this into an if/else statement.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r385790488", "createdAt": "2020-02-28T16:23:18Z", "author": {"login": "nickrobison-usds"}, "path": "dpc-queue/src/main/java/gov/cms/dpc/queue/JobQueueCommon.java", "diffHunk": "@@ -21,19 +22,17 @@ public JobQueueCommon(int batchSize) {\n     }\n \n     @Override\n-    public UUID createJob(UUID orgID, String providerID, List<String> patients, List<ResourceType> resourceTypes) {\n+    public UUID createJob(UUID orgID, String providerID, List<String> patients, List<ResourceType> resourceTypes, OffsetDateTime since, OffsetDateTime transactionTime) {\n         final UUID jobID = UUID.randomUUID();\n \n-        List<JobQueueBatch> jobBatches = Observable.fromIterable(patients)\n-                .buffer(batchSize)\n-                .map(patientBatch -> this.createJobBatch(jobID, orgID, providerID, patientBatch, resourceTypes))\n-                .toList()\n-                .blockingGet();\n-\n-        // Expect a single empty job when no patients passed\n-        if ( jobBatches.isEmpty() && patients.isEmpty() ) {\n-            jobBatches.add(this.createJobBatch(jobID, orgID, providerID, Collections.emptyList(), resourceTypes));\n-        }\n+        // Add a single empty job when no patients or since is less or equal to transactionTime\n+        List<JobQueueBatch> jobBatches = patients.isEmpty() || (since != null && !transactionTime.isAfter(since)) ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTM2Mjk1", "url": "https://github.com/CMSgov/dpc-app/pull/634#pullrequestreview-368936295", "createdAt": "2020-03-04T16:36:13Z", "commit": null, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjozNjoxNFrOFx0vKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzozOTo1NFrOFx3CGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc4ODU4Nw==", "bodyText": "+1. Would improve readability.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r387788587", "createdAt": "2020-03-04T16:36:14Z", "author": {"login": "em1"}, "path": "dpc-queue/src/main/java/gov/cms/dpc/queue/JobQueueCommon.java", "diffHunk": "@@ -21,19 +22,17 @@ public JobQueueCommon(int batchSize) {\n     }\n \n     @Override\n-    public UUID createJob(UUID orgID, String providerID, List<String> patients, List<ResourceType> resourceTypes) {\n+    public UUID createJob(UUID orgID, String providerID, List<String> patients, List<ResourceType> resourceTypes, OffsetDateTime since, OffsetDateTime transactionTime) {\n         final UUID jobID = UUID.randomUUID();\n \n-        List<JobQueueBatch> jobBatches = Observable.fromIterable(patients)\n-                .buffer(batchSize)\n-                .map(patientBatch -> this.createJobBatch(jobID, orgID, providerID, patientBatch, resourceTypes))\n-                .toList()\n-                .blockingGet();\n-\n-        // Expect a single empty job when no patients passed\n-        if ( jobBatches.isEmpty() && patients.isEmpty() ) {\n-            jobBatches.add(this.createJobBatch(jobID, orgID, providerID, Collections.emptyList(), resourceTypes));\n-        }\n+        // Add a single empty job when no patients or since is less or equal to transactionTime\n+        List<JobQueueBatch> jobBatches = patients.isEmpty() || (since != null && !transactionTime.isAfter(since)) ?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5MDQ4OA=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc4OTMwNg==", "bodyText": "Do we want VSCode settings in the repo?", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r387789306", "createdAt": "2020-03-04T16:37:23Z", "author": {"login": "em1"}, "path": ".vscode/settings.json", "diffHunk": "@@ -0,0 +1,3 @@\n+{\n+  \"java.configuration.updateBuildConfiguration\": \"automatic\"\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc5NDE4NA==", "bodyText": "It's not clear to me why this changed. We don't need to check the resource type anymore?", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r387794184", "createdAt": "2020-03-04T16:45:08Z", "author": {"login": "em1"}, "path": "dpc-aggregation/src/main/java/gov/cms/dpc/aggregation/engine/ResourceFetcher.java", "diffHunk": "@@ -65,17 +78,12 @@\n         return Flowable.fromCallable(() -> {\n             String fetchId = UUID.randomUUID().toString();\n             logger.debug(\"Fetching first {} from BlueButton for {}\", resourceType.toString(), fetchId);\n-            final Resource firstFetched = fetchFirst(mbi);\n-            if (ResourceType.Coverage.equals(resourceType) || ResourceType.ExplanationOfBenefit.equals(resourceType)) {\n-                return fetchAllBundles((Bundle)firstFetched, fetchId);\n-            } else {\n-                logger.debug(\"Done fetching {} for {}\", resourceType.toString(), fetchId);\n-                return List.of(firstFetched);\n-            }\n+            final Bundle firstFetched = fetchFirst(mbi);\n+            return fetchAllBundles(firstFetched, fetchId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyNjIwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                       @ApiParam(value = \"Resources updated after this period will be included in the response. Must be a FHIR date-time.\")\n          \n          \n            \n                                       @ApiParam(value = \"Resources updated after this time will be included in the response. Must be a FHIR date-time.\")\n          \n      \n    \n    \n  \n\nThis should probably be something that implies instant rather than a date range.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r387826200", "createdAt": "2020-03-04T17:39:54Z", "author": {"login": "em1"}, "path": "dpc-api/src/main/java/gov/cms/dpc/api/resources/v1/GroupResource.java", "diffHunk": "@@ -250,12 +259,12 @@ public Response export(@ApiParam(hidden = true)\n                            @QueryParam(\"_type\") String resourceTypes,\n                            @ApiParam(value = \"Output format of requested data\", allowableValues = FHIR_NDJSON, defaultValue = FHIR_NDJSON)\n                            @QueryParam(\"_outputFormat\") String outputFormat,\n-                           @ApiParam(value = \"Request data that has been updated after the given point. (Not implemented yet)\", hidden = true)\n+                           @ApiParam(value = \"Resources updated after this period will be included in the response. Must be a FHIR date-time.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNzgwMjUz", "url": "https://github.com/CMSgov/dpc-app/pull/634#pullrequestreview-370780253", "createdAt": "2020-03-07T18:02:41Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxODowMjo0MVrOFzRBZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxODowMjo0MVrOFzRBZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTMwMDU4MQ==", "bodyText": "Method createEmptyBatch has 6 arguments (exceeds 4 allowed). Consider refactoring.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r389300581", "createdAt": "2020-03-07T18:02:41Z", "author": {"login": "codeclimate"}, "path": "dpc-queue/src/main/java/gov/cms/dpc/queue/JobQueueCommon.java", "diffHunk": "@@ -44,8 +49,25 @@ public UUID createJob(UUID orgID, String providerID, List<String> patients, List\n         return jobBatches.stream().map(JobQueueBatch::getJobID).findFirst().orElseThrow(() -> new JobQueueFailure(\"Unable to create job. No batches to submit.\"));\n     }\n \n-    protected JobQueueBatch createJobBatch(UUID jobID, UUID orgID, String providerID, List<String> patients, List<ResourceType> resourceTypes) {\n-        return new JobQueueBatch(jobID, orgID, providerID, patients, resourceTypes);\n+    protected JobQueueBatch createJobBatch(UUID jobID,\n+                                           UUID orgID,\n+                                           String providerID,\n+                                           List<String> patients,\n+                                           List<ResourceType> resourceTypes,\n+                                           OffsetDateTime since,\n+                                           OffsetDateTime transactionTime) {\n+        return new JobQueueBatch(jobID, orgID, providerID, patients, resourceTypes, since, transactionTime);\n+    }\n+\n+    protected List<JobQueueBatch> createEmptyBatch(UUID jobID,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 59}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "f3df8801c8f1c889e113be7b55090ca0ed2103ba", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/f3df8801c8f1c889e113be7b55090ca0ed2103ba", "committedDate": "2020-03-09T01:10:45Z", "message": "Code Review Fixes\n\n- Removed vscode settings\n- OpenApi wording matching the lastest FHIR spec\n- Clearer logic in job creation\n- Better wording for the BFD regression error case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2OTgyMzg1", "url": "https://github.com/CMSgov/dpc-app/pull/634#pullrequestreview-376982385", "createdAt": "2020-03-18T15:34:23Z", "commit": {"oid": "f3df8801c8f1c889e113be7b55090ca0ed2103ba"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNTozNDoyM1rOF4KpXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNTo0MDowMVrOF4K6MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQzOTAwNA==", "bodyText": "In a recent commit we switched from passing in the environment variables directly and are using an envfile instead. We should follow the same pattern for the API service as we do the aggregator service.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r394439004", "createdAt": "2020-03-18T15:34:23Z", "author": {"login": "ronaldheft-usds"}, "path": "docker-compose.yml", "diffHunk": "@@ -54,6 +54,9 @@ services:\n       - ENV=local\n       - JACOCO=${REPORT_COVERAGE}\n       - exportPath=/app/data\n+      - BFD_HASH_ITER=${BFD_HASH_ITER}\n+      - BFD_HASH_PEPPER=${BFD_HASH_PEPPER}\n+      - BFD_URL=${BFD_URL}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3df8801c8f1c889e113be7b55090ca0ed2103ba"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ0MDQyNg==", "bodyText": "LGTM, as we're only changing this for our local config.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r394440426", "createdAt": "2020-03-18T15:36:16Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-aggregation/src/main/resources/local.application.conf", "diffHunk": "@@ -11,14 +11,21 @@ dpc.aggregation {\n     password = dpc-safe\n   }\n \n-  bbclient.keyStore.location = \"/bb.keystore\"\n+  bbclient {\n+    keyStore {\n+      type = \"JKS\"\n+      defaultPassword = \"changeit\"\n+      location = \"/bb.keystore\"\n+    }\n+    serverBaseUrl = \"https://prod-sbx.bfdcloud.net/v1/fhir\"\n+  }\n \n   exportPath = \"/app/data\"\n \n   logging {\n     loggers {\n-      \"gov.cms.dpc\" = DEBUG\n-      \"org.hibernate.SQL\" = TRACE\n+      \"gov.cms.dpc\" = INFO", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg1ODkwNw=="}, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ0MTAxNg==", "bodyText": "This was pulled out into it's own PR now, so I suspect this change will go away once rebased with master.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r394441016", "createdAt": "2020-03-18T15:37:04Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-aggregation/src/main/resources/migrations/queue.migrations.xml", "diffHunk": "@@ -75,4 +75,15 @@\n         </addColumn>\n     </changeSet>\n \n+    <changeSet id=\"since-support\" author=\"rickhawesusds\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3df8801c8f1c889e113be7b55090ca0ed2103ba"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ0MzMxMg==", "bodyText": "Nice usage of @Named, but I'm wondering if this is going to get confusing. Thoughts if it would make sense to make an interface extension IGenericBBClient and IGenericAttributionClient so the code is cleaner and we don't accidentally import the incorrect client?", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r394443312", "createdAt": "2020-03-18T15:40:01Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-api/src/main/java/gov/cms/dpc/api/DPCAPIModule.java", "diffHunk": "@@ -175,6 +176,7 @@ SessionFactory provideSessionFactory(DPCAuthManagedSessionFactory factory) {\n \n     @Provides\n     @Singleton\n+    @Named(\"attribution\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3df8801c8f1c889e113be7b55090ca0ed2103ba"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3df8801c8f1c889e113be7b55090ca0ed2103ba", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/f3df8801c8f1c889e113be7b55090ca0ed2103ba", "committedDate": "2020-03-09T01:10:45Z", "message": "Code Review Fixes\n\n- Removed vscode settings\n- OpenApi wording matching the lastest FHIR spec\n- Clearer logic in job creation\n- Better wording for the BFD regression error case"}, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5Njc5NDQ2", "url": "https://github.com/CMSgov/dpc-app/pull/634#pullrequestreview-379679446", "createdAt": "2020-03-23T17:53:38Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzo1MzozOFrOF6RO9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNzo1NDo0MFrOF6RRgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY0NDA4NA==", "bodyText": "Looks great!", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r396644084", "createdAt": "2020-03-23T17:53:38Z", "author": {"login": "ronaldheft-usds"}, "path": "docker-compose.yml", "diffHunk": "@@ -46,6 +46,8 @@ services:\n     ports:\n       - \"3002:3002\"\n       - \"9903:9900\"\n+    env_file:", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY0NDczOQ==", "bodyText": "Sounds good to me.", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r396644739", "createdAt": "2020-03-23T17:54:40Z", "author": {"login": "ronaldheft-usds"}, "path": "dpc-api/src/main/java/gov/cms/dpc/api/DPCAPIModule.java", "diffHunk": "@@ -175,6 +176,7 @@ SessionFactory provideSessionFactory(DPCAuthManagedSessionFactory factory) {\n \n     @Provides\n     @Singleton\n+    @Named(\"attribution\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ0MzMxMg=="}, "originalCommit": {"oid": "f3df8801c8f1c889e113be7b55090ca0ed2103ba"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxOTk1NTc2", "url": "https://github.com/CMSgov/dpc-app/pull/634#pullrequestreview-381995576", "createdAt": "2020-03-26T13:16:08Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzoxNjowOFrOF8GT_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzoxNjowOFrOF8GT_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU2MjMwMA==", "bodyText": "Good call on reusing/renaming this!", "url": "https://github.com/CMSgov/dpc-app/pull/634#discussion_r398562300", "createdAt": "2020-03-26T13:16:08Z", "author": {"login": "em1"}, "path": "dpc-common/src/main/java/gov/cms/dpc/common/models/JobCompletionModel.java", "diffHunk": "@@ -75,25 +76,32 @@ public Integer getCount() {\n      * An extension field for additional information in an {@link OutputEntry}.\n      */\n     @JsonInclude(Include.NON_EMPTY)\n-    public static class OutputEntryExtension {\n+    public static class FhirExtension {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyODEzODY5", "url": "https://github.com/CMSgov/dpc-app/pull/634#pullrequestreview-382813869", "createdAt": "2020-03-27T12:30:11Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee0384f24f8fcac3e05ac14f7646985756e5aacb", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/ee0384f24f8fcac3e05ac14f7646985756e5aacb", "committedDate": "2020-03-30T18:39:33Z", "message": "_since Support\n\n- Added since and transactionTime to the JobBatch\n- BBClient requestPatientFromServer returns Bundles and supports lastUpdated.\n- Code climate fixes\n- BlueBluttonClient support requestPatientFromServerByMbiHash\n- Handle where bundle is empty when _since is used\n- Fetch transacationTime from the BFD\n- BFD client called at the submit of the job\n- Also serves as a healthcheck\n- patient test resources are Bundles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4724a0b2a63ed3ffdd9b04d70ea3d89509585ed6", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/4724a0b2a63ed3ffdd9b04d70ea3d89509585ed6", "committedDate": "2020-03-30T18:39:33Z", "message": "Adding BB2 client in DPC-API\n\n- Named provides because of two FHIR clients\n- bbclient confs\n- POM"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6cde1469c63d598af7f783b09a369c1ca73f60d", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/b6cde1469c63d598af7f783b09a369c1ca73f60d", "committedDate": "2020-03-30T18:39:33Z", "message": "Added submit and complete extensions to the JobCompleteModel\n\n- Set up mock client transaction time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5d2a1f31ccdfd65ce794817ec57d96b3351edc6", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/f5d2a1f31ccdfd65ce794817ec57d96b3351edc6", "committedDate": "2020-03-30T18:39:33Z", "message": "Made make ci-app work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "057e4d5a7b73dd34b87baf45e9b72d3b7dfe7368", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/057e4d5a7b73dd34b87baf45e9b72d3b7dfe7368", "committedDate": "2020-03-30T18:39:33Z", "message": "Improve tests\n\n- Add lastUpdated to test data\n- MockClient implements lastUpdated\n- Tests use lastUpdated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "760246fd5f9ee297e67614d16ca1e0c831386a28", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/760246fd5f9ee297e67614d16ca1e0c831386a28", "committedDate": "2020-03-30T18:39:33Z", "message": "Change OpenAPI documents"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4570c4aedbe44b8df441e1417451e1f4a9d51a5", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/c4570c4aedbe44b8df441e1417451e1f4a9d51a5", "committedDate": "2020-03-30T18:39:33Z", "message": "Code Climate Fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee4775838e23e93eb01135e0064979bafb64bec2", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/ee4775838e23e93eb01135e0064979bafb64bec2", "committedDate": "2020-03-30T18:39:33Z", "message": "Code Review Fixes\n\n- Removed vscode settings\n- OpenApi wording matching the lastest FHIR spec\n- Clearer logic in job creation\n- Better wording for the BFD regression error case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92831b0f0514ef6a07ae04c97c41f42e012f3677", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/92831b0f0514ef6a07ae04c97c41f42e012f3677", "committedDate": "2020-03-30T18:39:33Z", "message": "Rebase changes\n\n- Converted new tests to new createJob signature\n- Passing of env variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7c2440b4bf9829eb98b0aed92f747bc886be77d", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/c7c2440b4bf9829eb98b0aed92f747bc886be77d", "committedDate": "2020-03-30T18:39:33Z", "message": "Add Postman tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "c7c2440b4bf9829eb98b0aed92f747bc886be77d", "author": {"user": null}, "url": "https://github.com/CMSgov/dpc-app/commit/c7c2440b4bf9829eb98b0aed92f747bc886be77d", "committedDate": "2020-03-30T18:39:33Z", "message": "Add Postman tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 155, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}