{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NTYzNjcx", "number": 611, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo1MTowMlrODhGbJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo1NDoyNFrODhsSVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDM0ODU1OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/organization.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo1MTowMlrOFrrKVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo1MTowMlrOFrrKVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM0MDI0Ng==", "bodyText": "This is actually already a method that's available because of the organization_type enum. Rails enum gives you a few helper methods -- including a boolean response method for every option in the enum. We have #primary_care_clinic?, #speciality_clinic?, #health_it_vendor?, etc. Can we utilize that instead of writing a new method? (Or, if a new method is necessary, let's call it something else so that the enum method isn't overwritten.)", "url": "https://github.com/CMSgov/dpc-app/pull/611#discussion_r381340246", "createdAt": "2020-02-19T14:51:02Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -39,6 +42,16 @@ def api_credentialable?\n     registered_organizations.count.positive? && npi.present?\n   end\n \n+  def assign_vendor_id\n+    current_org = Organization.find(id)\n+    current_org.vendor_id = \"V_#{SecureRandom.alphanumeric(10)}\"\n+    current_org.save!\n+  end\n+\n+  def health_it_vendor?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f5ddef3d8052391dd4b87e97595325c7be8151f"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDM2NDUwOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/organization.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo1NDoyNFrOFrrUKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODoyODoxM1rOFryltg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM0Mjc2Mg==", "bodyText": "We should do something like the loop demonstrated in the top example here to ensure that the vendor_id generated doesn't already exist.", "url": "https://github.com/CMSgov/dpc-app/pull/611#discussion_r381342762", "createdAt": "2020-02-19T14:54:24Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -39,6 +42,16 @@ def api_credentialable?\n     registered_organizations.count.positive? && npi.present?\n   end\n \n+  def assign_vendor_id\n+    current_org = Organization.find(id)\n+    current_org.vendor_id = \"V_#{SecureRandom.alphanumeric(10)}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f5ddef3d8052391dd4b87e97595325c7be8151f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ2MTk0Mg==", "bodyText": "And we should also validate that this field is unique with a validation", "url": "https://github.com/CMSgov/dpc-app/pull/611#discussion_r381461942", "createdAt": "2020-02-19T18:28:13Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -39,6 +42,16 @@ def api_credentialable?\n     registered_organizations.count.positive? && npi.present?\n   end\n \n+  def assign_vendor_id\n+    current_org = Organization.find(id)\n+    current_org.vendor_id = \"V_#{SecureRandom.alphanumeric(10)}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM0Mjc2Mg=="}, "originalCommit": {"oid": "5f5ddef3d8052391dd4b87e97595325c7be8151f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDM2NzU1OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/organization.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo1NTowM1rOFrrWHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo1NTowM1rOFrrWHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM0MzI2Mg==", "bodyText": "If we use before_create and before_update callbacks instead, then the save! isn't necessary. Let's do that to minimize database writes. On that note -- can we use just before_save (which gets called during create and update) instead of two callbacks?", "url": "https://github.com/CMSgov/dpc-app/pull/611#discussion_r381343262", "createdAt": "2020-02-19T14:55:03Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -39,6 +42,16 @@ def api_credentialable?\n     registered_organizations.count.positive? && npi.present?\n   end\n \n+  def assign_vendor_id\n+    current_org = Organization.find(id)\n+    current_org.vendor_id = \"V_#{SecureRandom.alphanumeric(10)}\"\n+    current_org.save!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f5ddef3d8052391dd4b87e97595325c7be8151f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDM3Mjk2OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/serializers/organization_submit_serializer.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo1NjoxMVrOFrrZgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo1NjoxMVrOFrrZgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM0NDEzMQ==", "bodyText": "We can use the enum method provided by Rails here (if the custom method is removed/changed):\n            value: object.health_it_vendor? ? object.vendor_id : object.npi", "url": "https://github.com/CMSgov/dpc-app/pull/611#discussion_r381344131", "createdAt": "2020-02-19T14:56:11Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/serializers/organization_submit_serializer.rb", "diffHunk": "@@ -26,7 +26,7 @@ def organization_resource\n         identifier: [\n           {\n             system: 'http://hl7.org/fhir/sid/us-npi',\n-            value: object.npi\n+            value: object.organization_type == 'health_it_vendor' ? object.vendor_id : object.npi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f5ddef3d8052391dd4b87e97595325c7be8151f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDM3MzgxOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/services/fhir_resource_builder.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo1NjoyMlrOFrraCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDo1NjoyMlrOFrraCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTM0NDI2NA==", "bodyText": "Ditto", "url": "https://github.com/CMSgov/dpc-app/pull/611#discussion_r381344264", "createdAt": "2020-02-19T14:56:22Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/services/fhir_resource_builder.rb", "diffHunk": "@@ -6,7 +6,12 @@ def fhir_org(reg_org)\n     fhir_org = FHIR::Organization.new(\n       id: reg_org.api_id,\n       name: org.name,\n-      identifier: [{ system: 'http://hl7.org/fhir/sid/us-npi', value: org.npi }]\n+      identifier: [\n+        {\n+          system: 'http://hl7.org/fhir/sid/us-npi',\n+          value: org.organization_type == 'health_it_vendor' ? org.vendor_id : org.npi", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f5ddef3d8052391dd4b87e97595325c7be8151f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTI3NzIyOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/organization.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTozMDo0M1rOFsX_BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTozMDo0M1rOFsX_BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA3NDYyOA==", "bodyText": "Remove debugger entry point binding.pry.", "url": "https://github.com/CMSgov/dpc-app/pull/611#discussion_r382074628", "createdAt": "2020-02-20T15:30:43Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -39,6 +41,13 @@ def api_credentialable?\n     registered_organizations.count.positive? && npi.present?\n   end\n \n+  def assign_vendor_id\n+    if vendor_id.blank?\n+      self.vendor_id = \"V_#{SecureRandom.alphanumeric(10)}\"\n+      binding.pry", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d55c0036e033ecfc66c0478c3b11c2b3d41ded4"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTI3NzI0OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/organization.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTozMDo0M1rOFsX_CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTozMDo0M1rOFsX_CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA3NDYzMw==", "bodyText": "Use a guard clause instead of wrapping the code inside a conditional expression.", "url": "https://github.com/CMSgov/dpc-app/pull/611#discussion_r382074633", "createdAt": "2020-02-20T15:30:43Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -39,6 +41,13 @@ def api_credentialable?\n     registered_organizations.count.positive? && npi.present?\n   end\n \n+  def assign_vendor_id\n+    if vendor_id.blank?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d55c0036e033ecfc66c0478c3b11c2b3d41ded4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjU1MTg5OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/models/organization.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo1NDoyNFrOFskd5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMTo1NDoyNFrOFskd5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI3OTE0MQ==", "bodyText": "Add empty line after guard clause.", "url": "https://github.com/CMSgov/dpc-app/pull/611#discussion_r382279141", "createdAt": "2020-02-20T21:54:24Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/models/organization.rb", "diffHunk": "@@ -39,6 +41,18 @@ def api_credentialable?\n     registered_organizations.count.positive? && npi.present?\n   end\n \n+  def assign_vendor_id\n+    return true if vendor_id.present?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fa39fe0c9e653e77fa5e71108472f317c34cc32"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4971, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}