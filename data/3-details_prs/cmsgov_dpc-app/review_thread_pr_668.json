{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDMzOTI5", "number": 668, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTo0MzowN1rODl84xA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzo1MzowN1rODn1yIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTIxNDc2OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/users/registrations_controller.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTo0MzowN1rOFzIXxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTo0MzowN1rOFzIXxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1ODg1Mg==", "bodyText": "Use 2 (not 4) spaces for indentation.", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389158852", "createdAt": "2020-03-06T21:43:07Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/controllers/users/registrations_controller.rb", "diffHunk": "@@ -4,6 +4,20 @@ module Users\n   class RegistrationsController < Devise::RegistrationsController\n     include MultiModelLoginHelper\n     skip_before_action :check_user, except: %i[new create]\n+\n+    def destroy\n+      @user = User.find(current_user.id)\n+      if @user.destroy_with_password(user_params[:password_to_delete])\n+          redirect_to root_url, notice: \"User deleted.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de93acf5927b37f2f0133bfd60b2a84873c97ccb"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTIxNDc3OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/users/registrations_controller.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTo0MzowN1rOFzIXxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTo0MzowN1rOFzIXxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1ODg1NA==", "bodyText": "Space inside parentheses detected.", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389158854", "createdAt": "2020-03-06T21:43:07Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/controllers/users/registrations_controller.rb", "diffHunk": "@@ -4,6 +4,20 @@ module Users\n   class RegistrationsController < Devise::RegistrationsController\n     include MultiModelLoginHelper\n     skip_before_action :check_user, except: %i[new create]\n+\n+    def destroy\n+      @user = User.find(current_user.id)\n+      if @user.destroy_with_password(user_params[:password_to_delete])\n+          redirect_to root_url, notice: \"User deleted.\"\n+      else\n+        redirect_to edit_user_registration_url\n+        flash[:notice] = \"Couldn't delete\"\n+      end\n+    end\n+\n+    def user_params\n+      params.require(:user).permit(:password_to_delete )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de93acf5927b37f2f0133bfd60b2a84873c97ccb"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTIxNDc4OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/users/registrations_controller.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTo0MzowOFrOFzIXxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTo0MzowOFrOFzIXxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE1ODg1NQ==", "bodyText": "Prefer single-quoted strings when you don't need string interpolation or special symbols.", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389158855", "createdAt": "2020-03-06T21:43:08Z", "author": {"login": "codeclimate"}, "path": "dpc-web/app/controllers/users/registrations_controller.rb", "diffHunk": "@@ -4,6 +4,20 @@ module Users\n   class RegistrationsController < Devise::RegistrationsController\n     include MultiModelLoginHelper\n     skip_before_action :check_user, except: %i[new create]\n+\n+    def destroy\n+      @user = User.find(current_user.id)\n+      if @user.destroy_with_password(user_params[:password_to_delete])\n+          redirect_to root_url, notice: \"User deleted.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de93acf5927b37f2f0133bfd60b2a84873c97ccb"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjE3NDEwOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/users/registrations_controller.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODo1ODo1MVrOFz1bNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODo1ODo1MVrOFz1bNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg5NzAxMg==", "bodyText": "This should be after the protected below", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389897012", "createdAt": "2020-03-09T18:58:51Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/controllers/users/registrations_controller.rb", "diffHunk": "@@ -4,6 +4,20 @@ module Users\n   class RegistrationsController < Devise::RegistrationsController\n     include MultiModelLoginHelper\n     skip_before_action :check_user, except: %i[new create]\n+\n+    def destroy\n+      @user = User.find(current_user.id)\n+      if @user.destroy_with_password(user_params[:password_to_delete])\n+        redirect_to root_url, notice: 'User account deleted.'\n+      else\n+        redirect_to edit_user_registration_url\n+        flash[:notice] = 'Could not delete account. Please enter the correct password.'\n+      end\n+    end\n+\n+    def user_params", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b2c23d090103fff29fe773964efb877bc8db42"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjIwODU1OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/users/registrations_controller.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTowOTozNVrOFz1xDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTozMDoxNFrOFz2ZNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwMjYwNQ==", "bodyText": "We use flash[:alert] for error messages (:notice being for success messages). Also, this needs to either be implemented in the same way as line 11 above, or needs to come before the redirect; otherwise I don't think it'll take effect (the redirect will be called and the block exited). I'd probably vote the former for consistency within this method.", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389902605", "createdAt": "2020-03-09T19:09:35Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/controllers/users/registrations_controller.rb", "diffHunk": "@@ -4,6 +4,20 @@ module Users\n   class RegistrationsController < Devise::RegistrationsController\n     include MultiModelLoginHelper\n     skip_before_action :check_user, except: %i[new create]\n+\n+    def destroy\n+      @user = User.find(current_user.id)\n+      if @user.destroy_with_password(user_params[:password_to_delete])\n+        redirect_to root_url, notice: 'User account deleted.'\n+      else\n+        redirect_to edit_user_registration_url\n+        flash[:notice] = 'Could not delete account. Please enter the correct password.'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b2c23d090103fff29fe773964efb877bc8db42"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxMjg4Nw==", "bodyText": "(this  comment  may not be relevant if respond_with resource takes care of this in my proposed refactoring)", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389912887", "createdAt": "2020-03-09T19:30:14Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/controllers/users/registrations_controller.rb", "diffHunk": "@@ -4,6 +4,20 @@ module Users\n   class RegistrationsController < Devise::RegistrationsController\n     include MultiModelLoginHelper\n     skip_before_action :check_user, except: %i[new create]\n+\n+    def destroy\n+      @user = User.find(current_user.id)\n+      if @user.destroy_with_password(user_params[:password_to_delete])\n+        redirect_to root_url, notice: 'User account deleted.'\n+      else\n+        redirect_to edit_user_registration_url\n+        flash[:notice] = 'Could not delete account. Please enter the correct password.'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwMjYwNQ=="}, "originalCommit": {"oid": "04b2c23d090103fff29fe773964efb877bc8db42"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjIxNDI2OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/views/devise/registrations/edit.html.erb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOToxMToyMFrOFz10rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOToxMToyMFrOFz10rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwMzUzNA==", "bodyText": "Let's use the modern hash with symbol key syntax rather than hash rockets -- so class:  instead of :class =>", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389903534", "createdAt": "2020-03-09T19:11:20Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/views/devise/registrations/edit.html.erb", "diffHunk": "@@ -132,7 +132,11 @@\n   <div class=\"ds-l-col--12 ds-l-md-col--6 ds-u-margin-bottom--1 ds-u-margin-x--auto\">\n     <div class=\"card card--border-top--red \">\n       <h2 class=\"ds-u-color--error-dark ds-u-margin-top--0\">Delete my account</h2>\n-      <p><%= button_to \"Delete my account\", registration_path(resource_name), data: { confirm: \"Are you sure you want to delete your account?\" }, method: :delete, :class => \"ds-c-button ds-c-button--danger\" %></p>\n+      <%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :delete }) do |f| %>\n+        <%= f.label :password, :class => \"ds-c-label\" %> <i>Enter your password to delete your account.</i><br />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b2c23d090103fff29fe773964efb877bc8db42"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjIxNDc5OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/views/devise/registrations/edit.html.erb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOToxMTozMVrOFz11Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOToxMTozMVrOFz11Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwMzYyMg==", "bodyText": "Ditto", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389903622", "createdAt": "2020-03-09T19:11:31Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/views/devise/registrations/edit.html.erb", "diffHunk": "@@ -132,7 +132,11 @@\n   <div class=\"ds-l-col--12 ds-l-md-col--6 ds-u-margin-bottom--1 ds-u-margin-x--auto\">\n     <div class=\"card card--border-top--red \">\n       <h2 class=\"ds-u-color--error-dark ds-u-margin-top--0\">Delete my account</h2>\n-      <p><%= button_to \"Delete my account\", registration_path(resource_name), data: { confirm: \"Are you sure you want to delete your account?\" }, method: :delete, :class => \"ds-c-button ds-c-button--danger\" %></p>\n+      <%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :delete }) do |f| %>\n+        <%= f.label :password, :class => \"ds-c-label\" %> <i>Enter your password to delete your account.</i><br />\n+        <%= f.password_field :password_to_delete, autocomplete: \"off\", :class => \"ds-c-field\" %><br />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b2c23d090103fff29fe773964efb877bc8db42"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjIxODE3OnYy", "diffSide": "RIGHT", "path": "dpc-web/spec/features/authentication/user_deletes_account_spec.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOToxMjozOVrOFz13Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOToxMjozOVrOFz13Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwNDE4Mg==", "bodyText": "Because this is a feature spec, let's try to assert on the behavior we expect to see as a user in this scenario rather than on the internals of the application. What page are we on? Do we see a message?", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389904182", "createdAt": "2020-03-09T19:12:39Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/spec/features/authentication/user_deletes_account_spec.rb", "diffHunk": "@@ -0,0 +1,44 @@\n+require 'rails_helper'\n+\n+RSpec.feature 'user deletes account' do\n+  let(:user) { create :user }\n+\n+  def user_sign_in\n+    visit new_user_session_path\n+    fill_in 'user_email', with: user.email\n+    fill_in 'user_password', with: '123456'\n+    find('[data-test=\"submit\"]').click\n+    visit edit_user_registration_path\n+  end\n+\n+  context 'when successful' do\n+    scenario 'user inputs correct password' do\n+      user_sign_in\n+      fill_in 'user_password_to_delete', with: '123456'\n+\n+      find('[data-test=\"delete-user-account\"]').click\n+\n+      expect(User.last).not_to be_present", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b2c23d090103fff29fe773964efb877bc8db42"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjIxODU3OnYy", "diffSide": "RIGHT", "path": "dpc-web/spec/features/authentication/user_deletes_account_spec.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOToxMjo0N1rOFz13fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOToxMjo0N1rOFz13fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwNDI1Mg==", "bodyText": "Ditto", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389904252", "createdAt": "2020-03-09T19:12:47Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/spec/features/authentication/user_deletes_account_spec.rb", "diffHunk": "@@ -0,0 +1,44 @@\n+require 'rails_helper'\n+\n+RSpec.feature 'user deletes account' do\n+  let(:user) { create :user }\n+\n+  def user_sign_in\n+    visit new_user_session_path\n+    fill_in 'user_email', with: user.email\n+    fill_in 'user_password', with: '123456'\n+    find('[data-test=\"submit\"]').click\n+    visit edit_user_registration_path\n+  end\n+\n+  context 'when successful' do\n+    scenario 'user inputs correct password' do\n+      user_sign_in\n+      fill_in 'user_password_to_delete', with: '123456'\n+\n+      find('[data-test=\"delete-user-account\"]').click\n+\n+      expect(User.last).not_to be_present\n+    end\n+  end\n+\n+  context 'when unsuccessful' do\n+    scenario 'user inputs incorrect password' do\n+      user_sign_in\n+      fill_in 'user_password_to_delete', with: '3v3ryDayPotato'\n+\n+      find('[data-test=\"delete-user-account\"]').click\n+\n+      expect(User.last).to be_present", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b2c23d090103fff29fe773964efb877bc8db42"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjIxODkyOnYy", "diffSide": "RIGHT", "path": "dpc-web/spec/features/authentication/user_deletes_account_spec.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOToxMjo1NFrOFz13uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOToxMjo1NFrOFz13uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwNDMxMw==", "bodyText": "Ditto", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389904313", "createdAt": "2020-03-09T19:12:54Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/spec/features/authentication/user_deletes_account_spec.rb", "diffHunk": "@@ -0,0 +1,44 @@\n+require 'rails_helper'\n+\n+RSpec.feature 'user deletes account' do\n+  let(:user) { create :user }\n+\n+  def user_sign_in\n+    visit new_user_session_path\n+    fill_in 'user_email', with: user.email\n+    fill_in 'user_password', with: '123456'\n+    find('[data-test=\"submit\"]').click\n+    visit edit_user_registration_path\n+  end\n+\n+  context 'when successful' do\n+    scenario 'user inputs correct password' do\n+      user_sign_in\n+      fill_in 'user_password_to_delete', with: '123456'\n+\n+      find('[data-test=\"delete-user-account\"]').click\n+\n+      expect(User.last).not_to be_present\n+    end\n+  end\n+\n+  context 'when unsuccessful' do\n+    scenario 'user inputs incorrect password' do\n+      user_sign_in\n+      fill_in 'user_password_to_delete', with: '3v3ryDayPotato'\n+\n+      find('[data-test=\"delete-user-account\"]').click\n+\n+      expect(User.last).to be_present\n+    end\n+\n+    scenario 'user inputs no password' do\n+      user_sign_in\n+      fill_in 'user_password_to_delete', with: nil\n+\n+      find('[data-test=\"delete-user-account\"]').click\n+\n+      expect(User.last).to be_present", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b2c23d090103fff29fe773964efb877bc8db42"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjIyNjMxOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/users/registrations_controller.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOToxNToyM1rOFz18RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOToxNToyM1rOFz18RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkwNTQ3Nw==", "bodyText": "Because we're in a devise controller, let's use the semantics and behavior the Devise uses to implement the behavior we want. Devise's standard registrations#destroy behavior looks like this:\ndef destroy\n  resource.destroy\n  Devise.sign_out_all_scopes ? sign_out : sign_out(resource_name)\n  set_flash_message! :notice, :destroyed\n  yield resource if block_given?\n  respond_with_navigational(resource){ redirect_to after_sign_out_path_for(resource_name) }\nend\n\nIf we don't follow the logic and semantics used here, we risk missing something important about Devise's default implementation or creating a gotcha that trips us up later.  So let's try something like:\ndef destroy\n  if resource.destroy_with_password(user_params[:password_to_delete])\n    Devise.sign_out_all_scopes ? sign_out : sign_out(resource_name)\n    set_flash_message! :notice, :destroyed\n    yield resource if block_given?\n    respond_with_navigational(resource){ redirect_to after_sign_out_path_for(resource_name) }\n  else\n    respond_with resource # this might take care of the redirect and flash message for us - should test\n  end\nend", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389905477", "createdAt": "2020-03-09T19:15:23Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/controllers/users/registrations_controller.rb", "diffHunk": "@@ -4,6 +4,20 @@ module Users\n   class RegistrationsController < Devise::RegistrationsController\n     include MultiModelLoginHelper\n     skip_before_action :check_user, except: %i[new create]\n+\n+    def destroy\n+      @user = User.find(current_user.id)\n+      if @user.destroy_with_password(user_params[:password_to_delete])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b2c23d090103fff29fe773964efb877bc8db42"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjI4MjIxOnYy", "diffSide": "RIGHT", "path": "dpc-web/spec/features/authentication/user_deletes_account_spec.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTozMzoxMlrOFz2fDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxOTozMzoxMlrOFz2fDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkxNDM4Mg==", "bodyText": "I believe we already have a sign in helper available, so you don't need to define another one here. Instead of this, how about a before block that utilizes the existing method:\nbefore(:each) do\n  sign_in user, scope: :user\n  visit edit_user_registration_path\nend", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r389914382", "createdAt": "2020-03-09T19:33:12Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/spec/features/authentication/user_deletes_account_spec.rb", "diffHunk": "@@ -0,0 +1,44 @@\n+require 'rails_helper'\n+\n+RSpec.feature 'user deletes account' do\n+  let(:user) { create :user }\n+\n+  def user_sign_in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04b2c23d090103fff29fe773964efb877bc8db42"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzc0Mjg0OnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/users/registrations_controller.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjoxNToxNVrOF0-Ueg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOToxOTowMlrOF1FTSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA5MTMyMg==", "bodyText": "Haha. Just curious where this text came from? Not sure if it's in the DPC voice but I could be wrong!", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r391091322", "createdAt": "2020-03-11T16:15:15Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/controllers/users/registrations_controller.rb", "diffHunk": "@@ -4,6 +4,26 @@ module Users\n   class RegistrationsController < Devise::RegistrationsController\n     include MultiModelLoginHelper\n     skip_before_action :check_user, except: %i[new create]\n+\n+    def destroy\n+      @user = User.find(current_user.id)\n+      if resource.destroy_with_password(user_params[:password_to_delete])\n+        Devise.sign_out_all_scopes ? sign_out : sign_out(resource_name)\n+        flash[:notice] = 'Bye! Your account has been successfully cancelled. We hope to see you again soon.'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb47da806a37ab9ede1e16eff0637016e80b6f8"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIwNTcwNA==", "bodyText": "@switzersc-usds that's what the current message in the devise.en.yml file is and what we've been saying to users when they delete their account. Not sure how crucial this language is. \u00af_(\u30c4)_/\u00af", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r391205704", "createdAt": "2020-03-11T19:19:02Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/app/controllers/users/registrations_controller.rb", "diffHunk": "@@ -4,6 +4,26 @@ module Users\n   class RegistrationsController < Devise::RegistrationsController\n     include MultiModelLoginHelper\n     skip_before_action :check_user, except: %i[new create]\n+\n+    def destroy\n+      @user = User.find(current_user.id)\n+      if resource.destroy_with_password(user_params[:password_to_delete])\n+        Devise.sign_out_all_scopes ? sign_out : sign_out(resource_name)\n+        flash[:notice] = 'Bye! Your account has been successfully cancelled. We hope to see you again soon.'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA5MTMyMg=="}, "originalCommit": {"oid": "9fb47da806a37ab9ede1e16eff0637016e80b6f8"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzc0MzYwOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/users/registrations_controller.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjoxNToyOVrOF0-U_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjoxNToyOVrOF0-U_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA5MTQ1NA==", "bodyText": "No longer needed", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r391091454", "createdAt": "2020-03-11T16:15:29Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/controllers/users/registrations_controller.rb", "diffHunk": "@@ -4,6 +4,26 @@ module Users\n   class RegistrationsController < Devise::RegistrationsController\n     include MultiModelLoginHelper\n     skip_before_action :check_user, except: %i[new create]\n+\n+    def destroy\n+      @user = User.find(current_user.id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb47da806a37ab9ede1e16eff0637016e80b6f8"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzc4MzIyOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/controllers/users/registrations_controller.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjoyNDo0OVrOF0-uQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjozNjoxMFrOF0_MgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA5NzkyMA==", "bodyText": "Can we give a more informative error message? Also, did respond_with resource not work here as an alternative to lines 16-7 (setting the flash and doing the redirect explicitly)? Just curious -- if it does work then let's use that, but if it doesn't it'd be useful to know.", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r391097920", "createdAt": "2020-03-11T16:24:49Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/controllers/users/registrations_controller.rb", "diffHunk": "@@ -4,6 +4,26 @@ module Users\n   class RegistrationsController < Devise::RegistrationsController\n     include MultiModelLoginHelper\n     skip_before_action :check_user, except: %i[new create]\n+\n+    def destroy\n+      @user = User.find(current_user.id)\n+      if resource.destroy_with_password(user_params[:password_to_delete])\n+        Devise.sign_out_all_scopes ? sign_out : sign_out(resource_name)\n+        flash[:notice] = 'Bye! Your account has been successfully cancelled. We hope to see you again soon.'\n+        yield resource if block_given?\n+        respond_with_navigational(resource) { redirect_to after_sign_out_path_for(resource_name) }\n+      else\n+        flash[:alert] = 'Account could not be deleted.'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb47da806a37ab9ede1e16eff0637016e80b6f8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwNTY2NQ==", "bodyText": "respond_with resource did not work, it threw this error:", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r391105665", "createdAt": "2020-03-11T16:36:10Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/app/controllers/users/registrations_controller.rb", "diffHunk": "@@ -4,6 +4,26 @@ module Users\n   class RegistrationsController < Devise::RegistrationsController\n     include MultiModelLoginHelper\n     skip_before_action :check_user, except: %i[new create]\n+\n+    def destroy\n+      @user = User.find(current_user.id)\n+      if resource.destroy_with_password(user_params[:password_to_delete])\n+        Devise.sign_out_all_scopes ? sign_out : sign_out(resource_name)\n+        flash[:notice] = 'Bye! Your account has been successfully cancelled. We hope to see you again soon.'\n+        yield resource if block_given?\n+        respond_with_navigational(resource) { redirect_to after_sign_out_path_for(resource_name) }\n+      else\n+        flash[:alert] = 'Account could not be deleted.'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA5NzkyMA=="}, "originalCommit": {"oid": "9fb47da806a37ab9ede1e16eff0637016e80b6f8"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzc5NzgwOnYy", "diffSide": "RIGHT", "path": "dpc-web/spec/features/authentication/user_deletes_account_spec.rb", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjoyODowNlrOF0-3Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNjoyODowNlrOF0-3Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEwMDE3OQ==", "bodyText": "This text isn't what's being set in the controller (Account could not be deleted.). Why is there a difference?", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r391100179", "createdAt": "2020-03-11T16:28:06Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/spec/features/authentication/user_deletes_account_spec.rb", "diffHunk": "@@ -0,0 +1,39 @@\n+require 'rails_helper'\n+\n+RSpec.feature 'user deletes account' do\n+  let(:user) { create :user }\n+\n+  before(:each) do\n+    sign_in user, scope: :user\n+    visit edit_user_registration_path\n+  end\n+\n+  context 'when successful' do\n+    scenario 'user inputs correct password' do\n+      fill_in 'user_password_to_delete', with: '123456'\n+\n+      find('[data-test=\"delete-user-account\"]').click\n+\n+      visit new_user_session_path\n+      expect(page.body).to include('Bye! Your account has been successfully cancelled. We hope to see you again soon.')\n+    end\n+  end\n+\n+  context 'when unsuccessful' do\n+    scenario 'user inputs incorrect password' do\n+      fill_in 'user_password_to_delete', with: '3v3ryDayPotato'\n+\n+      find('[data-test=\"delete-user-account\"]').click\n+\n+      expect(page.body).to include('Your email or password is incorrect')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb47da806a37ab9ede1e16eff0637016e80b6f8"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNDQwOTQwOnYy", "diffSide": "RIGHT", "path": "dpc-web/app/views/devise/registrations/edit.html.erb", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxOTowNjowMlrOF1E5IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDozOTo1MVrOF1ITsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5OTAwOA==", "bodyText": "Can you explain this change?", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r391199008", "createdAt": "2020-03-11T19:06:02Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/views/devise/registrations/edit.html.erb", "diffHunk": "@@ -7,7 +7,7 @@\n       <h1>Edit your info</h1>\n \n       <%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f| %>\n-        <%= render \"devise/shared/error_messages\", resource: resource %>\n+        <%= devise_error_messages! %>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb47da806a37ab9ede1e16eff0637016e80b6f8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTIxMzI2Nw==", "bodyText": "<%= render \"devise/shared/error_messages\", resource: resource %> wasn't displaying any errors, replaced with the functional <%= devise_error_messages! %>", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r391213267", "createdAt": "2020-03-11T19:34:04Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/app/views/devise/registrations/edit.html.erb", "diffHunk": "@@ -7,7 +7,7 @@\n       <h1>Edit your info</h1>\n \n       <%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f| %>\n-        <%= render \"devise/shared/error_messages\", resource: resource %>\n+        <%= devise_error_messages! %>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5OTAwOA=="}, "originalCommit": {"oid": "9fb47da806a37ab9ede1e16eff0637016e80b6f8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1NDk2Mw==", "bodyText": "Interesting. I'm concerned about this change because the shared error messages show the errors for the registration form (e.g. if you leave out a required field) so I think they're pretty important for us to keep. It looks like devise_error_messages! basically does this too, but a) it is being deprecated and b) if it's doing the same thing, then why does this show errors but the other way doesn't?\nInstead of replacing the error messages partial, let's figure out why the message we wanted wasn't showing up and see if we can figure out another way to resolve that.", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r391254963", "createdAt": "2020-03-11T20:39:51Z", "author": {"login": "switzersc-usds"}, "path": "dpc-web/app/views/devise/registrations/edit.html.erb", "diffHunk": "@@ -7,7 +7,7 @@\n       <h1>Edit your info</h1>\n \n       <%= form_for(resource, as: resource_name, url: registration_path(resource_name), html: { method: :put }) do |f| %>\n-        <%= render \"devise/shared/error_messages\", resource: resource %>\n+        <%= devise_error_messages! %>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTE5OTAwOA=="}, "originalCommit": {"oid": "9fb47da806a37ab9ede1e16eff0637016e80b6f8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTAyMjQzOnYy", "diffSide": "RIGHT", "path": "dpc-web/spec/features/authentication/user_deletes_account_spec.rb", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzo1MzowN1rOF2EeEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMzo1MzowN1rOF2EeEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI0MDY1Ng==", "bodyText": "For some reason, the test wouldn't acknowledge \"Current password is blank\" as being present, even though that is what's being shown in addition to 1 error prohibited this user from being saved.", "url": "https://github.com/CMSgov/dpc-app/pull/668#discussion_r392240656", "createdAt": "2020-03-13T13:53:07Z", "author": {"login": "Sun-Mountain"}, "path": "dpc-web/spec/features/authentication/user_deletes_account_spec.rb", "diffHunk": "@@ -0,0 +1,39 @@\n+require 'rails_helper'\n+\n+RSpec.feature 'user deletes account' do\n+  let(:user) { create :user }\n+\n+  before(:each) do\n+    sign_in user, scope: :user\n+    visit edit_user_registration_path\n+  end\n+\n+  context 'when successful' do\n+    scenario 'user inputs correct password' do\n+      fill_in 'user_password_to_delete', with: '123456'\n+\n+      find('[data-test=\"delete-user-account\"]').click\n+\n+      visit new_user_session_path\n+      expect(page.body).to include('Bye! Your account has been successfully cancelled. We hope to see you again soon.')\n+    end\n+  end\n+\n+  context 'when unsuccessful' do\n+    scenario 'user inputs incorrect password' do\n+      fill_in 'user_password_to_delete', with: '3v3ryDayPotato'\n+\n+      find('[data-test=\"delete-user-account\"]').click\n+\n+      expect(page.body).to include('Current password is invalid')\n+    end\n+\n+    scenario 'user inputs no password' do\n+      fill_in 'user_password_to_delete', with: ''\n+\n+      find('[data-test=\"delete-user-account\"]').click\n+\n+      expect(page.body).to include('1 error prohibited this user from being saved')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d15e78ead2602b9ee428f0f40b8aa843b68f4ee2"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4908, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}