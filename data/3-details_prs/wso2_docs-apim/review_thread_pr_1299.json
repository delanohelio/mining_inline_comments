{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NTIwMjg0", "number": 1299, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozNDozOVrOED90VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoyOToyN1rOED_BtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTk0MDA1OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozNDozOVrOGhS9Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozNDozOVrOGhS9Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NjgyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ## Validating JWT generated From external Oauth Provider\n          \n          \n            \n            ## Validating JWTs generated by external OAuth providers", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437566823", "createdAt": "2020-06-09T16:34:39Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTk0NDQ3OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozNTo1M1rOGhTAWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozNTo1M1rOGhTAWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NzU3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n          \n          \n            \n            JWTs generated by an external OAuth provider can be validated by the gateway as per the following diagram.", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437567576", "createdAt": "2020-06-09T16:35:53Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTk0ODk5OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozNzowN1rOGhTDUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozNzowN1rOGhTDUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2ODMzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ### Signature Validation flow.\n          \n          \n            \n            ### Signature validation", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437568339", "createdAt": "2020-06-09T16:37:07Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTk1NDgwOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozODozNlrOGhTG5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozODozNlrOGhTG5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2OTI1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            In order to do the signature validation of jwt, can use one of the following steps.\n          \n          \n            \n            In order to do the signature validation of JWTs, you can use one of the following options.", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437569252", "createdAt": "2020-06-09T16:38:36Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTk2NDA4OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0MTowN1rOGhTMvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0MTowN1rOGhTMvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3MDc1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n          \n          \n            \n            - Import the public certificate into the client-truststore.jks located at `<API-M_HOME>/repository/resources/security/` with the **kid** value of the certificate as the alias.", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437570750", "createdAt": "2020-06-09T16:41:07Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTk3Mzc1OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0Mzo1MVrOGhTS5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0Mzo1MVrOGhTS5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3MjMyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Use JWK endpoint of Oauth Provider.\n          \n          \n            \n            - Use the JWKS endpoint of the OAuth provider.", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437572324", "createdAt": "2020-06-09T16:43:51Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n+\n+- Use JWK endpoint of Oauth Provider.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTk3NTk0OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0NDoyNlrOGhTUPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0NDoyNlrOGhTUPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3MjY3MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n          \n          \n            \n             1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf/` folder.", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437572670", "createdAt": "2020-06-09T16:44:26Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n+\n+- Use JWK endpoint of Oauth Provider.\n+\n+ 1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTk4MDc0OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0NTo0NlrOGhTXWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo0NTo0NlrOGhTXWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU3MzQ2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             2. Add following content under the `[[apim.jwt.issuer]]` for issuer.\n          \n          \n            \n             2. Add the following configuration under the `[[apim.jwt.issuer]]` with the issuer details.", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437573466", "createdAt": "2020-06-09T16:45:46Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n+\n+- Use JWK endpoint of Oauth Provider.\n+\n+ 1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+ 2. Add following content under the `[[apim.jwt.issuer]]` for issuer.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjAyOTAwOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo1ODoyM1rOGhT2Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjo1ODoyM1rOGhT2Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4MTMxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ### Transform JWT Claims\n          \n          \n            \n            ### JWT claim transformation", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437581314", "createdAt": "2020-06-09T16:58:23Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n+\n+- Use JWK endpoint of Oauth Provider.\n+\n+ 1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+ 2. Add following content under the `[[apim.jwt.issuer]]` for issuer.\n+  ```\n+  [[apim.jwt.issuer]]\n+  name = \"<issuer value of jwt>\"\n+  [apim.jwt.issuer.jwks]\n+  url = \"<jwks endpoint of oauth provider>\"\n+  ```\n+\n+### Transform JWT Claims", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjAzODM3OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzowMDo1MlrOGhT8Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzowMDo1MlrOGhT8Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4Mjg4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            By default WSO2 API Manager can convert the JWT claims into desired claims by configuring the claim mapping as per the following steps.\n          \n          \n            \n            In order to convert the incoming JWT claims into desired claims, you can configure the claim mapping as below.", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437582882", "createdAt": "2020-06-09T17:00:52Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n+\n+- Use JWK endpoint of Oauth Provider.\n+\n+ 1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+ 2. Add following content under the `[[apim.jwt.issuer]]` for issuer.\n+  ```\n+  [[apim.jwt.issuer]]\n+  name = \"<issuer value of jwt>\"\n+  [apim.jwt.issuer.jwks]\n+  url = \"<jwks endpoint of oauth provider>\"\n+  ```\n+\n+### Transform JWT Claims\n+\n+By default WSO2 API Manager can convert the JWT claims into desired claims by configuring the claim mapping as per the following steps.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjAzOTMyOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzowMTowOVrOGhT8vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzowMTowOVrOGhT8vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4MzAzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n          \n          \n            \n            1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf/` folder.", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437583037", "createdAt": "2020-06-09T17:01:09Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n+\n+- Use JWK endpoint of Oauth Provider.\n+\n+ 1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+ 2. Add following content under the `[[apim.jwt.issuer]]` for issuer.\n+  ```\n+  [[apim.jwt.issuer]]\n+  name = \"<issuer value of jwt>\"\n+  [apim.jwt.issuer.jwks]\n+  url = \"<jwks endpoint of oauth provider>\"\n+  ```\n+\n+### Transform JWT Claims\n+\n+By default WSO2 API Manager can convert the JWT claims into desired claims by configuring the claim mapping as per the following steps.\n+\n+1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjA1Njc5OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzowNjoxMlrOGhUIKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzowNjo1M1rOGhUJvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTk2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            By Default Claim mapping done in as one to one mapping, If claim mapping needs to be done in advance behaviour, Users can write a JWT transformer that can configure to specific token issuer.\n          \n          \n            \n            By default, the claim mapping is done in a one-to-one manner. But, if the mapping needs to be done in an advanced manner, the users can write custom JWT transformers which can be attached to each token issuer.", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437585960", "createdAt": "2020-06-09T17:06:12Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n+\n+- Use JWK endpoint of Oauth Provider.\n+\n+ 1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+ 2. Add following content under the `[[apim.jwt.issuer]]` for issuer.\n+  ```\n+  [[apim.jwt.issuer]]\n+  name = \"<issuer value of jwt>\"\n+  [apim.jwt.issuer.jwks]\n+  url = \"<jwks endpoint of oauth provider>\"\n+  ```\n+\n+### Transform JWT Claims\n+\n+By default WSO2 API Manager can convert the JWT claims into desired claims by configuring the claim mapping as per the following steps.\n+\n+1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+2. Add the claim mapping as following under the `[[apim.jwt.issuer]]`.\n+  ```\n+  [[apim.jwt.issuer.claim_mapping]]\n+  remote_claim = \"<remote claim value>\"\n+  local_claim = \"<local claim value to map>\"\n+  ....\n+  ```\n+By Default Claim mapping done in as one to one mapping, If claim mapping needs to be done in advance behaviour, Users can write a JWT transformer that can configure to specific token issuer.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NjM2Ng==", "bodyText": "@tharindu1st we need to talk more about or link for more details on how to extend this.", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437586366", "createdAt": "2020-06-09T17:06:53Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n+\n+- Use JWK endpoint of Oauth Provider.\n+\n+ 1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+ 2. Add following content under the `[[apim.jwt.issuer]]` for issuer.\n+  ```\n+  [[apim.jwt.issuer]]\n+  name = \"<issuer value of jwt>\"\n+  [apim.jwt.issuer.jwks]\n+  url = \"<jwks endpoint of oauth provider>\"\n+  ```\n+\n+### Transform JWT Claims\n+\n+By default WSO2 API Manager can convert the JWT claims into desired claims by configuring the claim mapping as per the following steps.\n+\n+1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+2. Add the claim mapping as following under the `[[apim.jwt.issuer]]`.\n+  ```\n+  [[apim.jwt.issuer.claim_mapping]]\n+  remote_claim = \"<remote claim value>\"\n+  local_claim = \"<local claim value to map>\"\n+  ....\n+  ```\n+By Default Claim mapping done in as one to one mapping, If claim mapping needs to be done in advance behaviour, Users can write a JWT transformer that can configure to specific token issuer.\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTk2MA=="}, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjA2MDAwOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzowNzowOVrOGhUKXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzowNzowOVrOGhUKXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NjUyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ### Scope Validation flow\n          \n          \n            \n            ### Scope validation", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437586527", "createdAt": "2020-06-09T17:07:09Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n+\n+- Use JWK endpoint of Oauth Provider.\n+\n+ 1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+ 2. Add following content under the `[[apim.jwt.issuer]]` for issuer.\n+  ```\n+  [[apim.jwt.issuer]]\n+  name = \"<issuer value of jwt>\"\n+  [apim.jwt.issuer.jwks]\n+  url = \"<jwks endpoint of oauth provider>\"\n+  ```\n+\n+### Transform JWT Claims\n+\n+By default WSO2 API Manager can convert the JWT claims into desired claims by configuring the claim mapping as per the following steps.\n+\n+1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+2. Add the claim mapping as following under the `[[apim.jwt.issuer]]`.\n+  ```\n+  [[apim.jwt.issuer.claim_mapping]]\n+  remote_claim = \"<remote claim value>\"\n+  local_claim = \"<local claim value to map>\"\n+  ....\n+  ```\n+By Default Claim mapping done in as one to one mapping, If claim mapping needs to be done in advance behaviour, Users can write a JWT transformer that can configure to specific token issuer.\n+\n+\n+### Scope Validation flow", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjA3MzcyOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoxMToxMFrOGhUTlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoxMToxMFrOGhUTlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4ODg4Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            By default WSO2 API Manager validates the scopes came in JWT in scopes claim. If JWT contains the scopes in a different claim, users need to map the claim into `scope` claim as per [Transform JWT Claims](#transform-jwt-claims).\n          \n          \n            \n            By default, the WSO2 API Manager validates the scopes coming in the `scope` claim of the JWT. If the JWT contains the scopes in a different claim, users can map that claim into the `scope` claim as per [Transform JWT Claims](#transform-jwt-claims) section.", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437588886", "createdAt": "2020-06-09T17:11:10Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n+\n+- Use JWK endpoint of Oauth Provider.\n+\n+ 1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+ 2. Add following content under the `[[apim.jwt.issuer]]` for issuer.\n+  ```\n+  [[apim.jwt.issuer]]\n+  name = \"<issuer value of jwt>\"\n+  [apim.jwt.issuer.jwks]\n+  url = \"<jwks endpoint of oauth provider>\"\n+  ```\n+\n+### Transform JWT Claims\n+\n+By default WSO2 API Manager can convert the JWT claims into desired claims by configuring the claim mapping as per the following steps.\n+\n+1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+2. Add the claim mapping as following under the `[[apim.jwt.issuer]]`.\n+  ```\n+  [[apim.jwt.issuer.claim_mapping]]\n+  remote_claim = \"<remote claim value>\"\n+  local_claim = \"<local claim value to map>\"\n+  ....\n+  ```\n+By Default Claim mapping done in as one to one mapping, If claim mapping needs to be done in advance behaviour, Users can write a JWT transformer that can configure to specific token issuer.\n+\n+\n+### Scope Validation flow\n+\n+By default WSO2 API Manager validates the scopes came in JWT in scopes claim. If JWT contains the scopes in a different claim, users need to map the claim into `scope` claim as per [Transform JWT Claims](#transform-jwt-claims).\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjA3NDQxOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoxMToyMlrOGhUUCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoxMToyMlrOGhUUCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4OTAwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            ### Subscription validation flow.\n          \n          \n            \n            ### Subscription validation", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437589003", "createdAt": "2020-06-09T17:11:22Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n+\n+- Use JWK endpoint of Oauth Provider.\n+\n+ 1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+ 2. Add following content under the `[[apim.jwt.issuer]]` for issuer.\n+  ```\n+  [[apim.jwt.issuer]]\n+  name = \"<issuer value of jwt>\"\n+  [apim.jwt.issuer.jwks]\n+  url = \"<jwks endpoint of oauth provider>\"\n+  ```\n+\n+### Transform JWT Claims\n+\n+By default WSO2 API Manager can convert the JWT claims into desired claims by configuring the claim mapping as per the following steps.\n+\n+1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+2. Add the claim mapping as following under the `[[apim.jwt.issuer]]`.\n+  ```\n+  [[apim.jwt.issuer.claim_mapping]]\n+  remote_claim = \"<remote claim value>\"\n+  local_claim = \"<local claim value to map>\"\n+  ....\n+  ```\n+By Default Claim mapping done in as one to one mapping, If claim mapping needs to be done in advance behaviour, Users can write a JWT transformer that can configure to specific token issuer.\n+\n+\n+### Scope Validation flow\n+\n+By default WSO2 API Manager validates the scopes came in JWT in scopes claim. If JWT contains the scopes in a different claim, users need to map the claim into `scope` claim as per [Transform JWT Claims](#transform-jwt-claims).\n+\n+\n+### Subscription validation flow.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjEzODEzOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoyOToyN1rOGhU9hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoyOToyN1rOGhU9hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5OTYyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            By default WSO2 API Manager doesn't validate subscription against Application if JWT generated from different oauth provider.\n          \n          \n            \n            In order to validate subscriptions, following prerequisites need to be satisfied.\n          \n          \n            \n            \n          \n          \n            \n            1. JWT needs to contain the consumer key of the generated Oauth client application. By Default APIM reads the consumer key from `azp` claim or from `consumerKey` claim. If consumer key claim in a different claim, users need to map the claim into one of the above claim as per [Transform JWT Claims](#transform-jwt-claims).\n          \n          \n            \n            \n          \n          \n            \n            2. Consumer key need to be mapped into the Application by using [Provisioning Out-of-Band OAuth2 Clients]({{base_path}}/learn/api-security/oauth2/provisioning-out-of-band-oauth-clients/#provisioning-out-of-band-oauth2-clients/).\n          \n          \n            \n            \n          \n          \n            \n            Subscription validation from Key manager for JWT can be enabled by going through the following steps.\n          \n          \n            \n            \n          \n          \n            \n            1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n          \n          \n            \n            2. Add the **subscription_validation_via_km** configuration under the `[apim.jwt_authenitcation]`.\n          \n          \n            \n              ```\n          \n          \n            \n              [apim.jwt_authenitcation]\n          \n          \n            \n              subscription_validation_via_km = true\n          \n          \n            \n              ```\n          \n          \n            \n            By default, the WSO2 API Manager does not validate subscriptions if the JWT is generated by an external OAuth provider. In order to enable subscription validation for such JWTs, the following need to be satisfied.\n          \n          \n            \n            \n          \n          \n            \n            1. The JWT needs to have the consumer key of the generated OAuth client application. By default, the API Manager expects the consumer key to be in the `azp` claim or the `consumerKey` claim. If the consumer key comes in a different claim than these 2, the user can map that claim into one of the above 2 claims as per [Transform JWT Claims](#transform-jwt-claims) section.\n          \n          \n            \n            \n          \n          \n            \n            2. The consumer key needs to be mapped to the application. For that, you can use [Provisioning Out-of-Band OAuth2 Clients]({{base_path}}/learn/api-security/oauth2/provisioning-out-of-band-oauth-clients/#provisioning-out-of-band-oauth2-clients/).\n          \n          \n            \n            \n          \n          \n            \n            If you can't satisfy the above requirements but still need subscription validation, the gateway can be configured to connect to the key manager to get the subscription validation done. You can enable that with the following steps.\n          \n          \n            \n            \n          \n          \n            \n            1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf/` folder.\n          \n          \n            \n            2. Add the **subscription_validation_via_km** configuration under the `[apim.jwt_authenitcation]`.\n          \n      \n    \n    \n  \n\n[apim.jwt_authenitcation]\nsubscription_validation_via_km = true", "url": "https://github.com/wso2/docs-apim/pull/1299#discussion_r437599623", "createdAt": "2020-06-09T17:29:27Z", "author": {"login": "bhathiya"}, "path": "en/docs/learn/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -192,4 +192,65 @@ Follow the instructions below to import the public certificate into the client t\n      keytool -import -trustcacerts -keystore client-truststore.jks -alias gateway_certificate_alias -file wso2.crt\n      ```\n \n-5. Enter `wso2carbon` as the default password of the trust store when prompted.\n\\ No newline at end of file\n+5. Enter `wso2carbon` as the default password of the trust store when prompted.\n+\n+## Validating JWT generated From external Oauth Provider\n+\n+JWT generated from an external Oauth provider can validate through Gateway as per the following diagram.\n+\n+### Signature Validation flow.\n+\n+![]({{base_path}}/assets/img/learn/external-jwt-signature-validation.png)\n+\n+In order to do the signature validation of jwt, can use one of the following steps.\n+\n+- Import the public certificate into client-truststore.jks located under `<API-M_HOME>/repository/resources/security/` by using **kid** value as alias of key.\n+\n+- Use JWK endpoint of Oauth Provider.\n+\n+ 1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+ 2. Add following content under the `[[apim.jwt.issuer]]` for issuer.\n+  ```\n+  [[apim.jwt.issuer]]\n+  name = \"<issuer value of jwt>\"\n+  [apim.jwt.issuer.jwks]\n+  url = \"<jwks endpoint of oauth provider>\"\n+  ```\n+\n+### Transform JWT Claims\n+\n+By default WSO2 API Manager can convert the JWT claims into desired claims by configuring the claim mapping as per the following steps.\n+\n+1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+2. Add the claim mapping as following under the `[[apim.jwt.issuer]]`.\n+  ```\n+  [[apim.jwt.issuer.claim_mapping]]\n+  remote_claim = \"<remote claim value>\"\n+  local_claim = \"<local claim value to map>\"\n+  ....\n+  ```\n+By Default Claim mapping done in as one to one mapping, If claim mapping needs to be done in advance behaviour, Users can write a JWT transformer that can configure to specific token issuer.\n+\n+\n+### Scope Validation flow\n+\n+By default WSO2 API Manager validates the scopes came in JWT in scopes claim. If JWT contains the scopes in a different claim, users need to map the claim into `scope` claim as per [Transform JWT Claims](#transform-jwt-claims).\n+\n+\n+### Subscription validation flow.\n+\n+By default WSO2 API Manager doesn't validate subscription against Application if JWT generated from different oauth provider.\n+In order to validate subscriptions, following prerequisites need to be satisfied.\n+\n+1. JWT needs to contain the consumer key of the generated Oauth client application. By Default APIM reads the consumer key from `azp` claim or from `consumerKey` claim. If consumer key claim in a different claim, users need to map the claim into one of the above claim as per [Transform JWT Claims](#transform-jwt-claims).\n+\n+2. Consumer key need to be mapped into the Application by using [Provisioning Out-of-Band OAuth2 Clients]({{base_path}}/learn/api-security/oauth2/provisioning-out-of-band-oauth-clients/#provisioning-out-of-band-oauth2-clients/).\n+\n+Subscription validation from Key manager for JWT can be enabled by going through the following steps.\n+\n+1. Navigate to the `deployment.toml` under the `<API-M_HOME>/repository/conf` folder.\n+2. Add the **subscription_validation_via_km** configuration under the `[apim.jwt_authenitcation]`.\n+  ```\n+  [apim.jwt_authenitcation]\n+  subscription_validation_via_km = true\n+  ```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36635347c2b2f2fe8d3aff78b265793a70b1fc17"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1919, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}