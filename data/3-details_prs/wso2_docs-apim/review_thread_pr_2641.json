{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNTAzNDQ1", "number": 2641, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNzo1Njo1MVrOFID3FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwODowMDoxNFrOFID6mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTk2MTgwOnYy", "diffSide": "RIGHT", "path": "en/docs/design/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNzo1Njo1MVrOIJxx9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwODoyMDozN1rOIJyYJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEyMzcwMw==", "bodyText": "Shall we change to active voice?\nThe gateway itself validates the API requests that are authenticated using the JWT access tokens.", "url": "https://github.com/wso2/docs-apim/pull/2641#discussion_r547123703", "createdAt": "2020-12-22T07:56:51Z", "author": {"login": "isharac"}, "path": "en/docs/design/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -2,9 +2,9 @@\n \n JSON Web Token (JWT) is an open standard of transmitting information securely between two parties. As the tokens are digitally signed, the information is secured. The authentication and authorization process uses JWT access tokens. It is ideal to use JWT access tokens as API credentials because JWT access tokens can carry claims (data) that are used in order to authenticate and authorize requests.\n \n-WSO2 API Manager supports the use of self-contained and signed JWT formatted OAuth2.0 access tokens as API credentials. Therefore, you can use JWT formatted OAuth2.0 access tokens to authenticate any API that is secured using the OAuth2 security scheme. The App Developer can create a `JWT` or `OAuth2.0` application via the Developer Portal, in WSO2 API Manager, in order to subscribe to an API. JWT type applications in WSO2 API Manager uses self-contained signed JWT formatted access tokens.\n+WSO2 API Manager supports the use of self-contained and signed JWT formatted OAuth2.0 access tokens as API credentials. Therefore, you can use JWT formatted OAuth2.0 access tokens to authenticate any API that is secured using the OAuth2 security scheme. The App Developer can create an application via the Developer Portal, in WSO2 API Manager, in order to subscribe to an API. The applications in WSO2 API Manager use self-contained signed JWT formatted access tokens.\n \n-When an API is invoked using a JWT access tokens, the API Gateway validates the request by itself. In the case of regular opaque access tokens, the API Gateway communicates with the Key Manager (in a distributed deployment) to validate the token.\n+When an API is invoked using a JWT access token, the API Gateway validates the request by itself.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eac94b4e6625c8cec42298e9fadd842ba1b4231"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEzMzQ3Ng==", "bodyText": "fixed with 821df28", "url": "https://github.com/wso2/docs-apim/pull/2641#discussion_r547133476", "createdAt": "2020-12-22T08:20:37Z", "author": {"login": "dushaniw"}, "path": "en/docs/design/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -2,9 +2,9 @@\n \n JSON Web Token (JWT) is an open standard of transmitting information securely between two parties. As the tokens are digitally signed, the information is secured. The authentication and authorization process uses JWT access tokens. It is ideal to use JWT access tokens as API credentials because JWT access tokens can carry claims (data) that are used in order to authenticate and authorize requests.\n \n-WSO2 API Manager supports the use of self-contained and signed JWT formatted OAuth2.0 access tokens as API credentials. Therefore, you can use JWT formatted OAuth2.0 access tokens to authenticate any API that is secured using the OAuth2 security scheme. The App Developer can create a `JWT` or `OAuth2.0` application via the Developer Portal, in WSO2 API Manager, in order to subscribe to an API. JWT type applications in WSO2 API Manager uses self-contained signed JWT formatted access tokens.\n+WSO2 API Manager supports the use of self-contained and signed JWT formatted OAuth2.0 access tokens as API credentials. Therefore, you can use JWT formatted OAuth2.0 access tokens to authenticate any API that is secured using the OAuth2 security scheme. The App Developer can create an application via the Developer Portal, in WSO2 API Manager, in order to subscribe to an API. The applications in WSO2 API Manager use self-contained signed JWT formatted access tokens.\n \n-When an API is invoked using a JWT access tokens, the API Gateway validates the request by itself. In the case of regular opaque access tokens, the API Gateway communicates with the Key Manager (in a distributed deployment) to validate the token.\n+When an API is invoked using a JWT access token, the API Gateway validates the request by itself.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEyMzcwMw=="}, "originalCommit": {"oid": "0eac94b4e6625c8cec42298e9fadd842ba1b4231"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTk2ODk5OnYy", "diffSide": "RIGHT", "path": "en/docs/design/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNzo1OToyOFrOIJx18A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNzo1OToyOFrOIJx18A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEyNDcyMA==", "bodyText": "The algorithm which signs the token", "url": "https://github.com/wso2/docs-apim/pull/2641#discussion_r547124720", "createdAt": "2020-12-22T07:59:28Z", "author": {"login": "isharac"}, "path": "en/docs/design/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -30,14 +30,36 @@ The following prerequisites have to be satisfied for JWT based tokens to work.\n The following are the mandatory attributes that are required for a JWT access token.\n \n - `Header`\n-    - `typ` - The type of the token (`JWT`).\n-    - `alg` - The algorithm used to sign the token (e.g., RS256).\n+   <table>\n+      <tbody>\n+         <tr>\n+            <td>`alg`</td>\n+            <td>The algorithm used to sign the token (e.g., RS256).</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eac94b4e6625c8cec42298e9fadd842ba1b4231"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTk3MDgwOnYy", "diffSide": "RIGHT", "path": "en/docs/design/api-security/oauth2/access-token-types/jwt-tokens.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwODowMDoxNFrOIJx3Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwODoyMDoyMlrOIJyXwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEyNTAwNg==", "bodyText": "Token issued time", "url": "https://github.com/wso2/docs-apim/pull/2641#discussion_r547125006", "createdAt": "2020-12-22T08:00:14Z", "author": {"login": "isharac"}, "path": "en/docs/design/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -30,14 +30,36 @@ The following prerequisites have to be satisfied for JWT based tokens to work.\n The following are the mandatory attributes that are required for a JWT access token.\n \n - `Header`\n-    - `typ` - The type of the token (`JWT`).\n-    - `alg` - The algorithm used to sign the token (e.g., RS256).\n+   <table>\n+      <tbody>\n+         <tr>\n+            <td>`alg`</td>\n+            <td>The algorithm used to sign the token (e.g., RS256).</td>\n+         </tr>\n+      </tbody>\n+   </table>\n+\n - `Payload`\n-    - `sub` - The subject of the token, which identifies as to whom the token refers to.\n-    - `application` - Application for which the token is generated.\n-    - `consumerKey`\n-    - `iat` - The time the token was issued.\n-    - `exp` - The expiry time of the token.\n+   <table>\n+      <tbody>\n+         <tr>\n+            <td>`sub`</td>\n+            <td>The subject of the token, which identifies as to whom the token refers to.</td>\n+         </tr>\n+         <tr>\n+            <td>`iat`</td>\n+            <td>The time the token was issued.</td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0eac94b4e6625c8cec42298e9fadd842ba1b4231"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEzMzM3Nw==", "bodyText": "fixed with 821df28", "url": "https://github.com/wso2/docs-apim/pull/2641#discussion_r547133377", "createdAt": "2020-12-22T08:20:22Z", "author": {"login": "dushaniw"}, "path": "en/docs/design/api-security/oauth2/access-token-types/jwt-tokens.md", "diffHunk": "@@ -30,14 +30,36 @@ The following prerequisites have to be satisfied for JWT based tokens to work.\n The following are the mandatory attributes that are required for a JWT access token.\n \n - `Header`\n-    - `typ` - The type of the token (`JWT`).\n-    - `alg` - The algorithm used to sign the token (e.g., RS256).\n+   <table>\n+      <tbody>\n+         <tr>\n+            <td>`alg`</td>\n+            <td>The algorithm used to sign the token (e.g., RS256).</td>\n+         </tr>\n+      </tbody>\n+   </table>\n+\n - `Payload`\n-    - `sub` - The subject of the token, which identifies as to whom the token refers to.\n-    - `application` - Application for which the token is generated.\n-    - `consumerKey`\n-    - `iat` - The time the token was issued.\n-    - `exp` - The expiry time of the token.\n+   <table>\n+      <tbody>\n+         <tr>\n+            <td>`sub`</td>\n+            <td>The subject of the token, which identifies as to whom the token refers to.</td>\n+         </tr>\n+         <tr>\n+            <td>`iat`</td>\n+            <td>The time the token was issued.</td>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzEyNTAwNg=="}, "originalCommit": {"oid": "0eac94b4e6625c8cec42298e9fadd842ba1b4231"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1719, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}