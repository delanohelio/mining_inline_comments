{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxOTQ1MDE1", "number": 1024, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNToxNzo0MlrODwxpZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNToxNzo0MlrODwxpZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDcxNjUzOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/importing-apis-via-dev-first-approach.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNToxNzo0MlrOGD9Wwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNToyNTo1NlrOGD9lHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgwNDE2Mg==", "bodyText": "Shall we change the small typo \"biniding\" to \"binding\" here?", "url": "https://github.com/wso2/docs-apim/pull/1024#discussion_r406804162", "createdAt": "2020-04-10T15:17:42Z", "author": {"login": "wasuradananjith"}, "path": "en/docs/learn/api-controller/importing-apis-via-dev-first-approach.md", "diffHunk": "@@ -86,6 +86,57 @@ WSO2 API Controller, **apictl** allows to create and deploy APIs without using W\n                         `--oas` : Provide an OpenAPI specification file/URL for the API   \n                         `--force` or `-f` : To overwrite directory and create project \n \n+        !!! note\n+            You can define scopes for a resource when defining a Swagger2 or OpenAPI3 specification to generate an API.\n+\n+            !!! example\n+                ```yaml\n+                openapi: 3.0.0\n+                info:\n+                title: Online-Store\n+                version: v1.0.0\n+                description: This API contains operations related to online shopping store.\n+                x-wso2-basePath: /store/{version}\n+                x-wso2-production-endpoints:\n+                urls:\n+                    - http://products\n+                paths:\n+                /products:\n+                    get:\n+                    responses:\n+                        \"200\":\n+                        description: successful operation\n+                /products/{productId}:\n+                    get:\n+                    parameters:\n+                        - name: productId\n+                        in: path\n+                        required: true\n+                        schema:\n+                            type: string\n+                    security: \n+                        - \n+                        default: \n+                            - \"products:read\"\n+                    responses:\n+                        \"200\":\n+                        description: successful operation\n+                components: \n+                securitySchemes: \n+                    default: \n+                    type: \"oauth2\"\n+                    flows: \n+                        implicit: \n+                        authorizationUrl: \"https://test.com\"\n+                        scopes: \n+                            products:read: \"\"\n+                        x-scopes-bindings: \n+                            products:read: \"admin\"\n+                ```\n+\n+            You need to first define the scope name (products:read) under `security > default` section inside the required resource and then define the role biniding under the `securitySchemes` section.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31c509dad152a41fbe58b56363d27e3775656f05"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgwNzgzNg==", "bodyText": "done", "url": "https://github.com/wso2/docs-apim/pull/1024#discussion_r406807836", "createdAt": "2020-04-10T15:25:56Z", "author": {"login": "npamudika"}, "path": "en/docs/learn/api-controller/importing-apis-via-dev-first-approach.md", "diffHunk": "@@ -86,6 +86,57 @@ WSO2 API Controller, **apictl** allows to create and deploy APIs without using W\n                         `--oas` : Provide an OpenAPI specification file/URL for the API   \n                         `--force` or `-f` : To overwrite directory and create project \n \n+        !!! note\n+            You can define scopes for a resource when defining a Swagger2 or OpenAPI3 specification to generate an API.\n+\n+            !!! example\n+                ```yaml\n+                openapi: 3.0.0\n+                info:\n+                title: Online-Store\n+                version: v1.0.0\n+                description: This API contains operations related to online shopping store.\n+                x-wso2-basePath: /store/{version}\n+                x-wso2-production-endpoints:\n+                urls:\n+                    - http://products\n+                paths:\n+                /products:\n+                    get:\n+                    responses:\n+                        \"200\":\n+                        description: successful operation\n+                /products/{productId}:\n+                    get:\n+                    parameters:\n+                        - name: productId\n+                        in: path\n+                        required: true\n+                        schema:\n+                            type: string\n+                    security: \n+                        - \n+                        default: \n+                            - \"products:read\"\n+                    responses:\n+                        \"200\":\n+                        description: successful operation\n+                components: \n+                securitySchemes: \n+                    default: \n+                    type: \"oauth2\"\n+                    flows: \n+                        implicit: \n+                        authorizationUrl: \"https://test.com\"\n+                        scopes: \n+                            products:read: \"\"\n+                        x-scopes-bindings: \n+                            products:read: \"admin\"\n+                ```\n+\n+            You need to first define the scope name (products:read) under `security > default` section inside the required resource and then define the role biniding under the `securitySchemes` section.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgwNDE2Mg=="}, "originalCommit": {"oid": "31c509dad152a41fbe58b56363d27e3775656f05"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1989, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}