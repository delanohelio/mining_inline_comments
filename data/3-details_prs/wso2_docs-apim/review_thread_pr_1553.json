{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NjUwMjcy", "number": 1553, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMToyNDo0NVrOEQzS2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTo1OTo1NlrOEQ5pWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDUzMDgxOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/design-api/test-api/test-an-api.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMToyNDo0NVrOG1KVKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTozMzoyOFrOG1TU_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5Njk3MQ==", "bodyText": "for accessibility of the subscribers -> for subscribers to access.", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458396971", "createdAt": "2020-07-21T21:24:45Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0NDM4MA==", "bodyText": "Fixed", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458544380", "createdAt": "2020-07-22T05:33:28Z", "author": {"login": "hasuniea"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM5Njk3MQ=="}, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MDY3NDMxOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/design-api/test-api/test-an-api.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMjoxMTo1M1rOG1LqVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTozMzozOFrOG1TVKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQxODc3NA==", "bodyText": "such as checking mediation policy, validating that the request is sent to the back-end and a proper responses is receieved as expected, request/response schema validation, and making sure that the API resources are defined correctly.", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458418774", "createdAt": "2020-07-21T22:11:53Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0NDQyNg==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458544426", "createdAt": "2020-07-22T05:33:38Z", "author": {"login": "hasuniea"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODQxODc3NA=="}, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTI2NDk2OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/design-api/test-api/test-an-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzowNzoyMVrOG1RCqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwMzowNzoyMVrOG1RCqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUwNjkyMw==", "bodyText": "Wouldn't it be better if this doc was inside Create API?", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458506923", "createdAt": "2020-07-22T03:07:21Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTM2ODY3OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/design-api/test-api/test-an-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDowOTowN1rOG1R-ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDowOTowN1rOG1R-ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMjI3MA==", "bodyText": "The Test Console menu item in the Publisher portal's left navigation menu can be used to initialize", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458522270", "createdAt": "2020-07-22T04:09:07Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end\n+and the proper responses are received, request/response schema validation and check whether the API resources are defined as expected.\n+\n+The **Test Console** menu/option in the Publisher portal's API details page can be used to initialize the test at the design phase. Once the developer initiates the test by clicking on the initialize test button, the API is transformed to the prototype(testing)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTM3MzYxOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/design-api/test-api/test-an-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoxMjowM1rOG1SBYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoxMjowM1rOG1SBYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMjk3Nw==", "bodyText": "since this sentence \"The list of APIs in the API Publisher appears\" is duplicated, shall we remove it here?", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458522977", "createdAt": "2020-07-22T04:12:03Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end\n+and the proper responses are received, request/response schema validation and check whether the API resources are defined as expected.\n+\n+The **Test Console** menu/option in the Publisher portal's API details page can be used to initialize the test at the design phase. Once the developer initiates the test by clicking on the initialize test button, the API is transformed to the prototype(testing)\n+state and the swagger console is populated with a test-key(token) which prevents the unauthorized users accessing the particular API.\n+\n+If the API is in the created lifecycle state, the developer can initialize the test.\n+\n+!!! Note\n+    We don't allow testing for the APIs that are in publish state.Hence API developer/publisher has to demote the API to prototype/created\n+    state.\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-publishstate.png)\n+\n+Let's see how to use the Publisher test Console to test an API.\n+\n+The examples here use the `PizzaShack` REST API, which was created in [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) .\n+\n+1.  Sign in to the API Publisher `https://<hostname>:9443/publisher` (e.g., `https://localhost:9443/publisher` ). Upon signing in, the list of APIs in the API Publisher is listed. Please refer [create an API guide](/learn/design-api/create-api/create-a-rest-api/) to create a new API.\n+\n+     The list of APIs in the API Publisher appears. If there are no APIs created, [create an API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) before starting.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTM3NDExOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/design-api/test-api/test-an-api.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoxMjoyNFrOG1SBqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTozNjoyMVrOG1TYrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzA1MA==", "bodyText": "why are we using HTML tags?", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458523050", "createdAt": "2020-07-22T04:12:24Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end\n+and the proper responses are received, request/response schema validation and check whether the API resources are defined as expected.\n+\n+The **Test Console** menu/option in the Publisher portal's API details page can be used to initialize the test at the design phase. Once the developer initiates the test by clicking on the initialize test button, the API is transformed to the prototype(testing)\n+state and the swagger console is populated with a test-key(token) which prevents the unauthorized users accessing the particular API.\n+\n+If the API is in the created lifecycle state, the developer can initialize the test.\n+\n+!!! Note\n+    We don't allow testing for the APIs that are in publish state.Hence API developer/publisher has to demote the API to prototype/created\n+    state.\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-publishstate.png)\n+\n+Let's see how to use the Publisher test Console to test an API.\n+\n+The examples here use the `PizzaShack` REST API, which was created in [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) .\n+\n+1.  Sign in to the API Publisher `https://<hostname>:9443/publisher` (e.g., `https://localhost:9443/publisher` ). Upon signing in, the list of APIs in the API Publisher is listed. Please refer [create an API guide](/learn/design-api/create-api/create-a-rest-api/) to create a new API.\n+\n+     The list of APIs in the API Publisher appears. If there are no APIs created, [create an API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) before starting.\n+\n+2.  Click on an API that is in the **CREATED** state.\n+\n+     <img src=\"{{base_path}}/assets/img/learn/select-created-api.png\" alt=\"Select API\" title=\"Select API\" width=\"35%\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0NTMyNQ==", "bodyText": "The existing picture is too large hence remain as it is.", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458545325", "createdAt": "2020-07-22T05:36:21Z", "author": {"login": "hasuniea"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end\n+and the proper responses are received, request/response schema validation and check whether the API resources are defined as expected.\n+\n+The **Test Console** menu/option in the Publisher portal's API details page can be used to initialize the test at the design phase. Once the developer initiates the test by clicking on the initialize test button, the API is transformed to the prototype(testing)\n+state and the swagger console is populated with a test-key(token) which prevents the unauthorized users accessing the particular API.\n+\n+If the API is in the created lifecycle state, the developer can initialize the test.\n+\n+!!! Note\n+    We don't allow testing for the APIs that are in publish state.Hence API developer/publisher has to demote the API to prototype/created\n+    state.\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-publishstate.png)\n+\n+Let's see how to use the Publisher test Console to test an API.\n+\n+The examples here use the `PizzaShack` REST API, which was created in [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) .\n+\n+1.  Sign in to the API Publisher `https://<hostname>:9443/publisher` (e.g., `https://localhost:9443/publisher` ). Upon signing in, the list of APIs in the API Publisher is listed. Please refer [create an API guide](/learn/design-api/create-api/create-a-rest-api/) to create a new API.\n+\n+     The list of APIs in the API Publisher appears. If there are no APIs created, [create an API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) before starting.\n+\n+2.  Click on an API that is in the **CREATED** state.\n+\n+     <img src=\"{{base_path}}/assets/img/learn/select-created-api.png\" alt=\"Select API\" title=\"Select API\" width=\"35%\" />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzA1MA=="}, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTM3NDQ5OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/design-api/test-api/test-an-api.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoxMjo0M1rOG1SB5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoxMjo0M1rOG1SB5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzExMQ==", "bodyText": "click Test Console on the left navigation menu.", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458523111", "createdAt": "2020-07-22T04:12:43Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end\n+and the proper responses are received, request/response schema validation and check whether the API resources are defined as expected.\n+\n+The **Test Console** menu/option in the Publisher portal's API details page can be used to initialize the test at the design phase. Once the developer initiates the test by clicking on the initialize test button, the API is transformed to the prototype(testing)\n+state and the swagger console is populated with a test-key(token) which prevents the unauthorized users accessing the particular API.\n+\n+If the API is in the created lifecycle state, the developer can initialize the test.\n+\n+!!! Note\n+    We don't allow testing for the APIs that are in publish state.Hence API developer/publisher has to demote the API to prototype/created\n+    state.\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-publishstate.png)\n+\n+Let's see how to use the Publisher test Console to test an API.\n+\n+The examples here use the `PizzaShack` REST API, which was created in [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) .\n+\n+1.  Sign in to the API Publisher `https://<hostname>:9443/publisher` (e.g., `https://localhost:9443/publisher` ). Upon signing in, the list of APIs in the API Publisher is listed. Please refer [create an API guide](/learn/design-api/create-api/create-a-rest-api/) to create a new API.\n+\n+     The list of APIs in the API Publisher appears. If there are no APIs created, [create an API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) before starting.\n+\n+2.  Click on an API that is in the **CREATED** state.\n+\n+     <img src=\"{{base_path}}/assets/img/learn/select-created-api.png\" alt=\"Select API\" title=\"Select API\" width=\"35%\" />\n+\n+3.  Click **Test Console**.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTM3NTM2OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/design-api/test-api/test-an-api.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoxMzoxNlrOG1SCdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoxNDowNVrOG1SDVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzI1NQ==", "bodyText": "generated -> generate", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458523255", "createdAt": "2020-07-22T04:13:16Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end\n+and the proper responses are received, request/response schema validation and check whether the API resources are defined as expected.\n+\n+The **Test Console** menu/option in the Publisher portal's API details page can be used to initialize the test at the design phase. Once the developer initiates the test by clicking on the initialize test button, the API is transformed to the prototype(testing)\n+state and the swagger console is populated with a test-key(token) which prevents the unauthorized users accessing the particular API.\n+\n+If the API is in the created lifecycle state, the developer can initialize the test.\n+\n+!!! Note\n+    We don't allow testing for the APIs that are in publish state.Hence API developer/publisher has to demote the API to prototype/created\n+    state.\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-publishstate.png)\n+\n+Let's see how to use the Publisher test Console to test an API.\n+\n+The examples here use the `PizzaShack` REST API, which was created in [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) .\n+\n+1.  Sign in to the API Publisher `https://<hostname>:9443/publisher` (e.g., `https://localhost:9443/publisher` ). Upon signing in, the list of APIs in the API Publisher is listed. Please refer [create an API guide](/learn/design-api/create-api/create-a-rest-api/) to create a new API.\n+\n+     The list of APIs in the API Publisher appears. If there are no APIs created, [create an API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) before starting.\n+\n+2.  Click on an API that is in the **CREATED** state.\n+\n+     <img src=\"{{base_path}}/assets/img/learn/select-created-api.png\" alt=\"Select API\" title=\"Select API\" width=\"35%\" />\n+\n+3.  Click **Test Console**.\n+\n+     ![]({{base_path}}/assets/img/learn/publisher-testconsole-createdstate.png)\n+\n+4.  Click on  the **Initiate Test**  button. This will open the swagger UI(API Console) to test the PizzaShack API before publish to the subscribers.\n+\n+      ![]({{base_path}}/assets/img/learn/publisher-testconsole-swaggerconsole.png)\n+\n+5.  Expand the POST  method and click Try it out. It will generated the **test-key** to invoke the API. Then click on execute as follows.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzQ3Nw==", "bodyText": "Then click on execute as follows. -> click Execute.", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458523477", "createdAt": "2020-07-22T04:14:05Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end\n+and the proper responses are received, request/response schema validation and check whether the API resources are defined as expected.\n+\n+The **Test Console** menu/option in the Publisher portal's API details page can be used to initialize the test at the design phase. Once the developer initiates the test by clicking on the initialize test button, the API is transformed to the prototype(testing)\n+state and the swagger console is populated with a test-key(token) which prevents the unauthorized users accessing the particular API.\n+\n+If the API is in the created lifecycle state, the developer can initialize the test.\n+\n+!!! Note\n+    We don't allow testing for the APIs that are in publish state.Hence API developer/publisher has to demote the API to prototype/created\n+    state.\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-publishstate.png)\n+\n+Let's see how to use the Publisher test Console to test an API.\n+\n+The examples here use the `PizzaShack` REST API, which was created in [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) .\n+\n+1.  Sign in to the API Publisher `https://<hostname>:9443/publisher` (e.g., `https://localhost:9443/publisher` ). Upon signing in, the list of APIs in the API Publisher is listed. Please refer [create an API guide](/learn/design-api/create-api/create-a-rest-api/) to create a new API.\n+\n+     The list of APIs in the API Publisher appears. If there are no APIs created, [create an API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) before starting.\n+\n+2.  Click on an API that is in the **CREATED** state.\n+\n+     <img src=\"{{base_path}}/assets/img/learn/select-created-api.png\" alt=\"Select API\" title=\"Select API\" width=\"35%\" />\n+\n+3.  Click **Test Console**.\n+\n+     ![]({{base_path}}/assets/img/learn/publisher-testconsole-createdstate.png)\n+\n+4.  Click on  the **Initiate Test**  button. This will open the swagger UI(API Console) to test the PizzaShack API before publish to the subscribers.\n+\n+      ![]({{base_path}}/assets/img/learn/publisher-testconsole-swaggerconsole.png)\n+\n+5.  Expand the POST  method and click Try it out. It will generated the **test-key** to invoke the API. Then click on execute as follows.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzI1NQ=="}, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTM3ODI5OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/design-api/test-api/test-an-api.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoxNDo1MlrOG1SEHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTozNDo0NFrOG1TWeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzY3Nw==", "bodyText": "if an API developer initiates a test, the swagger console will be automatically populated with the generated test-key.", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458523677", "createdAt": "2020-07-22T04:14:52Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end\n+and the proper responses are received, request/response schema validation and check whether the API resources are defined as expected.\n+\n+The **Test Console** menu/option in the Publisher portal's API details page can be used to initialize the test at the design phase. Once the developer initiates the test by clicking on the initialize test button, the API is transformed to the prototype(testing)\n+state and the swagger console is populated with a test-key(token) which prevents the unauthorized users accessing the particular API.\n+\n+If the API is in the created lifecycle state, the developer can initialize the test.\n+\n+!!! Note\n+    We don't allow testing for the APIs that are in publish state.Hence API developer/publisher has to demote the API to prototype/created\n+    state.\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-publishstate.png)\n+\n+Let's see how to use the Publisher test Console to test an API.\n+\n+The examples here use the `PizzaShack` REST API, which was created in [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) .\n+\n+1.  Sign in to the API Publisher `https://<hostname>:9443/publisher` (e.g., `https://localhost:9443/publisher` ). Upon signing in, the list of APIs in the API Publisher is listed. Please refer [create an API guide](/learn/design-api/create-api/create-a-rest-api/) to create a new API.\n+\n+     The list of APIs in the API Publisher appears. If there are no APIs created, [create an API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) before starting.\n+\n+2.  Click on an API that is in the **CREATED** state.\n+\n+     <img src=\"{{base_path}}/assets/img/learn/select-created-api.png\" alt=\"Select API\" title=\"Select API\" width=\"35%\" />\n+\n+3.  Click **Test Console**.\n+\n+     ![]({{base_path}}/assets/img/learn/publisher-testconsole-createdstate.png)\n+\n+4.  Click on  the **Initiate Test**  button. This will open the swagger UI(API Console) to test the PizzaShack API before publish to the subscribers.\n+\n+      ![]({{base_path}}/assets/img/learn/publisher-testconsole-swaggerconsole.png)\n+\n+5.  Expand the POST  method and click Try it out. It will generated the **test-key** to invoke the API. Then click on execute as follows.\n+\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-testkey.png)\n+\n+    !!! tip\n+            **test-key token**\n+\n+            If API developer initiate a test, the swagger console will be automatically populated with the generated **test-key**. If you try the test api call through the terminal or command line, make sure you copy the generated test-key.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0NDc2MA==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458544760", "createdAt": "2020-07-22T05:34:44Z", "author": {"login": "hasuniea"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end\n+and the proper responses are received, request/response schema validation and check whether the API resources are defined as expected.\n+\n+The **Test Console** menu/option in the Publisher portal's API details page can be used to initialize the test at the design phase. Once the developer initiates the test by clicking on the initialize test button, the API is transformed to the prototype(testing)\n+state and the swagger console is populated with a test-key(token) which prevents the unauthorized users accessing the particular API.\n+\n+If the API is in the created lifecycle state, the developer can initialize the test.\n+\n+!!! Note\n+    We don't allow testing for the APIs that are in publish state.Hence API developer/publisher has to demote the API to prototype/created\n+    state.\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-publishstate.png)\n+\n+Let's see how to use the Publisher test Console to test an API.\n+\n+The examples here use the `PizzaShack` REST API, which was created in [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) .\n+\n+1.  Sign in to the API Publisher `https://<hostname>:9443/publisher` (e.g., `https://localhost:9443/publisher` ). Upon signing in, the list of APIs in the API Publisher is listed. Please refer [create an API guide](/learn/design-api/create-api/create-a-rest-api/) to create a new API.\n+\n+     The list of APIs in the API Publisher appears. If there are no APIs created, [create an API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) before starting.\n+\n+2.  Click on an API that is in the **CREATED** state.\n+\n+     <img src=\"{{base_path}}/assets/img/learn/select-created-api.png\" alt=\"Select API\" title=\"Select API\" width=\"35%\" />\n+\n+3.  Click **Test Console**.\n+\n+     ![]({{base_path}}/assets/img/learn/publisher-testconsole-createdstate.png)\n+\n+4.  Click on  the **Initiate Test**  button. This will open the swagger UI(API Console) to test the PizzaShack API before publish to the subscribers.\n+\n+      ![]({{base_path}}/assets/img/learn/publisher-testconsole-swaggerconsole.png)\n+\n+5.  Expand the POST  method and click Try it out. It will generated the **test-key** to invoke the API. Then click on execute as follows.\n+\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-testkey.png)\n+\n+    !!! tip\n+            **test-key token**\n+\n+            If API developer initiate a test, the swagger console will be automatically populated with the generated **test-key**. If you try the test api call through the terminal or command line, make sure you copy the generated test-key.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzY3Nw=="}, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTM3OTIzOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/design-api/test-api/test-an-api.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoxNToxOFrOG1SEnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTozNDoyOVrOG1TWLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzgwNA==", "bodyText": "test-> tested", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458523804", "createdAt": "2020-07-22T04:15:18Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end\n+and the proper responses are received, request/response schema validation and check whether the API resources are defined as expected.\n+\n+The **Test Console** menu/option in the Publisher portal's API details page can be used to initialize the test at the design phase. Once the developer initiates the test by clicking on the initialize test button, the API is transformed to the prototype(testing)\n+state and the swagger console is populated with a test-key(token) which prevents the unauthorized users accessing the particular API.\n+\n+If the API is in the created lifecycle state, the developer can initialize the test.\n+\n+!!! Note\n+    We don't allow testing for the APIs that are in publish state.Hence API developer/publisher has to demote the API to prototype/created\n+    state.\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-publishstate.png)\n+\n+Let's see how to use the Publisher test Console to test an API.\n+\n+The examples here use the `PizzaShack` REST API, which was created in [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) .\n+\n+1.  Sign in to the API Publisher `https://<hostname>:9443/publisher` (e.g., `https://localhost:9443/publisher` ). Upon signing in, the list of APIs in the API Publisher is listed. Please refer [create an API guide](/learn/design-api/create-api/create-a-rest-api/) to create a new API.\n+\n+     The list of APIs in the API Publisher appears. If there are no APIs created, [create an API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) before starting.\n+\n+2.  Click on an API that is in the **CREATED** state.\n+\n+     <img src=\"{{base_path}}/assets/img/learn/select-created-api.png\" alt=\"Select API\" title=\"Select API\" width=\"35%\" />\n+\n+3.  Click **Test Console**.\n+\n+     ![]({{base_path}}/assets/img/learn/publisher-testconsole-createdstate.png)\n+\n+4.  Click on  the **Initiate Test**  button. This will open the swagger UI(API Console) to test the PizzaShack API before publish to the subscribers.\n+\n+      ![]({{base_path}}/assets/img/learn/publisher-testconsole-swaggerconsole.png)\n+\n+5.  Expand the POST  method and click Try it out. It will generated the **test-key** to invoke the API. Then click on execute as follows.\n+\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-testkey.png)\n+\n+    !!! tip\n+            **test-key token**\n+\n+            If API developer initiate a test, the swagger console will be automatically populated with the generated **test-key**. If you try the test api call through the terminal or command line, make sure you copy the generated test-key.\n+\n+\n+You have now successfully test an API using the publisher test Console. Now you can publish the API to the gateway.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzkyMA==", "bodyText": "There are multiple empty lines. Can we elminate the unnecessary ones?", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458523920", "createdAt": "2020-07-22T04:15:48Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end\n+and the proper responses are received, request/response schema validation and check whether the API resources are defined as expected.\n+\n+The **Test Console** menu/option in the Publisher portal's API details page can be used to initialize the test at the design phase. Once the developer initiates the test by clicking on the initialize test button, the API is transformed to the prototype(testing)\n+state and the swagger console is populated with a test-key(token) which prevents the unauthorized users accessing the particular API.\n+\n+If the API is in the created lifecycle state, the developer can initialize the test.\n+\n+!!! Note\n+    We don't allow testing for the APIs that are in publish state.Hence API developer/publisher has to demote the API to prototype/created\n+    state.\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-publishstate.png)\n+\n+Let's see how to use the Publisher test Console to test an API.\n+\n+The examples here use the `PizzaShack` REST API, which was created in [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) .\n+\n+1.  Sign in to the API Publisher `https://<hostname>:9443/publisher` (e.g., `https://localhost:9443/publisher` ). Upon signing in, the list of APIs in the API Publisher is listed. Please refer [create an API guide](/learn/design-api/create-api/create-a-rest-api/) to create a new API.\n+\n+     The list of APIs in the API Publisher appears. If there are no APIs created, [create an API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) before starting.\n+\n+2.  Click on an API that is in the **CREATED** state.\n+\n+     <img src=\"{{base_path}}/assets/img/learn/select-created-api.png\" alt=\"Select API\" title=\"Select API\" width=\"35%\" />\n+\n+3.  Click **Test Console**.\n+\n+     ![]({{base_path}}/assets/img/learn/publisher-testconsole-createdstate.png)\n+\n+4.  Click on  the **Initiate Test**  button. This will open the swagger UI(API Console) to test the PizzaShack API before publish to the subscribers.\n+\n+      ![]({{base_path}}/assets/img/learn/publisher-testconsole-swaggerconsole.png)\n+\n+5.  Expand the POST  method and click Try it out. It will generated the **test-key** to invoke the API. Then click on execute as follows.\n+\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-testkey.png)\n+\n+    !!! tip\n+            **test-key token**\n+\n+            If API developer initiate a test, the swagger console will be automatically populated with the generated **test-key**. If you try the test api call through the terminal or command line, make sure you copy the generated test-key.\n+\n+\n+You have now successfully test an API using the publisher test Console. Now you can publish the API to the gateway.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzgwNA=="}, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0NDY4Ng==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458544686", "createdAt": "2020-07-22T05:34:29Z", "author": {"login": "hasuniea"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console\n+\n+**Testing APIs** is trying out the APIs at the publisher itself and make sure whether the functionalities and behaviours are  met before publishing to the gateway for accessibility of the subscribers.\n+\n+Only the API developers (creator, publisher) are allowed to test the APIs through the test console. The developers can do the basic functional tests such as the mediation policies, make sure whether the request goes as expected to the back-end\n+and the proper responses are received, request/response schema validation and check whether the API resources are defined as expected.\n+\n+The **Test Console** menu/option in the Publisher portal's API details page can be used to initialize the test at the design phase. Once the developer initiates the test by clicking on the initialize test button, the API is transformed to the prototype(testing)\n+state and the swagger console is populated with a test-key(token) which prevents the unauthorized users accessing the particular API.\n+\n+If the API is in the created lifecycle state, the developer can initialize the test.\n+\n+!!! Note\n+    We don't allow testing for the APIs that are in publish state.Hence API developer/publisher has to demote the API to prototype/created\n+    state.\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-publishstate.png)\n+\n+Let's see how to use the Publisher test Console to test an API.\n+\n+The examples here use the `PizzaShack` REST API, which was created in [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) .\n+\n+1.  Sign in to the API Publisher `https://<hostname>:9443/publisher` (e.g., `https://localhost:9443/publisher` ). Upon signing in, the list of APIs in the API Publisher is listed. Please refer [create an API guide](/learn/design-api/create-api/create-a-rest-api/) to create a new API.\n+\n+     The list of APIs in the API Publisher appears. If there are no APIs created, [create an API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/) before starting.\n+\n+2.  Click on an API that is in the **CREATED** state.\n+\n+     <img src=\"{{base_path}}/assets/img/learn/select-created-api.png\" alt=\"Select API\" title=\"Select API\" width=\"35%\" />\n+\n+3.  Click **Test Console**.\n+\n+     ![]({{base_path}}/assets/img/learn/publisher-testconsole-createdstate.png)\n+\n+4.  Click on  the **Initiate Test**  button. This will open the swagger UI(API Console) to test the PizzaShack API before publish to the subscribers.\n+\n+      ![]({{base_path}}/assets/img/learn/publisher-testconsole-swaggerconsole.png)\n+\n+5.  Expand the POST  method and click Try it out. It will generated the **test-key** to invoke the API. Then click on execute as follows.\n+\n+    ![]({{base_path}}/assets/img/learn/publisher-testconsole-testkey.png)\n+\n+    !!! tip\n+            **test-key token**\n+\n+            If API developer initiate a test, the swagger console will be automatically populated with the generated **test-key**. If you try the test api call through the terminal or command line, make sure you copy the generated test-key.\n+\n+\n+You have now successfully test an API using the publisher test Console. Now you can publish the API to the gateway.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzgwNA=="}, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTM4MDUwOnYy", "diffSide": "RIGHT", "path": "en/mkdocs.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoxNjowOFrOG1SFWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTozNDoxNFrOG1TV8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzk5Mg==", "bodyText": "As mentoned above, can we move these docs under Create API?", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458523992", "createdAt": "2020-07-22T04:16:08Z", "author": {"login": "shaniR"}, "path": "en/mkdocs.yml", "diffHunk": "@@ -64,6 +64,8 @@ nav:\n                             - Generate REST API from SOAP Backend: learn/design-api/create-api/generate-rest-api-from-soap-backend.md\n                       - Adding Custom Properties to APIs: learn/design-api/create-api/adding-custom-properties-to-apis.md\n                       - Change the Thumbnail of an API : learn/design-api/create-api/change-api-thumbnail.md\n+                - Test APIs:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0NDYyNA==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458544624", "createdAt": "2020-07-22T05:34:14Z", "author": {"login": "hasuniea"}, "path": "en/mkdocs.yml", "diffHunk": "@@ -64,6 +64,8 @@ nav:\n                             - Generate REST API from SOAP Backend: learn/design-api/create-api/generate-rest-api-from-soap-backend.md\n                       - Adding Custom Properties to APIs: learn/design-api/create-api/adding-custom-properties-to-apis.md\n                       - Change the Thumbnail of an API : learn/design-api/create-api/change-api-thumbnail.md\n+                - Test APIs:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMzk5Mg=="}, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTM4NjA4OnYy", "diffSide": "RIGHT", "path": "en/mkdocs.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoxOTozOVrOG1SImQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTozNDowNlrOG1TV3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyNDgyNQ==", "bodyText": "\"Testing an API in the design phase\"", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458524825", "createdAt": "2020-07-22T04:19:39Z", "author": {"login": "shaniR"}, "path": "en/mkdocs.yml", "diffHunk": "@@ -64,6 +64,8 @@ nav:\n                             - Generate REST API from SOAP Backend: learn/design-api/create-api/generate-rest-api-from-soap-backend.md\n                       - Adding Custom Properties to APIs: learn/design-api/create-api/adding-custom-properties-to-apis.md\n                       - Change the Thumbnail of an API : learn/design-api/create-api/change-api-thumbnail.md\n+                - Test APIs:\n+                      - Test through the test console: learn/design-api/test-api/test-an-api.md", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0NDYwNA==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458544604", "createdAt": "2020-07-22T05:34:06Z", "author": {"login": "hasuniea"}, "path": "en/mkdocs.yml", "diffHunk": "@@ -64,6 +64,8 @@ nav:\n                             - Generate REST API from SOAP Backend: learn/design-api/create-api/generate-rest-api-from-soap-backend.md\n                       - Adding Custom Properties to APIs: learn/design-api/create-api/adding-custom-properties-to-apis.md\n                       - Change the Thumbnail of an API : learn/design-api/create-api/change-api-thumbnail.md\n+                - Test APIs:\n+                      - Test through the test console: learn/design-api/test-api/test-an-api.md", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyNDgyNQ=="}, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTM4Njk1OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/design-api/test-api/test-an-api.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNDoyMDowNFrOG1SJEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTozMzo1OVrOG1TVuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyNDk0Ng==", "bodyText": "Shall we change the title to \"Testing an API in the design phase\" ?", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458524946", "createdAt": "2020-07-22T04:20:04Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU0NDU2OQ==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458544569", "createdAt": "2020-07-22T05:33:59Z", "author": {"login": "hasuniea"}, "path": "en/docs/learn/design-api/test-api/test-an-api.md", "diffHunk": "@@ -0,0 +1,56 @@\n+# Test APIs through the publisher test console", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyNDk0Ng=="}, "originalCommit": {"oid": "edce407e0097001337177a6cf354bb93ceded0db"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2MTU3MTQ2OnYy", "diffSide": "RIGHT", "path": "en/mkdocs.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTo1OTo1NlrOG1T2Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNTo1OTo1NlrOG1T2Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU1Mjg3MQ==", "bodyText": "we need to rename the page name too.", "url": "https://github.com/wso2/docs-apim/pull/1553#discussion_r458552871", "createdAt": "2020-07-22T05:59:56Z", "author": {"login": "shaniR"}, "path": "en/mkdocs.yml", "diffHunk": "@@ -62,6 +62,7 @@ nav:\n                             - Create a WebSocket API: learn/design-api/create-api/create-a-websocket-api.md\n                             - Expose a SOAP Service as a REST API: learn/design-api/create-api/expose-a-soap-service-as-a-rest-api.md\n                             - Generate REST API from SOAP Backend: learn/design-api/create-api/generate-rest-api-from-soap-backend.md\n+                            - Testing an API in the design phase: learn/design-api/create-api/test-an-api.md", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "113e638ad52f7f3d342cc0e0cfe9d2a8ddae0b55"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1656, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}