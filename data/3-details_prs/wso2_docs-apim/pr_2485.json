{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0ODY0NDcw", "number": 2485, "title": "Re-write Overview page", "bodyText": "Purpose\n\nDescribe the problems, issues, or needs driving this feature/fix and include links to related issues in the following format: Resolves issue1, issue2, etc.\n\nGoals\n\nDescribe the solutions that this feature/fix will introduce to resolve the problems described above\n\nApproach\n\nDescribe how you are implementing the solutions. Include an animated GIF or screenshot if the change affects the UI (email documentation@wso2.com to review all UI text). Include a link to a Markdown file or Google doc if the feature write-up is too long to paste here.\n\nUser stories\n\nSummary of user stories addressed by this change>\n\nRelease note\n\nBrief description of the new feature or bug fix as it will appear in the release notes\n\nDocumentation\n\nLink(s) to product documentation that addresses the changes of this PR. If no doc impact, enter \u201cN/A\u201d plus brief explanation of why there\u2019s no doc impact\n\nTraining\n\nLink to the PR for changes to the training content in https://github.com/wso2/WSO2-Training, if applicable\n\nCertification\n\nType \u201cSent\u201d when you have provided new/updated certification questions, plus four answers for each question (correct answer highlighted in bold), based on this change. Certification questions/answers should be sent to certification@wso2.com and NOT pasted in this PR. If there is no impact on certification exams, type \u201cN/A\u201d and explain why.\n\nMarketing\n\nLink to drafts of marketing content that will describe and promote this feature, including product page changes, technical articles, blog posts, videos, etc., if applicable\n\nAutomation tests\n\nUnit tests\n\nCode coverage information\n\n\nIntegration tests\n\nDetails about the test cases and coverage\n\n\n\nSecurity checks\n\nFollowed secure coding standards in http://wso2.com/technical-reports/wso2-secure-engineering-guidelines? yes/no\nRan FindSecurityBugs plugin and verified report? yes/no\nConfirmed that this PR doesn't commit any keys, passwords, tokens, usernames, or other secrets? yes/no\n\nSamples\n\nProvide high-level details about the samples related to this feature\n\nRelated PRs\n\nList any other related PRs\n\nMigrations (if applicable)\n\nDescribe migration steps and platforms on which migration has been tested\n\nTest environment\n\nList all JDK versions, operating systems, databases, and browser/versions on which this feature/fix was tested\n\nLearning\n\nDescribe the research phase and any blog posts, patterns, libraries, or add-ons you used to solve the problem.", "createdAt": "2020-12-09T03:14:05Z", "url": "https://github.com/wso2/docs-apim/pull/2485", "merged": true, "mergeCommit": {"oid": "2db3ef4acda2bf8b54ead070e4eb62de6ded8504"}, "closed": true, "closedAt": "2020-12-10T06:04:30Z", "author": {"login": "shaniR"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdayxKUgH2gAyNTM0ODY0NDcwOjJjMjQ3ZTBhMjBkMGVhZGIzYjYwZWJkYTc5ODgwZWM3NmY5ZTY0YzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdks5GZAFqTU0ODg3MjcwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2c247e0a20d0eadb3b60ebda79880ec76f9e64c1", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/2c247e0a20d0eadb3b60ebda79880ec76f9e64c1", "committedDate": "2020-11-09T11:08:13Z", "message": "Merge commit 'refs/pull/2219/head' of https://github.com/wso2/docs-apim into 3.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c382728869418a59978431b0ed71b06797b49c50", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/c382728869418a59978431b0ed71b06797b49c50", "committedDate": "2020-11-11T09:53:41Z", "message": "Merge commit 'refs/pull/2228/head' of https://github.com/wso2/docs-apim into 3.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80756305636417ba34143bfeeee69616ed057963", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/80756305636417ba34143bfeeee69616ed057963", "committedDate": "2020-11-18T16:36:40Z", "message": "Merge commit 'refs/pull/2228/head' of https://github.com/wso2/docs-apim into 3.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e06bd9ff26dd362c4ffc55167f412a5a7060b76", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/9e06bd9ff26dd362c4ffc55167f412a5a7060b76", "committedDate": "2020-11-19T06:05:47Z", "message": "Merge commit 'refs/pull/2227/head' of https://github.com/wso2/docs-apim into 3.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e681d92da4217a54ea7b85dad80df9586dc8b2bc", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/e681d92da4217a54ea7b85dad80df9586dc8b2bc", "committedDate": "2020-11-19T06:30:21Z", "message": "Merge commit 'refs/pull/2239/head' of https://github.com/wso2/docs-apim into 3.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "880232dd5cbcd333e7c13726cca39a69d4de28c7", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/880232dd5cbcd333e7c13726cca39a69d4de28c7", "committedDate": "2020-11-19T07:08:08Z", "message": "Merge commit 'refs/pull/2243/head' of https://github.com/wso2/docs-apim into 3.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cae6e9094785a9517a005c0c888da743a9d6e9f", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/6cae6e9094785a9517a005c0c888da743a9d6e9f", "committedDate": "2020-11-19T07:28:40Z", "message": "Merge commit 'refs/pull/2168/head' of https://github.com/wso2/docs-apim into 3.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48dd81a9e111dd7036a0b66ac6b1f7d6c631c3ba", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/48dd81a9e111dd7036a0b66ac6b1f7d6c631c3ba", "committedDate": "2020-12-07T10:06:15Z", "message": "Merge branch '3.2.0' of https://github.com/wso2/docs-apim into 3.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a9ea3a000d69062cd6d13d4f675c632c44fe91a", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/2a9ea3a000d69062cd6d13d4f675c632c44fe91a", "committedDate": "2020-12-09T03:00:00Z", "message": "Merge branch '3.2.0' of https://github.com/wso2/docs-apim into 3.2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ddf89392b95680aa5426b5581d23a9875dbb8b0", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/9ddf89392b95680aa5426b5581d23a9875dbb8b0", "committedDate": "2020-12-09T03:12:25Z", "message": "Re-write overview page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f78a8a4e99a31aa0cf751ac4c10285056f96cb5", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/9f78a8a4e99a31aa0cf751ac4c10285056f96cb5", "committedDate": "2020-12-09T03:42:58Z", "message": "Update mkdocs.yml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODE3MTU5", "url": "https://github.com/wso2/docs-apim/pull/2485#pullrequestreview-547817159", "createdAt": "2020-12-09T03:56:31Z", "commit": {"oid": "9f78a8a4e99a31aa0cf751ac4c10285056f96cb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzo1NjozMVrOICBKBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMzo1NjozMVrOICBKBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4NzAxMg==", "bodyText": "The Key Manager supports should be The API Manager supports", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r538987012", "createdAt": "2020-12-09T03:56:31Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -0,0 +1,78 @@\n+#Basic Architecture and Key Components\n+\n+![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+\n+## Management Plane\n+\n+The management plane is where API creation and API management takes place.  It consists of portals (publisher, developer portal, admin portal) for users to create and manage APIs, implement rate-limiting policies, monitor and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The management plane includes API Analytics dashboards, displaying various business insights. . \n+\n+### Components\n+\n+#### API Publisher\n+\n+![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+\n+WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate-limiting policies.\n+\n+#### API Developer Portal\n+\n+![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n+\n+The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to and consume APIs securely and easily.\n+\n+\n+#### API Analytics\n+\n+![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)\n+\n+Monitoring and analytics of APIs deployed on WSO2 API Manager are provided by the WSO2 API Manager Analytics component. This component includes different types of dashboards to provide more detailed different statistical views of your APIs. Furthermore, you can secure your system by configuring alerts and notifications on pre-determined events to identify any unusual behaviors in near real-time.  For more information, see Working with Analytics.\n+\n+\n+## Data Plane\n+\n+Data plane is where the created API is exposed to the public consumers and acts as the proxy for API calls. This also provides additional capabilities such as enforcing security, rate limiting etc. (policy enforcement point).\n+\n+### Components\n+\n+#### API Gateway\n+\n+![API Gateway]({{base_path}}/assets/img/learn/gateway-overview.png)\n+\n+WSO2 API Gateway acts as the entry point for an API request made to an API managed by WSO2 API Manager.\n+\n+JWT token validation is done by the API Gateway. The API Gateway validates it's signature and subscription using the information it has in it's an in-memory map. This in-memory map includes API-related information, application-related information, subscription-related information, etc. which is updated each time an artifact (API/application) is updated.\n+  \n+ Once the token is validated, the API Gateway acts upon the API request before sending it to the backend. It first processes the message to a pre-configured format (e.g. JSON/XML/CSV/etc.).  It then applies security policies, rate-limiting policies,  collects statistics, etc., via its handlers.  The mediators then act upon the API payload based on the mediation logic developed. The message is then formatted to a pre-configured format (e.g.JSON/XML/CSV/etc.) and sent to the backend. The WSO2 API Gateway supports transports such as HTTP, HTTPS, etc. It is also able to scale on-demand in cloud environments and is easily pluggable in non-cloud environments. \n+ \n+## Control Plane\n+ \n+ Control plane is where the API security validation, API key generation and rate limiting decisions are taken.\n+ \n+### Components\n+ \n+#### Key Manager\n+ \n+ ![Key Manager]({{base_path}}/assets/img/get_started/key-manager-overview.png)\n+\n+ The Key Manager is the identity provider for the WSO2 API Manager and acts as the Secure Token Service(STS). \n+ \n+ In WSO2 API Manager, tokens are generated for an application. The Key manager provides a token API to generate access tokens. These tokens can be used by clients to invoke APIs exposed by WSO2 API Manager. Furthermore, \n+ The Key Manager exposes a revoke API to revoke any access token. The Key Manager supports OAuth2.0, Basic Auth, Mutual SSL as well as API-Key based authentication mechanisms. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f78a8a4e99a31aa0cf751ac4c10285056f96cb5"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODE4NzEx", "url": "https://github.com/wso2/docs-apim/pull/2485#pullrequestreview-547818711", "createdAt": "2020-12-09T04:01:54Z", "commit": {"oid": "9f78a8a4e99a31aa0cf751ac4c10285056f96cb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNDowMTo1NFrOICBQ7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNDowMTo1NFrOICBQ7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4ODc4MQ==", "bodyText": "we do validate the scopes and generate backend jwt token as well if it is enabled", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r538988781", "createdAt": "2020-12-09T04:01:54Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -0,0 +1,78 @@\n+#Basic Architecture and Key Components\n+\n+![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+\n+## Management Plane\n+\n+The management plane is where API creation and API management takes place.  It consists of portals (publisher, developer portal, admin portal) for users to create and manage APIs, implement rate-limiting policies, monitor and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The management plane includes API Analytics dashboards, displaying various business insights. . \n+\n+### Components\n+\n+#### API Publisher\n+\n+![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+\n+WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate-limiting policies.\n+\n+#### API Developer Portal\n+\n+![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n+\n+The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to and consume APIs securely and easily.\n+\n+\n+#### API Analytics\n+\n+![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)\n+\n+Monitoring and analytics of APIs deployed on WSO2 API Manager are provided by the WSO2 API Manager Analytics component. This component includes different types of dashboards to provide more detailed different statistical views of your APIs. Furthermore, you can secure your system by configuring alerts and notifications on pre-determined events to identify any unusual behaviors in near real-time.  For more information, see Working with Analytics.\n+\n+\n+## Data Plane\n+\n+Data plane is where the created API is exposed to the public consumers and acts as the proxy for API calls. This also provides additional capabilities such as enforcing security, rate limiting etc. (policy enforcement point).\n+\n+### Components\n+\n+#### API Gateway\n+\n+![API Gateway]({{base_path}}/assets/img/learn/gateway-overview.png)\n+\n+WSO2 API Gateway acts as the entry point for an API request made to an API managed by WSO2 API Manager.\n+\n+JWT token validation is done by the API Gateway. The API Gateway validates it's signature and subscription using the information it has in it's an in-memory map. This in-memory map includes API-related information, application-related information, subscription-related information, etc. which is updated each time an artifact (API/application) is updated.\n+  \n+ Once the token is validated, the API Gateway acts upon the API request before sending it to the backend. It first processes the message to a pre-configured format (e.g. JSON/XML/CSV/etc.).  It then applies security policies, rate-limiting policies,  collects statistics, etc., via its handlers.  The mediators then act upon the API payload based on the mediation logic developed. The message is then formatted to a pre-configured format (e.g.JSON/XML/CSV/etc.) and sent to the backend. The WSO2 API Gateway supports transports such as HTTP, HTTPS, etc. It is also able to scale on-demand in cloud environments and is easily pluggable in non-cloud environments. \n+ \n+## Control Plane\n+ \n+ Control plane is where the API security validation, API key generation and rate limiting decisions are taken.\n+ \n+### Components\n+ \n+#### Key Manager\n+ \n+ ![Key Manager]({{base_path}}/assets/img/get_started/key-manager-overview.png)\n+\n+ The Key Manager is the identity provider for the WSO2 API Manager and acts as the Secure Token Service(STS). \n+ \n+ In WSO2 API Manager, tokens are generated for an application. The Key manager provides a token API to generate access tokens. These tokens can be used by clients to invoke APIs exposed by WSO2 API Manager. Furthermore, \n+ The Key Manager exposes a revoke API to revoke any access token. The Key Manager supports OAuth2.0, Basic Auth, Mutual SSL as well as API-Key based authentication mechanisms. \n+ \n+ WSO2 API Manager only supports creating applications that support JWT formatted OAuth2.0 type tokens.\n+ A client can generate a JWT formatted OAuth 2.0 access token by invoking the token API directly or via the Developer Portal UI. Alternatively, an API Key can be generated through the Developer Portal without calling the Key Manager. The API Key is a self-signed JWT token.\n+ \n+ When a client invokes an API with a JWT formatted OAuth2.0 access token or an API Key,  the Gateway validates the token by validating its signature and subscription.\n+ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f78a8a4e99a31aa0cf751ac4c10285056f96cb5"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODIwNDY4", "url": "https://github.com/wso2/docs-apim/pull/2485#pullrequestreview-547820468", "createdAt": "2020-12-09T04:07:56Z", "commit": {"oid": "9f78a8a4e99a31aa0cf751ac4c10285056f96cb5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNDowNzo1N1rOICBYUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNDowNzo1N1rOICBYUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MDY3NQ==", "bodyText": "I think we need to re-word this paragraph. Couple of this to point out\n1- traffic manager does not update the database. it receives events from publisher/devportal on changes such as API create, app create etc and put them in to a jms topic. Gateways which are subscribed to this topic get this message to them and it updates it's inmemory maps based on the message.", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r538990675", "createdAt": "2020-12-09T04:07:57Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -0,0 +1,78 @@\n+#Basic Architecture and Key Components\n+\n+![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+\n+## Management Plane\n+\n+The management plane is where API creation and API management takes place.  It consists of portals (publisher, developer portal, admin portal) for users to create and manage APIs, implement rate-limiting policies, monitor and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The management plane includes API Analytics dashboards, displaying various business insights. . \n+\n+### Components\n+\n+#### API Publisher\n+\n+![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+\n+WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate-limiting policies.\n+\n+#### API Developer Portal\n+\n+![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n+\n+The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to and consume APIs securely and easily.\n+\n+\n+#### API Analytics\n+\n+![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)\n+\n+Monitoring and analytics of APIs deployed on WSO2 API Manager are provided by the WSO2 API Manager Analytics component. This component includes different types of dashboards to provide more detailed different statistical views of your APIs. Furthermore, you can secure your system by configuring alerts and notifications on pre-determined events to identify any unusual behaviors in near real-time.  For more information, see Working with Analytics.\n+\n+\n+## Data Plane\n+\n+Data plane is where the created API is exposed to the public consumers and acts as the proxy for API calls. This also provides additional capabilities such as enforcing security, rate limiting etc. (policy enforcement point).\n+\n+### Components\n+\n+#### API Gateway\n+\n+![API Gateway]({{base_path}}/assets/img/learn/gateway-overview.png)\n+\n+WSO2 API Gateway acts as the entry point for an API request made to an API managed by WSO2 API Manager.\n+\n+JWT token validation is done by the API Gateway. The API Gateway validates it's signature and subscription using the information it has in it's an in-memory map. This in-memory map includes API-related information, application-related information, subscription-related information, etc. which is updated each time an artifact (API/application) is updated.\n+  \n+ Once the token is validated, the API Gateway acts upon the API request before sending it to the backend. It first processes the message to a pre-configured format (e.g. JSON/XML/CSV/etc.).  It then applies security policies, rate-limiting policies,  collects statistics, etc., via its handlers.  The mediators then act upon the API payload based on the mediation logic developed. The message is then formatted to a pre-configured format (e.g.JSON/XML/CSV/etc.) and sent to the backend. The WSO2 API Gateway supports transports such as HTTP, HTTPS, etc. It is also able to scale on-demand in cloud environments and is easily pluggable in non-cloud environments. \n+ \n+## Control Plane\n+ \n+ Control plane is where the API security validation, API key generation and rate limiting decisions are taken.\n+ \n+### Components\n+ \n+#### Key Manager\n+ \n+ ![Key Manager]({{base_path}}/assets/img/get_started/key-manager-overview.png)\n+\n+ The Key Manager is the identity provider for the WSO2 API Manager and acts as the Secure Token Service(STS). \n+ \n+ In WSO2 API Manager, tokens are generated for an application. The Key manager provides a token API to generate access tokens. These tokens can be used by clients to invoke APIs exposed by WSO2 API Manager. Furthermore, \n+ The Key Manager exposes a revoke API to revoke any access token. The Key Manager supports OAuth2.0, Basic Auth, Mutual SSL as well as API-Key based authentication mechanisms. \n+ \n+ WSO2 API Manager only supports creating applications that support JWT formatted OAuth2.0 type tokens.\n+ A client can generate a JWT formatted OAuth 2.0 access token by invoking the token API directly or via the Developer Portal UI. Alternatively, an API Key can be generated through the Developer Portal without calling the Key Manager. The API Key is a self-signed JWT token.\n+ \n+ When a client invokes an API with a JWT formatted OAuth2.0 access token or an API Key,  the Gateway validates the token by validating its signature and subscription.\n+ \n+ WSO2 API Manager 3.2.0 can accommodate a third-party Key Manager in place of its Key Manager component and also accommodate multiple Key Managers such as Okta, OAuth0, KeyCloak, etc. \n+ \n+ \n+#### Traffic Manager\n+ \n+  ![Traffic Manager]({{base_path}}/assets/img/get_started/traffic-manager-overview.png)\n+ \n+The Traffic Manager helps users to regulate API traffic, make APIs and applications available to consumers at different service levels, and secure APIs against security attacks. The Traffic Manager features a dynamic throttling engine to process throttling policies in real-time, including rate-limiting of API requests. \n+\n+In addition to the above, the traffic manager also helps to keep the API Gateway's in-memory map, used for key validation, up-to-date. The traffic manager updates the databases based on artifact(API/application) update events received from the API Publisher and API Developer Portal.  The Traffic Manager then goes on to notify the API Gateway and help it update its in-memory map via REST APIs.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f78a8a4e99a31aa0cf751ac4c10285056f96cb5"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODE4Mjkx", "url": "https://github.com/wso2/docs-apim/pull/2485#pullrequestreview-547818291", "createdAt": "2020-12-09T04:00:26Z", "commit": {"oid": "9f78a8a4e99a31aa0cf751ac4c10285056f96cb5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNDowMDoyNlrOICBPDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNDozNzowMFrOICB7fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4ODMwMA==", "bodyText": "Remove the line above. This is the norm for a majority of major IDPs.", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r538988300", "createdAt": "2020-12-09T04:00:26Z", "author": {"login": "nuwand"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -0,0 +1,78 @@\n+#Basic Architecture and Key Components\n+\n+![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+\n+## Management Plane\n+\n+The management plane is where API creation and API management takes place.  It consists of portals (publisher, developer portal, admin portal) for users to create and manage APIs, implement rate-limiting policies, monitor and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The management plane includes API Analytics dashboards, displaying various business insights. . \n+\n+### Components\n+\n+#### API Publisher\n+\n+![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+\n+WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate-limiting policies.\n+\n+#### API Developer Portal\n+\n+![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n+\n+The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to and consume APIs securely and easily.\n+\n+\n+#### API Analytics\n+\n+![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)\n+\n+Monitoring and analytics of APIs deployed on WSO2 API Manager are provided by the WSO2 API Manager Analytics component. This component includes different types of dashboards to provide more detailed different statistical views of your APIs. Furthermore, you can secure your system by configuring alerts and notifications on pre-determined events to identify any unusual behaviors in near real-time.  For more information, see Working with Analytics.\n+\n+\n+## Data Plane\n+\n+Data plane is where the created API is exposed to the public consumers and acts as the proxy for API calls. This also provides additional capabilities such as enforcing security, rate limiting etc. (policy enforcement point).\n+\n+### Components\n+\n+#### API Gateway\n+\n+![API Gateway]({{base_path}}/assets/img/learn/gateway-overview.png)\n+\n+WSO2 API Gateway acts as the entry point for an API request made to an API managed by WSO2 API Manager.\n+\n+JWT token validation is done by the API Gateway. The API Gateway validates it's signature and subscription using the information it has in it's an in-memory map. This in-memory map includes API-related information, application-related information, subscription-related information, etc. which is updated each time an artifact (API/application) is updated.\n+  \n+ Once the token is validated, the API Gateway acts upon the API request before sending it to the backend. It first processes the message to a pre-configured format (e.g. JSON/XML/CSV/etc.).  It then applies security policies, rate-limiting policies,  collects statistics, etc., via its handlers.  The mediators then act upon the API payload based on the mediation logic developed. The message is then formatted to a pre-configured format (e.g.JSON/XML/CSV/etc.) and sent to the backend. The WSO2 API Gateway supports transports such as HTTP, HTTPS, etc. It is also able to scale on-demand in cloud environments and is easily pluggable in non-cloud environments. \n+ \n+## Control Plane\n+ \n+ Control plane is where the API security validation, API key generation and rate limiting decisions are taken.\n+ \n+### Components\n+ \n+#### Key Manager\n+ \n+ ![Key Manager]({{base_path}}/assets/img/get_started/key-manager-overview.png)\n+\n+ The Key Manager is the identity provider for the WSO2 API Manager and acts as the Secure Token Service(STS). \n+ \n+ In WSO2 API Manager, tokens are generated for an application. The Key manager provides a token API to generate access tokens. These tokens can be used by clients to invoke APIs exposed by WSO2 API Manager. Furthermore, \n+ The Key Manager exposes a revoke API to revoke any access token. The Key Manager supports OAuth2.0, Basic Auth, Mutual SSL as well as API-Key based authentication mechanisms. \n+ \n+ WSO2 API Manager only supports creating applications that support JWT formatted OAuth2.0 type tokens.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f78a8a4e99a31aa0cf751ac4c10285056f96cb5"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4ODc3NA==", "bodyText": "Please remove all references of \"JWT formatted access tokens\". The format of the token doesn't have to be highlighted in this manner because we aren't doing anything special.", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r538988774", "createdAt": "2020-12-09T04:01:52Z", "author": {"login": "nuwand"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -0,0 +1,78 @@\n+#Basic Architecture and Key Components\n+\n+![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+\n+## Management Plane\n+\n+The management plane is where API creation and API management takes place.  It consists of portals (publisher, developer portal, admin portal) for users to create and manage APIs, implement rate-limiting policies, monitor and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The management plane includes API Analytics dashboards, displaying various business insights. . \n+\n+### Components\n+\n+#### API Publisher\n+\n+![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+\n+WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate-limiting policies.\n+\n+#### API Developer Portal\n+\n+![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n+\n+The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to and consume APIs securely and easily.\n+\n+\n+#### API Analytics\n+\n+![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)\n+\n+Monitoring and analytics of APIs deployed on WSO2 API Manager are provided by the WSO2 API Manager Analytics component. This component includes different types of dashboards to provide more detailed different statistical views of your APIs. Furthermore, you can secure your system by configuring alerts and notifications on pre-determined events to identify any unusual behaviors in near real-time.  For more information, see Working with Analytics.\n+\n+\n+## Data Plane\n+\n+Data plane is where the created API is exposed to the public consumers and acts as the proxy for API calls. This also provides additional capabilities such as enforcing security, rate limiting etc. (policy enforcement point).\n+\n+### Components\n+\n+#### API Gateway\n+\n+![API Gateway]({{base_path}}/assets/img/learn/gateway-overview.png)\n+\n+WSO2 API Gateway acts as the entry point for an API request made to an API managed by WSO2 API Manager.\n+\n+JWT token validation is done by the API Gateway. The API Gateway validates it's signature and subscription using the information it has in it's an in-memory map. This in-memory map includes API-related information, application-related information, subscription-related information, etc. which is updated each time an artifact (API/application) is updated.\n+  \n+ Once the token is validated, the API Gateway acts upon the API request before sending it to the backend. It first processes the message to a pre-configured format (e.g. JSON/XML/CSV/etc.).  It then applies security policies, rate-limiting policies,  collects statistics, etc., via its handlers.  The mediators then act upon the API payload based on the mediation logic developed. The message is then formatted to a pre-configured format (e.g.JSON/XML/CSV/etc.) and sent to the backend. The WSO2 API Gateway supports transports such as HTTP, HTTPS, etc. It is also able to scale on-demand in cloud environments and is easily pluggable in non-cloud environments. \n+ \n+## Control Plane\n+ \n+ Control plane is where the API security validation, API key generation and rate limiting decisions are taken.\n+ \n+### Components\n+ \n+#### Key Manager\n+ \n+ ![Key Manager]({{base_path}}/assets/img/get_started/key-manager-overview.png)\n+\n+ The Key Manager is the identity provider for the WSO2 API Manager and acts as the Secure Token Service(STS). \n+ \n+ In WSO2 API Manager, tokens are generated for an application. The Key manager provides a token API to generate access tokens. These tokens can be used by clients to invoke APIs exposed by WSO2 API Manager. Furthermore, \n+ The Key Manager exposes a revoke API to revoke any access token. The Key Manager supports OAuth2.0, Basic Auth, Mutual SSL as well as API-Key based authentication mechanisms. \n+ \n+ WSO2 API Manager only supports creating applications that support JWT formatted OAuth2.0 type tokens.\n+ A client can generate a JWT formatted OAuth 2.0 access token by invoking the token API directly or via the Developer Portal UI. Alternatively, an API Key can be generated through the Developer Portal without calling the Key Manager. The API Key is a self-signed JWT token.\n+ \n+ When a client invokes an API with a JWT formatted OAuth2.0 access token or an API Key,  the Gateway validates the token by validating its signature and subscription.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f78a8a4e99a31aa0cf751ac4c10285056f96cb5"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk4OTI1NA==", "bodyText": "No need to mention the version of the product here since the docs are any tied to a particular version.", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r538989254", "createdAt": "2020-12-09T04:03:26Z", "author": {"login": "nuwand"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -0,0 +1,78 @@\n+#Basic Architecture and Key Components\n+\n+![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+\n+## Management Plane\n+\n+The management plane is where API creation and API management takes place.  It consists of portals (publisher, developer portal, admin portal) for users to create and manage APIs, implement rate-limiting policies, monitor and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The management plane includes API Analytics dashboards, displaying various business insights. . \n+\n+### Components\n+\n+#### API Publisher\n+\n+![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+\n+WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate-limiting policies.\n+\n+#### API Developer Portal\n+\n+![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n+\n+The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to and consume APIs securely and easily.\n+\n+\n+#### API Analytics\n+\n+![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)\n+\n+Monitoring and analytics of APIs deployed on WSO2 API Manager are provided by the WSO2 API Manager Analytics component. This component includes different types of dashboards to provide more detailed different statistical views of your APIs. Furthermore, you can secure your system by configuring alerts and notifications on pre-determined events to identify any unusual behaviors in near real-time.  For more information, see Working with Analytics.\n+\n+\n+## Data Plane\n+\n+Data plane is where the created API is exposed to the public consumers and acts as the proxy for API calls. This also provides additional capabilities such as enforcing security, rate limiting etc. (policy enforcement point).\n+\n+### Components\n+\n+#### API Gateway\n+\n+![API Gateway]({{base_path}}/assets/img/learn/gateway-overview.png)\n+\n+WSO2 API Gateway acts as the entry point for an API request made to an API managed by WSO2 API Manager.\n+\n+JWT token validation is done by the API Gateway. The API Gateway validates it's signature and subscription using the information it has in it's an in-memory map. This in-memory map includes API-related information, application-related information, subscription-related information, etc. which is updated each time an artifact (API/application) is updated.\n+  \n+ Once the token is validated, the API Gateway acts upon the API request before sending it to the backend. It first processes the message to a pre-configured format (e.g. JSON/XML/CSV/etc.).  It then applies security policies, rate-limiting policies,  collects statistics, etc., via its handlers.  The mediators then act upon the API payload based on the mediation logic developed. The message is then formatted to a pre-configured format (e.g.JSON/XML/CSV/etc.) and sent to the backend. The WSO2 API Gateway supports transports such as HTTP, HTTPS, etc. It is also able to scale on-demand in cloud environments and is easily pluggable in non-cloud environments. \n+ \n+## Control Plane\n+ \n+ Control plane is where the API security validation, API key generation and rate limiting decisions are taken.\n+ \n+### Components\n+ \n+#### Key Manager\n+ \n+ ![Key Manager]({{base_path}}/assets/img/get_started/key-manager-overview.png)\n+\n+ The Key Manager is the identity provider for the WSO2 API Manager and acts as the Secure Token Service(STS). \n+ \n+ In WSO2 API Manager, tokens are generated for an application. The Key manager provides a token API to generate access tokens. These tokens can be used by clients to invoke APIs exposed by WSO2 API Manager. Furthermore, \n+ The Key Manager exposes a revoke API to revoke any access token. The Key Manager supports OAuth2.0, Basic Auth, Mutual SSL as well as API-Key based authentication mechanisms. \n+ \n+ WSO2 API Manager only supports creating applications that support JWT formatted OAuth2.0 type tokens.\n+ A client can generate a JWT formatted OAuth 2.0 access token by invoking the token API directly or via the Developer Portal UI. Alternatively, an API Key can be generated through the Developer Portal without calling the Key Manager. The API Key is a self-signed JWT token.\n+ \n+ When a client invokes an API with a JWT formatted OAuth2.0 access token or an API Key,  the Gateway validates the token by validating its signature and subscription.\n+ \n+ WSO2 API Manager 3.2.0 can accommodate a third-party Key Manager in place of its Key Manager component and also accommodate multiple Key Managers such as Okta, OAuth0, KeyCloak, etc. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f78a8a4e99a31aa0cf751ac4c10285056f96cb5"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5OTY3OA==", "bodyText": "Reword this as \"In addition to the built in Key Manger being used as the IDP, the API Manager also supports integrating with third party IDPs such as Okta, Auth0, KeyCloak and so on for OAuth2 based security for APIs\"", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r538999678", "createdAt": "2020-12-09T04:37:00Z", "author": {"login": "nuwand"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -0,0 +1,78 @@\n+#Basic Architecture and Key Components\n+\n+![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+\n+## Management Plane\n+\n+The management plane is where API creation and API management takes place.  It consists of portals (publisher, developer portal, admin portal) for users to create and manage APIs, implement rate-limiting policies, monitor and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The management plane includes API Analytics dashboards, displaying various business insights. . \n+\n+### Components\n+\n+#### API Publisher\n+\n+![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+\n+WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate-limiting policies.\n+\n+#### API Developer Portal\n+\n+![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n+\n+The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to and consume APIs securely and easily.\n+\n+\n+#### API Analytics\n+\n+![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)\n+\n+Monitoring and analytics of APIs deployed on WSO2 API Manager are provided by the WSO2 API Manager Analytics component. This component includes different types of dashboards to provide more detailed different statistical views of your APIs. Furthermore, you can secure your system by configuring alerts and notifications on pre-determined events to identify any unusual behaviors in near real-time.  For more information, see Working with Analytics.\n+\n+\n+## Data Plane\n+\n+Data plane is where the created API is exposed to the public consumers and acts as the proxy for API calls. This also provides additional capabilities such as enforcing security, rate limiting etc. (policy enforcement point).\n+\n+### Components\n+\n+#### API Gateway\n+\n+![API Gateway]({{base_path}}/assets/img/learn/gateway-overview.png)\n+\n+WSO2 API Gateway acts as the entry point for an API request made to an API managed by WSO2 API Manager.\n+\n+JWT token validation is done by the API Gateway. The API Gateway validates it's signature and subscription using the information it has in it's an in-memory map. This in-memory map includes API-related information, application-related information, subscription-related information, etc. which is updated each time an artifact (API/application) is updated.\n+  \n+ Once the token is validated, the API Gateway acts upon the API request before sending it to the backend. It first processes the message to a pre-configured format (e.g. JSON/XML/CSV/etc.).  It then applies security policies, rate-limiting policies,  collects statistics, etc., via its handlers.  The mediators then act upon the API payload based on the mediation logic developed. The message is then formatted to a pre-configured format (e.g.JSON/XML/CSV/etc.) and sent to the backend. The WSO2 API Gateway supports transports such as HTTP, HTTPS, etc. It is also able to scale on-demand in cloud environments and is easily pluggable in non-cloud environments. \n+ \n+## Control Plane\n+ \n+ Control plane is where the API security validation, API key generation and rate limiting decisions are taken.\n+ \n+### Components\n+ \n+#### Key Manager\n+ \n+ ![Key Manager]({{base_path}}/assets/img/get_started/key-manager-overview.png)\n+\n+ The Key Manager is the identity provider for the WSO2 API Manager and acts as the Secure Token Service(STS). \n+ \n+ In WSO2 API Manager, tokens are generated for an application. The Key manager provides a token API to generate access tokens. These tokens can be used by clients to invoke APIs exposed by WSO2 API Manager. Furthermore, \n+ The Key Manager exposes a revoke API to revoke any access token. The Key Manager supports OAuth2.0, Basic Auth, Mutual SSL as well as API-Key based authentication mechanisms. \n+ \n+ WSO2 API Manager only supports creating applications that support JWT formatted OAuth2.0 type tokens.\n+ A client can generate a JWT formatted OAuth 2.0 access token by invoking the token API directly or via the Developer Portal UI. Alternatively, an API Key can be generated through the Developer Portal without calling the Key Manager. The API Key is a self-signed JWT token.\n+ \n+ When a client invokes an API with a JWT formatted OAuth2.0 access token or an API Key,  the Gateway validates the token by validating its signature and subscription.\n+ \n+ WSO2 API Manager 3.2.0 can accommodate a third-party Key Manager in place of its Key Manager component and also accommodate multiple Key Managers such as Okta, OAuth0, KeyCloak, etc. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f78a8a4e99a31aa0cf751ac4c10285056f96cb5"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87837f1a2072c23699a2e6a37520288a9f7e2b09", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/87837f1a2072c23699a2e6a37520288a9f7e2b09", "committedDate": "2020-12-09T04:37:40Z", "message": "incorporating review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3ODMxNzUx", "url": "https://github.com/wso2/docs-apim/pull/2485#pullrequestreview-547831751", "createdAt": "2020-12-09T04:46:38Z", "commit": {"oid": "87837f1a2072c23699a2e6a37520288a9f7e2b09"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNDo0NjozOFrOICCHZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNDo0NjozOFrOICCHZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTAwMjcyNA==", "bodyText": "The main use-case of the Key Manager is for clients to login and get tokens. These tokens are then sent to the gateway when accessing APIs. This diagram of the Key Manager illustrates an internal architecture of the product where the KM is used by the dev portal and publisher but misses to illustrates the KM's primary use case. I suggest to redraw this image to illustrate the primary use case of the KM and to ignore the product internals to keep it simple.", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r539002724", "createdAt": "2020-12-09T04:46:38Z", "author": {"login": "nuwand"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -0,0 +1,80 @@\n+#Basic Architecture and Key Components\n+\n+![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+\n+## Management Plane\n+\n+The management plane is where API creation and API management takes place.  It consists of portals (publisher, developer portal, admin portal) for users to create and manage APIs, implement rate-limiting policies, monitor and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The management plane includes API Analytics dashboards, displaying various business insights. . \n+\n+### Components\n+\n+#### API Publisher\n+\n+![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+\n+WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate-limiting policies.\n+\n+#### API Developer Portal\n+\n+![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n+\n+The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to and consume APIs securely and easily.\n+\n+\n+#### API Analytics\n+\n+![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)\n+\n+Monitoring and analytics of APIs deployed on WSO2 API Manager are provided by the WSO2 API Manager Analytics component. This component includes different types of dashboards to provide more detailed different statistical views of your APIs. Furthermore, you can secure your system by configuring alerts and notifications on pre-determined events to identify any unusual behaviors in near real-time.  For more information, see Working with Analytics.\n+\n+\n+## Data Plane\n+\n+Data plane is where the created API is exposed to the public consumers and acts as the proxy for API calls. This also provides additional capabilities such as enforcing security, rate limiting etc. (policy enforcement point).\n+\n+### Components\n+\n+#### API Gateway\n+\n+![API Gateway]({{base_path}}/assets/img/learn/gateway-overview.png)\n+\n+WSO2 API Gateway acts as the entry point for an API request made to an API managed by WSO2 API Manager.\n+\n+JWT token validation is done by the API Gateway. The API Gateway validates it's signature and subscription using the information it has in it's an in-memory map. This in-memory map includes API-related information, application-related information, subscription-related information, etc. which is updated each time an artifact (API/application) is updated.\n+  \n+ Once the token is validated, the API Gateway acts upon the API request before sending it to the backend. It first processes the message to a pre-configured format (e.g. JSON/XML/CSV/etc.).  It then applies security policies, rate-limiting policies,  collects statistics, etc., via its handlers.  The mediators then act upon the API payload based on the mediation logic developed. The message is then formatted to a pre-configured format (e.g.JSON/XML/CSV/etc.) and sent to the backend. The WSO2 API Gateway supports transports such as HTTP, HTTPS, etc. It is also able to scale on-demand in cloud environments and is easily pluggable in non-cloud environments. \n+ \n+## Control Plane\n+ \n+ Control plane is where the API security validation, API key generation and rate limiting decisions are taken.\n+ \n+### Components\n+ \n+#### Key Manager\n+ \n+ ![Key Manager]({{base_path}}/assets/img/get_started/key-manager-overview.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87837f1a2072c23699a2e6a37520288a9f7e2b09"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76838dd027cbf8ee422be59485be2255709abb8d", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/76838dd027cbf8ee422be59485be2255709abb8d", "committedDate": "2020-12-09T07:52:35Z", "message": "Review comments incorporated."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MDY2NTI4", "url": "https://github.com/wso2/docs-apim/pull/2485#pullrequestreview-548066528", "createdAt": "2020-12-09T10:58:38Z", "commit": {"oid": "76838dd027cbf8ee422be59485be2255709abb8d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDo1ODozOFrOICOr-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDo1ODozOFrOICOr-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTIwODY5OQ==", "bodyText": "it validates the signature, issuer, expiry time, and API subscriptions. and we are using the in-memory map to validate the subscriptions only.", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r539208699", "createdAt": "2020-12-09T10:58:38Z", "author": {"login": "bhathiya"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -0,0 +1,73 @@\n+#Basic Architecture and Key Components\n+\n+![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+\n+## Management Plane\n+\n+The management plane is where API creation and API management takes place.  It consists of portals (publisher, developer portal, admin portal) for users to create and manage APIs, implement rate-limiting policies, monitor and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The management plane includes API Analytics dashboards, displaying various business insights. . \n+\n+### Components\n+\n+#### API Publisher\n+\n+![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+\n+WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate-limiting policies.\n+\n+#### API Developer Portal\n+\n+![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n+\n+The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to and consume APIs securely and easily.\n+\n+\n+#### API Analytics\n+\n+![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)\n+\n+Monitoring and analytics of APIs deployed on WSO2 API Manager are provided by the WSO2 API Manager Analytics component. This component includes different types of dashboards to provide more detailed different statistical views of your APIs. Furthermore, you can secure your system by configuring alerts and notifications on pre-determined events to identify any unusual behaviors in near real-time.  For more information, see Working with Analytics.\n+\n+\n+## Data Plane\n+\n+Data plane is where the created API is exposed to the public consumers and acts as the proxy for API calls. This also provides additional capabilities such as enforcing security, rate limiting etc. (policy enforcement point).\n+\n+### Components\n+\n+#### API Gateway\n+\n+![API Gateway]({{base_path}}/assets/img/learn/gateway-overview.png)\n+\n+WSO2 API Gateway acts as the entry point for an API request made to an API managed by WSO2 API Manager.\n+\n+JWT token validation is done by the API Gateway. The API Gateway validates it's signature and subscription using the information it has in it's an in-memory map. This in-memory map includes API-related information, application-related information, subscription-related information, etc. which is updated each time an artifact (API/application) is updated.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76838dd027cbf8ee422be59485be2255709abb8d"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8514df9d0a0a13b6cb2c34e6bea6cc44c5cf4a96", "author": {"user": {"login": "Mariangela", "name": "Mariangela Hills"}}, "url": "https://github.com/wso2/docs-apim/commit/8514df9d0a0a13b6cb2c34e6bea6cc44c5cf4a96", "committedDate": "2020-12-09T11:04:54Z", "message": "Reviewed full doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MTEzMDQ1", "url": "https://github.com/wso2/docs-apim/pull/2485#pullrequestreview-548113045", "createdAt": "2020-12-09T12:01:43Z", "commit": {"oid": "8514df9d0a0a13b6cb2c34e6bea6cc44c5cf4a96"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjowMTo0NFrOICRIag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjowNzoxNFrOICRVjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI0ODc0Ng==", "bodyText": "Why are there diagonal lines in the background of this image?", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r539248746", "createdAt": "2020-12-09T12:01:44Z", "author": {"login": "Mariangela"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -1,73 +1,72 @@\n-#Basic Architecture and Key Components\n+# Basic Architecture and Key Components\n \n-![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+[![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)]({{base_path}}/assets/img/get_started/basic-architecture.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8514df9d0a0a13b6cb2c34e6bea6cc44c5cf4a96"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI0OTg4Ng==", "bodyText": "This screenshot is outdated. The menu named \"Scopes\" should be \"Local Scopes\"", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r539249886", "createdAt": "2020-12-09T12:03:33Z", "author": {"login": "Mariangela"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -1,73 +1,72 @@\n-#Basic Architecture and Key Components\n+# Basic Architecture and Key Components\n \n-![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+[![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)]({{base_path}}/assets/img/get_started/basic-architecture.png)\n \n ## Management Plane\n \n-The management plane is where API creation and API management takes place.  It consists of portals (publisher, developer portal, admin portal) for users to create and manage APIs, implement rate-limiting policies, monitor and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The management plane includes API Analytics dashboards, displaying various business insights. . \n+The Management Plane is where API creation and API management takes place.  It consists of portals (Publisher, Developer Portal, Admin Portal) for users to create and manage APIs, implement rate limiting policies, monitor, and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The Management Plane includes API Analytics dashboards, displaying various business insights.\n \n ### Components\n \n #### API Publisher\n \n-![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+[![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8514df9d0a0a13b6cb2c34e6bea6cc44c5cf4a96"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI1MjExMQ==", "bodyText": "It will be great if we can get the following updated in this image\nRealtime > Real-Time\ntcp connection > TCP connection\nHTTP connection > HTTP connection", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r539252111", "createdAt": "2020-12-09T12:07:14Z", "author": {"login": "Mariangela"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -1,73 +1,72 @@\n-#Basic Architecture and Key Components\n+# Basic Architecture and Key Components\n \n-![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+[![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)]({{base_path}}/assets/img/get_started/basic-architecture.png)\n \n ## Management Plane\n \n-The management plane is where API creation and API management takes place.  It consists of portals (publisher, developer portal, admin portal) for users to create and manage APIs, implement rate-limiting policies, monitor and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The management plane includes API Analytics dashboards, displaying various business insights. . \n+The Management Plane is where API creation and API management takes place.  It consists of portals (Publisher, Developer Portal, Admin Portal) for users to create and manage APIs, implement rate limiting policies, monitor, and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The Management Plane includes API Analytics dashboards, displaying various business insights.\n \n ### Components\n \n #### API Publisher\n \n-![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+[![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n \n-WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate-limiting policies.\n+WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate limiting policies.\n \n #### API Developer Portal\n \n-![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n-\n-The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to and consume APIs securely and easily.\n+[![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n \n+The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to, and consume APIs securely and easily.\n \n #### API Analytics\n \n-![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)\n+[![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)]({{base_path}}/assets/img/get_started/analytics.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8514df9d0a0a13b6cb2c34e6bea6cc44c5cf4a96"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "091a414b2ea104063d6e44e88bf45785c6d9db3d", "author": {"user": {"login": "Mariangela", "name": "Mariangela Hills"}}, "url": "https://github.com/wso2/docs-apim/commit/091a414b2ea104063d6e44e88bf45785c6d9db3d", "committedDate": "2020-12-09T12:11:25Z", "message": "Reviewed full doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MTIxMDUx", "url": "https://github.com/wso2/docs-apim/pull/2485#pullrequestreview-548121051", "createdAt": "2020-12-09T12:13:03Z", "commit": {"oid": "091a414b2ea104063d6e44e88bf45785c6d9db3d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjoxMzowNFrOICRi5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjoxNzozMVrOICRulQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI1NTUyNQ==", "bodyText": "We need to add a bit of space between the text and the video.", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r539255525", "createdAt": "2020-12-09T12:13:04Z", "author": {"login": "Mariangela"}, "path": "en/docs/getting-started/overview.md", "diffHunk": "@@ -1,99 +1,101 @@\n # Overview\n \n-WSO2 API Manager is a fully open-source solution for end to end API Management in the cloud, on-prem or in hybrid environments. It comes with an [Apache Software License Version 2.0](http://www.apache.org/licenses/LICENSE-2.0) which makes it **free to use**. It allows API developers to design, publish, and manage the lifecycle of APIs and API product managers to create API products from one or more APIs. It hosts an application developer portal which helps in building and managing a developer community for your APIs. Its cloud-native API gateway is used for securing, routing, controlling and monitoring your API traffic in a scalable manner.\n+<div style=\"width: 100%; overflow: hidden;\">\n+  \n+<div class=\"rightContentOverview\" style=\"width:40% !important;\"> WSO2 API Manager is a fully open-source API management platform. It supports API designing, API publishing,  lifecycle management, application development, API security,  rate limiting, viewing statistics of APIs, as well as connecting APIs, API Products, and endpoints.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091a414b2ea104063d6e44e88bf45785c6d9db3d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI1NjQ0NQ==", "bodyText": "Can we reduce the white space between the image and the text. This applies to all the images.", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r539256445", "createdAt": "2020-12-09T12:14:32Z", "author": {"login": "Mariangela"}, "path": "en/docs/getting-started/overview.md", "diffHunk": "@@ -1,99 +1,101 @@\n # Overview\n \n-WSO2 API Manager is a fully open-source solution for end to end API Management in the cloud, on-prem or in hybrid environments. It comes with an [Apache Software License Version 2.0](http://www.apache.org/licenses/LICENSE-2.0) which makes it **free to use**. It allows API developers to design, publish, and manage the lifecycle of APIs and API product managers to create API products from one or more APIs. It hosts an application developer portal which helps in building and managing a developer community for your APIs. Its cloud-native API gateway is used for securing, routing, controlling and monitoring your API traffic in a scalable manner.\n+<div style=\"width: 100%; overflow: hidden;\">\n+  \n+<div class=\"rightContentOverview\" style=\"width:40% !important;\"> WSO2 API Manager is a fully open-source API management platform. It supports API designing, API publishing,  lifecycle management, application development, API security,  rate limiting, viewing statistics of APIs, as well as connecting APIs, API Products, and endpoints.\n+  </div>\n+  \n+   <iframe width=\"450\" height=\"260\" src=\"https://www.youtube.com/embed/JejVjoaAc38\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n+</div>\n \n-## **What is the WSO2 API Manager** ?\n \n-WSO2 API Manager is the only 100% open-source product that addresses all aspects of API management including API development, productization, consumption, security, rate limitation, monetization and analytics.\n \n-![]({{base_path}}/assets/attachments/103327648/103346653.png)\n-In brief, the WSO2 API Manager consists of 6 main components, the [API Publisher,](#api-publisher) the [API developer Portal,](#developer-portal) [API Gateway](#api-gateway) (now comes as a [API Microgateway](https://mg.docs.wso2.com/en/3.2.0/) as well ), [Key Manager,](#key-manager) [Traffic Manager](#traffic-manager) and the [API Analytics](#analytics). For more information on these components see [Basic Architecture and Key Components]().\n+### Develop, Deploy and Manage APIs/API Products\n \n-The key features of the product are listed below.\n \n-## Key Features\n+<div style=\"width: 100%; overflow: hidden;\">\n \n--  Design and Prototype APIs\n--  Publish API Products and Govern the Use of APIs\n--  Control Access and Enforce Security\n--  Developer Portal\n--  Manage Developer Community\n--  Manage and Scale API Traffic\n--  Monitor and Monetize\n--  Pluggable, Extensible, and Themeable\n--  Easily Deployable in Your Enterprise\n--  WSO2 Platform Multi-Tenancy Support\n--  Multiple Key Manager Support\n+<div class=\"leftContentOverview\" style=\"width:75% !important;\">A well-designed API can make your APIs easy to use. WSO2 API Manager\u2019s API Publisher guides you through API creation to API Publishing while adhering to the respective API\u2019s specification. The API Publisher\u2018s user-friendly UI helps you create APIs, manage the API life cycle, secure your APIs, apply rate limiting policies, connect to endpoints, and publish your APIs easily. Additionally, you can create and publish API Products as well.\n+  </div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091a414b2ea104063d6e44e88bf45785c6d9db3d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI1ODUxNw==", "bodyText": "Can we get marketing to redraw this image as it shows that it does not follow the same standard as the other images. As the other images have thinner lines.", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r539258517", "createdAt": "2020-12-09T12:17:31Z", "author": {"login": "Mariangela"}, "path": "en/docs/getting-started/overview.md", "diffHunk": "@@ -1,99 +1,101 @@\n # Overview\n \n-WSO2 API Manager is a fully open-source solution for end to end API Management in the cloud, on-prem or in hybrid environments. It comes with an [Apache Software License Version 2.0](http://www.apache.org/licenses/LICENSE-2.0) which makes it **free to use**. It allows API developers to design, publish, and manage the lifecycle of APIs and API product managers to create API products from one or more APIs. It hosts an application developer portal which helps in building and managing a developer community for your APIs. Its cloud-native API gateway is used for securing, routing, controlling and monitoring your API traffic in a scalable manner.\n+<div style=\"width: 100%; overflow: hidden;\">\n+  \n+<div class=\"rightContentOverview\" style=\"width:40% !important;\"> WSO2 API Manager is a fully open-source API management platform. It supports API designing, API publishing,  lifecycle management, application development, API security,  rate limiting, viewing statistics of APIs, as well as connecting APIs, API Products, and endpoints.\n+  </div>\n+  \n+   <iframe width=\"450\" height=\"260\" src=\"https://www.youtube.com/embed/JejVjoaAc38\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n+</div>\n \n-## **What is the WSO2 API Manager** ?\n \n-WSO2 API Manager is the only 100% open-source product that addresses all aspects of API management including API development, productization, consumption, security, rate limitation, monetization and analytics.\n \n-![]({{base_path}}/assets/attachments/103327648/103346653.png)\n-In brief, the WSO2 API Manager consists of 6 main components, the [API Publisher,](#api-publisher) the [API developer Portal,](#developer-portal) [API Gateway](#api-gateway) (now comes as a [API Microgateway](https://mg.docs.wso2.com/en/3.2.0/) as well ), [Key Manager,](#key-manager) [Traffic Manager](#traffic-manager) and the [API Analytics](#analytics). For more information on these components see [Basic Architecture and Key Components]().\n+### Develop, Deploy and Manage APIs/API Products\n \n-The key features of the product are listed below.\n \n-## Key Features\n+<div style=\"width: 100%; overflow: hidden;\">\n \n--  Design and Prototype APIs\n--  Publish API Products and Govern the Use of APIs\n--  Control Access and Enforce Security\n--  Developer Portal\n--  Manage Developer Community\n--  Manage and Scale API Traffic\n--  Monitor and Monetize\n--  Pluggable, Extensible, and Themeable\n--  Easily Deployable in Your Enterprise\n--  WSO2 Platform Multi-Tenancy Support\n--  Multiple Key Manager Support\n+<div class=\"leftContentOverview\" style=\"width:75% !important;\">A well-designed API can make your APIs easy to use. WSO2 API Manager\u2019s API Publisher guides you through API creation to API Publishing while adhering to the respective API\u2019s specification. The API Publisher\u2018s user-friendly UI helps you create APIs, manage the API life cycle, secure your APIs, apply rate limiting policies, connect to endpoints, and publish your APIs easily. Additionally, you can create and publish API Products as well.\n+  </div>\n+  \n+  <div class=\"rightImageOverview\">\n+          <a href='{{base_path}}/assets/img/get_started/build.png'>\n+              <img src='{{base_path}}/assets/img/get_started/build.png' alt=\"Develop, Deploy and Manage APIs/API Products\" />\n+          </a>\n+      </div>\n+</div>\n \n-## Basic Architecture and Key Components\n \n-The WSO2 API Manager consists of 6 main components, the [API Publisher,](#api-publisher) the [API Developer Portal,](#developer-portal) [API Gateway](#api-gateway) (now comes as an [API Microgateway](https://mg.docs.wso2.com/en/3.2.0/) as well ), [Key Manager,](#key-manager) [Traffic Manager](#traffic-manager) and the [API Analytics](#analytics). A component is made up of one or more [OSGi](http://www.osgi.org/Technology/Home) bundles. A bundle is the modularization unit in OSGi, similar to a JAR file in Java.\n+### Make your APIs Discoverable\n \n-The component architecture of the WSO2 API Manager is illustrated in the diagram below.\n+<div style=\"width: 100%; overflow: hidden;\">\n \n-#### API Publisher\n+<div class=\"rightContentOverview\" style=\"width:75% !important;\">Making your APIs easy to find will help you grow your customer base. You can use the WSO2 API Manager API Publisher to create categories or use tags to categorize the APIs. The API Developer Portal includes a text-full search engine that helps your customers find APIs easily.\n+  </div>\n+  \n+  <div class=\"leftImageOverview\">\n+          <a href='{{base_path}}/assets/img/get_started/find.png'>\n+              <img src='{{base_path}}/assets/img/get_started/find.png' alt=\"Make your APIs Discoverable\" />\n+          </a>\n+      </div>\n+</div>\n \n-![]({{base_path}}/assets/attachments/103327648/126556771.png)\n \n-API development is usually done by someone who understands the technical aspects of the API, interfaces, documentation, versions etc., while API management is typically carried out by someone who understands the business aspects of the APIs. In most business environments, API development is a responsibility that is distinct from API publication and management.\n+### Expose developer-friendly APIs\n \n-WSO2 API Manager provides a state-of-the-art web interface called **WSO2 API Publisher** for API development and management. It is a structured GUI designed for API creators to develop, document, scale and version APIs, while also facilitating more API management-related tasks such as publishing API, monetizing APIs, and promoting.\n+<div style=\"width: 100%; overflow: hidden;\">\n \n-The diagram\u00a0above shows the common lifecycle activities of an API developer/manager.\n+<div class=\"leftContentOverview\" style=\"width:75% !important;\">A well-documented, easy-to-use API can help developers be more productive in building applications. You can use the WSO2 API Manager API Publisher to add and maintain API documentation to provide information as much as possible to your users. The API Developer Portal\u2019s user-friendly UIs help developers find, test, and securely use APIs in their applications. \n+  </div>\n+  \n+  <div class=\"rightImageOverview\">\n+          <a href='{{base_path}}/assets/img/get_started/portals.png'>\n+              <img src='{{base_path}}/assets/img/get_started/portals.png' alt=\"Expose developer-friendly APIs\" />\n+          </a>\n+      </div>\n+</div>\n \n-#### Developer Portal\n \n-![]({{base_path}}/assets/attachments/103327648/126556772.png)\n+### Secure your APIs\n \n-The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to [self-register]({{base_path}}/learn/consume-api/customizations/customizing-the-developer-portal/enabling-or-disabling-self-signup), discover, evaluate, subscribe to and consume APIs.\n+<div style=\"width: 100%; overflow: hidden;\">\n \n+<div class=\"rightContentOverview\" style=\"width:75% !important;\">Control your APIs by securing them thoroughly in a user-friendly manner. API Security is more than API authentication and authorization. WSO2 API Manager allows you to secure your APIs fully by using visibility control, threat protection, API payload validation, adhering to well-defined protocols, applying rate limiting policies, and verifying APIs against specifications in addition to API authentication and authorization.\n+  </div>\n+  \n+  <div class=\"leftImageOverview\">\n+          <a href='{{base_path}}/assets/img/get_started/security.png'>\n+              <img src='{{base_path}}/assets/img/get_started/security.png' alt=\"Secure your APIs\" />\n+          </a>\n+      </div>\n+</div>\n \n-The diagram above shows common API consumer lifecycle activities:\n \n-#### API Gateway\n+### Balance your APIs Demand\n \n-The API Gateway is a runtime, backend component (an [API proxy](https://docs.wso2.com/display/EI611/Working+with+APIs) ) developed using [WSO2 ESB]({{base_path}}/getting-started/about-this-release/). API Gateway secures, protects, manages, and scales API calls. It intercepts API requests, applies policies such as throttling and security using handlers, and manages API statistics. Upon validation of a policy, the Gateway passes web service calls to the actual backend. If the service call is a token request, the Gateway passes it directly to the [Key Manager](#key-manager).\n+<div style=\"width: 100%; overflow: hidden;\">\n \n-The API Gateway supports OAuth 2.0, JWT, Basic Auth, Mutual SSL as well as API-Key based authentication mechanisms the above-mentioned authentication mechanisms and enables IT organizations to enforce rate limits and throttling policies.\n+<div class=\"leftContentOverview\" style=\"width:75% !important;\">Balancing the load of your system is critical to avoid system outages. WSO2 API Manager provides the capability to add rate limiting policies to your APIs. Furthermore, you can use these policies to monetize your APIs and bring revenue to your organization.  \n+  </div>\n+  \n+  <div class=\"rightImageOverview\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091a414b2ea104063d6e44e88bf45785c6d9db3d"}, "originalPosition": 114}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MTI2NTk3", "url": "https://github.com/wso2/docs-apim/pull/2485#pullrequestreview-548126597", "createdAt": "2020-12-09T12:19:52Z", "commit": {"oid": "091a414b2ea104063d6e44e88bf45785c6d9db3d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjoxOTo1MlrOICR0VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjoyMDo1NlrOICR3Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI1OTk4OA==", "bodyText": "Why do we say \"(policy enforcement point)\" here? It looks like it is part of the draft and needs to be removed.", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r539259988", "createdAt": "2020-12-09T12:19:52Z", "author": {"login": "Mariangela"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -0,0 +1,72 @@\n+# Basic Architecture and Key Components\n+\n+[![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+\n+## Management Plane\n+\n+The Management Plane is where API creation and API management takes place.  It consists of portals (Publisher, Developer Portal, Admin Portal) for users to create and manage APIs, implement rate limiting policies, monitor, and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The Management Plane includes API Analytics dashboards, displaying various business insights.\n+\n+### Components\n+\n+#### API Publisher\n+\n+[![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+\n+WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate limiting policies.\n+\n+#### API Developer Portal\n+\n+[![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n+\n+The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to, and consume APIs securely and easily.\n+\n+#### API Analytics\n+\n+[![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)]({{base_path}}/assets/img/get_started/analytics.png)\n+\n+Monitoring and analytics of APIs deployed on WSO2 API Manager are provided by the WSO2 API Manager Analytics component. This component includes different types of dashboards to provide more detailed different statistical views of your APIs. Furthermore, you can secure your system by configuring alerts and notifications on pre-determined events to identify any unusual behaviors in near real-time.  For more information, see [Working with Analytics]({{base_path}}/learn/analytics/configuring-apim-analytics).\n+\n+\n+## Data Plane\n+\n+The Data Plane is where the created API is exposed to the public consumers and acts as the proxy for API calls. This also provides additional capabilities such as enforcing security, rate limiting etc. (policy enforcement point).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091a414b2ea104063d6e44e88bf45785c6d9db3d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI2MDY4Mg==", "bodyText": "This sentence needs to be revisited as it is incorrect.\n\"The API Gateway does the JWT token validation. The API Gateway validates it's signature and subscription using the information it has in it's an in-memory map.\"", "url": "https://github.com/wso2/docs-apim/pull/2485#discussion_r539260682", "createdAt": "2020-12-09T12:20:56Z", "author": {"login": "Mariangela"}, "path": "en/docs/getting-started/basic-architecture.md", "diffHunk": "@@ -0,0 +1,72 @@\n+# Basic Architecture and Key Components\n+\n+[![Basic Architecture]({{base_path}}/assets/img/get_started/basic-architecture.png)]({{base_path}}/assets/img/get_started/basic-architecture.png)\n+\n+## Management Plane\n+\n+The Management Plane is where API creation and API management takes place.  It consists of portals (Publisher, Developer Portal, Admin Portal) for users to create and manage APIs, implement rate limiting policies, monitor, and monetization, etc. It also provides a set of APIs to interact with external tools like API Controller. The Management Plane includes API Analytics dashboards, displaying various business insights.\n+\n+### Components\n+\n+#### API Publisher\n+\n+[![API Publisher]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)]({{base_path}}/assets/img/learn/overviewpage-rest-api.jpg)\n+\n+WSO2 API Manager\u2019s API Publisher is a state-of-the-art GUI based tool for API development and management. The GUI is designed for API creators to develop, document, secure, test, and version APIs with ease. It\u2019s also able to cater to more API management-related tasks such as publishing APIs, monetizing APIs, and applying rate limiting policies.\n+\n+#### API Developer Portal\n+\n+[![Developer Portal]({{base_path}}/assets/img/get_started/developer-portal-overview.png)]({{base_path}}/assets/img/get_started/developer-portal-overview.png)\n+\n+The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to self-register, discover, evaluate, subscribe to, and consume APIs securely and easily.\n+\n+#### API Analytics\n+\n+[![API Analytics]({{base_path}}/assets/img/get_started/analytics.png)]({{base_path}}/assets/img/get_started/analytics.png)\n+\n+Monitoring and analytics of APIs deployed on WSO2 API Manager are provided by the WSO2 API Manager Analytics component. This component includes different types of dashboards to provide more detailed different statistical views of your APIs. Furthermore, you can secure your system by configuring alerts and notifications on pre-determined events to identify any unusual behaviors in near real-time.  For more information, see [Working with Analytics]({{base_path}}/learn/analytics/configuring-apim-analytics).\n+\n+\n+## Data Plane\n+\n+The Data Plane is where the created API is exposed to the public consumers and acts as the proxy for API calls. This also provides additional capabilities such as enforcing security, rate limiting etc. (policy enforcement point).\n+\n+### Components\n+\n+#### API Gateway\n+\n+[![API Gateway]({{base_path}}/assets/img/learn/gateway-overview.png)]({{base_path}}/assets/img/learn/gateway-overview.png)\n+\n+WSO2 API Gateway acts as the entry point for an API request made to an API managed by WSO2 API Manager.\n+\n+The API Gateway does the JWT token validation. The API Gateway validates it's signature and subscription using the information it has in it's an in-memory map. This in-memory map includes API-related information, application-related information, subscription-related information, etc. which is updated each time an artifact (API/application) is updated.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "091a414b2ea104063d6e44e88bf45785c6d9db3d"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbc9b31c0c90418a98e399860b558caccd711dd3", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/bbc9b31c0c90418a98e399860b558caccd711dd3", "committedDate": "2020-12-09T14:44:58Z", "message": "addressing review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4Nzc2OTUw", "url": "https://github.com/wso2/docs-apim/pull/2485#pullrequestreview-548776950", "createdAt": "2020-12-10T02:42:38Z", "commit": {"oid": "bbc9b31c0c90418a98e399860b558caccd711dd3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0fc414763515757cc1a79a963c8751a799ed65b", "author": {"user": {"login": "shaniR", "name": "Shani Ranasinghe"}}, "url": "https://github.com/wso2/docs-apim/commit/d0fc414763515757cc1a79a963c8751a799ed65b", "committedDate": "2020-12-10T05:53:53Z", "message": "added spacing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4ODcyNzAz", "url": "https://github.com/wso2/docs-apim/pull/2485#pullrequestreview-548872703", "createdAt": "2020-12-10T05:56:42Z", "commit": {"oid": "d0fc414763515757cc1a79a963c8751a799ed65b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1554, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}