{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MTE5MDMy", "number": 1566, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNzoyNjoyMFrOERuSVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNTowNjowNFrOESBQ9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDE5NjA2OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNzoyNjoyMFrOG2lluQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNzo0NjoxOFrOG2mFew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5MjE1Mw==", "bodyText": "Can we change this as If you have export (or initialized) and committed another API Pizzashack-1.0.0 to the same repository and then run vcs status and vcs deploy commands, you will be able to see the below outputs. Since this has some typos.", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r459892153", "createdAt": "2020-07-24T07:26:20Z", "author": {"login": "Chamindu36"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initiallized) and commited another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55734923c1ed512b7bad2852b2a7d1dc81157aaf"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5NTA0OQ==", "bodyText": "It's the initialized word, right? Is there any other typo?", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r459895049", "createdAt": "2020-07-24T07:33:41Z", "author": {"login": "malinthaprasan"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initiallized) and commited another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5MjE1Mw=="}, "originalCommit": {"oid": "55734923c1ed512b7bad2852b2a7d1dc81157aaf"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5OTM2Ng==", "bodyText": "And \"committed\" also", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r459899366", "createdAt": "2020-07-24T07:44:14Z", "author": {"login": "Chamindu36"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initiallized) and commited another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5MjE1Mw=="}, "originalCommit": {"oid": "55734923c1ed512b7bad2852b2a7d1dc81157aaf"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkwMDI4Mw==", "bodyText": "Ah, correct. Fixed", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r459900283", "createdAt": "2020-07-24T07:46:18Z", "author": {"login": "malinthaprasan"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initiallized) and commited another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5MjE1Mw=="}, "originalCommit": {"oid": "55734923c1ed512b7bad2852b2a7d1dc81157aaf"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MDIwMDAzOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNzoyNzo1M1rOG2loDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwODozMzo0NFrOG2nY5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5Mjc0OQ==", "bodyText": "Can we change Initiallized as initialized?", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r459892749", "createdAt": "2020-07-24T07:27:53Z", "author": {"login": "Chamindu36"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initiallized) and commited another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. \n+\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tPizzashack-1.0.0: (Pizzashack-1.0.0)\n+\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: Pizzashack-1.0.0: (Pizzashack-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+        Here, **apictl** detects that there's a new API project is available to deploy. Without re-deploying the other unchanged API **SwaggerPetstore-1.0.0**, it will deploy only the new API.\n+\n+    !!! important\n+        For deploying an API using `vcs deploy` command: \n+        \n+        -   It is mandatory to have your API projects in a GIT based version control system.\n+        -   It is mandatory to have `api_params.yaml` file inside each API Project. This is created by default when you exported an API using `export-api` or initiallized an API Project using `init`. In `api_params.yaml`. The below configuration section is used to deploy the API.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55734923c1ed512b7bad2852b2a7d1dc81157aaf"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTkyMTYzOA==", "bodyText": "Fixed", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r459921638", "createdAt": "2020-07-24T08:33:44Z", "author": {"login": "malinthaprasan"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initiallized) and commited another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. \n+\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tPizzashack-1.0.0: (Pizzashack-1.0.0)\n+\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: Pizzashack-1.0.0: (Pizzashack-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+        Here, **apictl** detects that there's a new API project is available to deploy. Without re-deploying the other unchanged API **SwaggerPetstore-1.0.0**, it will deploy only the new API.\n+\n+    !!! important\n+        For deploying an API using `vcs deploy` command: \n+        \n+        -   It is mandatory to have your API projects in a GIT based version control system.\n+        -   It is mandatory to have `api_params.yaml` file inside each API Project. This is created by default when you exported an API using `export-api` or initiallized an API Project using `init`. In `api_params.yaml`. The below configuration section is used to deploy the API.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg5Mjc0OQ=="}, "originalCommit": {"oid": "55734923c1ed512b7bad2852b2a7d1dc81157aaf"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTE3NjM4OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzoxMDo0MVrOG2uvlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwODowMDo0NFrOG3DVAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MjEzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n          \n          \n            \n            The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0 onwards, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460042133", "createdAt": "2020-07-24T13:10:41Z", "author": {"login": "npamudika"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2Mjc5OA==", "bodyText": "shall we link to the repository?", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460362798", "createdAt": "2020-07-25T04:22:40Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MjEzMw=="}, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3OTM5Mw==", "bodyText": "This repository is created by the user. In one of the previous steps - https://github.com/wso2/docs-apim/blame/master/en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md#L162. So it's difficult to provide an exact link. I will reword it to indicate the above. Hope that would be ok?", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460379393", "createdAt": "2020-07-25T08:00:44Z", "author": {"login": "malinthaprasan"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MjEzMw=="}, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTE4MTQ0OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzoxMjoyMFrOG2uysA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNDo1MTo1NVrOG3TkZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MjkyOA==", "bodyText": "Should this be like below or? I am not clear about this sentence :)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1.  Change your working directory (`cd`) into the cloned git repository.\n          \n          \n            \n            1.  Change your working directory and (`cd`) into the cloned git repository.", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460042928", "createdAt": "2020-07-24T13:12:20Z", "author": {"login": "npamudika"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM4NTE0OQ==", "bodyText": "Its, cd <repo-name> :)", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460385149", "createdAt": "2020-07-25T09:14:32Z", "author": {"login": "malinthaprasan"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MjkyOA=="}, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY0NTQ3Nw==", "bodyText": "ahh :), shall we add that part too to sth like this?\nChange your working directory and navigate into the cloned git repository (cd <repo-name>)", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460645477", "createdAt": "2020-07-27T04:51:55Z", "author": {"login": "npamudika"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MjkyOA=="}, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTE4NzU4OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzoxNDoyMFrOG2u2kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxMzoxNDoyMFrOG2u2kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA0MzkyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n          \n          \n            \n                    If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to the same repository. The rest of the process will be the same as above.", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460043923", "createdAt": "2020-07-24T13:14:20Z", "author": {"login": "npamudika"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzI3NzkzOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDoyNDoxOVrOG3CUnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDoyNDoxOVrOG3CUnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2MjkwOQ==", "bodyText": "let's add code samples  for the commands", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460362909", "createdAt": "2020-07-25T04:24:19Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzI3ODk4OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDoyNTowN1rOG3CVDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxNjozNDowNVrOG3F4gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2MzAyMw==", "bodyText": "what are the environment-related details?", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460363023", "createdAt": "2020-07-25T04:25:07Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2MzQzOQ==", "bodyText": "\"the tool will automatically detect the target environment and prepare a new artifact containing environment-related details\"\n\nDoes it happen every time deploy command is run or does it happen at the first time?\nIf it happens all the time, shall we rephrase it as -: \" The above command will detect the target environment and prepare a new artifact containing environment-related details\"", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460363439", "createdAt": "2020-07-25T04:30:22Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2MzAyMw=="}, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyMTI1MQ==", "bodyText": "what are the environment-related details?\n\nSorry, that can be removed.\nThe deployment will happen all the time, so accepted the 2nd option.", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460421251", "createdAt": "2020-07-25T16:34:05Z", "author": {"login": "malinthaprasan"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2MzAyMw=="}, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzI4MDMyOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDoyNzowM1rOG3CVpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDoyNzowM1rOG3CVpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2MzE3NA==", "bodyText": "Shall we reword it as : \"Multple APIs could be promoted through CI/CD by commiting the respective API projects to the repository.", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460363174", "createdAt": "2020-07-25T04:27:03Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzI4NTI4OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDozNDo1M1rOG3CX6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxNzozMzowMFrOG3GNjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2Mzc1NQ==", "bodyText": "can we rephrase it as : \"A change to the repository (e.g. a new API) could be detected by running the vcs status and command. \"\nDo we need to repeat how to deploy an API?", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460363755", "createdAt": "2020-07-25T04:34:53Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initialized) and committed another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyNjYzOQ==", "bodyText": "Added a new section \"Adding a new API to the GIT repository\" with the steps.", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460426639", "createdAt": "2020-07-25T17:33:00Z", "author": {"login": "malinthaprasan"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initialized) and committed another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2Mzc1NQ=="}, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzI4NjIyOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDozNjoyOVrOG3CYVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxNzoyMDo0MFrOG3GJRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2Mzg2MA==", "bodyText": "Shall we add this to a new section \"Promoting an API to an existing Project\" or something similar?", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460363860", "createdAt": "2020-07-25T04:36:29Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initialized) and committed another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyNTU0Mw==", "bodyText": "Added \"Adding a new API to the GIT repository\"", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460425543", "createdAt": "2020-07-25T17:20:40Z", "author": {"login": "malinthaprasan"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initialized) and committed another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2Mzg2MA=="}, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzI5Mzk4OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDo0ODoyNlrOG3CcEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxNzoyMDo1OVrOG3GJXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NDgxNw==", "bodyText": "Shall we explain the commands seperately.", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460364817", "createdAt": "2020-07-25T04:48:26Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initialized) and committed another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. \n+\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tPizzashack-1.0.0: (Pizzashack-1.0.0)\n+\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: Pizzashack-1.0.0: (Pizzashack-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+        Here, **apictl** detects that there's a new API project is available to deploy. Without re-deploying the other unchanged API **SwaggerPetstore-1.0.0**, it will deploy only the new API.\n+\n+    !!! important", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyNTU2Ng==", "bodyText": "Done, with the new topic addition.", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460425566", "createdAt": "2020-07-25T17:20:59Z", "author": {"login": "malinthaprasan"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initialized) and committed another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. \n+\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tPizzashack-1.0.0: (Pizzashack-1.0.0)\n+\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: Pizzashack-1.0.0: (Pizzashack-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+        Here, **apictl** detects that there's a new API project is available to deploy. Without re-deploying the other unchanged API **SwaggerPetstore-1.0.0**, it will deploy only the new API.\n+\n+    !!! important", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NDgxNw=="}, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzI5NDM1OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDo0OToyNVrOG3CcPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDo0OToyNVrOG3CcPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NDg2Mg==", "bodyText": "This is created by default when you export an API", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460364862", "createdAt": "2020-07-25T04:49:25Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initialized) and committed another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. \n+\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tPizzashack-1.0.0: (Pizzashack-1.0.0)\n+\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: Pizzashack-1.0.0: (Pizzashack-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+        Here, **apictl** detects that there's a new API project is available to deploy. Without re-deploying the other unchanged API **SwaggerPetstore-1.0.0**, it will deploy only the new API.\n+\n+    !!! important\n+        For deploying an API using `vcs deploy` command: \n+        \n+        -   It is mandatory to have your API projects in a GIT based version control system.\n+        -   It is mandatory to have `api_params.yaml` file inside each API Project. This is created by default when you exported an API using `export-api` or initialized an API Project using `init`. In `api_params.yaml`. The below configuration section is used to deploy the API.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzI5NzMwOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDo1MzoyMFrOG3CdoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDo1MzoyMFrOG3CdoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NTIxNw==", "bodyText": "To promote a single API via CI/CD, the below alternative approach could be used.", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460365217", "createdAt": "2020-07-25T04:53:20Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initialized) and committed another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. \n+\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tPizzashack-1.0.0: (Pizzashack-1.0.0)\n+\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: Pizzashack-1.0.0: (Pizzashack-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+        Here, **apictl** detects that there's a new API project is available to deploy. Without re-deploying the other unchanged API **SwaggerPetstore-1.0.0**, it will deploy only the new API.\n+\n+    !!! important\n+        For deploying an API using `vcs deploy` command: \n+        \n+        -   It is mandatory to have your API projects in a GIT based version control system.\n+        -   It is mandatory to have `api_params.yaml` file inside each API Project. This is created by default when you exported an API using `export-api` or initialized an API Project using `init`. In `api_params.yaml`. The below configuration section is used to deploy the API.\n+\n+        ```bash\n+        vcs:\n+            import:\n+                update: true\n+                preserveProvider: true\n+        ```\n+\n+        You can change the above fields accordingly.\n+\n+        | Field           | Description                                                                              |\n+        |-----------------|------------------------------------------------------------------------------------------|\n+        | update          | Used to specify whether to update the API if it already exists during the deployment     |\n+        | preserveProvider| Preserve existing provider of API after importing it                                     |\n+        \n+\n+#### b. An alternative approach for importing a single API\n+\n+If you only have a single API to promote to upper environments through CI/CD, you can also follow the below alternative approach using the `import-api` command. This method is ideal if your CI/CD pipeline is not built based on GIT.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzI5NzU3OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDo1NDowMVrOG3Cdvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDo1NDowMVrOG3Cdvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NTI0Nw==", "bodyText": "Shall we link to the API Product documentation?", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460365247", "createdAt": "2020-07-25T04:54:01Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -294,6 +379,143 @@ Run any of the following CTL commands to get keys for the API/API Product.\n     - Using apictl tool the token type , HTTP request timeout, and export directory can be set up and changed. For more information on changing the token type, see [Set token type]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#set-token-type), [Set HTTP request timeout]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#set-http-request-timeout) and [Set export directory]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/##set-export-directory) accordingly. \n     - When running the above command, if you have not specified the --version (-v), the tool will consider the version as 1.0.0 by default. If you have specified the version, then that value will be considered.\n \n+### (H.) - Extending a CI/CD pipeline to support API Products\n+\n+For example, let's consider there is an API Product **PetsInfo** in development environment with a subset of operations of **SwaggerPetstore** API.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzI5OTM5OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDo1NjoyMVrOG3CelQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQxNjoyODo1MlrOG3F2oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NTQ2MQ==", "bodyText": "what is the unified approach?", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460365461", "createdAt": "2020-07-25T04:56:21Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NTgxMw==", "bodyText": "Shall we reword this as Promoting APIs in a GIT repository to upper environments via CI/CD\"", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460365813", "createdAt": "2020-07-25T05:01:19Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NTQ2MQ=="}, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQyMDc2OA==", "bodyText": "Its the unified command \"vcs deploy\" which can be used to deploy any project (API, App, API Product) as stated below.\nBut for being more clarity, +1 to the suggested topic.", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460420768", "createdAt": "2020-07-25T16:28:52Z", "author": {"login": "malinthaprasan"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NTQ2MQ=="}, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzMwMDQ2OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDo1ODoxMVrOG3CfFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNDo1ODoxMVrOG3CfFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NTU4OQ==", "bodyText": "shall we change this to \"promoting a single API via CI/CD to upper environments\"", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460365589", "createdAt": "2020-07-25T04:58:11Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -207,16 +207,101 @@ For more information on initializing an API Project using OpenAPI/Swagger Specif\n The Automation Server can be configured to run a specific pipeline for promoting artifacts to other environments. \n The DevOps team can develop this pipeline further to include automated tests, workflow approvals, and other tasks.  \n \n-The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. The **apictl** tool supports the process of importing API Projects via the `import-api` command. This command is mainly used in the pipeline to migrate to different environments.\n+The **apictl** tool should be installed in the automation servers to begin the process. As the tool supports a variety of platforms, including Linux/Windows and macOS, this can be done easily. \n \n-1.  Import the `SwaggerPetstore` API into the production environment and test the API by running the following sample command.\n+#### a. Promoting API project(s) in a GIT repository using a unified approach\n+\n+The repository (Version Control System) needs to be cloned into the instance that is executing the CI/CD process. From 3.2.0, **apictl** has the inbuilt support to integrate with a GIT based version control system. It gives a unified command `vcs deploy` to deploy any type of project (APIs, API Products and Apps).\n+\n+1.  Change your working directory (`cd`) into the cloned git repository.\n+2.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tSwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        ```\n+\n+3.  Import the **SwaggerPetstore** API into the production environment by running the following sample command.\n \n     !!! tip\n         - Make sure you have already logged-in to the `prod` environment. For more information, see \n         [Login to an Environment]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#login-to-an-environment).\n \n         - A user with `admin` role is allowed to import APIs. To create a custom user who can import APIs, refer [Steps to Create a Custom User who can Perform API Controller Operations]({{base_path}}/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations/#steps-to-create-a-custom-user-who-can-perform-api-controller-operations).\n \n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: SwaggerPetstore-1.0.0: (SwaggerPetstore-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+    Now the tool will automatically detect the target environment and prepare a new artifact containing environment-related details. \n+\n+    If you run `vcs deploy` command again, you will see the below output indicating that the deployment is already up-to-date.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Everything is up-to-date\n+        ```\n+\n+    !!! tip\n+        If you have multiple APIs to promote through CI/CD, you can commit those API projects as well to same repository. The rest of the process will be the same as above.\n+ \n+        If you have export (or initialized) and committed another API **Pizzashack-1.0.0** to the same repository and then run `vcs status` and `vcs deploy` commands, you will be able to see the below outputs. \n+\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        APIs (1) ...\n+        1: [save]\t\tPizzashack-1.0.0: (Pizzashack-1.0.0)\n+\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        APIs (1) ...\n+        1: Pizzashack-1.0.0: (Pizzashack-1.0.0)\n+        Successfully imported API\n+        ```\n+\n+        Here, **apictl** detects that there's a new API project is available to deploy. Without re-deploying the other unchanged API **SwaggerPetstore-1.0.0**, it will deploy only the new API.\n+\n+    !!! important\n+        For deploying an API using `vcs deploy` command: \n+        \n+        -   It is mandatory to have your API projects in a GIT based version control system.\n+        -   It is mandatory to have `api_params.yaml` file inside each API Project. This is created by default when you exported an API using `export-api` or initialized an API Project using `init`. In `api_params.yaml`. The below configuration section is used to deploy the API.\n+\n+        ```bash\n+        vcs:\n+            import:\n+                update: true\n+                preserveProvider: true\n+        ```\n+\n+        You can change the above fields accordingly.\n+\n+        | Field           | Description                                                                              |\n+        |-----------------|------------------------------------------------------------------------------------------|\n+        | update          | Used to specify whether to update the API if it already exists during the deployment     |\n+        | preserveProvider| Preserve existing provider of API after importing it                                     |\n+        \n+\n+#### b. An alternative approach for importing a single API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzMwNDcyOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNTowNDo1N1rOG3Cg_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNTowNDo1N1rOG3Cg_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NjA3OQ==", "bodyText": "Multiple API product projects could be promoted through CI/CD by commiting them to the same repository.", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460366079", "createdAt": "2020-07-25T05:04:57Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -294,6 +379,143 @@ Run any of the following CTL commands to get keys for the API/API Product.\n     - Using apictl tool the token type , HTTP request timeout, and export directory can be set up and changed. For more information on changing the token type, see [Set token type]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#set-token-type), [Set HTTP request timeout]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#set-http-request-timeout) and [Set export directory]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/##set-export-directory) accordingly. \n     - When running the above command, if you have not specified the --version (-v), the tool will consider the version as 1.0.0 by default. If you have specified the version, then that value will be considered.\n \n+### (H.) - Extending a CI/CD pipeline to support API Products\n+\n+For example, let's consider there is an API Product **PetsInfo** in development environment with a subset of operations of **SwaggerPetstore** API.\n+\n+1.  Export the API Product using `export api-product` command from the development environment (dev).\n+\n+    ```bash\n+    $ apictl export api-product -n PetsInfo -e dev\n+    \n+    Successfully exported API Product!\n+    Find the exported API Product at /home/wso2user/.wso2apictl/exported/api-products/dev/PetsInfo_1.0.0.zip\n+    ```\n+\n+2.  Extract the exported API Product Project.\n+\n+3.  Commit the project to the git repository.\n+\n+4.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        API Products (1) ...\n+        1: [save]\t\tPetsInfo-1.0.0: (PetsInfo-1.0.0)\n+        ```\n+\n+3.  Import the **PetsInfo** Product into the production environment by running the following sample command.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        API Products (1) ...\n+        1: PetsInfo-1.0.0: (PetsInfo-1.0.0)\n+        Successfully imported API Product\n+        ```\n+\n+    Now the tool will automatically detect the target environment and create the **PetsInfo** Product in the target environment.\n+    \n+    !!! important\n+        For deploying an API Product using `vcs deploy` command: \n+        \n+        -   It is mandatory to have your API Product projects in a GIT based version control system.\n+        -   It is mandatory to have `api_product_params.yaml` file inside each API Product Project. This is created by default when you exported an API Product using `export api-product`. In `api_product_params.yaml`. The below configuration section is used to deploy the API Product.\n+\n+        ```bash\n+        vcs:\n+            import:\n+                updateApiProduct: true\n+                preserveProvider: true\n+                importApis: true\n+                updateApis: false\n+        ```\n+\n+        You can change the above fields accordingly.\n+\n+        | Field           | Description                                                                                 |\n+        |-----------------|---------------------------------------------------------------------------------------------|\n+        | updateApiProduct| Used to specify whether to update the API Product if it already exists during the deployment|\n+        | preserveProvider| Preserve existing provider of the API Product after importing it                            |\n+        | importApis      | Import the dependant API(s) along with the API Product if the dependant API(s) are not available in the target environment|\n+        | updateApis      | Update the dependant API(s) in the target environment                                       |\n+\n+    !!! tip\n+        If you have multiple API Projects to promote through CI/CD, you can commit those API Product projects as well to same repository. The rest of the process will be the same as above.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzMwNTQ5OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNTowNjowNFrOG3ChWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNTowNjowNFrOG3ChWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM2NjE2OQ==", "bodyText": "Multiple applications could be promoted through CI/CD by committing those application projects to the same repository.", "url": "https://github.com/wso2/docs-apim/pull/1566#discussion_r460366169", "createdAt": "2020-07-25T05:06:04Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/api-controller/ci-cd-with-wso2-api-management.md", "diffHunk": "@@ -294,6 +379,143 @@ Run any of the following CTL commands to get keys for the API/API Product.\n     - Using apictl tool the token type , HTTP request timeout, and export directory can be set up and changed. For more information on changing the token type, see [Set token type]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#set-token-type), [Set HTTP request timeout]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/#set-http-request-timeout) and [Set export directory]({{base_path}}/learn/api-controller/getting-started-with-wso2-api-controller/##set-export-directory) accordingly. \n     - When running the above command, if you have not specified the --version (-v), the tool will consider the version as 1.0.0 by default. If you have specified the version, then that value will be considered.\n \n+### (H.) - Extending a CI/CD pipeline to support API Products\n+\n+For example, let's consider there is an API Product **PetsInfo** in development environment with a subset of operations of **SwaggerPetstore** API.\n+\n+1.  Export the API Product using `export api-product` command from the development environment (dev).\n+\n+    ```bash\n+    $ apictl export api-product -n PetsInfo -e dev\n+    \n+    Successfully exported API Product!\n+    Find the exported API Product at /home/wso2user/.wso2apictl/exported/api-products/dev/PetsInfo_1.0.0.zip\n+    ```\n+\n+2.  Extract the exported API Product Project.\n+\n+3.  Commit the project to the git repository.\n+\n+4.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        API Products (1) ...\n+        1: [save]\t\tPetsInfo-1.0.0: (PetsInfo-1.0.0)\n+        ```\n+\n+3.  Import the **PetsInfo** Product into the production environment by running the following sample command.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        API Products (1) ...\n+        1: PetsInfo-1.0.0: (PetsInfo-1.0.0)\n+        Successfully imported API Product\n+        ```\n+\n+    Now the tool will automatically detect the target environment and create the **PetsInfo** Product in the target environment.\n+    \n+    !!! important\n+        For deploying an API Product using `vcs deploy` command: \n+        \n+        -   It is mandatory to have your API Product projects in a GIT based version control system.\n+        -   It is mandatory to have `api_product_params.yaml` file inside each API Product Project. This is created by default when you exported an API Product using `export api-product`. In `api_product_params.yaml`. The below configuration section is used to deploy the API Product.\n+\n+        ```bash\n+        vcs:\n+            import:\n+                updateApiProduct: true\n+                preserveProvider: true\n+                importApis: true\n+                updateApis: false\n+        ```\n+\n+        You can change the above fields accordingly.\n+\n+        | Field           | Description                                                                                 |\n+        |-----------------|---------------------------------------------------------------------------------------------|\n+        | updateApiProduct| Used to specify whether to update the API Product if it already exists during the deployment|\n+        | preserveProvider| Preserve existing provider of the API Product after importing it                            |\n+        | importApis      | Import the dependant API(s) along with the API Product if the dependant API(s) are not available in the target environment|\n+        | updateApis      | Update the dependant API(s) in the target environment                                       |\n+\n+    !!! tip\n+        If you have multiple API Projects to promote through CI/CD, you can commit those API Product projects as well to same repository. The rest of the process will be the same as above.\n+\n+### (I.) - Extending a CI/CD pipeline to support applications\n+\n+Let's consider there is an Application **PetsApp** in development environment which is already subscribed to the **SwaggerPetstore** API.\n+\n+1.  Export the Application using `export app` command from the development environment (dev). Note that `--withKeys` option is used to export the subscriptions and keys (if any) of the application.\n+\n+    ```bash\n+    $ apictl export-app --name PetsApp --owner david -e dev --withKeys\n+\n+    Successfully exported Application!\n+    Find the exported Application at /home/wso2user/.wso2apictl/exported/apps/dev/david_PetsApp.zip\n+    ```\n+\n+2.  Extract the exported Application Project.\n+3.  Commit the project to the same git repository.\n+4.  Run `vcs status` command to see the available changes that needs to be deployed to the production environment.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs status -e prod\n+        Projects to Deploy (1)\n+\n+        Applications (1) ...\n+        1: [save]\t\tPetsApp: (PetsApp)\n+        ```\n+\n+3.  Import the **PetsApp** Application into the production environment by running the following sample command.\n+\n+    !!! example\n+        ```bash\n+        $ apictl vcs deploy -e prod\n+        Deploying Projects (1)...\n+\n+        Applications (1) ...\n+        1: PetsApp: (PetsApp)\n+        Successfully imported Application\n+        ```\n+\n+    Now the tool will automatically detect the target environment and create the application in the target environment.\n+\n+    !!! important\n+        For deploying an application using `vcs deploy` command:\n+        \n+        -   It is mandatory to have your Application projects in a GIT based version control system.\n+        -   It is mandatory to have `application_params.yaml` file inside each application project. This is created by default when you exported an Application using `export-app`. In `application_params.yaml`. The below configuration section is used to deploy the application.\n+\n+        ```bash\n+        vcs:\n+            import:\n+                update: true\n+                preserveOwner: true\n+                skipSubscriptions: false\n+                skipKeys: true\n+        ```\n+\n+        You can change the above fields accordingly.\n+\n+        | Field             | Description                                                                                 |\n+        |-------------------|---------------------------------------------------------------------------------------------|\n+        | update            | Used to specify whether to update the application if it already exists during the deployment|\n+        | preserveOwner     | Preserve existing owner of the application after importing it                               |\n+        | skipSubscriptions | Specifies whether to import the subscriptions of the application                            |\n+        | skipKeys          | Specifies whether to import the credentials of the application                              |\n+\n+    !!! tip\n+        If you have multiple applications to promote through CI/CD, you can commit those applications projects as well to the same repository similar to the APIs and API Products. The rest of the process will be the same as above.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad914f8d546888990747b2aafc739acf52ba4bfc"}, "originalPosition": 255}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1667, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}