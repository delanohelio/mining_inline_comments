{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2NTE4OTQ3", "number": 2493, "title": "Correct link paths and rename files to comply to APIM documentation standards - Guides section", "bodyText": "Security checks\n\nFollowed secure coding standards in http://wso2.com/technical-reports/wso2-secure-engineering-guidelines? yes\nRan FindSecurityBugs plugin and verified report? yes\nConfirmed that this PR doesn't commit any keys, passwords, tokens, usernames, or other secrets? yes", "createdAt": "2020-12-11T05:20:14Z", "url": "https://github.com/wso2/docs-apim/pull/2493", "merged": true, "mergeCommit": {"oid": "9e6b5c6d4d5ceab16f8b3109ccaaec3ac6f925ea"}, "closed": true, "closedAt": "2020-12-11T05:20:21Z", "author": {"login": "RukshiW"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlA87bgH2gAyNTM2NTE4OTQ3OjYzMDAzZDM0MWUxZWM4MTMxMGNmZjVlOGYzYmU0OGI5ZmQzNzYwNDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdo8HSOAFqTU1Nzc2MjM2NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "63003d341e1ec81310cff5e8f3be48b9fd376042", "author": {"user": {"login": "RukshiW", "name": null}}, "url": "https://github.com/wso2/docs-apim/commit/63003d341e1ec81310cff5e8f3be48b9fd376042", "committedDate": "2020-12-11T05:18:59Z", "message": "Correct link paths and rename files to comply to APIM documentation standards - Guides section."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NzYyMzY0", "url": "https://github.com/wso2/docs-apim/pull/2493#pullrequestreview-557762364", "createdAt": "2020-12-23T09:55:32Z", "commit": {"oid": "63003d341e1ec81310cff5e8f3be48b9fd376042"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwOTo1NTozMlrOIKfjaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwOTo1NTozMlrOIKfjaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzg3MzY0MQ==", "bodyText": "@RukshiW , from what I recall the links should not have \".md\" at the end of the hyperlink. Please check this because these links may be broken", "url": "https://github.com/wso2/docs-apim/pull/2493#discussion_r547873641", "createdAt": "2020-12-23T09:55:32Z", "author": {"login": "Mariangela"}, "path": "en/docs/use-cases/streaming-usecase/extracting-data-from-static-sources-in-real-time.md", "diffHunk": "@@ -6,15 +6,15 @@ WSO2 Streaming Integrator can extract data from static sources such as databases\n \n A database table is a stored collection of records of a specific schema. Each record can be equivalent to an event. WSO2 Streaming Integrator can integrate databases into the streaming flow by extracting records in database tables as streaming events. This can be done via change data capture or by polling a database.\n \n-![Extracting data from databases](../../assets/img/streaming/extracting-data-from-static-sources/extract-data-from-databases.png)\n+![Extracting data from databases]({{base_path}}/assets/img/streaming/extracting-data-from-static-sources/extract-data-from-databases.png)\n \n To understand how data is extracted from a database into a streaming flow, consider a scenario where an online booking site automatically save all online bookings of vacation packages in a database. The company wants to monitor the bookings in real-time. Therefore, this data stored in the database needs to be extracted in real time. You can either capture this data as change data or poll the database. The `cdc` Siddhi extensions can be used for both methods as explained in the following subsections.\n \n ### Change data capture\n \n Change data capture involves extracting any change that takes place in a selected database (i.e., any insert, update or a deletion) in real-time.\n \n-To capture change data via the [WSO2 Streaming Integrator Tooling](../../develop/streaming-apps/streaming-integrator-studio-overview.md), define an input [stream](https://siddhi.io/en/v5.1/docs/query-guide/#stream) with the appropriate schema to capture the information you require, and then connect a [source](https://siddhi.io/en/v5.1/docs/query-guide/#source) of the `cdc` type as shown in the example below.\n+To capture change data via the [WSO2 Streaming Integrator Tooling]({{base_path}}/develop/streaming-apps/streaming-integrator-studio-overview.md), define an input [stream](https://siddhi.io/en/v5.1/docs/query-guide/#stream) with the appropriate schema to capture the information you require, and then connect a [source](https://siddhi.io/en/v5.1/docs/query-guide/#source) of the `cdc` type as shown in the example below.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63003d341e1ec81310cff5e8f3be48b9fd376042"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1558, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}