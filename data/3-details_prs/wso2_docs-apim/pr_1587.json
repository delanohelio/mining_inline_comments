{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5MjEyMDUw", "number": 1587, "title": "Fix for https://github.com/wso2/docs-apim/issues/1569", "bodyText": "Purpose\n\nfixes #1569\nfix for #1577", "createdAt": "2020-07-30T14:03:35Z", "url": "https://github.com/wso2/docs-apim/pull/1587", "merged": true, "mergeCommit": {"oid": "f6f939cfbc68d39df17d77eba4d7513a9a8a16f5"}, "closed": true, "closedAt": "2020-08-04T05:51:41Z", "author": {"login": "Mariangela"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6AHNjAH2gAyNDU5MjEyMDUwOjk5YmMxMGY5MTFkNGViNmEzMjI0YzAzMTZkNjBkNDczYThkZTNiNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7UwU3AFqTQ2MDE3NTE1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "99bc10f911d4eb6a3224c0316d60d473a8de3b76", "author": {"user": {"login": "Mariangela", "name": "Mariangela Hills"}}, "url": "https://github.com/wso2/docs-apim/commit/99bc10f911d4eb6a3224c0316d60d473a8de3b76", "committedDate": "2020-07-30T14:01:34Z", "message": "fix for https://github.com/wso2/docs-apim/issues/1577"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f3db71f4d74f0a7bf8f2f862d15fdadacd72f5c", "author": {"user": {"login": "Mariangela", "name": "Mariangela Hills"}}, "url": "https://github.com/wso2/docs-apim/commit/1f3db71f4d74f0a7bf8f2f862d15fdadacd72f5c", "committedDate": "2020-07-30T14:01:34Z", "message": "fix for https://github.com/wso2/docs-apim/issues/1569"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4OTE2OTkw", "url": "https://github.com/wso2/docs-apim/pull/1587#pullrequestreview-458916990", "createdAt": "2020-07-31T05:01:42Z", "commit": {"oid": "1f3db71f4d74f0a7bf8f2f862d15fdadacd72f5c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNTowMTo0M1rOG58DqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNTowMTo0M1rOG58DqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQwNTk5Mw==", "bodyText": "Does the API invocation work without the productionUrl being specified?", "url": "https://github.com/wso2/docs-apim/pull/1587#discussion_r463405993", "createdAt": "2020-07-31T05:01:43Z", "author": {"login": "uvindra"}, "path": "en/docs/getting-started/quick-start-guide.md", "diffHunk": "@@ -239,101 +239,110 @@ Let's look at how you can use the CI/CD command line tool for APIs (API Controll\n      ```   \n \n 4. Point the API Controller to the instance of API Manager in which you \n-    want to deploy APIs. \n+    want to deploy APIs.\n \n-    Execute the following command to add an environment. \n+    Execute the following command to add an environment.\n      \n     !!!note\n         It is assumed that WSO2 API Manager is run locally \n          (localhost) using the default ports.\n     \n     ``` bash\n-        ./apictl add-env -e dev \\\n-             --registration https://localhost:9443 \\\n-             --token https://localhost:9443/oauth2/token \\\n-             --admin https://localhost:9443 \\\n-             --publisher https://localhost:9443 \\\n-             --devportal https://localhost:9443\n+    ./apictl add-env -e dev \\\n+            --registration https://localhost:9443 \\\n+            --token https://localhost:9443/oauth2/token \\\n+            --admin https://localhost:9443 \\\n+            --publisher https://localhost:9443 \\\n+            --devportal https://localhost:9443\n \n     ```\n      \n     !!!info\n          **Flags:**\n \n-             -Required :     \n-                `--environment` or `-e` : Name of the environment to be added   \n-                `--apim` : API Manager endpoint for the environments  \n-     \n-             -   Optional :      \n-                 `--admin` : Admin endpoint for the environment \n-                 `--token` : Token endpoint for the environment \n-                 `--registration` : Registration endpoint for the environment                   \n-                 `--publisher` : Publisher endpoint for the environment \n-                 `--devportal` : DevPortal endpoint for the environment\n-   \n+        - Required :     \n+        `--environment` or `-e` : Name of the environment to be added   \n+        `--apim` : API Manager endpoint for the environments  \n \n-     \n-  \n+        - Optional :      \n+            `--admin` : Admin endpoint for the environment \n+            `--token` : Token endpoint for the environment \n+            `--registration` : Registration endpoint for the environment                   \n+            `--publisher` : Publisher endpoint for the environment \n+            `--devportal` : DevPortal endpoint for the environment\n+   \n \n      On successfully executing this command, you should see the following message.\n      \n      `Successfully added environment 'dev'`\n \n ### Step 1 - Create an API\n-       \n-1. Initialize an API project by providing a name for the project. \n \n-     Let's use the command below to create an API named `PetstoreAPI`.  This creates a folder named `PetstoreAPI` in your current directory.\n+1. Initialize an API project by providing a name for the project.\n+\n+     Let's use the command below to create an API named `PetstoreAPI`. This creates a folder named `PetstoreAPI` in your current directory.\n \n        ```bash\n-       ./apictl init PetstoreAPI --oas https://petstore.swagger.io/v2/swagger.json\n-       ``` \n+       ./apictl init PetstoreAPI --oas https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples/v3.0/petstore.json\n+       ```\n+\n+     On successfully executing this command, you should see the following message.\n+\n+     ``` text\n+     Project initialized\n+     Open README file to learn more\n+     ```   \n     \n     !!! note\n \n-        Use the following command to view the various options related to initializing a project. \n+        Use the following command to view the various options related to initializing a project.\n \n         ```bash\n         ./apictl init --help\n         ```\n \n-2. Open the `api.yaml` file. \n+2. Open the `api.yaml` file.\n \n      Open and explore the `PetstoreAPI` folder with an IDE (e.g., VSCode). Navigate to the `Meta-information` directory and open the `api.yaml` file.\n \n     !!! tip\n \n         Alternatively, You can use a text editor to open this file as well.\n    \n-     Change the values of the attributes `status` and `productionUrl` as shown below and save the file. \n+     Change the value of the attribute `status` as shown below and save the file.\n        \n-     `status: PUBLISHED`  \n-     `productionUrl: http://petstore.swagger.io/v2`  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f3db71f4d74f0a7bf8f2f862d15fdadacd72f5c"}, "originalPosition": 259}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a8d54053ad94e900da141df0ff7fa9a91e275cb", "author": {"user": {"login": "Mariangela", "name": "Mariangela Hills"}}, "url": "https://github.com/wso2/docs-apim/commit/6a8d54053ad94e900da141df0ff7fa9a91e275cb", "committedDate": "2020-08-02T09:17:50Z", "message": "Updated based on the review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04f237bca70566e4186a95e50282c2d0d23632d2", "author": {"user": {"login": "Mariangela", "name": "Mariangela Hills"}}, "url": "https://github.com/wso2/docs-apim/commit/04f237bca70566e4186a95e50282c2d0d23632d2", "committedDate": "2020-08-02T10:02:29Z", "message": "added a sample petstore.json"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMTc1MTU2", "url": "https://github.com/wso2/docs-apim/pull/1587#pullrequestreview-460175156", "createdAt": "2020-08-03T16:38:30Z", "commit": {"oid": "04f237bca70566e4186a95e50282c2d0d23632d2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1813, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}