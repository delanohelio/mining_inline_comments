{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMjAwNTU2", "number": 1439, "reviewThreads": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo0MjozNFrOEONAUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoyNDozNVrOEOPBCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzI4NTkzOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo0MjozNFrOGxOMpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNTo0NDoxMlrOGxvHrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NjAyMw==", "bodyText": "Shall we remove this line? It gives no value addition.", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454266023", "createdAt": "2020-07-14T10:42:34Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1MTkyNw==", "bodyText": "shall i update it with\nThis section explains as to how you can enable a simple approval workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454751927", "createdAt": "2020-07-15T02:25:26Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NjAyMw=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1OTM1NQ==", "bodyText": "added", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454759355", "createdAt": "2020-07-15T02:53:01Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NjAyMw=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgwNTQyMA==", "bodyText": "removed as requested", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454805420", "createdAt": "2020-07-15T05:44:12Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NjAyMw=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzI4Njk4OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo0Mjo1NFrOGxONTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjo1Mjo1NlrOGxsTjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NjE5MA==", "bodyText": "Shall we reword this as \"Shall we reword this as follows:\nAttaching a custom workflow to application creation provides the ability to control the creation of applications (approve or reject the request for application creation) in the Developer Portal. An application is an entity that holds a set of subscribed APIs, accessed by an authorization key generated for that particular application.Therefore, controlling the creation of these applications would be a decision based on the organization's requirements.\"", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454266190", "createdAt": "2020-07-14T10:42:54Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).\n \n-Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n+Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal by allowing to approve or reject the request for application creation. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1OTMwOQ==", "bodyText": "replaced with the give text", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454759309", "createdAt": "2020-07-15T02:52:56Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).\n \n-Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n+Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal by allowing to approve or reject the request for application creation. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NjE5MA=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzI5NTQ5OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo0NTozNlrOGxOSpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjo1Mjo0NVrOGxsTUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NzU1OA==", "bodyText": "add \"click on Edit as text\" and edit the file.", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454267558", "createdAt": "2020-07-14T10:45:36Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).\n \n-Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n+Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal by allowing to approve or reject the request for application creation. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n \n Example usecase:\n \n -   Review the information that corresponds to an application by a specific reviewer before the application is created.\n -   The application creation would be offered as a paid service.\n -   The application creation should be allowed only to users who are in a specific role.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    \n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml` file.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the `ApplicationsApprovalTask-1.0.0` folder.\n-\n-    **Format**\n-\n-    ``` java\n-    <htd:argument name=\"role\">   \u00a0\n-        [new-role-name]\n-    </htd:argument>\u00a0\n-    ```\n-\n-## Step 1 - Configure the Business Process Server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration/previous-releases/) version 6.5.0 by selecting the version from the dropdown.\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. \n-\n-     This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-         - If you run WSO2 API-M and WSO2 EI on different machines, set the `hostname` to a different value than `localhost`.\n-         - If you change the BPS port **offset to a value other than 2 or run WSO2 API-M and WSO2 EI on different machines**, you need to search and replace the value 9765 in all the files (`.epr`) inside the `<API-M_HOME>/business-processes` directory with the new port (i.e., the value of 9763 + `<port-offset>`).\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` java\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` directory to the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory does not exist, create it.\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationCallbackService.epr` file based on WSO2 API Manager.\n-         ``` java\n-         <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-         ```\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationService.epr` file according to EI.\n-            ``` java\n-            <wsa:Address>http://localhost:9765/services/ApplicationService</wsa:Address>\n-            ```\n-\n-5.  Start the EI server\u00a0and sign in to the Management Console\u00a0(`https://<Server Host>:9443+<port-offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when logging in to the Management Console due to a compression issue that exists in the High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue, open the `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` file and change the `compression=\"on\"` to `compression=\"off\"` in the Connector configuration, and restart the EI server.\n \n+## Engage the Approval Workflow Executor in API Manager\n \n-6.  Add a workflow.\n-    1. Click **BPEL** under **Processes**.\n-    2. Upload the `<API-M_HOME>/business-processes/application-creation/BPEL/ApplicationApprovalWorkFlowProcess_1.0.0.zip` file to EI.\u00a0\n-        \n-         This is the business process archive file.\n-         [![Upload BPEL archive file]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)\n-\n-7.  Click **Main** --> **Human Tasks** --> **Add** and\u00a0upload the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file to EI.\u00a0\n-\n-     This is the human task archived file.\n-\n-     [![Add human task package]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the ApplicationsApprovalTask-1.0.0 folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">   \u00a0\n-            [new-role-name]\n-        </htd:argument>\u00a0\n-        ```\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure `workFlowServerURL` under `workflows` to point to the BPS server.\n-\n-**Example**\n-``` java\n-\"workFlowServerURL\": \"https://localhost:9445/services/\"\n-```\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of WSO2 API Manager into the client-truststore of the EI server and also import the certificate of EI into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are as follows:\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-\n-## Step 3 - Engage the WS Workflow Executor in the API Manager\n-\n-First, enable the application creation workflow.\n+First enable the approve workflow executor for application creation.\n \n 1.  Sign in to WSO2 API-M Management Console (`https://<Server-Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-    <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+    <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n     \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **WS Workflow Executor**. In addition, specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **Approval Workflow Executor** for application creation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2ODY5Mw==", "bodyText": "Click on \"Save Content\"", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454268693", "createdAt": "2020-07-14T10:47:58Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).\n \n-Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n+Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal by allowing to approve or reject the request for application creation. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n \n Example usecase:\n \n -   Review the information that corresponds to an application by a specific reviewer before the application is created.\n -   The application creation would be offered as a paid service.\n -   The application creation should be allowed only to users who are in a specific role.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    \n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml` file.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the `ApplicationsApprovalTask-1.0.0` folder.\n-\n-    **Format**\n-\n-    ``` java\n-    <htd:argument name=\"role\">   \u00a0\n-        [new-role-name]\n-    </htd:argument>\u00a0\n-    ```\n-\n-## Step 1 - Configure the Business Process Server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration/previous-releases/) version 6.5.0 by selecting the version from the dropdown.\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. \n-\n-     This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-         - If you run WSO2 API-M and WSO2 EI on different machines, set the `hostname` to a different value than `localhost`.\n-         - If you change the BPS port **offset to a value other than 2 or run WSO2 API-M and WSO2 EI on different machines**, you need to search and replace the value 9765 in all the files (`.epr`) inside the `<API-M_HOME>/business-processes` directory with the new port (i.e., the value of 9763 + `<port-offset>`).\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` java\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` directory to the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory does not exist, create it.\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationCallbackService.epr` file based on WSO2 API Manager.\n-         ``` java\n-         <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-         ```\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationService.epr` file according to EI.\n-            ``` java\n-            <wsa:Address>http://localhost:9765/services/ApplicationService</wsa:Address>\n-            ```\n-\n-5.  Start the EI server\u00a0and sign in to the Management Console\u00a0(`https://<Server Host>:9443+<port-offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when logging in to the Management Console due to a compression issue that exists in the High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue, open the `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` file and change the `compression=\"on\"` to `compression=\"off\"` in the Connector configuration, and restart the EI server.\n \n+## Engage the Approval Workflow Executor in API Manager\n \n-6.  Add a workflow.\n-    1. Click **BPEL** under **Processes**.\n-    2. Upload the `<API-M_HOME>/business-processes/application-creation/BPEL/ApplicationApprovalWorkFlowProcess_1.0.0.zip` file to EI.\u00a0\n-        \n-         This is the business process archive file.\n-         [![Upload BPEL archive file]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)\n-\n-7.  Click **Main** --> **Human Tasks** --> **Add** and\u00a0upload the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file to EI.\u00a0\n-\n-     This is the human task archived file.\n-\n-     [![Add human task package]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the ApplicationsApprovalTask-1.0.0 folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">   \u00a0\n-            [new-role-name]\n-        </htd:argument>\u00a0\n-        ```\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure `workFlowServerURL` under `workflows` to point to the BPS server.\n-\n-**Example**\n-``` java\n-\"workFlowServerURL\": \"https://localhost:9445/services/\"\n-```\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of WSO2 API Manager into the client-truststore of the EI server and also import the certificate of EI into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are as follows:\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-\n-## Step 3 - Engage the WS Workflow Executor in the API Manager\n-\n-First, enable the application creation workflow.\n+First enable the approve workflow executor for application creation.\n \n 1.  Sign in to WSO2 API-M Management Console (`https://<Server-Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-    <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+    <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n     \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **WS Workflow Executor**. In addition, specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **Approval Workflow Executor** for application creation.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NzU1OA=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1OTI1MA==", "bodyText": "added", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454759250", "createdAt": "2020-07-15T02:52:45Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).\n \n-Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n+Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal by allowing to approve or reject the request for application creation. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n \n Example usecase:\n \n -   Review the information that corresponds to an application by a specific reviewer before the application is created.\n -   The application creation would be offered as a paid service.\n -   The application creation should be allowed only to users who are in a specific role.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    \n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml` file.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the `ApplicationsApprovalTask-1.0.0` folder.\n-\n-    **Format**\n-\n-    ``` java\n-    <htd:argument name=\"role\">   \u00a0\n-        [new-role-name]\n-    </htd:argument>\u00a0\n-    ```\n-\n-## Step 1 - Configure the Business Process Server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration/previous-releases/) version 6.5.0 by selecting the version from the dropdown.\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. \n-\n-     This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-         - If you run WSO2 API-M and WSO2 EI on different machines, set the `hostname` to a different value than `localhost`.\n-         - If you change the BPS port **offset to a value other than 2 or run WSO2 API-M and WSO2 EI on different machines**, you need to search and replace the value 9765 in all the files (`.epr`) inside the `<API-M_HOME>/business-processes` directory with the new port (i.e., the value of 9763 + `<port-offset>`).\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` java\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` directory to the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory does not exist, create it.\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationCallbackService.epr` file based on WSO2 API Manager.\n-         ``` java\n-         <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-         ```\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationService.epr` file according to EI.\n-            ``` java\n-            <wsa:Address>http://localhost:9765/services/ApplicationService</wsa:Address>\n-            ```\n-\n-5.  Start the EI server\u00a0and sign in to the Management Console\u00a0(`https://<Server Host>:9443+<port-offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when logging in to the Management Console due to a compression issue that exists in the High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue, open the `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` file and change the `compression=\"on\"` to `compression=\"off\"` in the Connector configuration, and restart the EI server.\n \n+## Engage the Approval Workflow Executor in API Manager\n \n-6.  Add a workflow.\n-    1. Click **BPEL** under **Processes**.\n-    2. Upload the `<API-M_HOME>/business-processes/application-creation/BPEL/ApplicationApprovalWorkFlowProcess_1.0.0.zip` file to EI.\u00a0\n-        \n-         This is the business process archive file.\n-         [![Upload BPEL archive file]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)\n-\n-7.  Click **Main** --> **Human Tasks** --> **Add** and\u00a0upload the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file to EI.\u00a0\n-\n-     This is the human task archived file.\n-\n-     [![Add human task package]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the ApplicationsApprovalTask-1.0.0 folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">   \u00a0\n-            [new-role-name]\n-        </htd:argument>\u00a0\n-        ```\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure `workFlowServerURL` under `workflows` to point to the BPS server.\n-\n-**Example**\n-``` java\n-\"workFlowServerURL\": \"https://localhost:9445/services/\"\n-```\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of WSO2 API Manager into the client-truststore of the EI server and also import the certificate of EI into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are as follows:\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-\n-## Step 3 - Engage the WS Workflow Executor in the API Manager\n-\n-First, enable the application creation workflow.\n+First enable the approve workflow executor for application creation.\n \n 1.  Sign in to WSO2 API-M Management Console (`https://<Server-Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-    <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+    <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n     \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **WS Workflow Executor**. In addition, specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **Approval Workflow Executor** for application creation.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI2NzU1OA=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzMxNzYwOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo1MjoyMFrOGxOfzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjo1Mjo0MFrOGxsTOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3MDkyNA==", "bodyText": "what is the confguration referred to?", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454270924", "createdAt": "2020-07-14T10:52:20Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).\n \n-Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n+Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal by allowing to approve or reject the request for application creation. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n \n Example usecase:\n \n -   Review the information that corresponds to an application by a specific reviewer before the application is created.\n -   The application creation would be offered as a paid service.\n -   The application creation should be allowed only to users who are in a specific role.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    \n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml` file.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the `ApplicationsApprovalTask-1.0.0` folder.\n-\n-    **Format**\n-\n-    ``` java\n-    <htd:argument name=\"role\">   \u00a0\n-        [new-role-name]\n-    </htd:argument>\u00a0\n-    ```\n-\n-## Step 1 - Configure the Business Process Server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration/previous-releases/) version 6.5.0 by selecting the version from the dropdown.\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. \n-\n-     This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-         - If you run WSO2 API-M and WSO2 EI on different machines, set the `hostname` to a different value than `localhost`.\n-         - If you change the BPS port **offset to a value other than 2 or run WSO2 API-M and WSO2 EI on different machines**, you need to search and replace the value 9765 in all the files (`.epr`) inside the `<API-M_HOME>/business-processes` directory with the new port (i.e., the value of 9763 + `<port-offset>`).\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` java\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` directory to the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory does not exist, create it.\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationCallbackService.epr` file based on WSO2 API Manager.\n-         ``` java\n-         <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-         ```\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationService.epr` file according to EI.\n-            ``` java\n-            <wsa:Address>http://localhost:9765/services/ApplicationService</wsa:Address>\n-            ```\n-\n-5.  Start the EI server\u00a0and sign in to the Management Console\u00a0(`https://<Server Host>:9443+<port-offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when logging in to the Management Console due to a compression issue that exists in the High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue, open the `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` file and change the `compression=\"on\"` to `compression=\"off\"` in the Connector configuration, and restart the EI server.\n \n+## Engage the Approval Workflow Executor in API Manager\n \n-6.  Add a workflow.\n-    1. Click **BPEL** under **Processes**.\n-    2. Upload the `<API-M_HOME>/business-processes/application-creation/BPEL/ApplicationApprovalWorkFlowProcess_1.0.0.zip` file to EI.\u00a0\n-        \n-         This is the business process archive file.\n-         [![Upload BPEL archive file]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)\n-\n-7.  Click **Main** --> **Human Tasks** --> **Add** and\u00a0upload the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file to EI.\u00a0\n-\n-     This is the human task archived file.\n-\n-     [![Add human task package]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the ApplicationsApprovalTask-1.0.0 folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">   \u00a0\n-            [new-role-name]\n-        </htd:argument>\u00a0\n-        ```\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure `workFlowServerURL` under `workflows` to point to the BPS server.\n-\n-**Example**\n-``` java\n-\"workFlowServerURL\": \"https://localhost:9445/services/\"\n-```\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of WSO2 API Manager into the client-truststore of the EI server and also import the certificate of EI into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are as follows:\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-\n-## Step 3 - Engage the WS Workflow Executor in the API Manager\n-\n-First, enable the application creation workflow.\n+First enable the approve workflow executor for application creation.\n \n 1.  Sign in to WSO2 API-M Management Console (`https://<Server-Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-    <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+    <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n     \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **WS Workflow Executor**. In addition, specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **Approval Workflow Executor** for application creation.\n \n     ``` xml\n     <WorkFlowExtensions>\n-        <ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationWSWorkflowExecutor\">\n-             <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationApprovalWorkFlowProcess/</Property>\n-             <Property name=\"username\">admin</Property>\n-             <Property name=\"password\">admin</Property>\n-             <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-        </ApplicationCreation>\n+        <!--ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationSimpleWorkflowExecutor\"-->\n+        <ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationApprovalWorkflowExecutor\">\n     </WorkFlowExtensions>\n     ```\n \n-    !!! tip\n-        All the workflow process services of the EI run on port 9765 because you changed its default port (9763) with an offset of 2.\n-\n-\n-    The application creation WS Workflow Executor\u00a0is now engaged.\n+    The application creation Approve Workflow Executor\u00a0is now engaged.\n \n-\n-3.  Create an application via the Developer Portal.\n+4.  Create an application via the Developer Portal.\n     \n     1. Sign in to the Developer Portal.\n \n          (`https://localhost:9443/devportal`)\n \n-    2. Click **Applications** and create a new application.\n-         \n-         This invokes the application creation process and creates a Human Task instance that holds the execution of the BPEL process until some action is performed on it.\n-         \n-         Note that the **Status** field of the application states **INACTIVE (Waiting for approval)** if the BPEL is invoked correctly, indicating that the request is successfully submitted.\n-\n-         [![Application status is INACTIVE - Waiting for approval]({{base_path}}/assets/img/learn/add-application-wf-inactive.png) ]({{base_path}}/assets/img/learn/add-application-wf-inactive.png)\n+    2. Click **Applications** --> **ADD NEW APPLICATION** and create a new application.\n+                  \n+         Note that the **Status** field of the application states **INACTIVE** (Waiting for approval)\n \n-4.  Sign in to the Admin Portal (`https://localhost:9443/admin`), list all the tasks for application creation and approve the task. \n+         [![Application status is INACTIVE - Waiting for approval]({{base_path}}/assets/img/learn/application-creation-inactive.png) ]({{base_path}}/assets/img/learn/application-creation-inactive.png)\n \n-     It resumes the BPEL process and completes the application creation.\n+4.  Sign in to the Admin Portal (`https://localhost:9443/admin`), list all the tasks for application creation  from **Tasks** --> **Application Creation** and approve or reject the task. \n      \n-     [![Approve tasks]({{base_path}}/assets/img/learn/add-application-wf-approve.png)]({{base_path}}/assets/img/learn/add-application-wf-approve.png)\n+     [![Approve tasks]({{base_path}}/assets/img/learn/application-creation-pending-request.png)]({{base_path}}/assets/img/learn/application-creation-pending-request.png)\n \n \n 5.  Go back to the **Applications** page in the WSO2 Developer Portal and see the created application.\n \n-    Whenever a user tries to create an application in the Developer Portal, a request is sent to the workflow endpoint. A sample is shown below:\n-\n-    ``` xml\n-    <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:wor=\"http://workflow.subscription.apimgt.carbon.wso2.org\">\n-       <soapenv:Header />\n-       <soapenv:Body>\n-          <wor:createApplication xmlns:wor=\"http://workflow.application.apimgt.carbon.wso2.org\">\n-             <wor:applicationName>application1</wor:applicationName>\n-             <wor:applicationTier>Gold</wor:applicationTier>\n-             <wor:applicationCallbackUrl>http://webapp/url</wor:applicationCallbackUrl>\n-             <wor:applicationDescription>Application 1</wor:applicationDescription>\n-             <wor:tenantDomain>wso2.com</wor:tenantDomain>\n-             <wor:userName>user1</wor:userName>\n-             <wor:workflowExternalRef>c0aad878-278c-4439-8d7e-712ee71d3f1c</wor:workflowExternalRef>\n-             <wor:callBackURL>https://localhost:8243/services/WorkflowCallbackService</wor:callBackURL>\n-          </wor:createApplication>\n-       </soapenv:Body>\n-    </soapenv:Envelope>\n-    ```\n+    Check whether the status is updated to **ACTIVE** or **REJECTED**.\n \n     Elements of the above configuration are described below:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 214}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1OTIyNw==", "bodyText": "removed", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454759227", "createdAt": "2020-07-15T02:52:40Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).\n \n-Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n+Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal by allowing to approve or reject the request for application creation. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n \n Example usecase:\n \n -   Review the information that corresponds to an application by a specific reviewer before the application is created.\n -   The application creation would be offered as a paid service.\n -   The application creation should be allowed only to users who are in a specific role.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    \n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml` file.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the `ApplicationsApprovalTask-1.0.0` folder.\n-\n-    **Format**\n-\n-    ``` java\n-    <htd:argument name=\"role\">   \u00a0\n-        [new-role-name]\n-    </htd:argument>\u00a0\n-    ```\n-\n-## Step 1 - Configure the Business Process Server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration/previous-releases/) version 6.5.0 by selecting the version from the dropdown.\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. \n-\n-     This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-         - If you run WSO2 API-M and WSO2 EI on different machines, set the `hostname` to a different value than `localhost`.\n-         - If you change the BPS port **offset to a value other than 2 or run WSO2 API-M and WSO2 EI on different machines**, you need to search and replace the value 9765 in all the files (`.epr`) inside the `<API-M_HOME>/business-processes` directory with the new port (i.e., the value of 9763 + `<port-offset>`).\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` java\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` directory to the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory does not exist, create it.\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationCallbackService.epr` file based on WSO2 API Manager.\n-         ``` java\n-         <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-         ```\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationService.epr` file according to EI.\n-            ``` java\n-            <wsa:Address>http://localhost:9765/services/ApplicationService</wsa:Address>\n-            ```\n-\n-5.  Start the EI server\u00a0and sign in to the Management Console\u00a0(`https://<Server Host>:9443+<port-offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when logging in to the Management Console due to a compression issue that exists in the High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue, open the `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` file and change the `compression=\"on\"` to `compression=\"off\"` in the Connector configuration, and restart the EI server.\n \n+## Engage the Approval Workflow Executor in API Manager\n \n-6.  Add a workflow.\n-    1. Click **BPEL** under **Processes**.\n-    2. Upload the `<API-M_HOME>/business-processes/application-creation/BPEL/ApplicationApprovalWorkFlowProcess_1.0.0.zip` file to EI.\u00a0\n-        \n-         This is the business process archive file.\n-         [![Upload BPEL archive file]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)\n-\n-7.  Click **Main** --> **Human Tasks** --> **Add** and\u00a0upload the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file to EI.\u00a0\n-\n-     This is the human task archived file.\n-\n-     [![Add human task package]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the ApplicationsApprovalTask-1.0.0 folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">   \u00a0\n-            [new-role-name]\n-        </htd:argument>\u00a0\n-        ```\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure `workFlowServerURL` under `workflows` to point to the BPS server.\n-\n-**Example**\n-``` java\n-\"workFlowServerURL\": \"https://localhost:9445/services/\"\n-```\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of WSO2 API Manager into the client-truststore of the EI server and also import the certificate of EI into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are as follows:\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-\n-## Step 3 - Engage the WS Workflow Executor in the API Manager\n-\n-First, enable the application creation workflow.\n+First enable the approve workflow executor for application creation.\n \n 1.  Sign in to WSO2 API-M Management Console (`https://<Server-Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-    <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+    <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n     \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **WS Workflow Executor**. In addition, specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **Approval Workflow Executor** for application creation.\n \n     ``` xml\n     <WorkFlowExtensions>\n-        <ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationWSWorkflowExecutor\">\n-             <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationApprovalWorkFlowProcess/</Property>\n-             <Property name=\"username\">admin</Property>\n-             <Property name=\"password\">admin</Property>\n-             <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-        </ApplicationCreation>\n+        <!--ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationSimpleWorkflowExecutor\"-->\n+        <ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationApprovalWorkflowExecutor\">\n     </WorkFlowExtensions>\n     ```\n \n-    !!! tip\n-        All the workflow process services of the EI run on port 9765 because you changed its default port (9763) with an offset of 2.\n-\n-\n-    The application creation WS Workflow Executor\u00a0is now engaged.\n+    The application creation Approve Workflow Executor\u00a0is now engaged.\n \n-\n-3.  Create an application via the Developer Portal.\n+4.  Create an application via the Developer Portal.\n     \n     1. Sign in to the Developer Portal.\n \n          (`https://localhost:9443/devportal`)\n \n-    2. Click **Applications** and create a new application.\n-         \n-         This invokes the application creation process and creates a Human Task instance that holds the execution of the BPEL process until some action is performed on it.\n-         \n-         Note that the **Status** field of the application states **INACTIVE (Waiting for approval)** if the BPEL is invoked correctly, indicating that the request is successfully submitted.\n-\n-         [![Application status is INACTIVE - Waiting for approval]({{base_path}}/assets/img/learn/add-application-wf-inactive.png) ]({{base_path}}/assets/img/learn/add-application-wf-inactive.png)\n+    2. Click **Applications** --> **ADD NEW APPLICATION** and create a new application.\n+                  \n+         Note that the **Status** field of the application states **INACTIVE** (Waiting for approval)\n \n-4.  Sign in to the Admin Portal (`https://localhost:9443/admin`), list all the tasks for application creation and approve the task. \n+         [![Application status is INACTIVE - Waiting for approval]({{base_path}}/assets/img/learn/application-creation-inactive.png) ]({{base_path}}/assets/img/learn/application-creation-inactive.png)\n \n-     It resumes the BPEL process and completes the application creation.\n+4.  Sign in to the Admin Portal (`https://localhost:9443/admin`), list all the tasks for application creation  from **Tasks** --> **Application Creation** and approve or reject the task. \n      \n-     [![Approve tasks]({{base_path}}/assets/img/learn/add-application-wf-approve.png)]({{base_path}}/assets/img/learn/add-application-wf-approve.png)\n+     [![Approve tasks]({{base_path}}/assets/img/learn/application-creation-pending-request.png)]({{base_path}}/assets/img/learn/application-creation-pending-request.png)\n \n \n 5.  Go back to the **Applications** page in the WSO2 Developer Portal and see the created application.\n \n-    Whenever a user tries to create an application in the Developer Portal, a request is sent to the workflow endpoint. A sample is shown below:\n-\n-    ``` xml\n-    <soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:wor=\"http://workflow.subscription.apimgt.carbon.wso2.org\">\n-       <soapenv:Header />\n-       <soapenv:Body>\n-          <wor:createApplication xmlns:wor=\"http://workflow.application.apimgt.carbon.wso2.org\">\n-             <wor:applicationName>application1</wor:applicationName>\n-             <wor:applicationTier>Gold</wor:applicationTier>\n-             <wor:applicationCallbackUrl>http://webapp/url</wor:applicationCallbackUrl>\n-             <wor:applicationDescription>Application 1</wor:applicationDescription>\n-             <wor:tenantDomain>wso2.com</wor:tenantDomain>\n-             <wor:userName>user1</wor:userName>\n-             <wor:workflowExternalRef>c0aad878-278c-4439-8d7e-712ee71d3f1c</wor:workflowExternalRef>\n-             <wor:callBackURL>https://localhost:8243/services/WorkflowCallbackService</wor:callBackURL>\n-          </wor:createApplication>\n-       </soapenv:Body>\n-    </soapenv:Envelope>\n-    ```\n+    Check whether the status is updated to **ACTIVE** or **REJECTED**.\n \n     Elements of the above configuration are described below:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3MDkyNA=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 214}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzMyNDExOnYy", "diffSide": "RIGHT", "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo1NDoxNFrOGxOjxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNTo0NDowMVrOGxvHeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3MTk0MA==", "bodyText": "Shall we get rid of this line?", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454271940", "createdAt": "2020-07-14T10:54:14Z", "author": {"login": "shaniR"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1MTc0MA==", "bodyText": "shall I update this with following so that it gives an overall description?\nThis section explains how to enable a simple approval workflow to the user signup operation in the API Manager.", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454751740", "createdAt": "2020-07-15T02:24:50Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3MTk0MA=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1OTE5MQ==", "bodyText": "added", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454759191", "createdAt": "2020-07-15T02:52:34Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3MTk0MA=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgwNTM2OA==", "bodyText": "removed as requested", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454805368", "createdAt": "2020-07-15T05:44:01Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3MTk0MA=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzMyNjYxOnYy", "diffSide": "RIGHT", "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo1NTowMVrOGxOlRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMDowMDoyNFrOGx3IEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3MjMyNw==", "bodyText": "use {{base_path}}", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454272327", "createdAt": "2020-07-14T10:55:01Z", "author": {"login": "shaniR"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. \n \n-!!! note\n-    You can either use the **Entreprise Integrator(EI)** or the **Business Process Server(BPS)** for the business process tasks with API Manager during the Workflow configuration process.\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes :\n-\n-    1.   Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml` .\n-    2.   Point the database that has the API Manager user permissions to Enterprise Integrator(EI)/Business Process Server(BPS).\n-    3.   Share any LDAPs, if exist.\n-    4.   Unzip the `<API-M>/business-processes/user-signup/UserApprovalTask-1.0.0.zip` file, update the role as follows in the `UserApprovalTask.ht` file, and ZIP the `UserApprovalTask.ht` folder.\n-\n-    **Format**\n-\n-    ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-#### Configuring the Enterprise Integrator\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Entreprise Integrator(EI)** for the business process tasks. If not please refer the sub section for [Configuring the Business Process Server.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-business-process-server)\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration).\n-\n-2.  Make sure that an offset of 2 is added to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        If you **change the EI port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following :\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-        !!! note\n-            **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-            -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, please create it.\n-\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-    1.  Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to the port offset configured in API Manager. (Default port 8243).\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.  Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to the port offset of EI. (Default port 9763 + 2).\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the EI server](https://docs.wso2.com/display/EI650/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when logging into the Management console due to a compression issue that exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`\n-        </p>\n-        <p>To avoid this issue open `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-    ![Add BPEL to EI](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7. Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-    ![Add Human Task to EI](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the Business Process Server\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Business Process Server(BPS)** for the business process tasks. If not please refer the sub section for [Configuring the Entreprise Integrator.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-enterprise-integrator)\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-!!! tip\n-    If you **change the BPS port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-    -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-    !!! note\n-        **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-        -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xml` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<BPS_HOME>/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it .\n-        -   Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-\n-\n-    1.   Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to API Manager.\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.   Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to BPS.\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the BPS server](https://docs.wso2.com/display/AM260/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`</p>\n-        <p>To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to BPS. This is the business process archive file.\n-\n-    ![Add BPEL to BPS](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-    ![Add Human Task to BPS](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the API Manager\n-\n-1.  Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure **workFlowServerURL** under **workflows** to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"https://localhost:9445/services/\"` )\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of API Manager into the client-truststore of the EI/BPS server and also import the certificate of EI/BPS into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are :\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-        3. BPS - '<BPS_HOME>/repository/resources/security'\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n 1.  Log in to API-M management console ( `https://<Server-Host>:9443/carbon` ) and select **Browse** under **Resources**.\n \n-    ![Browse resources](../../assets/img/learn/browse-resources.png)\n+    ![Browse resources](../../assets/img/learn/wf-extensions-browse.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 188}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNjU5Mg==", "bodyText": "changed", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454936592", "createdAt": "2020-07-15T10:00:24Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. \n \n-!!! note\n-    You can either use the **Entreprise Integrator(EI)** or the **Business Process Server(BPS)** for the business process tasks with API Manager during the Workflow configuration process.\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes :\n-\n-    1.   Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml` .\n-    2.   Point the database that has the API Manager user permissions to Enterprise Integrator(EI)/Business Process Server(BPS).\n-    3.   Share any LDAPs, if exist.\n-    4.   Unzip the `<API-M>/business-processes/user-signup/UserApprovalTask-1.0.0.zip` file, update the role as follows in the `UserApprovalTask.ht` file, and ZIP the `UserApprovalTask.ht` folder.\n-\n-    **Format**\n-\n-    ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-#### Configuring the Enterprise Integrator\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Entreprise Integrator(EI)** for the business process tasks. If not please refer the sub section for [Configuring the Business Process Server.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-business-process-server)\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration).\n-\n-2.  Make sure that an offset of 2 is added to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        If you **change the EI port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following :\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-        !!! note\n-            **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-            -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, please create it.\n-\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-    1.  Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to the port offset configured in API Manager. (Default port 8243).\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.  Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to the port offset of EI. (Default port 9763 + 2).\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the EI server](https://docs.wso2.com/display/EI650/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when logging into the Management console due to a compression issue that exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`\n-        </p>\n-        <p>To avoid this issue open `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-    ![Add BPEL to EI](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7. Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-    ![Add Human Task to EI](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the Business Process Server\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Business Process Server(BPS)** for the business process tasks. If not please refer the sub section for [Configuring the Entreprise Integrator.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-enterprise-integrator)\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-!!! tip\n-    If you **change the BPS port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-    -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-    !!! note\n-        **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-        -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xml` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<BPS_HOME>/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it .\n-        -   Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-\n-\n-    1.   Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to API Manager.\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.   Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to BPS.\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the BPS server](https://docs.wso2.com/display/AM260/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`</p>\n-        <p>To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to BPS. This is the business process archive file.\n-\n-    ![Add BPEL to BPS](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-    ![Add Human Task to BPS](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the API Manager\n-\n-1.  Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure **workFlowServerURL** under **workflows** to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"https://localhost:9445/services/\"` )\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of API Manager into the client-truststore of the EI/BPS server and also import the certificate of EI/BPS into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are :\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-        3. BPS - '<BPS_HOME>/repository/resources/security'\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n 1.  Log in to API-M management console ( `https://<Server-Host>:9443/carbon` ) and select **Browse** under **Resources**.\n \n-    ![Browse resources](../../assets/img/learn/browse-resources.png)\n+    ![Browse resources](../../assets/img/learn/wf-extensions-browse.png)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3MjMyNw=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzMyOTgxOnYy", "diffSide": "RIGHT", "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo1NTo1NlrOGxOnCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMDowMDoxNFrOGx3HnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3Mjc3OA==", "bodyText": "Let's use UserSignUpApprovalWorkflowExecutor & UserSignUpWSWorkflowExecutor here instead of using a general term.", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454272778", "createdAt": "2020-07-14T10:55:56Z", "author": {"login": "shaniR"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. \n \n-!!! note\n-    You can either use the **Entreprise Integrator(EI)** or the **Business Process Server(BPS)** for the business process tasks with API Manager during the Workflow configuration process.\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes :\n-\n-    1.   Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml` .\n-    2.   Point the database that has the API Manager user permissions to Enterprise Integrator(EI)/Business Process Server(BPS).\n-    3.   Share any LDAPs, if exist.\n-    4.   Unzip the `<API-M>/business-processes/user-signup/UserApprovalTask-1.0.0.zip` file, update the role as follows in the `UserApprovalTask.ht` file, and ZIP the `UserApprovalTask.ht` folder.\n-\n-    **Format**\n-\n-    ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-#### Configuring the Enterprise Integrator\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Entreprise Integrator(EI)** for the business process tasks. If not please refer the sub section for [Configuring the Business Process Server.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-business-process-server)\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration).\n-\n-2.  Make sure that an offset of 2 is added to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        If you **change the EI port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following :\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-        !!! note\n-            **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-            -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, please create it.\n-\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-    1.  Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to the port offset configured in API Manager. (Default port 8243).\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.  Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to the port offset of EI. (Default port 9763 + 2).\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the EI server](https://docs.wso2.com/display/EI650/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when logging into the Management console due to a compression issue that exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`\n-        </p>\n-        <p>To avoid this issue open `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-    ![Add BPEL to EI](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7. Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-    ![Add Human Task to EI](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the Business Process Server\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Business Process Server(BPS)** for the business process tasks. If not please refer the sub section for [Configuring the Entreprise Integrator.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-enterprise-integrator)\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-!!! tip\n-    If you **change the BPS port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-    -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-    !!! note\n-        **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-        -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xml` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<BPS_HOME>/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it .\n-        -   Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-\n-\n-    1.   Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to API Manager.\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.   Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to BPS.\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the BPS server](https://docs.wso2.com/display/AM260/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`</p>\n-        <p>To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to BPS. This is the business process archive file.\n-\n-    ![Add BPEL to BPS](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-    ![Add Human Task to BPS](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the API Manager\n-\n-1.  Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure **workFlowServerURL** under **workflows** to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"https://localhost:9445/services/\"` )\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of API Manager into the client-truststore of the EI/BPS server and also import the certificate of EI/BPS into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are :\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-        3. BPS - '<BPS_HOME>/repository/resources/security'\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n 1.  Log in to API-M management console ( `https://<Server-Host>:9443/carbon` ) and select **Browse** under **Resources**.\n \n-    ![Browse resources](../../assets/img/learn/browse-resources.png)\n+    ![Browse resources](../../assets/img/learn/wf-extensions-browse.png)\n \n-2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **WS Workflow Executor**. Also specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **Approval Workflow Executor** for user self sign up.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 191}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNjQ3Ng==", "bodyText": "updated", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454936476", "createdAt": "2020-07-15T10:00:14Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. \n \n-!!! note\n-    You can either use the **Entreprise Integrator(EI)** or the **Business Process Server(BPS)** for the business process tasks with API Manager during the Workflow configuration process.\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes :\n-\n-    1.   Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml` .\n-    2.   Point the database that has the API Manager user permissions to Enterprise Integrator(EI)/Business Process Server(BPS).\n-    3.   Share any LDAPs, if exist.\n-    4.   Unzip the `<API-M>/business-processes/user-signup/UserApprovalTask-1.0.0.zip` file, update the role as follows in the `UserApprovalTask.ht` file, and ZIP the `UserApprovalTask.ht` folder.\n-\n-    **Format**\n-\n-    ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-#### Configuring the Enterprise Integrator\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Entreprise Integrator(EI)** for the business process tasks. If not please refer the sub section for [Configuring the Business Process Server.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-business-process-server)\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration).\n-\n-2.  Make sure that an offset of 2 is added to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        If you **change the EI port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following :\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-        !!! note\n-            **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-            -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, please create it.\n-\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-    1.  Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to the port offset configured in API Manager. (Default port 8243).\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.  Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to the port offset of EI. (Default port 9763 + 2).\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the EI server](https://docs.wso2.com/display/EI650/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when logging into the Management console due to a compression issue that exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`\n-        </p>\n-        <p>To avoid this issue open `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-    ![Add BPEL to EI](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7. Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-    ![Add Human Task to EI](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the Business Process Server\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Business Process Server(BPS)** for the business process tasks. If not please refer the sub section for [Configuring the Entreprise Integrator.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-enterprise-integrator)\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-!!! tip\n-    If you **change the BPS port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-    -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-    !!! note\n-        **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-        -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xml` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<BPS_HOME>/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it .\n-        -   Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-\n-\n-    1.   Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to API Manager.\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.   Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to BPS.\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the BPS server](https://docs.wso2.com/display/AM260/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`</p>\n-        <p>To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to BPS. This is the business process archive file.\n-\n-    ![Add BPEL to BPS](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-    ![Add Human Task to BPS](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the API Manager\n-\n-1.  Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure **workFlowServerURL** under **workflows** to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"https://localhost:9445/services/\"` )\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of API Manager into the client-truststore of the EI/BPS server and also import the certificate of EI/BPS into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are :\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-        3. BPS - '<BPS_HOME>/repository/resources/security'\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n 1.  Log in to API-M management console ( `https://<Server-Host>:9443/carbon` ) and select **Browse** under **Resources**.\n \n-    ![Browse resources](../../assets/img/learn/browse-resources.png)\n+    ![Browse resources](../../assets/img/learn/wf-extensions-browse.png)\n \n-2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **WS Workflow Executor**. Also specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **Approval Workflow Executor** for user self sign up.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3Mjc3OA=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 191}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzM0MDA3OnYy", "diffSide": "RIGHT", "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo1ODo0OVrOGxOs7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1ODowOFrOGx3CVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NDI4Ng==", "bodyText": "Let's use {{base_path}} and mkdocs syntax.", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454274286", "createdAt": "2020-07-14T10:58:49Z", "author": {"login": "shaniR"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. \n \n-!!! note\n-    You can either use the **Entreprise Integrator(EI)** or the **Business Process Server(BPS)** for the business process tasks with API Manager during the Workflow configuration process.\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes :\n-\n-    1.   Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml` .\n-    2.   Point the database that has the API Manager user permissions to Enterprise Integrator(EI)/Business Process Server(BPS).\n-    3.   Share any LDAPs, if exist.\n-    4.   Unzip the `<API-M>/business-processes/user-signup/UserApprovalTask-1.0.0.zip` file, update the role as follows in the `UserApprovalTask.ht` file, and ZIP the `UserApprovalTask.ht` folder.\n-\n-    **Format**\n-\n-    ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-#### Configuring the Enterprise Integrator\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Entreprise Integrator(EI)** for the business process tasks. If not please refer the sub section for [Configuring the Business Process Server.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-business-process-server)\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration).\n-\n-2.  Make sure that an offset of 2 is added to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        If you **change the EI port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following :\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-        !!! note\n-            **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-            -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, please create it.\n-\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-    1.  Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to the port offset configured in API Manager. (Default port 8243).\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.  Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to the port offset of EI. (Default port 9763 + 2).\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the EI server](https://docs.wso2.com/display/EI650/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when logging into the Management console due to a compression issue that exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`\n-        </p>\n-        <p>To avoid this issue open `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-    ![Add BPEL to EI](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7. Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-    ![Add Human Task to EI](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the Business Process Server\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Business Process Server(BPS)** for the business process tasks. If not please refer the sub section for [Configuring the Entreprise Integrator.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-enterprise-integrator)\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-!!! tip\n-    If you **change the BPS port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-    -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-    !!! note\n-        **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-        -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xml` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<BPS_HOME>/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it .\n-        -   Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-\n-\n-    1.   Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to API Manager.\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.   Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to BPS.\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the BPS server](https://docs.wso2.com/display/AM260/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`</p>\n-        <p>To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to BPS. This is the business process archive file.\n-\n-    ![Add BPEL to BPS](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-    ![Add Human Task to BPS](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the API Manager\n-\n-1.  Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure **workFlowServerURL** under **workflows** to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"https://localhost:9445/services/\"` )\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of API Manager into the client-truststore of the EI/BPS server and also import the certificate of EI/BPS into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are :\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-        3. BPS - '<BPS_HOME>/repository/resources/security'\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n 1.  Log in to API-M management console ( `https://<Server-Host>:9443/carbon` ) and select **Browse** under **Resources**.\n \n-    ![Browse resources](../../assets/img/learn/browse-resources.png)\n+    ![Browse resources](../../assets/img/learn/wf-extensions-browse.png)\n \n-2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **WS Workflow Executor**. Also specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **Approval Workflow Executor** for user self sign up.\n \n-    ```html/xml\n-        <WorkFlowExtensions>\n+    ```\n+    <WorkFlowExtensions>\n         ...\n-            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpWSWorkflowExecutor\">\n-                 <Property name=\"serviceEndpoint\">http://localhost:9765/services/UserSignupProcess/</Property>\n-                 <Property name=\"username\">admin</Property>\n-                 <Property name=\"password\">admin</Property>\n-                 <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-            </UserSignUp>\n+            <!--UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpSimpleWorkflowExecutor\"/-->\n+            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpApprovalWorkflowExecutor\"/>\n         ...\n     </WorkFlowExtensions>\n     ```\n-    !!! info\n-        All workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n \n-3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user.\n+3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user. (Go to **Sign in** --> **Create Account**  and add the details of the new user).\n <html>\n     <body>\n         <div>\n-            <img src=\"../../../../assets/img/learn/register-now.png\" alt=\"Register now option\" width=\"600\"/>\n+            <img src=\"../../../../assets/img/learn/devportal-create-account.png\" alt=\"Create new  Account\" width=\"400\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 218}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNTEyNQ==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454935125", "createdAt": "2020-07-15T09:58:08Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. \n \n-!!! note\n-    You can either use the **Entreprise Integrator(EI)** or the **Business Process Server(BPS)** for the business process tasks with API Manager during the Workflow configuration process.\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes :\n-\n-    1.   Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml` .\n-    2.   Point the database that has the API Manager user permissions to Enterprise Integrator(EI)/Business Process Server(BPS).\n-    3.   Share any LDAPs, if exist.\n-    4.   Unzip the `<API-M>/business-processes/user-signup/UserApprovalTask-1.0.0.zip` file, update the role as follows in the `UserApprovalTask.ht` file, and ZIP the `UserApprovalTask.ht` folder.\n-\n-    **Format**\n-\n-    ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-#### Configuring the Enterprise Integrator\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Entreprise Integrator(EI)** for the business process tasks. If not please refer the sub section for [Configuring the Business Process Server.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-business-process-server)\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration).\n-\n-2.  Make sure that an offset of 2 is added to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        If you **change the EI port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following :\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-        !!! note\n-            **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-            -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, please create it.\n-\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-    1.  Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to the port offset configured in API Manager. (Default port 8243).\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.  Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to the port offset of EI. (Default port 9763 + 2).\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the EI server](https://docs.wso2.com/display/EI650/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when logging into the Management console due to a compression issue that exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`\n-        </p>\n-        <p>To avoid this issue open `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-    ![Add BPEL to EI](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7. Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-    ![Add Human Task to EI](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the Business Process Server\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Business Process Server(BPS)** for the business process tasks. If not please refer the sub section for [Configuring the Entreprise Integrator.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-enterprise-integrator)\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-!!! tip\n-    If you **change the BPS port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-    -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-    !!! note\n-        **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-        -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xml` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<BPS_HOME>/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it .\n-        -   Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-\n-\n-    1.   Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to API Manager.\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.   Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to BPS.\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the BPS server](https://docs.wso2.com/display/AM260/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`</p>\n-        <p>To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to BPS. This is the business process archive file.\n-\n-    ![Add BPEL to BPS](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-    ![Add Human Task to BPS](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the API Manager\n-\n-1.  Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure **workFlowServerURL** under **workflows** to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"https://localhost:9445/services/\"` )\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of API Manager into the client-truststore of the EI/BPS server and also import the certificate of EI/BPS into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are :\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-        3. BPS - '<BPS_HOME>/repository/resources/security'\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n 1.  Log in to API-M management console ( `https://<Server-Host>:9443/carbon` ) and select **Browse** under **Resources**.\n \n-    ![Browse resources](../../assets/img/learn/browse-resources.png)\n+    ![Browse resources](../../assets/img/learn/wf-extensions-browse.png)\n \n-2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **WS Workflow Executor**. Also specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **Approval Workflow Executor** for user self sign up.\n \n-    ```html/xml\n-        <WorkFlowExtensions>\n+    ```\n+    <WorkFlowExtensions>\n         ...\n-            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpWSWorkflowExecutor\">\n-                 <Property name=\"serviceEndpoint\">http://localhost:9765/services/UserSignupProcess/</Property>\n-                 <Property name=\"username\">admin</Property>\n-                 <Property name=\"password\">admin</Property>\n-                 <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-            </UserSignUp>\n+            <!--UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpSimpleWorkflowExecutor\"/-->\n+            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpApprovalWorkflowExecutor\"/>\n         ...\n     </WorkFlowExtensions>\n     ```\n-    !!! info\n-        All workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n \n-3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user.\n+3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user. (Go to **Sign in** --> **Create Account**  and add the details of the new user).\n <html>\n     <body>\n         <div>\n-            <img src=\"../../../../assets/img/learn/register-now.png\" alt=\"Register now option\" width=\"600\"/>\n+            <img src=\"../../../../assets/img/learn/devportal-create-account.png\" alt=\"Create new  Account\" width=\"400\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NDI4Ng=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 218}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzM0MDk5OnYy", "diffSide": "RIGHT", "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMDo1OTowOFrOGxOtfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1ODoxOVrOGx3CxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NDQyOA==", "bodyText": "let's use {{base_path}}", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454274428", "createdAt": "2020-07-14T10:59:08Z", "author": {"login": "shaniR"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. \n \n-!!! note\n-    You can either use the **Entreprise Integrator(EI)** or the **Business Process Server(BPS)** for the business process tasks with API Manager during the Workflow configuration process.\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes :\n-\n-    1.   Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml` .\n-    2.   Point the database that has the API Manager user permissions to Enterprise Integrator(EI)/Business Process Server(BPS).\n-    3.   Share any LDAPs, if exist.\n-    4.   Unzip the `<API-M>/business-processes/user-signup/UserApprovalTask-1.0.0.zip` file, update the role as follows in the `UserApprovalTask.ht` file, and ZIP the `UserApprovalTask.ht` folder.\n-\n-    **Format**\n-\n-    ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-#### Configuring the Enterprise Integrator\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Entreprise Integrator(EI)** for the business process tasks. If not please refer the sub section for [Configuring the Business Process Server.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-business-process-server)\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration).\n-\n-2.  Make sure that an offset of 2 is added to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        If you **change the EI port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following :\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-        !!! note\n-            **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-            -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, please create it.\n-\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-    1.  Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to the port offset configured in API Manager. (Default port 8243).\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.  Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to the port offset of EI. (Default port 9763 + 2).\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the EI server](https://docs.wso2.com/display/EI650/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when logging into the Management console due to a compression issue that exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`\n-        </p>\n-        <p>To avoid this issue open `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-    ![Add BPEL to EI](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7. Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-    ![Add Human Task to EI](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the Business Process Server\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Business Process Server(BPS)** for the business process tasks. If not please refer the sub section for [Configuring the Entreprise Integrator.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-enterprise-integrator)\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-!!! tip\n-    If you **change the BPS port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-    -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-    !!! note\n-        **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-        -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xml` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<BPS_HOME>/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it .\n-        -   Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-\n-\n-    1.   Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to API Manager.\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.   Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to BPS.\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the BPS server](https://docs.wso2.com/display/AM260/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`</p>\n-        <p>To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to BPS. This is the business process archive file.\n-\n-    ![Add BPEL to BPS](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-    ![Add Human Task to BPS](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the API Manager\n-\n-1.  Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure **workFlowServerURL** under **workflows** to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"https://localhost:9445/services/\"` )\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of API Manager into the client-truststore of the EI/BPS server and also import the certificate of EI/BPS into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are :\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-        3. BPS - '<BPS_HOME>/repository/resources/security'\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n 1.  Log in to API-M management console ( `https://<Server-Host>:9443/carbon` ) and select **Browse** under **Resources**.\n \n-    ![Browse resources](../../assets/img/learn/browse-resources.png)\n+    ![Browse resources](../../assets/img/learn/wf-extensions-browse.png)\n \n-2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **WS Workflow Executor**. Also specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **Approval Workflow Executor** for user self sign up.\n \n-    ```html/xml\n-        <WorkFlowExtensions>\n+    ```\n+    <WorkFlowExtensions>\n         ...\n-            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpWSWorkflowExecutor\">\n-                 <Property name=\"serviceEndpoint\">http://localhost:9765/services/UserSignupProcess/</Property>\n-                 <Property name=\"username\">admin</Property>\n-                 <Property name=\"password\">admin</Property>\n-                 <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-            </UserSignUp>\n+            <!--UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpSimpleWorkflowExecutor\"/-->\n+            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpApprovalWorkflowExecutor\"/>\n         ...\n     </WorkFlowExtensions>\n     ```\n-    !!! info\n-        All workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n \n-3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user.\n+3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user. (Go to **Sign in** --> **Create Account**  and add the details of the new user).\n <html>\n     <body>\n         <div>\n-            <img src=\"../../../../assets/img/learn/register-now.png\" alt=\"Register now option\" width=\"600\"/>\n+            <img src=\"../../../../assets/img/learn/devportal-create-account.png\" alt=\"Create new  Account\" width=\"400\"/>\n         </div>\n     </body>\n </html>\n-    It invokes the signup process and creates a Human Task instance that holds the execution of the BPEL until some action is performed on it.\n \n-4.  Note the message that appears if the BPEL is invoked correctly, saying that the request is successfully submitted.\n+4.  Note the message that appears if the Approval Workflow Executor is invoked correctly, saying that the request is successfully submitted.\n+\n+    ![Browse resources](../../assets/img/learn/user-registration-success.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 227}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNTIzNw==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454935237", "createdAt": "2020-07-15T09:58:19Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. \n \n-!!! note\n-    You can either use the **Entreprise Integrator(EI)** or the **Business Process Server(BPS)** for the business process tasks with API Manager during the Workflow configuration process.\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes :\n-\n-    1.   Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml` .\n-    2.   Point the database that has the API Manager user permissions to Enterprise Integrator(EI)/Business Process Server(BPS).\n-    3.   Share any LDAPs, if exist.\n-    4.   Unzip the `<API-M>/business-processes/user-signup/UserApprovalTask-1.0.0.zip` file, update the role as follows in the `UserApprovalTask.ht` file, and ZIP the `UserApprovalTask.ht` folder.\n-\n-    **Format**\n-\n-    ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-#### Configuring the Enterprise Integrator\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Entreprise Integrator(EI)** for the business process tasks. If not please refer the sub section for [Configuring the Business Process Server.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-business-process-server)\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration).\n-\n-2.  Make sure that an offset of 2 is added to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        If you **change the EI port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following :\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-        !!! note\n-            **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-            -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, please create it.\n-\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-    1.  Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to the port offset configured in API Manager. (Default port 8243).\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.  Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to the port offset of EI. (Default port 9763 + 2).\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the EI server](https://docs.wso2.com/display/EI650/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when logging into the Management console due to a compression issue that exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`\n-        </p>\n-        <p>To avoid this issue open `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-    ![Add BPEL to EI](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7. Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-    ![Add Human Task to EI](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the Business Process Server\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Business Process Server(BPS)** for the business process tasks. If not please refer the sub section for [Configuring the Entreprise Integrator.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-enterprise-integrator)\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-!!! tip\n-    If you **change the BPS port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-    -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-    !!! note\n-        **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-        -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xml` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<BPS_HOME>/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it .\n-        -   Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-\n-\n-    1.   Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to API Manager.\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.   Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to BPS.\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the BPS server](https://docs.wso2.com/display/AM260/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`</p>\n-        <p>To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to BPS. This is the business process archive file.\n-\n-    ![Add BPEL to BPS](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-    ![Add Human Task to BPS](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the API Manager\n-\n-1.  Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure **workFlowServerURL** under **workflows** to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"https://localhost:9445/services/\"` )\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of API Manager into the client-truststore of the EI/BPS server and also import the certificate of EI/BPS into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are :\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-        3. BPS - '<BPS_HOME>/repository/resources/security'\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n 1.  Log in to API-M management console ( `https://<Server-Host>:9443/carbon` ) and select **Browse** under **Resources**.\n \n-    ![Browse resources](../../assets/img/learn/browse-resources.png)\n+    ![Browse resources](../../assets/img/learn/wf-extensions-browse.png)\n \n-2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **WS Workflow Executor**. Also specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **Approval Workflow Executor** for user self sign up.\n \n-    ```html/xml\n-        <WorkFlowExtensions>\n+    ```\n+    <WorkFlowExtensions>\n         ...\n-            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpWSWorkflowExecutor\">\n-                 <Property name=\"serviceEndpoint\">http://localhost:9765/services/UserSignupProcess/</Property>\n-                 <Property name=\"username\">admin</Property>\n-                 <Property name=\"password\">admin</Property>\n-                 <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-            </UserSignUp>\n+            <!--UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpSimpleWorkflowExecutor\"/-->\n+            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpApprovalWorkflowExecutor\"/>\n         ...\n     </WorkFlowExtensions>\n     ```\n-    !!! info\n-        All workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n \n-3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user.\n+3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user. (Go to **Sign in** --> **Create Account**  and add the details of the new user).\n <html>\n     <body>\n         <div>\n-            <img src=\"../../../../assets/img/learn/register-now.png\" alt=\"Register now option\" width=\"600\"/>\n+            <img src=\"../../../../assets/img/learn/devportal-create-account.png\" alt=\"Create new  Account\" width=\"400\"/>\n         </div>\n     </body>\n </html>\n-    It invokes the signup process and creates a Human Task instance that holds the execution of the BPEL until some action is performed on it.\n \n-4.  Note the message that appears if the BPEL is invoked correctly, saying that the request is successfully submitted.\n+4.  Note the message that appears if the Approval Workflow Executor is invoked correctly, saying that the request is successfully submitted.\n+\n+    ![Browse resources](../../assets/img/learn/user-registration-success.png)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NDQyOA=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 227}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzM0NjM2OnYy", "diffSide": "RIGHT", "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTowMDo0NlrOGxOwqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1ODozN1rOGx3Dfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NTI0MQ==", "bodyText": "Note that a message \"User registration completed successfully \" appears if the Approval Workflow Executor is invoked correctly", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454275241", "createdAt": "2020-07-14T11:00:46Z", "author": {"login": "shaniR"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. \n \n-!!! note\n-    You can either use the **Entreprise Integrator(EI)** or the **Business Process Server(BPS)** for the business process tasks with API Manager during the Workflow configuration process.\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes :\n-\n-    1.   Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml` .\n-    2.   Point the database that has the API Manager user permissions to Enterprise Integrator(EI)/Business Process Server(BPS).\n-    3.   Share any LDAPs, if exist.\n-    4.   Unzip the `<API-M>/business-processes/user-signup/UserApprovalTask-1.0.0.zip` file, update the role as follows in the `UserApprovalTask.ht` file, and ZIP the `UserApprovalTask.ht` folder.\n-\n-    **Format**\n-\n-    ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-#### Configuring the Enterprise Integrator\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Entreprise Integrator(EI)** for the business process tasks. If not please refer the sub section for [Configuring the Business Process Server.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-business-process-server)\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration).\n-\n-2.  Make sure that an offset of 2 is added to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        If you **change the EI port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following :\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-        !!! note\n-            **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-            -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, please create it.\n-\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-    1.  Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to the port offset configured in API Manager. (Default port 8243).\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.  Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to the port offset of EI. (Default port 9763 + 2).\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the EI server](https://docs.wso2.com/display/EI650/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when logging into the Management console due to a compression issue that exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`\n-        </p>\n-        <p>To avoid this issue open `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-    ![Add BPEL to EI](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7. Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-    ![Add Human Task to EI](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the Business Process Server\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Business Process Server(BPS)** for the business process tasks. If not please refer the sub section for [Configuring the Entreprise Integrator.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-enterprise-integrator)\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-!!! tip\n-    If you **change the BPS port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-    -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-    !!! note\n-        **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-        -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xml` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<BPS_HOME>/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it .\n-        -   Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-\n-\n-    1.   Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to API Manager.\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.   Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to BPS.\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the BPS server](https://docs.wso2.com/display/AM260/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`</p>\n-        <p>To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to BPS. This is the business process archive file.\n-\n-    ![Add BPEL to BPS](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-    ![Add Human Task to BPS](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the API Manager\n-\n-1.  Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure **workFlowServerURL** under **workflows** to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"https://localhost:9445/services/\"` )\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of API Manager into the client-truststore of the EI/BPS server and also import the certificate of EI/BPS into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are :\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-        3. BPS - '<BPS_HOME>/repository/resources/security'\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n 1.  Log in to API-M management console ( `https://<Server-Host>:9443/carbon` ) and select **Browse** under **Resources**.\n \n-    ![Browse resources](../../assets/img/learn/browse-resources.png)\n+    ![Browse resources](../../assets/img/learn/wf-extensions-browse.png)\n \n-2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **WS Workflow Executor**. Also specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **Approval Workflow Executor** for user self sign up.\n \n-    ```html/xml\n-        <WorkFlowExtensions>\n+    ```\n+    <WorkFlowExtensions>\n         ...\n-            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpWSWorkflowExecutor\">\n-                 <Property name=\"serviceEndpoint\">http://localhost:9765/services/UserSignupProcess/</Property>\n-                 <Property name=\"username\">admin</Property>\n-                 <Property name=\"password\">admin</Property>\n-                 <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-            </UserSignUp>\n+            <!--UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpSimpleWorkflowExecutor\"/-->\n+            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpApprovalWorkflowExecutor\"/>\n         ...\n     </WorkFlowExtensions>\n     ```\n-    !!! info\n-        All workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n \n-3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user.\n+3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user. (Go to **Sign in** --> **Create Account**  and add the details of the new user).\n <html>\n     <body>\n         <div>\n-            <img src=\"../../../../assets/img/learn/register-now.png\" alt=\"Register now option\" width=\"600\"/>\n+            <img src=\"../../../../assets/img/learn/devportal-create-account.png\" alt=\"Create new  Account\" width=\"400\"/>\n         </div>\n     </body>\n </html>\n-    It invokes the signup process and creates a Human Task instance that holds the execution of the BPEL until some action is performed on it.\n \n-4.  Note the message that appears if the BPEL is invoked correctly, saying that the request is successfully submitted.\n+4.  Note the message that appears if the Approval Workflow Executor is invoked correctly, saying that the request is successfully submitted.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 225}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNTQyMg==", "bodyText": "updated", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454935422", "createdAt": "2020-07-15T09:58:37Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. \n \n-!!! note\n-    You can either use the **Entreprise Integrator(EI)** or the **Business Process Server(BPS)** for the business process tasks with API Manager during the Workflow configuration process.\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes :\n-\n-    1.   Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml` .\n-    2.   Point the database that has the API Manager user permissions to Enterprise Integrator(EI)/Business Process Server(BPS).\n-    3.   Share any LDAPs, if exist.\n-    4.   Unzip the `<API-M>/business-processes/user-signup/UserApprovalTask-1.0.0.zip` file, update the role as follows in the `UserApprovalTask.ht` file, and ZIP the `UserApprovalTask.ht` folder.\n-\n-    **Format**\n-\n-    ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-#### Configuring the Enterprise Integrator\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Entreprise Integrator(EI)** for the business process tasks. If not please refer the sub section for [Configuring the Business Process Server.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-business-process-server)\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration).\n-\n-2.  Make sure that an offset of 2 is added to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        If you **change the EI port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following :\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-        !!! note\n-            **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-            -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, please create it.\n-\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-    1.  Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to the port offset configured in API Manager. (Default port 8243).\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.  Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to the port offset of EI. (Default port 9763 + 2).\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the EI server](https://docs.wso2.com/display/EI650/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when logging into the Management console due to a compression issue that exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`\n-        </p>\n-        <p>To avoid this issue open `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-    ![Add BPEL to EI](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7. Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-    ![Add Human Task to EI](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the Business Process Server\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Business Process Server(BPS)** for the business process tasks. If not please refer the sub section for [Configuring the Entreprise Integrator.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-enterprise-integrator)\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-!!! tip\n-    If you **change the BPS port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-    -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-    !!! note\n-        **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-        -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xml` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<BPS_HOME>/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it .\n-        -   Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-\n-\n-    1.   Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to API Manager.\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.   Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to BPS.\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the BPS server](https://docs.wso2.com/display/AM260/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`</p>\n-        <p>To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to BPS. This is the business process archive file.\n-\n-    ![Add BPEL to BPS](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-    ![Add Human Task to BPS](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the API Manager\n-\n-1.  Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure **workFlowServerURL** under **workflows** to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"https://localhost:9445/services/\"` )\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of API Manager into the client-truststore of the EI/BPS server and also import the certificate of EI/BPS into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are :\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-        3. BPS - '<BPS_HOME>/repository/resources/security'\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n 1.  Log in to API-M management console ( `https://<Server-Host>:9443/carbon` ) and select **Browse** under **Resources**.\n \n-    ![Browse resources](../../assets/img/learn/browse-resources.png)\n+    ![Browse resources](../../assets/img/learn/wf-extensions-browse.png)\n \n-2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **WS Workflow Executor**. Also specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **Approval Workflow Executor** for user self sign up.\n \n-    ```html/xml\n-        <WorkFlowExtensions>\n+    ```\n+    <WorkFlowExtensions>\n         ...\n-            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpWSWorkflowExecutor\">\n-                 <Property name=\"serviceEndpoint\">http://localhost:9765/services/UserSignupProcess/</Property>\n-                 <Property name=\"username\">admin</Property>\n-                 <Property name=\"password\">admin</Property>\n-                 <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-            </UserSignUp>\n+            <!--UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpSimpleWorkflowExecutor\"/-->\n+            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpApprovalWorkflowExecutor\"/>\n         ...\n     </WorkFlowExtensions>\n     ```\n-    !!! info\n-        All workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n \n-3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user.\n+3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user. (Go to **Sign in** --> **Create Account**  and add the details of the new user).\n <html>\n     <body>\n         <div>\n-            <img src=\"../../../../assets/img/learn/register-now.png\" alt=\"Register now option\" width=\"600\"/>\n+            <img src=\"../../../../assets/img/learn/devportal-create-account.png\" alt=\"Create new  Account\" width=\"400\"/>\n         </div>\n     </body>\n </html>\n-    It invokes the signup process and creates a Human Task instance that holds the execution of the BPEL until some action is performed on it.\n \n-4.  Note the message that appears if the BPEL is invoked correctly, saying that the request is successfully submitted.\n+4.  Note the message that appears if the Approval Workflow Executor is invoked correctly, saying that the request is successfully submitted.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NTI0MQ=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 225}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzM0NzM5OnYy", "diffSide": "RIGHT", "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTowMTowN1rOGxOxPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTowMTowN1rOGxOxPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI3NTM5MQ==", "bodyText": "use {{base_path}} please.", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454275391", "createdAt": "2020-07-14T11:01:07Z", "author": {"login": "shaniR"}, "path": "en/docs/develop/customizations/adding-a-user-signup-workflow.md", "diffHunk": "@@ -2,240 +2,45 @@\n \n This section explains how to attach a custom workflow to the user signup operation in the API Manager. \n \n-!!! note\n-    You can either use the **Entreprise Integrator(EI)** or the **Business Process Server(BPS)** for the business process tasks with API Manager during the Workflow configuration process.\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes :\n-\n-    1.   Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml` .\n-    2.   Point the database that has the API Manager user permissions to Enterprise Integrator(EI)/Business Process Server(BPS).\n-    3.   Share any LDAPs, if exist.\n-    4.   Unzip the `<API-M>/business-processes/user-signup/UserApprovalTask-1.0.0.zip` file, update the role as follows in the `UserApprovalTask.ht` file, and ZIP the `UserApprovalTask.ht` folder.\n-\n-    **Format**\n-\n-    ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-#### Configuring the Enterprise Integrator\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Entreprise Integrator(EI)** for the business process tasks. If not please refer the sub section for [Configuring the Business Process Server.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-business-process-server)\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration).\n-\n-2.  Make sure that an offset of 2 is added to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        If you **change the EI port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following :\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-        !!! note\n-            **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-            -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-            -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, please create it.\n-\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-    1.  Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to the port offset configured in API Manager. (Default port 8243).\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.  Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to the port offset of EI. (Default port 9763 + 2).\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the EI server](https://docs.wso2.com/display/EI650/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when logging into the Management console due to a compression issue that exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`\n-        </p>\n-        <p>To avoid this issue open `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-    ![Add BPEL to EI](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7. Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-    ![Add Human Task to EI](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the Business Process Server\n-\n-!!! note\n-    Follow this sub section, only if you will be using the **Business Process Server(BPS)** for the business process tasks. If not please refer the sub section for [Configuring the Entreprise Integrator.](/learn/consume-api/customizations/adding-a-user-signup-workflow/#configuring-the-enterprise-integrator)\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](/reference/guides/changing-the-default-ports-with-offset).\n-\n-    ``` xml\n-    <Offset>2</Offset>\n-    ```\n-\n-!!! tip\n-    If you **change the BPS port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-    -   Search and replace the value 9765 in all the files (.epr) inside `<API-M_HOME>/business-processes` folder with the\u00a0 new port (9763 + port offset).\n-\n-    !!! note\n-        **Note:** Make sure that the port offset is updated in the following files as well. Note that the zipped files should be unzipped for you to be able to see the files\n-\n-        -`<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/UserApprovalTask.wsdl`\n-\n-        -`<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip/WorkflowCallbackService.wsdl`\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xml` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\u00a0For further information on this configuration see [Configuring Human Task Coordination](https://docs.wso2.com/display/BPS360/Configuring+Human+Task+Coordination) .\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following 2 files from the `<API-M_HOME>/business-processes/epr` folder to the `<BPS_HOME>/repository/conf/epr` folder.\n-\n-    - `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr`\n-    - `<API-M_HOME>/business-processes/epr/UserSignupService.epr`\n-\n-    !!! note\n-        -   If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it .\n-        -   Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-\n-\n-    1.   Update the `<API-M_HOME>/business-processes/epr/UserSignupProcess.epr` file according to API Manager.\n-\n-        ```java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    2.   Update the `<API-M_HOME>/business-processes/epr/UserSignupService.epr` file according to BPS.\n-\n-        ```java\n-        <wsa:Address>http://localhost:9765/services/UserApprovalService</wsa:Address>\n-        ```\n-\n-5.  [Start the BPS server](https://docs.wso2.com/display/AM260/Running+the+Product#RunningtheProduct-Startingtheserver) and log in to its management console ( `https://<Server-Host>:9443+<port-offset>/carbon` ).\n-\n-    <div class=\"admonition warning\">\n-        <p class=\"admonition-title\">Warning</p>\n-        <p>If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.</p>\n-        <p>`WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)`</p>\n-        <p>To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.</p>\n-    </div>\n-\n-6.  Select **BPEL** under the **Processes** > **Add** menu and upload the `<API-M_HOME>/business-processes/user-signup/BPEL/UserSignupApprovalProcess_1.0.0.zip` file to BPS. This is the business process archive file.\n-\n-    ![Add BPEL to BPS](../../assets/img/learn/bpel-upload-signup-workflow.png)\n-    \n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/user-signup/HumanTask/UserApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-    ![Add Human Task to BPS](../../assets/img/learn/add-human-task-signup.png)\n-\n-#### Configuring the API Manager\n-\n-1.  Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure **workFlowServerURL** under **workflows** to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"https://localhost:9445/services/\"` )\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of API Manager into the client-truststore of the EI/BPS server and also import the certificate of EI/BPS into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are :\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-        3. BPS - '<BPS_HOME>/repository/resources/security'\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n 1.  Log in to API-M management console ( `https://<Server-Host>:9443/carbon` ) and select **Browse** under **Resources**.\n \n-    ![Browse resources](../../assets/img/learn/browse-resources.png)\n+    ![Browse resources](../../assets/img/learn/wf-extensions-browse.png)\n \n-2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **WS Workflow Executor**. Also specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+2.  Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the **Simple Workflow Executor** and enable **Approval Workflow Executor** for user self sign up.\n \n-    ```html/xml\n-        <WorkFlowExtensions>\n+    ```\n+    <WorkFlowExtensions>\n         ...\n-            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpWSWorkflowExecutor\">\n-                 <Property name=\"serviceEndpoint\">http://localhost:9765/services/UserSignupProcess/</Property>\n-                 <Property name=\"username\">admin</Property>\n-                 <Property name=\"password\">admin</Property>\n-                 <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-            </UserSignUp>\n+            <!--UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpSimpleWorkflowExecutor\"/-->\n+            <UserSignUp executor=\"org.wso2.carbon.apimgt.impl.workflow.UserSignUpApprovalWorkflowExecutor\"/>\n         ...\n     </WorkFlowExtensions>\n     ```\n-    !!! info\n-        All workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n \n-3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user.\n+3.  Go to the Developer Portal Web interface of API Manager and sign up / register as a new user. (Go to **Sign in** --> **Create Account**  and add the details of the new user).\n <html>\n     <body>\n         <div>\n-            <img src=\"../../../../assets/img/learn/register-now.png\" alt=\"Register now option\" width=\"600\"/>\n+            <img src=\"../../../../assets/img/learn/devportal-create-account.png\" alt=\"Create new  Account\" width=\"400\"/>\n         </div>\n     </body>\n </html>\n-    It invokes the signup process and creates a Human Task instance that holds the execution of the BPEL until some action is performed on it.\n \n-4.  Note the message that appears if the BPEL is invoked correctly, saying that the request is successfully submitted.\n+4.  Note the message that appears if the Approval Workflow Executor is invoked correctly, saying that the request is successfully submitted.\n+\n+    ![Browse resources](../../assets/img/learn/user-registration-success.png)\n \n 5.  Log in to the [Admin Portal](`https://localhost:9443/admin`) (`https://<Server-Host>:9443/admin`) of API Manager giving the admin username and password.\n \n-6.  Navigate to **Tasks** > **User Creation** and approve the user signup task listed. This will resume the BPEL process and complete the signup process.\n-\n-7.  Go back to the Developer Portal and see that the user is now registered.\n-\n-Whenever a user tries to sign up to the Developer Portal, a request of the following format is sent to the workflow endpoint:\n-\n-```xml\n-<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:wor=\"http://workflow.subscription.apimgt.carbon.wso2.org\">\n-    <soapenv:Header />\n-    <soapenv:Body>\n-        <wor:registerUser xmlns:wor=\"http://workflow.registeruser.apimgt.carbon.wso2.org\">\n-            <wor:userName>sampleuser</wor:userName>\n-            <wor:tenantDomain>foo.com</wor:tenantDomain>\n-            <wor:workflowExternalRef>c0aad878-278c-4439-8d7e-712ee71d3f1c</wor:workflowExternalRef>\n-            <wor:callbackURL>https://localhost:8243/services/WorkflowCallbackService</wor:callBackURL>\n-        </wor:registerUser>\n-    </soapenv:Body>\n-</soapenv:Envelope>\n-```\n+6.  Navigate to **Tasks** --> **User Creation** and approve or reject the user signup task listed by clicking on approve or reject.\n+\n+    ![Browse resources](../../assets/img/learn/user-creation-pending-list.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 252}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzQ1MTA0OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTozNDo0NlrOGxPwig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1OTowNFrOGx3Ekg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MTU5NA==", "bodyText": "Shall we mention here or in the introduction that the workflow only applies for OAuth2 keys and not for the JWT keys?", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454291594", "createdAt": "2020-07-14T11:34:46Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 204}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNTY5OA==", "bodyText": "added a not saying this is not working for API keys", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454935698", "createdAt": "2020-07-15T09:59:04Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MTU5NA=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 204}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzQ1Mzk0OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTozNToyOVrOGxPyHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1OToxMVrOGx3Exg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MTk5Nw==", "bodyText": "Note that the following message will appear", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454291997", "createdAt": "2020-07-14T11:35:29Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. \n \n     ``` xml\n     <WorkFlowExtensions>\n     ...\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n+        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...  \u00a0\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n+        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...\n     </WorkFlowExtensions>\n     ```\n+    The application key generation Approve Workflow Executor\u00a0is now engaged.\n \n-    !!! tip\n-        **Note** that all workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n+4.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.Click **Applications** and click on an **ACTIVE** application.\n \n \n-3.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.\n-\n     !!! note\n         If you do not have an API already created and an Application subscribed to it, follow [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/), [Publish an API]({{base_path}}/learn/design-api/publish-api/publish-an-api/), and [Subscribe to an API]({{base_path}}/learn/consume-api/manage-subscription/subscribe-to-an-api) to create an API and subscribe to it.\n \n-\n-4.  Click **Applications**, **Production Keys**, and **Generate Keys**.\n+5.  Select **Production Keys** or **Sandbox Keys** from the side navbar and click on **GENERATE KEYS**.\n     \n-     It invokes the `ApplicationRegistrationWorkFlowProcess.bpel` that is bundled with the `ApplicationRegistrationWorkflowProcess_1.0.0.zip` file and creates a HumanTask instance that holds the execution of the BPEL process until some action is performed on it.\n-\n-     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png) ]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png)\n-\n+     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/application-registration-generate-keys.png) ]({{base_path}}/assets/img/learn/application-registration-generate-keys.png)\n \n-     Note that a message appears saying that the request is successfully submitted\u00a0when the BPEL is invoked correctly.\n \n-5.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations. \n+     Note that this message will appear if the application key generation workflow is correctly enabled.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 254}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNTc1MA==", "bodyText": "updated", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454935750", "createdAt": "2020-07-15T09:59:11Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. \n \n     ``` xml\n     <WorkFlowExtensions>\n     ...\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n+        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...  \u00a0\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n+        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...\n     </WorkFlowExtensions>\n     ```\n+    The application key generation Approve Workflow Executor\u00a0is now engaged.\n \n-    !!! tip\n-        **Note** that all workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n+4.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.Click **Applications** and click on an **ACTIVE** application.\n \n \n-3.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.\n-\n     !!! note\n         If you do not have an API already created and an Application subscribed to it, follow [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/), [Publish an API]({{base_path}}/learn/design-api/publish-api/publish-an-api/), and [Subscribe to an API]({{base_path}}/learn/consume-api/manage-subscription/subscribe-to-an-api) to create an API and subscribe to it.\n \n-\n-4.  Click **Applications**, **Production Keys**, and **Generate Keys**.\n+5.  Select **Production Keys** or **Sandbox Keys** from the side navbar and click on **GENERATE KEYS**.\n     \n-     It invokes the `ApplicationRegistrationWorkFlowProcess.bpel` that is bundled with the `ApplicationRegistrationWorkflowProcess_1.0.0.zip` file and creates a HumanTask instance that holds the execution of the BPEL process until some action is performed on it.\n-\n-     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png) ]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png)\n-\n+     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/application-registration-generate-keys.png) ]({{base_path}}/assets/img/learn/application-registration-generate-keys.png)\n \n-     Note that a message appears saying that the request is successfully submitted\u00a0when the BPEL is invoked correctly.\n \n-5.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations. \n+     Note that this message will appear if the application key generation workflow is correctly enabled.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MTk5Nw=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 254}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzQ1NjkwOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTozNjoyNFrOGxPz8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1OToxOVrOGx3FHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MjQ2Ng==", "bodyText": "To address such failures, you can configure to trigger key generation at a time Key Manager nodes become available again. -> how do we do that? Point to a document that discusses this", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454292466", "createdAt": "2020-07-14T11:36:24Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. \n \n     ``` xml\n     <WorkFlowExtensions>\n     ...\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n+        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...  \u00a0\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n+        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...\n     </WorkFlowExtensions>\n     ```\n+    The application key generation Approve Workflow Executor\u00a0is now engaged.\n \n-    !!! tip\n-        **Note** that all workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n+4.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.Click **Applications** and click on an **ACTIVE** application.\n \n \n-3.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.\n-\n     !!! note\n         If you do not have an API already created and an Application subscribed to it, follow [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/), [Publish an API]({{base_path}}/learn/design-api/publish-api/publish-an-api/), and [Subscribe to an API]({{base_path}}/learn/consume-api/manage-subscription/subscribe-to-an-api) to create an API and subscribe to it.\n \n-\n-4.  Click **Applications**, **Production Keys**, and **Generate Keys**.\n+5.  Select **Production Keys** or **Sandbox Keys** from the side navbar and click on **GENERATE KEYS**.\n     \n-     It invokes the `ApplicationRegistrationWorkFlowProcess.bpel` that is bundled with the `ApplicationRegistrationWorkflowProcess_1.0.0.zip` file and creates a HumanTask instance that holds the execution of the BPEL process until some action is performed on it.\n-\n-     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png) ]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png)\n-\n+     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/application-registration-generate-keys.png) ]({{base_path}}/assets/img/learn/application-registration-generate-keys.png)\n \n-     Note that a message appears saying that the request is successfully submitted\u00a0when the BPEL is invoked correctly.\n \n-5.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations. \n+     Note that this message will appear if the application key generation workflow is correctly enabled.\n \n-6. Click **Start** to start the Human Task and then change its state.\u00a0\n+     [ ![Generate keys for an application message]({{base_path}}/assets/img/learn/application-key-genereation-message.png) ]({{base_path}}/assets/img/learn/application-key-genereation-message.png)\n \n-7. Click **Approve** and **Complete** to complete the task.\n+6.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations from **Tasks** --> **Application Registration** and click on approve or reject to approve or reject the application key generation pending request. \n \n-     This resumes the BPEL process and completes the registration.\n-\n-    [![]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)\n+    [![]({{base_path}}/assets/img/learn/application-registration-pending-list.png)]({{base_path}}/assets/img/learn/application-registration-pending-list.png)\n \n 7.  Navigate back to the\u00a0API Developer Portal and view your application.\n \n      It shows the application access token, consumer key and consumer secret.\n+    \n+    [![]({{base_path}}/assets/img/learn/application-key-generated.png)]({{base_path}}/assets/img/learn/application-key-generated.png)\n \n+    If the workflow request is rejected  it will show a message.\n \n+    [![]({{base_path}}/assets/img/learn/application-key-generation-rejected.png)]({{base_path}}/assets/img/learn/application-key-generation-rejected.png)\n+    \n \n-After the registration request is approved, the keys are generated by invoking the `APIKeyMgtSubscriber` service hosted in Key Manager nodes. Even when the request is approved, the key generation can fail if this service becomes unavailable. To address such failures, you can configure to trigger key generation at a time Key Manager nodes become available again. Given below is the message used to invoke the BPEL process:\n-    ``` xml\n-    <applicationregistrationworkflowprocessrequest xmlns:wor=\"http://workflow.application.apimgt.carbon.wso2.org\"\n-     xmlns=\"http://workflow.application.apimgt.carbon.wso2.org\">\n-        <applicationname>NewApp5</applicationname>\n-        <applicationtier>Unlimited</applicationtier>\n-        <applicationcallbackurl></applicationcallbackurl>\n-        <applicationdescription></applicationdescription>\n-        <tenantdomain>carbon.super</tenantdomain>\n-        <username>admin</username>\n-        <workflowexternalref>4a20749b-a10d-4fa5-819b-4fae5f57ffaf</workflowexternalref>\n-        <callbackurl>https://localhost:8243/services/WorkflowCallbackService</callbackurl>\n-        <keytype>PRODUCTION</keytype>\n-    </applicationregistrationworkflowprocessrequest>\n-    ```\n\\ No newline at end of file\n+After the registration request is approved, the keys are generated by invoking the `APIKeyMgtSubscriber` service hosted in Key Manager nodes. Even when the request is approved, the key generation can fail if this service becomes unavailable. To address such failures, you can configure to trigger key generation at a time Key Manager nodes become available again. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 294}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkxMDA4NA==", "bodyText": "this part needs to be removed", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454910084", "createdAt": "2020-07-15T09:15:17Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. \n \n     ``` xml\n     <WorkFlowExtensions>\n     ...\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n+        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...  \u00a0\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n+        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...\n     </WorkFlowExtensions>\n     ```\n+    The application key generation Approve Workflow Executor\u00a0is now engaged.\n \n-    !!! tip\n-        **Note** that all workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n+4.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.Click **Applications** and click on an **ACTIVE** application.\n \n \n-3.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.\n-\n     !!! note\n         If you do not have an API already created and an Application subscribed to it, follow [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/), [Publish an API]({{base_path}}/learn/design-api/publish-api/publish-an-api/), and [Subscribe to an API]({{base_path}}/learn/consume-api/manage-subscription/subscribe-to-an-api) to create an API and subscribe to it.\n \n-\n-4.  Click **Applications**, **Production Keys**, and **Generate Keys**.\n+5.  Select **Production Keys** or **Sandbox Keys** from the side navbar and click on **GENERATE KEYS**.\n     \n-     It invokes the `ApplicationRegistrationWorkFlowProcess.bpel` that is bundled with the `ApplicationRegistrationWorkflowProcess_1.0.0.zip` file and creates a HumanTask instance that holds the execution of the BPEL process until some action is performed on it.\n-\n-     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png) ]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png)\n-\n+     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/application-registration-generate-keys.png) ]({{base_path}}/assets/img/learn/application-registration-generate-keys.png)\n \n-     Note that a message appears saying that the request is successfully submitted\u00a0when the BPEL is invoked correctly.\n \n-5.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations. \n+     Note that this message will appear if the application key generation workflow is correctly enabled.\n \n-6. Click **Start** to start the Human Task and then change its state.\u00a0\n+     [ ![Generate keys for an application message]({{base_path}}/assets/img/learn/application-key-genereation-message.png) ]({{base_path}}/assets/img/learn/application-key-genereation-message.png)\n \n-7. Click **Approve** and **Complete** to complete the task.\n+6.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations from **Tasks** --> **Application Registration** and click on approve or reject to approve or reject the application key generation pending request. \n \n-     This resumes the BPEL process and completes the registration.\n-\n-    [![]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)\n+    [![]({{base_path}}/assets/img/learn/application-registration-pending-list.png)]({{base_path}}/assets/img/learn/application-registration-pending-list.png)\n \n 7.  Navigate back to the\u00a0API Developer Portal and view your application.\n \n      It shows the application access token, consumer key and consumer secret.\n+    \n+    [![]({{base_path}}/assets/img/learn/application-key-generated.png)]({{base_path}}/assets/img/learn/application-key-generated.png)\n \n+    If the workflow request is rejected  it will show a message.\n \n+    [![]({{base_path}}/assets/img/learn/application-key-generation-rejected.png)]({{base_path}}/assets/img/learn/application-key-generation-rejected.png)\n+    \n \n-After the registration request is approved, the keys are generated by invoking the `APIKeyMgtSubscriber` service hosted in Key Manager nodes. Even when the request is approved, the key generation can fail if this service becomes unavailable. To address such failures, you can configure to trigger key generation at a time Key Manager nodes become available again. Given below is the message used to invoke the BPEL process:\n-    ``` xml\n-    <applicationregistrationworkflowprocessrequest xmlns:wor=\"http://workflow.application.apimgt.carbon.wso2.org\"\n-     xmlns=\"http://workflow.application.apimgt.carbon.wso2.org\">\n-        <applicationname>NewApp5</applicationname>\n-        <applicationtier>Unlimited</applicationtier>\n-        <applicationcallbackurl></applicationcallbackurl>\n-        <applicationdescription></applicationdescription>\n-        <tenantdomain>carbon.super</tenantdomain>\n-        <username>admin</username>\n-        <workflowexternalref>4a20749b-a10d-4fa5-819b-4fae5f57ffaf</workflowexternalref>\n-        <callbackurl>https://localhost:8243/services/WorkflowCallbackService</callbackurl>\n-        <keytype>PRODUCTION</keytype>\n-    </applicationregistrationworkflowprocessrequest>\n-    ```\n\\ No newline at end of file\n+After the registration request is approved, the keys are generated by invoking the `APIKeyMgtSubscriber` service hosted in Key Manager nodes. Even when the request is approved, the key generation can fail if this service becomes unavailable. To address such failures, you can configure to trigger key generation at a time Key Manager nodes become available again. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MjQ2Ng=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 294}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNTgzNw==", "bodyText": "removed", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454935837", "createdAt": "2020-07-15T09:59:19Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. \n \n     ``` xml\n     <WorkFlowExtensions>\n     ...\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n+        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...  \u00a0\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n+        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...\n     </WorkFlowExtensions>\n     ```\n+    The application key generation Approve Workflow Executor\u00a0is now engaged.\n \n-    !!! tip\n-        **Note** that all workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n+4.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.Click **Applications** and click on an **ACTIVE** application.\n \n \n-3.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.\n-\n     !!! note\n         If you do not have an API already created and an Application subscribed to it, follow [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/), [Publish an API]({{base_path}}/learn/design-api/publish-api/publish-an-api/), and [Subscribe to an API]({{base_path}}/learn/consume-api/manage-subscription/subscribe-to-an-api) to create an API and subscribe to it.\n \n-\n-4.  Click **Applications**, **Production Keys**, and **Generate Keys**.\n+5.  Select **Production Keys** or **Sandbox Keys** from the side navbar and click on **GENERATE KEYS**.\n     \n-     It invokes the `ApplicationRegistrationWorkFlowProcess.bpel` that is bundled with the `ApplicationRegistrationWorkflowProcess_1.0.0.zip` file and creates a HumanTask instance that holds the execution of the BPEL process until some action is performed on it.\n-\n-     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png) ]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png)\n-\n+     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/application-registration-generate-keys.png) ]({{base_path}}/assets/img/learn/application-registration-generate-keys.png)\n \n-     Note that a message appears saying that the request is successfully submitted\u00a0when the BPEL is invoked correctly.\n \n-5.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations. \n+     Note that this message will appear if the application key generation workflow is correctly enabled.\n \n-6. Click **Start** to start the Human Task and then change its state.\u00a0\n+     [ ![Generate keys for an application message]({{base_path}}/assets/img/learn/application-key-genereation-message.png) ]({{base_path}}/assets/img/learn/application-key-genereation-message.png)\n \n-7. Click **Approve** and **Complete** to complete the task.\n+6.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations from **Tasks** --> **Application Registration** and click on approve or reject to approve or reject the application key generation pending request. \n \n-     This resumes the BPEL process and completes the registration.\n-\n-    [![]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)\n+    [![]({{base_path}}/assets/img/learn/application-registration-pending-list.png)]({{base_path}}/assets/img/learn/application-registration-pending-list.png)\n \n 7.  Navigate back to the\u00a0API Developer Portal and view your application.\n \n      It shows the application access token, consumer key and consumer secret.\n+    \n+    [![]({{base_path}}/assets/img/learn/application-key-generated.png)]({{base_path}}/assets/img/learn/application-key-generated.png)\n \n+    If the workflow request is rejected  it will show a message.\n \n+    [![]({{base_path}}/assets/img/learn/application-key-generation-rejected.png)]({{base_path}}/assets/img/learn/application-key-generation-rejected.png)\n+    \n \n-After the registration request is approved, the keys are generated by invoking the `APIKeyMgtSubscriber` service hosted in Key Manager nodes. Even when the request is approved, the key generation can fail if this service becomes unavailable. To address such failures, you can configure to trigger key generation at a time Key Manager nodes become available again. Given below is the message used to invoke the BPEL process:\n-    ``` xml\n-    <applicationregistrationworkflowprocessrequest xmlns:wor=\"http://workflow.application.apimgt.carbon.wso2.org\"\n-     xmlns=\"http://workflow.application.apimgt.carbon.wso2.org\">\n-        <applicationname>NewApp5</applicationname>\n-        <applicationtier>Unlimited</applicationtier>\n-        <applicationcallbackurl></applicationcallbackurl>\n-        <applicationdescription></applicationdescription>\n-        <tenantdomain>carbon.super</tenantdomain>\n-        <username>admin</username>\n-        <workflowexternalref>4a20749b-a10d-4fa5-819b-4fae5f57ffaf</workflowexternalref>\n-        <callbackurl>https://localhost:8243/services/WorkflowCallbackService</callbackurl>\n-        <keytype>PRODUCTION</keytype>\n-    </applicationregistrationworkflowprocessrequest>\n-    ```\n\\ No newline at end of file\n+After the registration request is approved, the keys are generated by invoking the `APIKeyMgtSubscriber` service hosted in Key Manager nodes. Even when the request is approved, the key generation can fail if this service becomes unavailable. To address such failures, you can configure to trigger key generation at a time Key Manager nodes become available again. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MjQ2Ng=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 294}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzQ2MTU0OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-subscription/advanced-topics/adding-an-api-subscription-workflow.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTozNzo0NFrOGxP2tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1OTozNFrOGx3F2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MzE3NQ==", "bodyText": "let's avoid using he/she and use \"consumer\"", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454293175", "createdAt": "2020-07-14T11:37:44Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-subscription/advanced-topics/adding-an-api-subscription-workflow.md", "diffHunk": "@@ -4,212 +4,43 @@ This section explains how to attach a custom workflow to the API subscription op\n \n Attaching a custom workflow to API subscription enables you to add throttling tiers to an API that consumers cannot choose at the time of subscribing. Only admins can set these tiers to APIs. When a consumer subscribes to an API, he/she has to subscribe to an application in order to get access to the API. However, when API subscription workflow is enabled, when the consumer subscribes to an application, it initially is in the `On Hold` state, and he/she can not use the API, using its production or sandbox keys, until their subscription is approved.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5OTc5Nw==", "bodyText": "Let's reword the following section:\nHowever, when the API subscription workflow is enabled and the consumer subscribes to an applicaton, initially the API subscription is in the On Hold state, and he/she can not use the API. The API can be invoked using the production or sandbox keys only once the subscription is approved.", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454299797", "createdAt": "2020-07-14T11:51:00Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-subscription/advanced-topics/adding-an-api-subscription-workflow.md", "diffHunk": "@@ -4,212 +4,43 @@ This section explains how to attach a custom workflow to the API subscription op\n \n Attaching a custom workflow to API subscription enables you to add throttling tiers to an API that consumers cannot choose at the time of subscribing. Only admins can set these tiers to APIs. When a consumer subscribes to an API, he/she has to subscribe to an application in order to get access to the API. However, when API subscription workflow is enabled, when the consumer subscribes to an application, it initially is in the `On Hold` state, and he/she can not use the API, using its production or sandbox keys, until their subscription is approved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MzE3NQ=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNjAyNg==", "bodyText": "reworded as requested", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454936026", "createdAt": "2020-07-15T09:59:34Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-subscription/advanced-topics/adding-an-api-subscription-workflow.md", "diffHunk": "@@ -4,212 +4,43 @@ This section explains how to attach a custom workflow to the API subscription op\n \n Attaching a custom workflow to API subscription enables you to add throttling tiers to an API that consumers cannot choose at the time of subscribing. Only admins can set these tiers to APIs. When a consumer subscribes to an API, he/she has to subscribe to an application in order to get access to the API. However, when API subscription workflow is enabled, when the consumer subscribes to an application, it initially is in the `On Hold` state, and he/she can not use the API, using its production or sandbox keys, until their subscription is approved.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5MzE3NQ=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzUwNTYyOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-subscription/advanced-topics/adding-an-api-subscription-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMTo1MToyMVrOGxQRIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1OTozOFrOGx3GDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5OTkzOQ==", "bodyText": "let's use {{base_path}}", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454299939", "createdAt": "2020-07-14T11:51:21Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-subscription/advanced-topics/adding-an-api-subscription-workflow.md", "diffHunk": "@@ -4,212 +4,43 @@ This section explains how to attach a custom workflow to the API subscription op\n \n Attaching a custom workflow to API subscription enables you to add throttling tiers to an API that consumers cannot choose at the time of subscribing. Only admins can set these tiers to APIs. When a consumer subscribes to an API, he/she has to subscribe to an application in order to get access to the API. However, when API subscription workflow is enabled, when the consumer subscribes to an application, it initially is in the `On Hold` state, and he/she can not use the API, using its production or sandbox keys, until their subscription is approved.\n \n-!!! Note\n-    You will only need to configure either  **WSO2 EI** or **WSO2 BPS**. The WSO2 API Manager configuration will be common for both.\n \n-##Configuring WSO2 EI\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    -   Point the database that has the API Manager user permissions to EI.\n-    -   Share any LDAPs, if exist.\n-    -   Unzip the `<API-M>/business-processes/subscription-creation/HumanTask/SubscriptionsApprovalTask-1.0.0.zip` file, update the role as follows in the `SubscriptionsApprovalTask.ht` file, and ZIP the `SubscriptionsApprovalTask-1.0.0` folder.\n-\n-    ``` xml\n-            <htd:argument name=\"role\">\n-                [new-role-name]\n-            </htd:argument>\n-    ```\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration) .\n-2.  Set an offset of 2 to the default EI port in `<EI_HOME>/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](https://docs.wso2.com/display/AM260/Changing+the+Default+Ports+with+Offset) .\n-\n-    ``` xml\n-        <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        **Tip** : If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside the `<API-M_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-        <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from `<API-M_HOME>/business-processes/epr` to `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\u00a0If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, Create it.\n-\n-    !!! note\n-        Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/SubscriptionCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-                <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/SubscriptionService.epr` file according to EI.\n-\n-        ``` java\n-                    <wsa:Address>http://localhost:9765/services/SubscriptionService/ </wsa:Address>\n-        ```\n-\n-5.  Start the EI server and sign in to its management console ( `https://<Server Host>:9443+<port offset>/carbon` ).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.\n-\n-        ``` java\n-            WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open `<EI_HOME>/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.\n-\n-\n-6.  Select **Add** under the **Processes** menu and upload the `<API-M_HOME>/business-processes/subscription-creation/BPEL/SubscriptionApprovalWorkFlowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-        ![](../../../../assets/img/learn/learn-subscription-workflow-upload.png)\n-\n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/subscription-creation/HumanTask/SubscriptionsApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-\n-##Configuring WSO2 BPS\n-\n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if exist.\n-    -   Unzip the `<API-M>/business-processes/subscription-creation/HumanTask/SubscriptionsApprovalTask-1.0.0.zip` file, update the role as follows in the `SubscriptionsApprovalTask.ht` file, and ZIP the `SubscriptionsApprovalTask-1.0.0` folder.\n-\n-    ``` xml\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-2.  Set an offset of 2 to the default BPS port in `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](https://docs.wso2.com/display/AM260/Changing+the+Default+Ports+with+Offset) .\n-\n-    ``` xml\n-        <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        **Tip** : If you change the BPS **port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside the `<API-M_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xm` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-        <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from `<API-M_HOME>/business-processes/eprto<BPS_HOME>/repository/conf/epr` folder.\u00a0If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it.\n-\n-    !!! note\n-        Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-        \n-        -   Update the `<API-M_HOME>/business-processes/epr/SubscriptionCallbackService.epr` file according to API Manager.\n-        ```\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-        -   Update the `<API-M_HOME>/business-processes/epr/SubscriptionService.epr` file according to BPS.\n-        ```\n-        <wsa:Address>http://localhost:9765/services/SubscriptionService/</wsa:Address>\n-        ```\n-5.  Start the BPS server and sign in to its management console ( `https://<Server Host>:9443+<port offset>/carbon` ).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.\n-\n-        ``` java\n-            WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.\n-\n-\n-6.  Select **Add** under the **Processes** menu and upload the \n-`<API-M_HOME>/business-processes/subscription-creation/BPEL/SubscriptionApprovalWorkFlowProcess_1.0.0.zip` \n-file to BPS. This is the business process archive file.\n-    ![](../../../../assets/img/learn/learn-subscription-workflow-upload.png)\n-\n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/subscription-creation/HumanTask/SubscriptionsApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-## Configuring the API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure \" `workFlowServerURL\"` under \" `workflows\"` to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"                   https://localhost:9445/services/                  \"` )\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n-\n-First, enable the API subscription workflow **.**\n+First, enable the API subscription workflow for **Approval Workflow Executor.**\n \n 1.  Sign in to API Manager Management Console ( `https://<Server Host>:9443/carbon` ) and select **Browse** under **Resources** .\n \n-    ![](../../../../assets/img/learn/learn-subscription-workflow-browse.png)\n+    ![](../../../../assets/img/learn/wf-extensions-browse.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNjA3Nw==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454936077", "createdAt": "2020-07-15T09:59:38Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-subscription/advanced-topics/adding-an-api-subscription-workflow.md", "diffHunk": "@@ -4,212 +4,43 @@ This section explains how to attach a custom workflow to the API subscription op\n \n Attaching a custom workflow to API subscription enables you to add throttling tiers to an API that consumers cannot choose at the time of subscribing. Only admins can set these tiers to APIs. When a consumer subscribes to an API, he/she has to subscribe to an application in order to get access to the API. However, when API subscription workflow is enabled, when the consumer subscribes to an application, it initially is in the `On Hold` state, and he/she can not use the API, using its production or sandbox keys, until their subscription is approved.\n \n-!!! Note\n-    You will only need to configure either  **WSO2 EI** or **WSO2 BPS**. The WSO2 API Manager configuration will be common for both.\n \n-##Configuring WSO2 EI\n+#### Engaging the Approval Workflow Executor in the API Manager\n \n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    -   Point the database that has the API Manager user permissions to EI.\n-    -   Share any LDAPs, if exist.\n-    -   Unzip the `<API-M>/business-processes/subscription-creation/HumanTask/SubscriptionsApprovalTask-1.0.0.zip` file, update the role as follows in the `SubscriptionsApprovalTask.ht` file, and ZIP the `SubscriptionsApprovalTask-1.0.0` folder.\n-\n-    ``` xml\n-            <htd:argument name=\"role\">\n-                [new-role-name]\n-            </htd:argument>\n-    ```\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration) .\n-2.  Set an offset of 2 to the default EI port in `<EI_HOME>/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](https://docs.wso2.com/display/AM260/Changing+the+Default+Ports+with+Offset) .\n-\n-    ``` xml\n-        <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        **Tip** : If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside the `<API-M_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-        <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from `<API-M_HOME>/business-processes/epr` to `<EI_HOME>/wso2/business-process/repository/conf/epr` folder.\u00a0If the `<EI_HOME>/wso2/business-process/repository/conf/epr` folder isn't there, Create it.\n-\n-    !!! note\n-        Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/SubscriptionCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-                <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/SubscriptionService.epr` file according to EI.\n-\n-        ``` java\n-                    <wsa:Address>http://localhost:9765/services/SubscriptionService/ </wsa:Address>\n-        ```\n-\n-5.  Start the EI server and sign in to its management console ( `https://<Server Host>:9443+<port offset>/carbon` ).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.\n-\n-        ``` java\n-            WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open `<EI_HOME>/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the EI.\n-\n-\n-6.  Select **Add** under the **Processes** menu and upload the `<API-M_HOME>/business-processes/subscription-creation/BPEL/SubscriptionApprovalWorkFlowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-        ![](../../../../assets/img/learn/learn-subscription-workflow-upload.png)\n-\n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/subscription-creation/HumanTask/SubscriptionsApprovalTask-1.0.0.zip` file to EI. This is the human task archived file.\n-\n-\n-##Configuring WSO2 BPS\n-\n-!!! tip\n-    **Before you begin** , if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if exist.\n-    -   Unzip the `<API-M>/business-processes/subscription-creation/HumanTask/SubscriptionsApprovalTask-1.0.0.zip` file, update the role as follows in the `SubscriptionsApprovalTask.ht` file, and ZIP the `SubscriptionsApprovalTask-1.0.0` folder.\n-\n-    ``` xml\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-    ```\n-\n-1.  Download [WSO2 Business Process Server](http://wso2.com/products/business-process-server/) .\n-2.  Set an offset of 2 to the default BPS port in `<BPS_HOME>/repository/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset](https://docs.wso2.com/display/AM260/Changing+the+Default+Ports+with+Offset) .\n-\n-    ``` xml\n-        <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        **Tip** : If you change the BPS **port offset to a value other than 2 or run the API Manager and BPS on different machines** (therefore, want to set the `hostname` to a different value than `localhost` ), you do the following:\n-\n-        -   Search and replace the value 9765 in all the files (.epr) inside the `<API-M_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<BPS_HOME>/repository/conf/humantask.xm` file and `<BPS_HOME>/repository/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-        <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from `<API-M_HOME>/business-processes/eprto<BPS_HOME>/repository/conf/epr` folder.\u00a0If the `<BPS_HOME>/repository/conf/epr` folder isn't there, please create it.\n-\n-    !!! note\n-        Make sure to give the correct credentials in the `<BPS_HOME>/repository/conf/epr` files.\n-        \n-        -   Update the `<API-M_HOME>/business-processes/epr/SubscriptionCallbackService.epr` file according to API Manager.\n-        ```\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-        -   Update the `<API-M_HOME>/business-processes/epr/SubscriptionService.epr` file according to BPS.\n-        ```\n-        <wsa:Address>http://localhost:9765/services/SubscriptionService/</wsa:Address>\n-        ```\n-5.  Start the BPS server and sign in to its management console ( `https://<Server Host>:9443+<port offset>/carbon` ).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter following warning when login into the Management console due to a compression issue exists in High Sierra SDK.\n-\n-        ``` java\n-            WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open `<BPS_HOME>/repository/conf/tomcat/catalina-server.xml` and change the compression=\"on\" to compression=\"off\" in Connector configuration and restart the BPS.\n-\n-\n-6.  Select **Add** under the **Processes** menu and upload the \n-`<API-M_HOME>/business-processes/subscription-creation/BPEL/SubscriptionApprovalWorkFlowProcess_1.0.0.zip` \n-file to BPS. This is the business process archive file.\n-    ![](../../../../assets/img/learn/learn-subscription-workflow-upload.png)\n-\n-7.  Select **Add** under the **Human Tasks** menu and\u00a0upload the `<API-M_HOME>/business-processes/subscription-creation/HumanTask/SubscriptionsApprovalTask-1.0.0.zip` file to BPS. This is the human task archived file.\n-\n-## Configuring the API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure \" `workFlowServerURL\"` under \" `workflows\"` to point to the EI/BPS server (e.g. `\"workFlowServerURL\": \"                   https://localhost:9445/services/                  \"` )\n-\n-#### Engaging the WS Workflow Executor in the API Manager\n-\n-First, enable the API subscription workflow **.**\n+First, enable the API subscription workflow for **Approval Workflow Executor.**\n \n 1.  Sign in to API Manager Management Console ( `https://<Server Host>:9443/carbon` ) and select **Browse** under **Resources** .\n \n-    ![](../../../../assets/img/learn/learn-subscription-workflow-browse.png)\n+    ![](../../../../assets/img/learn/wf-extensions-browse.png)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDI5OTkzOQ=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 155}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzU4MjA1OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoxNToxNFrOGxQ_VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoxNToxNFrOGxQ_VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMTc2NQ==", "bodyText": "This line is incorrect. There's an extra reference with the path.", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454311765", "createdAt": "2020-07-14T12:15:14Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. \n \n     ``` xml\n     <WorkFlowExtensions>\n     ...\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n+        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...  \u00a0\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n+        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...\n     </WorkFlowExtensions>\n     ```\n+    The application key generation Approve Workflow Executor\u00a0is now engaged.\n \n-    !!! tip\n-        **Note** that all workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n+4.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.Click **Applications** and click on an **ACTIVE** application.\n \n \n-3.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.\n-\n     !!! note\n         If you do not have an API already created and an Application subscribed to it, follow [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/), [Publish an API]({{base_path}}/learn/design-api/publish-api/publish-an-api/), and [Subscribe to an API]({{base_path}}/learn/consume-api/manage-subscription/subscribe-to-an-api) to create an API and subscribe to it.\n \n-\n-4.  Click **Applications**, **Production Keys**, and **Generate Keys**.\n+5.  Select **Production Keys** or **Sandbox Keys** from the side navbar and click on **GENERATE KEYS**.\n     \n-     It invokes the `ApplicationRegistrationWorkFlowProcess.bpel` that is bundled with the `ApplicationRegistrationWorkflowProcess_1.0.0.zip` file and creates a HumanTask instance that holds the execution of the BPEL process until some action is performed on it.\n-\n-     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png) ]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png)\n-\n+     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/application-registration-generate-keys.png) ]({{base_path}}/assets/img/learn/application-registration-generate-keys.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 249}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzU4MjA3OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoxNToxNFrOGxQ_Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo1OTo1MlrOGx3GmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMTc2Nw==", "bodyText": "the alt text does not need the path to be included", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454311767", "createdAt": "2020-07-14T12:15:14Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. \n \n     ``` xml\n     <WorkFlowExtensions>\n     ...\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n+        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...  \u00a0\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n+        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...\n     </WorkFlowExtensions>\n     ```\n+    The application key generation Approve Workflow Executor\u00a0is now engaged.\n \n-    !!! tip\n-        **Note** that all workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n+4.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.Click **Applications** and click on an **ACTIVE** application.\n \n \n-3.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.\n-\n     !!! note\n         If you do not have an API already created and an Application subscribed to it, follow [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/), [Publish an API]({{base_path}}/learn/design-api/publish-api/publish-an-api/), and [Subscribe to an API]({{base_path}}/learn/consume-api/manage-subscription/subscribe-to-an-api) to create an API and subscribe to it.\n \n-\n-4.  Click **Applications**, **Production Keys**, and **Generate Keys**.\n+5.  Select **Production Keys** or **Sandbox Keys** from the side navbar and click on **GENERATE KEYS**.\n     \n-     It invokes the `ApplicationRegistrationWorkFlowProcess.bpel` that is bundled with the `ApplicationRegistrationWorkflowProcess_1.0.0.zip` file and creates a HumanTask instance that holds the execution of the BPEL process until some action is performed on it.\n-\n-     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png) ]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png)\n-\n+     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/application-registration-generate-keys.png) ]({{base_path}}/assets/img/learn/application-registration-generate-keys.png)\n \n-     Note that a message appears saying that the request is successfully submitted\u00a0when the BPEL is invoked correctly.\n \n-5.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations. \n+     Note that this message will appear if the application key generation workflow is correctly enabled.\n \n-6. Click **Start** to start the Human Task and then change its state.\u00a0\n+     [ ![Generate keys for an application message]({{base_path}}/assets/img/learn/application-key-genereation-message.png) ]({{base_path}}/assets/img/learn/application-key-genereation-message.png)\n \n-7. Click **Approve** and **Complete** to complete the task.\n+6.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations from **Tasks** --> **Application Registration** and click on approve or reject to approve or reject the application key generation pending request. \n \n-     This resumes the BPEL process and completes the registration.\n-\n-    [![]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)\n+    [![]({{base_path}}/assets/img/learn/application-registration-pending-list.png)]({{base_path}}/assets/img/learn/application-registration-pending-list.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 265}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkzNjIxNg==", "bodyText": "removed unnecessary parts", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454936216", "createdAt": "2020-07-15T09:59:52Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. \n \n     ``` xml\n     <WorkFlowExtensions>\n     ...\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n+        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...  \u00a0\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n+        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...\n     </WorkFlowExtensions>\n     ```\n+    The application key generation Approve Workflow Executor\u00a0is now engaged.\n \n-    !!! tip\n-        **Note** that all workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n+4.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.Click **Applications** and click on an **ACTIVE** application.\n \n \n-3.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.\n-\n     !!! note\n         If you do not have an API already created and an Application subscribed to it, follow [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/), [Publish an API]({{base_path}}/learn/design-api/publish-api/publish-an-api/), and [Subscribe to an API]({{base_path}}/learn/consume-api/manage-subscription/subscribe-to-an-api) to create an API and subscribe to it.\n \n-\n-4.  Click **Applications**, **Production Keys**, and **Generate Keys**.\n+5.  Select **Production Keys** or **Sandbox Keys** from the side navbar and click on **GENERATE KEYS**.\n     \n-     It invokes the `ApplicationRegistrationWorkFlowProcess.bpel` that is bundled with the `ApplicationRegistrationWorkflowProcess_1.0.0.zip` file and creates a HumanTask instance that holds the execution of the BPEL process until some action is performed on it.\n-\n-     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png) ]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png)\n-\n+     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/application-registration-generate-keys.png) ]({{base_path}}/assets/img/learn/application-registration-generate-keys.png)\n \n-     Note that a message appears saying that the request is successfully submitted\u00a0when the BPEL is invoked correctly.\n \n-5.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations. \n+     Note that this message will appear if the application key generation workflow is correctly enabled.\n \n-6. Click **Start** to start the Human Task and then change its state.\u00a0\n+     [ ![Generate keys for an application message]({{base_path}}/assets/img/learn/application-key-genereation-message.png) ]({{base_path}}/assets/img/learn/application-key-genereation-message.png)\n \n-7. Click **Approve** and **Complete** to complete the task.\n+6.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations from **Tasks** --> **Application Registration** and click on approve or reject to approve or reject the application key generation pending request. \n \n-     This resumes the BPEL process and completes the registration.\n-\n-    [![]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)\n+    [![]({{base_path}}/assets/img/learn/application-registration-pending-list.png)]({{base_path}}/assets/img/learn/application-registration-pending-list.png)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMTc2Nw=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 265}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzU4MjE1OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoxNToxNVrOGxQ_YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjo1MjoxNlrOGxsSuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMTc3Nw==", "bodyText": "the alt text is incorrect", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454311777", "createdAt": "2020-07-14T12:15:15Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. \n \n     ``` xml\n     <WorkFlowExtensions>\n     ...\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n+        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...  \u00a0\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n+        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...\n     </WorkFlowExtensions>\n     ```\n+    The application key generation Approve Workflow Executor\u00a0is now engaged.\n \n-    !!! tip\n-        **Note** that all workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n+4.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.Click **Applications** and click on an **ACTIVE** application.\n \n \n-3.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.\n-\n     !!! note\n         If you do not have an API already created and an Application subscribed to it, follow [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/), [Publish an API]({{base_path}}/learn/design-api/publish-api/publish-an-api/), and [Subscribe to an API]({{base_path}}/learn/consume-api/manage-subscription/subscribe-to-an-api) to create an API and subscribe to it.\n \n-\n-4.  Click **Applications**, **Production Keys**, and **Generate Keys**.\n+5.  Select **Production Keys** or **Sandbox Keys** from the side navbar and click on **GENERATE KEYS**.\n     \n-     It invokes the `ApplicationRegistrationWorkFlowProcess.bpel` that is bundled with the `ApplicationRegistrationWorkflowProcess_1.0.0.zip` file and creates a HumanTask instance that holds the execution of the BPEL process until some action is performed on it.\n-\n-     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png) ]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png)\n-\n+     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/application-registration-generate-keys.png) ]({{base_path}}/assets/img/learn/application-registration-generate-keys.png)\n \n-     Note that a message appears saying that the request is successfully submitted\u00a0when the BPEL is invoked correctly.\n \n-5.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations. \n+     Note that this message will appear if the application key generation workflow is correctly enabled.\n \n-6. Click **Start** to start the Human Task and then change its state.\u00a0\n+     [ ![Generate keys for an application message]({{base_path}}/assets/img/learn/application-key-genereation-message.png) ]({{base_path}}/assets/img/learn/application-key-genereation-message.png)\n \n-7. Click **Approve** and **Complete** to complete the task.\n+6.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations from **Tasks** --> **Application Registration** and click on approve or reject to approve or reject the application key generation pending request. \n \n-     This resumes the BPEL process and completes the registration.\n-\n-    [![]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)\n+    [![]({{base_path}}/assets/img/learn/application-registration-pending-list.png)]({{base_path}}/assets/img/learn/application-registration-pending-list.png)\n \n 7.  Navigate back to the\u00a0API Developer Portal and view your application.\n \n      It shows the application access token, consumer key and consumer secret.\n+    \n+    [![]({{base_path}}/assets/img/learn/application-key-generated.png)]({{base_path}}/assets/img/learn/application-key-generated.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 271}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1OTA5Nw==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454759097", "createdAt": "2020-07-15T02:52:16Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. \n \n     ``` xml\n     <WorkFlowExtensions>\n     ...\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n+        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...  \u00a0\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n+        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...\n     </WorkFlowExtensions>\n     ```\n+    The application key generation Approve Workflow Executor\u00a0is now engaged.\n \n-    !!! tip\n-        **Note** that all workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n+4.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.Click **Applications** and click on an **ACTIVE** application.\n \n \n-3.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.\n-\n     !!! note\n         If you do not have an API already created and an Application subscribed to it, follow [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/), [Publish an API]({{base_path}}/learn/design-api/publish-api/publish-an-api/), and [Subscribe to an API]({{base_path}}/learn/consume-api/manage-subscription/subscribe-to-an-api) to create an API and subscribe to it.\n \n-\n-4.  Click **Applications**, **Production Keys**, and **Generate Keys**.\n+5.  Select **Production Keys** or **Sandbox Keys** from the side navbar and click on **GENERATE KEYS**.\n     \n-     It invokes the `ApplicationRegistrationWorkFlowProcess.bpel` that is bundled with the `ApplicationRegistrationWorkflowProcess_1.0.0.zip` file and creates a HumanTask instance that holds the execution of the BPEL process until some action is performed on it.\n-\n-     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png) ]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png)\n-\n+     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/application-registration-generate-keys.png) ]({{base_path}}/assets/img/learn/application-registration-generate-keys.png)\n \n-     Note that a message appears saying that the request is successfully submitted\u00a0when the BPEL is invoked correctly.\n \n-5.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations. \n+     Note that this message will appear if the application key generation workflow is correctly enabled.\n \n-6. Click **Start** to start the Human Task and then change its state.\u00a0\n+     [ ![Generate keys for an application message]({{base_path}}/assets/img/learn/application-key-genereation-message.png) ]({{base_path}}/assets/img/learn/application-key-genereation-message.png)\n \n-7. Click **Approve** and **Complete** to complete the task.\n+6.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations from **Tasks** --> **Application Registration** and click on approve or reject to approve or reject the application key generation pending request. \n \n-     This resumes the BPEL process and completes the registration.\n-\n-    [![]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)\n+    [![]({{base_path}}/assets/img/learn/application-registration-pending-list.png)]({{base_path}}/assets/img/learn/application-registration-pending-list.png)\n \n 7.  Navigate back to the\u00a0API Developer Portal and view your application.\n \n      It shows the application access token, consumer key and consumer secret.\n+    \n+    [![]({{base_path}}/assets/img/learn/application-key-generated.png)]({{base_path}}/assets/img/learn/application-key-generated.png)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMTc3Nw=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 271}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzU4MjM3OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoxNToxOVrOGxQ_ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjo1MjoyMVrOGxsS4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMTgwMw==", "bodyText": "correct the alt text", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454311803", "createdAt": "2020-07-14T12:15:19Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. \n \n     ``` xml\n     <WorkFlowExtensions>\n     ...\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n+        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...  \u00a0\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n+        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...\n     </WorkFlowExtensions>\n     ```\n+    The application key generation Approve Workflow Executor\u00a0is now engaged.\n \n-    !!! tip\n-        **Note** that all workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n+4.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.Click **Applications** and click on an **ACTIVE** application.\n \n \n-3.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.\n-\n     !!! note\n         If you do not have an API already created and an Application subscribed to it, follow [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/), [Publish an API]({{base_path}}/learn/design-api/publish-api/publish-an-api/), and [Subscribe to an API]({{base_path}}/learn/consume-api/manage-subscription/subscribe-to-an-api) to create an API and subscribe to it.\n \n-\n-4.  Click **Applications**, **Production Keys**, and **Generate Keys**.\n+5.  Select **Production Keys** or **Sandbox Keys** from the side navbar and click on **GENERATE KEYS**.\n     \n-     It invokes the `ApplicationRegistrationWorkFlowProcess.bpel` that is bundled with the `ApplicationRegistrationWorkflowProcess_1.0.0.zip` file and creates a HumanTask instance that holds the execution of the BPEL process until some action is performed on it.\n-\n-     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png) ]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png)\n-\n+     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/application-registration-generate-keys.png) ]({{base_path}}/assets/img/learn/application-registration-generate-keys.png)\n \n-     Note that a message appears saying that the request is successfully submitted\u00a0when the BPEL is invoked correctly.\n \n-5.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations. \n+     Note that this message will appear if the application key generation workflow is correctly enabled.\n \n-6. Click **Start** to start the Human Task and then change its state.\u00a0\n+     [ ![Generate keys for an application message]({{base_path}}/assets/img/learn/application-key-genereation-message.png) ]({{base_path}}/assets/img/learn/application-key-genereation-message.png)\n \n-7. Click **Approve** and **Complete** to complete the task.\n+6.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations from **Tasks** --> **Application Registration** and click on approve or reject to approve or reject the application key generation pending request. \n \n-     This resumes the BPEL process and completes the registration.\n-\n-    [![]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)\n+    [![]({{base_path}}/assets/img/learn/application-registration-pending-list.png)]({{base_path}}/assets/img/learn/application-registration-pending-list.png)\n \n 7.  Navigate back to the\u00a0API Developer Portal and view your application.\n \n      It shows the application access token, consumer key and consumer secret.\n+    \n+    [![]({{base_path}}/assets/img/learn/application-key-generated.png)]({{base_path}}/assets/img/learn/application-key-generated.png)\n \n+    If the workflow request is rejected  it will show a message.\n \n+    [![]({{base_path}}/assets/img/learn/application-key-generation-rejected.png)]({{base_path}}/assets/img/learn/application-key-generation-rejected.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 275}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1OTEzNg==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454759136", "createdAt": "2020-07-15T02:52:21Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-key-generation-workflow.md", "diffHunk": "@@ -8,272 +8,59 @@ This section explains as to how you can attach a custom workflow to the **applic\n -  To restrict untrusted applications from creating production keys. You allow only the creation of sandbox keys.\n -  To make API subscribers go through an approval process before creating any type of access token.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    1.  Change the credentials of the workflow configurations in the registry resource `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-\n-        a. Sign in to the Management Console of WSO2 API Manager in <https://localhost:9443/carbon>.\n-\n-        b. Click **Main** --> **Resources** --> **Browse**.\n-\n-        c. Go to `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` location in the registry browser.\n-        \n-        d. Click **Edit as text** to open the `workflow-extensions.xml` file.\n-        \n-          [![Edit view of workflow-extensions file]({{base_path}}/assets/img/learn/application-registration-wf-config.png)]({{base_path}}/assets/img/learn/application-registration-wf-config.png)\n-\n-        e. Uncomment the following two sections and change the credentials of API Manager's default user credentials you have given.\n-\n-        !!! warning\n-            It is assumed in the following configuration that WSO2 EI is running with offset 2. If you are running WSO2 EI in a different offset change the ports that correspond to the **serviceEndpoint** properties in the following configuration according to the changed port offset.\n-\n-        ``` java\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n-        ```\n-\n-        !!! note\n-            Make sure to comment out the existing `ProductionApplicationRegistration` and `SandboxApplicationRegistration` executors as shown below.\n-\n-        ``` java\n-        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n-        ```\n-\n-\n-    2.  Point the database that has the API Manager user permissions to EI.\n-        \n-         In this step you need to share the user store database in WSO2 API Manager with WSO2 EI.\n-\n-         a. Copy the following datasource configuration in the `<API-M_HOME>/repository/conf/datasources/master-datasources.xml` file:\n-             ``` java\n-             <datasource> <name>WSO2UM_DB</name>\n-             <description>The datasource used by user manager</description>\n-             <jndiConfig>\n-             <name>jdbc/WSO2UM_DB</name>\n-             </jndiConfig>\n-             <definition type=\"RDBMS\">\n-             <configuration>\n-                <url>jdbc:mysql://userdb.mysql-wso2.com:3306/userdb?autoReconnect=true</url>\n-                <username>user</username>\n-                <password>password</password>\n-                <driverClassName>com.mysql.jdbc.Driver</driverClassName>\n-                <maxActive>50</maxActive>\n-                <maxWait>60000</maxWait>\n-                <testOnBorrow>true</testOnBorrow>\n-                <validationQuery>SELECT 1</validationQuery>\n-                <validationInterval>30000</validationInterval>\n-             </configuration>\n-             </definition>\n-             </datasource>\n-             ```\n-\n-\n-        !!! note\n-            MySQL is used to configure the datasources in this documentation. You can configure this based on the database that you are using. For more information, see the [Working with Database]({{base_path}}/install-and-setup/setting-up-databases/overview/).\n-\n-\n-        b. Change the datasource to point the WSO2UM\\_DB by changing the realm configuration in the `<API-M_HOME>/repository/conf/user-mgt.xml` file as shown below.\n-             ``` java\n-             <UserManager>\n-                <Realm>\n-                    <Configuration>\n-                        ....\n-                        <Property name=\"dataSource\">jdbc/WSO2UM_DB</Property>\n-                    </Configuration>\n-                        ....\n-                <Realm>\n-             <UserManager>\n-             ```\n-\n-        c. Do the configuration described in (a) and (b) in the `<EI_HOME>/wso2/business-process/conf/datasources/master-datasources.xml` and in the `<EI_HOME>/wso2/business-process/conf/user-mgt.xml` file respectively.\n-\n-    3.  Share any LDAPs, if they exist.\n-    4.  Unzip the `<API-M>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file, update the role as follows in the `ApplicationRegistrationTask.ht` file, and ZIP the `ApplicationRegistrationTask-1.0.0` folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">\n-            [new-role-name]\n-        </htd:argument>\n-        ```\n-\n-    5.  Restart the WSO2 API Manager server.\n-\n-\n-## Step 1 - Configure the Business Process server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/enterprise-integrator/6.5.0).\n-2.  Set an offset of 2 to the default EI port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-        - If you run the API Manager and EI on different machines, set the `hostname` to a different value than `localhost`.\n-        - If you change the EI **port offset to a value other than 2 or run the API Manager and EI on different machines**, do the following:\n-             - Search and replace the value 9765 in all the files (.epr) inside `<APIM_HOME>/business-processes` folder with the new port (9763 + port offset.)\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and the `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` xml\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` folder to the `<EI_HOME>/wso2/business-process/conf/epr` folder.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/conf/epr` folder does not exist, create it.\n-\n-        -   Make sure you give the correct credentials in the `<EI_HOME>/wso2/business-process/conf/epr` files.\n-\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationCallbackService.epr` file according to API Manager.\n-\n-        ``` java\n-        <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-        ```\n-\n-    -   Update the `<API-M_HOME>/business-processes/epr/RegistrationService.epr` file according to EI.\n-\n-        ``` java\n-         <wsa:Address>http://localhost:9765/services/ApplicationRegistration</wsa:Address>\n-        ```\n-\n-5.  Start the BPS server\u00a0and sign in to its Management Console (`https://<Server Host>:9443+<port offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when you sign in to the Management console due to a compression issue that exists in High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue open the `<EI_HOME>/repository/conf/tomcat/catalina-server.xml` file and change `compression=\"on\"` to `compression=\"off\"` in Connector configuration and restart the EI.\n-\n-6.  Sign in to the Management console of WSO2 EI.\n-\n-7.  Click **Main** --> **Processes** --> **Add** --> **BPEL** and upload the `<API-M_HOME>/business-processes/application-registration/BPEL/ApplicationRegistrationWorkflowProcess_1.0.0.zip` file to EI. This is the business process archive file.\n-\n-     [![Upload BPEL package]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)]({{base_path}}/assets/img/learn/add-registration-wf-bpel.png)\n-\n-8.  Click **Main** --> **Processes** --> **Human Tasks** --> **Add** and\u00a0upload the `<APIM_HOME>/business-processes/application-registration/HumanTask/ApplicationRegistrationTask-1.0.0.zip` file to EI.    \n-\n-     This is the human task archived file.\n-     \n-     [![Add the human task archived file]({{base_path}}/assets/img/learn/add-registration-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure the value for `workFlowServerURL` under the `workflows` section to point to the EI/BPS server (e.g., `\"workFlowServerURL\": \"https://localhost:9445/services/\"`)\n-\n-``` java\n-{\n-    .....\n-    \"context\": \"/admin\",\n-    \"request_url\": \"READ_FROM_REQUEST\",\n-    \"tasksPerPage\": 10,\n-    \"allowedPermission\": \"/permission/admin/manage/apim_admin\",\n-    \"workflows\": {\n-    \"workFlowServerURL\": \"https://localhost:9445/services/\",\n-    }\n-    .....\n-}\n-```\n-\n-## Step 3 - Engage\u00a0the WS Workflow executor in the API Manager\n+## Engage the Approval Workflow Executor in API Manager\n \n First, enable the application registration workflow.\n \n 1.  Start WSO2 API Manager and sign in to the APIM management console (`https://<Server Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-     <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+     <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable WS Workflow Executor as described in the tip provided at the start of this documentation if you haven't done so already.\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor and enable **Approval Workflow Executor**  for application registration key generation. You can enable Approve workflow executor for Product keys or Sandbox keys or both by disabling the simple workflow executor and enable approval workflow executor for the ones you need. \n \n     ``` xml\n     <WorkFlowExtensions>\n     ...\n-        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </ProductionApplicationRegistration>\n+        <!--ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <ProductionApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...  \u00a0\n-        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationWSWorkflowExecutor\">\n-            <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationRegistrationWorkFlowProcess/</Property>\n-            <Property name=\"username\">admin</Property>\n-            <Property name=\"password\">admin</Property>\n-            <Property name=\"callbackURL\">https://localhost:8248/services/WorkflowCallbackService</Property>\n-        </SandboxApplicationRegistration>\n+        <!--SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationSimpleWorkflowExecutor\"/-->\n+        <SandboxApplicationRegistration executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationRegistrationApprovalWorkflowExecutor\"/>\n     ...\n     </WorkFlowExtensions>\n     ```\n+    The application key generation Approve Workflow Executor\u00a0is now engaged.\n \n-    !!! tip\n-        **Note** that all workflow process services of the EI/BPS run on port 9765 because you changed its default port (9763) with an offset of 2.\n+4.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.Click **Applications** and click on an **ACTIVE** application.\n \n \n-3.  Sign in to the API Developer Portal (<https://localhost:9443/devportal>) as a Developer Portal user and open the application with which you subscribed to the API.\n-\n     !!! note\n         If you do not have an API already created and an Application subscribed to it, follow [Create a REST API]({{base_path}}/learn/design-api/create-api/create-a-rest-api/), [Publish an API]({{base_path}}/learn/design-api/publish-api/publish-an-api/), and [Subscribe to an API]({{base_path}}/learn/consume-api/manage-subscription/subscribe-to-an-api) to create an API and subscribe to it.\n \n-\n-4.  Click **Applications**, **Production Keys**, and **Generate Keys**.\n+5.  Select **Production Keys** or **Sandbox Keys** from the side navbar and click on **GENERATE KEYS**.\n     \n-     It invokes the `ApplicationRegistrationWorkFlowProcess.bpel` that is bundled with the `ApplicationRegistrationWorkflowProcess_1.0.0.zip` file and creates a HumanTask instance that holds the execution of the BPEL process until some action is performed on it.\n-\n-     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png) ]({{base_path}}/assets/img/learn/add-registration-wf-generate-keys.png)\n-\n+     [ ![Generate keys for an application]({{base_path}}/assets/img/learn/application-registration-generate-keys.png) ]({{base_path}}/assets/img/learn/application-registration-generate-keys.png)\n \n-     Note that a message appears saying that the request is successfully submitted\u00a0when the BPEL is invoked correctly.\n \n-5.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations. \n+     Note that this message will appear if the application key generation workflow is correctly enabled.\n \n-6. Click **Start** to start the Human Task and then change its state.\u00a0\n+     [ ![Generate keys for an application message]({{base_path}}/assets/img/learn/application-key-genereation-message.png) ]({{base_path}}/assets/img/learn/application-key-genereation-message.png)\n \n-7. Click **Approve** and **Complete** to complete the task.\n+6.  Sign in to the Admin Portal (`https://<Server Host>:9443/admin`) with admin credentials and list all the tasks for application registrations from **Tasks** --> **Application Registration** and click on approve or reject to approve or reject the application key generation pending request. \n \n-     This resumes the BPEL process and completes the registration.\n-\n-    [![]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)]({{base_path}}/assets/img/learn/add-registration-wf-approval.png)\n+    [![]({{base_path}}/assets/img/learn/application-registration-pending-list.png)]({{base_path}}/assets/img/learn/application-registration-pending-list.png)\n \n 7.  Navigate back to the\u00a0API Developer Portal and view your application.\n \n      It shows the application access token, consumer key and consumer secret.\n+    \n+    [![]({{base_path}}/assets/img/learn/application-key-generated.png)]({{base_path}}/assets/img/learn/application-key-generated.png)\n \n+    If the workflow request is rejected  it will show a message.\n \n+    [![]({{base_path}}/assets/img/learn/application-key-generation-rejected.png)]({{base_path}}/assets/img/learn/application-key-generation-rejected.png)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMTgwMw=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 275}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzU4NzM2OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoxNjozOVrOGxRCaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjo1MzozM1rOGxsUgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMjU1Mg==", "bodyText": "The path s repeated with only one ]", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454312552", "createdAt": "2020-07-14T12:16:39Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).\n \n-Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n+Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal by allowing to approve or reject the request for application creation. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n \n Example usecase:\n \n -   Review the information that corresponds to an application by a specific reviewer before the application is created.\n -   The application creation would be offered as a paid service.\n -   The application creation should be allowed only to users who are in a specific role.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    \n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml` file.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the `ApplicationsApprovalTask-1.0.0` folder.\n-\n-    **Format**\n-\n-    ``` java\n-    <htd:argument name=\"role\">   \u00a0\n-        [new-role-name]\n-    </htd:argument>\u00a0\n-    ```\n-\n-## Step 1 - Configure the Business Process Server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration/previous-releases/) version 6.5.0 by selecting the version from the dropdown.\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. \n-\n-     This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-         - If you run WSO2 API-M and WSO2 EI on different machines, set the `hostname` to a different value than `localhost`.\n-         - If you change the BPS port **offset to a value other than 2 or run WSO2 API-M and WSO2 EI on different machines**, you need to search and replace the value 9765 in all the files (`.epr`) inside the `<API-M_HOME>/business-processes` directory with the new port (i.e., the value of 9763 + `<port-offset>`).\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` java\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` directory to the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory does not exist, create it.\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationCallbackService.epr` file based on WSO2 API Manager.\n-         ``` java\n-         <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-         ```\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationService.epr` file according to EI.\n-            ``` java\n-            <wsa:Address>http://localhost:9765/services/ApplicationService</wsa:Address>\n-            ```\n-\n-5.  Start the EI server\u00a0and sign in to the Management Console\u00a0(`https://<Server Host>:9443+<port-offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when logging in to the Management Console due to a compression issue that exists in the High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue, open the `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` file and change the `compression=\"on\"` to `compression=\"off\"` in the Connector configuration, and restart the EI server.\n \n+## Engage the Approval Workflow Executor in API Manager\n \n-6.  Add a workflow.\n-    1. Click **BPEL** under **Processes**.\n-    2. Upload the `<API-M_HOME>/business-processes/application-creation/BPEL/ApplicationApprovalWorkFlowProcess_1.0.0.zip` file to EI.\u00a0\n-        \n-         This is the business process archive file.\n-         [![Upload BPEL archive file]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)\n-\n-7.  Click **Main** --> **Human Tasks** --> **Add** and\u00a0upload the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file to EI.\u00a0\n-\n-     This is the human task archived file.\n-\n-     [![Add human task package]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the ApplicationsApprovalTask-1.0.0 folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">   \u00a0\n-            [new-role-name]\n-        </htd:argument>\u00a0\n-        ```\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure `workFlowServerURL` under `workflows` to point to the BPS server.\n-\n-**Example**\n-``` java\n-\"workFlowServerURL\": \"https://localhost:9445/services/\"\n-```\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of WSO2 API Manager into the client-truststore of the EI server and also import the certificate of EI into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are as follows:\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-\n-## Step 3 - Engage the WS Workflow Executor in the API Manager\n-\n-First, enable the application creation workflow.\n+First enable the approve workflow executor for application creation.\n \n 1.  Sign in to WSO2 API-M Management Console (`https://<Server-Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-    <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+    <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n     \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **WS Workflow Executor**. In addition, specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **Approval Workflow Executor** for application creation.\n \n     ``` xml\n     <WorkFlowExtensions>\n-        <ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationWSWorkflowExecutor\">\n-             <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationApprovalWorkFlowProcess/</Property>\n-             <Property name=\"username\">admin</Property>\n-             <Property name=\"password\">admin</Property>\n-             <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-        </ApplicationCreation>\n+        <!--ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationSimpleWorkflowExecutor\"-->\n+        <ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationApprovalWorkflowExecutor\">\n     </WorkFlowExtensions>\n     ```\n \n-    !!! tip\n-        All the workflow process services of the EI run on port 9765 because you changed its default port (9763) with an offset of 2.\n-\n-\n-    The application creation WS Workflow Executor\u00a0is now engaged.\n+    The application creation Approve Workflow Executor\u00a0is now engaged.\n \n-\n-3.  Create an application via the Developer Portal.\n+4.  Create an application via the Developer Portal.\n     \n     1. Sign in to the Developer Portal.\n \n          (`https://localhost:9443/devportal`)\n \n-    2. Click **Applications** and create a new application.\n-         \n-         This invokes the application creation process and creates a Human Task instance that holds the execution of the BPEL process until some action is performed on it.\n-         \n-         Note that the **Status** field of the application states **INACTIVE (Waiting for approval)** if the BPEL is invoked correctly, indicating that the request is successfully submitted.\n-\n-         [![Application status is INACTIVE - Waiting for approval]({{base_path}}/assets/img/learn/add-application-wf-inactive.png) ]({{base_path}}/assets/img/learn/add-application-wf-inactive.png)\n+    2. Click **Applications** --> **ADD NEW APPLICATION** and create a new application.\n+                  \n+         Note that the **Status** field of the application states **INACTIVE** (Waiting for approval)\n \n-4.  Sign in to the Admin Portal (`https://localhost:9443/admin`), list all the tasks for application creation and approve the task. \n+         [![Application status is INACTIVE - Waiting for approval]({{base_path}}/assets/img/learn/application-creation-inactive.png) ]({{base_path}}/assets/img/learn/application-creation-inactive.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1OTU1NQ==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454759555", "createdAt": "2020-07-15T02:53:33Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).\n \n-Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n+Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal by allowing to approve or reject the request for application creation. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n \n Example usecase:\n \n -   Review the information that corresponds to an application by a specific reviewer before the application is created.\n -   The application creation would be offered as a paid service.\n -   The application creation should be allowed only to users who are in a specific role.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    \n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml` file.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the `ApplicationsApprovalTask-1.0.0` folder.\n-\n-    **Format**\n-\n-    ``` java\n-    <htd:argument name=\"role\">   \u00a0\n-        [new-role-name]\n-    </htd:argument>\u00a0\n-    ```\n-\n-## Step 1 - Configure the Business Process Server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration/previous-releases/) version 6.5.0 by selecting the version from the dropdown.\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. \n-\n-     This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-         - If you run WSO2 API-M and WSO2 EI on different machines, set the `hostname` to a different value than `localhost`.\n-         - If you change the BPS port **offset to a value other than 2 or run WSO2 API-M and WSO2 EI on different machines**, you need to search and replace the value 9765 in all the files (`.epr`) inside the `<API-M_HOME>/business-processes` directory with the new port (i.e., the value of 9763 + `<port-offset>`).\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` java\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` directory to the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory does not exist, create it.\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationCallbackService.epr` file based on WSO2 API Manager.\n-         ``` java\n-         <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-         ```\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationService.epr` file according to EI.\n-            ``` java\n-            <wsa:Address>http://localhost:9765/services/ApplicationService</wsa:Address>\n-            ```\n-\n-5.  Start the EI server\u00a0and sign in to the Management Console\u00a0(`https://<Server Host>:9443+<port-offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when logging in to the Management Console due to a compression issue that exists in the High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue, open the `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` file and change the `compression=\"on\"` to `compression=\"off\"` in the Connector configuration, and restart the EI server.\n \n+## Engage the Approval Workflow Executor in API Manager\n \n-6.  Add a workflow.\n-    1. Click **BPEL** under **Processes**.\n-    2. Upload the `<API-M_HOME>/business-processes/application-creation/BPEL/ApplicationApprovalWorkFlowProcess_1.0.0.zip` file to EI.\u00a0\n-        \n-         This is the business process archive file.\n-         [![Upload BPEL archive file]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)\n-\n-7.  Click **Main** --> **Human Tasks** --> **Add** and\u00a0upload the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file to EI.\u00a0\n-\n-     This is the human task archived file.\n-\n-     [![Add human task package]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the ApplicationsApprovalTask-1.0.0 folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">   \u00a0\n-            [new-role-name]\n-        </htd:argument>\u00a0\n-        ```\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure `workFlowServerURL` under `workflows` to point to the BPS server.\n-\n-**Example**\n-``` java\n-\"workFlowServerURL\": \"https://localhost:9445/services/\"\n-```\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of WSO2 API Manager into the client-truststore of the EI server and also import the certificate of EI into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are as follows:\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-\n-## Step 3 - Engage the WS Workflow Executor in the API Manager\n-\n-First, enable the application creation workflow.\n+First enable the approve workflow executor for application creation.\n \n 1.  Sign in to WSO2 API-M Management Console (`https://<Server-Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-    <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+    <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n     \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **WS Workflow Executor**. In addition, specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **Approval Workflow Executor** for application creation.\n \n     ``` xml\n     <WorkFlowExtensions>\n-        <ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationWSWorkflowExecutor\">\n-             <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationApprovalWorkFlowProcess/</Property>\n-             <Property name=\"username\">admin</Property>\n-             <Property name=\"password\">admin</Property>\n-             <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-        </ApplicationCreation>\n+        <!--ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationSimpleWorkflowExecutor\"-->\n+        <ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationApprovalWorkflowExecutor\">\n     </WorkFlowExtensions>\n     ```\n \n-    !!! tip\n-        All the workflow process services of the EI run on port 9765 because you changed its default port (9763) with an offset of 2.\n-\n-\n-    The application creation WS Workflow Executor\u00a0is now engaged.\n+    The application creation Approve Workflow Executor\u00a0is now engaged.\n \n-\n-3.  Create an application via the Developer Portal.\n+4.  Create an application via the Developer Portal.\n     \n     1. Sign in to the Developer Portal.\n \n          (`https://localhost:9443/devportal`)\n \n-    2. Click **Applications** and create a new application.\n-         \n-         This invokes the application creation process and creates a Human Task instance that holds the execution of the BPEL process until some action is performed on it.\n-         \n-         Note that the **Status** field of the application states **INACTIVE (Waiting for approval)** if the BPEL is invoked correctly, indicating that the request is successfully submitted.\n-\n-         [![Application status is INACTIVE - Waiting for approval]({{base_path}}/assets/img/learn/add-application-wf-inactive.png) ]({{base_path}}/assets/img/learn/add-application-wf-inactive.png)\n+    2. Click **Applications** --> **ADD NEW APPLICATION** and create a new application.\n+                  \n+         Note that the **Status** field of the application states **INACTIVE** (Waiting for approval)\n \n-4.  Sign in to the Admin Portal (`https://localhost:9443/admin`), list all the tasks for application creation and approve the task. \n+         [![Application status is INACTIVE - Waiting for approval]({{base_path}}/assets/img/learn/application-creation-inactive.png) ]({{base_path}}/assets/img/learn/application-creation-inactive.png)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMjU1Mg=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 182}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzU4ODMwOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoxNjo1NFrOGxRC_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjo1MzozOFrOGxsUlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMjcwMg==", "bodyText": "same here", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454312702", "createdAt": "2020-07-14T12:16:54Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).\n \n-Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n+Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal by allowing to approve or reject the request for application creation. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n \n Example usecase:\n \n -   Review the information that corresponds to an application by a specific reviewer before the application is created.\n -   The application creation would be offered as a paid service.\n -   The application creation should be allowed only to users who are in a specific role.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    \n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml` file.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the `ApplicationsApprovalTask-1.0.0` folder.\n-\n-    **Format**\n-\n-    ``` java\n-    <htd:argument name=\"role\">   \u00a0\n-        [new-role-name]\n-    </htd:argument>\u00a0\n-    ```\n-\n-## Step 1 - Configure the Business Process Server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration/previous-releases/) version 6.5.0 by selecting the version from the dropdown.\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. \n-\n-     This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-         - If you run WSO2 API-M and WSO2 EI on different machines, set the `hostname` to a different value than `localhost`.\n-         - If you change the BPS port **offset to a value other than 2 or run WSO2 API-M and WSO2 EI on different machines**, you need to search and replace the value 9765 in all the files (`.epr`) inside the `<API-M_HOME>/business-processes` directory with the new port (i.e., the value of 9763 + `<port-offset>`).\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` java\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` directory to the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory does not exist, create it.\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationCallbackService.epr` file based on WSO2 API Manager.\n-         ``` java\n-         <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-         ```\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationService.epr` file according to EI.\n-            ``` java\n-            <wsa:Address>http://localhost:9765/services/ApplicationService</wsa:Address>\n-            ```\n-\n-5.  Start the EI server\u00a0and sign in to the Management Console\u00a0(`https://<Server Host>:9443+<port-offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when logging in to the Management Console due to a compression issue that exists in the High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue, open the `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` file and change the `compression=\"on\"` to `compression=\"off\"` in the Connector configuration, and restart the EI server.\n \n+## Engage the Approval Workflow Executor in API Manager\n \n-6.  Add a workflow.\n-    1. Click **BPEL** under **Processes**.\n-    2. Upload the `<API-M_HOME>/business-processes/application-creation/BPEL/ApplicationApprovalWorkFlowProcess_1.0.0.zip` file to EI.\u00a0\n-        \n-         This is the business process archive file.\n-         [![Upload BPEL archive file]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)\n-\n-7.  Click **Main** --> **Human Tasks** --> **Add** and\u00a0upload the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file to EI.\u00a0\n-\n-     This is the human task archived file.\n-\n-     [![Add human task package]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the ApplicationsApprovalTask-1.0.0 folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">   \u00a0\n-            [new-role-name]\n-        </htd:argument>\u00a0\n-        ```\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure `workFlowServerURL` under `workflows` to point to the BPS server.\n-\n-**Example**\n-``` java\n-\"workFlowServerURL\": \"https://localhost:9445/services/\"\n-```\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of WSO2 API Manager into the client-truststore of the EI server and also import the certificate of EI into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are as follows:\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-\n-## Step 3 - Engage the WS Workflow Executor in the API Manager\n-\n-First, enable the application creation workflow.\n+First enable the approve workflow executor for application creation.\n \n 1.  Sign in to WSO2 API-M Management Console (`https://<Server-Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-    <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+    <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n     \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **WS Workflow Executor**. In addition, specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **Approval Workflow Executor** for application creation.\n \n     ``` xml\n     <WorkFlowExtensions>\n-        <ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationWSWorkflowExecutor\">\n-             <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationApprovalWorkFlowProcess/</Property>\n-             <Property name=\"username\">admin</Property>\n-             <Property name=\"password\">admin</Property>\n-             <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-        </ApplicationCreation>\n+        <!--ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationSimpleWorkflowExecutor\"-->\n+        <ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationApprovalWorkflowExecutor\">\n     </WorkFlowExtensions>\n     ```\n \n-    !!! tip\n-        All the workflow process services of the EI run on port 9765 because you changed its default port (9763) with an offset of 2.\n-\n-\n-    The application creation WS Workflow Executor\u00a0is now engaged.\n+    The application creation Approve Workflow Executor\u00a0is now engaged.\n \n-\n-3.  Create an application via the Developer Portal.\n+4.  Create an application via the Developer Portal.\n     \n     1. Sign in to the Developer Portal.\n \n          (`https://localhost:9443/devportal`)\n \n-    2. Click **Applications** and create a new application.\n-         \n-         This invokes the application creation process and creates a Human Task instance that holds the execution of the BPEL process until some action is performed on it.\n-         \n-         Note that the **Status** field of the application states **INACTIVE (Waiting for approval)** if the BPEL is invoked correctly, indicating that the request is successfully submitted.\n-\n-         [![Application status is INACTIVE - Waiting for approval]({{base_path}}/assets/img/learn/add-application-wf-inactive.png) ]({{base_path}}/assets/img/learn/add-application-wf-inactive.png)\n+    2. Click **Applications** --> **ADD NEW APPLICATION** and create a new application.\n+                  \n+         Note that the **Status** field of the application states **INACTIVE** (Waiting for approval)\n \n-4.  Sign in to the Admin Portal (`https://localhost:9443/admin`), list all the tasks for application creation and approve the task. \n+         [![Application status is INACTIVE - Waiting for approval]({{base_path}}/assets/img/learn/application-creation-inactive.png) ]({{base_path}}/assets/img/learn/application-creation-inactive.png)\n \n-     It resumes the BPEL process and completes the application creation.\n+4.  Sign in to the Admin Portal (`https://localhost:9443/admin`), list all the tasks for application creation  from **Tasks** --> **Application Creation** and approve or reject the task. \n      \n-     [![Approve tasks]({{base_path}}/assets/img/learn/add-application-wf-approve.png)]({{base_path}}/assets/img/learn/add-application-wf-approve.png)\n+     [![Approve tasks]({{base_path}}/assets/img/learn/application-creation-pending-request.png)]({{base_path}}/assets/img/learn/application-creation-pending-request.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 188}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1OTU3NA==", "bodyText": "fixed", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454759574", "createdAt": "2020-07-15T02:53:38Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/consume-api/manage-application/advanced-topics/adding-an-application-creation-workflow.md", "diffHunk": "@@ -2,199 +2,56 @@\n \n This section explains as to how you can attach a custom workflow to the application creation operation in WSO2 API Manager (WSO2 API-M).\n \n-Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n+Attaching a custom workflow to application creation allows you to control the creation of applications within the Developer Portal by allowing to approve or reject the request for application creation. An application is the entity that holds a set of subscribed\u00a0 API's that would be accessed by a authorization key specified for that particular application. Therefore, controlling the creation of these applications would be a decision based on the organization's requirements. \n \n Example usecase:\n \n -   Review the information that corresponds to an application by a specific reviewer before the application is created.\n -   The application creation would be offered as a paid service.\n -   The application creation should be allowed only to users who are in a specific role.\n \n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-    \n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml` file.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the `ApplicationsApprovalTask-1.0.0` folder.\n-\n-    **Format**\n-\n-    ``` java\n-    <htd:argument name=\"role\">   \u00a0\n-        [new-role-name]\n-    </htd:argument>\u00a0\n-    ```\n-\n-## Step 1 - Configure the Business Process Server\n-\n-1.  Download [WSO2 Enterprise Integrator](https://wso2.com/integration/previous-releases/) version 6.5.0 by selecting the version from the dropdown.\n-2.  Set\u00a0an offset of 2 to the default BPS port in the `<EI_HOME>/wso2/business-process/conf/carbon.xml` file. \n-\n-     This prevents port conflicts that occur when you start more than one WSO2 product on the same server. For more information, see [Changing the Default Ports with Offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/).\n-\n-    ``` java\n-    <Offset>2</Offset>\n-    ```\n-\n-    !!! tip\n-         - If you run WSO2 API-M and WSO2 EI on different machines, set the `hostname` to a different value than `localhost`.\n-         - If you change the BPS port **offset to a value other than 2 or run WSO2 API-M and WSO2 EI on different machines**, you need to search and replace the value 9765 in all the files (`.epr`) inside the `<API-M_HOME>/business-processes` directory with the new port (i.e., the value of 9763 + `<port-offset>`).\n-\n-\n-3.  Open the `<EI_HOME>/wso2/business-process/conf/humantask.xml` file and `<EI_HOME>/wso2/business-process/conf/b4p-coordination-config.xml` file and set the `TaskCoordinationEnabled` property to true.\n-\n-    ``` java\n-    <TaskCoordinationEnabled>true</TaskCoordinationEnabled>\n-    ```\n-\n-4.  Copy the following from the `<API-M_HOME>/business-processes/epr` directory to the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory.\n-\n-    !!! note\n-        -   If the `<EI_HOME>/wso2/business-process/repository/conf/epr` directory does not exist, create it.\n-        -   Make sure to give the correct credentials in the `<EI_HOME>/wso2/business-process/repository/conf/epr` files.\n-\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationCallbackService.epr` file based on WSO2 API Manager.\n-         ``` java\n-         <wsa:Address>https://localhost:8243/services/WorkflowCallbackService</wsa:Address>\n-         ```\n-\n-        -   Update the `<EI_HOME>/business-processes/epr/ApplicationService.epr` file according to EI.\n-            ``` java\n-            <wsa:Address>http://localhost:9765/services/ApplicationService</wsa:Address>\n-            ```\n-\n-5.  Start the EI server\u00a0and sign in to the Management Console\u00a0(`https://<Server Host>:9443+<port-offset>/carbon`).\n-\n-    !!! warning\n-        If you are using Mac OS with High Sierra, you may encounter the following warning when logging in to the Management Console due to a compression issue that exists in the High Sierra SDK.\n-\n-        ``` java\n-        WARN {org.owasp.csrfguard.log.JavaLogger} -  potential cross-site request forgery (CSRF) attack thwarted (user:<anonymous>, ip:xxx.xxx.xx.xx, method:POST, uri:/carbon/admin/login_action.jsp, error:required token is missing from the request)\n-        ```\n-\n-        To avoid this issue, open the `<EI_HOME>/wso2/business-process/conf/tomcat/catalina-server.xml` file and change the `compression=\"on\"` to `compression=\"off\"` in the Connector configuration, and restart the EI server.\n \n+## Engage the Approval Workflow Executor in API Manager\n \n-6.  Add a workflow.\n-    1. Click **BPEL** under **Processes**.\n-    2. Upload the `<API-M_HOME>/business-processes/application-creation/BPEL/ApplicationApprovalWorkFlowProcess_1.0.0.zip` file to EI.\u00a0\n-        \n-         This is the business process archive file.\n-         [![Upload BPEL archive file]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)]({{base_path}}/assets/img/learn/add-application-wf-bpel.png)\n-\n-7.  Click **Main** --> **Human Tasks** --> **Add** and\u00a0upload the `<API-M_HOME>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file to EI.\u00a0\n-\n-     This is the human task archived file.\n-\n-     [![Add human task package]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)]({{base_path}}/assets/img/learn/add-application-wf-humantask.png)\n-\n-!!! tip\n-    **Before you begin**, if you have changed the API Manager's default user and role, make sure you do the following changes:\n-\n-    -   Change the credentials of the workflow configurations in the following registry resource: `_system/governance/apimgt/applicationdata/workflow-extensions.xml`.\n-    -   Point the database that has the API Manager user permissions to BPS.\n-    -   Share any LDAPs, if any exist.\n-    -   Unzip the `<API-M>/business-processes/application-creation/HumanTask/ApplicationsApprovalTask-1.0.0.zip` file, update the role as follows in the `ApplicationsApprovalTask.ht` file, and ZIP the ApplicationsApprovalTask-1.0.0 folder.\n-\n-        **Format**\n-\n-        ``` java\n-        <htd:argument name=\"role\">   \u00a0\n-            [new-role-name]\n-        </htd:argument>\u00a0\n-        ```\n-\n-## Step 2 - Configure WSO2 API Manager\n-\n-Open the `<API-M_HOME>/repository/deployment/server/jaggeryapps/admin/site/conf/site.json` file and configure `workFlowServerURL` under `workflows` to point to the BPS server.\n-\n-**Example**\n-``` java\n-\"workFlowServerURL\": \"https://localhost:9445/services/\"\n-```\n-\n-!!! note\n-    When enabling the workflow, make sure to **import the certificate** of WSO2 API Manager into the client-truststore of the EI server and also import the certificate of EI into the client-truststore of API Manager.\n-\n-    Paths to the directory containing the client-truststore of each product are as follows:\n-\n-        1. API-M - '<API-M_HOME>/repository/resources/security'\n-        2. EI - '<EI_HOME>/wso2/business-process/repository/resources/security'\n-\n-## Step 3 - Engage the WS Workflow Executor in the API Manager\n-\n-First, enable the application creation workflow.\n+First enable the approve workflow executor for application creation.\n \n 1.  Sign in to WSO2 API-M Management Console (`https://<Server-Host>:9443/carbon`).\n \n 2. Click **Main** --> **Resources** --> **Browse**.\n \n-    <a href=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\"><img src=\"{{base_path}}/assets/img/learn/add-application-wf-browse.png\" width=\"250\" height=\"100\"/></a>\n+    <a href=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\"><img src=\"{{base_path}}/assets/img/learn/wf-extensions-browse.png\" width=\"250\" height=\"100\"/></a>\n     \n-2.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **WS Workflow Executor**. In addition, specify the service endpoint where the workflow engine is hosted and the credentials required to access the said service via basic authentication\u00a0(i.e., username/password based authentication).\n+3.  Go to the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` resource, disable the Simple Workflow Executor, and enable **Approval Workflow Executor** for application creation.\n \n     ``` xml\n     <WorkFlowExtensions>\n-        <ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationWSWorkflowExecutor\">\n-             <Property name=\"serviceEndpoint\">http://localhost:9765/services/ApplicationApprovalWorkFlowProcess/</Property>\n-             <Property name=\"username\">admin</Property>\n-             <Property name=\"password\">admin</Property>\n-             <Property name=\"callbackURL\">https://localhost:8243/services/WorkflowCallbackService</Property>\n-        </ApplicationCreation>\n+        <!--ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationSimpleWorkflowExecutor\"-->\n+        <ApplicationCreation executor=\"org.wso2.carbon.apimgt.impl.workflow.ApplicationCreationApprovalWorkflowExecutor\">\n     </WorkFlowExtensions>\n     ```\n \n-    !!! tip\n-        All the workflow process services of the EI run on port 9765 because you changed its default port (9763) with an offset of 2.\n-\n-\n-    The application creation WS Workflow Executor\u00a0is now engaged.\n+    The application creation Approve Workflow Executor\u00a0is now engaged.\n \n-\n-3.  Create an application via the Developer Portal.\n+4.  Create an application via the Developer Portal.\n     \n     1. Sign in to the Developer Portal.\n \n          (`https://localhost:9443/devportal`)\n \n-    2. Click **Applications** and create a new application.\n-         \n-         This invokes the application creation process and creates a Human Task instance that holds the execution of the BPEL process until some action is performed on it.\n-         \n-         Note that the **Status** field of the application states **INACTIVE (Waiting for approval)** if the BPEL is invoked correctly, indicating that the request is successfully submitted.\n-\n-         [![Application status is INACTIVE - Waiting for approval]({{base_path}}/assets/img/learn/add-application-wf-inactive.png) ]({{base_path}}/assets/img/learn/add-application-wf-inactive.png)\n+    2. Click **Applications** --> **ADD NEW APPLICATION** and create a new application.\n+                  \n+         Note that the **Status** field of the application states **INACTIVE** (Waiting for approval)\n \n-4.  Sign in to the Admin Portal (`https://localhost:9443/admin`), list all the tasks for application creation and approve the task. \n+         [![Application status is INACTIVE - Waiting for approval]({{base_path}}/assets/img/learn/application-creation-inactive.png) ]({{base_path}}/assets/img/learn/application-creation-inactive.png)\n \n-     It resumes the BPEL process and completes the application creation.\n+4.  Sign in to the Admin Portal (`https://localhost:9443/admin`), list all the tasks for application creation  from **Tasks** --> **Application Creation** and approve or reject the task. \n      \n-     [![Approve tasks]({{base_path}}/assets/img/learn/add-application-wf-approve.png)]({{base_path}}/assets/img/learn/add-application-wf-approve.png)\n+     [![Approve tasks]({{base_path}}/assets/img/learn/application-creation-pending-request.png)]({{base_path}}/assets/img/learn/application-creation-pending-request.png)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxMjcwMg=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMzYxNTQ1OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/design-api/advanced-topics/adding-an-api-state-change-workflow.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxMjoyNDozNlrOGxRTYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjo1MTo1NVrOGxsScw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxNjg5OQ==", "bodyText": "This section can be removed.", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454316899", "createdAt": "2020-07-14T12:24:36Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/design-api/advanced-topics/adding-an-api-state-change-workflow.md", "diffHunk": "@@ -196,53 +73,7 @@ The elements of the above configuration are explained below.\n | `DCREndPoint`| Endpoint to generate OAuth application. This application is used by the BPMN process to generate the token.                                               |\n | `DCREndPointUser`| Endpoint user.                                                                                                                                            |\n | `DCREndPointPassword` | Endpoint password.                                                                      f                                                                  |\n-\n-!!! note\n-    Setting a DCREndPointUser\n-    Create a user with exclusive **apim:apiworkflow** scope permissions when setting a `DCREndPointUser.` Please avoid using super admin credentials. If super admin credentials are used, the created OAuth application will have all the permissions related to scopes in the other REST APIs. Follow the instructions below to create a user with the **apim:apiworkflow** scope permissions:\n-\n-    1.  Sign in to \u00a0APIM management console (`https://<Server Host>:9443/carbon`) and create a role named `workflowCallbackRole`. Set the create and publisher or subscriber permissions to this role.\n-    2.  Go to **Resources** and click **Browse**. \n-    3. Go to `/_system/config/apimgt/applicationdata/tenant-conf.json` and update the role related to \u2018apim:api\\_workflow\u2019 scope with the newly created role.\n-\n-        ``` java\n-        ...\n-            {\n-                \"Name\": \"apim:api_workflow\",\n-                \"Roles\": \"workflowCallbackRole\"\n-            }\n-        ...\n-        ```\n-\n-    3.  Assign this role to a user.\n-    4.  Update `<DCREndPointUser>` and `<DCREndPointPassword>` with this user's credentials.\n-\n-    For more details on how to create users and roles see [managing users and roles]({{base_path}}/administer/product-administration/managing-users-and-roles/admin-managing-users-roles-and-permissions).\n-\n-\n-The configurations that can be changed by editing the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` are given below.\n-\n-**Simple workflow**\n-\n-``` java\n-<APIStateChange executor=\"org.wso2.carbon.apimgt.impl.workflow.APIStateChangeSimpleWorkflowExecutor\" />\n-```\n-\n-**WS workflow**\n-\n-``` java\n-<APIStateChange executor=\"org.wso2.carbon.apimgt.impl.workflow.APIStateChangeWSWorkflowExecutor\">\n-    <Property name=\"processDefinitionKey\">APIStateChangeApprovalProcess</Property>\n-    <Property name=\"stateList\">Created:Publish,Published:Block</Property>     \n-</APIStateChange>\n-```\n+| `stateList`| Mandatory          | This is a comma separated list of the current state and\u00a0intended action. For example, Created:Publish,Published:Block \n \n The elements of the above configuration are explained below.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 251}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc1OTAyNw==", "bodyText": "removed", "url": "https://github.com/wso2/docs-apim/pull/1439#discussion_r454759027", "createdAt": "2020-07-15T02:51:55Z", "author": {"login": "chamilaadhi"}, "path": "en/docs/learn/design-api/advanced-topics/adding-an-api-state-change-workflow.md", "diffHunk": "@@ -196,53 +73,7 @@ The elements of the above configuration are explained below.\n | `DCREndPoint`| Endpoint to generate OAuth application. This application is used by the BPMN process to generate the token.                                               |\n | `DCREndPointUser`| Endpoint user.                                                                                                                                            |\n | `DCREndPointPassword` | Endpoint password.                                                                      f                                                                  |\n-\n-!!! note\n-    Setting a DCREndPointUser\n-    Create a user with exclusive **apim:apiworkflow** scope permissions when setting a `DCREndPointUser.` Please avoid using super admin credentials. If super admin credentials are used, the created OAuth application will have all the permissions related to scopes in the other REST APIs. Follow the instructions below to create a user with the **apim:apiworkflow** scope permissions:\n-\n-    1.  Sign in to \u00a0APIM management console (`https://<Server Host>:9443/carbon`) and create a role named `workflowCallbackRole`. Set the create and publisher or subscriber permissions to this role.\n-    2.  Go to **Resources** and click **Browse**. \n-    3. Go to `/_system/config/apimgt/applicationdata/tenant-conf.json` and update the role related to \u2018apim:api\\_workflow\u2019 scope with the newly created role.\n-\n-        ``` java\n-        ...\n-            {\n-                \"Name\": \"apim:api_workflow\",\n-                \"Roles\": \"workflowCallbackRole\"\n-            }\n-        ...\n-        ```\n-\n-    3.  Assign this role to a user.\n-    4.  Update `<DCREndPointUser>` and `<DCREndPointPassword>` with this user's credentials.\n-\n-    For more details on how to create users and roles see [managing users and roles]({{base_path}}/administer/product-administration/managing-users-and-roles/admin-managing-users-roles-and-permissions).\n-\n-\n-The configurations that can be changed by editing the `/_system/governance/apimgt/applicationdata/workflow-extensions.xml` are given below.\n-\n-**Simple workflow**\n-\n-``` java\n-<APIStateChange executor=\"org.wso2.carbon.apimgt.impl.workflow.APIStateChangeSimpleWorkflowExecutor\" />\n-```\n-\n-**WS workflow**\n-\n-``` java\n-<APIStateChange executor=\"org.wso2.carbon.apimgt.impl.workflow.APIStateChangeWSWorkflowExecutor\">\n-    <Property name=\"processDefinitionKey\">APIStateChangeApprovalProcess</Property>\n-    <Property name=\"stateList\">Created:Publish,Published:Block</Property>     \n-</APIStateChange>\n-```\n+| `stateList`| Mandatory          | This is a comma separated list of the current state and\u00a0intended action. For example, Created:Publish,Published:Block \n \n The elements of the above configuration are explained below.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDMxNjg5OQ=="}, "originalCommit": {"oid": "a86187bb9842ab4dfd7df9b6df18c0be7050d6c0"}, "originalPosition": 251}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1694, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}