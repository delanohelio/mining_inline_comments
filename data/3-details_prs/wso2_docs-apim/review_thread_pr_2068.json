{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMjkzOTU2", "number": 2068, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjozMjoxNFrOE0rDYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjo0ODowMlrOE0rPWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjY2Nzg1OnYy", "diffSide": "RIGHT", "path": "en/docs/install-and-setup/setup/sso/configuring-identity-server-as-external-idp-using-saml.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjozMjoxNFrOHshjhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwNjowMzoyNFrOHtKIcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ0OTE1Nw==", "bodyText": "You can not have upper case characters for file for image names. Please rename actual image and the name here.", "url": "https://github.com/wso2/docs-apim/pull/2068#discussion_r516449157", "createdAt": "2020-11-03T06:32:14Z", "author": {"login": "Mariangela"}, "path": "en/docs/install-and-setup/setup/sso/configuring-identity-server-as-external-idp-using-saml.md", "diffHunk": "@@ -0,0 +1,262 @@\n+# Configuring Identity Server as External IDP using SAML\n+\n+The Single Sign-On with SAML 2.0 feature in the API Manager is implemented according to the SAML 2.0 browser-based SSO support that is facilitated by WSO2 Identity Server. This feature is available in any WSO2 IS version from 4.1.0 onwards. WSO2 IS 5.10.0 is used in this guide. WSO2 Identity Server acts as an identity service provider of systems enabled with single sign-on, while the Web applications act as SSO service providers. Using this feature, you can configure SSO with SAML 2.0 across the API Publisher and Developer Portal. After configuring, you can access the Developer Portal or API Publisher in a single authentication attempt.\n+\n+## Pre-requisites\n+\n+-   Download the API Manager distribution from [https://wso2.com/api-management/](https://wso2.com/api-management/).\n+\n+-   Download the Identity Server distirbution from [https://wso2.com/identity-and-access-management/](https://wso2.com/identity-and-access-management/).\n+\n+    !!! Info\n+        To use WSO2 IS as the Key Manager, download the **WSO2 Identity Server 5.10.0 as a Key Manager** pack, with pre-packaged Key Manager features as follows:\n+        \n+        1. Access the [previous WSO2 API Manager related releases](https://wso2.com/api-management/previous-releases/).\n+        2. Select version 3.1.0.\n+        3. Click on the Identity Server as a Key Manager download option.\n+\n+    !!! Tip\n+        For testing purposes if you want to run both the WSO2 API Manager and WSO2 IS server on the same server, then you can go to the `<IS-Home>/repository/conf/deployment.toml` file and offset the port by 1 to Identity Server, by adding following configuration:\n+\n+        ``` toml\n+        [server]\n+        offset=1\n+        ```\n+\n+-  Start the servers using the following commands:\n+\n+    ``` tab=\"On Windows\"\n+    wso2server.bat --run\n+    ```\n+    \n+    ``` tab=\"On Linux/Mac OS\"\n+    sh wso2server.sh\n+    ```\n+\n+## Configure the Identity Server\n+\n+### Step - 1 Configure the Service Provider\n+\n+1.  Login to the Management Console of IS server by browsing the following URL:  \n+\n+    ```\n+    https://{is-ip}:9444/carbon\n+    ```\n+\n+2.  Navigate to the **Service Providers** section under Main \u2192 Identity and create new Service Provider.\n+\n+3.  Edit the created Service Provider:\n+\n+    1.  Expand the **Inbound Authentication Configuration** secition and configure **SAML2 Web SSO Configuration** by providing the following information:\n+\n+        <table>\n+        <tbody>\n+            <tr>\n+                <td>Issuer</td>\n+                <td>Specify the Issuer</td>\n+            </tr>\n+            <tr>\n+                <td>Assertion Consumer URLs</td>\n+                <td>`https://{apim-ip}:9443/commonauth`</td>\n+            </tr>\n+            <tr>\n+                <td>Response Signing Algorithm</td>\n+                <td>`http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`</td>\n+            </tr>\n+            <tr>\n+                <td>Enable Response Signing</td>\n+                <td>true</td>\n+            </tr>\n+            <tr>\n+                <td>Enable Signature Validation in Authentication Requests and Logout Requests</td>\n+                <td>true</td>\n+            </tr>\n+            <tr>\n+                <td>Enable Single Logout</td>\n+                <td>true</td>\n+            </tr>\n+            <tr>\n+                <td>Enable Attribute Profile</td>\n+                <td>true</td>\n+            </tr>\n+            <tr>\n+                <td>Include Attributes in the Response Always</td>\n+                <td>true</td>\n+            </tr>\n+        </tbody>\n+        </table>\n+\n+        Following image shows the sample values for SAML2 Web SSO Configuration:\n+\n+        [![saml-configuration-in-service-provider]({{base_path}}/assets/img/setup-and-install/saml-configuration-in-service-provider.png)]({{base_path}}/assets/img/setup-and-install/saml-configuration-in-service-provider.png)\n+\n+        ??? Info \"Enable a tenant-specific SSO for the Publisher and Developer Portal\"\n+\n+            To enable a tenant-specific SSO with IS 5.10.0 for Publisher and the Developer Portal, enable the **Use tenant domain in local subject identifier** option under the **Local & Outbound Authentication Configuration** section.\n+\n+            [![saml-configuration-in-service-provider]({{base_path}}/assets/img/setup-and-install/enable-tenant-domain-in-local-sub-identifier.png)]({{base_path}}/assets/img/setup-and-install/enable-tenant-domain-in-local-sub-identifier.png)\n+\n+    2.  Expand the **Claim Configuration** section. Add **http://wso2.org/claims/role** as mandatory claim.\n+\n+        [![]({{base_path}}/assets/img/setup-and-install/claim-configuration-in-service-provider-for-saml2-sso.png)]({{base_path}}/assets/img/setup-and-install/claim-configuration-in-service-provider-for-saml2-sso.png)\n+\n+    3.  Update the Service Provider configurations.\n+\n+        !!! Info \"In Mutl-tenanted environments\"\n+            Carry out the instruction given below for all the tenants to be able to login to the API-M Web applications in a multi-tenanted environment.\n+\n+            1.  Click the **SaaS Application** option that appears after registering the service provider.\n+\n+            [![saas-configuration-in-service-provider]({{base_path}}/assets/img/setup-and-install/saas.png)]({{base_path}}/assets/img/setup-and-install/saas.png)            \n+\n+            If you do not select the **SaaS Application** option, only users in the current tenant domain will be allowed to login to the portals. You will need to register separate service providers for portals from each tenant.\n+\n+4.  Upload the public certificate of the API Manager by selecting **Select SP Certificate Type**.\n+\n+    [![upload-certificate-in-SP-for-saml2-sso.png]({{base_path}}/assets/img/setup-and-install/upload-certificate-in-SP-for-saml2-sso.png)]({{base_path}}/assets/img/setup-and-install/upload-certificate-in-SP-for-saml2-sso.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "424760b4f6e687c0929925c2ac5b7d2f667cf88c"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzExMzk3MA==", "bodyText": "did you rename the image itself? I do not see it under the physical files that have been uploaded.", "url": "https://github.com/wso2/docs-apim/pull/2068#discussion_r517113970", "createdAt": "2020-11-04T06:03:24Z", "author": {"login": "Mariangela"}, "path": "en/docs/install-and-setup/setup/sso/configuring-identity-server-as-external-idp-using-saml.md", "diffHunk": "@@ -0,0 +1,262 @@\n+# Configuring Identity Server as External IDP using SAML\n+\n+The Single Sign-On with SAML 2.0 feature in the API Manager is implemented according to the SAML 2.0 browser-based SSO support that is facilitated by WSO2 Identity Server. This feature is available in any WSO2 IS version from 4.1.0 onwards. WSO2 IS 5.10.0 is used in this guide. WSO2 Identity Server acts as an identity service provider of systems enabled with single sign-on, while the Web applications act as SSO service providers. Using this feature, you can configure SSO with SAML 2.0 across the API Publisher and Developer Portal. After configuring, you can access the Developer Portal or API Publisher in a single authentication attempt.\n+\n+## Pre-requisites\n+\n+-   Download the API Manager distribution from [https://wso2.com/api-management/](https://wso2.com/api-management/).\n+\n+-   Download the Identity Server distirbution from [https://wso2.com/identity-and-access-management/](https://wso2.com/identity-and-access-management/).\n+\n+    !!! Info\n+        To use WSO2 IS as the Key Manager, download the **WSO2 Identity Server 5.10.0 as a Key Manager** pack, with pre-packaged Key Manager features as follows:\n+        \n+        1. Access the [previous WSO2 API Manager related releases](https://wso2.com/api-management/previous-releases/).\n+        2. Select version 3.1.0.\n+        3. Click on the Identity Server as a Key Manager download option.\n+\n+    !!! Tip\n+        For testing purposes if you want to run both the WSO2 API Manager and WSO2 IS server on the same server, then you can go to the `<IS-Home>/repository/conf/deployment.toml` file and offset the port by 1 to Identity Server, by adding following configuration:\n+\n+        ``` toml\n+        [server]\n+        offset=1\n+        ```\n+\n+-  Start the servers using the following commands:\n+\n+    ``` tab=\"On Windows\"\n+    wso2server.bat --run\n+    ```\n+    \n+    ``` tab=\"On Linux/Mac OS\"\n+    sh wso2server.sh\n+    ```\n+\n+## Configure the Identity Server\n+\n+### Step - 1 Configure the Service Provider\n+\n+1.  Login to the Management Console of IS server by browsing the following URL:  \n+\n+    ```\n+    https://{is-ip}:9444/carbon\n+    ```\n+\n+2.  Navigate to the **Service Providers** section under Main \u2192 Identity and create new Service Provider.\n+\n+3.  Edit the created Service Provider:\n+\n+    1.  Expand the **Inbound Authentication Configuration** secition and configure **SAML2 Web SSO Configuration** by providing the following information:\n+\n+        <table>\n+        <tbody>\n+            <tr>\n+                <td>Issuer</td>\n+                <td>Specify the Issuer</td>\n+            </tr>\n+            <tr>\n+                <td>Assertion Consumer URLs</td>\n+                <td>`https://{apim-ip}:9443/commonauth`</td>\n+            </tr>\n+            <tr>\n+                <td>Response Signing Algorithm</td>\n+                <td>`http://www.w3.org/2001/04/xmldsig-more#rsa-sha256`</td>\n+            </tr>\n+            <tr>\n+                <td>Enable Response Signing</td>\n+                <td>true</td>\n+            </tr>\n+            <tr>\n+                <td>Enable Signature Validation in Authentication Requests and Logout Requests</td>\n+                <td>true</td>\n+            </tr>\n+            <tr>\n+                <td>Enable Single Logout</td>\n+                <td>true</td>\n+            </tr>\n+            <tr>\n+                <td>Enable Attribute Profile</td>\n+                <td>true</td>\n+            </tr>\n+            <tr>\n+                <td>Include Attributes in the Response Always</td>\n+                <td>true</td>\n+            </tr>\n+        </tbody>\n+        </table>\n+\n+        Following image shows the sample values for SAML2 Web SSO Configuration:\n+\n+        [![saml-configuration-in-service-provider]({{base_path}}/assets/img/setup-and-install/saml-configuration-in-service-provider.png)]({{base_path}}/assets/img/setup-and-install/saml-configuration-in-service-provider.png)\n+\n+        ??? Info \"Enable a tenant-specific SSO for the Publisher and Developer Portal\"\n+\n+            To enable a tenant-specific SSO with IS 5.10.0 for Publisher and the Developer Portal, enable the **Use tenant domain in local subject identifier** option under the **Local & Outbound Authentication Configuration** section.\n+\n+            [![saml-configuration-in-service-provider]({{base_path}}/assets/img/setup-and-install/enable-tenant-domain-in-local-sub-identifier.png)]({{base_path}}/assets/img/setup-and-install/enable-tenant-domain-in-local-sub-identifier.png)\n+\n+    2.  Expand the **Claim Configuration** section. Add **http://wso2.org/claims/role** as mandatory claim.\n+\n+        [![]({{base_path}}/assets/img/setup-and-install/claim-configuration-in-service-provider-for-saml2-sso.png)]({{base_path}}/assets/img/setup-and-install/claim-configuration-in-service-provider-for-saml2-sso.png)\n+\n+    3.  Update the Service Provider configurations.\n+\n+        !!! Info \"In Mutl-tenanted environments\"\n+            Carry out the instruction given below for all the tenants to be able to login to the API-M Web applications in a multi-tenanted environment.\n+\n+            1.  Click the **SaaS Application** option that appears after registering the service provider.\n+\n+            [![saas-configuration-in-service-provider]({{base_path}}/assets/img/setup-and-install/saas.png)]({{base_path}}/assets/img/setup-and-install/saas.png)            \n+\n+            If you do not select the **SaaS Application** option, only users in the current tenant domain will be allowed to login to the portals. You will need to register separate service providers for portals from each tenant.\n+\n+4.  Upload the public certificate of the API Manager by selecting **Select SP Certificate Type**.\n+\n+    [![upload-certificate-in-SP-for-saml2-sso.png]({{base_path}}/assets/img/setup-and-install/upload-certificate-in-SP-for-saml2-sso.png)]({{base_path}}/assets/img/setup-and-install/upload-certificate-in-SP-for-saml2-sso.png)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ0OTE1Nw=="}, "originalCommit": {"oid": "424760b4f6e687c0929925c2ac5b7d2f667cf88c"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjY2OTA5OnYy", "diffSide": "RIGHT", "path": "en/docs/install-and-setup/setup/sso/configuring-identity-server-as-external-idp-using-oidc.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjozMzowNVrOHshkTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjozNjowNlrOHshngg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ0OTM1Nw==", "bodyText": "Which step are you referring to as step 5?", "url": "https://github.com/wso2/docs-apim/pull/2068#discussion_r516449357", "createdAt": "2020-11-03T06:33:05Z", "author": {"login": "Mariangela"}, "path": "en/docs/install-and-setup/setup/sso/configuring-identity-server-as-external-idp-using-oidc.md", "diffHunk": "@@ -0,0 +1,203 @@\n+# Configuring Identity Server as External IDP using OIDC\n+\n+WSO2 API Manager uses OIDC Single Sign-On feature by default. This document explains how to connect an WSO2 Identity Server (or WSO2 IS-KM) as a third party Identity provider to API-Manager.\n+\n+## Pre-requisites\n+\n+-   Download the API Manager distribution from [https://wso2.com/api-management/](https://wso2.com/api-management/).\n+-   Download the Identity Server distirbution from [https://wso2.com/identity-and-access-management/](https://wso2.com/identity-and-access-management/).\n+\n+    !!! Tip\n+        For **testing purposes** if you want to run both the WSO2 API Manager and WSO2 IS server on the same server, then you can go to the `<IS_HOME>/repository/conf/deployment.toml` file and offset the port by 1 as by adding following configuration:\n+\n+        ``` toml\n+        [server]\n+        offset=1\n+        ```\n+\n+-   Start the servers using the following commands:\n+    \n+    ``` tab=\"On Windows\"\n+    wso2server.bat --run\n+    ```\n+    \n+    ``` tab=\"On Linux/Mac OS\"\n+    sh wso2server.sh\n+    ```\n+\n+## Configure the Identity Server\n+\n+### Step - 1 Configure the Service Provider\n+\n+1.  Login to the Management Console of IS server by browsing the following URL:  \n+\n+    ```\n+    https://{is-ip}:9444/carbon\n+    ```\n+\n+2.  Navigate to the **Service Providers** section under Main \u2192 Identity and create new Service Provider.\n+\n+3.  Edit the created Service Provider:\n+\n+    1.  Expand the **Claim Configuration** section. Add **http://wso2.org/claims/role** as mandatory claim.\n+\n+        [![]({{base_path}}/assets/img/setup-and-install/claim-configuration-in-service-provider.png)]({{base_path}}/assets/img/setup-and-install/claim-configuration-in-service-provider.png)\n+\n+    2.  Expand the **Inbound Authentication Configuration** secition and configure **OAuth/OpenID Connect Configuration** with callback URL - `https://{apim-ip}:9443/commonauth`\n+\n+        ??? Info \"Enable a tenant-specific SSO for the Publisher and Developer Portal\"\n+\n+            To enable a tenant-specific SSO with IS 5.10.0 for Publisher and the Developer Portal, enable the **Use tenant domain in local subject identifier** option under the **Local & Outbound Authentication Configuration** section.\n+\n+            [![saml-configuration-in-service-provider]({{base_path}}/assets/img/setup-and-install/enable-tenant-domain-in-local-sub-identifier.png)]({{base_path}}/assets/img/setup-and-install/enable-tenant-domain-in-local-sub-identifier.png)\n+\n+    3. Update the Service Provider configurations.\n+\n+    !!! Info \"In Mutl-tenanted environments\"\n+            Carry out the instruction given below for all the tenants to be able to login to the API-M Web applications in a multi-tenanted environment.\n+\n+            1.  Click the **SaaS Application** option that appears after registering the service provider.\n+\n+            [![saas-configuration-in-service-provider]({{base_path}}/assets/img/setup-and-install/saas.png)]({{base_path}}/assets/img/setup-and-install/saas.png)            \n+\n+            If you do not select the **SaaS Application** option, only users in the current tenant domain will be allowed to login to the portals. You will need to register separate service providers for portals from each tenant.\n+\n+### Step - 2 Create users and roles\n+\n+1. Create the required users and roles in Identity Server. Assume, following users are created in Identity Servers with the given roles.\n+\n+    <table>\n+        <thead>\n+            <tr>\n+                <th>User</th>\n+                <th>Role</th>\n+            </tr>\n+        </thead>\n+        <tbody>\n+            <tr>\n+                <td>api_publisher</td>\n+                <td>publisher_role</td>\n+            </tr>\n+            <tr>\n+                <td>api_user</td>\n+                <td>user_role</td>\n+            </tr>\n+        </tbody>\n+    </table>\n+\n+## Configure the API Manager\n+\n+### Step - 1 Configure the Identity Provider\n+\n+1.  Login to the Management Console of API Manager by browsing the following URL: \n+\n+    ```\n+    https://{apim-ip}:9443/carbon\n+    ```\n+\n+2.  Navigate to the **Identity Providers** section under Main \u2192 Identity and create new Identity Provider.\n+\n+    1.  Expand the **Federated Authenticators** section and add following configurations under **OAuth2/OpenIDConnect Configuration**:\n+\n+        <table>\n+            <tbody>\n+                <tr>\n+                    <td>Enable OAuth2/OpenIDConnect</td>\n+                    <td>True</td>\n+                </tr>\n+                <tr>\n+                    <td>Client Id</td>\n+                    <td>Client Id of the Service Provider created in Identity Server</td>\n+                </tr>\n+                <tr>\n+                    <td>Client Secret</td>\n+                    <td>Client Secret of the Service Provider created in Identity Server</td>\n+                </tr>\n+                <tr>\n+                    <td>Authorization Endpoint URL</td>\n+                    <td>https://is.wso2.com:9444/oauth2/authorize</td>\n+                </tr>\n+                <tr>\n+                    <td>Token Endpoint URL</td>\n+                    <td>https://is.wso2.com:9444/oauth2/token</td>\n+                </tr>\n+                <tr>\n+                    <td>Callback Url</td>\n+                    <td>https://apim.wso2.com:9443/commonauth</td>\n+                </tr>\n+                <tr>\n+                    <td>Userinfo Endpoint URL</td>\n+                    <td>https://is.wso2.com:9444/oauth2/userinfo</td>\n+                </tr>\n+                <tr>\n+                    <td>Logout Endpoint URL</td>\n+                    <td>https://is.wso2.com:9444/oidc/logout</td>\n+                </tr>\n+            </tbody>\n+        </table>\n+\n+        Following image shows the sample values for OAuth2/OpenIDConnect Configurations:\n+\n+        [![sp]({{base_path}}/assets/img/setup-and-install/identity-provider-configuration-for-sso.png)]({{base_path}}/assets/img/setup-and-install/identity-provider-configuration-for-sso.png)\n+\n+    2.  Enable Just-in-Time Provisioning to provision the users in API Manager: \n+\n+        [![]({{base_path}}/assets/img/setup-and-install/jit-provisioning-for-sso.png)]({{base_path}}/assets/img/setup-and-install/jit-provisioning-for-sso.png)\n+\n+    3.  Add the following role mapping under **Role Configuration** section:\n+        <table>\n+        <thead>\n+            <tr>\n+                <th>Identity Server Roles</th>\n+                <th>Roles Mapped in API Manager</th>\n+            </tr>\n+        </thead>\n+        <tbody>\n+            <tr>\n+                <td>user_role</td>\n+                <td>Internal/Subscriber</td>\n+            </tr>\n+            <tr>\n+                <td>publisher_role</td>\n+                <td>Internal/publisher</td>\n+            </tr>\n+        </tbody>\n+        </table>\n+\n+        [![]({{base_path}}/assets/img/setup-and-install/role-mapping-for-sso.png)]({{base_path}}/assets/img/setup-and-install/role-mapping-for-sso.png)\n+\n+        !!! Tip\n+            Instead of using the default internal roles, you can also create new roles in API Manager and map it to the provisioned users. \n+\n+### Step - 2 Configure the Service Provider\n+\n+1.  Navigate to **Service Providers** section and list the Service Providers. There are two service providers created for Publisher portal and Developer portal named as `apim_publisher` and `apim_devportal`. Edit the `apim_publisher` service provider.\n+\n+    !!! Attention\n+        You will have to log into the Developer Portal and Publisher at least once for the two service providers to appear as it is created during first login.\n+\n+2.  Expand the **Local & Outbound Authentication Configuration** section and select **Federated Authentication** as Authentication Type and select the name of the Identity Provider you created in Step 5 and update. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "424760b4f6e687c0929925c2ac5b7d2f667cf88c"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ1MDE3OA==", "bodyText": "Could it be Step - 2.1?", "url": "https://github.com/wso2/docs-apim/pull/2068#discussion_r516450178", "createdAt": "2020-11-03T06:36:06Z", "author": {"login": "Mariangela"}, "path": "en/docs/install-and-setup/setup/sso/configuring-identity-server-as-external-idp-using-oidc.md", "diffHunk": "@@ -0,0 +1,203 @@\n+# Configuring Identity Server as External IDP using OIDC\n+\n+WSO2 API Manager uses OIDC Single Sign-On feature by default. This document explains how to connect an WSO2 Identity Server (or WSO2 IS-KM) as a third party Identity provider to API-Manager.\n+\n+## Pre-requisites\n+\n+-   Download the API Manager distribution from [https://wso2.com/api-management/](https://wso2.com/api-management/).\n+-   Download the Identity Server distirbution from [https://wso2.com/identity-and-access-management/](https://wso2.com/identity-and-access-management/).\n+\n+    !!! Tip\n+        For **testing purposes** if you want to run both the WSO2 API Manager and WSO2 IS server on the same server, then you can go to the `<IS_HOME>/repository/conf/deployment.toml` file and offset the port by 1 as by adding following configuration:\n+\n+        ``` toml\n+        [server]\n+        offset=1\n+        ```\n+\n+-   Start the servers using the following commands:\n+    \n+    ``` tab=\"On Windows\"\n+    wso2server.bat --run\n+    ```\n+    \n+    ``` tab=\"On Linux/Mac OS\"\n+    sh wso2server.sh\n+    ```\n+\n+## Configure the Identity Server\n+\n+### Step - 1 Configure the Service Provider\n+\n+1.  Login to the Management Console of IS server by browsing the following URL:  \n+\n+    ```\n+    https://{is-ip}:9444/carbon\n+    ```\n+\n+2.  Navigate to the **Service Providers** section under Main \u2192 Identity and create new Service Provider.\n+\n+3.  Edit the created Service Provider:\n+\n+    1.  Expand the **Claim Configuration** section. Add **http://wso2.org/claims/role** as mandatory claim.\n+\n+        [![]({{base_path}}/assets/img/setup-and-install/claim-configuration-in-service-provider.png)]({{base_path}}/assets/img/setup-and-install/claim-configuration-in-service-provider.png)\n+\n+    2.  Expand the **Inbound Authentication Configuration** secition and configure **OAuth/OpenID Connect Configuration** with callback URL - `https://{apim-ip}:9443/commonauth`\n+\n+        ??? Info \"Enable a tenant-specific SSO for the Publisher and Developer Portal\"\n+\n+            To enable a tenant-specific SSO with IS 5.10.0 for Publisher and the Developer Portal, enable the **Use tenant domain in local subject identifier** option under the **Local & Outbound Authentication Configuration** section.\n+\n+            [![saml-configuration-in-service-provider]({{base_path}}/assets/img/setup-and-install/enable-tenant-domain-in-local-sub-identifier.png)]({{base_path}}/assets/img/setup-and-install/enable-tenant-domain-in-local-sub-identifier.png)\n+\n+    3. Update the Service Provider configurations.\n+\n+    !!! Info \"In Mutl-tenanted environments\"\n+            Carry out the instruction given below for all the tenants to be able to login to the API-M Web applications in a multi-tenanted environment.\n+\n+            1.  Click the **SaaS Application** option that appears after registering the service provider.\n+\n+            [![saas-configuration-in-service-provider]({{base_path}}/assets/img/setup-and-install/saas.png)]({{base_path}}/assets/img/setup-and-install/saas.png)            \n+\n+            If you do not select the **SaaS Application** option, only users in the current tenant domain will be allowed to login to the portals. You will need to register separate service providers for portals from each tenant.\n+\n+### Step - 2 Create users and roles\n+\n+1. Create the required users and roles in Identity Server. Assume, following users are created in Identity Servers with the given roles.\n+\n+    <table>\n+        <thead>\n+            <tr>\n+                <th>User</th>\n+                <th>Role</th>\n+            </tr>\n+        </thead>\n+        <tbody>\n+            <tr>\n+                <td>api_publisher</td>\n+                <td>publisher_role</td>\n+            </tr>\n+            <tr>\n+                <td>api_user</td>\n+                <td>user_role</td>\n+            </tr>\n+        </tbody>\n+    </table>\n+\n+## Configure the API Manager\n+\n+### Step - 1 Configure the Identity Provider\n+\n+1.  Login to the Management Console of API Manager by browsing the following URL: \n+\n+    ```\n+    https://{apim-ip}:9443/carbon\n+    ```\n+\n+2.  Navigate to the **Identity Providers** section under Main \u2192 Identity and create new Identity Provider.\n+\n+    1.  Expand the **Federated Authenticators** section and add following configurations under **OAuth2/OpenIDConnect Configuration**:\n+\n+        <table>\n+            <tbody>\n+                <tr>\n+                    <td>Enable OAuth2/OpenIDConnect</td>\n+                    <td>True</td>\n+                </tr>\n+                <tr>\n+                    <td>Client Id</td>\n+                    <td>Client Id of the Service Provider created in Identity Server</td>\n+                </tr>\n+                <tr>\n+                    <td>Client Secret</td>\n+                    <td>Client Secret of the Service Provider created in Identity Server</td>\n+                </tr>\n+                <tr>\n+                    <td>Authorization Endpoint URL</td>\n+                    <td>https://is.wso2.com:9444/oauth2/authorize</td>\n+                </tr>\n+                <tr>\n+                    <td>Token Endpoint URL</td>\n+                    <td>https://is.wso2.com:9444/oauth2/token</td>\n+                </tr>\n+                <tr>\n+                    <td>Callback Url</td>\n+                    <td>https://apim.wso2.com:9443/commonauth</td>\n+                </tr>\n+                <tr>\n+                    <td>Userinfo Endpoint URL</td>\n+                    <td>https://is.wso2.com:9444/oauth2/userinfo</td>\n+                </tr>\n+                <tr>\n+                    <td>Logout Endpoint URL</td>\n+                    <td>https://is.wso2.com:9444/oidc/logout</td>\n+                </tr>\n+            </tbody>\n+        </table>\n+\n+        Following image shows the sample values for OAuth2/OpenIDConnect Configurations:\n+\n+        [![sp]({{base_path}}/assets/img/setup-and-install/identity-provider-configuration-for-sso.png)]({{base_path}}/assets/img/setup-and-install/identity-provider-configuration-for-sso.png)\n+\n+    2.  Enable Just-in-Time Provisioning to provision the users in API Manager: \n+\n+        [![]({{base_path}}/assets/img/setup-and-install/jit-provisioning-for-sso.png)]({{base_path}}/assets/img/setup-and-install/jit-provisioning-for-sso.png)\n+\n+    3.  Add the following role mapping under **Role Configuration** section:\n+        <table>\n+        <thead>\n+            <tr>\n+                <th>Identity Server Roles</th>\n+                <th>Roles Mapped in API Manager</th>\n+            </tr>\n+        </thead>\n+        <tbody>\n+            <tr>\n+                <td>user_role</td>\n+                <td>Internal/Subscriber</td>\n+            </tr>\n+            <tr>\n+                <td>publisher_role</td>\n+                <td>Internal/publisher</td>\n+            </tr>\n+        </tbody>\n+        </table>\n+\n+        [![]({{base_path}}/assets/img/setup-and-install/role-mapping-for-sso.png)]({{base_path}}/assets/img/setup-and-install/role-mapping-for-sso.png)\n+\n+        !!! Tip\n+            Instead of using the default internal roles, you can also create new roles in API Manager and map it to the provisioned users. \n+\n+### Step - 2 Configure the Service Provider\n+\n+1.  Navigate to **Service Providers** section and list the Service Providers. There are two service providers created for Publisher portal and Developer portal named as `apim_publisher` and `apim_devportal`. Edit the `apim_publisher` service provider.\n+\n+    !!! Attention\n+        You will have to log into the Developer Portal and Publisher at least once for the two service providers to appear as it is created during first login.\n+\n+2.  Expand the **Local & Outbound Authentication Configuration** section and select **Federated Authentication** as Authentication Type and select the name of the Identity Provider you created in Step 5 and update. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ0OTM1Nw=="}, "originalCommit": {"oid": "424760b4f6e687c0929925c2ac5b7d2f667cf88c"}, "originalPosition": 179}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjY5ODQ5OnYy", "diffSide": "RIGHT", "path": "en/docs/install-and-setup/setup/sso/configuring-identity-server-as-external-idp-using-oidc.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjo0ODowMlrOHsh0PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwNjo0ODowMlrOHsh0PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ1MzQzNw==", "bodyText": "Always mention directory paths within `  `\nIf not only part of the directory path appears. For example, /repository/conf appears as /repository/conf", "url": "https://github.com/wso2/docs-apim/pull/2068#discussion_r516453437", "createdAt": "2020-11-03T06:48:02Z", "author": {"login": "Mariangela"}, "path": "en/docs/install-and-setup/setup/sso/configuring-identity-server-as-external-idp-using-oidc.md", "diffHunk": "@@ -0,0 +1,203 @@\n+# Configuring Identity Server as External IDP using OIDC\n+\n+WSO2 API Manager uses OIDC Single Sign-On feature by default. This document explains how to connect an WSO2 Identity Server (or WSO2 IS-KM) as a third party Identity provider to API-Manager.\n+\n+## Pre-requisites\n+\n+-   Download the API Manager distribution from [https://wso2.com/api-management/](https://wso2.com/api-management/).\n+-   Download the Identity Server distirbution from [https://wso2.com/identity-and-access-management/](https://wso2.com/identity-and-access-management/).\n+\n+    !!! Tip\n+        For **testing purposes** if you want to run both the WSO2 API Manager and WSO2 IS server on the same server, then you can go to the `<IS_HOME>/repository/conf/deployment.toml` file and offset the port by 1 as by adding following configuration:\n+\n+        ``` toml\n+        [server]\n+        offset=1\n+        ```\n+\n+-   Start the servers using the following commands:\n+    \n+    ``` tab=\"On Windows\"\n+    wso2server.bat --run\n+    ```\n+    \n+    ``` tab=\"On Linux/Mac OS\"\n+    sh wso2server.sh\n+    ```\n+\n+## Configure the Identity Server\n+\n+### Step - 1 Configure the Service Provider\n+\n+1.  Login to the Management Console of IS server by browsing the following URL:  \n+\n+    ```\n+    https://{is-ip}:9444/carbon\n+    ```\n+\n+2.  Navigate to the **Service Providers** section under Main \u2192 Identity and create new Service Provider.\n+\n+3.  Edit the created Service Provider:\n+\n+    1.  Expand the **Claim Configuration** section. Add **http://wso2.org/claims/role** as mandatory claim.\n+\n+        [![]({{base_path}}/assets/img/setup-and-install/claim-configuration-in-service-provider.png)]({{base_path}}/assets/img/setup-and-install/claim-configuration-in-service-provider.png)\n+\n+    2.  Expand the **Inbound Authentication Configuration** secition and configure **OAuth/OpenID Connect Configuration** with callback URL - `https://{apim-ip}:9443/commonauth`\n+\n+        ??? Info \"Enable a tenant-specific SSO for the Publisher and Developer Portal\"\n+\n+            To enable a tenant-specific SSO with IS 5.10.0 for Publisher and the Developer Portal, enable the **Use tenant domain in local subject identifier** option under the **Local & Outbound Authentication Configuration** section.\n+\n+            [![saml-configuration-in-service-provider]({{base_path}}/assets/img/setup-and-install/enable-tenant-domain-in-local-sub-identifier.png)]({{base_path}}/assets/img/setup-and-install/enable-tenant-domain-in-local-sub-identifier.png)\n+\n+    3. Update the Service Provider configurations.\n+\n+    !!! Info \"In Mutl-tenanted environments\"\n+            Carry out the instruction given below for all the tenants to be able to login to the API-M Web applications in a multi-tenanted environment.\n+\n+            1.  Click the **SaaS Application** option that appears after registering the service provider.\n+\n+            [![saas-configuration-in-service-provider]({{base_path}}/assets/img/setup-and-install/saas.png)]({{base_path}}/assets/img/setup-and-install/saas.png)            \n+\n+            If you do not select the **SaaS Application** option, only users in the current tenant domain will be allowed to login to the portals. You will need to register separate service providers for portals from each tenant.\n+\n+### Step - 2 Create users and roles\n+\n+1. Create the required users and roles in Identity Server. Assume, following users are created in Identity Servers with the given roles.\n+\n+    <table>\n+        <thead>\n+            <tr>\n+                <th>User</th>\n+                <th>Role</th>\n+            </tr>\n+        </thead>\n+        <tbody>\n+            <tr>\n+                <td>api_publisher</td>\n+                <td>publisher_role</td>\n+            </tr>\n+            <tr>\n+                <td>api_user</td>\n+                <td>user_role</td>\n+            </tr>\n+        </tbody>\n+    </table>\n+\n+## Configure the API Manager\n+\n+### Step - 1 Configure the Identity Provider\n+\n+1.  Login to the Management Console of API Manager by browsing the following URL: \n+\n+    ```\n+    https://{apim-ip}:9443/carbon\n+    ```\n+\n+2.  Navigate to the **Identity Providers** section under Main \u2192 Identity and create new Identity Provider.\n+\n+    1.  Expand the **Federated Authenticators** section and add following configurations under **OAuth2/OpenIDConnect Configuration**:\n+\n+        <table>\n+            <tbody>\n+                <tr>\n+                    <td>Enable OAuth2/OpenIDConnect</td>\n+                    <td>True</td>\n+                </tr>\n+                <tr>\n+                    <td>Client Id</td>\n+                    <td>Client Id of the Service Provider created in Identity Server</td>\n+                </tr>\n+                <tr>\n+                    <td>Client Secret</td>\n+                    <td>Client Secret of the Service Provider created in Identity Server</td>\n+                </tr>\n+                <tr>\n+                    <td>Authorization Endpoint URL</td>\n+                    <td>https://is.wso2.com:9444/oauth2/authorize</td>\n+                </tr>\n+                <tr>\n+                    <td>Token Endpoint URL</td>\n+                    <td>https://is.wso2.com:9444/oauth2/token</td>\n+                </tr>\n+                <tr>\n+                    <td>Callback Url</td>\n+                    <td>https://apim.wso2.com:9443/commonauth</td>\n+                </tr>\n+                <tr>\n+                    <td>Userinfo Endpoint URL</td>\n+                    <td>https://is.wso2.com:9444/oauth2/userinfo</td>\n+                </tr>\n+                <tr>\n+                    <td>Logout Endpoint URL</td>\n+                    <td>https://is.wso2.com:9444/oidc/logout</td>\n+                </tr>\n+            </tbody>\n+        </table>\n+\n+        Following image shows the sample values for OAuth2/OpenIDConnect Configurations:\n+\n+        [![sp]({{base_path}}/assets/img/setup-and-install/identity-provider-configuration-for-sso.png)]({{base_path}}/assets/img/setup-and-install/identity-provider-configuration-for-sso.png)\n+\n+    2.  Enable Just-in-Time Provisioning to provision the users in API Manager: \n+\n+        [![]({{base_path}}/assets/img/setup-and-install/jit-provisioning-for-sso.png)]({{base_path}}/assets/img/setup-and-install/jit-provisioning-for-sso.png)\n+\n+    3.  Add the following role mapping under **Role Configuration** section:\n+        <table>\n+        <thead>\n+            <tr>\n+                <th>Identity Server Roles</th>\n+                <th>Roles Mapped in API Manager</th>\n+            </tr>\n+        </thead>\n+        <tbody>\n+            <tr>\n+                <td>user_role</td>\n+                <td>Internal/Subscriber</td>\n+            </tr>\n+            <tr>\n+                <td>publisher_role</td>\n+                <td>Internal/publisher</td>\n+            </tr>\n+        </tbody>\n+        </table>\n+\n+        [![]({{base_path}}/assets/img/setup-and-install/role-mapping-for-sso.png)]({{base_path}}/assets/img/setup-and-install/role-mapping-for-sso.png)\n+\n+        !!! Tip\n+            Instead of using the default internal roles, you can also create new roles in API Manager and map it to the provisioned users. \n+\n+### Step - 2 Configure the Service Provider\n+\n+1.  Navigate to **Service Providers** section and list the Service Providers. There are two service providers created for Publisher portal and Developer portal named as `apim_publisher` and `apim_devportal`. Edit the `apim_publisher` service provider.\n+\n+    !!! Attention\n+        You will have to log into the Developer Portal and Publisher at least once for the two service providers to appear as it is created during first login.\n+\n+2.  Expand the **Local & Outbound Authentication Configuration** section and select **Federated Authentication** as Authentication Type and select the name of the Identity Provider you created in Step 5 and update. \n+\n+    [![]({{base_path}}/assets/img/setup-and-install/local-and-outbound-authentication-configuration-for-sso.png)]({{base_path}}/assets/img/setup-and-install/local-and-outbound-authentication-configuration-for-sso.png)\n+\n+3.  Repeat the same step for apim_devportal Service Provider as well.\n+\n+Now you will be able to login to Publisher and Devportal using the users in WSO2 Identity Server.\n+\n+!!! Tip \"Troubleshooting\"\n+    When using Identity Server as external IdP, following error can be observed in API Manager, when login to Portals. \n+\n+    ``` code\n+        invalid_request, The client MUST NOT use more than one authentication method in each\n+    ```\n+\n+    It is because MutualTLS authenticator is enabled by default in, from IS 5.8.0 onwards. Since the OIDC specification does not allow to use more than one authentication, the login fails with above error. In order to resolve this issue, add following configuration in the deployment.toml resides in <IS-Home>/repository/conf directory to disable the MutualTLS authenticator in IS.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "424760b4f6e687c0929925c2ac5b7d2f667cf88c"}, "originalPosition": 194}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1863, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}