{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNjYxNjc5", "number": 994, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwNjo1NTo1OFrOFNFrFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwNjo1NTo1OFrOFNFrFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5MjY4NzU3OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwNjo1NTo1OFrOIRG6Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxNzowMDo1NFrOIXIeGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDgwOTkxNA==", "bodyText": "The heading should be corrected as \"Using API-M Admin Portal\". Please correct this.", "url": "https://github.com/wso2/docs-apim/pull/994#discussion_r554809914", "createdAt": "2021-01-11T06:55:58Z", "author": {"login": "npamudika"}, "path": "en/docs/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations.md", "diffHunk": "@@ -0,0 +1,148 @@\n+#  Creating Custom Users to Perform API Controller Operations\n+\n+To perform tasks using the API Controller, a particular user must have required permissions and scopes. By default, a user with `admin` role is allowed perform all the tasks. \n+\n+## Steps to Create a Custom User who can Perform API Controller Operations\n+\n+1. Create a role named `custom_role` with `API Create`, `API Publish` and `API Subscribe` permissions (along with `Login` permission) and assign it to a user.\n+\n+    !!! tip\n+        Refer [Managing Users and Roles]({{base_path}}/administer/product-administration/managing-users-and-roles/introduction-to-user-management/) to learn how to create a user role with permissions and assign it to a user.\n+\n+2.  Assigning the required scopes for the `custom_role` can be done using 2 methods.\n+\n+    1.  Using API-M management console.\n+\n+        1. Sign in to the API-M management console (`https://<APIM_Host>:<APIM_Port>/carbon`) as a tenant admin user.\n+\n+        2. Navigate to **Main > Resources > Browse** \n+\n+        3.  Enter `/_system/config/apimgt/applicationdata/tenant-conf.json` as the location and click **Go** to browse the registry and locate the required resource.\n+\n+        4.  Update the `RESTAPIScopes` JSON field by adding `custom_role` to the `Roles` field under the corresponding scope `Name` fields as shown below.\n+            ```bash\n+            {\n+                \"Name\": \"apim:api_view\",\n+                \"Roles\": \"admin,Internal/publisher,Internal/creator,Internal/analytics,custom_role\"\n+            },\n+            {\n+                \"Name\": \"apim:subscribe\",\n+                \"Roles\": \"admin,Internal/subscriber,custom_role\"\n+            },\n+            {\n+                \"Name\": \"apim:app_owner_change\",\n+                \"Roles\": \"admin,custom_role\"\n+            },\n+                \"Name\": \"apim:app_import_export\",\n+                \"Roles\": \"admin,custom_role\"\n+            },\n+            {\n+                \"Name\": \"apim:api_import_export\",\n+                \"Roles\": \"admin,custom_role\"\n+            },\n+            ``` \n+\n+    2.  Using API-M management console.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69b97fc01044683d794e865c403534250c53333e"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTEyNjkzOA==", "bodyText": "Fixed via #2973", "url": "https://github.com/wso2/docs-apim/pull/994#discussion_r561126938", "createdAt": "2021-01-20T17:00:54Z", "author": {"login": "wasuradananjith"}, "path": "en/docs/learn/api-controller/advanced-topics/creating-custom-users-to-perform-api-controller-operations.md", "diffHunk": "@@ -0,0 +1,148 @@\n+#  Creating Custom Users to Perform API Controller Operations\n+\n+To perform tasks using the API Controller, a particular user must have required permissions and scopes. By default, a user with `admin` role is allowed perform all the tasks. \n+\n+## Steps to Create a Custom User who can Perform API Controller Operations\n+\n+1. Create a role named `custom_role` with `API Create`, `API Publish` and `API Subscribe` permissions (along with `Login` permission) and assign it to a user.\n+\n+    !!! tip\n+        Refer [Managing Users and Roles]({{base_path}}/administer/product-administration/managing-users-and-roles/introduction-to-user-management/) to learn how to create a user role with permissions and assign it to a user.\n+\n+2.  Assigning the required scopes for the `custom_role` can be done using 2 methods.\n+\n+    1.  Using API-M management console.\n+\n+        1. Sign in to the API-M management console (`https://<APIM_Host>:<APIM_Port>/carbon`) as a tenant admin user.\n+\n+        2. Navigate to **Main > Resources > Browse** \n+\n+        3.  Enter `/_system/config/apimgt/applicationdata/tenant-conf.json` as the location and click **Go** to browse the registry and locate the required resource.\n+\n+        4.  Update the `RESTAPIScopes` JSON field by adding `custom_role` to the `Roles` field under the corresponding scope `Name` fields as shown below.\n+            ```bash\n+            {\n+                \"Name\": \"apim:api_view\",\n+                \"Roles\": \"admin,Internal/publisher,Internal/creator,Internal/analytics,custom_role\"\n+            },\n+            {\n+                \"Name\": \"apim:subscribe\",\n+                \"Roles\": \"admin,Internal/subscriber,custom_role\"\n+            },\n+            {\n+                \"Name\": \"apim:app_owner_change\",\n+                \"Roles\": \"admin,custom_role\"\n+            },\n+                \"Name\": \"apim:app_import_export\",\n+                \"Roles\": \"admin,custom_role\"\n+            },\n+            {\n+                \"Name\": \"apim:api_import_export\",\n+                \"Roles\": \"admin,custom_role\"\n+            },\n+            ``` \n+\n+    2.  Using API-M management console.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDgwOTkxNA=="}, "originalCommit": {"oid": "69b97fc01044683d794e865c403534250c53333e"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1980, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}