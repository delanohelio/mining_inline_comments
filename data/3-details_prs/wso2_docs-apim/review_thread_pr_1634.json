{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NzE5MjYy", "number": 1634, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMjoxNTozNFrOEXBz7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMjoxNjoxMFrOEXB0UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNTgyMzgyOnYy", "diffSide": "RIGHT", "path": "en/docs/getting-started/overview.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMjoxNTozNFrOG-l9JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMjoxNTo1NFrOG-l9dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI4Njc1Nw==", "bodyText": "ESB - EI", "url": "https://github.com/wso2/docs-apim/pull/1634#discussion_r468286757", "createdAt": "2020-08-11T02:15:34Z", "author": {"login": "shaniR"}, "path": "en/docs/getting-started/overview.md", "diffHunk": "@@ -47,19 +47,18 @@ The diagram\u00a0above shows the common lifecycle activities of an API developer/man\n \n The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to [self-register]({{base_path}}/learn/consume-api/customizations/customizing-the-developer-portal/enabling-or-disabling-self-signup), discover, evaluate, subscribe to and consume APIs.\n \n-\n The diagram above shows common API consumer lifecycle activities:\n \n #### API Gateway\n \n-The API Gateway is a runtime, backend component (an [API proxy](https://docs.wso2.com/display/EI611/Working+with+APIs) ) developed using [WSO2 ESB]{{base_path}}/getting-started/about-this-release/). API Gateway secures, protects, manages, and scales API calls. It intercepts API requests, applies policies such as throttling and security using handlers, and manages API statistics. Upon validation of a policy, the Gateway passes web service calls to the actual backend. If the service call is a token request, the Gateway passes it directly to the [Key Manager](#key-manager).\n+The API Gateway is a runtime, backend component (an [API proxy](https://docs.wso2.com/display/EI611/Working+with+APIs)) developed using [WSO2 EI](https://docs.wso2.com/display/EI660). API Gateway secures, protects, manages, and scales API calls. It intercepts API requests, applies policies such as throttling and security using handlers, and manages API statistics. Upon validation of a policy, the Gateway passes web service calls to the actual backend. If the service call is a token request, the Gateway passes it directly to the [Key Manager](#key-manager).\n \n The API Gateway supports OAuth 2.0, JWT, Basic Auth, Mutual SSL as well as API-Key based authentication mechanisms the above-mentioned authentication mechanisms and enables IT organizations to enforce rate limits and throttling policies.\n \n When WSO2 API Manager is running, you can access the API-M Managment Console in the Gateway node using the following URL: <https://localhost:9443/carbon>. You can integrate a monitoring and analytics component to the API Manager by [configuring WSO2 API Manager Analytics]({{base_path}}/learn/analytics/configuring-apim-analytics.md). This component\u00a0provides reports, statistics and graphs on the APIs deployed in WSO2 API Manager. You can also configure alerts to monitor these APIs and detect unusual activity, manage locations via geo location statistics and, carry out detailed analysis of the logs.\n \n !!! note\n-    Although the API Gateway contains ESB features, it is recommended not to use it for ESB-specific tasks. Its intended to be used only for Gateway functionality related to API invocations. For example, if you want to call external services like SAP, use a separate [ESB cluster](https://docs.wso2.com/display/EI650/Clustering+the+ESB+Profile) for that purpose.\n+    Although the API Gateway contains ESB features, it is recommended not to use it for ESB-specific tasks. Its intended to be used only for Gateway functionality related to API invocations. For example, if you want to call external services like SAP, use a separate [ESB cluster](https://docs.wso2.com/display/EI6560/Clustering+the+ESB+Profile) for that purpose.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "911966281c3b88a58b7b4ba1399bc3bef7404956"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI4NjgzNg==", "bodyText": "EI6560- EI660", "url": "https://github.com/wso2/docs-apim/pull/1634#discussion_r468286836", "createdAt": "2020-08-11T02:15:54Z", "author": {"login": "shaniR"}, "path": "en/docs/getting-started/overview.md", "diffHunk": "@@ -47,19 +47,18 @@ The diagram\u00a0above shows the common lifecycle activities of an API developer/man\n \n The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to [self-register]({{base_path}}/learn/consume-api/customizations/customizing-the-developer-portal/enabling-or-disabling-self-signup), discover, evaluate, subscribe to and consume APIs.\n \n-\n The diagram above shows common API consumer lifecycle activities:\n \n #### API Gateway\n \n-The API Gateway is a runtime, backend component (an [API proxy](https://docs.wso2.com/display/EI611/Working+with+APIs) ) developed using [WSO2 ESB]{{base_path}}/getting-started/about-this-release/). API Gateway secures, protects, manages, and scales API calls. It intercepts API requests, applies policies such as throttling and security using handlers, and manages API statistics. Upon validation of a policy, the Gateway passes web service calls to the actual backend. If the service call is a token request, the Gateway passes it directly to the [Key Manager](#key-manager).\n+The API Gateway is a runtime, backend component (an [API proxy](https://docs.wso2.com/display/EI611/Working+with+APIs)) developed using [WSO2 EI](https://docs.wso2.com/display/EI660). API Gateway secures, protects, manages, and scales API calls. It intercepts API requests, applies policies such as throttling and security using handlers, and manages API statistics. Upon validation of a policy, the Gateway passes web service calls to the actual backend. If the service call is a token request, the Gateway passes it directly to the [Key Manager](#key-manager).\n \n The API Gateway supports OAuth 2.0, JWT, Basic Auth, Mutual SSL as well as API-Key based authentication mechanisms the above-mentioned authentication mechanisms and enables IT organizations to enforce rate limits and throttling policies.\n \n When WSO2 API Manager is running, you can access the API-M Managment Console in the Gateway node using the following URL: <https://localhost:9443/carbon>. You can integrate a monitoring and analytics component to the API Manager by [configuring WSO2 API Manager Analytics]({{base_path}}/learn/analytics/configuring-apim-analytics.md). This component\u00a0provides reports, statistics and graphs on the APIs deployed in WSO2 API Manager. You can also configure alerts to monitor these APIs and detect unusual activity, manage locations via geo location statistics and, carry out detailed analysis of the logs.\n \n !!! note\n-    Although the API Gateway contains ESB features, it is recommended not to use it for ESB-specific tasks. Its intended to be used only for Gateway functionality related to API invocations. For example, if you want to call external services like SAP, use a separate [ESB cluster](https://docs.wso2.com/display/EI650/Clustering+the+ESB+Profile) for that purpose.\n+    Although the API Gateway contains ESB features, it is recommended not to use it for ESB-specific tasks. Its intended to be used only for Gateway functionality related to API invocations. For example, if you want to call external services like SAP, use a separate [ESB cluster](https://docs.wso2.com/display/EI6560/Clustering+the+ESB+Profile) for that purpose.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI4Njc1Nw=="}, "originalCommit": {"oid": "911966281c3b88a58b7b4ba1399bc3bef7404956"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNTgyNDgxOnYy", "diffSide": "RIGHT", "path": "en/docs/getting-started/overview.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMjoxNjoxMFrOG-l9tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMjoxNjoxMFrOG-l9tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI4NjkwMQ==", "bodyText": "EI660?", "url": "https://github.com/wso2/docs-apim/pull/1634#discussion_r468286901", "createdAt": "2020-08-11T02:16:10Z", "author": {"login": "shaniR"}, "path": "en/docs/getting-started/overview.md", "diffHunk": "@@ -47,19 +47,18 @@ The diagram\u00a0above shows the common lifecycle activities of an API developer/man\n \n The Developer Portal is a state-of-the-art web interface that allows API publishers to host and advertise their APIs while allowing API consumers to [self-register]({{base_path}}/learn/consume-api/customizations/customizing-the-developer-portal/enabling-or-disabling-self-signup), discover, evaluate, subscribe to and consume APIs.\n \n-\n The diagram above shows common API consumer lifecycle activities:\n \n #### API Gateway\n \n-The API Gateway is a runtime, backend component (an [API proxy](https://docs.wso2.com/display/EI611/Working+with+APIs) ) developed using [WSO2 ESB]{{base_path}}/getting-started/about-this-release/). API Gateway secures, protects, manages, and scales API calls. It intercepts API requests, applies policies such as throttling and security using handlers, and manages API statistics. Upon validation of a policy, the Gateway passes web service calls to the actual backend. If the service call is a token request, the Gateway passes it directly to the [Key Manager](#key-manager).\n+The API Gateway is a runtime, backend component (an [API proxy](https://docs.wso2.com/display/EI611/Working+with+APIs)) developed using [WSO2 EI](https://docs.wso2.com/display/EI660). API Gateway secures, protects, manages, and scales API calls. It intercepts API requests, applies policies such as throttling and security using handlers, and manages API statistics. Upon validation of a policy, the Gateway passes web service calls to the actual backend. If the service call is a token request, the Gateway passes it directly to the [Key Manager](#key-manager).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "911966281c3b88a58b7b4ba1399bc3bef7404956"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1592, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}