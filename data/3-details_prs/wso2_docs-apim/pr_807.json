{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NzM2NzMw", "number": 807, "title": "Added analytics HA docs", "bodyText": "Purpose\nAdded analytics HA docs", "createdAt": "2020-03-06T10:09:32Z", "url": "https://github.com/wso2/docs-apim/pull/807", "merged": true, "mergeCommit": {"oid": "6806d2d3759a37788c3065c3f6a6d2cf616a01fa"}, "closed": true, "closedAt": "2020-03-11T06:47:41Z", "author": {"login": "ruks"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcK9PiHAH2gAyMzg0NzM2NzMwOjc4YzkzOWFjMmQ4ZjIwMjdjYmFjODNiMDRmN2JiYzk4MWU0MGRhMmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMhZL4gFqTM3MjUwNzQ2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "78c939ac2d8f2027cbac83b04f7bbc981e40da2c", "author": {"user": {"login": "ruks", "name": "Rukshan Chathuranga"}}, "url": "https://github.com/wso2/docs-apim/commit/78c939ac2d8f2027cbac83b04f7bbc981e40da2c", "committedDate": "2020-03-06T10:06:30Z", "message": "Added analytics HA docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMjEzODg2", "url": "https://github.com/wso2/docs-apim/pull/807#pullrequestreview-370213886", "createdAt": "2020-03-06T10:14:07Z", "commit": {"oid": "78c939ac2d8f2027cbac83b04f7bbc981e40da2c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMDoxNDowOFrOFyzpew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMDoxNDowOFrOFyzpew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgxOTMyMw==", "bodyText": "Do we need this part?", "url": "https://github.com/wso2/docs-apim/pull/807#discussion_r388819323", "createdAt": "2020-03-06T10:14:08Z", "author": {"login": "fazlan-nazeem"}, "path": "en/docs/SetupAndInstall/DeployingWSO2APIManager/configure_apim_analytics/configure_worker/active_active.md", "diffHunk": "@@ -0,0 +1,134 @@\n+# Configure a Analytics workers as active-active\n+\n+To configure API-M Analytics as a scalable deployment, you can use the Active-Active deployment pattern. For an \n+overview of the Active-Active deployment pattern and instructions to configure it, see the following topics.\n+\n+- [Overview](#overview)\n+- [Configuring an active-active cluster](#configuring-an-active-active-cluster)\n+\n+\n+## Overview\n+![]({{base_path}}/assets/img/setup-and-install/configure_apim_analytics/Active-Active_Deployment.png)\n+\n+The above diagram represents a deployment where you are not limited to two nodes. You can scale the event processing \n+horizontally by adding more API-M Analytics nodes to the deployment. In this deployment, it is recommended to \n+configure the gateway node to publish events to multiple API-M Analytics nodes in a Round Robin manner to ensure \n+better fault tolerance. The publishing of events can be carried out by one or more APIM gateway nodes.\n+\n+In order to perform aggregations in a distributed manner and achieve the scalability, this setup uses distributed aggregations.\n+\n+Distributed aggregations partially process aggregations in different nodes. This allows you to assign one node to \n+process only a part of an aggregation (regional scaling, etc.). In order to do this all the aggregations must have a \n+physical database and must be linked to the same database.\n+\n+Partitioning aggregations can be enabled at aggregation level and also at a global level. To enable it at the global \n+level, add the following section with the *PartitionById* annotation set to true in the \n+`<APIM-ANALYTICS_WORKER_HOME>/conf/worker/deployment.yaml` file.\n+\n+``` yaml\n+siddhi:\n+ properties:\n+   partitionById: true\n+   shardId: wso2-dc\n+```\n+\n+This query captures the information relating to the total request counts for different APIs. Each request represents ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c939ac2d8f2027cbac83b04f7bbc981e40da2c"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwMjE1MTM2", "url": "https://github.com/wso2/docs-apim/pull/807#pullrequestreview-370215136", "createdAt": "2020-03-06T10:16:06Z", "commit": {"oid": "78c939ac2d8f2027cbac83b04f7bbc981e40da2c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMDoxNjowNlrOFyztPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMDoxNjowNlrOFyztPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgyMDI4Nw==", "bodyText": "shall we just mention that some alert types only will be affected?  I don't think we need to mention anything about distributed incremental aggregation.", "url": "https://github.com/wso2/docs-apim/pull/807#discussion_r388820287", "createdAt": "2020-03-06T10:16:06Z", "author": {"login": "fazlan-nazeem"}, "path": "en/docs/SetupAndInstall/DeployingWSO2APIManager/configure_apim_analytics/configure_worker/active_active.md", "diffHunk": "@@ -0,0 +1,134 @@\n+# Configure a Analytics workers as active-active\n+\n+To configure API-M Analytics as a scalable deployment, you can use the Active-Active deployment pattern. For an \n+overview of the Active-Active deployment pattern and instructions to configure it, see the following topics.\n+\n+- [Overview](#overview)\n+- [Configuring an active-active cluster](#configuring-an-active-active-cluster)\n+\n+\n+## Overview\n+![]({{base_path}}/assets/img/setup-and-install/configure_apim_analytics/Active-Active_Deployment.png)\n+\n+The above diagram represents a deployment where you are not limited to two nodes. You can scale the event processing \n+horizontally by adding more API-M Analytics nodes to the deployment. In this deployment, it is recommended to \n+configure the gateway node to publish events to multiple API-M Analytics nodes in a Round Robin manner to ensure \n+better fault tolerance. The publishing of events can be carried out by one or more APIM gateway nodes.\n+\n+In order to perform aggregations in a distributed manner and achieve the scalability, this setup uses distributed aggregations.\n+\n+Distributed aggregations partially process aggregations in different nodes. This allows you to assign one node to \n+process only a part of an aggregation (regional scaling, etc.). In order to do this all the aggregations must have a \n+physical database and must be linked to the same database.\n+\n+Partitioning aggregations can be enabled at aggregation level and also at a global level. To enable it at the global \n+level, add the following section with the *PartitionById* annotation set to true in the \n+`<APIM-ANALYTICS_WORKER_HOME>/conf/worker/deployment.yaml` file.\n+\n+``` yaml\n+siddhi:\n+ properties:\n+   partitionById: true\n+   shardId: wso2-dc\n+```\n+\n+This query captures the information relating to the total request counts for different APIs. Each request represents \n+an event, and the information captured includes the API name, the country and city from which the request was \n+generated,and the timestamp to which the information applies. Each node stores this information in the \n+APIM_ANALYTICS_DB data store defined in the `<API-M_ANALYTICS_HOME>/conf/worker/deployment.yaml` file.\n+\n+Now let's assume that during a specific hour, the API-M Gateway node publishes 30,000 events in node 1, and 40,000 \n+events in node 2 for Naples in Italy. When you retrieve the total for this hour via a retrieval query, the result is 70000.\n+\n+## Configuring an active-active cluster\n+   \n+To configure the API-M Analytics nodes to deploy them as an active-active cluster, edit the `<API-M_ANALYTICS_HOME>/conf/worker/deployment.yaml` file as follows:\n+\n+!!! note\n+\n+    Before you begin:\n+    \n+        - Download two binary packs of WSO2 API-M Analytics.\n+        - Set up a working RDBMS instance to be used by the WSO2 API-M Analytics cluster.\n+        \n+1. For each node, enter a unique ID for the id property under the wso2.carbon section. This is used to identify each \n+node within a cluster. For example, you can add IDs as shown below.\n+    - For node 1:\n+    ``` yaml\n+    wso2.carbon:\n+      id: wso2-am-analytics-1\n+    ```\n+    - For node 2:\n+    ``` yaml\n+    wso2.carbon:\n+      id: wso2-am-analytics-2\n+    ```\n+    \n+2. Enable partitioning aggregations for each node, and assign a unique shard ID for each node. To do this, set the \n+partitionById and shardId parameters as Siddhi properties as shown below.\n+\n+    !!! note \n+        \n+        Assigning shard IDs to nodes allows the system to identify each unique node when assigning parts of the \n+        aggregation. If the shard IDs are not assigned, system uses the unique node IDs (defined in step 1) for this purpose.\n+        \n+    - For node 1:\n+        ``` yaml\n+        siddhi:\n+          properties:\n+            partitionById: true\n+            shardId: wso2-sp-analytics-1\n+        ```\n+    - For node 2:\n+    ``` yaml\n+    siddhi:\n+      properties:\n+        partitionById: true\n+        shardId: wso2-sp-analytics-2\n+    ```\n+    \n+    !!! note \n+    \n+        - To maintain data consistency, do not change the shard IDs after the first configuration\n+        - When you enable the aggregation partitioning feature, a new column ID named SHARD_ID is introduced to the \n+        aggregation tables. Therefore, you need to do one of the following options after enabling this feature to \n+        avoid errors occuring due to the differences in the table schema.\n+            - Delete all the aggregation tables for SECONDS, MINUTES, HOURS, DAYS, MONTHS, YEARS. \n+            - Edit the aggregation tables by adding a new column named SHARD_ID, and specify it as a primary key.\n+\n+3. Configure a database, and then update the default configuration for the APIM_ANALYTICS_DB data source with \n+parameter values suitable for your requirements in `<APIM_ANALYTICS_HOME>/conf/worker/deployment.yaml`\n+\n+   ``` yaml\n+    \n+   - name: APIM_ANALYTICS_DB\n+         description: \"The datasource used for APIM statistics aggregated data.\"\n+         jndiConfig:\n+           name: jdbc/APIM_ANALYTICS_DB\n+         definition:\n+           type: RDBMS\n+           configuration:\n+             jdbcUrl: \"jdbc:mysql://localhost:3306/APIM_ANALYTICS_DB_1?useSSL=false\"\n+             password: pass\n+             username: root\n+             driverClassName: com.mysql.jdbc.Driver\n+             maxPoolSize: 50\n+             idleTimeout: 60000\n+             connectionTestQuery: SELECT 1\n+             validationTimeout: 30000\n+             isAutoCommit: false\n+         \n+   ```  \n+   \n+   - If you are configure analytics for WSO2 Micro Gateway, import the \n+   appropriate DB script from `<APIM_ANALYTICS_HOME>/wso2/worker/dbscripts/apimgt/`\n+\n+!!! note \n+\n+    As explained in above the events are processed in multiple active nodes. Eventhough this is usually a stateful \n+    operation, you can overcome the node-dependent calculations via distributed aggregation. This allows WSO2 API-M to \n+    execute APIM Analytics scripts that depend on incremental distributed aggregation.\n+    \n+    However, an active-active deployment can affect alerts because alerts also depend on some in-memory stateful \n+    operations such as windows. Due to this, alerts can be generated based on the events received by specific node. Thus \n+    the alerts are node-dependent, and you need to disable them to run scripts with distributed incremental aggregation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78c939ac2d8f2027cbac83b04f7bbc981e40da2c"}, "originalPosition": 134}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b250fd24afd5184b1d72413e64ad48be1ada467", "author": {"user": {"login": "ruks", "name": "Rukshan Chathuranga"}}, "url": "https://github.com/wso2/docs-apim/commit/2b250fd24afd5184b1d72413e64ad48be1ada467", "committedDate": "2020-03-11T06:31:50Z", "message": "Fixed review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa20e5b016b0f161a6d300845fe50d171e5b5472", "author": {"user": {"login": "ruks", "name": "Rukshan Chathuranga"}}, "url": "https://github.com/wso2/docs-apim/commit/aa20e5b016b0f161a6d300845fe50d171e5b5472", "committedDate": "2020-03-11T06:43:02Z", "message": "Resolved conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNTA3NDY1", "url": "https://github.com/wso2/docs-apim/pull/807#pullrequestreview-372507465", "createdAt": "2020-03-11T06:47:33Z", "commit": {"oid": "aa20e5b016b0f161a6d300845fe50d171e5b5472"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1955, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}