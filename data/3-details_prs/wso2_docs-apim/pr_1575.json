{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3Nzk4MjE0", "number": 1575, "title": "Update extending-scope-validation.md", "bodyText": "Purpose\n\nremove additional space\n\nGoals\n\nDescribe the solutions that this feature/fix will introduce to resolve the problems described above\n\nApproach\n\nDescribe how you are implementing the solutions. Include an animated GIF or screenshot if the change affects the UI (email documentation@wso2.com to review all UI text). Include a link to a Markdown file or Google doc if the feature write-up is too long to paste here.\n\nUser stories\n\nSummary of user stories addressed by this change>\n\nRelease note\n\nBrief description of the new feature or bug fix as it will appear in the release notes\n\nDocumentation\n\nLink(s) to product documentation that addresses the changes of this PR. If no doc impact, enter \u201cN/A\u201d plus brief explanation of why there\u2019s no doc impact\n\nTraining\n\nLink to the PR for changes to the training content in https://github.com/wso2/WSO2-Training, if applicable\n\nCertification\n\nType \u201cSent\u201d when you have provided new/updated certification questions, plus four answers for each question (correct answer highlighted in bold), based on this change. Certification questions/answers should be sent to certification@wso2.com and NOT pasted in this PR. If there is no impact on certification exams, type \u201cN/A\u201d and explain why.\n\nMarketing\n\nLink to drafts of marketing content that will describe and promote this feature, including product page changes, technical articles, blog posts, videos, etc., if applicable\n\nAutomation tests\n\nUnit tests\n\nCode coverage information\n\n\nIntegration tests\n\nDetails about the test cases and coverage\n\n\n\nSecurity checks\n\nFollowed secure coding standards in http://wso2.com/technical-reports/wso2-secure-engineering-guidelines? yes/no\nRan FindSecurityBugs plugin and verified report? yes/no\nConfirmed that this PR doesn't commit any keys, passwords, tokens, usernames, or other secrets? yes/no\n\nSamples\n\nProvide high-level details about the samples related to this feature\n\nRelated PRs\n\nList any other related PRs\n\nMigrations (if applicable)\n\nDescribe migration steps and platforms on which migration has been tested\n\nTest environment\n\nList all JDK versions, operating systems, databases, and browser/versions on which this feature/fix was tested\n\nLearning\n\nDescribe the research phase and any blog posts, patterns, libraries, or add-ons you used to solve the problem.", "createdAt": "2020-07-28T13:09:04Z", "url": "https://github.com/wso2/docs-apim/pull/1575", "merged": true, "mergeCommit": {"oid": "034c9f8c8ee5213a195d112879763b1ec81c9f74"}, "closed": true, "closedAt": "2020-09-08T06:13:46Z", "author": {"login": "isharac"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5WKG3gH2gAyNDU3Nzk4MjE0OjYzOTAxZDYwODVhMzdmNTQyNTM4MzI3NjBiYTNjNGMxOGNiNTU1YjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGxYV3gFqTQ4MzgyMDU2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "63901d6085a37f54253832760ba3c4c18cb555b1", "author": {"user": {"login": "isharac", "name": "Ishara"}}, "url": "https://github.com/wso2/docs-apim/commit/63901d6085a37f54253832760ba3c4c18cb555b1", "committedDate": "2020-07-28T13:08:43Z", "message": "Update extending-scope-validation.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0Njk2OTI5", "url": "https://github.com/wso2/docs-apim/pull/1575#pullrequestreview-464696929", "createdAt": "2020-08-11T01:53:36Z", "commit": {"oid": "63901d6085a37f54253832760ba3c4c18cb555b1"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMTo1MzozNlrOG-lm9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMTo1MzozNlrOG-lm9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI4MTA3Ng==", "bodyText": "we are not using the word whitelstng anymore isn't it?", "url": "https://github.com/wso2/docs-apim/pull/1575#discussion_r468281076", "createdAt": "2020-08-11T01:53:36Z", "author": {"login": "shaniR"}, "path": "en/docs/learn/extensions/extending-scope-validation.md", "diffHunk": "@@ -8,7 +8,7 @@ Validating the role of a requester does not make much sense in some scenarios. F\n \n ### Skipping role validation for scopes\n \n-When scopes which cannot be associated to roles are requested, the token should be issued without validating the scope. In WSO2 API Manager, you do this by [whitelisting the scope](https://docs.wso2.com/display/AM260/Key+Concepts#KeyConcepts-Scopewhitelisting) through configuration.\u00a0Patterns of the whitelisted scopes are specified via a configuration under the `<OAuthConfigurations>` element in the `<APIM_HOME>/repository/conf/api-manager.xml` file. S copes that match the pattern are not validated by role and are available to anyone requesting it.\n+When scopes which cannot be associated to roles are requested, the token should be issued without validating the scope. In WSO2 API Manager, you do this by [whitelisting the scope](https://docs.wso2.com/display/AM260/Key+Concepts#KeyConcepts-Scopewhitelisting) through configuration.\u00a0Patterns of the whitelisted scopes are specified via a configuration under the `<OAuthConfigurations>` element in the `<APIM_HOME>/repository/conf/api-manager.xml` file. Scopes that match the pattern are not validated by role and are available to anyone requesting it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63901d6085a37f54253832760ba3c4c18cb555b1"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e74c3ead7f8be3dc7bbb3b476aa5adbbf7ac348", "author": {"user": {"login": "isharac", "name": "Ishara"}}, "url": "https://github.com/wso2/docs-apim/commit/4e74c3ead7f8be3dc7bbb3b476aa5adbbf7ac348", "committedDate": "2020-08-23T12:53:16Z", "message": "Update extending-scope-validation.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26308d4af63203e4beee8550594e070b03b755f8", "author": {"user": {"login": "isharac", "name": "Ishara"}}, "url": "https://github.com/wso2/docs-apim/commit/26308d4af63203e4beee8550594e070b03b755f8", "committedDate": "2020-08-23T13:00:53Z", "message": "Update extending-scope-validation.md\n\nchange whitelisted term"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e34440ff4626cc9a13f34df34c4f0552571e611b", "author": {"user": {"login": "Mariangela", "name": "Mariangela Hills"}}, "url": "https://github.com/wso2/docs-apim/commit/e34440ff4626cc9a13f34df34c4f0552571e611b", "committedDate": "2020-09-07T09:50:41Z", "message": "Reviewed and updated"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNDI1NDY1", "url": "https://github.com/wso2/docs-apim/pull/1575#pullrequestreview-483425465", "createdAt": "2020-09-07T10:00:25Z", "commit": {"oid": "e34440ff4626cc9a13f34df34c4f0552571e611b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDowMDoyNVrOHN5FKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDowMDoyNVrOHN5FKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDMyODc0Nw==", "bodyText": "This configuration seems outdated because now the deployment.toml is used for this purpose.", "url": "https://github.com/wso2/docs-apim/pull/1575#discussion_r484328747", "createdAt": "2020-09-07T10:00:25Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/extensions/extending-scope-validation.md", "diffHunk": "@@ -1,65 +1,71 @@\n # Extending Scope Validation\n \n-OAuth scopes, which were introduced from WSO2 API Manager 1.7.0 onwards, allow you to have fine grained access control to API resources based on the user roles.\u00a0It allows you to define scopes per API and associate defined scopes with API resources.\u00a0OAuth 2.0 bearer tokens are obtained for a set of requested scopes and the token obtained is not allowed to access any API resources beyond the associated scopes. For more information, see [OAuth Scopes](https://docs.wso2.com/display/AM210/Key+Concepts#KeyConcepts-OAuthscopes) .\n+OAuth scopes, allow you to have fine grained access control to API resources based on the user roles.\u00a0It allows you to define scopes per API and associate defined scopes with API resources.\u00a0OAuth 2.0 bearer tokens are obtained for a set of requested scopes and the token obtained is not allowed to access any API resources beyond the associated scopes. For more information, see [Fine Grained Access Control with OAuth Scopes]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/fine-grained-access-control-with-oauth-scopes/).\n \n-API manager uses scopes as a way of defining permissions for\u00a0a resource. If a resource is assigned a scope, then the token accessing the resource should be generated\u00a0with that scope. By associating a scope with a role, you can control which users are permitted to have tokens under certain scopes. In this instance, associating a role to a scope seems legitimate.\n+API Manager uses scopes as a way of defining permissions for\u00a0a resource. If a resource is assigned a scope, then the token accessing the resource should be generated\u00a0with that scope. By associating a scope with a role, you can control which users are permitted to have tokens under certain scopes. In this instance, associating a role to a scope seems legitimate.\n \n-Validating the role of a requester does not make much sense in some scenarios. For instance, when the scope is used as a means of generating an access token and not for securing a resource (e.g. openId scope).\u00a0In such situations, scope validation can be extended to skip role validation for certain scopes.\n+Validating the role of a requester does not make much sense in some scenarios. For instance, when the scope is used as a means of generating an access token and not for securing a resource (e.g., openID scope).\u00a0In such situations, scope validation can be extended to skip role validation for certain scopes.\n \n ### Skipping role validation for scopes\n \n-When scopes which cannot be associated to roles are requested, the token should be issued without validating the scope. In WSO2 API Manager, you do this by [whitelisting the scope](https://docs.wso2.com/display/AM260/Key+Concepts#KeyConcepts-Scopewhitelisting) through configuration.\u00a0Patterns of the whitelisted scopes are specified via a configuration under the `<OAuthConfigurations>` element in the `<APIM_HOME>/repository/conf/api-manager.xml` file. S copes that match the pattern are not validated by role and are available to anyone requesting it.\n+When scopes that cannot be associated with roles are requested, the token should be issued without validating the scope. In WSO2 API Manager, you do this by [allowlisting the scope]({{base_path}}/learn/api-security/oauth2/oauth2-scopes/scope-whitelisting) using configurations.\u00a0Patterns of the allowed scopes are specified via a configuration under the `<OAuthConfigurations>` element in the `<API-M_HOME>/repository/conf/api-manager.xml` file. Scopes that match the pattern are not validated by role and are available to anyone requesting it.\n \n-The following steps show a demonstration:\n+Follow the instructions below to skip role validation for scopes:\n \n-1.  Start the API Manager server and log into the Developer Portal.\n-2.  Create an application. On the **Production Keys** tab of your application,\u00a0click **Generate Keys** .\n-3.  Obtain the **Base64** encoded representation of the Consumer Key and the Consumer Secret separated by a colon according to the following format.\n+1.  Start the API Manager server and sign in to the Developer Portal.\n+2.  Create an application. \n \n-    ``` java\n-        Base64(consumer-key:consumer-secret)\n-    ```\n+     Navigate to the **Production Keys** tab of your application,\u00a0click **Generate Keys**.\n+\n+3.  Obtain the **Base64** encoded representation of the Consumer Key and the Consumer Secret separated by a colon based on the following format.\n+\n+      ``` java\n+      Base64(consumer-key:consumer-secret)\n+      ```\n+\n+    !!! tip\n+        You can also use the cURL request listed under the **Generate Access Tokens** section for steps 3 and 4 based on the grant type.\n \n-        !!! tip\n-    You can also use the curl request listed under the **Generate Access Tokens** section for the steps 3 and 4 based on the grant type.\n \n+    [![]({{base_path}}/assets/attachments/103334763/103334764.png)]({{base_path}}/assets/attachments/103334763/103334764.png)\n \n-    ![]({{base_path}}/assets/attachments/103334763/103334764.png)\n-4.  Use the Base64 encoded value obtained above in the Authorization header when invoking the following command. This is used to get the token by calling the token API.\n+4.  Use the Base64 encoded value obtained above in the Authorization header when invoking the following command. \n \n-        !!! tip\n-    Make sure you include a random scope in the request which will be any value suitable for the name of the scope.\n+     This is used to get the token by calling the token API.\n+\n+    !!! tip\n+        Make sure you include a random scope in the request which will be any value suitable for the name of the scope.\n \n \n     ``` xml\n-        curl -k -d \"grant_type=password&username=admin&password=admin&scope=some_random_scope\" -H \"Authorization: Basic WmRFUFBvZmZwYVFnR25ScG5iZldtcUtSS3IwYTpSaG5ocEVJYUVCMEN3T1FReWpiZTJwaDBzc1Vh\" -H \"Content-Type: application/x-www-form-urlencoded\" https://10.100.0.3:8243/token\n+    curl -k -d \"grant_type=password&username=admin&password=admin&scope=some_random_scope\" -H \"Authorization: Basic WmRFUFBvZmZwYVFnR25ScG5iZldtcUtSS3IwYTpSaG5ocEVJYUVCMEN3T1FReWpiZTJwaDBzc1Vh\" -H \"Content-Type: application/x-www-form-urlencoded\" https://10.100.0.3:8243/token\n     ```\n \n-    Along with the token, you receive a response from the server similar to the one below.\n+     Along with the token, you receive a response from the server similar to the one below.\n \n     ``` java\n-            {\"scope\":\"default\",\"token_type\":\"bearer\",\"expires_in\":3600,\"refresh_token\":\"23fac44e9b7e1ae95a33b85f4f26decd\",\"access_token\":\"9474fa104ccb196303f41c8a5ee6f48\"}\n+    {\"scope\":\"default\",\"token_type\":\"bearer\",\"expires_in\":3600,\"refresh_token\":\"23fac44e9b7e1ae95a33b85f4f26decd\",\"access_token\":\"9474fa104ccb196303f41c8a5ee6f48\"}\n     ```\n \n-    You may not see the scope you requested for in this response as it has not been whitelisted yet.\n+    You may not see the scope you requested for in this response as it has not been allowlisted yet.\n \n 5.  Shut down the server.\n \n-6.  To whitelist the scope, add the following under the `<OAuthConfigurations>` element in the `<APIM_HOME>/repository/conf/api-manager.xml` file and restart the server.\n+6.  To allowlist the scope, add the following under the `<OAuthConfigurations>` element in the `<APIM_HOME>/repository/conf/api-manager.xml` file and restart the server.\n \n     ``` xml\n-            <ScopeWhitelist>\n-                <Scope>^device_.*</Scope>\n-                <Scope>some_random_scope</Scope>\n-            </ScopeWhitelist>\n+    <ScopeWhitelist>\n+        <Scope>^device_.*</Scope>\n+        <Scope>some_random_scope</Scope>\n+    </ScopeWhitelist>\n     ```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e34440ff4626cc9a13f34df34c4f0552571e611b"}, "originalPosition": 87}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4842dc82deb5a92298d2b59e55835c835a1560e4", "author": {"user": {"login": "isharac", "name": "Ishara"}}, "url": "https://github.com/wso2/docs-apim/commit/4842dc82deb5a92298d2b59e55835c835a1560e4", "committedDate": "2020-09-08T01:20:55Z", "message": "Update extending-scope-validation.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecc29af0dc4fef20fa8af27a91f1d86bcfd57c63", "author": {"user": {"login": "Mariangela", "name": "Mariangela Hills"}}, "url": "https://github.com/wso2/docs-apim/commit/ecc29af0dc4fef20fa8af27a91f1d86bcfd57c63", "committedDate": "2020-09-08T06:12:35Z", "message": "Fixed a mistake\n\nRemoved the XML element and added the TOML element."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzODIwNTYx", "url": "https://github.com/wso2/docs-apim/pull/1575#pullrequestreview-483820561", "createdAt": "2020-09-08T06:12:43Z", "commit": {"oid": "ecc29af0dc4fef20fa8af27a91f1d86bcfd57c63"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1811, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}