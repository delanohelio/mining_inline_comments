{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MTYyMDA0", "number": 924, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzozODo1NFrODrpi1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzoyMDoxMlrODr8w5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDk2MDIwOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzozODo1NFrOF8HSCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNTo0MjoxOFrOF8j2Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3ODE4NQ==", "bodyText": "Remove unnessary spaces", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398578185", "createdAt": "2020-03-26T13:38:54Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "diffHunk": "@@ -74,25 +86,39 @@ In this example we use the WSO2 Playground app, which is hosted as a web applica\n !!! note\n     **Before you begin**\n \n-    The following instructions use the sample playground webapp. For instructions on how to set up the sample webapp, see [Setting up the Sample Webapp](https://is.docs.wso2.com/en/5.9.0/develop/deploying-the-sample-app/) .\n-\n+    The following instructions use the sample playground webapp. For instructions on how to set up the sample webapp, see [Setting up the Sample Webapp](https://is.docs.wso2.com/en/latest/learn/deploying-the-sample-app/#deploy-the-sample-web-app).\n \n-1.  Login to WSO2 API Manager Store and create an application as shown below.\n-\n-    [![](../../../../assets/img/learn/create-application.png)](../../../../assets/img/learn/create-application.png)\n+1.  Open a terminal window and add the following entry to the `/etc/hosts` file of your machine to configure the hostname.\n+   ```\n+    127.0.0.1   wso2is.local\n+    127.0.0.1   localhost.com\n+   ```\n+    \n+    !!!info \"Why is this step needed?\"\n+        Some browsers do not allow you to create cookies for a naked hostname, such as `localhost`. Cookies are required when working with SSO . Therefore, to ensure that the SSO capabilities work as expected in this tutorial, you need to configure the `/etc/host` file as explained in this step.\n+        \n+         The `/etc/host` file is a read-only file. Therefore, you won't be able to edit it by opening the file via a text editor. Instead, edit the file using the terminal commands. For example, use the following command if you are working on a Mac/Linux environment.\n+        \n+         ``` java\n+         sudo nano /etc/hosts\n+         ```\n+         \n+2.  Login to WSO2 API Manager Store and create an application as shown below.\n+\n+    [![](../../../../assets/img/learn/create-application.png)]({{base_path}}/assets/img/learn/create-application.png)\n     \n-2.  Go to the **Production keys** tab for the application. Add <https://localhost:8443/playground2/oauth2client> as the **Callback URL.** Select **Implicit** from the list of grant types and click **Generate Keys** .\n+3.  Go to the **Production keys** tab for the application. Add <http://wso2is.local:8080/playground2/oauth2client> as the **Callback URL.** Select **Implicit** from the list of grant types and click **Generate Keys** .\n \n-    [![](../../../../assets/img/learn/implicit-grant.png)](../../../../assets/img/learn/implicit-grant.png)\n+    [![](../../../../assets/img/learn/implicit-grant.png)]({{base_path}}/assets/img/learn/implicit-grant.png)\n \n     !!! note\n         The Implicit grant and Code grant type checkboxes are disabled by default in the UI. To enable selecting the checkboxes, enter the Callback URL for the application.\n     \n-3.  Go to playground app <https://localhost:8443/playground2/index.jsp> and click **import photos.**\n+4.  Go to playground app <http://wso2is.local:8080/playground2/> and click **import photos.**\n \n-    [![](../../../../assets/img/learn/playground2-app.png)](../../../../assets/img/learn/playground2-app.png)\n+    [![](../../../../assets/img/learn/playground2-app.png)]({{base_path}}/assets/img/learn/playground2-app.png)\n \n-4.  Give the information in the table below and click **Authorize** .\n+5.  Give the information in the table below and click **Authorize** .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA0NjIzOA==", "bodyText": "fixed with 2f49d3c", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r399046238", "createdAt": "2020-03-27T05:42:18Z", "author": {"login": "Meruja"}, "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "diffHunk": "@@ -74,25 +86,39 @@ In this example we use the WSO2 Playground app, which is hosted as a web applica\n !!! note\n     **Before you begin**\n \n-    The following instructions use the sample playground webapp. For instructions on how to set up the sample webapp, see [Setting up the Sample Webapp](https://is.docs.wso2.com/en/5.9.0/develop/deploying-the-sample-app/) .\n-\n+    The following instructions use the sample playground webapp. For instructions on how to set up the sample webapp, see [Setting up the Sample Webapp](https://is.docs.wso2.com/en/latest/learn/deploying-the-sample-app/#deploy-the-sample-web-app).\n \n-1.  Login to WSO2 API Manager Store and create an application as shown below.\n-\n-    [![](../../../../assets/img/learn/create-application.png)](../../../../assets/img/learn/create-application.png)\n+1.  Open a terminal window and add the following entry to the `/etc/hosts` file of your machine to configure the hostname.\n+   ```\n+    127.0.0.1   wso2is.local\n+    127.0.0.1   localhost.com\n+   ```\n+    \n+    !!!info \"Why is this step needed?\"\n+        Some browsers do not allow you to create cookies for a naked hostname, such as `localhost`. Cookies are required when working with SSO . Therefore, to ensure that the SSO capabilities work as expected in this tutorial, you need to configure the `/etc/host` file as explained in this step.\n+        \n+         The `/etc/host` file is a read-only file. Therefore, you won't be able to edit it by opening the file via a text editor. Instead, edit the file using the terminal commands. For example, use the following command if you are working on a Mac/Linux environment.\n+        \n+         ``` java\n+         sudo nano /etc/hosts\n+         ```\n+         \n+2.  Login to WSO2 API Manager Store and create an application as shown below.\n+\n+    [![](../../../../assets/img/learn/create-application.png)]({{base_path}}/assets/img/learn/create-application.png)\n     \n-2.  Go to the **Production keys** tab for the application. Add <https://localhost:8443/playground2/oauth2client> as the **Callback URL.** Select **Implicit** from the list of grant types and click **Generate Keys** .\n+3.  Go to the **Production keys** tab for the application. Add <http://wso2is.local:8080/playground2/oauth2client> as the **Callback URL.** Select **Implicit** from the list of grant types and click **Generate Keys** .\n \n-    [![](../../../../assets/img/learn/implicit-grant.png)](../../../../assets/img/learn/implicit-grant.png)\n+    [![](../../../../assets/img/learn/implicit-grant.png)]({{base_path}}/assets/img/learn/implicit-grant.png)\n \n     !!! note\n         The Implicit grant and Code grant type checkboxes are disabled by default in the UI. To enable selecting the checkboxes, enter the Callback URL for the application.\n     \n-3.  Go to playground app <https://localhost:8443/playground2/index.jsp> and click **import photos.**\n+4.  Go to playground app <http://wso2is.local:8080/playground2/> and click **import photos.**\n \n-    [![](../../../../assets/img/learn/playground2-app.png)](../../../../assets/img/learn/playground2-app.png)\n+    [![](../../../../assets/img/learn/playground2-app.png)]({{base_path}}/assets/img/learn/playground2-app.png)\n \n-4.  Give the information in the table below and click **Authorize** .\n+5.  Give the information in the table below and click **Authorize** .", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3ODE4NQ=="}, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDk2MzEzOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzozOTozMlrOF8HT2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzozOTozMlrOF8HT2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3ODY1MQ==", "bodyText": "There is no folder named Learn/ now, there is only learn/ so this path is wrong", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398578651", "createdAt": "2020-03-26T13:39:32Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "diffHunk": "@@ -1,14 +1,14 @@\n # Implicit Grant\n \n-#### Flow\n-\n Implicit grant type is used to obtain access tokens if your application (client) is a mobile application or a browser based app such as a JavaScript client. Similar to authorization code grant, the implicit grant type is also based on redirection flow. The redirection URI includes the access token in the URI fragment. Therefore, the client application is capable of interacting with the resource owner user agent to obtain the access token from the redirection URI which is sent from the authorization server.\n \n+#### Flow\n+\n The implicit grant type does not require client authentication, and relies on the presence of the resource owner and the registration of the redirection URI. The resource owner is authenticated by the authorization server to obtain the access token. The access token is encoded into the redirection URI. This may be exposed to the resource owner and other applications residing inside the same device.\n \n-The diagram below depicts the flow of Implicit Grant.\n+The diagram below depicts the flow of Implicit Grant :\n \n-[![](../../../../assets/img/learn/implicit-grant.png)](../../../../assets/img/learn/implicit-grant-flow.png)\n+![]({{base_path}}/assets/img/Learn/oauth-implicit-grant-diagram.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDk2NjQ5OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0MDoyMFrOF8HWCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0MDoyMFrOF8HWCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3OTIxMA==", "bodyText": "All paths should start with {{base_path}} and not ../../../../", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398579210", "createdAt": "2020-03-26T13:40:20Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "diffHunk": "@@ -131,19 +157,19 @@ In this example we use the WSO2 Playground app, which is hosted as a web applica\n \n     [![](../../../../assets/img/learn/playground2-implicit-grant.png)](../../../../assets/img/learn/playground2-implicit-grant.png)\n \n-5.  The playground application redirects to the login page. Enter you username and password and click **Sign In.**\n+6.  The playground application redirects to the login page. Enter you username and password and click **Sign In.**\n \n     [![](../../../../assets/img/learn/login-page.png)](../../../../assets/img/learn/login-page.png)\n \n-6.  Select **Approve Once** or **Approve Always** to provide access to your profile information.\n+7.  Select **Approve Once** or **Approve Always** to provide access to your profile information.\n \n     [![](../../../../assets/img/learn/authorization-code-consent-page.png)](../../../../assets/img/learn/authorization-code-consent-page.png)  \n \n-7.  You will receive the access token as follows\n+8.  You will receive the access token as follows\n \n     [![](../../../../assets/img/learn/implicit-grant-access-token-page.png)](../../../../assets/img/learn/implicit-grant-access-token-page.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDk3Mzg4OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0MjowOFrOF8Ha4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0MjowOFrOF8Ha4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4MDQ1MA==", "bodyText": "The code can start inline with ``` . Therefore, this should be\n[apim.key_manager]\nconfiguration.ServerURL = \"<key-manager-server-url>\"", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398580450", "createdAt": "2020-03-26T13:42:08Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "diffHunk": "@@ -2,20 +2,30 @@\n \n You can obtain an access token by providing the resource owner's username and password as an authorization grant. It requires the\u00a0base64 encoded string of the `consumer-key:consumer-secret` combination. You need to meet the following prerequisites before using the Token API to generate a token.\n \n+The resource owner password credentials grant type is suitable in cases where the resource owner has a trust relationship with the client (e.g., a service\u2019s own mobile client) and in situations where the client can obtain the resource owner\u2019s credentials.\n+\n+#### The flow\n+\n+Instead of redirecting the user to the authorization server, the client itself will ask the user for the resource owner's username and password. The client will then send these credentials to the authorization server along with the client\u2019s own credentials.\n+\n+The diagram below illustrates the resource owner password credentials grant flow.\n+\n+![]({{base_path}}/assets/img/Learn/oauth-resource-owner-diagram.png)\n+\n #### Prerequisites\n \n--   A valid user account in the API Developer Portal. You can self sign up if it is [enabled by an admin](../../../../customizations/CustomizingTheAPIStore/enabling-or-disabling-self-signup) .\n+-   A valid user account in the API Developer Portal. You can self sign up if it is [enabled by an admin]({{base_path}}/learn/consume-api/customizations/customizing-the-developer-portal/enabling-or-disabling-self-signup/).\n -   A valid consumer key and consumer secret pair. Initially, these keys must be generated through the API Developer Portal\u00a0by clicking **GENERATE KEYS** on the **Production Keys** tab of the application.\n--   A running API Gateway instance (typically an API Manager instance should be running). For instructions on API Gateway, see [Components](../../../../../../getting-started/overview/#api-gateway).\n+-   A running API Gateway instance (typically an API Manager instance should be running). For instructions on API Gateway, see [Components]({{base_path}}/getting-started/overview/#api-gateway).\n \n--   If the Key Manager is on a different server than the API Gateway, change the server URL (host and ports) of the Key Manager accordingly by adding following configuration in `<AM_HOME>/repository/conf/deployment.toml` file.\n+-   If the Key Manager is on a different server than the API Gateway, change the server URL (host and ports) of the Key Manager accordingly by adding following configuration in `<APIM_HOME>/repository/conf/deployment.toml` file.\n \n ``` java\n     [apim.key_manager]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDk4MDU1OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0MzozNlrOF8HfDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0MzozNlrOF8HfDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4MTUxOA==", "bodyText": "Remove unnecessary space before full stop. Therefore, this should be Generate Keys. Check other places as well", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398581518", "createdAt": "2020-03-26T13:43:36Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "diffHunk": "@@ -74,25 +86,39 @@ In this example we use the WSO2 Playground app, which is hosted as a web applica\n !!! note\n     **Before you begin**\n \n-    The following instructions use the sample playground webapp. For instructions on how to set up the sample webapp, see [Setting up the Sample Webapp](https://is.docs.wso2.com/en/5.9.0/develop/deploying-the-sample-app/) .\n-\n+    The following instructions use the sample playground webapp. For instructions on how to set up the sample webapp, see [Setting up the Sample Webapp](https://is.docs.wso2.com/en/latest/learn/deploying-the-sample-app/#deploy-the-sample-web-app).\n \n-1.  Login to WSO2 API Manager Store and create an application as shown below.\n-\n-    [![](../../../../assets/img/learn/create-application.png)](../../../../assets/img/learn/create-application.png)\n+1.  Open a terminal window and add the following entry to the `/etc/hosts` file of your machine to configure the hostname.\n+   ```\n+    127.0.0.1   wso2is.local\n+    127.0.0.1   localhost.com\n+   ```\n+    \n+    !!!info \"Why is this step needed?\"\n+        Some browsers do not allow you to create cookies for a naked hostname, such as `localhost`. Cookies are required when working with SSO . Therefore, to ensure that the SSO capabilities work as expected in this tutorial, you need to configure the `/etc/host` file as explained in this step.\n+        \n+         The `/etc/host` file is a read-only file. Therefore, you won't be able to edit it by opening the file via a text editor. Instead, edit the file using the terminal commands. For example, use the following command if you are working on a Mac/Linux environment.\n+        \n+         ``` java\n+         sudo nano /etc/hosts\n+         ```\n+         \n+2.  Login to WSO2 API Manager Store and create an application as shown below.\n+\n+    [![](../../../../assets/img/learn/create-application.png)]({{base_path}}/assets/img/learn/create-application.png)\n     \n-2.  Go to the **Production keys** tab for the application. Add <https://localhost:8443/playground2/oauth2client> as the **Callback URL.** Select **Implicit** from the list of grant types and click **Generate Keys** .\n+3.  Go to the **Production keys** tab for the application. Add <http://wso2is.local:8080/playground2/oauth2client> as the **Callback URL.** Select **Implicit** from the list of grant types and click **Generate Keys** .", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDk4MjQxOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0Mzo1OVrOF8HgOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0Mzo1OVrOF8HgOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4MTgxNw==", "bodyText": "All paths should start with {{base_path}} and not ../../../../", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398581817", "createdAt": "2020-03-26T13:43:59Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "diffHunk": "@@ -131,19 +157,19 @@ In this example we use the WSO2 Playground app, which is hosted as a web applica\n \n     [![](../../../../assets/img/learn/playground2-implicit-grant.png)](../../../../assets/img/learn/playground2-implicit-grant.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDk4MzUxOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0NDoxMVrOF8Hg5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0NDoxMVrOF8Hg5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4MTk4OA==", "bodyText": "All paths should start with {{base_path}} and not ../../../../", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398581988", "createdAt": "2020-03-26T13:44:11Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "diffHunk": "@@ -131,19 +157,19 @@ In this example we use the WSO2 Playground app, which is hosted as a web applica\n \n     [![](../../../../assets/img/learn/playground2-implicit-grant.png)](../../../../assets/img/learn/playground2-implicit-grant.png)\n \n-5.  The playground application redirects to the login page. Enter you username and password and click **Sign In.**\n+6.  The playground application redirects to the login page. Enter you username and password and click **Sign In.**\n \n     [![](../../../../assets/img/learn/login-page.png)](../../../../assets/img/learn/login-page.png)\n \n-6.  Select **Approve Once** or **Approve Always** to provide access to your profile information.\n+7.  Select **Approve Once** or **Approve Always** to provide access to your profile information.\n \n     [![](../../../../assets/img/learn/authorization-code-consent-page.png)](../../../../assets/img/learn/authorization-code-consent-page.png)  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDk4MzgyOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0NDoxN1rOF8HhJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzo0NDoxN1rOF8HhJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU4MjA1Mw==", "bodyText": "All paths should start with {{base_path}} and not ../../../../", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398582053", "createdAt": "2020-03-26T13:44:17Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "diffHunk": "@@ -131,19 +157,19 @@ In this example we use the WSO2 Playground app, which is hosted as a web applica\n \n     [![](../../../../assets/img/learn/playground2-implicit-grant.png)](../../../../assets/img/learn/playground2-implicit-grant.png)\n \n-5.  The playground application redirects to the login page. Enter you username and password and click **Sign In.**\n+6.  The playground application redirects to the login page. Enter you username and password and click **Sign In.**\n \n     [![](../../../../assets/img/learn/login-page.png)](../../../../assets/img/learn/login-page.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTA4NTU4OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowNToyN1rOF8IhMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowNToyN1rOF8IhMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU5ODQ1MA==", "bodyText": "Remove unnecessary space before full stop. Check other places as well", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398598450", "createdAt": "2020-03-26T14:05:27Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "diffHunk": "@@ -39,13 +49,13 @@ You can obtain an access token by providing the resource owner's username and pa\n     -   Assuming that both the client and the API Gateway are running on same server, the token API url is [https://localhost:8243/token](https://localhost:8243/login)\n     -   payload - `\"grant_type=password&username=<username>&password=<password>&scope=<scope>\"` . Replace the `<username>` and `<password>` values as appropriate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTA4NjUwOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowNTozOFrOF8Ihww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowNTozOFrOF8Ihww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU5ODU5NQ==", "bodyText": "Remove unnecessary space before full stop.", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398598595", "createdAt": "2020-03-26T14:05:38Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "diffHunk": "@@ -72,7 +82,7 @@ You can obtain an access token by providing the resource owner's username and pa\n \n     Replace the `<base64encode(clientId:clientSecret)>` as appropriate.\n \n-    For example, use the following cURL command to access the Token API. It generates two tokens as an access token and a refresh token. You can use the refresh token at the time a token is renewed .\n+    For example, use the following cURL command to access the Token API. It generates two tokens as an access token and a refresh token. You can use the refresh token at the time a token is renewed . Replace the `<username>` and `<password>` as appropriate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTA5MTcyOnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowNjo1MlrOF8IlFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowNjo1MlrOF8IlFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU5OTQ0Ng==", "bodyText": "There is no folder named Learn/ now, there is only learn/ so this path is wrong", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398599446", "createdAt": "2020-03-26T14:06:52Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "diffHunk": "@@ -2,20 +2,30 @@\n \n You can obtain an access token by providing the resource owner's username and password as an authorization grant. It requires the\u00a0base64 encoded string of the `consumer-key:consumer-secret` combination. You need to meet the following prerequisites before using the Token API to generate a token.\n \n+The resource owner password credentials grant type is suitable in cases where the resource owner has a trust relationship with the client (e.g., a service\u2019s own mobile client) and in situations where the client can obtain the resource owner\u2019s credentials.\n+\n+#### The flow\n+\n+Instead of redirecting the user to the authorization server, the client itself will ask the user for the resource owner's username and password. The client will then send these credentials to the authorization server along with the client\u2019s own credentials.\n+\n+The diagram below illustrates the resource owner password credentials grant flow.\n+\n+![]({{base_path}}/assets/img/Learn/oauth-resource-owner-diagram.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTA5MzQ4OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/refresh-token-grant.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowNzoxNFrOF8ImJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowNzoxNFrOF8ImJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU5OTcxNg==", "bodyText": "There is no folder named Learn/ now, there is only learn/ so this path is wrong", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398599716", "createdAt": "2020-03-26T14:07:14Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/refresh-token-grant.md", "diffHunk": "@@ -1,12 +1,19 @@\n # Refresh Token Grant\n \n+The refresh token grant can be used when the current access token is expired or when a new access token is needed. With this grant type, the refresh token acts as a credential and is issued to the client by the authorization server. Issuing a refresh token is optional and if the authorization server issues a refresh token, it is included when issuing an access token. WSO2 Identity Server issues refresh tokens for all other grant types other than the **implicit and client credentials grant types**,\u00a0as recommended by the OAuth 2.0 specification.\n+\n+!!! note\n+    \n+    This refresh token needs to be kept private, similar to the access token. When using this token, keep in mind that it issues the access token without a user interaction.\n+\n #### Flow\n \n-After an access token is generated, sometimes you might have to renew the old token due to expiration or security concerns. You can renew an access token using a refresh token, by issuing a REST call to the Token API with the following parameters.\u00a0With this grant type, the refresh token acts as credentials that are issued to the client by the authorization server. Issuing a refresh token is optional. If the authorization server issues a refresh token, it is included when returning an access token.\u00a0Refresh tokens are issued for all other grant types other than the **implicit grant** as recommended by the OAuth 2.0 specification.\n+After an access token is generated, sometimes you might have to renew the old token due to expiration or security concerns. You can renew an access token using a refresh token, by issuing a REST call to the Token API with the following parameters.\n+A refresh token has to be obtained before using it with a grant type such as the authorization code or password grant type. Using the obtained refresh token, you can obtain a new access token along with a renewed refresh token without having to go through any other additional steps.\n \n-!!! tip\n-    Be sure to keep the refresh token private, similar to the access token as this token issues access tokens without user interactions.\n+The diagram below illustrates the refresh token grant flow.\n \n+![]({{base_path}}/assets/img/Learn/oauth-refresh-token-diagram.png)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTA5NTg3OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/refresh-token-grant.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDowNzo0MFrOF8InjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNTo0MjowMlrOF8j2Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwMDA3Ng==", "bodyText": "path should not start with ../", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r398600076", "createdAt": "2020-03-26T14:07:40Z", "author": {"login": "Mariangela"}, "path": "en/docs/learn/api-security/oauth2/grant-types/refresh-token-grant.md", "diffHunk": "@@ -141,6 +152,6 @@ curl -k -v -d \"token=4ed29669-a457-3f83-af1e-180cad271cca&token_type_hint=refres\n ```\n \n !!! note\n-    Note that for users to be counted in the [Registered Users for Application statistics](../../../../../analytics/analyzing-apim-statistics-with-batch-analytics/viewing-api-statistics/#ViewingAPIStatistics-TopUsersperApplication) which takes the number of users shared each of the Application, they should have to generate access tokens using [Password Grant](../password-grant/) type.\n+    Note that for users to be counted in the [Registered Users for Application statistics]({{base_path}}/learn/analytics/analyzing-apim-statistics-with-batch-analytics/viewing-api-statistics/#ViewingAPIStatistics-TopUsersperApplication) which takes the number of users shared each of the Application, they should have to generate access tokens using [Password Grant](../password-grant/) type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA0NjE4Mg==", "bodyText": "fixed with 2f49d3c", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r399046182", "createdAt": "2020-03-27T05:42:02Z", "author": {"login": "Meruja"}, "path": "en/docs/learn/api-security/oauth2/grant-types/refresh-token-grant.md", "diffHunk": "@@ -141,6 +152,6 @@ curl -k -v -d \"token=4ed29669-a457-3f83-af1e-180cad271cca&token_type_hint=refres\n ```\n \n !!! note\n-    Note that for users to be counted in the [Registered Users for Application statistics](../../../../../analytics/analyzing-apim-statistics-with-batch-analytics/viewing-api-statistics/#ViewingAPIStatistics-TopUsersperApplication) which takes the number of users shared each of the Application, they should have to generate access tokens using [Password Grant](../password-grant/) type.\n+    Note that for users to be counted in the [Registered Users for Application statistics]({{base_path}}/learn/analytics/analyzing-apim-statistics-with-batch-analytics/viewing-api-statistics/#ViewingAPIStatistics-TopUsersperApplication) which takes the number of users shared each of the Application, they should have to generate access tokens using [Password Grant](../password-grant/) type.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODYwMDA3Ng=="}, "originalCommit": {"oid": "6396a044d505a684d91b884cba4dd0629fc26db4"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDA4Nzg2OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzoxMToxNVrOF8lZug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDowNzozNFrOF8qlxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3MTY3NA==", "bodyText": "We can use two tabs to display the format and the example.", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r399071674", "createdAt": "2020-03-27T07:11:15Z", "author": {"login": "tgtshanika"}, "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "diffHunk": "@@ -61,11 +61,23 @@ The following parameters are required to implement the Implicit\u00a0grant type in W\n </tbody>\n </table>\n \n-An example is given below :\n-\n-``` java\n-    https://localhost:8243/authorize?scope=openid&response_type=id_token&redirect_uri=http://localhost:8080/playground2/oauth2client&nonce=13e2312637dg136e1&client_id=mzdQQ0RZOIqAf549ucIImB4h0SIa\n-```\n+!!! Tip \n+        The playground application will send a authorization request the **authorize** endpoint using the following format.\n+        \n+        ```java\n+        https://<host>:<port>/oauth2/authorize?response_type=token\n+        &client_id=<client-ID>\n+        &redirect_uri=<callback-url>\n+        &scope=<scope>\n+        ```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72855c5f8d78d6bb9d38a5da53ff72e65d3f6ea6"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE1NjY3OA==", "bodyText": "fixed with b151dd4", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r399156678", "createdAt": "2020-03-27T10:07:34Z", "author": {"login": "Meruja"}, "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "diffHunk": "@@ -61,11 +61,23 @@ The following parameters are required to implement the Implicit\u00a0grant type in W\n </tbody>\n </table>\n \n-An example is given below :\n-\n-``` java\n-    https://localhost:8243/authorize?scope=openid&response_type=id_token&redirect_uri=http://localhost:8080/playground2/oauth2client&nonce=13e2312637dg136e1&client_id=mzdQQ0RZOIqAf549ucIImB4h0SIa\n-```\n+!!! Tip \n+        The playground application will send a authorization request the **authorize** endpoint using the following format.\n+        \n+        ```java\n+        https://<host>:<port>/oauth2/authorize?response_type=token\n+        &client_id=<client-ID>\n+        &redirect_uri=<callback-url>\n+        &scope=<scope>\n+        ```", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3MTY3NA=="}, "originalCommit": {"oid": "72855c5f8d78d6bb9d38a5da53ff72e65d3f6ea6"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDA5NTA5OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzoxNDoxM1rOF8ld2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwODozMjoxMFrOF8nZWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3MjcyOQ==", "bodyText": "Please get this point verified", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r399072729", "createdAt": "2020-03-27T07:14:13Z", "author": {"login": "tgtshanika"}, "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "diffHunk": "@@ -129,21 +155,21 @@ In this example we use the WSO2 Playground app, which is hosted as a web applica\n     </tbody>\n     </table>\n \n-    [![](../../../../assets/img/learn/playground2-implicit-grant.png)](../../../../assets/img/learn/playground2-implicit-grant.png)\n+    [![]({{base_path}}/assets/img/learn/playground2-implicit-grant.png)]({{base_path}}/assets/img/learn/playground2-implicit-grant.png)\n \n-5.  The playground application redirects to the login page. Enter you username and password and click **Sign In.**\n+6.  The playground application redirects to the login page. Enter you username and password and click **Sign In.**\n \n-    [![](../../../../assets/img/learn/login-page.png)](../../../../assets/img/learn/login-page.png)\n+    [![]({{base_path}}/assets/img/learn/login-page.png)]({{base_path}}/assets/img/learn/login-page.png)\n \n-6.  Select **Approve Once** or **Approve Always** to provide access to your profile information.\n+7.  Select **Approve Once** or **Approve Always** to provide access to your profile information.\n \n-    [![](../../../../assets/img/learn/authorization-code-consent-page.png)](../../../../assets/img/learn/authorization-code-consent-page.png)  \n+    [![]({{base_path}}/assets/img/learn/authorization-code-consent-page.png)]({{base_path}}/assets/img/learn/authorization-code-consent-page.png)  \n \n-7.  You will receive the access token as follows\n+8.  You will receive the access token as follows\n \n-    [![](../../../../assets/img/learn/implicit-grant-access-token-page.png)](../../../../assets/img/learn/implicit-grant-access-token-page.png)\n+    [![]({{base_path}}/assets/img/learn/implicit-grant-access-token-page.png)]({{base_path}}/assets/img/learn/implicit-grant-access-token-page.png)\n \n !!! note\n-    For users to be counted in the [Registered Users for Application statistics](../../../../../analytics/analyzing-apim-statistics-with-batch-analytics/viewing-api-statistics/#ViewingAPIStatistics-TopUsersperApplication) , which takes the number of users shared each of the Application, they have to generate access tokens using [Password Grant](../password-grant/) type.\n+    For users to be counted in the [Registered Users for Application statistics]({{base_path}}/learn/analytics/analyzing-apim-statistics-with-batch-analytics/viewing-api-statistics/#ViewingAPIStatistics-TopUsersperApplication) , which takes the number of users shared each of the Application, they have to generate access tokens using [Password Grant](../password-grant/) type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72855c5f8d78d6bb9d38a5da53ff72e65d3f6ea6"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwNDM0NA==", "bodyText": "removed it", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r399104344", "createdAt": "2020-03-27T08:32:10Z", "author": {"login": "Meruja"}, "path": "en/docs/learn/api-security/oauth2/grant-types/implicit-grant.md", "diffHunk": "@@ -129,21 +155,21 @@ In this example we use the WSO2 Playground app, which is hosted as a web applica\n     </tbody>\n     </table>\n \n-    [![](../../../../assets/img/learn/playground2-implicit-grant.png)](../../../../assets/img/learn/playground2-implicit-grant.png)\n+    [![]({{base_path}}/assets/img/learn/playground2-implicit-grant.png)]({{base_path}}/assets/img/learn/playground2-implicit-grant.png)\n \n-5.  The playground application redirects to the login page. Enter you username and password and click **Sign In.**\n+6.  The playground application redirects to the login page. Enter you username and password and click **Sign In.**\n \n-    [![](../../../../assets/img/learn/login-page.png)](../../../../assets/img/learn/login-page.png)\n+    [![]({{base_path}}/assets/img/learn/login-page.png)]({{base_path}}/assets/img/learn/login-page.png)\n \n-6.  Select **Approve Once** or **Approve Always** to provide access to your profile information.\n+7.  Select **Approve Once** or **Approve Always** to provide access to your profile information.\n \n-    [![](../../../../assets/img/learn/authorization-code-consent-page.png)](../../../../assets/img/learn/authorization-code-consent-page.png)  \n+    [![]({{base_path}}/assets/img/learn/authorization-code-consent-page.png)]({{base_path}}/assets/img/learn/authorization-code-consent-page.png)  \n \n-7.  You will receive the access token as follows\n+8.  You will receive the access token as follows\n \n-    [![](../../../../assets/img/learn/implicit-grant-access-token-page.png)](../../../../assets/img/learn/implicit-grant-access-token-page.png)\n+    [![]({{base_path}}/assets/img/learn/implicit-grant-access-token-page.png)]({{base_path}}/assets/img/learn/implicit-grant-access-token-page.png)\n \n !!! note\n-    For users to be counted in the [Registered Users for Application statistics](../../../../../analytics/analyzing-apim-statistics-with-batch-analytics/viewing-api-statistics/#ViewingAPIStatistics-TopUsersperApplication) , which takes the number of users shared each of the Application, they have to generate access tokens using [Password Grant](../password-grant/) type.\n+    For users to be counted in the [Registered Users for Application statistics]({{base_path}}/learn/analytics/analyzing-apim-statistics-with-batch-analytics/viewing-api-statistics/#ViewingAPIStatistics-TopUsersperApplication) , which takes the number of users shared each of the Application, they have to generate access tokens using [Password Grant](../password-grant/) type.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3MjcyOQ=="}, "originalCommit": {"oid": "72855c5f8d78d6bb9d38a5da53ff72e65d3f6ea6"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDEwMTQ4OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzoxNzoxMVrOF8lhtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzozNDowNlrOF8l5cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3MzcxNw==", "bodyText": "Is port offsetting step required here?", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r399073717", "createdAt": "2020-03-27T07:17:11Z", "author": {"login": "tgtshanika"}, "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "diffHunk": "@@ -2,20 +2,30 @@\n \n You can obtain an access token by providing the resource owner's username and password as an authorization grant. It requires the\u00a0base64 encoded string of the `consumer-key:consumer-secret` combination. You need to meet the following prerequisites before using the Token API to generate a token.\n \n+The resource owner password credentials grant type is suitable in cases where the resource owner has a trust relationship with the client (e.g., a service\u2019s own mobile client) and in situations where the client can obtain the resource owner\u2019s credentials.\n+\n+#### The flow\n+\n+Instead of redirecting the user to the authorization server, the client itself will ask the user for the resource owner's username and password. The client will then send these credentials to the authorization server along with the client\u2019s own credentials.\n+\n+The diagram below illustrates the resource owner password credentials grant flow.\n+\n+![]({{base_path}}/assets/img/learn/oauth-resource-owner-diagram.png)\n+\n #### Prerequisites\n \n--   A valid user account in the API Developer Portal. You can self sign up if it is [enabled by an admin](../../../../customizations/CustomizingTheAPIStore/enabling-or-disabling-self-signup) .\n+-   A valid user account in the API Developer Portal. You can self sign up if it is [enabled by an admin]({{base_path}}/learn/consume-api/customizations/customizing-the-developer-portal/enabling-or-disabling-self-signup/).\n -   A valid consumer key and consumer secret pair. Initially, these keys must be generated through the API Developer Portal\u00a0by clicking **GENERATE KEYS** on the **Production Keys** tab of the application.\n--   A running API Gateway instance (typically an API Manager instance should be running). For instructions on API Gateway, see [Components](../../../../../../getting-started/overview/#api-gateway).\n+-   A running API Gateway instance (typically an API Manager instance should be running). For instructions on API Gateway, see [Components]({{base_path}}/getting-started/overview/#api-gateway).\n \n--   If the Key Manager is on a different server than the API Gateway, change the server URL (host and ports) of the Key Manager accordingly by adding following configuration in `<AM_HOME>/repository/conf/deployment.toml` file.\n+-   If the Key Manager is on a different server than the API Gateway, change the server URL (host and ports) of the Key Manager accordingly by adding following configuration in `<APIM_HOME>/repository/conf/deployment.toml` file.\n \n ``` java\n-    [apim.key_manager]\n-    configuration.ServerURL = \"<key-manager-server-url>\"\n+[apim.key_manager]\n+configuration.ServerURL = \"<key-manager-server-url>\"\n \n ```\n--   If you have multiple Carbon servers running on the same computer, [change the port with an offset](../../../../../../reference/guides/changing-the-default-ports-with-offset/) to avoid port conflicts.\n+If you have multiple Carbon servers running on the same computer, [change the port with an offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/#changing-the-default-ports-with-offset) to avoid port conflicts.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72855c5f8d78d6bb9d38a5da53ff72e65d3f6ea6"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3OTc5NA==", "bodyText": "Not necessary, but if there are multiple carbon servers then we need to follow this step.", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r399079794", "createdAt": "2020-03-27T07:34:06Z", "author": {"login": "Meruja"}, "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "diffHunk": "@@ -2,20 +2,30 @@\n \n You can obtain an access token by providing the resource owner's username and password as an authorization grant. It requires the\u00a0base64 encoded string of the `consumer-key:consumer-secret` combination. You need to meet the following prerequisites before using the Token API to generate a token.\n \n+The resource owner password credentials grant type is suitable in cases where the resource owner has a trust relationship with the client (e.g., a service\u2019s own mobile client) and in situations where the client can obtain the resource owner\u2019s credentials.\n+\n+#### The flow\n+\n+Instead of redirecting the user to the authorization server, the client itself will ask the user for the resource owner's username and password. The client will then send these credentials to the authorization server along with the client\u2019s own credentials.\n+\n+The diagram below illustrates the resource owner password credentials grant flow.\n+\n+![]({{base_path}}/assets/img/learn/oauth-resource-owner-diagram.png)\n+\n #### Prerequisites\n \n--   A valid user account in the API Developer Portal. You can self sign up if it is [enabled by an admin](../../../../customizations/CustomizingTheAPIStore/enabling-or-disabling-self-signup) .\n+-   A valid user account in the API Developer Portal. You can self sign up if it is [enabled by an admin]({{base_path}}/learn/consume-api/customizations/customizing-the-developer-portal/enabling-or-disabling-self-signup/).\n -   A valid consumer key and consumer secret pair. Initially, these keys must be generated through the API Developer Portal\u00a0by clicking **GENERATE KEYS** on the **Production Keys** tab of the application.\n--   A running API Gateway instance (typically an API Manager instance should be running). For instructions on API Gateway, see [Components](../../../../../../getting-started/overview/#api-gateway).\n+-   A running API Gateway instance (typically an API Manager instance should be running). For instructions on API Gateway, see [Components]({{base_path}}/getting-started/overview/#api-gateway).\n \n--   If the Key Manager is on a different server than the API Gateway, change the server URL (host and ports) of the Key Manager accordingly by adding following configuration in `<AM_HOME>/repository/conf/deployment.toml` file.\n+-   If the Key Manager is on a different server than the API Gateway, change the server URL (host and ports) of the Key Manager accordingly by adding following configuration in `<APIM_HOME>/repository/conf/deployment.toml` file.\n \n ``` java\n-    [apim.key_manager]\n-    configuration.ServerURL = \"<key-manager-server-url>\"\n+[apim.key_manager]\n+configuration.ServerURL = \"<key-manager-server-url>\"\n \n ```\n--   If you have multiple Carbon servers running on the same computer, [change the port with an offset](../../../../../../reference/guides/changing-the-default-ports-with-offset/) to avoid port conflicts.\n+If you have multiple Carbon servers running on the same computer, [change the port with an offset]({{base_path}}/install-and-setup/deploying-wso2-api-manager/changing-the-default-ports-with-offset/#changing-the-default-ports-with-offset) to avoid port conflicts.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3MzcxNw=="}, "originalCommit": {"oid": "72855c5f8d78d6bb9d38a5da53ff72e65d3f6ea6"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDEwNDc5OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzoxODozMFrOF8ljog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzoxODozMFrOF8ljog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NDIxMA==", "bodyText": "Add link to scope management page", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r399074210", "createdAt": "2020-03-27T07:18:30Z", "author": {"login": "tgtshanika"}, "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "diffHunk": "@@ -37,15 +47,15 @@ You can obtain an access token by providing the resource owner's username and pa\n 2.  Access the Token API by using a REST client such as cURL, with the following parameters.\n \n     -   Assuming that both the client and the API Gateway are running on same server, the token API url is [https://localhost:8243/token](https://localhost:8243/login)\n-    -   payload - `\"grant_type=password&username=<username>&password=<password>&scope=<scope>\"` . Replace the `<username>` and `<password>` values as appropriate.\n-\n-    !!! tip\n-        **`<scope>` is optional.**\n+    -   payload - `\"grant_type=password&username=<username>&password=<password>&scope=<scope>\"`. Replace the `<username>` and `<password>` values as appropriate.\n \n-        If you define a **scope** for an API's resource, the API can only be accessed through a token that is issued for the scope of the said resource. For example, if you define a scope named 'update' and issue one token for the scopes 'read' and 'update', the token is allowed to access the resource. However, if you issue the token for the scope named 'read', the request to the API will be blocked.\n+        !!! tip\n+            **`<scope>` is optional.**\n+    \n+            If you define a **scope** for an API's resource, the API can only be accessed through a token that is issued for the scope of the said resource. For example, if you define a scope named 'update' and issue one token for the scopes 'read' and 'update', the token is allowed to access the resource. However, if you issue the token for the scope named 'read', the request to the API will be blocked.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72855c5f8d78d6bb9d38a5da53ff72e65d3f6ea6"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NDEwOTE5OnYy", "diffSide": "RIGHT", "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzoyMDoxMlrOF8lmMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwODozODozMlrOF8nlwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NDg2NA==", "bodyText": "Use 'Format' 'Example' tab for curl commands", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r399074864", "createdAt": "2020-03-27T07:20:12Z", "author": {"login": "tgtshanika"}, "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "diffHunk": "@@ -72,7 +82,7 @@ You can obtain an access token by providing the resource owner's username and pa\n \n     Replace the `<base64encode(clientId:clientSecret)>` as appropriate.\n \n-    For example, use the following cURL command to access the Token API. It generates two tokens as an access token and a refresh token. You can use the refresh token at the time a token is renewed .\n+    For example, use the following cURL command to access the Token API. It generates two tokens as an access token and a refresh token. You can use the refresh token at the time a token is renewed. Replace the `<username>` and `<password>` as appropriate.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72855c5f8d78d6bb9d38a5da53ff72e65d3f6ea6"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTEwNzUyMA==", "bodyText": "fixed with b151dd4", "url": "https://github.com/wso2/docs-apim/pull/924#discussion_r399107520", "createdAt": "2020-03-27T08:38:32Z", "author": {"login": "Meruja"}, "path": "en/docs/learn/api-security/oauth2/grant-types/password-grant.md", "diffHunk": "@@ -72,7 +82,7 @@ You can obtain an access token by providing the resource owner's username and pa\n \n     Replace the `<base64encode(clientId:clientSecret)>` as appropriate.\n \n-    For example, use the following cURL command to access the Token API. It generates two tokens as an access token and a refresh token. You can use the refresh token at the time a token is renewed .\n+    For example, use the following cURL command to access the Token API. It generates two tokens as an access token and a refresh token. You can use the refresh token at the time a token is renewed. Replace the `<username>` and `<password>` as appropriate.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA3NDg2NA=="}, "originalCommit": {"oid": "72855c5f8d78d6bb9d38a5da53ff72e65d3f6ea6"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1951, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}