{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzOTc4OTI3", "number": 6096, "title": "Websocket listeners", "bodyText": "This is a preview for a large update I have in the works (it will probably be too large to review).\nOverview\nThis update changes the websocket model of how we register listeners to handle messages on the client and server side. In short, instead of having groups of client side listeners with an enum for the message type to route messages, we'll instead have a proper message type object and register listeners one-by-one. Similarly for the server side, instead of having groups of event processors that procedurally switch over a message type and invoke a corresponding handler, we'll one-by-one register handlers (aka actions) by message type.\nPreview CR Objective\nI'm opening this for potential early feedback:\n\nI don't expect the final product to be very reviewable\nbetter to get thoughts/opinions/improvements sooner rather than later.\n\nGoals for this update\nThe goals behind this update are:\n\nsimplify websocket messaging model\nget it so we can handle 'session closed' events on server side. This way if a session is closed we can de-list a game or remove a player at that time. This would fix the 'ghost player' prerelease problem reported in: #6037.\n\nAlso for example, after we moved from an http game polling model to websocket, we had a problem with 'ghost games' as well. This would fix that problem. For now we fix that problem by having the client explicitly notify the server of a game closed event, and failing that we kill games if they fail a keep-alive check. The issue is that when a session is closed for a listed game, we don't know which game that sessions corresponds to. So we can't close a game based on knowledge that a session has closed (the session is closing correctly, we just can't hook that into the proper game closed event, we are missing the link between session and game listing).\nThings to look at:\nThe client side is much more mature/baked, the server side I'm just starting to work on now.\nClient-Side\n\nNew listener attachment pattern on the client side:\n\nhttps://github.com/triplea-game/triplea/pull/6096/files#diff-c69d4ca38981b4c559ee421d90dc8b0aR31\nhttps://github.com/triplea-game/triplea/pull/6096/files#diff-15a83df1c9912b19760d54a63d90bb57R426\nhttps://github.com/triplea-game/triplea/pull/6096/files#diff-f81fd321fafdadd4ebc6621243b9859dR49\n\n\nNew mechanism for sending websocket messages (notably they are sent more directly now, simply call the 'send' method on websocket with a message, no longer need to go through a message factory):\n\nhttps://github.com/triplea-game/triplea/pull/6096/files#diff-c3b1be9e35587056771b0707f28bbfa2R78\nnew mechanism for packaging, no longer have a factory but instead interface method: https://github.com/triplea-game/triplea/pull/6096/files#diff-0f3d511e45139de54a20587291e6a770R19\n\n\n\"MessageListeners\" deleted:\n\nhttps://github.com/triplea-game/triplea/pull/6096/files#diff-bf1b19b5f3e872b5b36b4eaf24034611L3\n\n\nEnvelopeType enums deleted:\n\nhttps://github.com/triplea-game/triplea/pull/6096/files#diff-254a7f8429782fa3a10bd6afcae73b78L5\n\n\nGenericWebsocket improved: https://github.com/triplea-game/triplea/pull/6096/files#diff-c2dcff4002a176fd301e661660272d6dR32\n\nno longer need to create it with listeners, can attach listeners after creation\nhandles message routing to listeners\nServer error is automatically handled: https://github.com/triplea-game/triplea/pull/6096/files#diff-c2dcff4002a176fd301e661660272d6dR72\n\n\nbetter interface and type safety enhancements:\n\nWebsocket interface: https://github.com/triplea-game/triplea/pull/6096/files#diff-ccf31ef7166ba143e5913b810ae1b665R7\nMessageType class, enforces consistent type for listeners: https://github.com/triplea-game/triplea/pull/6096/files#diff-529cb331b4413f82f61fdf3752c17f2dR3\nMessages have a type constant, eg:  https://github.com/triplea-game/triplea/pull/6096/files#diff-9829cc2bbf1d53f2c2e45b54e49585c7R14\n\n\n\nServer Side\n\n\nWebsocketMessageContext: https://github.com/triplea-game/triplea/pull/6096/files#diff-2443261337887ecd62307afbdeb6b4a5R10, this is passed to server-side listeners\n\n\nWebsocketMessagingBus, this will be wired to each of the websocket endpoints, we'll then use it to de-serialize JSON and route messages to listeners:\n\nwiring to websocket: https://github.com/triplea-game/triplea/pull/6096/files#diff-0819d96a750721e8b9a6a6cb75022fd0R158\n\n\n\nChatMessageReceived listener:\n\nCode: https://github.com/triplea-game/triplea/pull/6096/files#diff-a195d244539a7a4a64f4c5234a89f6b3R11\nRegistration: https://github.com/triplea-game/triplea/pull/6096/files#diff-47b676fc79f49ce6abfc7aa895858acbR100\nReplaces: https://github.com/triplea-game/triplea/pull/6096/files#diff-1f76c806ffb6ee817dc6660fdf5c6c1cR80", "createdAt": "2020-03-26T06:18:09Z", "url": "https://github.com/triplea-game/triplea/pull/6096", "merged": true, "mergeCommit": {"oid": "d4aa56418695ba31acdf4443c88927cd3bd06949"}, "closed": true, "closedAt": "2020-04-05T15:46:08Z", "author": {"login": "DanVanAtta"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRV_M3AFqTM4MTcyNjgxNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVpittgFqTM5MDA2MTcxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNzI2ODE1", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-381726815", "createdAt": "2020-03-26T06:19:47Z", "commit": {"oid": "3a8e254bbc0ce354189a0e52e07be6b5668acb5a"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjoxOTo0N1rOF74tdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjoxOTo0OVrOF74tiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTQ0NQ==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r398339445", "createdAt": "2020-03-26T06:19:47Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/modules/error/reporting/ErrorReportController.java", "diffHunk": "@@ -11,17 +12,38 @@\n import javax.ws.rs.Path;\n import javax.ws.rs.core.Context;\n import lombok.Builder;\n+import org.jdbi.v3.core.Jdbi;\n+import org.triplea.http.AppConfig;\n import org.triplea.http.HttpController;\n import org.triplea.http.client.error.report.ErrorReportClient;\n import org.triplea.http.client.error.report.ErrorReportRequest;\n import org.triplea.http.client.error.report.ErrorReportResponse;\n+import org.triplea.http.client.github.issues.GithubIssueClient;\n \n /** Http controller that binds the error upload endpoint with the error report upload handler. */\n @Builder\n public class ErrorReportController extends HttpController {\n   @Nonnull\n   private final BiFunction<String, ErrorReportRequest, ErrorReportResponse> errorReportIngestion;\n \n+  public static ErrorReportController build(final AppConfig configuration, final Jdbi jdbi) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a8e254bbc0ce354189a0e52e07be6b5668acb5a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTQ0Ng==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r398339446", "createdAt": "2020-03-26T06:19:47Z", "author": {"login": "codeclimate"}, "path": "http-clients/src/main/java/org/triplea/http/client/web/socket/messages/envelopes/game/listing/LobbyGameRemovedMessage.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.triplea.http.client.web.socket.messages.envelopes.game.listing;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a8e254bbc0ce354189a0e52e07be6b5668acb5a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTQ0OA==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r398339448", "createdAt": "2020-03-26T06:19:48Z", "author": {"login": "codeclimate"}, "path": "http-clients/src/main/java/org/triplea/http/client/web/socket/messages/envelopes/chat/PlayerStatusUpdateReceivedMessage.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.triplea.http.client.web.socket.messages.envelopes.chat;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a8e254bbc0ce354189a0e52e07be6b5668acb5a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTQ1Mw==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r398339453", "createdAt": "2020-03-26T06:19:48Z", "author": {"login": "codeclimate"}, "path": "http-clients/src/main/java/org/triplea/http/client/web/socket/messages/envelopes/game/listing/LobbyGameUpdatedMessage.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.triplea.http.client.web.socket.messages.envelopes.game.listing;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a8e254bbc0ce354189a0e52e07be6b5668acb5a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTQ1Ng==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r398339456", "createdAt": "2020-03-26T06:19:48Z", "author": {"login": "codeclimate"}, "path": "http-clients/src/main/java/org/triplea/http/client/web/socket/messages/envelopes/chat/ChatReceivedMessage.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package org.triplea.http.client.web.socket.messages.envelopes.chat;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a8e254bbc0ce354189a0e52e07be6b5668acb5a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTQ1OQ==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r398339459", "createdAt": "2020-03-26T06:19:49Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/modules/chat/Chatters.java", "diffHunk": "@@ -21,6 +21,10 @@\n @Slf4j\n @AllArgsConstructor\n public class Chatters {\n+  public Optional<ChatParticipant> lookupPlayerBySession(final Session senderSession) {\n+    throw new UnsupportedOperationException(\"TODO\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a8e254bbc0ce354189a0e52e07be6b5668acb5a"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTQ2MA==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r398339460", "createdAt": "2020-03-26T06:19:49Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/web/socket/WebSocketMessageContext.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package org.triplea.web.socket;\n+\n+import javax.annotation.Nonnull;\n+import javax.websocket.Session;\n+import lombok.Builder;\n+import lombok.Getter;\n+import org.triplea.http.client.web.socket.messages.WebSocketMessage;\n+\n+@Builder\n+public class WebSocketMessageContext<T extends WebSocketMessage> {\n+  @Nonnull private final WebSocketMessagingBus messagingBus;\n+  @Getter @Nonnull private final Session senderSession;\n+  @Getter @Nonnull private final T message;\n+\n+  public <X extends WebSocketMessage> void sendResponse(X responseMessage) {\n+    throw new UnsupportedOperationException(\"TODO\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a8e254bbc0ce354189a0e52e07be6b5668acb5a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTQ2Mg==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r398339462", "createdAt": "2020-03-26T06:19:49Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/web/socket/WebSocketMessageContext.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package org.triplea.web.socket;\n+\n+import javax.annotation.Nonnull;\n+import javax.websocket.Session;\n+import lombok.Builder;\n+import lombok.Getter;\n+import org.triplea.http.client.web.socket.messages.WebSocketMessage;\n+\n+@Builder\n+public class WebSocketMessageContext<T extends WebSocketMessage> {\n+  @Nonnull private final WebSocketMessagingBus messagingBus;\n+  @Getter @Nonnull private final Session senderSession;\n+  @Getter @Nonnull private final T message;\n+\n+  public <X extends WebSocketMessage> void sendResponse(X responseMessage) {\n+    throw new UnsupportedOperationException(\"TODO\");\n+  }\n+\n+  public <X extends WebSocketMessage> void broadcastMessage(X broadcastMessage) {\n+    throw new UnsupportedOperationException(\"TODO\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a8e254bbc0ce354189a0e52e07be6b5668acb5a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTQ2NA==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r398339464", "createdAt": "2020-03-26T06:19:49Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/lobby/connection/PlayerToLobbyConnection.java", "diffHunk": "@@ -1,90 +1,93 @@\n package games.strategy.engine.lobby.connection;\n \n-import com.google.common.base.Preconditions;\n-import java.net.InetAddress;\n import java.net.URI;\n-import java.util.Collection;\n+import java.util.List;\n+import java.util.function.Consumer;\n import lombok.extern.java.Log;\n import org.triplea.domain.data.ApiKey;\n-import org.triplea.domain.data.ChatParticipant;\n import org.triplea.domain.data.PlayerChatId;\n import org.triplea.domain.data.UserName;\n import org.triplea.http.client.lobby.HttpLobbyClient;\n-import org.triplea.http.client.lobby.chat.ChatMessageListeners;\n import org.triplea.http.client.lobby.game.listing.GameListingClient;\n-import org.triplea.http.client.lobby.game.listing.messages.GameListingListeners;\n+import org.triplea.http.client.lobby.game.listing.LobbyGameListing;\n import org.triplea.http.client.lobby.moderator.BanPlayerRequest;\n import org.triplea.http.client.lobby.moderator.toolbox.HttpModeratorToolboxClient;\n+import org.triplea.http.client.web.socket.GenericWebSocketClient;\n+import org.triplea.http.client.web.socket.WebSocket;\n+import org.triplea.http.client.web.socket.WebsocketPaths;\n+import org.triplea.http.client.web.socket.messages.MessageType;\n+import org.triplea.http.client.web.socket.messages.WebSocketMessage;\n+import org.triplea.http.client.web.socket.messages.envelopes.chat.ChatSentMessage;\n+import org.triplea.http.client.web.socket.messages.envelopes.chat.ConnectToChatMessage;\n+import org.triplea.http.client.web.socket.messages.envelopes.chat.PlayerSlapSentMessage;\n+import org.triplea.http.client.web.socket.messages.envelopes.chat.PlayerStatusUpdateSentMessage;\n \n /**\n  * Represents a connection from a player to lobby. A player can do actions like get game listings,\n  * send chat messages, slap players, etc.. The lobby will send messages to the player for example\n  * like chat messages, slap notifications, ban notifications.\n  */\n+// TODO: test-me", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a8e254bbc0ce354189a0e52e07be6b5668acb5a"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a8e254bbc0ce354189a0e52e07be6b5668acb5a", "author": {"user": {"login": "tripleabuilderbot", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/3a8e254bbc0ce354189a0e52e07be6b5668acb5a", "committedDate": "2020-03-26T05:46:37Z", "message": "Auto-Formatting"}, "afterCommit": {"oid": "2508e91354274c47a9312176ac445ffed731f15c", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/2508e91354274c47a9312176ac445ffed731f15c", "committedDate": "2020-03-27T07:47:21Z", "message": "wip"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNjM3MTg4", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-382637188", "createdAt": "2020-03-27T07:48:55Z", "commit": {"oid": "2508e91354274c47a9312176ac445ffed731f15c"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzo0ODo1NlrOF8mOvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNzo0ODo1N1rOF8mO0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4NTI0Nw==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399085247", "createdAt": "2020-03-27T07:48:56Z", "author": {"login": "codeclimate"}, "path": "http-clients/src/main/java/org/triplea/http/client/web/socket/messages/envelopes/chat/ConnectToChatMessage.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package org.triplea.http.client.web.socket.messages.envelopes.chat;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2508e91354274c47a9312176ac445ffed731f15c"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4NTI1MA==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399085250", "createdAt": "2020-03-27T07:48:56Z", "author": {"login": "codeclimate"}, "path": "http-clients/src/main/java/org/triplea/http/client/web/socket/messages/envelopes/chat/PlayerLeftMessage.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.triplea.http.client.web.socket.messages.envelopes.chat;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2508e91354274c47a9312176ac445ffed731f15c"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4NTI1Ng==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399085256", "createdAt": "2020-03-27T07:48:56Z", "author": {"login": "codeclimate"}, "path": "http-clients/src/main/java/org/triplea/http/client/web/socket/messages/envelopes/chat/ChatterListingMessage.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package org.triplea.http.client.web.socket.messages.envelopes.chat;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+import lombok.Builder;\n+import org.triplea.domain.data.ChatParticipant;\n+import org.triplea.http.client.web.socket.MessageEnvelope;\n+import org.triplea.http.client.web.socket.messages.MessageType;\n+import org.triplea.http.client.web.socket.messages.WebSocketMessage;\n+\n+public class ChatterListingMessage implements WebSocketMessage {\n+  public static final MessageType<ChatterListingMessage> TYPE =\n+      MessageType.of(ChatterListingMessage.class);\n+\n+  @Builder\n+  private static class Chatter {\n+    private final String userName;\n+    private final String playerChatId;\n+    private final boolean isModerator;\n+    private final String status;\n+  }\n+\n+  private final List<Chatter> chatters;\n+\n+  public ChatterListingMessage(List<ChatParticipant> chatters) {\n+    throw new UnsupportedOperationException(\"TODO\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2508e91354274c47a9312176ac445ffed731f15c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4NTI2MA==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399085260", "createdAt": "2020-03-27T07:48:57Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/modules/chat/Chatters.java", "diffHunk": "@@ -15,12 +16,40 @@\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n+import org.triplea.db.dao.api.key.ApiKeyDaoWrapper;\n+import org.triplea.domain.data.ApiKey;\n import org.triplea.domain.data.ChatParticipant;\n import org.triplea.domain.data.UserName;\n \n @Slf4j\n @AllArgsConstructor\n public class Chatters {\n+  public Optional<ChatParticipant> lookupPlayerBySession(final Session senderSession) {\n+    throw new UnsupportedOperationException(\"TODO\");\n+  }\n+\n+  private final ApiKeyDaoWrapper apiKeyDaoWrapper;\n+  private final ChatParticipantAdapter chatParticipantAdapter;\n+\n+  public Optional<ChatParticipant> connectPlayer(final ApiKey apiKey) {\n+\n+    final Optional<ChatParticipant> chatParticipant =\n+        apiKeyDaoWrapper.lookupByApiKey(apiKey).map(chatParticipantAdapter);\n+\n+    if (chatParticipant.isPresent()) {\n+      // add chatter\n+    }\n+    return chatParticipant;\n+  }\n+\n+  public List<ChatParticipant> getChatters() {\n+    throw new UnsupportedOperationException(\"TODO\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2508e91354274c47a9312176ac445ffed731f15c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA4NTI2NA==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399085264", "createdAt": "2020-03-27T07:48:57Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/modules/chat/Chatters.java", "diffHunk": "@@ -15,12 +16,40 @@\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n+import org.triplea.db.dao.api.key.ApiKeyDaoWrapper;\n+import org.triplea.domain.data.ApiKey;\n import org.triplea.domain.data.ChatParticipant;\n import org.triplea.domain.data.UserName;\n \n @Slf4j\n @AllArgsConstructor\n public class Chatters {\n+  public Optional<ChatParticipant> lookupPlayerBySession(final Session senderSession) {\n+    throw new UnsupportedOperationException(\"TODO\");\n+  }\n+\n+  private final ApiKeyDaoWrapper apiKeyDaoWrapper;\n+  private final ChatParticipantAdapter chatParticipantAdapter;\n+\n+  public Optional<ChatParticipant> connectPlayer(final ApiKey apiKey) {\n+\n+    final Optional<ChatParticipant> chatParticipant =\n+        apiKeyDaoWrapper.lookupByApiKey(apiKey).map(chatParticipantAdapter);\n+\n+    if (chatParticipant.isPresent()) {\n+      // add chatter\n+    }\n+    return chatParticipant;\n+  }\n+\n+  public List<ChatParticipant> getChatters() {\n+    throw new UnsupportedOperationException(\"TODO\");\n+  }\n+\n+  public Optional<UserName> playerLeft(final Session session) {\n+    throw new UnsupportedOperationException(\"TODO\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2508e91354274c47a9312176ac445ffed731f15c"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMjkxNTM3", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-383291537", "createdAt": "2020-03-28T07:32:25Z", "commit": {"oid": "507510286ef2dda99c543636458f9812dda9c828"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNzozMjoyNlrOF9Hl4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQwNzozMjoyN1rOF9Hl6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYzMTg0MQ==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399631841", "createdAt": "2020-03-28T07:32:26Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/modules/chat/event/processing/StatusUpdateListener.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package org.triplea.modules.chat.event.processing;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507510286ef2dda99c543636458f9812dda9c828"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYzMTg0Mw==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399631843", "createdAt": "2020-03-28T07:32:26Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/modules/chat/event/processing/ChatMessageListener.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.triplea.modules.chat.event.processing;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507510286ef2dda99c543636458f9812dda9c828"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYzMTg0NQ==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399631845", "createdAt": "2020-03-28T07:32:26Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/modules/chat/Chatters.java", "diffHunk": "@@ -15,12 +16,47 @@\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n+import org.jdbi.v3.core.Jdbi;\n+import org.triplea.db.dao.api.key.ApiKeyDaoWrapper;\n+import org.triplea.domain.data.ApiKey;\n import org.triplea.domain.data.ChatParticipant;\n import org.triplea.domain.data.UserName;\n \n+/** Keeps the current list of ChatParticipants and maps them to their websocket session. */\n @Slf4j\n @AllArgsConstructor\n public class Chatters {\n+\n+  private final ApiKeyDaoWrapper apiKeyDaoWrapper;\n+  private final ChatParticipantAdapter chatParticipantAdapter;\n+\n+  public static Chatters build(final Jdbi jdbi) {\n+    return new Chatters(ApiKeyDaoWrapper.build(jdbi), new ChatParticipantAdapter());\n+  }\n+\n+  public Optional<ChatParticipant> lookupPlayerBySession(final Session senderSession) {\n+    throw new UnsupportedOperationException(\"TODO\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507510286ef2dda99c543636458f9812dda9c828"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYzMTg0Nw==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399631847", "createdAt": "2020-03-28T07:32:26Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/web/socket/connections/WebSocketMessagingBus.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.triplea.web.socket.connections;\n+\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import javax.websocket.Session;\n+import org.triplea.http.client.web.socket.messages.MessageType;\n+import org.triplea.http.client.web.socket.messages.WebSocketMessage;\n+import org.triplea.web.socket.WebSocketMessageContext;\n+\n+public class WebSocketMessagingBus {\n+  public static String MESSAGING_BUS_KEY = \"messaging.bus\";\n+\n+  public <X extends WebSocketMessage> void sendResponse(X responseMessage) {\n+    throw new UnsupportedOperationException(\"TODO\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507510286ef2dda99c543636458f9812dda9c828"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTYzMTg0OQ==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399631849", "createdAt": "2020-03-28T07:32:27Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/web/socket/connections/WebSocketMessagingBus.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.triplea.web.socket.connections;\n+\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import javax.websocket.Session;\n+import org.triplea.http.client.web.socket.messages.MessageType;\n+import org.triplea.http.client.web.socket.messages.WebSocketMessage;\n+import org.triplea.web.socket.WebSocketMessageContext;\n+\n+public class WebSocketMessagingBus {\n+  public static String MESSAGING_BUS_KEY = \"messaging.bus\";\n+\n+  public <X extends WebSocketMessage> void sendResponse(X responseMessage) {\n+    throw new UnsupportedOperationException(\"TODO\");\n+  }\n+\n+  public <X extends WebSocketMessage> void broadcastMessage(X broadcastMessage) {\n+    throw new UnsupportedOperationException(\"TODO\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "507510286ef2dda99c543636458f9812dda9c828"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71cf6e26db96fe2bdd2aefa474a791ed625de103", "author": {"user": {"login": "tripleabuilderbot", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/71cf6e26db96fe2bdd2aefa474a791ed625de103", "committedDate": "2020-03-28T07:33:06Z", "message": "Auto-Formatting"}, "afterCommit": {"oid": "306e25b2085078b6fb7c35b34426918f3c486968", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/306e25b2085078b6fb7c35b34426918f3c486968", "committedDate": "2020-03-28T07:49:15Z", "message": "Formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTkwMjQ2", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-383190246", "createdAt": "2020-03-27T20:48:56Z", "commit": {"oid": "1b28cbb1954852950e96cbeabf9ab436ed254e2f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDo0ODo1NlrOF9BZkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNzowMzowOVrOF9K1UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUzMDM4NQ==", "bodyText": "Would you mind explaining this change?", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399530385", "createdAt": "2020-03-27T20:48:56Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/chat/LobbyChatTransmitter.java", "diffHunk": "@@ -21,30 +28,47 @@\n \n   @Override\n   public void setChatClient(final ChatClient chatClient) {\n-    playerToLobbyConnection.addChatMessageListeners(\n-        ChatMessageListeners.builder()\n-            .playerStatusListener(chatClient::statusUpdated)\n-            .playerLeftListener(chatClient::participantRemoved)\n-            .playerJoinedListener(chatClient::participantAdded)\n-            .chatMessageListener(chatClient::messageReceived)\n-            .connectedListener(chatClient::connected)\n-            .chatEventListener(chatClient::eventReceived)\n-            .playerSlappedListener(\n-                slapEvent -> {\n-                  if (slapEvent.getSlapped().equals(localUserName)) {\n-                    chatClient.slappedBy(slapEvent.getSlapper());\n-                  } else {\n-                    chatClient.playerSlapped(\n-                        slapEvent.getSlapper() + \" slapped \" + slapEvent.getSlapped());\n-                  }\n-                })\n-            .serverErrorListener(log::severe)\n-            .build());\n+    playerToLobbyConnection.addMessageListener(\n+        ChatterListingMessage.TYPE, message -> chatClient.connected(message.getChatters()));\n+\n+    playerToLobbyConnection.addMessageListener(\n+        PlayerStatusUpdateReceivedMessage.TYPE,\n+        message -> chatClient.statusUpdated(message.getUserName(), message.getStatus()));\n+\n+    playerToLobbyConnection.addMessageListener(\n+        PlayerLeftMessage.TYPE, message -> chatClient.participantRemoved(message.getUserName()));\n+\n+    playerToLobbyConnection.addMessageListener(\n+        PlayerJoinedMessage.TYPE,\n+        message -> chatClient.participantAdded(message.getChatParticipant()));\n+\n+    playerToLobbyConnection.addMessageListener(\n+        ChatReceivedMessage.TYPE,\n+        message -> chatClient.messageReceived(message.getSender(), message.getMessage()));\n+\n+    playerToLobbyConnection.addMessageListener(\n+        PlayerJoinedMessage.TYPE,\n+        message -> chatClient.participantAdded(message.getChatParticipant()));\n+\n+    playerToLobbyConnection.addMessageListener(\n+        ChatEventReceivedMessage.TYPE, message -> chatClient.eventReceived(message.getMessage()));\n+\n+    playerToLobbyConnection.addMessageListener(\n+        PlayerSlapReceivedMessage.TYPE,\n+        message -> {\n+          if (message.getSlappedPlayer().equals(localUserName)) {\n+            chatClient.slappedBy(message.getSlappingPlayer());\n+          } else {\n+            chatClient.eventReceived(\n+                message.getSlappingPlayer() + \" slapped \" + message.getSlappedPlayer());\n+          }\n+        });\n+    playerToLobbyConnection.sendConnectToChatMessage();\n   }\n \n   @Override\n   public Collection<ChatParticipant> connect() {\n-    return playerToLobbyConnection.connect();\n+    return List.of();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b28cbb1954852950e96cbeabf9ab436ed254e2f"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY4NDk0NA==", "bodyText": "Thoughts about using a MultiMap to get the O(1) runtime of this frequently used method?", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399684944", "createdAt": "2020-03-28T17:03:09Z", "author": {"login": "RoiEXLab"}, "path": "http-clients/src/main/java/org/triplea/http/client/web/socket/GenericWebSocketClient.java", "diffHunk": "@@ -19,74 +24,102 @@\n  * API, and it automatically converts incoming and outgoing messages to JSON string. In particular\n  * this class makes sure that all operations are non-blocking, but keep their initial dispatch\n  * order.\n+ *\n+ * <p>Note: The error handler passed in is invoked if we get an error connecting to server, or if\n+ * server sends us an error message.\n  */\n @Log\n-public class GenericWebSocketClient implements WebSocketConnectionListener {\n+public class GenericWebSocketClient implements WebSocket, WebSocketConnectionListener {\n   private static final Gson gson = new Gson();\n \n-  private final WebSocketConnection client;\n   /** These are called whenever connection is closed, whether by us or server. */\n   private final Collection<Runnable> connectionClosedListeners = new ArrayList<>();\n \n-  private final Consumer<String> errorHandler;\n-  private Consumer<ServerMessageEnvelope> messageListener;\n+  @Nonnull private final URI websocketUri;\n+  @Nonnull private final Consumer<String> errorHandler;\n \n-  public GenericWebSocketClient(final URI lobbyUri, final Consumer<String> errorHandler) {\n-    this(new WebSocketConnection(swapHttpsToWssProtocol(lobbyUri)), errorHandler);\n-  }\n+  private WebSocketConnection webSocketConnection;\n+  private final Set<MessageListener<? extends WebSocketMessage>> listeners = new HashSet<>();\n \n-  @VisibleForTesting\n-  GenericWebSocketClient(\n-      final WebSocketConnection webSocketClient, final Consumer<String> errorHandler) {\n-    client = webSocketClient;\n-    this.errorHandler = errorHandler;\n+  @Builder\n+  private static class MessageListener<T extends WebSocketMessage> {\n+    @Nonnull MessageType<T> messageType;\n+    @Nonnull Consumer<Object> listener;\n   }\n \n-  @VisibleForTesting\n-  static URI swapHttpsToWssProtocol(final URI uri) {\n-    return uri.getScheme().equals(\"https\")\n-        ? URI.create(uri.toString().replace(\"https\", \"wss\"))\n-        : uri;\n-  }\n-\n-  public void registerListenerAndConnect(final Consumer<ServerMessageEnvelope> messageListener) {\n-    this.messageListener = messageListener;\n-    client\n-        .connect(this, errorHandler)\n-        .exceptionally(\n-            throwable -> {\n-              log.log(\n-                  Level.SEVERE, \"Unexpected exception completing websocket connection\", throwable);\n-              return false;\n-            });\n+  @Builder\n+  public GenericWebSocketClient(\n+      @Nonnull final URI websocketUri, @Nonnull final Consumer<String> errorHandler) {\n+    this.websocketUri = websocketUri;\n+    this.errorHandler = errorHandler;\n   }\n \n   /**\n    * Non-blocking send of a message to the server. Implementation note: data is sent as a JSON\n    * string, this method handles conversion of the parameter object to JSON.\n    *\n    * @param message The data object to send to the server.\n+   * @deprecated Call {@code sendMessage(WebsocketMessage)} instead.\n    */\n+  @Deprecated\n   public void send(final ClientMessageEnvelope message) {\n     // we get by doing the send on a new thread.\n-    client.sendMessage(gson.toJson(message));\n+    webSocketConnection.sendMessage(gson.toJson(message));\n   }\n \n-  /**\n-   * Removes connection lost listeners and starts a non-blocking close of the websocket connection.\n-   */\n+  @Override\n+  public void connect() {\n+    addListener(ServerErrorMessage.TYPE, message -> errorHandler.accept(message.getError()));\n+    webSocketConnection = new WebSocketConnection(swapHttpsToWssProtocol(websocketUri));\n+    webSocketConnection.connect(this, errorHandler);\n+  }\n+\n+  @VisibleForTesting\n+  static URI swapHttpsToWssProtocol(final URI uri) {\n+    return uri.getScheme().equals(\"https\")\n+        ? URI.create(uri.toString().replace(\"https\", \"wss\"))\n+        : uri;\n+  }\n+\n+  /** Starts a non-blocking close of the websocket connection. */\n+  @Override\n   public void close() {\n-    client.close();\n+    webSocketConnection.close();\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public <T extends WebSocketMessage> void addListener(\n+      final MessageType<T> messageType, final Consumer<T> messageHandler) {\n+\n+    final Consumer<Object> messageConsumer = object -> messageHandler.accept((T) object);\n+    listeners.add(\n+        MessageListener.<T>builder() //\n+            .messageType(messageType)\n+            .listener(messageConsumer)\n+            .build());\n+  }\n+\n+  @Override\n+  public void sendMessage(final WebSocketMessage message) {\n+    webSocketConnection.sendMessage(gson.toJson(message.toEnvelope()));\n   }\n \n+  @Override\n   public void addConnectionClosedListener(final Runnable connectionClosedListener) {\n     connectionClosedListeners.add(connectionClosedListener);\n   }\n \n   @Override\n   public void messageReceived(final String message) {\n-    final ServerMessageEnvelope converted = gson.fromJson(message, ServerMessageEnvelope.class);\n-    messageListener.accept(converted);\n+    final MessageEnvelope converted = gson.fromJson(message, MessageEnvelope.class);\n+\n+    listeners.stream()\n+        .filter(listener -> converted.messageTypeIs(listener.messageType))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b28cbb1954852950e96cbeabf9ab436ed254e2f"}, "originalPosition": 150}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "306e25b2085078b6fb7c35b34426918f3c486968", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/306e25b2085078b6fb7c35b34426918f3c486968", "committedDate": "2020-03-28T07:49:15Z", "message": "Formatting"}, "afterCommit": {"oid": "f3e112e077264b59909aad8198872dee75c3f111", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/f3e112e077264b59909aad8198872dee75c3f111", "committedDate": "2020-03-29T00:13:49Z", "message": "wip"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzYwODIx", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-383360821", "createdAt": "2020-03-29T00:15:49Z", "commit": {"oid": "f3e112e077264b59909aad8198872dee75c3f111"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMDoxNTo0OVrOF9NUXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMDoxNTo0OVrOF9NUXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNTY2Mw==", "bodyText": "Identical blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399725663", "createdAt": "2020-03-29T00:15:49Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/modules/moderation/ban/user/UserBanService.java", "diffHunk": "@@ -149,16 +124,50 @@ private static UserBanParams toUserBanParams(\n         .build();\n   }\n \n-  private static String playerBannedMessage(final long banMinutes) {\n-    return String.format(\n-        \"You have been banned for %s for violating lobby rules\",\n-        BanDurationFormatter.formatBanMinutes(banMinutes));\n+  private void persistUserBanToDatabase(final UserBanParams userBanParams) {\n+    if (userBanDao.addBan(\n+            publicIdSupplier.get(),\n+            userBanParams.getUsername(),\n+            userBanParams.getSystemId(),\n+            userBanParams.getIp(),\n+            userBanParams.getMinutesToBan())\n+        != 1) {\n+      throw new IllegalStateException(\"Failed to insert ban record:\" + userBanParams);\n+    }\n   }\n \n-  private static String playerBannedNotification(\n-      final UserName bannedUserName, final long banMinutes) {\n-    return String.format(\n-        \"%s violated lobby rules and was banned for %s\",\n-        bannedUserName, BanDurationFormatter.formatBanMinutes(banMinutes));\n+  private void removePlayerFromChat(final UserBanParams userBanParams) {\n+    // kick the player out of chat and send a broadcast message\n+    if (chatters.hasPlayer(UserName.of(userBanParams.getUsername()))\n+        && disconnectUserFromChat(userBanParams)) {\n+      broadcastToChattersPlayerBannedMessage(userBanParams);\n+    }\n+  }\n+\n+  private boolean disconnectUserFromChat(final UserBanParams userBanParams) {\n+    return chatters.disconnectPlayerSessions(\n+        UserName.of(userBanParams.getUsername()),\n+        String.format(\n+            \"You have been banned for %s for violating lobby rules\",\n+            BanDurationFormatter.formatBanMinutes(userBanParams.getMinutesToBan())));\n+  }\n+\n+  private void broadcastToChattersPlayerBannedMessage(final UserBanParams banUserParams) {\n+    chatMessagingBus.broadcastMessage(\n+        new ChatEventReceivedMessage(\n+            String.format(\n+                \"%s violated lobby rules and was banned for %s\",\n+                banUserParams.getUsername(),\n+                BanDurationFormatter.formatBanMinutes(banUserParams.getMinutesToBan()))));\n+  }\n+\n+  private void recordBanInModeratorAuditLog(int moderatorId, UserBanParams userBanParams) {\n+    moderatorAuditHistoryDao.addAuditRecord(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3e112e077264b59909aad8198872dee75c3f111"}, "originalPosition": 196}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4ca194d4dbcbeff42522e6987870782ccbbb839c", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/4ca194d4dbcbeff42522e6987870782ccbbb839c", "committedDate": "2020-03-29T19:27:37Z", "message": "wip"}, "afterCommit": {"oid": "c0ac86ab8ea9135bacf67f0f0c1310498a5d9d30", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/c0ac86ab8ea9135bacf67f0f0c1310498a5d9d30", "committedDate": "2020-03-29T21:09:22Z", "message": "Refactor websocket listeners & messages, attach one at a time instead of in groups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNDU4ODYy", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-383458862", "createdAt": "2020-03-29T21:45:26Z", "commit": {"oid": "f086a64eb27882184cdff25629f42b964ba3c39a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQyMTo0NToyN1rOF9VaMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQyMTo0NToyN1rOF9VaNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg1ODIyNw==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399858227", "createdAt": "2020-03-29T21:45:27Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/web/socket/GameConnectionWebSocket.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.triplea.web.socket;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f086a64eb27882184cdff25629f42b964ba3c39a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg1ODIyOA==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399858228", "createdAt": "2020-03-29T21:45:27Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/web/socket/PlayerConnectionWebSocket.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package org.triplea.web.socket;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f086a64eb27882184cdff25629f42b964ba3c39a"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNTA3NDE2", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-383507416", "createdAt": "2020-03-30T03:15:58Z", "commit": {"oid": "0cbba59c00e6790a241b174eb7851fa773530552"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwMzoxNTo1OFrOF9YWRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwMzoxNTo1OVrOF9YWRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkwNjM3Mw==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399906373", "createdAt": "2020-03-30T03:15:58Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/modules/chat/Chatters.java", "diffHunk": "@@ -15,39 +16,79 @@\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n+import org.jdbi.v3.core.Jdbi;\n+import org.triplea.db.dao.api.key.ApiKeyDaoWrapper;\n+import org.triplea.domain.data.ApiKey;\n import org.triplea.domain.data.ChatParticipant;\n import org.triplea.domain.data.UserName;\n \n+/** Keeps the current list of ChatParticipants and maps them to their websocket session. */\n @Slf4j\n @AllArgsConstructor\n public class Chatters {\n+  private final ApiKeyDaoWrapper apiKeyDaoWrapper;\n+  private final ChatParticipantAdapter chatParticipantAdapter;\n+\n+  @Getter(value = AccessLevel.PACKAGE, onMethod_ = @VisibleForTesting)\n+  private final Map<String, ChatterSession> participants = new ConcurrentHashMap<>();\n+\n   @AllArgsConstructor\n   @Getter\n   @VisibleForTesting\n-  static class ChatterSession {\n+  private static class ChatterSession {\n     private final ChatParticipant chatParticipant;\n     private final Session session;\n   }\n \n-  @Getter(value = AccessLevel.PACKAGE, onMethod_ = @VisibleForTesting)\n-  private final Map<String, ChatterSession> participants = new ConcurrentHashMap<>();\n+  public static Chatters build(final Jdbi jdbi) {\n+    return new Chatters(ApiKeyDaoWrapper.build(jdbi), new ChatParticipantAdapter());\n+  }\n \n-  Optional<UserName> removeSession(final Session session) {\n-    return Optional.ofNullable(participants.remove(session.getId()))\n-        .map(ChatterSession::getChatParticipant)\n-        .map(ChatParticipant::getUserName);\n+  public Optional<ChatParticipant> lookupPlayerBySession(final Session senderSession) {\n+    return Optional.ofNullable(participants.get(senderSession.getId()))\n+        .map(chatterSession -> chatterSession.chatParticipant);\n   }\n \n-  void put(final Session session, final ChatParticipant chatter) {\n-    participants.put(session.getId(), new ChatterSession(chatter, session));\n+  public Optional<ChatParticipant> connectPlayer(final ApiKey apiKey, final Session session) {\n+    final Optional<ChatParticipant> chatParticipant =\n+        apiKeyDaoWrapper.lookupByApiKey(apiKey).map(chatParticipantAdapter);\n+    // add chatter\n+    chatParticipant.ifPresent(\n+        participant -> participants.put(session.getId(), new ChatterSession(participant, session)));\n+    return chatParticipant;\n   }\n \n-  Collection<ChatParticipant> getAllParticipants() {\n+  // TODO: test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cbba59c00e6790a241b174eb7851fa773530552"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTkwNjM3NA==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r399906374", "createdAt": "2020-03-30T03:15:59Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/modules/chat/Chatters.java", "diffHunk": "@@ -15,39 +16,79 @@\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n+import org.jdbi.v3.core.Jdbi;\n+import org.triplea.db.dao.api.key.ApiKeyDaoWrapper;\n+import org.triplea.domain.data.ApiKey;\n import org.triplea.domain.data.ChatParticipant;\n import org.triplea.domain.data.UserName;\n \n+/** Keeps the current list of ChatParticipants and maps them to their websocket session. */\n @Slf4j\n @AllArgsConstructor\n public class Chatters {\n+  private final ApiKeyDaoWrapper apiKeyDaoWrapper;\n+  private final ChatParticipantAdapter chatParticipantAdapter;\n+\n+  @Getter(value = AccessLevel.PACKAGE, onMethod_ = @VisibleForTesting)\n+  private final Map<String, ChatterSession> participants = new ConcurrentHashMap<>();\n+\n   @AllArgsConstructor\n   @Getter\n   @VisibleForTesting\n-  static class ChatterSession {\n+  private static class ChatterSession {\n     private final ChatParticipant chatParticipant;\n     private final Session session;\n   }\n \n-  @Getter(value = AccessLevel.PACKAGE, onMethod_ = @VisibleForTesting)\n-  private final Map<String, ChatterSession> participants = new ConcurrentHashMap<>();\n+  public static Chatters build(final Jdbi jdbi) {\n+    return new Chatters(ApiKeyDaoWrapper.build(jdbi), new ChatParticipantAdapter());\n+  }\n \n-  Optional<UserName> removeSession(final Session session) {\n-    return Optional.ofNullable(participants.remove(session.getId()))\n-        .map(ChatterSession::getChatParticipant)\n-        .map(ChatParticipant::getUserName);\n+  public Optional<ChatParticipant> lookupPlayerBySession(final Session senderSession) {\n+    return Optional.ofNullable(participants.get(senderSession.getId()))\n+        .map(chatterSession -> chatterSession.chatParticipant);\n   }\n \n-  void put(final Session session, final ChatParticipant chatter) {\n-    participants.put(session.getId(), new ChatterSession(chatter, session));\n+  public Optional<ChatParticipant> connectPlayer(final ApiKey apiKey, final Session session) {\n+    final Optional<ChatParticipant> chatParticipant =\n+        apiKeyDaoWrapper.lookupByApiKey(apiKey).map(chatParticipantAdapter);\n+    // add chatter\n+    chatParticipant.ifPresent(\n+        participant -> participants.put(session.getId(), new ChatterSession(participant, session)));\n+    return chatParticipant;\n   }\n \n-  Collection<ChatParticipant> getAllParticipants() {\n+  // TODO: test\n+  public Collection<ChatParticipant> getChatters() {\n     return participants.values().stream()\n-        .map(ChatterSession::getChatParticipant)\n-        .collect(Collectors.toSet());\n+        .map(session -> session.chatParticipant)\n+        .collect(Collectors.toList());\n+  }\n+\n+  // TODO: test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cbba59c00e6790a241b174eb7851fa773530552"}, "originalPosition": 77}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d568d74aafdf7da507cdc1513dd254e74ee13738", "author": {"user": {"login": "tripleabuilderbot", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/d568d74aafdf7da507cdc1513dd254e74ee13738", "committedDate": "2020-03-30T03:16:51Z", "message": "Auto-Formatting"}, "afterCommit": {"oid": "0cbba59c00e6790a241b174eb7851fa773530552", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/0cbba59c00e6790a241b174eb7851fa773530552", "committedDate": "2020-03-30T02:13:34Z", "message": "wip"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjMxMDU4", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-383631058", "createdAt": "2020-03-30T08:26:42Z", "commit": {"oid": "a14479809f9e3c68fe234c815cc95b29d75a7d70"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODoyNjo0MlrOF9ewHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODoyNjo0MlrOF9ewHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxMTI5Mg==", "bodyText": "Method onMessage has 27 lines of code (exceeds 25 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r400011292", "createdAt": "2020-03-30T08:26:42Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/web/socket/WebSocketMessagingBus.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package org.triplea.web.socket;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.gson.Gson;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.UUID;\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import javax.annotation.Nonnull;\n+import javax.websocket.Session;\n+import lombok.AccessLevel;\n+import lombok.AllArgsConstructor;\n+import lombok.Value;\n+import lombok.extern.slf4j.Slf4j;\n+import org.triplea.http.client.web.socket.MessageEnvelope;\n+import org.triplea.http.client.web.socket.messages.MessageType;\n+import org.triplea.http.client.web.socket.messages.WebSocketMessage;\n+import org.triplea.http.client.web.socket.messages.envelopes.ServerErrorMessage;\n+\n+@AllArgsConstructor(access = AccessLevel.PACKAGE, onConstructor_ = @VisibleForTesting)\n+@Slf4j\n+public class WebSocketMessagingBus {\n+  public static final String MESSAGING_BUS_KEY = \"messaging.bus\";\n+  private static final Gson GSON = new Gson();\n+\n+  @Nonnull private final MessageBroadcaster messageBroadcaster;\n+  @Nonnull private final MessageSender messageSender;\n+  @Nonnull private final SessionSet sessionSet;\n+\n+  private final List<BiConsumer<WebSocketMessagingBus, Session>> sessionClosedListeners =\n+      new ArrayList<>();\n+\n+  @Value\n+  private static class MessageListener<T extends WebSocketMessage> {\n+    MessageType<T> messageType;\n+    Consumer<WebSocketMessageContext> listener;\n+  }\n+\n+  private final List<MessageListener<?>> messageListeners = new ArrayList<>();\n+\n+  public WebSocketMessagingBus() {\n+    messageSender = new MessageSender();\n+    messageBroadcaster = new MessageBroadcaster(messageSender);\n+    sessionSet = new SessionSet();\n+  }\n+\n+  public <X extends WebSocketMessage> void sendResponse(\n+      final Session session, final X responseMessage) {\n+    messageSender.accept(session, responseMessage.toEnvelope());\n+  }\n+\n+  public <X extends WebSocketMessage> void broadcastMessage(final X broadcastMessage) {\n+    broadcastMessage(sessionSet.getSessions(), broadcastMessage);\n+  }\n+\n+  public <X extends WebSocketMessage> void broadcastMessage(\n+      final Collection<Session> sessions, final X broadcastMessage) {\n+    messageBroadcaster.accept(sessions, broadcastMessage.toEnvelope());\n+  }\n+\n+  public <T extends WebSocketMessage> void addListener(\n+      final MessageType<T> type, final Consumer<WebSocketMessageContext<T>> listener) {\n+    messageListeners.add(new MessageListener(type, listener));\n+  }\n+\n+  void onMessage(final Session session, final String message) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a14479809f9e3c68fe234c815cc95b29d75a7d70"}, "originalPosition": 68}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a14479809f9e3c68fe234c815cc95b29d75a7d70", "author": {"user": {"login": "tripleabuilderbot", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/a14479809f9e3c68fe234c815cc95b29d75a7d70", "committedDate": "2020-03-30T08:24:06Z", "message": "Auto-Formatting"}, "afterCommit": {"oid": "20b17bce377036662fffeb3d2d6ddf4cb363ee63", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/20b17bce377036662fffeb3d2d6ddf4cb363ee63", "committedDate": "2020-03-30T08:30:23Z", "message": "wip"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNjM3Mjgz", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-383637283", "createdAt": "2020-03-30T08:35:00Z", "commit": {"oid": "20b17bce377036662fffeb3d2d6ddf4cb363ee63"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODozNTowMVrOF9fDpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQwODozNTowMVrOF9fDpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDAxNjI5Mg==", "bodyText": "Method onMessage has 27 lines of code (exceeds 25 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r400016292", "createdAt": "2020-03-30T08:35:01Z", "author": {"login": "codeclimate"}, "path": "http-server/src/main/java/org/triplea/web/socket/WebSocketMessagingBus.java", "diffHunk": "@@ -0,0 +1,127 @@\n+package org.triplea.web.socket;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.gson.Gson;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.UUID;\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+import javax.annotation.Nonnull;\n+import javax.websocket.Session;\n+import lombok.AccessLevel;\n+import lombok.AllArgsConstructor;\n+import lombok.Value;\n+import lombok.extern.slf4j.Slf4j;\n+import org.triplea.http.client.web.socket.MessageEnvelope;\n+import org.triplea.http.client.web.socket.messages.MessageType;\n+import org.triplea.http.client.web.socket.messages.WebSocketMessage;\n+import org.triplea.http.client.web.socket.messages.envelopes.ServerErrorMessage;\n+\n+@AllArgsConstructor(access = AccessLevel.PACKAGE, onConstructor_ = @VisibleForTesting)\n+@Slf4j\n+public class WebSocketMessagingBus {\n+  public static final String MESSAGING_BUS_KEY = \"messaging.bus\";\n+  private static final Gson GSON = new Gson();\n+\n+  @Nonnull private final MessageBroadcaster messageBroadcaster;\n+  @Nonnull private final MessageSender messageSender;\n+  @Nonnull private final SessionSet sessionSet;\n+\n+  private final List<BiConsumer<WebSocketMessagingBus, Session>> sessionClosedListeners =\n+      new ArrayList<>();\n+\n+  @Value\n+  private static class MessageListener<T extends WebSocketMessage> {\n+    MessageType<T> messageType;\n+    Consumer<WebSocketMessageContext> listener;\n+  }\n+\n+  private final List<MessageListener<?>> messageListeners = new ArrayList<>();\n+\n+  public WebSocketMessagingBus() {\n+    messageSender = new MessageSender();\n+    messageBroadcaster = new MessageBroadcaster(messageSender);\n+    sessionSet = new SessionSet();\n+  }\n+\n+  public <X extends WebSocketMessage> void sendResponse(\n+      final Session session, final X responseMessage) {\n+    messageSender.accept(session, responseMessage.toEnvelope());\n+  }\n+\n+  public <X extends WebSocketMessage> void broadcastMessage(final X broadcastMessage) {\n+    broadcastMessage(sessionSet.getSessions(), broadcastMessage);\n+  }\n+\n+  public <X extends WebSocketMessage> void broadcastMessage(\n+      final Collection<Session> sessions, final X broadcastMessage) {\n+    messageBroadcaster.accept(sessions, broadcastMessage.toEnvelope());\n+  }\n+\n+  public <T extends WebSocketMessage> void addListener(\n+      final MessageType<T> type, final Consumer<WebSocketMessageContext<T>> listener) {\n+    messageListeners.add(new MessageListener(type, listener));\n+  }\n+\n+  void onMessage(final Session session, final String message) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20b17bce377036662fffeb3d2d6ddf4cb363ee63"}, "originalPosition": 68}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20b17bce377036662fffeb3d2d6ddf4cb363ee63", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/20b17bce377036662fffeb3d2d6ddf4cb363ee63", "committedDate": "2020-03-30T08:30:23Z", "message": "wip"}, "afterCommit": {"oid": "649f9405ad46f0aa57c39043543fe583e25420c9", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/649f9405ad46f0aa57c39043543fe583e25420c9", "committedDate": "2020-04-04T06:08:04Z", "message": "wip"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NjcxOTg0", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-387671984", "createdAt": "2020-04-04T06:10:46Z", "commit": {"oid": "649f9405ad46f0aa57c39043543fe583e25420c9"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzY5MDE0", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-387769014", "createdAt": "2020-04-05T00:06:47Z", "commit": {"oid": "e9a5d60cf483b7e49e71eb7f56af4f2df6eea5ab"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzY5MjE1", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-387769215", "createdAt": "2020-04-05T00:11:23Z", "commit": {"oid": "236ceb7ae4edc2f75f7c9a48d44ebbf1f10f7dcc"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzcwMjgy", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-387770282", "createdAt": "2020-04-05T00:31:38Z", "commit": {"oid": "53d4741a095ece17843cf4ecd3d929a5c3df3342"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzcxMDEw", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-387771010", "createdAt": "2020-04-05T00:44:22Z", "commit": {"oid": "59daed11e0c95a2662c45c2a089cf9882b3b2e8e"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0092443bcef243afbe82ea00cbc60648a719d00b", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/0092443bcef243afbe82ea00cbc60648a719d00b", "committedDate": "2020-04-05T00:51:41Z", "message": "Refactor websocket listeners & messages, attach one at a time instead of in groups"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3e0d8b162cdbad3b6bf3576642456dbedf23468", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/c3e0d8b162cdbad3b6bf3576642456dbedf23468", "committedDate": "2020-04-05T00:51:41Z", "message": "Fix code climate method too long"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79a487c40807ab3f89056ae4387598d0ca7683a8", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/79a487c40807ab3f89056ae4387598d0ca7683a8", "committedDate": "2020-04-05T00:51:41Z", "message": "Reduce method length"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4055ad60562f67a65e6563d77c616a0e2d7e8e67", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/4055ad60562f67a65e6563d77c616a0e2d7e8e67", "committedDate": "2020-04-05T00:51:41Z", "message": "Fix method too long codeclimate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a153ecf66b1c54efe79c2c5af14ce0195d223b79", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/a153ecf66b1c54efe79c2c5af14ce0195d223b79", "committedDate": "2020-04-05T00:51:41Z", "message": "Extract common functionality of server side websockets to a single class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85bc3c68375d15dca2c88cc50ba6b03f3f84cf24", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/85bc3c68375d15dca2c88cc50ba6b03f3f84cf24", "committedDate": "2020-04-05T00:55:10Z", "message": "Partial revert of reduce method lenght"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "59daed11e0c95a2662c45c2a089cf9882b3b2e8e", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/59daed11e0c95a2662c45c2a089cf9882b3b2e8e", "committedDate": "2020-04-05T00:42:57Z", "message": "Extract common functionality of server side websockets to a single class"}, "afterCommit": {"oid": "85bc3c68375d15dca2c88cc50ba6b03f3f84cf24", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/85bc3c68375d15dca2c88cc50ba6b03f3f84cf24", "committedDate": "2020-04-05T00:55:10Z", "message": "Partial revert of reduce method lenght"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzcxNjY2", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-387771666", "createdAt": "2020-04-05T00:57:22Z", "commit": {"oid": "85bc3c68375d15dca2c88cc50ba6b03f3f84cf24"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb131cb7b3b200fcb71d140a5cb3a7b430566fc1", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/fb131cb7b3b200fcb71d140a5cb3a7b430566fc1", "committedDate": "2020-04-05T01:18:04Z", "message": "Fix test, update method name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b3b9ee250f8594d51f7e50b657adac497f52255", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/4b3b9ee250f8594d51f7e50b657adac497f52255", "committedDate": "2020-04-05T01:18:15Z", "message": "Add a test for ChatMessageListener"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzcyNzc1", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-387772775", "createdAt": "2020-04-05T01:20:51Z", "commit": {"oid": "4b3b9ee250f8594d51f7e50b657adac497f52255"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b2e563b6c555206a2611195334fa12fe31207e5", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/6b2e563b6c555206a2611195334fa12fe31207e5", "committedDate": "2020-04-05T02:30:39Z", "message": "Removed unused logger annotations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzc1ODMy", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-387775832", "createdAt": "2020-04-05T02:32:48Z", "commit": {"oid": "6b2e563b6c555206a2611195334fa12fe31207e5"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "782958b9b00a43bc9833e8493dd5151ba4e13531", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/782958b9b00a43bc9833e8493dd5151ba4e13531", "committedDate": "2020-04-05T03:16:11Z", "message": "Various test fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3Nzc3NjI4", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-387777628", "createdAt": "2020-04-05T03:18:22Z", "commit": {"oid": "782958b9b00a43bc9833e8493dd5151ba4e13531"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwMDYxNzEw", "url": "https://github.com/triplea-game/triplea/pull/6096#pullrequestreview-390061710", "createdAt": "2020-04-08T15:03:17Z", "commit": {"oid": "0092443bcef243afbe82ea00cbc60648a719d00b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTowMzoxOFrOGCzfHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNToxMToxNFrOGCz1aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5Mzg4NA==", "bodyText": "The curly braces are unecessary here", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r405593884", "createdAt": "2020-04-08T15:03:18Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/mc/SetupPanelModel.java", "diffHunk": "@@ -64,7 +64,9 @@ public ServerModel showServer() {\n         this,\n         ui,\n         new HeadedLaunchAction(ui),\n-        error -> SwingComponents.showError(null, \"Connection problem\", error));\n+        error -> {\n+          SwingComponents.showError(null, \"Connection problem\", error);\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0092443bcef243afbe82ea00cbc60648a719d00b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5OTU5Mg==", "bodyText": "This class could even implement UnaryOperator<URI>\nhttps://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/function/UnaryOperator.html", "url": "https://github.com/triplea-game/triplea/pull/6096#discussion_r405599592", "createdAt": "2020-04-08T15:11:14Z", "author": {"login": "RoiEXLab"}, "path": "http-clients/src/main/java/org/triplea/http/client/web/socket/WebSocketProtocolSwapper.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package org.triplea.http.client.web.socket;\n+\n+import java.net.URI;\n+import java.util.function.Function;\n+\n+class WebSocketProtocolSwapper implements Function<URI, URI> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0092443bcef243afbe82ea00cbc60648a719d00b"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3614, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}