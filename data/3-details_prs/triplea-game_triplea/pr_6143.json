{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MzA5NDk2", "number": 6143, "title": "Default save game name", "bodyText": "Commits\ncommit 9c2b6db\nMove save-game file chooser logic to SaveGameFileChooser\n\ncommit 5bee76e\nAdd default save game name\n\nThis is done by adding a gameData property that is the save game file name\nthat we are loading from. The property is null if we are starting a new game.\n\nIn the case wheere we are loading new game, instead of defaulting\nthe save game file name to the name of the save game, we instead create\n a default name with this pattern \"YYYY-MM-DD-map-name.tsvg\"\n\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[x] Feature update or enhancement\n[] Feature Removal\n[] Code Cleanup or refactor\n[] Configuration Change\n[x] Problem fix:  #6105  \n[] Other:   \nTesting\nverified:\n\ndefault file name is set for new games\nsave game file name matches the file name for load games\nverified the two points above hold for both host+client on network games\n\n\n\n\n\nAdditional Review Notes\n\nIt's technically a new feature that we create a default save game file name for new games, previously we only had a prefilled name for load games\nThe 'SaveGameFileChooser' was unused, it was missed as part of a previous removal when we went from FileChooser to FileDialog recently.", "createdAt": "2020-04-05T23:53:54Z", "url": "https://github.com/triplea-game/triplea/pull/6143", "merged": true, "mergeCommit": {"oid": "0008dcfb1ea8cbf453ac0fce91cddbfa3dce2382"}, "closed": true, "closedAt": "2020-04-07T01:43:51Z", "author": {"login": "DanVanAtta"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUyE4QgH2gAyMzk5MzA5NDk2OjljMmI2ZGJiMDExNGE3ODViZDVkMTJmMjQ2OWJhZGVkNDFhMWVlZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVTL1igFqTM4OTA5MjY4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9c2b6dbb0114a785bd5d12f2469baded41a1eeff", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/9c2b6dbb0114a785bd5d12f2469baded41a1eeff", "committedDate": "2020-04-05T22:45:09Z", "message": "Move save-game file chooser logic to SaveGameFileChooser"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bee76ed6a6b6369dc62a0f5e19de7adc0f381be", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/5bee76ed6a6b6369dc62a0f5e19de7adc0f381be", "committedDate": "2020-04-05T23:48:59Z", "message": "Add default save game name\n\nThis is done by adding a gameData property that is the save game file name\nthat we are loading from. The property is null if we are starting a new game.\n\nIn the case wheere we are loading new game, instead of defaulting\nthe save game file name to the name of the save game, we instead create\n a default name with this pattern \"YYYY-MM-DD-map-name.tsvg\""}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NzMwOTY5", "url": "https://github.com/triplea-game/triplea/pull/6143#pullrequestreview-388730969", "createdAt": "2020-04-07T01:43:46Z", "commit": {"oid": "5bee76ed6a6b6369dc62a0f5e19de7adc0f381be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MDkyNjgw", "url": "https://github.com/triplea-game/triplea/pull/6143#pullrequestreview-389092680", "createdAt": "2020-04-07T13:03:23Z", "commit": {"oid": "5bee76ed6a6b6369dc62a0f5e19de7adc0f381be"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzowMzoyM1rOGCCehQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzoxOToyOFrOGCDJPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5MDkxNw==", "bodyText": "Thoughts about using https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/format/DateTimeFormatter.html#ISO_LOCAL_DATE for date formatting?", "url": "https://github.com/triplea-game/triplea/pull/6143#discussion_r404790917", "createdAt": "2020-04-07T13:03:23Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/framework/ui/SaveGameFileChooser.java", "diffHunk": "@@ -1,48 +1,56 @@\n package games.strategy.engine.framework.ui;\n \n+import games.strategy.engine.data.GameData;\n import games.strategy.engine.framework.GameDataFileUtils;\n import games.strategy.triplea.settings.ClientSetting;\n+import java.awt.FileDialog;\n+import java.awt.Frame;\n import java.io.File;\n+import java.time.ZonedDateTime;\n+import java.util.StringJoiner;\n import javax.swing.JFileChooser;\n-import javax.swing.filechooser.FileFilter;\n \n /** A file chooser for save games. Defaults to the user's configured save game folder. */\n public final class SaveGameFileChooser extends JFileChooser {\n   private static final long serialVersionUID = 1548668790891292106L;\n \n-  private static SaveGameFileChooser instance;\n-\n-  private SaveGameFileChooser() {\n-    setFileFilter(newGameDataFileFilter());\n-    final File saveGamesFolder = ClientSetting.saveGamesFolderPath.getValueOrThrow().toFile();\n-    ensureDirectoryExists(saveGamesFolder);\n-    setCurrentDirectory(saveGamesFolder);\n-  }\n-\n-  public static SaveGameFileChooser getInstance() {\n-    if (instance == null) {\n-      instance = new SaveGameFileChooser();\n+  /**\n+   * Displays a file chooser dialog for the user to select the file to which the current game should\n+   * be saved.\n+   *\n+   * @param frame The owner of the file chooser dialog; may be {@code null}.\n+   * @return The file to which the current game should be saved or {@code null} if the user\n+   *     cancelled the operation.\n+   */\n+  public static File getSaveGameLocation(final Frame frame, final GameData gameData) {\n+    final FileDialog fileDialog = new FileDialog(frame);\n+    fileDialog.setMode(FileDialog.SAVE);\n+    fileDialog.setDirectory(ClientSetting.saveGamesFolderPath.getValueOrThrow().toString());\n+    fileDialog.setFilenameFilter((dir, name) -> GameDataFileUtils.isCandidateFileName(name));\n+    fileDialog.setFile(getSaveGameName(gameData));\n+\n+    fileDialog.setVisible(true);\n+    final String fileName = fileDialog.getFile();\n+    if (fileName == null) {\n+      return null;\n     }\n-    return instance;\n-  }\n \n-  private static void ensureDirectoryExists(final File f) {\n-    if (!f.mkdirs() && !f.exists()) {\n-      throw new IllegalStateException(\"Unable to create save game folder: \" + f.getAbsolutePath());\n-    }\n+    // If the user selects a filename that already exists,\n+    // the AWT Dialog will ask the user for confirmation\n+    return new File(fileDialog.getDirectory(), GameDataFileUtils.addExtensionIfAbsent(fileName));\n   }\n \n-  private static FileFilter newGameDataFileFilter() {\n-    return new FileFilter() {\n-      @Override\n-      public boolean accept(final File file) {\n-        return file.isDirectory() || GameDataFileUtils.isCandidateFileName(file.getName());\n-      }\n+  private static String getSaveGameName(final GameData gameData) {\n+    return gameData.getSaveGameFileName().orElse(formatGameName(gameData.getGameName()));\n+  }\n \n-      @Override\n-      public String getDescription() {\n-        return \"Saved Games, *\" + GameDataFileUtils.getExtension();\n-      }\n-    };\n+  private static String formatGameName(final String gameName) {\n+    final ZonedDateTime now = ZonedDateTime.now();\n+    return new StringJoiner(\"-\")\n+        .add(String.valueOf(now.getYear()))\n+        .add(String.valueOf(now.getMonthValue()))\n+        .add(String.valueOf(now.getDayOfMonth()))\n+        .add(gameName.replaceAll(\" \", \"-\") + GameDataFileUtils.getExtension())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bee76ed6a6b6369dc62a0f5e19de7adc0f381be"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgwMTg1NA==", "bodyText": "Remember our discussion about whether to use\nArrays.stream(fileDialog.getFiles()).findAny().orElseThrow()\n?\nBecause of the extension thingy it would be a little bit impractical to use this approach here, but without this detail it would save a couple lines of code.", "url": "https://github.com/triplea-game/triplea/pull/6143#discussion_r404801854", "createdAt": "2020-04-07T13:19:28Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/framework/ui/SaveGameFileChooser.java", "diffHunk": "@@ -1,48 +1,56 @@\n package games.strategy.engine.framework.ui;\n \n+import games.strategy.engine.data.GameData;\n import games.strategy.engine.framework.GameDataFileUtils;\n import games.strategy.triplea.settings.ClientSetting;\n+import java.awt.FileDialog;\n+import java.awt.Frame;\n import java.io.File;\n+import java.time.ZonedDateTime;\n+import java.util.StringJoiner;\n import javax.swing.JFileChooser;\n-import javax.swing.filechooser.FileFilter;\n \n /** A file chooser for save games. Defaults to the user's configured save game folder. */\n public final class SaveGameFileChooser extends JFileChooser {\n   private static final long serialVersionUID = 1548668790891292106L;\n \n-  private static SaveGameFileChooser instance;\n-\n-  private SaveGameFileChooser() {\n-    setFileFilter(newGameDataFileFilter());\n-    final File saveGamesFolder = ClientSetting.saveGamesFolderPath.getValueOrThrow().toFile();\n-    ensureDirectoryExists(saveGamesFolder);\n-    setCurrentDirectory(saveGamesFolder);\n-  }\n-\n-  public static SaveGameFileChooser getInstance() {\n-    if (instance == null) {\n-      instance = new SaveGameFileChooser();\n+  /**\n+   * Displays a file chooser dialog for the user to select the file to which the current game should\n+   * be saved.\n+   *\n+   * @param frame The owner of the file chooser dialog; may be {@code null}.\n+   * @return The file to which the current game should be saved or {@code null} if the user\n+   *     cancelled the operation.\n+   */\n+  public static File getSaveGameLocation(final Frame frame, final GameData gameData) {\n+    final FileDialog fileDialog = new FileDialog(frame);\n+    fileDialog.setMode(FileDialog.SAVE);\n+    fileDialog.setDirectory(ClientSetting.saveGamesFolderPath.getValueOrThrow().toString());\n+    fileDialog.setFilenameFilter((dir, name) -> GameDataFileUtils.isCandidateFileName(name));\n+    fileDialog.setFile(getSaveGameName(gameData));\n+\n+    fileDialog.setVisible(true);\n+    final String fileName = fileDialog.getFile();\n+    if (fileName == null) {\n+      return null;\n     }\n-    return instance;\n-  }\n \n-  private static void ensureDirectoryExists(final File f) {\n-    if (!f.mkdirs() && !f.exists()) {\n-      throw new IllegalStateException(\"Unable to create save game folder: \" + f.getAbsolutePath());\n-    }\n+    // If the user selects a filename that already exists,\n+    // the AWT Dialog will ask the user for confirmation\n+    return new File(fileDialog.getDirectory(), GameDataFileUtils.addExtensionIfAbsent(fileName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bee76ed6a6b6369dc62a0f5e19de7adc0f381be"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3635, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}