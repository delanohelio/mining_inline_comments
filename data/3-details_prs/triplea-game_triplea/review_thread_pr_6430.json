{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MDM3NTIy", "number": 6430, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDoyOTowNFrOD6gfkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDoyOTowNVrOD6gflQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjc2MzcwOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDoyOTowNFrOGSYoLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDoyOTowNFrOGSYoLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMTA1Mw==", "bodyText": "Avoid deeply nested control flow statements.", "url": "https://github.com/triplea-game/triplea/pull/6430#discussion_r421931053", "createdAt": "2020-05-08T04:29:04Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.data.UnitType;\n+import games.strategy.triplea.attachments.UnitSupportAttachment;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.collections.IntegerMap;\n+\n+@UtilityClass\n+public class SupportBonusCalculator {\n+  /**\n+   * Returns the support for this unit type, and decrements the supportLeft counters.\n+   *\n+   * @return the bonus given to the unit\n+   */\n+  public static int getSupport(\n+      final Unit unit,\n+      final Set<List<UnitSupportAttachment>> supportsAvailable,\n+      final IntegerMap<UnitSupportAttachment> supportLeft,\n+      final Map<UnitSupportAttachment, IntegerMap<Unit>> supportUnitsLeft,\n+      final Map<Unit, IntegerMap<Unit>> unitSupportMap,\n+      final Predicate<UnitSupportAttachment> ruleFilter) {\n+    int givenSupport = 0;\n+    for (final List<UnitSupportAttachment> bonusType : supportsAvailable) {\n+      int maxPerBonusType = bonusType.get(0).getBonusType().getCount();\n+      for (final UnitSupportAttachment rule : bonusType) {\n+        if (!ruleFilter.test(rule)) {\n+          continue;\n+        }\n+        final Set<UnitType> types = rule.getUnitType();\n+        if (types != null && types.contains(unit.getType()) && supportLeft.getInt(rule) > 0) {\n+          final int numSupportToApply =\n+              Math.min(\n+                  maxPerBonusType,\n+                  Math.min(supportLeft.getInt(rule), supportUnitsLeft.get(rule).size()));\n+          for (int i = 0; i < numSupportToApply; i++) {\n+            givenSupport += rule.getBonus();\n+            supportLeft.add(rule, -1);\n+            final Set<Unit> supporters = supportUnitsLeft.get(rule).keySet();\n+            final Unit u = supporters.iterator().next();\n+            supportUnitsLeft.get(rule).add(u, -1);\n+            if (supportUnitsLeft.get(rule).getInt(u) <= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjc2MzcxOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDoyOTowNVrOGSYoLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDoyOTowNVrOGSYoLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMTA1NA==", "bodyText": "Method getSupport has 32 lines of code (exceeds 30 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6430#discussion_r421931054", "createdAt": "2020-05-08T04:29:05Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.data.UnitType;\n+import games.strategy.triplea.attachments.UnitSupportAttachment;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.collections.IntegerMap;\n+\n+@UtilityClass\n+public class SupportBonusCalculator {\n+  /**\n+   * Returns the support for this unit type, and decrements the supportLeft counters.\n+   *\n+   * @return the bonus given to the unit\n+   */\n+  public static int getSupport(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjc2MzcyOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDoyOTowNVrOGSYoLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDoyOTowNVrOGSYoLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMTA1NQ==", "bodyText": "Method getSupport has a Cognitive Complexity of 23 (exceeds 7 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6430#discussion_r421931055", "createdAt": "2020-05-08T04:29:05Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.data.UnitType;\n+import games.strategy.triplea.attachments.UnitSupportAttachment;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.collections.IntegerMap;\n+\n+@UtilityClass\n+public class SupportBonusCalculator {\n+  /**\n+   * Returns the support for this unit type, and decrements the supportLeft counters.\n+   *\n+   * @return the bonus given to the unit\n+   */\n+  public static int getSupport(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjc2MzczOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDoyOTowNVrOGSYoMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDoyOTowNVrOGSYoMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMTA1Ng==", "bodyText": "Method getSupport has 6 arguments (exceeds 4 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6430#discussion_r421931056", "createdAt": "2020-05-08T04:29:05Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.data.UnitType;\n+import games.strategy.triplea.attachments.UnitSupportAttachment;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.collections.IntegerMap;\n+\n+@UtilityClass\n+public class SupportBonusCalculator {\n+  /**\n+   * Returns the support for this unit type, and decrements the supportLeft counters.\n+   *\n+   * @return the bonus given to the unit\n+   */\n+  public static int getSupport(\n+      final Unit unit,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2176, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}