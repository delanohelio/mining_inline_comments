{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MDM3NTIy", "number": 6430, "title": "Extract move support bonus calculation & Convert Out Parameters to Return Values", "bodyText": "Commits\ncommit 14ec2ed\nMove method 'int getSupport' to its own class 'SupportBonusCalculator'\n\ncommit f75d596\nDiceRoll: Convert 'out' parameters of '#getSupport' to be a return value.\n\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[x] Code Cleanup or refactor\n[] Configuration Change\n[] Problem fix:  \n[] Other:", "createdAt": "2020-05-08T04:23:58Z", "url": "https://github.com/triplea-game/triplea/pull/6430", "merged": true, "mergeCommit": {"oid": "816478a2b36fd5f0c4a257258c59969d9046a76b"}, "closed": true, "closedAt": "2020-05-08T23:49:37Z", "author": {"login": "DanVanAtta"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfIWvkgH2gAyNDE1MDM3NTIyOjE0ZWMyZWQ0ODBmN2Y0ZmI4NmFjMzkzZWJlMGJmMjNlMTQzZjNkMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfaxpxAFqTQwODU4MjMzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "14ec2ed480f7f4fb86ac393ebe0bf23e143f3d33", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/14ec2ed480f7f4fb86ac393ebe0bf23e143f3d33", "committedDate": "2020-05-08T02:21:49Z", "message": "Move method 'int getSupport' to its own class 'SupportBonusCalculator'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f75d5960f8176a5ab20acbcae519711b472b45d6", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/f75d5960f8176a5ab20acbcae519711b472b45d6", "committedDate": "2020-05-08T02:37:26Z", "message": "DiceRoll: Convert 'out' parameters of '#getSupport' to be a return value."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/f982e4430fc19c3844b77e1c0678e35fbd24befa", "committedDate": "2020-05-08T04:26:54Z", "message": "Formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82991cee1bb1bde610c8472b67739a995d20cc2e", "author": {"user": {"login": "tripleabuilderbot", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/82991cee1bb1bde610c8472b67739a995d20cc2e", "committedDate": "2020-05-08T04:25:22Z", "message": "Auto-Formatting"}, "afterCommit": {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/f982e4430fc19c3844b77e1c0678e35fbd24befa", "committedDate": "2020-05-08T04:26:54Z", "message": "Formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3OTg4MzE0", "url": "https://github.com/triplea-game/triplea/pull/6430#pullrequestreview-407988314", "createdAt": "2020-05-08T04:29:04Z", "commit": {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDoyOTowNFrOGSYoLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwNDoyOTowNVrOGSYoMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMTA1Mw==", "bodyText": "Avoid deeply nested control flow statements.", "url": "https://github.com/triplea-game/triplea/pull/6430#discussion_r421931053", "createdAt": "2020-05-08T04:29:04Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.data.UnitType;\n+import games.strategy.triplea.attachments.UnitSupportAttachment;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.collections.IntegerMap;\n+\n+@UtilityClass\n+public class SupportBonusCalculator {\n+  /**\n+   * Returns the support for this unit type, and decrements the supportLeft counters.\n+   *\n+   * @return the bonus given to the unit\n+   */\n+  public static int getSupport(\n+      final Unit unit,\n+      final Set<List<UnitSupportAttachment>> supportsAvailable,\n+      final IntegerMap<UnitSupportAttachment> supportLeft,\n+      final Map<UnitSupportAttachment, IntegerMap<Unit>> supportUnitsLeft,\n+      final Map<Unit, IntegerMap<Unit>> unitSupportMap,\n+      final Predicate<UnitSupportAttachment> ruleFilter) {\n+    int givenSupport = 0;\n+    for (final List<UnitSupportAttachment> bonusType : supportsAvailable) {\n+      int maxPerBonusType = bonusType.get(0).getBonusType().getCount();\n+      for (final UnitSupportAttachment rule : bonusType) {\n+        if (!ruleFilter.test(rule)) {\n+          continue;\n+        }\n+        final Set<UnitType> types = rule.getUnitType();\n+        if (types != null && types.contains(unit.getType()) && supportLeft.getInt(rule) > 0) {\n+          final int numSupportToApply =\n+              Math.min(\n+                  maxPerBonusType,\n+                  Math.min(supportLeft.getInt(rule), supportUnitsLeft.get(rule).size()));\n+          for (int i = 0; i < numSupportToApply; i++) {\n+            givenSupport += rule.getBonus();\n+            supportLeft.add(rule, -1);\n+            final Set<Unit> supporters = supportUnitsLeft.get(rule).keySet();\n+            final Unit u = supporters.iterator().next();\n+            supportUnitsLeft.get(rule).add(u, -1);\n+            if (supportUnitsLeft.get(rule).getInt(u) <= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMTA1NA==", "bodyText": "Method getSupport has 32 lines of code (exceeds 30 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6430#discussion_r421931054", "createdAt": "2020-05-08T04:29:05Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.data.UnitType;\n+import games.strategy.triplea.attachments.UnitSupportAttachment;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.collections.IntegerMap;\n+\n+@UtilityClass\n+public class SupportBonusCalculator {\n+  /**\n+   * Returns the support for this unit type, and decrements the supportLeft counters.\n+   *\n+   * @return the bonus given to the unit\n+   */\n+  public static int getSupport(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMTA1NQ==", "bodyText": "Method getSupport has a Cognitive Complexity of 23 (exceeds 7 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6430#discussion_r421931055", "createdAt": "2020-05-08T04:29:05Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.data.UnitType;\n+import games.strategy.triplea.attachments.UnitSupportAttachment;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.collections.IntegerMap;\n+\n+@UtilityClass\n+public class SupportBonusCalculator {\n+  /**\n+   * Returns the support for this unit type, and decrements the supportLeft counters.\n+   *\n+   * @return the bonus given to the unit\n+   */\n+  public static int getSupport(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkzMTA1Ng==", "bodyText": "Method getSupport has 6 arguments (exceeds 4 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6430#discussion_r421931056", "createdAt": "2020-05-08T04:29:05Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/SupportBonusCalculator.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.data.UnitType;\n+import games.strategy.triplea.attachments.UnitSupportAttachment;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.function.Predicate;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.collections.IntegerMap;\n+\n+@UtilityClass\n+public class SupportBonusCalculator {\n+  /**\n+   * Returns the support for this unit type, and decrements the supportLeft counters.\n+   *\n+   * @return the bonus given to the unit\n+   */\n+  public static int getSupport(\n+      final Unit unit,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4NTgyMzM2", "url": "https://github.com/triplea-game/triplea/pull/6430#pullrequestreview-408582336", "createdAt": "2020-05-08T23:49:31Z", "commit": {"oid": "f982e4430fc19c3844b77e1c0678e35fbd24befa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3406, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}