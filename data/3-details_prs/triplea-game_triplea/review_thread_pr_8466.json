{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMTE2MDg2", "number": 8466, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxOToyNjoxNVrOFHmTFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxOToyNjoxNVrOFHmTFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTExODI4OnYy", "diffSide": "LEFT", "path": "game-headless/src/test/java/org/triplea/game/server/debug/ChatHandlerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxOToyNjoxNVrOIJGuHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxOToyNjoxNVrOIJGuHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQxODIwNA==", "bodyText": "@trevan FWIW, this test written by Ssoloff I think is something of a good test class. Just wanted to refer you to this example.", "url": "https://github.com/triplea-game/triplea/pull/8466#discussion_r546418204", "createdAt": "2020-12-20T19:26:15Z", "author": {"login": "DanVanAtta"}, "path": "game-headless/src/test/java/org/triplea/game/server/debug/ChatHandlerTest.java", "diffHunk": "@@ -1,91 +0,0 @@\n-package org.triplea.game.server.debug;\n-\n-import static org.mockito.AdditionalMatchers.not;\n-import static org.mockito.ArgumentMatchers.anyString;\n-import static org.mockito.ArgumentMatchers.endsWith;\n-import static org.mockito.Mockito.doAnswer;\n-import static org.mockito.Mockito.never;\n-import static org.mockito.Mockito.times;\n-import static org.mockito.Mockito.verify;\n-\n-import java.util.function.Consumer;\n-import java.util.logging.Level;\n-import java.util.logging.LogRecord;\n-import org.junit.jupiter.api.Nested;\n-import org.junit.jupiter.api.Test;\n-import org.junit.jupiter.api.extension.ExtendWith;\n-import org.mockito.Mock;\n-import org.mockito.junit.jupiter.MockitoExtension;\n-\n-final class ChatHandlerTest {\n-  @ExtendWith(MockitoExtension.class)\n-  @Nested\n-  final class PublishTest {\n-    private final ChatHandler chatHandler = new ChatHandler();\n-    @Mock private Consumer<String> sendChatMessage;\n-\n-    private LogRecord newLoggableLogRecord() {\n-      return new LogRecord(Level.WARNING, \"message\");\n-    }\n-\n-    private LogRecord newLoggableLogRecordWithMultipleLines() {\n-      return new LogRecord(Level.WARNING, \"message\\nmessage2\\n\");\n-    }\n-\n-    private LogRecord newUnloggableLogRecord() {\n-      return new LogRecord(Level.FINEST, \"message\");\n-    }\n-\n-    private void publish(final LogRecord record) {\n-      synchronized (chatHandler) {\n-        chatHandler.publish(record, sendChatMessage);\n-      }\n-    }\n-\n-    @Test\n-    void shouldSendChatMessageWhenRecordIsLoggable() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "810a038210225c0d29e12ed6790d2cd742ebb613"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2664, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}