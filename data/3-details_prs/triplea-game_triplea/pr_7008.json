{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzMjg5MzY2", "number": 7008, "title": "Convert LandParatroopers, MarkNoMovementLeft, and RemoveNonCombatants", "bodyText": "This converts three battle steps.\nThe MarkNoMovementLeft and RemoveNonCombatants are extremely small steps so I felt I could include them in with the LandParatroopers since they execute next to each other.\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[x] Code Cleanup or refactor\n[] Configuration Change\n[] Problem fix\n[] Other:   \nTesting\nSaved a game during the AA round in a battle that also landed paratroopers.  Opened that save in this branch and verified it loaded and that the paratroopers did land.\nScreens Shots\n\nAdditional Notes to Reviewer\nThe step name for LandParatrooper would not show if it was a water battle, but the actual step didn't check for that.  I'm pretty sure that the move validators would prevent paratroopers from being used in a water battle (I tried in TWW) so I unified the condition and restricted the step from executing if it was a water battle.\nIf there is a way to use paratroopers in a water battle, then I'll need to change that.\nRelease Note", "createdAt": "2020-07-02T05:45:34Z", "url": "https://github.com/triplea-game/triplea/pull/7008", "merged": true, "mergeCommit": {"oid": "38fa18a4ca9d94bf4498301e128caeb887a78801"}, "closed": true, "closedAt": "2020-07-10T01:21:24Z", "author": {"login": "trevan"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcw3ajrAH2gAyNDQzMjg5MzY2OmQxN2ZiNDRhNjQyNTI5ZGExZWUyMzliYThmNWZiZGE1NTY4ZWZkZTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyys-AAFqTQ0NDQwMzk3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d17fb44a642529da1ee239ba8f5fbda5568efde4", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/d17fb44a642529da1ee239ba8f5fbda5568efde4", "committedDate": "2020-07-02T04:48:14Z", "message": "Convert LandParatroopers, MarkNoMovementLeft, and RemoveNonCombatants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "963f9a4e4195e2f9957fb60bb16cd992c5de8468", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/963f9a4e4195e2f9957fb60bb16cd992c5de8468", "committedDate": "2020-07-02T04:48:14Z", "message": "Add tests and refactor LandParatroopers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9867c7565ad962840cb22cdbbc2fd68a5913051b", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/9867c7565ad962840cb22cdbbc2fd68a5913051b", "committedDate": "2020-07-02T04:48:14Z", "message": "Remove unused parameter firstRun and duplicate tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58723832e617fed9877443e3a4864a2face4ca60", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/58723832e617fed9877443e3a4864a2face4ca60", "committedDate": "2020-07-02T06:08:55Z", "message": "Re-add battlRound check to landparatroopers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb8c23dfbaefd5ce48a2c7f5bd31749e9c0712a5", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/fb8c23dfbaefd5ce48a2c7f5bd31749e9c0712a5", "committedDate": "2020-07-02T19:41:35Z", "message": "Convert ClearAaCasualties and isolate the old steps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96eb94d7fb6216dd6f4a8abaed71195a07f8bafa", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/96eb94d7fb6216dd6f4a8abaed71195a07f8bafa", "committedDate": "2020-07-02T20:49:05Z", "message": "Sort the steps using getOrder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be0258b40ed2caaeedc881ff7a08913614b8bbdf", "author": {"user": {"login": "tripleabuilderbot", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/be0258b40ed2caaeedc881ff7a08913614b8bbdf", "committedDate": "2020-07-02T20:51:31Z", "message": "Auto-Formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2945913f41e71cd58857d520e7c0486f3d5582d2", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/2945913f41e71cd58857d520e7c0486f3d5582d2", "committedDate": "2020-07-02T20:50:12Z", "message": "Change the comment from Removed to Deprecated"}, "afterCommit": {"oid": "be0258b40ed2caaeedc881ff7a08913614b8bbdf", "author": {"user": {"login": "tripleabuilderbot", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/be0258b40ed2caaeedc881ff7a08913614b8bbdf", "committedDate": "2020-07-02T20:51:31Z", "message": "Auto-Formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0Mzc4Njgy", "url": "https://github.com/triplea-game/triplea/pull/7008#pullrequestreview-444378682", "createdAt": "2020-07-08T02:56:28Z", "commit": {"oid": "be0258b40ed2caaeedc881ff7a08913614b8bbdf"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMjo1NjoyOFrOGuWUfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwMzoxMjowNlrOGuWjVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1MzM3Mw==", "bodyText": "This interface is certainly becoming quite the list  \ud83d\ude01\nWould you agree that a javadoc could help clarify these methods? For example, when is markNoMovementLeft called, what does it mean to invoke that? I'm not sure if this method is invoked to indicate there is no movement left, or invoked to flag that there is no movement left. (Are we responding to the event, or are we triggering the event?)", "url": "https://github.com/triplea-game/triplea/pull/7008#discussion_r451253373", "createdAt": "2020-07-08T02:56:28Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/BattleActions.java", "diffHunk": "@@ -23,6 +23,15 @@ void queryRetreat(\n \n   void fireNavalBombardment(IDelegateBridge bridge);\n \n+  void landParatroopers(\n+      IDelegateBridge bridge, Collection<Unit> airTransports, Collection<Unit> dependents);\n+\n+  void removeNonCombatants(IDelegateBridge bridge);\n+\n+  void markNoMovementLeft(IDelegateBridge bridge);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0258b40ed2caaeedc881ff7a08913614b8bbdf"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1MzgzNA==", "bodyText": "While this is an existing method, perhaps it's a good time to clarify it?\nIt's not clear here if we are clearing the \"damagedChangesInto\" units or are applying that.\nPerhaps this would be better called clearWaitingToDieAndApplyDamagedUnitConversions.\nEven better, could we break this up into two steps? That would be a much better SRP.", "url": "https://github.com/triplea-game/triplea/pull/7008#discussion_r451253834", "createdAt": "2020-07-08T02:58:12Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/BattleActions.java", "diffHunk": "@@ -23,6 +23,15 @@ void queryRetreat(\n \n   void fireNavalBombardment(IDelegateBridge bridge);\n \n+  void landParatroopers(\n+      IDelegateBridge bridge, Collection<Unit> airTransports, Collection<Unit> dependents);\n+\n+  void removeNonCombatants(IDelegateBridge bridge);\n+\n+  void markNoMovementLeft(IDelegateBridge bridge);\n+\n+  void clearWaitingToDieAndDamagedChangesInto(IDelegateBridge bridge);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0258b40ed2caaeedc881ff7a08913614b8bbdf"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NDA5NQ==", "bodyText": "This list is looking good, it is making the control flow certainly more explicit and adding a layer of useful abstraction that informs you at a high level what the game sequence will be. I think this kind of change does make it easier to understand and maintain the code \ud83d\udc4d", "url": "https://github.com/triplea-game/triplea/pull/7008#discussion_r451254095", "createdAt": "2020-07-08T02:59:19Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/MustFightBattle.java", "diffHunk": "@@ -1067,27 +1038,39 @@ private void pushFightLoopOnStack(final boolean firstRun) {\n    * still needed. They can be safely removed once save compatibility can be broken.\n    */\n   @VisibleForTesting\n-  public List<IExecutable> getBattleExecutables(final boolean firstRun) {\n+  public List<IExecutable> getBattleExecutables() {\n     final List<IExecutable> steps = new ArrayList<>();\n-    addFightStartSteps(firstRun, steps);\n+    addFightStartSteps(steps);\n     addFightSteps(steps);\n     addCheckEndBattleAndRetreatingSteps(steps);\n     return steps;\n   }\n \n-  private void addFightStartSteps(final boolean firstRun, final List<IExecutable> steps) {\n+  private void addFightStartSteps(final List<IExecutable> steps) {\n     if (offensiveAa == null) {\n       updateOffensiveAaUnits();\n     }\n     if (defendingAa == null) {\n       updateDefendingAaUnits();\n     }\n-    final BattleStep navalBombardment = new NavalBombardment(this, this);\n-    final boolean offensiveAa = canFireOffensiveAa();\n-    final boolean defendingAa = canFireDefendingAa();\n-    final BattleStep offensiveAaStep = new OffensiveAaFire(this, this);\n-    final BattleStep defensiveAaStep = new DefensiveAaFire(this, this);\n-    steps.add(offensiveAaStep);\n+    final List<BattleStep> startSteps =\n+        List.of(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0258b40ed2caaeedc881ff7a08913614b8bbdf"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NDUxMg==", "bodyText": "(no-action-needed)   Nit, I suppose a more functional style would inline this list. From that perspective, I think it's a bit more clear the \"update*AAUnits\" calls are side-effects that probably should not be part of this method.", "url": "https://github.com/triplea-game/triplea/pull/7008#discussion_r451254512", "createdAt": "2020-07-08T03:01:00Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/MustFightBattle.java", "diffHunk": "@@ -1067,27 +1038,39 @@ private void pushFightLoopOnStack(final boolean firstRun) {\n    * still needed. They can be safely removed once save compatibility can be broken.\n    */\n   @VisibleForTesting\n-  public List<IExecutable> getBattleExecutables(final boolean firstRun) {\n+  public List<IExecutable> getBattleExecutables() {\n     final List<IExecutable> steps = new ArrayList<>();\n-    addFightStartSteps(firstRun, steps);\n+    addFightStartSteps(steps);\n     addFightSteps(steps);\n     addCheckEndBattleAndRetreatingSteps(steps);\n     return steps;\n   }\n \n-  private void addFightStartSteps(final boolean firstRun, final List<IExecutable> steps) {\n+  private void addFightStartSteps(final List<IExecutable> steps) {\n     if (offensiveAa == null) {\n       updateOffensiveAaUnits();\n     }\n     if (defendingAa == null) {\n       updateDefendingAaUnits();\n     }\n-    final BattleStep navalBombardment = new NavalBombardment(this, this);\n-    final boolean offensiveAa = canFireOffensiveAa();\n-    final boolean defendingAa = canFireDefendingAa();\n-    final BattleStep offensiveAaStep = new OffensiveAaFire(this, this);\n-    final BattleStep defensiveAaStep = new DefensiveAaFire(this, this);\n-    steps.add(offensiveAaStep);\n+    final List<BattleStep> startSteps =\n+        List.of(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NDA5NQ=="}, "originalCommit": {"oid": "be0258b40ed2caaeedc881ff7a08913614b8bbdf"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NTAyNg==", "bodyText": "style-nit, the intermediate variable is not really needed here.\nEG:\n new LandParatroopers(MustFightBattle.this, MustFightBattle.this)\n        .execute(stack, bridge);\n\nDo you have a strong preference for the intermediate variable?", "url": "https://github.com/triplea-game/triplea/pull/7008#discussion_r451255026", "createdAt": "2020-07-08T03:03:03Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/MustFightBattle.java", "diffHunk": "@@ -1142,35 +1124,38 @@ public void execute(final ExecutionStack stack, final IDelegateBridge bridge) {\n         navalBombardment.execute(stack, bridge);\n       }\n     };\n-    if (firstRun) {\n-      steps.add(\n-          new IExecutable() {\n-            private static final long serialVersionUID = 3389635558184415797L;\n+    // Removed in 2.1\n+    new IExecutable() {\n+      private static final long serialVersionUID = 3389635558184415797L;\n \n-            @Override\n-            public void execute(final ExecutionStack stack, final IDelegateBridge bridge) {\n-              removeNonCombatants(bridge);\n-            }\n-          });\n-      steps.add(\n-          new LandParatroopers() {\n-            private static final long serialVersionUID = 7193353768857658286L;\n+      @Override\n+      public void execute(final ExecutionStack stack, final IDelegateBridge bridge) {\n+        final BattleStep removeNonCombatants = new RemoveNonCombatants(MustFightBattle.this);\n+        removeNonCombatants.execute(stack, bridge);\n+      }\n+    };\n+    // Removed in 2.1\n+    new IExecutable() {\n+      private static final long serialVersionUID = 7193353768857658286L;\n \n-            @Override\n-            public void execute(final ExecutionStack stack, final IDelegateBridge bridge) {\n-              landParatroops(bridge);\n-            }\n-          });\n-      steps.add(\n-          new IExecutable() {\n-            private static final long serialVersionUID = -6676316363537467594L;\n+      @Override\n+      public void execute(final ExecutionStack stack, final IDelegateBridge bridge) {\n+        final BattleStep landParatroopers =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0258b40ed2caaeedc881ff7a08913614b8bbdf"}, "originalPosition": 256}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NTc2MA==", "bodyText": "I wonder if this would be more conventional as a constructor.\nIs there any reason to not make this a constructor?", "url": "https://github.com/triplea-game/triplea/pull/7008#discussion_r451255760", "createdAt": "2020-07-08T03:06:13Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/LandParatroopers.java", "diffHunk": "@@ -0,0 +1,77 @@\n+package games.strategy.triplea.delegate.battle.steps.change;\n+\n+import static games.strategy.triplea.delegate.battle.BattleStepStrings.LAND_PARATROOPS;\n+\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.attachments.TechAttachment;\n+import games.strategy.triplea.delegate.ExecutionStack;\n+import games.strategy.triplea.delegate.Matches;\n+import games.strategy.triplea.delegate.battle.BattleActions;\n+import games.strategy.triplea.delegate.battle.BattleState;\n+import games.strategy.triplea.delegate.battle.steps.BattleStep;\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+import lombok.AllArgsConstructor;\n+import org.triplea.java.collections.CollectionUtils;\n+\n+@AllArgsConstructor\n+public class LandParatroopers implements BattleStep {\n+\n+  private static final long serialVersionUID = 3500647439487948115L;\n+\n+  protected final BattleState battleState;\n+\n+  protected final BattleActions battleActions;\n+\n+  @Override\n+  public List<String> getNames() {\n+    final TransportsAndParatroopers transportsAndParatroopers = getTransportsAndParatroopers();\n+\n+    return transportsAndParatroopers.hasParatroopers() ? List.of(LAND_PARATROOPS) : List.of();\n+  }\n+\n+  @Override\n+  public Order getOrder() {\n+    return Order.LAND_PARATROOPERS;\n+  }\n+\n+  @Override\n+  public void execute(final ExecutionStack stack, final IDelegateBridge bridge) {\n+    final TransportsAndParatroopers transportsAndParatroopers = getTransportsAndParatroopers();\n+\n+    if (transportsAndParatroopers.hasParatroopers()) {\n+      battleActions.landParatroopers(\n+          bridge, transportsAndParatroopers.airTransports, transportsAndParatroopers.paratroopers);\n+    }\n+  }\n+\n+  private static class TransportsAndParatroopers {\n+    private Collection<Unit> airTransports = new ArrayList<>();\n+    private Collection<Unit> paratroopers = new ArrayList<>();\n+\n+    private boolean hasParatroopers() {\n+      return !airTransports.isEmpty() && !paratroopers.isEmpty();\n+    }\n+  }\n+\n+  private TransportsAndParatroopers getTransportsAndParatroopers() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0258b40ed2caaeedc881ff7a08913614b8bbdf"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI1NzE3Mg==", "bodyText": "Is there a plan to move this method to the step logic, or will it be here long-term?\nIt seems like if we are adding a step from MustFightBattle that then does all its work by invoking a method on MustFightBattle that we are not really benefiting a lot and have a lot of indirection. Hence I wonder if this is a temporary situation or perhaps there is a reason this can't be moved?", "url": "https://github.com/triplea-game/triplea/pull/7008#discussion_r451257172", "createdAt": "2020-07-08T03:12:06Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/MustFightBattle.java", "diffHunk": "@@ -1394,29 +1380,25 @@ private void removeNonCombatants(final IDelegateBridge bridge) {\n     return unitList;\n   }\n \n-  private void landParatroops(final IDelegateBridge bridge) {\n-    if (TechAttachment.isAirTransportable(attacker)) {\n-      final Collection<Unit> airTransports =\n-          CollectionUtils.getMatches(battleSite.getUnits(), Matches.unitIsAirTransport());\n-      if (!airTransports.isEmpty()) {\n-        final Collection<Unit> dependents = getDependentUnits(airTransports);\n-        if (!dependents.isEmpty()) {\n-          final CompositeChange change = new CompositeChange();\n-          // remove dependency from paratroopers by unloading the air transports\n-          for (final Unit unit : dependents) {\n-            change.add(TransportTracker.unloadAirTransportChange(unit, battleSite, false));\n-          }\n-          bridge.addChange(change);\n-          // remove bombers from dependentUnits\n-          for (final Unit unit : airTransports) {\n-            dependentUnits.remove(unit);\n-          }\n-        }\n-      }\n+  @Override\n+  public void landParatroopers(\n+      final IDelegateBridge bridge,\n+      final Collection<Unit> airTransports,\n+      final Collection<Unit> dependents) {\n+    final CompositeChange change = new CompositeChange();\n+    // remove dependency from paratroopers by unloading the air transports\n+    for (final Unit unit : dependents) {\n+      change.add(TransportTracker.unloadAirTransportChange(unit, battleSite, false));\n+    }\n+    bridge.addChange(change);\n+    // remove bombers from dependentUnits\n+    for (final Unit unit : airTransports) {\n+      dependentUnits.remove(unit);\n     }\n   }\n \n-  private void markNoMovementLeft(final IDelegateBridge bridge) {\n+  @Override\n+  public void markNoMovementLeft(final IDelegateBridge bridge) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0258b40ed2caaeedc881ff7a08913614b8bbdf"}, "originalPosition": 333}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2bdf248354d041f10834313ed4a24402ea2e5c4", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/b2bdf248354d041f10834313ed4a24402ea2e5c4", "committedDate": "2020-07-08T04:20:09Z", "message": "Move logic to build TransportsAndParatroopers into its own constructor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0NDAzOTcz", "url": "https://github.com/triplea-game/triplea/pull/7008#pullrequestreview-444403973", "createdAt": "2020-07-08T04:26:40Z", "commit": {"oid": "b2bdf248354d041f10834313ed4a24402ea2e5c4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNDoyNjo0MFrOGuXp8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNDoyNjo0MFrOGuXp8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTI3NTI1MQ==", "bodyText": "Codacy found an issue: Non-static initializers are confusing", "url": "https://github.com/triplea-game/triplea/pull/7008#discussion_r451275251", "createdAt": "2020-07-08T04:26:40Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/MustFightBattle.java", "diffHunk": "@@ -1067,27 +1038,39 @@ private void pushFightLoopOnStack(final boolean firstRun) {\n    * still needed. They can be safely removed once save compatibility can be broken.\n    */\n   @VisibleForTesting\n-  public List<IExecutable> getBattleExecutables(final boolean firstRun) {\n+  public List<IExecutable> getBattleExecutables() {\n     final List<IExecutable> steps = new ArrayList<>();\n-    addFightStartSteps(firstRun, steps);\n+    addFightStartSteps(steps);\n     addFightSteps(steps);\n     addCheckEndBattleAndRetreatingSteps(steps);\n     return steps;\n   }\n \n-  private void addFightStartSteps(final boolean firstRun, final List<IExecutable> steps) {\n+  private void addFightStartSteps(final List<IExecutable> steps) {\n     if (offensiveAa == null) {\n       updateOffensiveAaUnits();\n     }\n     if (defendingAa == null) {\n       updateDefendingAaUnits();\n     }\n-    final BattleStep navalBombardment = new NavalBombardment(this, this);\n-    final boolean offensiveAa = canFireOffensiveAa();\n-    final boolean defendingAa = canFireDefendingAa();\n-    final BattleStep offensiveAaStep = new OffensiveAaFire(this, this);\n-    final BattleStep defensiveAaStep = new DefensiveAaFire(this, this);\n-    steps.add(offensiveAaStep);\n+    final List<BattleStep> startSteps =\n+        List.of(\n+            new OffensiveAaFire(this, this),\n+            new DefensiveAaFire(this, this),\n+            new ClearAaCasualties(this, this),\n+            new NavalBombardment(this, this),\n+            new RemoveNonCombatants(this),\n+            new LandParatroopers(this, this),\n+            new MarkNoMovementLeft(this, this));\n+    steps.addAll(\n+        startSteps.stream()\n+            .sorted(Comparator.comparing(BattleStep::getOrder))\n+            .collect(Collectors.toList()));\n+  }\n+\n+  // the IExecutables in this block can be deleted when save compatibility can be broken\n+  {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2bdf248354d041f10834313ed4a24402ea2e5c4"}, "originalPosition": 152}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3324, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}