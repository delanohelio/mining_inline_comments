{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MzYxMjY2", "number": 5953, "reviewThreads": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzoxMlrODgh48g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMzowMDo0N1rODg4nNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2Mjc0OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/data/properties/GameProperties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzoxMlrOFqyFzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzoxMlrOFqyFzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTE5Nw==", "bodyText": "This adds flexibility if we want to load an integer property as a string, otherwise we get a cast exception", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405197", "createdAt": "2020-02-18T00:23:12Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/data/properties/GameProperties.java", "diffHunk": "@@ -99,7 +99,7 @@ public String get(final String key, final String defaultValue) {\n     if (value == null) {\n       return defaultValue;\n     }\n-    return (String) value;\n+    return String.valueOf(value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2MzMzOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0NlrOFqyGJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0NlrOFqyGJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTI4NQ==", "bodyText": "Similar blocks of code found in 4 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405285", "createdAt": "2020-02-18T00:23:46Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);\n+\n+    final int bottomSpace = 1;\n+    final int labelSpace = 2;\n+    int row = 0;\n+\n+    add(\n+        forumLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    viewModel.getForumSelectionOptions().forEach(forums::addItem);\n+    forums.addActionListener(e -> viewModel.setForumSelection((String) forums.getSelectedItem()));\n+    forums.setSelectedItem(viewModel.getForumSelection());\n+    add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2MzM2OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0NlrOFqyGKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0NlrOFqyGKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTI4OA==", "bodyText": "Similar blocks of code found in 4 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405288", "createdAt": "2020-02-18T00:23:46Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);\n+\n+    final int bottomSpace = 1;\n+    final int labelSpace = 2;\n+    int row = 0;\n+\n+    add(\n+        forumLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    viewModel.getForumSelectionOptions().forEach(forums::addItem);\n+    forums.addActionListener(e -> viewModel.setForumSelection((String) forums.getSelectedItem()));\n+    forums.setSelectedItem(viewModel.getForumSelection());\n+    add(\n+        forums,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    row++;\n+    add(\n+        topicIdLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    DocumentListenerBuilder.attachDocumentListener(\n+        topicIdField, () -> viewModel.setTopicId(topicIdField.getText().trim()));\n+    add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2MzM3OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0NlrOFqyGKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0NlrOFqyGKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTI5MA==", "bodyText": "Similar blocks of code found in 3 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405290", "createdAt": "2020-02-18T00:23:46Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);\n+\n+    final int bottomSpace = 1;\n+    final int labelSpace = 2;\n+    int row = 0;\n+\n+    add(\n+        forumLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    viewModel.getForumSelectionOptions().forEach(forums::addItem);\n+    forums.addActionListener(e -> viewModel.setForumSelection((String) forums.getSelectedItem()));\n+    forums.setSelectedItem(viewModel.getForumSelection());\n+    add(\n+        forums,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    row++;\n+    add(\n+        topicIdLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    DocumentListenerBuilder.attachDocumentListener(\n+        topicIdField, () -> viewModel.setTopicId(topicIdField.getText().trim()));\n+    add(\n+        topicIdField,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    viewPosts.addActionListener(e -> viewModel.viewForumButtonClicked());\n+    add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2MzM4OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0NlrOFqyGKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0NlrOFqyGKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTI5MQ==", "bodyText": "Identical blocks of code found in 3 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405291", "createdAt": "2020-02-18T00:23:46Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);\n+\n+    final int bottomSpace = 1;\n+    final int labelSpace = 2;\n+    int row = 0;\n+\n+    add(\n+        forumLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    viewModel.getForumSelectionOptions().forEach(forums::addItem);\n+    forums.addActionListener(e -> viewModel.setForumSelection((String) forums.getSelectedItem()));\n+    forums.setSelectedItem(viewModel.getForumSelection());\n+    add(\n+        forums,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    row++;\n+    add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2MzQwOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0NlrOFqyGLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0NlrOFqyGLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTI5Mw==", "bodyText": "Identical blocks of code found in 3 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405293", "createdAt": "2020-02-18T00:23:46Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);\n+\n+    final int bottomSpace = 1;\n+    final int labelSpace = 2;\n+    int row = 0;\n+\n+    add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2MzQxOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0N1rOFqyGLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0N1rOFqyGLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTI5NQ==", "bodyText": "Similar blocks of code found in 3 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405295", "createdAt": "2020-02-18T00:23:47Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);\n+\n+    final int bottomSpace = 1;\n+    final int labelSpace = 2;\n+    int row = 0;\n+\n+    add(\n+        forumLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    viewModel.getForumSelectionOptions().forEach(forums::addItem);\n+    forums.addActionListener(e -> viewModel.setForumSelection((String) forums.getSelectedItem()));\n+    forums.setSelectedItem(viewModel.getForumSelection());\n+    add(\n+        forums,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    row++;\n+    add(\n+        topicIdLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    DocumentListenerBuilder.attachDocumentListener(\n+        topicIdField, () -> viewModel.setTopicId(topicIdField.getText().trim()));\n+    add(\n+        topicIdField,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    viewPosts.addActionListener(e -> viewModel.viewForumButtonClicked());\n+    add(\n+        viewPosts,\n+        new GridBagConstraints(\n+            2,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 2, bottomSpace, 0),\n+            0,\n+            0));\n+    row++;\n+    add(\n+        new JLabel(\"\"),\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+    row++;\n+\n+    attachSaveGameToSummary.addChangeListener(\n+        e -> viewModel.setAttachSaveGameToSummary(attachSaveGameToSummary.isSelected()));\n+    add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2MzQ0OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0N1rOFqyGMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0N1rOFqyGMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTI5Nw==", "bodyText": "Similar blocks of code found in 3 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405297", "createdAt": "2020-02-18T00:23:47Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);\n+\n+    final int bottomSpace = 1;\n+    final int labelSpace = 2;\n+    int row = 0;\n+\n+    add(\n+        forumLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    viewModel.getForumSelectionOptions().forEach(forums::addItem);\n+    forums.addActionListener(e -> viewModel.setForumSelection((String) forums.getSelectedItem()));\n+    forums.setSelectedItem(viewModel.getForumSelection());\n+    add(\n+        forums,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    row++;\n+    add(\n+        topicIdLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    DocumentListenerBuilder.attachDocumentListener(\n+        topicIdField, () -> viewModel.setTopicId(topicIdField.getText().trim()));\n+    add(\n+        topicIdField,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    viewPosts.addActionListener(e -> viewModel.viewForumButtonClicked());\n+    add(\n+        viewPosts,\n+        new GridBagConstraints(\n+            2,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 2, bottomSpace, 0),\n+            0,\n+            0));\n+    row++;\n+    add(\n+        new JLabel(\"\"),\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+    row++;\n+\n+    attachSaveGameToSummary.addChangeListener(\n+        e -> viewModel.setAttachSaveGameToSummary(attachSaveGameToSummary.isSelected()));\n+    add(\n+        attachSaveGameToSummary,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            2,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, 0, 0),\n+            0,\n+            0));\n+\n+    testForum.addActionListener(e -> viewModel.testPostButtonClicked());\n+    add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 153}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2MzQ1OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0N1rOFqyGMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0N1rOFqyGMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTI5OA==", "bodyText": "Similar blocks of code found in 3 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405298", "createdAt": "2020-02-18T00:23:47Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);\n+\n+    final int bottomSpace = 1;\n+    final int labelSpace = 2;\n+    int row = 0;\n+\n+    add(\n+        forumLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    viewModel.getForumSelectionOptions().forEach(forums::addItem);\n+    forums.addActionListener(e -> viewModel.setForumSelection((String) forums.getSelectedItem()));\n+    forums.setSelectedItem(viewModel.getForumSelection());\n+    add(\n+        forums,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    row++;\n+    add(\n+        topicIdLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    DocumentListenerBuilder.attachDocumentListener(\n+        topicIdField, () -> viewModel.setTopicId(topicIdField.getText().trim()));\n+    add(\n+        topicIdField,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    viewPosts.addActionListener(e -> viewModel.viewForumButtonClicked());\n+    add(\n+        viewPosts,\n+        new GridBagConstraints(\n+            2,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 2, bottomSpace, 0),\n+            0,\n+            0));\n+    row++;\n+    add(\n+        new JLabel(\"\"),\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+    row++;\n+\n+    attachSaveGameToSummary.addChangeListener(\n+        e -> viewModel.setAttachSaveGameToSummary(attachSaveGameToSummary.isSelected()));\n+    add(\n+        attachSaveGameToSummary,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            2,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, 0, 0),\n+            0,\n+            0));\n+\n+    testForum.addActionListener(e -> viewModel.testPostButtonClicked());\n+    add(\n+        testForum,\n+        new GridBagConstraints(\n+            2,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, 0, 0),\n+            0,\n+            0));\n+    row++;\n+    alsoPostAfterCombatMove.addActionListener(\n+        e -> viewModel.setAlsoPostAfterCombatMove(alsoPostAfterCombatMove.isSelected()));\n+    add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 170}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2MzQ3OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0N1rOFqyGNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyMzo0N1rOFqyGNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTMwMA==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405300", "createdAt": "2020-02-18T00:23:47Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);\n+\n+    final int bottomSpace = 1;\n+    final int labelSpace = 2;\n+    int row = 0;\n+\n+    add(\n+        forumLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    viewModel.getForumSelectionOptions().forEach(forums::addItem);\n+    forums.addActionListener(e -> viewModel.setForumSelection((String) forums.getSelectedItem()));\n+    forums.setSelectedItem(viewModel.getForumSelection());\n+    add(\n+        forums,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    row++;\n+    add(\n+        topicIdLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    DocumentListenerBuilder.attachDocumentListener(\n+        topicIdField, () -> viewModel.setTopicId(topicIdField.getText().trim()));\n+    add(\n+        topicIdField,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    viewPosts.addActionListener(e -> viewModel.viewForumButtonClicked());\n+    add(\n+        viewPosts,\n+        new GridBagConstraints(\n+            2,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 2, bottomSpace, 0),\n+            0,\n+            0));\n+    row++;\n+    add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2Mzg1OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/mc/GameSelectorModel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyNDoxMlrOFqyGZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyNDoxMlrOFqyGZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTM0OA==", "bodyText": "GameData may be nulllable, marking it allows us to get IDE warnings for potential NPE", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405348", "createdAt": "2020-02-18T00:24:12Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/mc/GameSelectorModel.java", "diffHunk": "@@ -28,7 +28,7 @@\n  */\n @Log\n public class GameSelectorModel extends Observable {\n-  @Getter private GameData gameData = null;\n+  @Nullable @Getter private GameData gameData = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2NDExOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/SetupPanel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyNDoyNVrOFqyGhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyNDoyNVrOFqyGhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTM4Mw==", "bodyText": "Raising scope now that PBEMSetupPanel is in a different package", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405383", "createdAt": "2020-02-18T00:24:25Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/SetupPanel.java", "diffHunk": "@@ -33,7 +33,7 @@ public void setPanelChangedListener(final Consumer<SetupPanel> listener) {\n     this.listener = listener;\n   }\n \n-  void fireListener() {\n+  public void fireListener() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2NDY3OnYy", "diffSide": "LEFT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/EditorPanel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyNTowM1rOFqyG3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyNTowM1rOFqyG3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTQ2OQ==", "bodyText": "Layout is moved to children classes, 'setLabelValid' is moved to SwingComponents. The two changes eliminates the need for this base-class.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405469", "createdAt": "2020-02-18T00:25:03Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/EditorPanel.java", "diffHunk": "@@ -1,34 +0,0 @@\n-package games.strategy.engine.framework.startup.ui.editors;\n-\n-import java.awt.Color;\n-import java.awt.GridBagLayout;\n-import javax.swing.JLabel;\n-import javax.swing.JPanel;\n-\n-/**\n- * Helper Base class for Editors, that provides a basic collection of useful operations.\n- *\n- * <p>This class used to have a legitimate reason to be a superclass of editors, but making all\n- * methods in this class static, and converting it to a utility class is probably a good thing to\n- * do.\n- */\n-abstract class EditorPanel extends JPanel {\n-  private static final long serialVersionUID = 8156959717037201321L;\n-  private final Color labelColor = new JLabel().getForeground();\n-\n-  EditorPanel() {\n-    super(new GridBagLayout());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2NTg0OnYy", "diffSide": "LEFT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyNjowMVrOFqyHeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyNjowMVrOFqyHeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTYyNA==", "bodyText": "Most of the code in this class is moved but not modified. There are enough changes that git thinks it is a new file post-move, see individual commits for better diff'ing of updates.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405624", "createdAt": "2020-02-18T00:26:01Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/ForumPosterEditor.java", "diffHunk": "@@ -1,296 +0,0 @@\n-package games.strategy.engine.framework.startup.ui.editors;\n-\n-import com.google.common.annotations.VisibleForTesting;\n-import com.google.common.base.Preconditions;\n-import games.strategy.engine.ClientContext;\n-import games.strategy.engine.data.properties.GameProperties;\n-import games.strategy.engine.framework.GameRunner;\n-import games.strategy.engine.posted.game.pbf.IForumPoster;\n-import games.strategy.engine.posted.game.pbf.NodeBbForumPoster;\n-import java.awt.Graphics;\n-import java.awt.GridBagConstraints;\n-import java.awt.Insets;\n-import java.awt.image.BufferedImage;\n-import java.io.File;\n-import java.io.IOException;\n-import java.util.concurrent.CompletableFuture;\n-import java.util.concurrent.ExecutionException;\n-import java.util.logging.Level;\n-import javax.imageio.ImageIO;\n-import javax.swing.JButton;\n-import javax.swing.JCheckBox;\n-import javax.swing.JComboBox;\n-import javax.swing.JLabel;\n-import javax.swing.JOptionPane;\n-import javax.swing.JTextField;\n-import javax.swing.SwingUtilities;\n-import lombok.extern.java.Log;\n-import org.triplea.java.TimeManager;\n-import org.triplea.swing.DocumentListenerBuilder;\n-import org.triplea.swing.ProgressWindow;\n-\n-/** A class for selecting which Forum poster to use. */\n-@Log\n-public class ForumPosterEditor extends EditorPanel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2NzAyOnYy", "diffSide": "LEFT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyNjo1OVrOFqyIHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyNjo1OVrOFqyIHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTc4OQ==", "bodyText": "Listener setup is inlined to constructor to update viewmodel based on component state, otherwise all other methods in this class are moved to 'viewModel' and/or broken up further.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405789", "createdAt": "2020-02-18T00:26:59Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/ForumPosterEditor.java", "diffHunk": "@@ -1,296 +0,0 @@\n-package games.strategy.engine.framework.startup.ui.editors;\n-\n-import com.google.common.annotations.VisibleForTesting;\n-import com.google.common.base.Preconditions;\n-import games.strategy.engine.ClientContext;\n-import games.strategy.engine.data.properties.GameProperties;\n-import games.strategy.engine.framework.GameRunner;\n-import games.strategy.engine.posted.game.pbf.IForumPoster;\n-import games.strategy.engine.posted.game.pbf.NodeBbForumPoster;\n-import java.awt.Graphics;\n-import java.awt.GridBagConstraints;\n-import java.awt.Insets;\n-import java.awt.image.BufferedImage;\n-import java.io.File;\n-import java.io.IOException;\n-import java.util.concurrent.CompletableFuture;\n-import java.util.concurrent.ExecutionException;\n-import java.util.logging.Level;\n-import javax.imageio.ImageIO;\n-import javax.swing.JButton;\n-import javax.swing.JCheckBox;\n-import javax.swing.JComboBox;\n-import javax.swing.JLabel;\n-import javax.swing.JOptionPane;\n-import javax.swing.JTextField;\n-import javax.swing.SwingUtilities;\n-import lombok.extern.java.Log;\n-import org.triplea.java.TimeManager;\n-import org.triplea.swing.DocumentListenerBuilder;\n-import org.triplea.swing.ProgressWindow;\n-\n-/** A class for selecting which Forum poster to use. */\n-@Log\n-public class ForumPosterEditor extends EditorPanel {\n-  private static final long serialVersionUID = -6069315084412575053L;\n-  private final JButton viewPosts = new JButton(\"View Forum\");\n-  private final JButton testForum = new JButton(\"Test Post\");\n-  private final JTextField topicIdField = new JTextField();\n-  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n-  private final JLabel forumLabel = new JLabel(\"Forums:\");\n-  private final JCheckBox includeSaveGame = new JCheckBox(\"Attach save game to summary\");\n-  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n-  private final JComboBox<String> forums = new JComboBox<>();\n-  private final Runnable readyCallback;\n-\n-  public ForumPosterEditor(final Runnable readyCallback) {\n-    this.readyCallback = readyCallback;\n-    final int bottomSpace = 1;\n-    final int labelSpace = 2;\n-    int row = 0;\n-    NodeBbForumPoster.availablePosters().forEach(forums::addItem);\n-    add(\n-        forumLabel,\n-        new GridBagConstraints(\n-            0,\n-            row,\n-            1,\n-            1,\n-            0,\n-            0,\n-            GridBagConstraints.WEST,\n-            GridBagConstraints.NONE,\n-            new Insets(0, 0, bottomSpace, labelSpace),\n-            0,\n-            0));\n-    add(\n-        forums,\n-        new GridBagConstraints(\n-            1,\n-            row,\n-            1,\n-            1,\n-            1.0,\n-            0,\n-            GridBagConstraints.EAST,\n-            GridBagConstraints.HORIZONTAL,\n-            new Insets(0, 0, bottomSpace, 0),\n-            0,\n-            0));\n-    row++;\n-    add(\n-        topicIdLabel,\n-        new GridBagConstraints(\n-            0,\n-            row,\n-            1,\n-            1,\n-            0,\n-            0,\n-            GridBagConstraints.WEST,\n-            GridBagConstraints.NONE,\n-            new Insets(0, 0, bottomSpace, labelSpace),\n-            0,\n-            0));\n-    add(\n-        topicIdField,\n-        new GridBagConstraints(\n-            1,\n-            row,\n-            1,\n-            1,\n-            1.0,\n-            0,\n-            GridBagConstraints.EAST,\n-            GridBagConstraints.HORIZONTAL,\n-            new Insets(0, 0, bottomSpace, 0),\n-            0,\n-            0));\n-    add(\n-        viewPosts,\n-        new GridBagConstraints(\n-            2,\n-            row,\n-            1,\n-            1,\n-            0,\n-            0,\n-            GridBagConstraints.EAST,\n-            GridBagConstraints.NONE,\n-            new Insets(0, 2, bottomSpace, 0),\n-            0,\n-            0));\n-    row++;\n-    add(\n-        new JLabel(\"\"),\n-        new GridBagConstraints(\n-            0,\n-            row,\n-            1,\n-            1,\n-            0,\n-            0,\n-            GridBagConstraints.WEST,\n-            GridBagConstraints.NONE,\n-            new Insets(0, 0, bottomSpace, labelSpace),\n-            0,\n-            0));\n-    row++;\n-    add(\n-        includeSaveGame,\n-        new GridBagConstraints(\n-            0,\n-            row,\n-            2,\n-            1,\n-            0,\n-            0,\n-            GridBagConstraints.WEST,\n-            GridBagConstraints.NONE,\n-            new Insets(0, 0, 0, 0),\n-            0,\n-            0));\n-    add(\n-        testForum,\n-        new GridBagConstraints(\n-            2,\n-            row,\n-            1,\n-            1,\n-            0,\n-            0,\n-            GridBagConstraints.EAST,\n-            GridBagConstraints.NONE,\n-            new Insets(0, 0, 0, 0),\n-            0,\n-            0));\n-    row++;\n-    add(\n-        alsoPostAfterCombatMove,\n-        new GridBagConstraints(\n-            0,\n-            row,\n-            2,\n-            1,\n-            0,\n-            0,\n-            GridBagConstraints.WEST,\n-            GridBagConstraints.NONE,\n-            new Insets(0, 0, 0, 0),\n-            0,\n-            0));\n-    setupListeners();\n-  }\n-\n-  private void checkFieldsAndNotify() {\n-    areFieldsValid();\n-    readyCallback.run();\n-  }\n-\n-  /** Configures the listeners for the gui components. */\n-  private void setupListeners() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 191}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2NzUyOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/DiceServerEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyNzoyN1rOFqyIZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyNzoyN1rOFqyIZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNTg2Mg==", "bodyText": "Mostly just an API update here, as highlightLabelIfNotValid no longer returns a value.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380405862", "createdAt": "2020-02-18T00:27:27Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/DiceServerEditor.java", "diffHunk": "@@ -223,13 +225,12 @@ private void checkFieldsAndNotify() {\n \n   public boolean areFieldsValid() {\n     final boolean toValid =\n-        setLabelValid(\n-            !toAddress.getText().isEmpty() && PlayerEmailValidation.isValid(toAddress.getText()),\n-            toLabel);\n+        !toAddress.getText().isEmpty() && PlayerEmailValidation.isValid(toAddress.getText());\n+    SwingComponents.highlightLabelIfNotValid(toValid, toLabel);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2ODUxOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyODoxOFrOFqyJAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyODoxOFrOFqyJAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNjAxOA==", "bodyText": "Most of the code in this class is original, note anywhere there is a call to viewModel, that will be new as well as the 'updateState' method from implements ViewModelListener<ForumPosterEditorViewModel>", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380406018", "createdAt": "2020-02-18T00:28:18Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2ODg3OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyODozOVrOFqyJNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyODozOVrOFqyJNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNjA3MQ==", "bodyText": "Notice that all other methods in this view class are removed, we just have a viewModelChanged method now.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380406071", "createdAt": "2020-02-18T00:28:39Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);\n+\n+    final int bottomSpace = 1;\n+    final int labelSpace = 2;\n+    int row = 0;\n+\n+    add(\n+        forumLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    viewModel.getForumSelectionOptions().forEach(forums::addItem);\n+    forums.addActionListener(e -> viewModel.setForumSelection((String) forums.getSelectedItem()));\n+    forums.setSelectedItem(viewModel.getForumSelection());\n+    add(\n+        forums,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    row++;\n+    add(\n+        topicIdLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    DocumentListenerBuilder.attachDocumentListener(\n+        topicIdField, () -> viewModel.setTopicId(topicIdField.getText().trim()));\n+    add(\n+        topicIdField,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    viewPosts.addActionListener(e -> viewModel.viewForumButtonClicked());\n+    add(\n+        viewPosts,\n+        new GridBagConstraints(\n+            2,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 2, bottomSpace, 0),\n+            0,\n+            0));\n+    row++;\n+    add(\n+        new JLabel(\"\"),\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+    row++;\n+\n+    attachSaveGameToSummary.addChangeListener(\n+        e -> viewModel.setAttachSaveGameToSummary(attachSaveGameToSummary.isSelected()));\n+    add(\n+        attachSaveGameToSummary,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            2,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, 0, 0),\n+            0,\n+            0));\n+\n+    testForum.addActionListener(e -> viewModel.testPostButtonClicked());\n+    add(\n+        testForum,\n+        new GridBagConstraints(\n+            2,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, 0, 0),\n+            0,\n+            0));\n+    row++;\n+    alsoPostAfterCombatMove.addActionListener(\n+        e -> viewModel.setAlsoPostAfterCombatMove(alsoPostAfterCombatMove.isSelected()));\n+    add(\n+        alsoPostAfterCombatMove,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            2,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, 0, 0),\n+            0,\n+            0));\n+  }\n+\n+  @Override\n+  public void viewModelChanged(final ForumPosterEditorViewModel forumPosterEditorViewModel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 187}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM2OTcwOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyOToxOFrOFqyJrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyOToxOFrOFqyJrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNjE5MQ==", "bodyText": "Important to note:\n\nInitial state is set by getting the view model value\nWe add action listeners to components to update view model to have the latest value set in the UI.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380406191", "createdAt": "2020-02-18T00:29:18Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);\n+\n+    final int bottomSpace = 1;\n+    final int labelSpace = 2;\n+    int row = 0;\n+\n+    add(\n+        forumLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    viewModel.getForumSelectionOptions().forEach(forums::addItem);\n+    forums.addActionListener(e -> viewModel.setForumSelection((String) forums.getSelectedItem()));\n+    forums.setSelectedItem(viewModel.getForumSelection());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM3MDA0OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyOTo0M1rOFqyJ6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDoyOTo0M1rOFqyJ6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNjI1MA==", "bodyText": "View actions, ie: button clicks, are now just simple calls to the view-model.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380406250", "createdAt": "2020-02-18T00:29:43Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditor.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n+import java.awt.Insets;\n+import javax.swing.JButton;\n+import javax.swing.JCheckBox;\n+import javax.swing.JComboBox;\n+import javax.swing.JLabel;\n+import javax.swing.JPanel;\n+import javax.swing.JTextField;\n+import org.triplea.java.ViewModelListener;\n+import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.SwingComponents;\n+\n+/** A class for selecting which Forum poster to use. */\n+class ForumPosterEditor extends JPanel implements ViewModelListener<ForumPosterEditorViewModel> {\n+  private static final long serialVersionUID = -6069315084412575053L;\n+  private final JButton viewPosts = new JButton(\"View Forum\");\n+  private final JButton testForum = new JButton(\"Test Post\");\n+  private final JTextField topicIdField = new JTextField();\n+  private final JLabel topicIdLabel = new JLabel(\"Topic Id:\");\n+  private final JLabel forumLabel = new JLabel(\"Forums:\");\n+  private final JCheckBox attachSaveGameToSummary = new JCheckBox(\"Attach save game to summary\");\n+  private final JCheckBox alsoPostAfterCombatMove = new JCheckBox(\"Also Post After Combat Move\");\n+  private final JComboBox<String> forums = new JComboBox<>();\n+\n+  ForumPosterEditor(final ForumPosterEditorViewModel viewModel) {\n+    super(new GridBagLayout());\n+\n+    viewModel.setView(this);\n+\n+    final int bottomSpace = 1;\n+    final int labelSpace = 2;\n+    int row = 0;\n+\n+    add(\n+        forumLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    viewModel.getForumSelectionOptions().forEach(forums::addItem);\n+    forums.addActionListener(e -> viewModel.setForumSelection((String) forums.getSelectedItem()));\n+    forums.setSelectedItem(viewModel.getForumSelection());\n+    add(\n+        forums,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    row++;\n+    add(\n+        topicIdLabel,\n+        new GridBagConstraints(\n+            0,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, labelSpace),\n+            0,\n+            0));\n+\n+    DocumentListenerBuilder.attachDocumentListener(\n+        topicIdField, () -> viewModel.setTopicId(topicIdField.getText().trim()));\n+    add(\n+        topicIdField,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            1.0,\n+            0,\n+            GridBagConstraints.EAST,\n+            GridBagConstraints.HORIZONTAL,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    viewPosts.addActionListener(e -> viewModel.viewForumButtonClicked());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM3MjY2OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditorViewModel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozMTo1M1rOFqyLVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozMTo1M1rOFqyLVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNjYxNA==", "bodyText": "The only real new logic in this class is to default the forum selection, otherwise all the logic here is extracted from the view class. Notice as well that the button clicks are not here either, those are more properly model methods and we delegate those actions to other components. In this way the view model is responsible for modeling view state, the logic behind view state updates, and for triggering model interactions and forwarding the needed data from view to the model (for example when doing a test post, we trigger the test post method call and we pass the forum selection and forum id).", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380406614", "createdAt": "2020-02-18T00:31:53Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditorViewModel.java", "diffHunk": "@@ -0,0 +1,113 @@\n+package games.strategy.engine.framework.startup.ui.pbem;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM3Mzg0OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/PbemSetupPanel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozMjo0NVrOFqyMCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozMjo0NVrOFqyMCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNjc5NQ==", "bodyText": "This class is just updated to insantiate a view model, pass that to the PBF view, and then instead of interacting with the PBF view for 'are all fields valid', we query the view model instead.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380406795", "createdAt": "2020-02-18T00:32:45Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/PbemSetupPanel.java", "diffHunk": "@@ -44,6 +47,7 @@\n   private final GameSelectorModel gameSelectorModel;\n   private final DiceServerEditor diceServerEditor;\n   private final ForumPosterEditor forumPosterEditor;\n+  private final ForumPosterEditorViewModel forumPosterEditorViewModel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM3NTI5OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/PbemSetupPanel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozMzo0OFrOFqyMyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozMzo0OFrOFqyMyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNjk4Ng==", "bodyText": "Instead of having the view (or view model) set game properties, which is mixing of domains, we instead get data from the view model and this class is now responsible for binding game properties to the properties we have read from UI. This way the UI model is not as tied to the model.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380406986", "createdAt": "2020-02-18T00:33:48Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/PbemSetupPanel.java", "diffHunk": "@@ -184,11 +200,27 @@ public boolean canGameStart() {\n   @Override\n   public void postStartGame() {\n     final GameData data = gameSelectorModel.getGameData();\n+\n+    Preconditions.checkNotNull(\n+        data,\n+        \"Game Data must not be null when starting a game, \"\n+            + \"this error indicates a programming bug that allowed for the start game button to be \"\n+            + \"enabled without first valid game data being loaded. \");\n     if (diceServerEditor.areFieldsValid()) {\n       diceServerEditor.applyToGameProperties(data.getProperties());\n     }\n-    if (forumPosterEditor.areFieldsValid()) {\n-      forumPosterEditor.applyToGameProperties(data.getProperties());\n+    if (forumPosterEditorViewModel.areFieldsValid()) {\n+      final GameProperties properties = data.getProperties();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM3NjE5OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/PbemSetupPanel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozNDozOFrOFqyNWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozNDozOFrOFqyNWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNzEyOA==", "bodyText": "The null assumption for getGameData() is a bit lax, this is an example of 'fail-fast' principle to ensure we have a good error message and secondly to document an assumption that the selector model game data should be set on game launch.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380407128", "createdAt": "2020-02-18T00:34:38Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/PbemSetupPanel.java", "diffHunk": "@@ -214,6 +246,12 @@ public void update(final Observable o, final Object arg) {\n   /** Called when the user hits play. */\n   @Override\n   public Optional<ILauncher> getLauncher() {\n+    Preconditions.checkNotNull(\n+        gameSelectorModel.getGameData(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM3NjYwOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/test/post/SwingTestPostProgressDisplayFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozNTowMlrOFqyNmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozNTowMlrOFqyNmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNzE5Mw==", "bodyText": "This class is to decouple swing interactions from \"TestPostProgressDisplay\"", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380407193", "createdAt": "2020-02-18T00:35:02Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/test/post/SwingTestPostProgressDisplayFactory.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package games.strategy.engine.framework.startup.ui.pbem.test.post;\n+\n+import games.strategy.engine.framework.GameRunner;\n+import java.util.function.Supplier;\n+import javax.swing.JOptionPane;\n+import javax.swing.SwingUtilities;\n+import org.triplea.swing.ProgressWindow;\n+\n+public class SwingTestPostProgressDisplayFactory implements Supplier<TestPostProgressDisplay> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM3NjkyOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/test/post/TestPostAction.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozNToyN1rOFqyN1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozNToyN1rOFqyN1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNzI1Mw==", "bodyText": "All logic in this method is extracted from the view. Any interactions with swing are delegated to TestPostProgressDisplay", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380407253", "createdAt": "2020-02-18T00:35:27Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/test/post/TestPostAction.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package games.strategy.engine.framework.startup.ui.pbem.test.post;\n+\n+import com.google.common.base.Preconditions;\n+import games.strategy.engine.ClientContext;\n+import games.strategy.engine.posted.game.pbf.NodeBbForumPoster;\n+import java.awt.Graphics;\n+import java.awt.image.BufferedImage;\n+import java.io.File;\n+import java.io.IOException;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ExecutionException;\n+import java.util.function.BiConsumer;\n+import java.util.function.Supplier;\n+import java.util.logging.Level;\n+import javax.imageio.ImageIO;\n+import lombok.AllArgsConstructor;\n+import lombok.extern.java.Log;\n+import org.triplea.java.TimeManager;\n+\n+@Log\n+@AllArgsConstructor\n+public class TestPostAction implements BiConsumer<String, Integer> {\n+\n+  private final Supplier<TestPostProgressDisplay> testPostProgressDisplayFactory;\n+\n+  @Override\n+  public void accept(final String forumName, final Integer topicId) {\n+    Preconditions.checkNotNull(forumName);\n+    Preconditions.checkArgument(topicId > 0);\n+\n+    final TestPostProgressDisplay testPostProgressDisplay = testPostProgressDisplayFactory.get();\n+\n+    new Thread(\n+            () -> {\n+              File f = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM3NzcyOnYy", "diffSide": "RIGHT", "path": "game-core/src/test/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditorViewModelTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozNTo1OFrOFqyOQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozNTo1OFrOFqyOQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNzM2Mg==", "bodyText": "This test is pretty important, deserves some good scrutiny.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380407362", "createdAt": "2020-02-18T00:35:58Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/test/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditorViewModelTest.java", "diffHunk": "@@ -0,0 +1,239 @@\n+package games.strategy.engine.framework.startup.ui.pbem;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.core.IsNull.notNullValue;\n+import static org.hamcrest.text.IsEmptyString.emptyString;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+import com.google.common.base.Preconditions;\n+import games.strategy.engine.data.GameData;\n+import games.strategy.engine.data.properties.GameProperties;\n+import games.strategy.engine.posted.game.pbf.IForumPoster;\n+import games.strategy.engine.posted.game.pbf.NodeBbForumPoster;\n+import java.util.List;\n+import java.util.function.BiConsumer;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Nested;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.junit.jupiter.params.provider.ValueSource;\n+import org.mockito.Mock;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+import org.triplea.java.ViewModelListener;\n+\n+@ExtendWith(MockitoExtension.class)\n+class ForumPosterEditorViewModelTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDM3ODE2OnYy", "diffSide": "RIGHT", "path": "java-extras/src/main/java/org/triplea/java/ViewModelListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozNjoyNVrOFqyOiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwMDozNjoyNVrOFqyOiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQwNzQzMg==", "bodyText": "The comment and example on this interface are important. Please scrutinize whether it all makes sense.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380407432", "createdAt": "2020-02-18T00:36:25Z", "author": {"login": "DanVanAtta"}, "path": "java-extras/src/main/java/org/triplea/java/ViewModelListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.triplea.java;\n+\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c17c847f0d41d5c92db02a4360b6e62bdc4a6c4e"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1Nzk1NDU2OnYy", "diffSide": "RIGHT", "path": "java-extras/src/main/java/org/triplea/java/ViewModelListener.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMjoxMjo1NVrOFrUYNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMTowNTozNVrOFrX5ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk2Njk2NA==", "bodyText": "Thoughts about making this a @FunctionalInterface?\nThis way the compiler would ensure that this interface can be implemented using a lambda.\nNot really necessary for the existing code, but nice to have IMO.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380966964", "createdAt": "2020-02-18T22:12:55Z", "author": {"login": "RoiEXLab"}, "path": "java-extras/src/main/java/org/triplea/java/ViewModelListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.triplea.java;\n+\n+/**\n+ * Represents a specialized {@code Consumer<T>} interface for views to implement to listen to\n+ * changes on their view model. The view model will call the {@code viewModelChanged} method when\n+ * the view model state has changed in a way where the view should also be updated.\n+ *\n+ * <p>Pattern References:\n+ *\n+ * <ul>\n+ *   <li>Presentation model pattern: https://martinfowler.com/eaaDev/PresentationModel.html -\n+ *   <li>Separated presentation pattern: https://martinfowler.com/eaaDev/SeparatedPresentation.html\n+ * </ul>\n+ *\n+ * Example implementation of a UI class implementing a {@code ViewModelListener}:\n+ *\n+ * <pre>{@code\n+ * class MyUiClass implements ViewModelListener<MyViewModel> {\n+ *    MyUiClass(MyViewModel viewModel) {\n+ *        viewModel.setView(this);\n+ *        TextField userNameField = new TextField();\n+ *        DocumentListener.addKeyTypedListener(\n+ *            usernameField, value -> viewModel.setUsername(value));\n+ *\n+ *        CheckBox userIsEnabledCheckBox = new CheckBox();\n+ *        userIsEnabledCheckBox.addActionListener(\n+ *            checkBoxSelected -> viewModel.setUserIsEnabled(checkboxSelected);\n+ *    }\n+ *\n+ *    @Override\n+ *    void viewModelChanged(ViewModelT viewModel) {\n+ *       userName.setText(viewModel.getUsername());\n+ *       userIsEnabledCheckBox.setSelected(viewModel.getUserIsEnabled());\n+ *    }\n+ * }\n+ * }</pre>\n+ *\n+ * @param <ViewModelT> The type of view model, view model listeners should generally be 1:1 to a\n+ *     view model.\n+ */\n+public interface ViewModelListener<ViewModelT> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "826cb8c38a221fad453acc2bc072303a0fbf31b0"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAyNDYxMg==", "bodyText": "Certainly a consideration, though we do not ever expect any implementors to actually be lambdas.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r381024612", "createdAt": "2020-02-19T01:05:35Z", "author": {"login": "DanVanAtta"}, "path": "java-extras/src/main/java/org/triplea/java/ViewModelListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.triplea.java;\n+\n+/**\n+ * Represents a specialized {@code Consumer<T>} interface for views to implement to listen to\n+ * changes on their view model. The view model will call the {@code viewModelChanged} method when\n+ * the view model state has changed in a way where the view should also be updated.\n+ *\n+ * <p>Pattern References:\n+ *\n+ * <ul>\n+ *   <li>Presentation model pattern: https://martinfowler.com/eaaDev/PresentationModel.html -\n+ *   <li>Separated presentation pattern: https://martinfowler.com/eaaDev/SeparatedPresentation.html\n+ * </ul>\n+ *\n+ * Example implementation of a UI class implementing a {@code ViewModelListener}:\n+ *\n+ * <pre>{@code\n+ * class MyUiClass implements ViewModelListener<MyViewModel> {\n+ *    MyUiClass(MyViewModel viewModel) {\n+ *        viewModel.setView(this);\n+ *        TextField userNameField = new TextField();\n+ *        DocumentListener.addKeyTypedListener(\n+ *            usernameField, value -> viewModel.setUsername(value));\n+ *\n+ *        CheckBox userIsEnabledCheckBox = new CheckBox();\n+ *        userIsEnabledCheckBox.addActionListener(\n+ *            checkBoxSelected -> viewModel.setUserIsEnabled(checkboxSelected);\n+ *    }\n+ *\n+ *    @Override\n+ *    void viewModelChanged(ViewModelT viewModel) {\n+ *       userName.setText(viewModel.getUsername());\n+ *       userIsEnabledCheckBox.setSelected(viewModel.getUserIsEnabled());\n+ *    }\n+ * }\n+ * }</pre>\n+ *\n+ * @param <ViewModelT> The type of view model, view model listeners should generally be 1:1 to a\n+ *     view model.\n+ */\n+public interface ViewModelListener<ViewModelT> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk2Njk2NA=="}, "originalCommit": {"oid": "826cb8c38a221fad453acc2bc072303a0fbf31b0"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1ODA1Mjg1OnYy", "diffSide": "RIGHT", "path": "java-extras/src/main/java/org/triplea/java/ViewModelListener.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMjo0OToxOVrOFrVUUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMToyNTo1NVrOFrYOlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk4MjM1NA==", "bodyText": "I'm not sure about this one.\nIs the viewModel just supposed to be a data-class or should it be able to encapsulate some logic as well?\nIn the former case I wonder at which point potential logic would belong.\nIn the latter case I think it's not ideal, simply because this example is essentially a no-op, setting the values to themselves with added indirection.\nI'd have expected an example where the view is more than just a data class.\nFor example a viewModel that exposes a setPassword and a getPasswordStrength method so that the UI could implement some sort of password strength indicator and it becomes obvious that the viewModel can hold some logic.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380982354", "createdAt": "2020-02-18T22:49:19Z", "author": {"login": "RoiEXLab"}, "path": "java-extras/src/main/java/org/triplea/java/ViewModelListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.triplea.java;\n+\n+/**\n+ * Represents a specialized {@code Consumer<T>} interface for views to implement to listen to\n+ * changes on their view model. The view model will call the {@code viewModelChanged} method when\n+ * the view model state has changed in a way where the view should also be updated.\n+ *\n+ * <p>Pattern References:\n+ *\n+ * <ul>\n+ *   <li>Presentation model pattern: https://martinfowler.com/eaaDev/PresentationModel.html -\n+ *   <li>Separated presentation pattern: https://martinfowler.com/eaaDev/SeparatedPresentation.html\n+ * </ul>\n+ *\n+ * Example implementation of a UI class implementing a {@code ViewModelListener}:\n+ *\n+ * <pre>{@code\n+ * class MyUiClass implements ViewModelListener<MyViewModel> {\n+ *    MyUiClass(MyViewModel viewModel) {\n+ *        viewModel.setView(this);\n+ *        TextField userNameField = new TextField();\n+ *        DocumentListener.addKeyTypedListener(\n+ *            usernameField, value -> viewModel.setUsername(value));\n+ *\n+ *        CheckBox userIsEnabledCheckBox = new CheckBox();\n+ *        userIsEnabledCheckBox.addActionListener(\n+ *            checkBoxSelected -> viewModel.setUserIsEnabled(checkboxSelected);\n+ *    }\n+ *\n+ *    @Override\n+ *    void viewModelChanged(ViewModelT viewModel) {\n+ *       userName.setText(viewModel.getUsername());\n+ *       userIsEnabledCheckBox.setSelected(viewModel.getUserIsEnabled());\n+ *    }\n+ * }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8794b468304daf0c1ce836c002e958fca3119373"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAzMDAzNw==", "bodyText": "Very much recommend the Fowler link on the pattern: https://martinfowler.com/eaaDev/PresentationModel.html\nThere are also some similarities to these other patterns:\n\nhttps://martinfowler.com/eaaDev/SupervisingPresenter.html\nhttps://martinfowler.com/eaaDev/PassiveScreen.html\n\nIn essence, a data only class is not very useful, part of the goal is that the logic of the UI itself should  become testable. If we are only a data class, then it's yet some other model that is containing that logic. In essence, the view model is a data class and represents the dynamic data of a UI, second it is a thin to medium sized model of the view.\nFor example with getPasswordStrength, the view model would store a value \"password:string\" and \"passwordStrength:enum\". The view would be updated and would know how to render \"passwordStrength = low|medium|high\". The view model would be invoked by the view on password text updates. The view model would have essentially controller like logic to invoke a model that computes the password strength (perhaps a score from 1-100 that is then translated to the 'low|medium|high' values). The view model would then pass the password strength enum value to the view to be rendered.\nI suppose at its simplest the view model is just a data class and a submit button would send that data to some sort of submit action.\nSome of the goals is that we decouple from UI, one could conceivably swap out UI components entirely without needing to update the view model. Second, the logic of updating the view and actions from the view become testable, also said in another way, logic of how the view is updated becomes testable. Last, the view becomes a pretty stable rendering component, it loses pretty much all logic and control flow and is just focused on rendering a given state.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r381030037", "createdAt": "2020-02-19T01:25:55Z", "author": {"login": "DanVanAtta"}, "path": "java-extras/src/main/java/org/triplea/java/ViewModelListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.triplea.java;\n+\n+/**\n+ * Represents a specialized {@code Consumer<T>} interface for views to implement to listen to\n+ * changes on their view model. The view model will call the {@code viewModelChanged} method when\n+ * the view model state has changed in a way where the view should also be updated.\n+ *\n+ * <p>Pattern References:\n+ *\n+ * <ul>\n+ *   <li>Presentation model pattern: https://martinfowler.com/eaaDev/PresentationModel.html -\n+ *   <li>Separated presentation pattern: https://martinfowler.com/eaaDev/SeparatedPresentation.html\n+ * </ul>\n+ *\n+ * Example implementation of a UI class implementing a {@code ViewModelListener}:\n+ *\n+ * <pre>{@code\n+ * class MyUiClass implements ViewModelListener<MyViewModel> {\n+ *    MyUiClass(MyViewModel viewModel) {\n+ *        viewModel.setView(this);\n+ *        TextField userNameField = new TextField();\n+ *        DocumentListener.addKeyTypedListener(\n+ *            usernameField, value -> viewModel.setUsername(value));\n+ *\n+ *        CheckBox userIsEnabledCheckBox = new CheckBox();\n+ *        userIsEnabledCheckBox.addActionListener(\n+ *            checkBoxSelected -> viewModel.setUserIsEnabled(checkboxSelected);\n+ *    }\n+ *\n+ *    @Override\n+ *    void viewModelChanged(ViewModelT viewModel) {\n+ *       userName.setText(viewModel.getUsername());\n+ *       userIsEnabledCheckBox.setSelected(viewModel.getUserIsEnabled());\n+ *    }\n+ * }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk4MjM1NA=="}, "originalCommit": {"oid": "8794b468304daf0c1ce836c002e958fca3119373"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1ODA2OTk5OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/ForumPosterEditor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMjo1NTowNFrOFrVeYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMToyNjoxMlrOFrYO6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk4NDkyOA==", "bodyText": "Reminds me of reactive-style programming tbh", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380984928", "createdAt": "2020-02-18T22:55:04Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/ForumPosterEditor.java", "diffHunk": "@@ -179,118 +177,19 @@ public ForumPosterEditor(final Runnable readyCallback) {\n             new Insets(0, 0, 0, 0),\n             0,\n             0));\n-    setupListeners();\n-  }\n-\n-  private void checkFieldsAndNotify() {\n-    areFieldsValid();\n-    readyCallback.run();\n-  }\n-\n-  /** Configures the listeners for the gui components. */\n-  private void setupListeners() {\n-    viewPosts.addActionListener(e -> newForumPoster().viewPosted());\n-    testForum.addActionListener(e -> testForum());\n-    forums.addItemListener(e -> checkFieldsAndNotify());\n-    DocumentListenerBuilder.attachDocumentListener(topicIdField, this::checkFieldsAndNotify);\n-  }\n-\n-  /** Tests the Forum poster. */\n-  private void testForum() {\n-    final NodeBbForumPoster poster = newForumPoster();\n-    final ProgressWindow progressWindow =\n-        new ProgressWindow(JOptionPane.getFrameForComponent(this), poster.getTestMessage());\n-    progressWindow.setVisible(true);\n-\n-    new Thread(\n-            () -> {\n-              File f = null;\n-              try {\n-                f = File.createTempFile(\"123\", \".jpg\");\n-                f.deleteOnExit();\n-                final BufferedImage image = new BufferedImage(130, 40, BufferedImage.TYPE_INT_RGB);\n-                final Graphics g = image.getGraphics();\n-                g.drawString(\"Testing file upload\", 10, 20);\n-                ImageIO.write(image, \"jpg\", f);\n-              } catch (final IOException e) {\n-                // ignore\n-              }\n-              final CompletableFuture<String> future =\n-                  poster.postTurnSummary(\n-                      \"Test summary from TripleA, engine version: \"\n-                          + ClientContext.engineVersion()\n-                          + \", time: \"\n-                          + TimeManager.getLocalizedTime(),\n-                      \"Testing Forum poster\",\n-                      f != null ? f.toPath() : null);\n-              progressWindow.setVisible(false);\n-              try {\n-                // now that we have a result, marshall it back unto the swing thread\n-                future\n-                    .thenAccept(\n-                        message ->\n-                            SwingUtilities.invokeLater(\n-                                () ->\n-                                    GameRunner.showMessageDialog(\n-                                        message,\n-                                        GameRunner.Title.of(\"Test Turn Summary Post\"),\n-                                        JOptionPane.INFORMATION_MESSAGE)))\n-                    .exceptionally(\n-                        throwable -> {\n-                          SwingUtilities.invokeLater(\n-                              () ->\n-                                  GameRunner.showMessageDialog(\n-                                      throwable.getMessage(),\n-                                      GameRunner.Title.of(\"Test Turn Summary Post\"),\n-                                      JOptionPane.INFORMATION_MESSAGE));\n-                          return null;\n-                        })\n-                    .get();\n-              } catch (final InterruptedException e) {\n-                Thread.currentThread().interrupt();\n-              } catch (final ExecutionException e) {\n-                log.log(Level.SEVERE, \"Error while retrieving post\", e);\n-              }\n-            })\n-        .start();\n-  }\n-\n-  /** Checks if all fields are filled out correctly and indicates an error otherwise. */\n-  public boolean areFieldsValid() {\n-    final boolean setupValid =\n-        NodeBbForumPoster.isClientSettingSetupValidForServer((String) forums.getSelectedItem());\n-    final boolean idValid = setLabelValid(isInt(topicIdField.getText()), topicIdLabel);\n-    final boolean forumValid = setLabelValid(forums.getSelectedItem() != null, forumLabel);\n-    final boolean allValid = setupValid && idValid && forumValid;\n-    viewPosts.setEnabled(allValid);\n-    testForum.setEnabled(allValid);\n-    return allValid;\n   }\n \n-  @VisibleForTesting\n-  static boolean isInt(final String string) {\n-    Preconditions.checkNotNull(string);\n-    return string.matches(\"^-?\\\\d+$\");\n-  }\n-\n-  private NodeBbForumPoster newForumPoster() {\n-    final String forumName = (String) forums.getSelectedItem();\n-    Preconditions.checkNotNull(forumName);\n-    return NodeBbForumPoster.newInstanceByName(forumName, Integer.parseInt(topicIdField.getText()));\n-  }\n-\n-  public void applyToGameProperties(final GameProperties properties) {\n-    properties.set(IForumPoster.NAME, forums.getSelectedItem());\n-    properties.set(IForumPoster.TOPIC_ID, Integer.parseInt(topicIdField.getText()));\n-    properties.set(IForumPoster.POST_AFTER_COMBAT, alsoPostAfterCombatMove.isSelected());\n-    properties.set(IForumPoster.INCLUDE_SAVEGAME, includeSaveGame.isSelected());\n-  }\n+  @Override\n+  public void viewModelChanged(final ForumPosterEditorViewModel forumPosterEditorViewModel) {\n+    forums.setSelectedItem(forumPosterEditorViewModel.getForumSelection());\n+    topicIdField.setText(forumPosterEditorViewModel.getTopicId());\n+    alsoPostAfterCombatMove.setSelected(forumPosterEditorViewModel.isAlsoPostAfterCombatMove());\n+    attachSaveGameToSummary.setSelected(forumPosterEditorViewModel.isAttachSaveGameToSummary());\n \n-  public void populateFromGameProperties(final GameProperties properties) {\n-    forums.setSelectedItem(properties.get(IForumPoster.NAME));\n-    final Object topicId = properties.get(IForumPoster.TOPIC_ID);\n-    topicIdField.setText(topicId == null ? \"\" : String.valueOf(topicId));\n-    alsoPostAfterCombatMove.setSelected(properties.get(IForumPoster.POST_AFTER_COMBAT, false));\n-    includeSaveGame.setSelected(properties.get(IForumPoster.INCLUDE_SAVEGAME, true));\n+    final boolean isValid = forumPosterEditorViewModel.areFieldsValid();\n+    setLabelValid(isValid, topicIdLabel);\n+    setLabelValid(isValid, forumLabel);\n+    viewPosts.setEnabled(isValid);\n+    testForum.setEnabled(isValid);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fdb7ac8e966fb8089368bd53d9fb4d680be4d5e"}, "originalPosition": 259}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAzMDEyMw==", "bodyText": "There certainly are similarities \ud83d\ude04", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r381030123", "createdAt": "2020-02-19T01:26:12Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/ForumPosterEditor.java", "diffHunk": "@@ -179,118 +177,19 @@ public ForumPosterEditor(final Runnable readyCallback) {\n             new Insets(0, 0, 0, 0),\n             0,\n             0));\n-    setupListeners();\n-  }\n-\n-  private void checkFieldsAndNotify() {\n-    areFieldsValid();\n-    readyCallback.run();\n-  }\n-\n-  /** Configures the listeners for the gui components. */\n-  private void setupListeners() {\n-    viewPosts.addActionListener(e -> newForumPoster().viewPosted());\n-    testForum.addActionListener(e -> testForum());\n-    forums.addItemListener(e -> checkFieldsAndNotify());\n-    DocumentListenerBuilder.attachDocumentListener(topicIdField, this::checkFieldsAndNotify);\n-  }\n-\n-  /** Tests the Forum poster. */\n-  private void testForum() {\n-    final NodeBbForumPoster poster = newForumPoster();\n-    final ProgressWindow progressWindow =\n-        new ProgressWindow(JOptionPane.getFrameForComponent(this), poster.getTestMessage());\n-    progressWindow.setVisible(true);\n-\n-    new Thread(\n-            () -> {\n-              File f = null;\n-              try {\n-                f = File.createTempFile(\"123\", \".jpg\");\n-                f.deleteOnExit();\n-                final BufferedImage image = new BufferedImage(130, 40, BufferedImage.TYPE_INT_RGB);\n-                final Graphics g = image.getGraphics();\n-                g.drawString(\"Testing file upload\", 10, 20);\n-                ImageIO.write(image, \"jpg\", f);\n-              } catch (final IOException e) {\n-                // ignore\n-              }\n-              final CompletableFuture<String> future =\n-                  poster.postTurnSummary(\n-                      \"Test summary from TripleA, engine version: \"\n-                          + ClientContext.engineVersion()\n-                          + \", time: \"\n-                          + TimeManager.getLocalizedTime(),\n-                      \"Testing Forum poster\",\n-                      f != null ? f.toPath() : null);\n-              progressWindow.setVisible(false);\n-              try {\n-                // now that we have a result, marshall it back unto the swing thread\n-                future\n-                    .thenAccept(\n-                        message ->\n-                            SwingUtilities.invokeLater(\n-                                () ->\n-                                    GameRunner.showMessageDialog(\n-                                        message,\n-                                        GameRunner.Title.of(\"Test Turn Summary Post\"),\n-                                        JOptionPane.INFORMATION_MESSAGE)))\n-                    .exceptionally(\n-                        throwable -> {\n-                          SwingUtilities.invokeLater(\n-                              () ->\n-                                  GameRunner.showMessageDialog(\n-                                      throwable.getMessage(),\n-                                      GameRunner.Title.of(\"Test Turn Summary Post\"),\n-                                      JOptionPane.INFORMATION_MESSAGE));\n-                          return null;\n-                        })\n-                    .get();\n-              } catch (final InterruptedException e) {\n-                Thread.currentThread().interrupt();\n-              } catch (final ExecutionException e) {\n-                log.log(Level.SEVERE, \"Error while retrieving post\", e);\n-              }\n-            })\n-        .start();\n-  }\n-\n-  /** Checks if all fields are filled out correctly and indicates an error otherwise. */\n-  public boolean areFieldsValid() {\n-    final boolean setupValid =\n-        NodeBbForumPoster.isClientSettingSetupValidForServer((String) forums.getSelectedItem());\n-    final boolean idValid = setLabelValid(isInt(topicIdField.getText()), topicIdLabel);\n-    final boolean forumValid = setLabelValid(forums.getSelectedItem() != null, forumLabel);\n-    final boolean allValid = setupValid && idValid && forumValid;\n-    viewPosts.setEnabled(allValid);\n-    testForum.setEnabled(allValid);\n-    return allValid;\n   }\n \n-  @VisibleForTesting\n-  static boolean isInt(final String string) {\n-    Preconditions.checkNotNull(string);\n-    return string.matches(\"^-?\\\\d+$\");\n-  }\n-\n-  private NodeBbForumPoster newForumPoster() {\n-    final String forumName = (String) forums.getSelectedItem();\n-    Preconditions.checkNotNull(forumName);\n-    return NodeBbForumPoster.newInstanceByName(forumName, Integer.parseInt(topicIdField.getText()));\n-  }\n-\n-  public void applyToGameProperties(final GameProperties properties) {\n-    properties.set(IForumPoster.NAME, forums.getSelectedItem());\n-    properties.set(IForumPoster.TOPIC_ID, Integer.parseInt(topicIdField.getText()));\n-    properties.set(IForumPoster.POST_AFTER_COMBAT, alsoPostAfterCombatMove.isSelected());\n-    properties.set(IForumPoster.INCLUDE_SAVEGAME, includeSaveGame.isSelected());\n-  }\n+  @Override\n+  public void viewModelChanged(final ForumPosterEditorViewModel forumPosterEditorViewModel) {\n+    forums.setSelectedItem(forumPosterEditorViewModel.getForumSelection());\n+    topicIdField.setText(forumPosterEditorViewModel.getTopicId());\n+    alsoPostAfterCombatMove.setSelected(forumPosterEditorViewModel.isAlsoPostAfterCombatMove());\n+    attachSaveGameToSummary.setSelected(forumPosterEditorViewModel.isAttachSaveGameToSummary());\n \n-  public void populateFromGameProperties(final GameProperties properties) {\n-    forums.setSelectedItem(properties.get(IForumPoster.NAME));\n-    final Object topicId = properties.get(IForumPoster.TOPIC_ID);\n-    topicIdField.setText(topicId == null ? \"\" : String.valueOf(topicId));\n-    alsoPostAfterCombatMove.setSelected(properties.get(IForumPoster.POST_AFTER_COMBAT, false));\n-    includeSaveGame.setSelected(properties.get(IForumPoster.INCLUDE_SAVEGAME, true));\n+    final boolean isValid = forumPosterEditorViewModel.areFieldsValid();\n+    setLabelValid(isValid, topicIdLabel);\n+    setLabelValid(isValid, forumLabel);\n+    viewPosts.setEnabled(isValid);\n+    testForum.setEnabled(isValid);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk4NDkyOA=="}, "originalCommit": {"oid": "9fdb7ac8e966fb8089368bd53d9fb4d680be4d5e"}, "originalPosition": 259}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1ODA4NTY0OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditorViewModel.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQyMzowMDo0N1rOFrVncA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMToyNzowNFrOFrYP7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk4NzI0OA==", "bodyText": "Why the Ints.tryParse method?\nI think I have never seen that before.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r380987248", "createdAt": "2020-02-18T23:00:47Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditorViewModel.java", "diffHunk": "@@ -25,12 +43,29 @@\n \n   ForumPosterEditorViewModel(final Runnable readyCallback, final GameProperties properties) {\n     this.readyCallback = readyCallback;\n-    this.forumSelection = (String) properties.get(IForumPoster.NAME);\n-    this.topicId = properties.get(IForumPoster.TOPIC_ID, \"\");\n+    setForumSelection((String) properties.get(IForumPoster.NAME));\n+    setTopicId(properties.get(IForumPoster.TOPIC_ID, \"\"));\n     this.alsoPostAfterCombatMove = properties.get(IForumPoster.POST_AFTER_COMBAT, false);\n     this.attachSaveGameToSummary = properties.get(IForumPoster.INCLUDE_SAVEGAME, false);\n   }\n \n+  synchronized void setForumSelection(final String forumSelection) {\n+    this.forumSelection = forumSelection;\n+    forumSelectionValid = !forumSelection.isBlank();\n+    viewForumPostButtonEnabled = areFieldsValid();\n+    testForumPostButtonEnabled = areFieldsValid();\n+    readyCallback.run();\n+  }\n+\n+  synchronized void setTopicId(final String topicId) {\n+    this.topicId = topicId;\n+    final Integer numericTopicId = Ints.tryParse(topicId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63c46e1a9c4455103ff7ea0df4da192ce463b0e6"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTAzMDM4Mw==", "bodyText": "It is Guava, returns null if the string value is not an integer. This avoids using IntegerParseException to check validity. It seemed really annoying there is no isInt(String) method baked into java yet.", "url": "https://github.com/triplea-game/triplea/pull/5953#discussion_r381030383", "createdAt": "2020-02-19T01:27:04Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/pbem/ForumPosterEditorViewModel.java", "diffHunk": "@@ -25,12 +43,29 @@\n \n   ForumPosterEditorViewModel(final Runnable readyCallback, final GameProperties properties) {\n     this.readyCallback = readyCallback;\n-    this.forumSelection = (String) properties.get(IForumPoster.NAME);\n-    this.topicId = properties.get(IForumPoster.TOPIC_ID, \"\");\n+    setForumSelection((String) properties.get(IForumPoster.NAME));\n+    setTopicId(properties.get(IForumPoster.TOPIC_ID, \"\"));\n     this.alsoPostAfterCombatMove = properties.get(IForumPoster.POST_AFTER_COMBAT, false);\n     this.attachSaveGameToSummary = properties.get(IForumPoster.INCLUDE_SAVEGAME, false);\n   }\n \n+  synchronized void setForumSelection(final String forumSelection) {\n+    this.forumSelection = forumSelection;\n+    forumSelectionValid = !forumSelection.isBlank();\n+    viewForumPostButtonEnabled = areFieldsValid();\n+    testForumPostButtonEnabled = areFieldsValid();\n+    readyCallback.run();\n+  }\n+\n+  synchronized void setTopicId(final String topicId) {\n+    this.topicId = topicId;\n+    final Integer numericTopicId = Ints.tryParse(topicId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDk4NzI0OA=="}, "originalCommit": {"oid": "63c46e1a9c4455103ff7ea0df4da192ce463b0e6"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2470, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}