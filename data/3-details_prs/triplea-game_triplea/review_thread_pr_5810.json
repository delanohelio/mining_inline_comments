{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NTAxOTc0", "number": 5810, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxNzowMzo0MlrODVWpkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxNzoxMToxOFrODVWqhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzNzE3Nzc2OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ui/menubar/FileMenu.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxNzowMzo0MlrOFZjEcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQyMDo1OTo1MVrOFZjouQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMzI5OQ==", "bodyText": "Now that shutdown returns a boolean, shouldn't this change be unecessary?", "url": "https://github.com/triplea-game/triplea/pull/5810#discussion_r362333299", "createdAt": "2020-01-01T17:03:42Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/menubar/FileMenu.java", "diffHunk": "@@ -112,7 +112,7 @@ private void addExitMenu() {\n     // Mac OS X automatically creates a Quit menu item under the TripleA menu,\n     // so all we need to do is register that menu item with triplea's shutdown mechanism\n     if (isMac) {\n-      MacOsIntegration.setQuitHandler(frame::shutdown);\n+      MacOsIntegration.setQuitHandler(() -> frame.shutdown());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2e458fb94e7cd16d1044d902bf755e34bfa7fb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0MjU4NQ==", "bodyText": "I thought so too, but seems not. frame::shutdown returns a function pointer which does not get converted to a BooleanSupplier implicitly. (But the inline function does.)", "url": "https://github.com/triplea-game/triplea/pull/5810#discussion_r362342585", "createdAt": "2020-01-01T20:59:51Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/menubar/FileMenu.java", "diffHunk": "@@ -112,7 +112,7 @@ private void addExitMenu() {\n     // Mac OS X automatically creates a Quit menu item under the TripleA menu,\n     // so all we need to do is register that menu item with triplea's shutdown mechanism\n     if (isMac) {\n-      MacOsIntegration.setQuitHandler(frame::shutdown);\n+      MacOsIntegration.setQuitHandler(() -> frame.shutdown());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMzI5OQ=="}, "originalCommit": {"oid": "4a2e458fb94e7cd16d1044d902bf755e34bfa7fb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzNzE3ODY0OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/lobby/client/ui/LobbyFrame.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxNzowNjozNVrOFZjE8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wM1QyMzo1MTozMlrOFaLkZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMzQyNw==", "bodyText": "Hmm Methods returning the same objects regardless of execution path seem weird to me.\nI'd actually move this true statement up one level and keep this method returning void, or alternatively have both frames implement an QuitHandler interface for consistency or something that will then be used.", "url": "https://github.com/triplea-game/triplea/pull/5810#discussion_r362333427", "createdAt": "2020-01-01T17:06:35Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/lobby/client/ui/LobbyFrame.java", "diffHunk": "@@ -140,5 +140,6 @@ public void shutdown() {\n               GameRunner.exitGameIfFinished();\n             })\n         .start();\n+    return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2e458fb94e7cd16d1044d902bf755e34bfa7fb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM0MjY0Mg==", "bodyText": "Implementing QuitHandler sounds interesting, I can take a look at doing it.", "url": "https://github.com/triplea-game/triplea/pull/5810#discussion_r362342642", "createdAt": "2020-01-01T21:00:59Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/engine/lobby/client/ui/LobbyFrame.java", "diffHunk": "@@ -140,5 +140,6 @@ public void shutdown() {\n               GameRunner.exitGameIfFinished();\n             })\n         .start();\n+    return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMzQyNw=="}, "originalCommit": {"oid": "4a2e458fb94e7cd16d1044d902bf755e34bfa7fb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM1MTE1Nw==", "bodyText": "I gave it a shot (didn't update the PR) and I'm not convinced it ends up cleaner.\nAt least, for TripleAFrame, if we implement the interface, then the non-Mac code that needs to attach the action to a JMenuItem would need to call it, which ends up looking like:\n  public void shutdown() {\n\thandleQuitRequestWith(null, new QuitResponse() {\n\t\t@Override\n\t\tvoid cancelQuit() {\n\t\t}\n\t\t@Override\n\t\tvoid performQuit() {\n\t\t}\n\t});\n  }\n\nWhich is messy. Or we make handleQuitRequestWith() call shutdown(), but then shutdown() needs to return a boolean as now.\nSo it doesn't end up cleaning that my current code. I could make LobbyFrame's shutdown() not return a boolean and handle it in the caller, but then it would be inconsistent.\nI guess we could keep the version of setQuitHandler() that takes a Runnable (keep both signatures), and then LobbyFrame.shutdown() could be reverted to return void, while TripleAFrame would keep the code as-is.\nWhat do you prefer @RoiEXLab ?", "url": "https://github.com/triplea-game/triplea/pull/5810#discussion_r362351157", "createdAt": "2020-01-02T00:07:46Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/engine/lobby/client/ui/LobbyFrame.java", "diffHunk": "@@ -140,5 +140,6 @@ public void shutdown() {\n               GameRunner.exitGameIfFinished();\n             })\n         .start();\n+    return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMzQyNw=="}, "originalCommit": {"oid": "4a2e458fb94e7cd16d1044d902bf755e34bfa7fb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjM1MjI4Ng==", "bodyText": "Oh, that's not what I meant.\nI was thinking about creating an interface like this\ninterface QuitHandler {\n  boolean shutdown();\n}\nwhich is then being implemented by both frames and instead of BooleanSupplier you pass the object directly", "url": "https://github.com/triplea-game/triplea/pull/5810#discussion_r362352286", "createdAt": "2020-01-02T00:32:11Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/lobby/client/ui/LobbyFrame.java", "diffHunk": "@@ -140,5 +140,6 @@ public void shutdown() {\n               GameRunner.exitGameIfFinished();\n             })\n         .start();\n+    return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMzQyNw=="}, "originalCommit": {"oid": "4a2e458fb94e7cd16d1044d902bf755e34bfa7fb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Mjk5NjgzOQ==", "bodyText": "Ah, I see. Done.", "url": "https://github.com/triplea-game/triplea/pull/5810#discussion_r362996839", "createdAt": "2020-01-03T23:51:32Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/engine/lobby/client/ui/LobbyFrame.java", "diffHunk": "@@ -140,5 +140,6 @@ public void shutdown() {\n               GameRunner.exitGameIfFinished();\n             })\n         .start();\n+    return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMzQyNw=="}, "originalCommit": {"oid": "4a2e458fb94e7cd16d1044d902bf755e34bfa7fb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzNzE4MDIwOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ui/MacOsIntegration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxNzoxMToxOFrOFZjFvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxNzoxMToxOFrOFZjFvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMzYzMA==", "bodyText": "This reminds me of #5283\nAny chance if we're using the files handler the wrong way?\n#5253", "url": "https://github.com/triplea-game/triplea/pull/5810#discussion_r362333630", "createdAt": "2020-01-01T17:11:18Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/MacOsIntegration.java", "diffHunk": "@@ -40,8 +41,16 @@ public static void setOpenFileHandler(final Consumer<File> handler) {\n   }\n \n   /** Sets the specified quit handler to the application. */\n-  public static void setQuitHandler(final Runnable handler) {\n+  public static void setQuitHandler(final BooleanSupplier handler) {\n     checkNotNull(handler);\n-    Desktop.getDesktop().setQuitHandler((quitEvent, quitResponse) -> handler.run());\n+    Desktop.getDesktop()\n+        .setQuitHandler(\n+            (quitEvent, quitResponse) -> {\n+              if (handler.getAsBoolean()) {\n+                quitResponse.performQuit();\n+              } else {\n+                quitResponse.cancelQuit();\n+              }\n+            });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2e458fb94e7cd16d1044d902bf755e34bfa7fb"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2544, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}