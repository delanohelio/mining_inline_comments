{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2NDA3MTEx", "number": 8403, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNDo0NDowOVrOFElXYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNDo0NToyN1rOFElX9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMzUwODE5OnYy", "diffSide": "RIGHT", "path": "game-core/src/test/java/games/strategy/engine/data/CompositeChangeTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNDo0NDowOVrOIEvg0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMzozOTo1NFrOIF3bEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg0MzY2NQ==", "bodyText": "Couple more test cases to consider having:\n\ntrivial case where there is a single composite change and the input is the same as output\ndeeply nested (more than 2) singleton change", "url": "https://github.com/triplea-game/triplea/pull/8403#discussion_r541843665", "createdAt": "2020-12-13T04:44:09Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/test/java/games/strategy/engine/data/CompositeChangeTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package games.strategy.engine.data;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.hasSize;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import games.strategy.engine.data.changefactory.ChangeFactory;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+\n+class CompositeChangeTest {\n+\n+  @Test\n+  void flattenChanges() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cc6cf7f5eb14165904288be55faa9ab8bb2d5ee"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkzNDMzMQ==", "bodyText": "The existing test case already is testing deeply nested changes.  It goes at least 3 deep.", "url": "https://github.com/triplea-game/triplea/pull/8403#discussion_r542934331", "createdAt": "2020-12-14T23:59:18Z", "author": {"login": "trevan"}, "path": "game-core/src/test/java/games/strategy/engine/data/CompositeChangeTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package games.strategy.engine.data;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.hasSize;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import games.strategy.engine.data.changefactory.ChangeFactory;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+\n+class CompositeChangeTest {\n+\n+  @Test\n+  void flattenChanges() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg0MzY2NQ=="}, "originalCommit": {"oid": "2cc6cf7f5eb14165904288be55faa9ab8bb2d5ee"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzAxMTIzOQ==", "bodyText": "Indeed, I'm drawing a slight distinction:\n\ndeeply nested with N+1 changes\ndeeply nested with just 1 change\n\nIn the latter case one would expect that to be flattened into a single change.", "url": "https://github.com/triplea-game/triplea/pull/8403#discussion_r543011239", "createdAt": "2020-12-15T03:08:01Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/test/java/games/strategy/engine/data/CompositeChangeTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package games.strategy.engine.data;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.hasSize;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import games.strategy.engine.data.changefactory.ChangeFactory;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+\n+class CompositeChangeTest {\n+\n+  @Test\n+  void flattenChanges() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg0MzY2NQ=="}, "originalCommit": {"oid": "2cc6cf7f5eb14165904288be55faa9ab8bb2d5ee"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzAyMTg0MA==", "bodyText": "@DanVanAtta , I see what you mean.  I've added a test for the later case.", "url": "https://github.com/triplea-game/triplea/pull/8403#discussion_r543021840", "createdAt": "2020-12-15T03:39:54Z", "author": {"login": "trevan"}, "path": "game-core/src/test/java/games/strategy/engine/data/CompositeChangeTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package games.strategy.engine.data;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.hasSize;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import games.strategy.engine.data.changefactory.ChangeFactory;\n+import java.util.List;\n+import org.junit.jupiter.api.Test;\n+\n+class CompositeChangeTest {\n+\n+  @Test\n+  void flattenChanges() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg0MzY2NQ=="}, "originalCommit": {"oid": "2cc6cf7f5eb14165904288be55faa9ab8bb2d5ee"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMzUwOTM3OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/data/CompositeChange.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNDo0NToxMlrOIEvhTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNDo0NToxMlrOIEvhTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg0Mzc4OQ==", "bodyText": "nit: A ternary would be worth consider having here, would make the lambda syntax a bit nicer.", "url": "https://github.com/triplea-game/triplea/pull/8403#discussion_r541843789", "createdAt": "2020-12-13T04:45:12Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/data/CompositeChange.java", "diffHunk": "@@ -22,6 +24,21 @@ public CompositeChange(final List<Change> changes) {\n     this.changes = new ArrayList<>(changes);\n   }\n \n+  public CompositeChange flatten() {\n+    return new CompositeChange(\n+        changes.stream()\n+            .map(\n+                change -> {\n+                  if (change instanceof CompositeChange) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cc6cf7f5eb14165904288be55faa9ab8bb2d5ee"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMzUwOTY2OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/data/CompositeChange.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNDo0NToyN1rOIEvhaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QwNDo0NToyN1rOIEvhaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTg0MzgxOQ==", "bodyText": "Could use a javadoc IMO, particularly considering the method is recursive.", "url": "https://github.com/triplea-game/triplea/pull/8403#discussion_r541843819", "createdAt": "2020-12-13T04:45:27Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/data/CompositeChange.java", "diffHunk": "@@ -22,6 +24,21 @@ public CompositeChange(final List<Change> changes) {\n     this.changes = new ArrayList<>(changes);\n   }\n \n+  public CompositeChange flatten() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cc6cf7f5eb14165904288be55faa9ab8bb2d5ee"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2648, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}