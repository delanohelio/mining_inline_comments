{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNzI4Mzc4", "number": 7796, "title": "Move the LandParatrooper and MarkNoMovement logic to their steps", "bodyText": "This removes two methods from the BattleActions api and moves the logic to the individual battle steps.\nTesting\n\nScreens Shots\n\nAdditional Notes to Reviewer\n\nRelease Note", "createdAt": "2020-09-27T14:21:52Z", "url": "https://github.com/triplea-game/triplea/pull/7796", "merged": true, "mergeCommit": {"oid": "613efdcb2a98eff55b4a213b03076b424d7ae335"}, "closed": true, "closedAt": "2020-09-29T07:23:36Z", "author": {"login": "trevan"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdM_wNOAH2gAyNDkzNzI4Mzc4Ojg1YmJkNjNlMDY5ZjY2YjllMjJlOTUzMjRkN2EwZDBiOTA2YzY3NzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNerhAAH2gAyNDkzNzI4Mzc4OmI3Nzk0MDU4MjEyMDJkZjJiNDdhZjhlMjczZTExM2IyN2E2ODgwZTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "85bbd63e069f66b9e22e95324d7a0d0b906c6773", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/85bbd63e069f66b9e22e95324d7a0d0b906c6773", "committedDate": "2020-09-27T14:21:00Z", "message": "Move the LandParatrooper and MarkNoMovement logic to their steps"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDg1MTc3", "url": "https://github.com/triplea-game/triplea/pull/7796#pullrequestreview-497085177", "createdAt": "2020-09-27T14:24:33Z", "commit": {"oid": "85bbd63e069f66b9e22e95324d7a0d0b906c6773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDoyNDozM1rOHYntEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNDoyNDozM1rOHYntEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU3ODM4Nw==", "bodyText": "There's now 3 methods dealing with dependents (getDependentUnits, removeDependentUnits, and getTransportDependents).  I'm looking into if I can simplify the api around dependent units.  I expect getTransportDependents and getDependentUnits can be combined somehow.  I also think that they might be combined with filterUnits by adding a new status TRANSPORTING.  But that will be a different PR.", "url": "https://github.com/triplea-game/triplea/pull/7796#discussion_r495578387", "createdAt": "2020-09-27T14:24:33Z", "author": {"login": "trevan"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/BattleState.java", "diffHunk": "@@ -102,6 +102,8 @@ public boolean isFirstRound() {\n \n   Collection<Unit> getDependentUnits(Collection<Unit> units);\n \n+  void removeDependentUnits(Collection<Unit> units);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bbd63e069f66b9e22e95324d7a0d0b906c6773"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDk4MjQ3", "url": "https://github.com/triplea-game/triplea/pull/7796#pullrequestreview-497098247", "createdAt": "2020-09-27T17:47:54Z", "commit": {"oid": "85bbd63e069f66b9e22e95324d7a0d0b906c6773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNzo0Nzo1NFrOHYo3JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNzo0Nzo1NFrOHYo3JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU5NzM0OQ==", "bodyText": "The change object is the interesting thing, right? The structure and data of the change object we do expect to be in a certain way, that defines correctness? For example, if it were null, I think this test might still pass.\nA captor could be used to grab the change object and then verify it. We are then pretty tied to implementation and we have another code smell where the code could change, still be correct, and the tests are breaking because they were testing implementation and not behavior.\nSo, captor is an option, another option is to have the execute method return the change object. In that case the test code would get a reference to it directly. IF we are limited by compatibility concerns (we might not be), but if we are, then the existing code could be converted to a facade and invokes a method that is visible to testing that does return a change object.\nWDYT?", "url": "https://github.com/triplea-game/triplea/pull/7796#discussion_r495597349", "createdAt": "2020-09-27T17:47:54Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/test/java/games/strategy/triplea/delegate/battle/steps/change/MarkNoMovementLeftTest.java", "diffHunk": "@@ -22,24 +35,84 @@\n   @Mock BattleActions battleActions;\n \n   @Test\n-  void runsOnFirstRound() {\n-    final BattleState battleState = givenBattleStateBuilder().battleRound(1).build();\n+  void doesNotRunOnFirstRoundAndHeadless() {\n+    final BattleState battleState = givenBattleStateBuilder().battleRound(1).headless(true).build();\n     final MarkNoMovementLeft markNoMovementLeft =\n         new MarkNoMovementLeft(battleState, battleActions);\n \n     markNoMovementLeft.execute(executionStack, delegateBridge);\n \n-    verify(battleActions).markNoMovementLeft(eq(delegateBridge));\n+    verify(delegateBridge, never()).addChange(any());\n   }\n \n   @Test\n   void doesNotRunOnSecondRound() {\n-    final BattleState battleState = givenBattleStateBuilder().battleRound(2).build();\n+    final BattleState battleState =\n+        givenBattleStateBuilder().battleRound(2).headless(false).build();\n     final MarkNoMovementLeft markNoMovementLeft =\n         new MarkNoMovementLeft(battleState, battleActions);\n \n     markNoMovementLeft.execute(executionStack, delegateBridge);\n \n-    verify(battleActions, never()).markNoMovementLeft(eq(delegateBridge));\n+    verify(delegateBridge, never()).addChange(any());\n+  }\n+\n+  @Test\n+  void nonAirWithMovementLeftAreMarkedAsMoved() {\n+    final BattleState battleState =\n+        givenBattleStateBuilder()\n+            .battleRound(1)\n+            .headless(false)\n+            .attackingUnits(List.of(givenNonAirUnitWithMovementLeft(BigDecimal.ONE)))\n+            .build();\n+    final MarkNoMovementLeft markNoMovementLeft =\n+        new MarkNoMovementLeft(battleState, battleActions);\n+\n+    markNoMovementLeft.execute(executionStack, delegateBridge);\n+\n+    verify(delegateBridge).addChange(any());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bbd63e069f66b9e22e95324d7a0d0b906c6773"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cfd4f1e1bf9491e223367bee9ddfb2a5728b5b5", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/3cfd4f1e1bf9491e223367bee9ddfb2a5728b5b5", "committedDate": "2020-09-27T18:11:40Z", "message": "Ensure a change object is passed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5ffe08306e499d4e3a5788b335e1507ae27ae5f", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/a5ffe08306e499d4e3a5788b335e1507ae27ae5f", "committedDate": "2020-09-28T23:06:25Z", "message": "Custom hamcrest matcher for changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3OTc3NTUw", "url": "https://github.com/triplea-game/triplea/pull/7796#pullrequestreview-497977550", "createdAt": "2020-09-29T00:07:33Z", "commit": {"oid": "a5ffe08306e499d4e3a5788b335e1507ae27ae5f"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMDowNzozNFrOHZT2Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwMDoxMjo1NVrOHZT79A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMwMTU5NA==", "bodyText": "nit, would you mind extracting 'altreadyMoved' to a constant? Is that possible? The idea there being the test will automatically update with the constant and it makes it clear as well where that value is coming from for any maintainers that are potentially looking at a failing test.\nSecond nit, by convention tests use static imports for most everything matcher related (I don't always like that one, but it is a relatively consistent convention)", "url": "https://github.com/triplea-game/triplea/pull/7796#discussion_r496301594", "createdAt": "2020-09-29T00:07:34Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/test/java/games/strategy/triplea/delegate/battle/steps/change/MarkNoMovementLeftTest.java", "diffHunk": "@@ -71,7 +73,12 @@ void nonAirWithMovementLeftAreMarkedAsMoved() {\n \n     markNoMovementLeft.execute(executionStack, delegateBridge);\n \n-    verify(delegateBridge).addChange(any(Change.class));\n+    verify(delegateBridge)\n+        .addChange(\n+            argThat(\n+                CompositeChangeMatcher.compositeChangeContains(\n+                    ObjectPropertyChangeMatcher.propertyChange(\n+                        \"alreadyMoved\", BigDecimal.ONE, BigDecimal.ZERO))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5ffe08306e499d4e3a5788b335e1507ae27ae5f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMwMTkzNg==", "bodyText": "Any nullity concerns here?\nWhat if the new value or old value were null, and we were matching for a null value?", "url": "https://github.com/triplea-game/triplea/pull/7796#discussion_r496301936", "createdAt": "2020-09-29T00:08:44Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/test/java/games/strategy/engine/data/changefactory/ObjectPropertyChangeMatcher.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package games.strategy.engine.data.changefactory;\n+\n+import games.strategy.engine.data.ChangeMatcher;\n+import lombok.AllArgsConstructor;\n+import org.hamcrest.Description;\n+\n+@AllArgsConstructor\n+public class ObjectPropertyChangeMatcher extends ChangeMatcher<ObjectPropertyChange> {\n+\n+  private final String property;\n+\n+  private final Object newValue;\n+\n+  private final Object oldValue;\n+\n+  @Override\n+  protected boolean matchesSafely(final ObjectPropertyChange item) {\n+    return item.getProperty().equals(property)\n+        && item.getNewValue().equals(newValue)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5ffe08306e499d4e3a5788b335e1507ae27ae5f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjMwMzA5Mg==", "bodyText": "When we get checkstyle upgraded to 8.3x, type javadocs will I think become required again. Probably best to try and add them proactively so we don't have to do as much to migrate.\nBeyond checkstyle, a javadoc here with some example usages I think would be really helpful. Some sample code on how to use this would make it really easy if someone were want to pick this up, they could copy/paste it and modify it to fit their needs.", "url": "https://github.com/triplea-game/triplea/pull/7796#discussion_r496303092", "createdAt": "2020-09-29T00:12:55Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/test/java/games/strategy/engine/data/CompositeChangeMatcher.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package games.strategy.engine.data;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import lombok.AllArgsConstructor;\n+import org.hamcrest.Description;\n+import org.hamcrest.Matcher;\n+\n+@AllArgsConstructor\n+public class CompositeChangeMatcher extends ChangeMatcher<CompositeChange> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5ffe08306e499d4e3a5788b335e1507ae27ae5f"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed42400061a7b4e714a3d9a6ff23790c75ba0be3", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/ed42400061a7b4e714a3d9a6ff23790c75ba0be3", "committedDate": "2020-09-29T01:26:05Z", "message": "Add some documentation, handle null case, use the constant"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MDE2MDUz", "url": "https://github.com/triplea-game/triplea/pull/7796#pullrequestreview-498016053", "createdAt": "2020-09-29T02:10:50Z", "commit": {"oid": "ed42400061a7b4e714a3d9a6ff23790c75ba0be3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b779405821202df2b47af8e273e113b27a6880e1", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/b779405821202df2b47af8e273e113b27a6880e1", "committedDate": "2020-09-29T02:22:56Z", "message": "Add @param javadoc"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3856, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}