{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3NzU5OTA1", "number": 8414, "title": "Handle some dependent units in translateAttributesToOtherUnits", "bodyText": "Unloaded units and transported units are now transferred from the giving\nunit to the receiving unit.  If there is more than one receiving unit,\nit will be given to the receiving unit that stream().findFirst()\nreturns.\n\nTesting\n\nScreens Shots\n\nAdditional Notes to Reviewer\n\nThere are no maps that I can find that have transformed units that transport other units.  So this code shouldn't really be used at this point.  But the point of this change is to allow reworking of the battle unit removal code.\nRelease Note\n\nCHANGE|If a unit is transporting units and it is transformed because of whenCapturedChangesInto, whenHitPointsDamagedChangesInto, or whenHitPointsRepairedChangesInto, then the transported units will be copied to the transformed unit instead of removed.", "createdAt": "2020-12-12T04:36:20Z", "url": "https://github.com/triplea-game/triplea/pull/8414", "merged": true, "mergeCommit": {"oid": "175a076ed9e0fac881e3061398570a37a398b930"}, "closed": true, "closedAt": "2020-12-22T05:18:40Z", "author": {"login": "trevan"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlqTdXAH2gAyNTM3NzU5OTA1OjYwZGVjODJkYWM5MzVmNjdmNjlmYjg3YjgyM2ViNmE4Mzg3YmJiYjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdojifCgFqTU1NjgyNDY0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "60dec82dac935f67f69fb87b823eb6a8387bbbb6", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/60dec82dac935f67f69fb87b823eb6a8387bbbb6", "committedDate": "2020-12-13T05:29:42Z", "message": "Handle some dependent units in translateAttributesToOtherUnits\n\nUnloaded units and transported units are now transferred from the giving\nunit to the receiving unit.  If there is more than one receiving unit,\nit will be given to the receiving unit that stream().findFirst()\nreturns."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1OTgyODkw", "url": "https://github.com/triplea-game/triplea/pull/8414#pullrequestreview-555982890", "createdAt": "2020-12-20T03:18:44Z", "commit": {"oid": "187ca7c6cf9bb83d8910a09b994d5d177f556c6e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMzoxODo0NVrOIJAYHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMzoyMjoxNVrOIJAZDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMxNDI2OA==", "bodyText": "nit, this block could use a summary comment IMO, just a few words to describe what is happening. \"what\" comments are sometimes frowned on, but having an idea or an intro to what the code you are about to read is supposed to do, really helps make it easier to understand.", "url": "https://github.com/triplea-game/triplea/pull/8414#discussion_r546314268", "createdAt": "2020-12-20T03:18:45Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/UnitUtils.java", "diffHunk": "@@ -159,15 +159,48 @@ public static int getHowMuchCanUnitProduce(\n   }\n \n   /**\n-   * Currently made for translating unit damage from one unit to another unit. Will adjust damage to\n-   * be within max damage for the new units.\n+   * Translates attributes and properties from one unit to a collection of units.\n+   *\n+   * <p>Used when a unit is being transformed, so the old unit is going away and the new units are\n+   * taking its place\n+   *\n+   * <p>Currently, it translates: Hits, Damage, Unloaded units, and Transported units\n+   *\n+   * <p>Hits and Damage are modified as needed to fit within the limits of the new units. Units will\n+   * always have at least 1 hp.\n+   *\n+   * <p>Unloaded units and transported units are given to the unit that matches stream().findFirst()\n    *\n    * @return change for unit's properties\n    */\n   public static Change translateAttributesToOtherUnits(\n       final Unit unitGivingAttributes,\n       final Collection<Unit> unitsThatWillGetAttributes,\n       final Territory territory) {\n+\n+    final CompositeChange changes =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "187ca7c6cf9bb83d8910a09b994d5d177f556c6e"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMxNDM2Mg==", "bodyText": "What would you think of extracting this map to a helper function? AFAIK best practice for lambda's is to keep them one line, and even better to try and make them be method references. That could probably be done here by making a method that accepts the 'receivingUnit' as  an input parameter.", "url": "https://github.com/triplea-game/triplea/pull/8414#discussion_r546314362", "createdAt": "2020-12-20T03:19:49Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/UnitUtils.java", "diffHunk": "@@ -159,15 +159,48 @@ public static int getHowMuchCanUnitProduce(\n   }\n \n   /**\n-   * Currently made for translating unit damage from one unit to another unit. Will adjust damage to\n-   * be within max damage for the new units.\n+   * Translates attributes and properties from one unit to a collection of units.\n+   *\n+   * <p>Used when a unit is being transformed, so the old unit is going away and the new units are\n+   * taking its place\n+   *\n+   * <p>Currently, it translates: Hits, Damage, Unloaded units, and Transported units\n+   *\n+   * <p>Hits and Damage are modified as needed to fit within the limits of the new units. Units will\n+   * always have at least 1 hp.\n+   *\n+   * <p>Unloaded units and transported units are given to the unit that matches stream().findFirst()\n    *\n    * @return change for unit's properties\n    */\n   public static Change translateAttributesToOtherUnits(\n       final Unit unitGivingAttributes,\n       final Collection<Unit> unitsThatWillGetAttributes,\n       final Territory territory) {\n+\n+    final CompositeChange changes =\n+        unitsThatWillGetAttributes.stream()\n+            .findFirst()\n+            .map(\n+                receivingUnit -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "187ca7c6cf9bb83d8910a09b994d5d177f556c6e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMxNDQwOA==", "bodyText": "What is meant by transferred? The part that is unclear, is I'm not sure where they are transferred. Suggestion: use a @DisplayName to give more description about this meaning.", "url": "https://github.com/triplea-game/triplea/pull/8414#discussion_r546314408", "createdAt": "2020-12-20T03:20:56Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/test/java/games/strategy/triplea/UnitUtilsTest.java", "diffHunk": "@@ -125,5 +128,72 @@ void bombingDamageIsNotTransferredIfDamageAllowedIs0() {\n           newUnits.get(0).getUnitDamage(),\n           is(0));\n     }\n+\n+    @Test\n+    void unloadedUnitsAreTransferred() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "187ca7c6cf9bb83d8910a09b994d5d177f556c6e"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMxNDUwOA==", "bodyText": "Why is this the case? A more specific description could be the key, what is special about the new unit exactly that makes this assertion the case?", "url": "https://github.com/triplea-game/triplea/pull/8414#discussion_r546314508", "createdAt": "2020-12-20T03:22:15Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/test/java/games/strategy/triplea/UnitUtilsTest.java", "diffHunk": "@@ -125,5 +128,72 @@ void bombingDamageIsNotTransferredIfDamageAllowedIs0() {\n           newUnits.get(0).getUnitDamage(),\n           is(0));\n     }\n+\n+    @Test\n+    void unloadedUnitsAreTransferred() {\n+      final Unit oldUnit = transport.create(1, player).get(0);\n+      final List<Unit> newUnits = transport.create(1, player);\n+\n+      final List<Unit> unloadedInfantry = infantry.create(1, player);\n+      oldUnit.setUnloaded(unloadedInfantry);\n+\n+      final Change changes = UnitUtils.translateAttributesToOtherUnits(oldUnit, newUnits, seaZone);\n+      gameData.performChange(changes);\n+\n+      assertThat(newUnits.get(0).getUnloaded(), is(unloadedInfantry));\n+    }\n+\n+    @Test\n+    void unloadedUnitsAreTransferredToOnlyOneOfTheNewUnits() {\n+      final Unit oldUnit = transport.create(1, player).get(0);\n+      final List<Unit> newUnits = transport.create(2, player);\n+\n+      final List<Unit> unloadedInfantry = infantry.create(1, player);\n+      oldUnit.setUnloaded(unloadedInfantry);\n+\n+      final Change changes = UnitUtils.translateAttributesToOtherUnits(oldUnit, newUnits, seaZone);\n+      gameData.performChange(changes);\n+\n+      assertThat(newUnits.get(0).getUnloaded(), is(unloadedInfantry));\n+      assertThat(\n+          \"Only the first new unit should get the unloaded infantry\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "187ca7c6cf9bb83d8910a09b994d5d177f556c6e"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01ac5212d2434c58855547e29b1d6e6b040b30c8", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/01ac5212d2434c58855547e29b1d6e6b040b30c8", "committedDate": "2020-12-20T03:59:29Z", "message": "Add comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "187ca7c6cf9bb83d8910a09b994d5d177f556c6e", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/187ca7c6cf9bb83d8910a09b994d5d177f556c6e", "committedDate": "2020-12-12T04:29:04Z", "message": "Handle some dependent units in translateAttributesToOtherUnits\n\nUnloaded units and transported units are now transferred from the giving\nunit to the receiving unit.  If there is more than one receiving unit,\nit will be given to the receiving unit that stream().findFirst()\nreturns."}, "afterCommit": {"oid": "01ac5212d2434c58855547e29b1d6e6b040b30c8", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/01ac5212d2434c58855547e29b1d6e6b040b30c8", "committedDate": "2020-12-20T03:59:29Z", "message": "Add comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2NTYxNDQ4", "url": "https://github.com/triplea-game/triplea/pull/8414#pullrequestreview-556561448", "createdAt": "2020-12-21T17:55:08Z", "commit": {"oid": "01ac5212d2434c58855547e29b1d6e6b040b30c8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNzo1NTowOFrOIJg5Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNzo1NTowOFrOIJg5Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njg0Njk5MQ==", "bodyText": "I get the sense that the updated description is missing the mark on explaining why the expectation is what it is.\nWhen reading this method:\n\nwe have an 'oldUnit', that is actually an 'oldTransport' and we place in a SZ\nwe then createa  'newUnit' that is actually a 'newTransport' and we do not place it in a SZ\nwe then create an infantry in the same SZ and add them to 'oldTransport'\nwe then perform the change action\nnow we assert that the transporter for the old unit is now the new transport\n\nRecommendations:\nKeep the unit types explicit and avoid the list operations. The list access makes it harder to grok. Instead of 'transportedUnits.get(0)', it's easier to understand if written as 'oldInfantry'. EG:\nfinal Unit oldTransport = ...\nfinal Unit infantryOnTransport = ...\n\nfinal Unit newTransport = ...\n\n final Change changes = UnitUtils.translateAttributesToOtherUnits(List.of(oldTransport),  List.of(newTransport);\n\nThen:\nassertThat(\n   \"Transport swapped from old to new, the transported infantry on the old transport should now be on the new transport\",\n  infantryOnTransport.getTransportedBy(), is(newTransport));\n\nLet me know if that clarifies how the test cases can be made more clear. After looking at that, I'm curious if the inverted change will fix the above. I also wonder as well what happens if a transported infantry is part of the change list and is replaced by a new infantry. Does the old transported infantry get assigned to the new transport? (IE: what happens if we had a 'newInfantry' in the mix above, would both 'oldInfantry' and 'newInfantry' be marked as transported by the new transport?)", "url": "https://github.com/triplea-game/triplea/pull/8414#discussion_r546846991", "createdAt": "2020-12-21T17:55:08Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/test/java/games/strategy/triplea/UnitUtilsTest.java", "diffHunk": "@@ -191,7 +191,9 @@ void transportedUnitsAreTransferredToTheFirstNewUnit() {\n       gameData.performChange(changes);\n \n       assertThat(\n-          \"The first new unit should be the new transporter for the units\",\n+          \"Units can only be transported by one unit at a time. So the transported unit \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ac5212d2434c58855547e29b1d6e6b040b30c8"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "234d8ac9f2aae3d19ff90c4c9c77a030fd4e9d48", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/234d8ac9f2aae3d19ff90c4c9c77a030fd4e9d48", "committedDate": "2020-12-22T02:35:25Z", "message": "Improve test case for 1 -> many conversion of a transporter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ec7f757a31c71b53e8ea2b3cbc29ee36c4637ff", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/5ec7f757a31c71b53e8ea2b3cbc29ee36c4637ff", "committedDate": "2020-12-22T02:59:46Z", "message": "Add tests for multiple transported/unloaded units"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODI0NjQ4", "url": "https://github.com/triplea-game/triplea/pull/8414#pullrequestreview-556824648", "createdAt": "2020-12-22T05:18:33Z", "commit": {"oid": "5ec7f757a31c71b53e8ea2b3cbc29ee36c4637ff"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3814, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}