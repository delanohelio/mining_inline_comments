{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMjkxMDYz", "number": 6086, "title": "Make findNearbyEnemyCapitalsAndFactories() ~30x faster.", "bodyText": "On great war map with all AIs, after 1700 executions, the new version takes 152ms in aggregate while the previous implementation takes 4900ms.\nThe algorithm's functionality is kept the same with the exception of removing the max distance constant, which was only there as a performance optimization. It's not needed with the new algorithm.\n \nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[] Code Cleanup or refactor\n[] Configuration Change\n[X] Problem fix: #5654\n[] Other:   \nTesting\nTested by having a wrapper function that executed both the old and the new version of the function and compared that their outputs were the same and tracked their their total execution.", "createdAt": "2020-03-24T22:40:24Z", "url": "https://github.com/triplea-game/triplea/pull/6086", "merged": true, "mergeCommit": {"oid": "79ea02e87e7f172189cbfa8e6a592eacd02ab4c2"}, "closed": true, "closedAt": "2020-03-27T01:33:56Z", "author": {"login": "asvitkine"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ61owgFqTM4MDc0ODExNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRkXOsgBqjMxNzAzOTEyMjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzQ4MTE0", "url": "https://github.com/triplea-game/triplea/pull/6086#pullrequestreview-380748114", "createdAt": "2020-03-24T22:41:56Z", "commit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0MTo1NlrOF7Fzfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0MTo1N1rOF7Fzgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNTQwNg==", "bodyText": "Avoid deeply nested control flow statements.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397505406", "createdAt": "2020-03-24T22:41:56Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {\n+      final Territory node = queue.removeFirst();\n+      for (final Territory t2 : map.getNeighbors(node)) {\n+        if (visited.add(t2)) {\n+          queue.add(t2);\n+          if (enemyCapitalsAndFactories.contains(t2)) {\n+            found.add(t2);\n+            if (found.size() == enemyCapitalsAndFactories.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNTQwNw==", "bodyText": "Method findNearbyEnemyCapitalsAndFactories has 29 lines of code (exceeds 25 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397505407", "createdAt": "2020-03-24T22:41:56Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNTQxMA==", "bodyText": "Method findNearbyEnemyCapitalsAndFactories has a Cognitive Complexity of 22 (exceeds 5 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397505410", "createdAt": "2020-03-24T22:41:57Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNzg4Nzcw", "url": "https://github.com/triplea-game/triplea/pull/6086#pullrequestreview-380788770", "createdAt": "2020-03-25T00:33:46Z", "commit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDozNzoxM1rOF7ILxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDo0OTowNlrOF7IYxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NDM4OQ==", "bodyText": "Even if it saves some redundant overhead, it is good practice to use equals over reference equality.\nHave a look at the errorprone explanation for this \"warning\"/error: https://github.com/google/error-prone/blob/master/docs/bugpattern/ReferenceEquality.md", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397544389", "createdAt": "2020-03-25T00:37:13Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {\n+      final Territory node = queue.removeFirst();\n+      for (final Territory t2 : map.getNeighbors(node)) {\n+        if (visited.add(t2)) {\n+          queue.add(t2);\n+          if (enemyCapitalsAndFactories.contains(t2)) {\n+            found.add(t2);\n+            if (found.size() == enemyCapitalsAndFactories.size()) {\n+              break;\n+            }\n+          }\n+        }\n       }\n-    }\n \n-    return nearbyEnemyCapitalsAndFactories;\n+      if (node == nextDistanceAfter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NTkxMA==", "bodyText": "I undertand how this distance is counted, pretty clever way to do it efficiently, however a comment explaining it would be nice in case we ever look at this code again (which will likely happen)", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397545910", "createdAt": "2020-03-25T00:42:45Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {\n+      final Territory node = queue.removeFirst();\n+      for (final Territory t2 : map.getNeighbors(node)) {\n+        if (visited.add(t2)) {\n+          queue.add(t2);\n+          if (enemyCapitalsAndFactories.contains(t2)) {\n+            found.add(t2);\n+            if (found.size() == enemyCapitalsAndFactories.size()) {\n+              break;\n+            }\n+          }\n+        }\n       }\n-    }\n \n-    return nearbyEnemyCapitalsAndFactories;\n+      if (node == nextDistanceAfter) {\n+        distance++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NzcxNg==", "bodyText": "I just had a look at the implementation of the getNeighbours method with a distance and it is bad but still used.\nI'd really appreciate if you could have a look at that one as well in the near future.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397547716", "createdAt": "2020-03-25T00:49:06Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODQ2NDAw", "url": "https://github.com/triplea-game/triplea/pull/6086#pullrequestreview-380846400", "createdAt": "2020-03-25T04:03:55Z", "commit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNDowMzo1NVrOF7LdiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNDowNToyNVrOF7LelQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODA4OA==", "bodyText": "IDK, I'd tend to agree with code climate on the length and complexity warning. The trick is not just to break up a method but to create the right abstractions. EG:\nwhile (!queue.isEmpty()) {\n   found.addAll(findAtDistance(distance, .... ));\n   distance ++;\n   if (distance > MAX_FACTORY_CHECK_DISTANCE\n        || (distance >= MIN_FACTORY_CHECK_DISTANCE && !found.isEmpty())) {\n       break;\n    }\n    nextDistanceAfter = queue.getLast();\n}\nreturn found;\n\nI don't know if that quite does it, it's an art to find something that works right and does not just create indirection.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397598088", "createdAt": "2020-03-25T04:03:55Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODI0MQ==", "bodyText": "Is t equivalent to the startTerritory, the 'basis' for the search? I'm wondering if the algorithm perhaps would be a bit clearer if 't' and 't2' were spelled out a bit more.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397598241", "createdAt": "2020-03-25T04:04:41Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODM1Nw==", "bodyText": "Is this comment intended to be included?", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397598357", "createdAt": "2020-03-25T04:05:25Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNTYzODQ5", "url": "https://github.com/triplea-game/triplea/pull/6086#pullrequestreview-381563849", "createdAt": "2020-03-25T21:52:06Z", "commit": {"oid": "db4120e75c92262dd1568d9b578e2d98c8681466"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo1MjowNlrOF7vw9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo1MjowNlrOF7vw9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5Mjg4NA==", "bodyText": "Method findNearbyEnemyCapitalsAndFactories has a Cognitive Complexity of 17 (exceeds 5 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398192884", "createdAt": "2020-03-25T21:52:06Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,39 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  @SuppressWarnings(\"ReferenceEquality\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db4120e75c92262dd1568d9b578e2d98c8681466"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5Mjg4Ng==", "bodyText": "Method findNearbyEnemyCapitalsAndFactories has 26 lines of code (exceeds 25 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398192886", "createdAt": "2020-03-25T21:52:06Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,39 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  @SuppressWarnings(\"ReferenceEquality\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db4120e75c92262dd1568d9b578e2d98c8681466"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNjM5NDAy", "url": "https://github.com/triplea-game/triplea/pull/6086#pullrequestreview-381639402", "createdAt": "2020-03-26T01:05:07Z", "commit": {"oid": "c1b19d5b3dd7d02712bf55ad5dfff5e32ba3589f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNjY5ODE0", "url": "https://github.com/triplea-game/triplea/pull/6086#pullrequestreview-381669814", "createdAt": "2020-03-26T02:53:03Z", "commit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMjo1MzowNFrOF71n0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMjo1Mzo1M1rOF71orw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4ODg1MQ==", "bodyText": "Sorry to pile on, nextDistanceAfter is not very clear to me. I would almost expect the value to be a scalar, similar to distance.  Can we brainstorm some potential better variable names?\n\nterritoryAtNextDistanceToCheck?", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398288851", "createdAt": "2020-03-26T02:53:04Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4OTA3MQ==", "bodyText": "nit, queue could perhaps be more descriptive as well. Is this the queue of territories to check? territoriesToCheck perhaps as a better name? It would make this boolean conditional perhaps a bit more clear.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398289071", "createdAt": "2020-03-26T02:53:53Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNjk3NzQ2", "url": "https://github.com/triplea-game/triplea/pull/6086#pullrequestreview-381697746", "createdAt": "2020-03-26T04:38:55Z", "commit": {"oid": "35679d61940329e8a2a01f5918f03b61d3b46474"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDozODo1NVrOF73JGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDozODo1NVrOF73JGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxMzc1NQ==", "bodyText": "Method findNearbyEnemyCapitalsAndFactories has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398313755", "createdAt": "2020-03-26T04:38:55Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +432,55 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n-  private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n+  /**\n+   * Finds enemy capitals / factors from a list that are \"nearby\" a given territory.\n+   *\n+   * <p>If any of the target territories exist within a distance of 9, returns the subset that do.\n+   * Otherwise, proceeds to check the territories at each subsequent distance until at least one\n+   * capital is found.\n+   *\n+   * <p>Note: This is an optimized version of a previous, much slower algorithm that has been\n+   * designed to keep the original behavior, but tuned for speed.\n+   *\n+   * @param startTerritory The territory from where to start the search.\n+   * @param enemyCapitalsAndFactories The territories to search for.\n+   * @return Subset of enemyCapitalsAndFactories that were found.\n+   */\n+  protected static Collection<Territory> findNearbyEnemyCapitalsAndFactories(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35679d61940329e8a2a01f5918f03b61d3b46474"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNzAwNTgz", "url": "https://github.com/triplea-game/triplea/pull/6086#pullrequestreview-381700583", "createdAt": "2020-03-26T04:49:46Z", "commit": {"oid": "3ae0d6fc358819ea5f0d4059a274eb797ff4080a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNzk0MzY5", "url": "https://github.com/triplea-game/triplea/pull/6086#pullrequestreview-381794369", "createdAt": "2020-03-26T08:39:02Z", "commit": {"oid": "3ae0d6fc358819ea5f0d4059a274eb797ff4080a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f6d1f042da5eaa20f5ea26e5882c3ca2ce4800e", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/0f6d1f042da5eaa20f5ea26e5882c3ca2ce4800e", "committedDate": "2020-03-26T23:03:30Z", "message": "Make findNearbyEnemyCapitalsAndFactories() ~30x faster.\n\nOn great war map with all AIs, after 1700 executions, the new\nversion takes ~150ms in aggregate while the previous\nimplementation takes 4900ms.\n\nThe algorithm's functionality is kept the same with the exception\nof removing the max distance constant, which was only there as a\nperformance optimization. It's not needed with the new algorithm."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ae0d6fc358819ea5f0d4059a274eb797ff4080a", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/3ae0d6fc358819ea5f0d4059a274eb797ff4080a", "committedDate": "2020-03-26T04:41:55Z", "message": "Remove test which is being added in a different PR."}, "afterCommit": {"oid": "0f6d1f042da5eaa20f5ea26e5882c3ca2ce4800e", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/0f6d1f042da5eaa20f5ea26e5882c3ca2ce4800e", "committedDate": "2020-03-26T23:03:30Z", "message": "Make findNearbyEnemyCapitalsAndFactories() ~30x faster.\n\nOn great war map with all AIs, after 1700 executions, the new\nversion takes ~150ms in aggregate while the previous\nimplementation takes 4900ms.\n\nThe algorithm's functionality is kept the same with the exception\nof removing the max distance constant, which was only there as a\nperformance optimization. It's not needed with the new algorithm."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3599, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}