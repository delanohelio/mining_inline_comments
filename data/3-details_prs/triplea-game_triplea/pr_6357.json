{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMjU0Mzg5", "number": 6357, "title": "Inline fields in BattleCalculator", "bodyText": "Follow-up to #6351\nThe fields are now final inlined local variables rather than mutable fields.\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[] Code Cleanup or refactor\n[] Configuration Change\n[] Problem fix:  \n[] Other:   \nTesting\n\nI verified the BattleCalc works fine after this change", "createdAt": "2020-04-30T08:36:47Z", "url": "https://github.com/triplea-game/triplea/pull/6357", "merged": true, "mergeCommit": {"oid": "67cb8d74d406c1ba1ffbbae9712b018d628b1dc7"}, "closed": true, "closedAt": "2020-05-02T19:47:13Z", "author": {"login": "RoiEXLab"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccow3GAH2gAyNDExMjU0Mzg5OmIyMzIyNjM5NTA3MThmNzhkNzI1NGM5YWQyMzJmN2EwMTQ0OTg4YWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdbtlngFqTQwNDU1NTU5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b232263950718f78d7254c9ad232f7a0144988af", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/b232263950718f78d7254c9ad232f7a0144988af", "committedDate": "2020-04-30T08:25:32Z", "message": "Inline fields"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMzE2MjY5", "url": "https://github.com/triplea-game/triplea/pull/6357#pullrequestreview-403316269", "createdAt": "2020-04-30T08:40:00Z", "commit": {"oid": "b232263950718f78d7254c9ad232f7a0144988af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODo0MDowMFrOGOffxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODo0MDowMFrOGOffxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg0OTI4NQ==", "bodyText": "Once you inline this method you realize that this return statement leads to undefined behaviour.\nIt either results in an exception because the GameData has not been set properly, or it makes the calculator code run on old data without any exceptions, but with potentially bad results", "url": "https://github.com/triplea-game/triplea/pull/6357#discussion_r417849285", "createdAt": "2020-04-30T08:40:00Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/odds/calculator/BattleCalculator.java", "diffHunk": "@@ -16,69 +16,27 @@\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n+import java.util.concurrent.atomic.AtomicBoolean;\n import javax.annotation.Nonnull;\n import lombok.Setter;\n \n class BattleCalculator implements IBattleCalculator {\n   @Nonnull private final GameData gameData;\n-  private GamePlayer attacker = null;\n-  private GamePlayer defender = null;\n-  private Territory location = null;\n-  private Collection<Unit> attackingUnits = new ArrayList<>();\n-  private Collection<Unit> defendingUnits = new ArrayList<>();\n-  private Collection<Unit> bombardingUnits = new ArrayList<>();\n-  private Collection<TerritoryEffect> territoryEffects = new ArrayList<>();\n   @Setter private boolean keepOneAttackingLandUnit = false;\n   @Setter private boolean amphibious = false;\n   @Setter private int retreatAfterRound = -1;\n   @Setter private int retreatAfterXUnitsLeft = -1;\n-  private boolean retreatWhenOnlyAirLeft = false;\n   @Setter private String attackerOrderOfLosses = null;\n   @Setter private String defenderOrderOfLosses = null;\n   private volatile boolean cancelled = false;\n-  private volatile boolean isRunning = false;\n+  private final AtomicBoolean isRunning = new AtomicBoolean(false);\n \n   BattleCalculator(final GameData data, final boolean dataHasAlreadyBeenCloned) {\n     gameData =\n         Preconditions.checkNotNull(\n             dataHasAlreadyBeenCloned ? data : GameDataUtils.cloneGameData(data, false));\n   }\n \n-  /** Calculates odds using the stored game data. */\n-  private void setCalculateData(\n-      final GamePlayer attacker,\n-      final GamePlayer defender,\n-      final Territory location,\n-      final Collection<Unit> attacking,\n-      final Collection<Unit> defending,\n-      final Collection<Unit> bombarding,\n-      final Collection<TerritoryEffect> territoryEffects,\n-      final boolean retreatWhenOnlyAirLeft)\n-      throws IllegalStateException {\n-    if (isRunning) {\n-      return;\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b232263950718f78d7254c9ad232f7a0144988af"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMzE2Njk4", "url": "https://github.com/triplea-game/triplea/pull/6357#pullrequestreview-403316698", "createdAt": "2020-04-30T08:40:36Z", "commit": {"oid": "b232263950718f78d7254c9ad232f7a0144988af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODo0MDozNlrOGOfg9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODo0MDozNlrOGOfg9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg0OTU5MQ==", "bodyText": "This is my replacement for the isRunning check I mentioned", "url": "https://github.com/triplea-game/triplea/pull/6357#discussion_r417849591", "createdAt": "2020-04-30T08:40:36Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/odds/calculator/BattleCalculator.java", "diffHunk": "@@ -90,69 +48,82 @@ public AggregateResults calculate(\n       final Collection<TerritoryEffect> territoryEffects,\n       final boolean retreatWhenOnlyAirLeft,\n       final int runCount) {\n-    setCalculateData(\n-        attacker,\n-        defender,\n-        location,\n-        attacking,\n-        defending,\n-        bombarding,\n-        territoryEffects,\n-        retreatWhenOnlyAirLeft);\n-    return calculate(runCount);\n-  }\n-\n-  private AggregateResults calculate(final int count) {\n-    isRunning = true;\n-    final long start = System.currentTimeMillis();\n-    final AggregateResults aggregateResults = new AggregateResults(count);\n-    final BattleTracker battleTracker = new BattleTracker();\n-    // CasualtySortingCaching can cause issues if there is more than 1 one battle being calculated\n-    // at the same time (like if the AI and a human are both using the calc)\n-    // TODO: first, see how much it actually speeds stuff up by, and if it does make a difference\n-    // then convert it to a per-thread, per-calc caching\n-    final List<Unit> attackerOrderOfLosses =\n-        OrderOfLossesInputPanel.getUnitListByOrderOfLoss(\n-            this.attackerOrderOfLosses, attackingUnits, gameData);\n-    final List<Unit> defenderOrderOfLosses =\n-        OrderOfLossesInputPanel.getUnitListByOrderOfLoss(\n-            this.defenderOrderOfLosses, defendingUnits, gameData);\n-    for (int i = 0; i < count && !cancelled; i++) {\n-      final CompositeChange allChanges = new CompositeChange();\n-      final DummyDelegateBridge bridge1 =\n-          new DummyDelegateBridge(\n-              attacker,\n-              gameData,\n-              allChanges,\n-              attackerOrderOfLosses,\n-              defenderOrderOfLosses,\n-              keepOneAttackingLandUnit,\n-              retreatAfterRound,\n-              retreatAfterXUnitsLeft,\n-              retreatWhenOnlyAirLeft);\n-      final GameDelegateBridge bridge = new GameDelegateBridge(bridge1);\n-      final MustFightBattle battle =\n-          new MustFightBattle(location, attacker, gameData, battleTracker);\n-      battle.setHeadless(true);\n-      battle.setUnits(\n-          defendingUnits,\n-          attackingUnits,\n-          bombardingUnits,\n-          (amphibious ? attackingUnits : new ArrayList<>()),\n-          defender,\n-          territoryEffects);\n-      bridge1.setBattle(battle);\n-      battle.fight(bridge);\n-      aggregateResults.addResult(new BattleResults(battle, gameData));\n-      // restore the game to its original state\n-      gameData.performChange(allChanges.invert());\n-      battleTracker.clear();\n-      battleTracker.clearBattleRecords();\n+    Preconditions.checkState(\n+        !isRunning.getAndSet(true), \"Can't calculate while operation is still running!\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b232263950718f78d7254c9ad232f7a0144988af"}, "originalPosition": 135}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTU1NTkx", "url": "https://github.com/triplea-game/triplea/pull/6357#pullrequestreview-404555591", "createdAt": "2020-05-02T19:47:07Z", "commit": {"oid": "b232263950718f78d7254c9ad232f7a0144988af"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3544, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}