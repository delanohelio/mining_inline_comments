{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4OTk1MzYy", "number": 8308, "title": "Create dice.calculator and dice.roller to store DiceRoll strategies", "bodyText": "Code in TotalPowerAndTotalRolls that was related to dice rolling has\nbeen moved to dice.calculator.  Static methods in DiceRoll to generate\ndice rolls has been moved to dice.roller.\n\nTesting\n\nScreens Shots\n\nAdditional Notes to Reviewer\n\nRelease Note", "createdAt": "2020-11-28T19:00:18Z", "url": "https://github.com/triplea-game/triplea/pull/8308", "merged": true, "mergeCommit": {"oid": "05b1a3eee366b9fa1f8111890925c7241bb51c4a"}, "closed": true, "closedAt": "2020-12-05T02:26:59Z", "author": {"login": "trevan"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhA3wNAH2gAyNTI4OTk1MzYyOjQ1NDk3YzY3MDIxNTY5M2NhYjY4MTBhZTAxYzZhMTMwZjBhMWMyNzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdjC482AFqTU0NTM5NDI5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "45497c670215693cab6810ae01c6a130f0a1c270", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/45497c670215693cab6810ae01c6a130f0a1c270", "committedDate": "2020-11-28T18:57:38Z", "message": "Create dice.calculator and dice.roller to store DiceRoll strategies\n\nCode in TotalPowerAndTotalRolls that was related to dice rolling has\nbeen moved to dice.calculator.  Static methods in DiceRoll to generate\ndice rolls has been moved to dice.roller."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDI2NjQ2", "url": "https://github.com/triplea-game/triplea/pull/8308#pullrequestreview-540426646", "createdAt": "2020-11-29T00:51:36Z", "commit": {"oid": "45497c670215693cab6810ae01c6a130f0a1c270"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwMDo1MTozNlrOH7eV8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwMDo1NjowNVrOH7eXUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNTE2OQ==", "bodyText": "RollNDice could be confused with \"rollinDice\" and \"roll and dice\". It is also confusing if we are rolling a N-sided die or are rolling n-dice.\nThis class looks like a dice-roller. I would opt to name it that. Looking at the one method in this class, I notice the API is not the prettiest. Of note, we have two int parameters side by side that could be swapped or would be hard to distinguish.\nOne fix would be to convert the parameters of the method to private variables and then use a builder to construct and have a no-arg 'rollDice' method. That should clean up the usage. Though, a lot of the parameters are simply to feed the call to \"bridge.getRandom(sides, rollCount, playerRolling, diceType, annotation);\". I think this method might be trying to do too much an dperhaps should take a random[] as a parameter and then it would have far fewer methods. Probably even better would be to have DiceRoll to have a constructor that accepts the random[] computation and it can then do most of the rest of the logic.\nTL;DR, this method looks like it should instead be a constructor on DiceRoll.", "url": "https://github.com/triplea-game/triplea/pull/8308#discussion_r532125169", "createdAt": "2020-11-29T00:51:36Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/dice/roller/RollNDice.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package games.strategy.triplea.delegate.dice.roller;\n+\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.engine.random.IRandomStats;\n+import games.strategy.triplea.delegate.DiceRoll;\n+import games.strategy.triplea.delegate.Die;\n+import java.util.ArrayList;\n+import java.util.List;\n+import lombok.experimental.UtilityClass;\n+\n+/**\n+ * Roll n-sided dice.\n+ *\n+ * <p>0 based, add 1 to get actual die roll\n+ */\n+@UtilityClass\n+public class RollNDice {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45497c670215693cab6810ae01c6a130f0a1c270"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNTI3Nw==", "bodyText": "I don't know if the bridge call belongs here. I would personally opt to duplicate this bridge call wherever we use the dice roller. The reasoning is largely just SRP, we are doing a lot of things here and the bridge call is a side effect.", "url": "https://github.com/triplea-game/triplea/pull/8308#discussion_r532125277", "createdAt": "2020-11-29T00:53:09Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/dice/roller/RollBattleDice.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package games.strategy.triplea.delegate.dice.roller;\n+\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.DiceRoll;\n+import games.strategy.triplea.delegate.dice.calculator.LowLuckDice;\n+import games.strategy.triplea.delegate.dice.calculator.RolledDice;\n+import games.strategy.triplea.delegate.power.calculator.CombatValue;\n+import games.strategy.triplea.delegate.power.calculator.PowerStrengthAndRolls;\n+import games.strategy.triplea.formatter.MyFormatter;\n+import java.util.Collection;\n+import lombok.experimental.UtilityClass;\n+\n+/** Used to roll dice for attackers and defenders in battles. */\n+@UtilityClass\n+public class RollBattleDice {\n+\n+  public static DiceRoll rollDice(\n+      final Collection<Unit> units,\n+      final GamePlayer player,\n+      final IDelegateBridge bridge,\n+      final String annotation,\n+      final CombatValue combatValueCalculator) {\n+\n+    final DiceRoll diceRoll;\n+    final PowerStrengthAndRolls unitPowerAndRollsMap =\n+        PowerStrengthAndRolls.build(units, combatValueCalculator);\n+    if (Properties.getLowLuck(bridge.getData().getProperties())) {\n+      diceRoll = LowLuckDice.calculate(unitPowerAndRollsMap, player, bridge::getRandom, annotation);\n+    } else {\n+      diceRoll = RolledDice.calculate(unitPowerAndRollsMap, player, bridge::getRandom, annotation);\n+    }\n+\n+    bridge", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45497c670215693cab6810ae01c6a130f0a1c270"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNTI5OA==", "bodyText": "nit, diceRoll should be defined preferably as close to where it is assigned. This is a good looking case to use a ternary even and would reduce complexity a little bit.", "url": "https://github.com/triplea-game/triplea/pull/8308#discussion_r532125298", "createdAt": "2020-11-29T00:53:40Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/dice/roller/RollBattleDice.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package games.strategy.triplea.delegate.dice.roller;\n+\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.DiceRoll;\n+import games.strategy.triplea.delegate.dice.calculator.LowLuckDice;\n+import games.strategy.triplea.delegate.dice.calculator.RolledDice;\n+import games.strategy.triplea.delegate.power.calculator.CombatValue;\n+import games.strategy.triplea.delegate.power.calculator.PowerStrengthAndRolls;\n+import games.strategy.triplea.formatter.MyFormatter;\n+import java.util.Collection;\n+import lombok.experimental.UtilityClass;\n+\n+/** Used to roll dice for attackers and defenders in battles. */\n+@UtilityClass\n+public class RollBattleDice {\n+\n+  public static DiceRoll rollDice(\n+      final Collection<Unit> units,\n+      final GamePlayer player,\n+      final IDelegateBridge bridge,\n+      final String annotation,\n+      final CombatValue combatValueCalculator) {\n+\n+    final DiceRoll diceRoll;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45497c670215693cab6810ae01c6a130f0a1c270"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNTQwMQ==", "bodyText": "Looking at what remains, I'm not really convinced this is a useful class. Can this be combined with the RollNDice class? It seems like this should be a stateful 'diceRoller' class and then it handles whether it rolls LL or normal dice as an implementation detail.", "url": "https://github.com/triplea-game/triplea/pull/8308#discussion_r532125401", "createdAt": "2020-11-29T00:54:56Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/dice/roller/RollBattleDice.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package games.strategy.triplea.delegate.dice.roller;\n+\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.DiceRoll;\n+import games.strategy.triplea.delegate.dice.calculator.LowLuckDice;\n+import games.strategy.triplea.delegate.dice.calculator.RolledDice;\n+import games.strategy.triplea.delegate.power.calculator.CombatValue;\n+import games.strategy.triplea.delegate.power.calculator.PowerStrengthAndRolls;\n+import games.strategy.triplea.formatter.MyFormatter;\n+import java.util.Collection;\n+import lombok.experimental.UtilityClass;\n+\n+/** Used to roll dice for attackers and defenders in battles. */\n+@UtilityClass\n+public class RollBattleDice {\n+\n+  public static DiceRoll rollDice(\n+      final Collection<Unit> units,\n+      final GamePlayer player,\n+      final IDelegateBridge bridge,\n+      final String annotation,\n+      final CombatValue combatValueCalculator) {\n+\n+    final DiceRoll diceRoll;\n+    final PowerStrengthAndRolls unitPowerAndRollsMap =\n+        PowerStrengthAndRolls.build(units, combatValueCalculator);\n+    if (Properties.getLowLuck(bridge.getData().getProperties())) {\n+      diceRoll = LowLuckDice.calculate(unitPowerAndRollsMap, player, bridge::getRandom, annotation);\n+    } else {\n+      diceRoll = RolledDice.calculate(unitPowerAndRollsMap, player, bridge::getRandom, annotation);\n+    }\n+\n+    bridge", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNTI3Nw=="}, "originalCommit": {"oid": "45497c670215693cab6810ae01c6a130f0a1c270"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNTUyMQ==", "bodyText": "I am concerned this is going to get confusing, when does one use RollBattleDice and when do you use RollNDice? I think combining and making these two classes potentially stateful would be a good way to go. I would seriously lean to remove the bridge code as that is side-effect of reporting the result and is not intrinsic to rolling dice.", "url": "https://github.com/triplea-game/triplea/pull/8308#discussion_r532125521", "createdAt": "2020-11-29T00:56:05Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/dice/roller/RollBattleDice.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package games.strategy.triplea.delegate.dice.roller;\n+\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.DiceRoll;\n+import games.strategy.triplea.delegate.dice.calculator.LowLuckDice;\n+import games.strategy.triplea.delegate.dice.calculator.RolledDice;\n+import games.strategy.triplea.delegate.power.calculator.CombatValue;\n+import games.strategy.triplea.delegate.power.calculator.PowerStrengthAndRolls;\n+import games.strategy.triplea.formatter.MyFormatter;\n+import java.util.Collection;\n+import lombok.experimental.UtilityClass;\n+\n+/** Used to roll dice for attackers and defenders in battles. */\n+@UtilityClass\n+public class RollBattleDice {\n+\n+  public static DiceRoll rollDice(\n+      final Collection<Unit> units,\n+      final GamePlayer player,\n+      final IDelegateBridge bridge,\n+      final String annotation,\n+      final CombatValue combatValueCalculator) {\n+\n+    final DiceRoll diceRoll;\n+    final PowerStrengthAndRolls unitPowerAndRollsMap =\n+        PowerStrengthAndRolls.build(units, combatValueCalculator);\n+    if (Properties.getLowLuck(bridge.getData().getProperties())) {\n+      diceRoll = LowLuckDice.calculate(unitPowerAndRollsMap, player, bridge::getRandom, annotation);\n+    } else {\n+      diceRoll = RolledDice.calculate(unitPowerAndRollsMap, player, bridge::getRandom, annotation);\n+    }\n+\n+    bridge", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNTI3Nw=="}, "originalCommit": {"oid": "45497c670215693cab6810ae01c6a130f0a1c270"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a699173c20def85112bfe635fde59ca47450b66", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/2a699173c20def85112bfe635fde59ca47450b66", "committedDate": "2020-11-29T04:21:36Z", "message": "Use ternary operator in creating diceRoll"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDQ1NDEw", "url": "https://github.com/triplea-game/triplea/pull/8308#pullrequestreview-540445410", "createdAt": "2020-11-29T04:04:15Z", "commit": {"oid": "45497c670215693cab6810ae01c6a130f0a1c270"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwNDowNDoxNVrOH7f9cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwNDoxODo1N1rOH7gB2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE1MTY2Nw==", "bodyText": "The bridge call is unfortunately intrinsic to dice.  When you save a game and then reload it, it will calculate the dice probability of the saved game using these history items.  If they are missing or not written correctly, then the dice probability of the saved game will be invalid.\nI don't agree with the design but I don't see how to easily change that.  And since every call of these methods needs to also write the history, I think it is best to leave the call in here so that it isn't forgotten.  I'll add a comment to the code so that it explains why this history is required.", "url": "https://github.com/triplea-game/triplea/pull/8308#discussion_r532151667", "createdAt": "2020-11-29T04:04:15Z", "author": {"login": "trevan"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/dice/roller/RollBattleDice.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package games.strategy.triplea.delegate.dice.roller;\n+\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.DiceRoll;\n+import games.strategy.triplea.delegate.dice.calculator.LowLuckDice;\n+import games.strategy.triplea.delegate.dice.calculator.RolledDice;\n+import games.strategy.triplea.delegate.power.calculator.CombatValue;\n+import games.strategy.triplea.delegate.power.calculator.PowerStrengthAndRolls;\n+import games.strategy.triplea.formatter.MyFormatter;\n+import java.util.Collection;\n+import lombok.experimental.UtilityClass;\n+\n+/** Used to roll dice for attackers and defenders in battles. */\n+@UtilityClass\n+public class RollBattleDice {\n+\n+  public static DiceRoll rollDice(\n+      final Collection<Unit> units,\n+      final GamePlayer player,\n+      final IDelegateBridge bridge,\n+      final String annotation,\n+      final CombatValue combatValueCalculator) {\n+\n+    final DiceRoll diceRoll;\n+    final PowerStrengthAndRolls unitPowerAndRollsMap =\n+        PowerStrengthAndRolls.build(units, combatValueCalculator);\n+    if (Properties.getLowLuck(bridge.getData().getProperties())) {\n+      diceRoll = LowLuckDice.calculate(unitPowerAndRollsMap, player, bridge::getRandom, annotation);\n+    } else {\n+      diceRoll = RolledDice.calculate(unitPowerAndRollsMap, player, bridge::getRandom, annotation);\n+    }\n+\n+    bridge", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNTI3Nw=="}, "originalCommit": {"oid": "45497c670215693cab6810ae01c6a130f0a1c270"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE1MTkxMA==", "bodyText": "These three classes (RollAaDice, RollNDice, and RollBattleDice) are basically strategy objects that define what type of dice you are getting.  I could see creating a builder class that you pass in an enum but I'm not sure how that is any better than just calling the static method itself.", "url": "https://github.com/triplea-game/triplea/pull/8308#discussion_r532151910", "createdAt": "2020-11-29T04:06:35Z", "author": {"login": "trevan"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/dice/roller/RollBattleDice.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package games.strategy.triplea.delegate.dice.roller;\n+\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.DiceRoll;\n+import games.strategy.triplea.delegate.dice.calculator.LowLuckDice;\n+import games.strategy.triplea.delegate.dice.calculator.RolledDice;\n+import games.strategy.triplea.delegate.power.calculator.CombatValue;\n+import games.strategy.triplea.delegate.power.calculator.PowerStrengthAndRolls;\n+import games.strategy.triplea.formatter.MyFormatter;\n+import java.util.Collection;\n+import lombok.experimental.UtilityClass;\n+\n+/** Used to roll dice for attackers and defenders in battles. */\n+@UtilityClass\n+public class RollBattleDice {\n+\n+  public static DiceRoll rollDice(\n+      final Collection<Unit> units,\n+      final GamePlayer player,\n+      final IDelegateBridge bridge,\n+      final String annotation,\n+      final CombatValue combatValueCalculator) {\n+\n+    final DiceRoll diceRoll;\n+    final PowerStrengthAndRolls unitPowerAndRollsMap =\n+        PowerStrengthAndRolls.build(units, combatValueCalculator);\n+    if (Properties.getLowLuck(bridge.getData().getProperties())) {\n+      diceRoll = LowLuckDice.calculate(unitPowerAndRollsMap, player, bridge::getRandom, annotation);\n+    } else {\n+      diceRoll = RolledDice.calculate(unitPowerAndRollsMap, player, bridge::getRandom, annotation);\n+    }\n+\n+    bridge", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNTI3Nw=="}, "originalCommit": {"oid": "45497c670215693cab6810ae01c6a130f0a1c270"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE1MjU2Ng==", "bodyText": "This class is a builder of DiceRoll.  You shouldn't create your own DiceRoll but instead call this method if you need to roll N dice.  This also creates special IGNORED dice.  You don't want to use this for battle situations.  This is currently used by war bonds but I want to expand it to the other places that call bridge.getRandom so that we have a unified dice logic.\nI thought of calling this RollIgnoredDice but that would be really strange.  It was originally called rollNDice and I think it fits.", "url": "https://github.com/triplea-game/triplea/pull/8308#discussion_r532152566", "createdAt": "2020-11-29T04:15:28Z", "author": {"login": "trevan"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/dice/roller/RollNDice.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package games.strategy.triplea.delegate.dice.roller;\n+\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.engine.random.IRandomStats;\n+import games.strategy.triplea.delegate.DiceRoll;\n+import games.strategy.triplea.delegate.Die;\n+import java.util.ArrayList;\n+import java.util.List;\n+import lombok.experimental.UtilityClass;\n+\n+/**\n+ * Roll n-sided dice.\n+ *\n+ * <p>0 based, add 1 to get actual die roll\n+ */\n+@UtilityClass\n+public class RollNDice {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNTE2OQ=="}, "originalCommit": {"oid": "45497c670215693cab6810ae01c6a130f0a1c270"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjE1Mjc5NQ==", "bodyText": "I have been thinking of changing the annotation from a String to a DiceAnnotation (or similar).  Then the parameter to these methods would require a DiceAnnotation instead of a String and it would ensure that the annotation is the correct format (since the history string is parsed to build the probability history).  I could make DiceAnnotation accept a bridge so that it also writes the history and then change these classes to call a method on the DiceAnnotation object that will write the history.  But that would be another PR.", "url": "https://github.com/triplea-game/triplea/pull/8308#discussion_r532152795", "createdAt": "2020-11-29T04:18:57Z", "author": {"login": "trevan"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/dice/roller/RollBattleDice.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package games.strategy.triplea.delegate.dice.roller;\n+\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.Unit;\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.DiceRoll;\n+import games.strategy.triplea.delegate.dice.calculator.LowLuckDice;\n+import games.strategy.triplea.delegate.dice.calculator.RolledDice;\n+import games.strategy.triplea.delegate.power.calculator.CombatValue;\n+import games.strategy.triplea.delegate.power.calculator.PowerStrengthAndRolls;\n+import games.strategy.triplea.formatter.MyFormatter;\n+import java.util.Collection;\n+import lombok.experimental.UtilityClass;\n+\n+/** Used to roll dice for attackers and defenders in battles. */\n+@UtilityClass\n+public class RollBattleDice {\n+\n+  public static DiceRoll rollDice(\n+      final Collection<Unit> units,\n+      final GamePlayer player,\n+      final IDelegateBridge bridge,\n+      final String annotation,\n+      final CombatValue combatValueCalculator) {\n+\n+    final DiceRoll diceRoll;\n+    final PowerStrengthAndRolls unitPowerAndRollsMap =\n+        PowerStrengthAndRolls.build(units, combatValueCalculator);\n+    if (Properties.getLowLuck(bridge.getData().getProperties())) {\n+      diceRoll = LowLuckDice.calculate(unitPowerAndRollsMap, player, bridge::getRandom, annotation);\n+    } else {\n+      diceRoll = RolledDice.calculate(unitPowerAndRollsMap, player, bridge::getRandom, annotation);\n+    }\n+\n+    bridge", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNTI3Nw=="}, "originalCommit": {"oid": "45497c670215693cab6810ae01c6a130f0a1c270"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c149ae17d2ce8199c0151b1d75ecfcba8c00531d", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/c149ae17d2ce8199c0151b1d75ecfcba8c00531d", "committedDate": "2020-11-30T01:55:39Z", "message": "Merge remote-tracking branch 'upstream/master' into move-dice-rolling-code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7974c2007eb535e0fe627a146b650add4d2eef8d", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/7974c2007eb535e0fe627a146b650add4d2eef8d", "committedDate": "2020-11-30T02:33:51Z", "message": "Rename RollNDice to be more explicit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4557461c049f97784ec5ee4330a220b96e3bc466", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/4557461c049f97784ec5ee4330a220b96e3bc466", "committedDate": "2020-12-02T05:44:27Z", "message": "Combine the three factory classes to just one"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e53b054df632322ccc2114106a32c0fd86e62a87", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/e53b054df632322ccc2114106a32c0fd86e62a87", "committedDate": "2020-12-02T05:47:42Z", "message": "Merge remote-tracking branch 'upstream/master' into move-dice-rolling-code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1Mzk0Mjk0", "url": "https://github.com/triplea-game/triplea/pull/8308#pullrequestreview-545394294", "createdAt": "2020-12-05T02:26:36Z", "commit": {"oid": "e53b054df632322ccc2114106a32c0fd86e62a87"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3790, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}