{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMjkxMDYz", "number": 6086, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0MTo1NlrODq_29A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDozODo1NVrODrfQbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDEzMDQ0OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0MTo1NlrOF7Fzfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0MTo1NlrOF7Fzfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNTQwNg==", "bodyText": "Avoid deeply nested control flow statements.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397505406", "createdAt": "2020-03-24T22:41:56Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {\n+      final Territory node = queue.removeFirst();\n+      for (final Territory t2 : map.getNeighbors(node)) {\n+        if (visited.add(t2)) {\n+          queue.add(t2);\n+          if (enemyCapitalsAndFactories.contains(t2)) {\n+            found.add(t2);\n+            if (found.size() == enemyCapitalsAndFactories.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDEzMDQ1OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0MTo1NlrOF7Fzfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0MTo1NlrOF7Fzfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNTQwNw==", "bodyText": "Method findNearbyEnemyCapitalsAndFactories has 29 lines of code (exceeds 25 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397505407", "createdAt": "2020-03-24T22:41:56Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDEzMDQ3OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0MTo1N1rOF7Fzgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0MTo1N1rOF7Fzgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNTQxMA==", "bodyText": "Method findNearbyEnemyCapitalsAndFactories has a Cognitive Complexity of 22 (exceeds 5 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397505410", "createdAt": "2020-03-24T22:41:57Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDM4ODcwOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDozNzoxM1rOF7ILxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDozNzoyN1rOF73Huw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NDM4OQ==", "bodyText": "Even if it saves some redundant overhead, it is good practice to use equals over reference equality.\nHave a look at the errorprone explanation for this \"warning\"/error: https://github.com/google/error-prone/blob/master/docs/bugpattern/ReferenceEquality.md", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397544389", "createdAt": "2020-03-25T00:37:13Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {\n+      final Territory node = queue.removeFirst();\n+      for (final Territory t2 : map.getNeighbors(node)) {\n+        if (visited.add(t2)) {\n+          queue.add(t2);\n+          if (enemyCapitalsAndFactories.contains(t2)) {\n+            found.add(t2);\n+            if (found.size() == enemyCapitalsAndFactories.size()) {\n+              break;\n+            }\n+          }\n+        }\n       }\n-    }\n \n-    return nearbyEnemyCapitalsAndFactories;\n+      if (node == nextDistanceAfter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5Mjk4MA==", "bodyText": "The logic here is intended to compute distance without significant extra overhead. I'd have to check how much equals() adds. If it's non-trivial, might be better to just track distance explicitly (by having a Node type that includes a Territory and a distance member).", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398192980", "createdAt": "2020-03-25T21:52:17Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {\n+      final Territory node = queue.removeFirst();\n+      for (final Territory t2 : map.getNeighbors(node)) {\n+        if (visited.add(t2)) {\n+          queue.add(t2);\n+          if (enemyCapitalsAndFactories.contains(t2)) {\n+            found.add(t2);\n+            if (found.size() == enemyCapitalsAndFactories.size()) {\n+              break;\n+            }\n+          }\n+        }\n       }\n-    }\n \n-    return nearbyEnemyCapitalsAndFactories;\n+      if (node == nextDistanceAfter) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NDM4OQ=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIxNTQ2Ng==", "bodyText": "I checked with .equals() and the result is a 20% slowdown. :(", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398215466", "createdAt": "2020-03-25T22:43:22Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {\n+      final Territory node = queue.removeFirst();\n+      for (final Territory t2 : map.getNeighbors(node)) {\n+        if (visited.add(t2)) {\n+          queue.add(t2);\n+          if (enemyCapitalsAndFactories.contains(t2)) {\n+            found.add(t2);\n+            if (found.size() == enemyCapitalsAndFactories.size()) {\n+              break;\n+            }\n+          }\n+        }\n       }\n-    }\n \n-    return nearbyEnemyCapitalsAndFactories;\n+      if (node == nextDistanceAfter) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NDM4OQ=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODIzMTcxNw==", "bodyText": "We added ObjectUtils#referenceEquals() some time ago to act as documentation for the case when one really wants to use reference equality.  The Javadocs for this method state:\n* <p>Use this method only when you really need to compare object references for equality. In\n* almost all cases you should be using {@link Object#equals(Object)}. <strong>Using this method\n* documents your intention that a reference equality check is required.</strong>\nIts usage should prevent ErrorProne from triggering on this line.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398231717", "createdAt": "2020-03-25T23:28:39Z", "author": {"login": "ssoloff"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {\n+      final Territory node = queue.removeFirst();\n+      for (final Territory t2 : map.getNeighbors(node)) {\n+        if (visited.add(t2)) {\n+          queue.add(t2);\n+          if (enemyCapitalsAndFactories.contains(t2)) {\n+            found.add(t2);\n+            if (found.size() == enemyCapitalsAndFactories.size()) {\n+              break;\n+            }\n+          }\n+        }\n       }\n-    }\n \n-    return nearbyEnemyCapitalsAndFactories;\n+      if (node == nextDistanceAfter) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NDM4OQ=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxMzQwMw==", "bodyText": "Thanks, used that now.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398313403", "createdAt": "2020-03-26T04:37:27Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {\n+      final Territory node = queue.removeFirst();\n+      for (final Territory t2 : map.getNeighbors(node)) {\n+        if (visited.add(t2)) {\n+          queue.add(t2);\n+          if (enemyCapitalsAndFactories.contains(t2)) {\n+            found.add(t2);\n+            if (found.size() == enemyCapitalsAndFactories.size()) {\n+              break;\n+            }\n+          }\n+        }\n       }\n-    }\n \n-    return nearbyEnemyCapitalsAndFactories;\n+      if (node == nextDistanceAfter) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NDM4OQ=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDM5ODY1OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDo0Mjo0NVrOF7IRtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo1MToxMlrOF7vvWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NTkxMA==", "bodyText": "I undertand how this distance is counted, pretty clever way to do it efficiently, however a comment explaining it would be nice in case we ever look at this code again (which will likely happen)", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397545910", "createdAt": "2020-03-25T00:42:45Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {\n+      final Territory node = queue.removeFirst();\n+      for (final Territory t2 : map.getNeighbors(node)) {\n+        if (visited.add(t2)) {\n+          queue.add(t2);\n+          if (enemyCapitalsAndFactories.contains(t2)) {\n+            found.add(t2);\n+            if (found.size() == enemyCapitalsAndFactories.size()) {\n+              break;\n+            }\n+          }\n+        }\n       }\n-    }\n \n-    return nearbyEnemyCapitalsAndFactories;\n+      if (node == nextDistanceAfter) {\n+        distance++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5MjQ3Mg==", "bodyText": "Added a comment, thanks!", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398192472", "createdAt": "2020-03-25T21:51:12Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {\n+      final Territory node = queue.removeFirst();\n+      for (final Territory t2 : map.getNeighbors(node)) {\n+        if (visited.add(t2)) {\n+          queue.add(t2);\n+          if (enemyCapitalsAndFactories.contains(t2)) {\n+            found.add(t2);\n+            if (found.size() == enemyCapitalsAndFactories.size()) {\n+              break;\n+            }\n+          }\n+        }\n       }\n-    }\n \n-    return nearbyEnemyCapitalsAndFactories;\n+      if (node == nextDistanceAfter) {\n+        distance++;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NTkxMA=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDQxMDkxOnYy", "diffSide": "LEFT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDo0OTowNlrOF7IYxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDo0OTowNlrOF7IYxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0NzcxNg==", "bodyText": "I just had a look at the implementation of the getNeighbours method with a distance and it is bad but still used.\nI'd really appreciate if you could have a look at that one as well in the near future.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397547716", "createdAt": "2020-03-25T00:49:06Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDc0Njc2OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNDowMzo1NVrOF7LdiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDo0MDo0MlrOF73Krg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODA4OA==", "bodyText": "IDK, I'd tend to agree with code climate on the length and complexity warning. The trick is not just to break up a method but to create the right abstractions. EG:\nwhile (!queue.isEmpty()) {\n   found.addAll(findAtDistance(distance, .... ));\n   distance ++;\n   if (distance > MAX_FACTORY_CHECK_DISTANCE\n        || (distance >= MIN_FACTORY_CHECK_DISTANCE && !found.isEmpty())) {\n       break;\n    }\n    nextDistanceAfter = queue.getLast();\n}\nreturn found;\n\nI don't know if that quite does it, it's an art to find something that works right and does not just create indirection.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397598088", "createdAt": "2020-03-25T04:03:55Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5NzQwOA==", "bodyText": "I don't think that helps, findAtDistance() would require too many params which codeclimate will complain about.\nThe only way I see of \"working around it\" is to make a helper class and move all these variables to be members. Then, helper methods don't need to take these params because they'd be explicitly taking them as part of being on the object, so codeclimate would not complain.\nI'm not sure this is something we should be optimizing for. The result would be instead of a 30-line method we'd have a 50-75 line class. Is that really a net win?", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398197408", "createdAt": "2020-03-25T22:01:49Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODA4OA=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5ODA2OQ==", "bodyText": "Put another way, would we be happy if every 30+ line method instead becomes its own class with a constructor and 2-5 other methods? Do we think that would be a better state?", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398198069", "createdAt": "2020-03-25T22:03:21Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODA4OA=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI1OTc4NQ==", "bodyText": "I'd say the complexity is ok here given this is a performance sensitive method. If anything I'd rather focus on adding some comments describing how it works as no matter how you chop it up it is going to be a bit complex.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398259785", "createdAt": "2020-03-26T01:03:51Z", "author": {"login": "ron-murhammer"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODA4OA=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4MjQ2Mg==", "bodyText": "I don't think that is necessarily the trade-off or decision. There are other ways..", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398282462", "createdAt": "2020-03-26T02:29:00Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODA4OA=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4NTYzMw==", "bodyText": "I don't think that helps, findAtDistance() would require too many params which codeclimate will complain about.\n\nIntroduce Parameter Object refactoring would solve that.\nThe big point is it's not necessarily about creating indirection, but abstractions and information hiding.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398285633", "createdAt": "2020-03-26T02:40:36Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODA4OA=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4NjY4MA==", "bodyText": "To expound slightly,  a data object with @Builder makes for a natural parameter object.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398286680", "createdAt": "2020-03-26T02:44:35Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODA4OA=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxNDE1OA==", "bodyText": "One simplification I made is removing MAX_FACTORY_CHECK_DISTANCE.\nThis is technically a change from the previous implementation, but in practice I think the only reason the previous implementation had it is because such a condition was needed to make sure it terminated (the old algo just expanded distance and kept trying to find things).\nIt's not needed in this implementation and just adds extra complexity. In practice, 30 away is very far. A small map like revised seems to have every territory less than 9 territories away from any other. A larger map like Big World still is well within the 30 limit.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398314158", "createdAt": "2020-03-26T04:40:42Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODA4OA=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDc0NzkwOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNDowNDo0MVrOF7LeIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo1MDo0NFrOF7vufQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODI0MQ==", "bodyText": "Is t equivalent to the startTerritory, the 'basis' for the search? I'm wondering if the algorithm perhaps would be a bit clearer if 't' and 't2' were spelled out a bit more.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397598241", "createdAt": "2020-03-25T04:04:41Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5MjI1Mw==", "bodyText": "Done.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398192253", "createdAt": "2020-03-25T21:50:44Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODI0MQ=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDc0ODYzOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwNDowNToyNVrOF7LelQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo1MDo1NlrOF7vuyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODM1Nw==", "bodyText": "Is this comment intended to be included?", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r397598357", "createdAt": "2020-03-25T04:05:25Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5MjMzMA==", "bodyText": "No, removed. Thanks!", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398192330", "createdAt": "2020-03-25T21:50:56Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU5ODM1Nw=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODQ4MjIwOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo1MjowNlrOF7vw9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo1MjowNlrOF7vw9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5Mjg4NA==", "bodyText": "Method findNearbyEnemyCapitalsAndFactories has a Cognitive Complexity of 17 (exceeds 5 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398192884", "createdAt": "2020-03-25T21:52:06Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,39 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  @SuppressWarnings(\"ReferenceEquality\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db4120e75c92262dd1568d9b578e2d98c8681466"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODQ4MjIyOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo1MjowNlrOF7vw9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMTo1MjowNlrOF7vw9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE5Mjg4Ng==", "bodyText": "Method findNearbyEnemyCapitalsAndFactories has 26 lines of code (exceeds 25 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398192886", "createdAt": "2020-03-25T21:52:06Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,39 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  @SuppressWarnings(\"ReferenceEquality\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db4120e75c92262dd1568d9b578e2d98c8681466"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTExMDM4OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMjo1MzowNFrOF71n0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDo0ODoxNlrOF73RXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4ODg1MQ==", "bodyText": "Sorry to pile on, nextDistanceAfter is not very clear to me. I would almost expect the value to be a scalar, similar to distance.  Can we brainstorm some potential better variable names?\n\nterritoryAtNextDistanceToCheck?", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398288851", "createdAt": "2020-03-26T02:53:04Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxMzI5Mw==", "bodyText": "Went with lastTerritoryAtCurrentDistance.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398313293", "createdAt": "2020-03-26T04:36:57Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4ODg1MQ=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxNTg2OA==", "bodyText": "Awesome, that is easier, thank you", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398315868", "createdAt": "2020-03-26T04:48:16Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4ODg1MQ=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTExMTc1OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwMjo1Mzo1M1rOF71orw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDozNjo1MlrOF73HNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4OTA3MQ==", "bodyText": "nit, queue could perhaps be more descriptive as well. Is this the queue of territories to check? territoriesToCheck perhaps as a better name? It would make this boolean conditional perhaps a bit more clear.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398289071", "createdAt": "2020-03-26T02:53:53Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxMzI3MQ==", "bodyText": "Done.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398313271", "createdAt": "2020-03-26T04:36:52Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +431,41 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n+  // 1700 oldT=4906 newT=227 newT2=166 newT3=152\n+  @SuppressWarnings(\"ReferenceEquality\")\n   private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n-\n-    Set<Territory> nearbyEnemyCapitalsAndFactories = new HashSet<>();\n-    for (int i = MIN_FACTORY_CHECK_DISTANCE; i <= MAX_FACTORY_CHECK_DISTANCE; i++) {\n-      nearbyEnemyCapitalsAndFactories = t.getData().getMap().getNeighbors(t, i);\n-      nearbyEnemyCapitalsAndFactories.retainAll(enemyCapitalsAndFactoriesMap.keySet());\n-      if (!nearbyEnemyCapitalsAndFactories.isEmpty()) {\n-        break;\n+      final Territory t, final Set<Territory> enemyCapitalsAndFactories) {\n+    final GameMap map = t.getData().getMap();\n+\n+    int distance = 0;\n+    Territory nextDistanceAfter = t;\n+\n+    final var found = new HashSet<Territory>();\n+    final var visited = new HashSet<Territory>(List.of(t));\n+    final var queue = new ArrayDeque<Territory>(List.of(t));\n+    while (!queue.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODI4OTA3MQ=="}, "originalCommit": {"oid": "7279d0c01208ebe33b67b033c8d281e225081a4d"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTI3NDcxOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDozODo1NVrOF73JGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNDozODo1NVrOF73JGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMxMzc1NQ==", "bodyText": "Method findNearbyEnemyCapitalsAndFactories has a Cognitive Complexity of 16 (exceeds 5 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6086#discussion_r398313755", "createdAt": "2020-03-26T04:38:55Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ai/pro/util/ProTerritoryValueUtils.java", "diffHunk": "@@ -429,18 +432,55 @@ private static double findWaterValue(\n     return capitalOrFactoryValue / 100 + nearbyLandValue / 10;\n   }\n \n-  private static Set<Territory> findNearbyEnemyCapitalsAndFactories(\n-      final Territory t, final Map<Territory, Double> enemyCapitalsAndFactoriesMap) {\n+  /**\n+   * Finds enemy capitals / factors from a list that are \"nearby\" a given territory.\n+   *\n+   * <p>If any of the target territories exist within a distance of 9, returns the subset that do.\n+   * Otherwise, proceeds to check the territories at each subsequent distance until at least one\n+   * capital is found.\n+   *\n+   * <p>Note: This is an optimized version of a previous, much slower algorithm that has been\n+   * designed to keep the original behavior, but tuned for speed.\n+   *\n+   * @param startTerritory The territory from where to start the search.\n+   * @param enemyCapitalsAndFactories The territories to search for.\n+   * @return Subset of enemyCapitalsAndFactories that were found.\n+   */\n+  protected static Collection<Territory> findNearbyEnemyCapitalsAndFactories(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35679d61940329e8a2a01f5918f03b61d3b46474"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2375, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}