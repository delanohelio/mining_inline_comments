{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NDU5ODE1", "number": 5806, "title": "Bump error_prone_core from 2.3.3 to 2.3.4", "bodyText": "Bumps error_prone_core from 2.3.3 to 2.3.4.\n\nRelease notes\nSourced from error_prone_core's releases.\n\nError Prone 2.3.4\nPerformance Improvements: 40% speedup when run against Google's codebase with errors enabled.\nNew Checks:\n\nAlmostJavadoc\nBoxedPrimitiveEquality\nChainedAssertionLosesContext\nCheckNotNullMultipleTimes\nDescribeMatch\nDoNotMockChecker and @DoNotMock\nDurationTemporalUnit\nEmptyBlockTag\nExtendsAutoValue\nFieldCanBeLocal\nImplementAssertionWithChaining\nIncomparable\nInstantTemporalUnit\nInterruptedExceptionSwallowed\nInvalidJavaTimeConstant\nJavaLocalDateTimeGetNano\nJavaLocalTimeGetNano\nJavaPeriodGetDays\nLiteEnumValueOf\nLiteProtoToString\nLocalDateTemporalAmount\nModifySourceCollectionInStream\nParametersButNotParameterized\nPreferJavaTimeOverload\nPrimitiveAtomicReference\nSameNameButDifferent\nTheoryButNoTheories\nThrowSpecificExceptions\nTransientMisuse\nUnnecessaryAnonymousClass\nUnnecessaryBoxedAssignment\nUnnecessaryBoxedVariable\nUnnecessaryLambda\nUnnecessaryMethodInvocationMatcher\nWithSignatureDiscouraged\nXorPower\n\nRemoved, moved, or disabled:\n\nMoved Mockito checks into Mockito Error Prone Subproject.\nMerged PreconditionsCheckNotNull and PreconditionsCheckNotNullPrimitive into UnnecessaryCheckNotNull.\nDeleted DeprecatedThreadMethods in favour of general-purpose deprecation warnings.\nDisabled ProvidesFixChecker as it causes too much noise.\n\nFixed issues: #1106, #1225, #1231, #1234, #1238, #1241, #1246, #1252, #1259, #1260, #1271, #1274, #1287, #1308, #1316, #1329, #1373, #1391, #1408\n\n\n\nCommits\n\n6309061 [maven-release-plugin] prepare release v2.3.4\n36713f5 Make ExtendsAutoValue an ERROR.\n2230bd1 Add a flag to GuardedByChecker to allow matching ERRORs & member selects on m...\n201c2a2 Add more detailed documentation for ExtendsAutoValue, including recommendations\ndecd300 ExtendsAutoValue: include AutoOneOf too.\nbb1b5cd Fix overlapping replacement errors in UnnecessaryAnonymousClass when suggesti...\n2118ba3 SuggestedFixes.compilesWithFix: make onlyInSameCompilationUnit work with -Wer...\nc7a810a ParametersButNotParameterized: don't match on ParameterizedTestRunner, which ...\n45681a2 ParameterName: More regex improvements.\nd94fa23 Fix IllegalArgumentException in ParameterName when varargs are empty.\nAdditional commits viewable in compare view\n\n\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting @dependabot rebase.\n\nNote: This repo was added to Dependabot recently, so you'll receive a maximum of 5 PRs for your first few update runs. Once an update run creates fewer than 5 PRs we'll remove that limit.\nYou can always request more updates by clicking Bump now in your Dependabot dashboard.\n\nDependabot commands and options\n\nYou can trigger Dependabot actions by commenting on this PR:\n\n@dependabot rebase will rebase this PR\n@dependabot recreate will recreate this PR, overwriting any edits that have been made to it\n@dependabot merge will merge this PR after your CI passes on it\n@dependabot squash and merge will squash and merge this PR after your CI passes on it\n@dependabot cancel merge will cancel a previously requested merge and block automerging\n@dependabot reopen will reopen this PR if it is closed\n@dependabot close will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n@dependabot ignore this major version will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this minor version will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n@dependabot ignore this dependency will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n@dependabot use these labels will set the current labels as the default for future PRs for this repo and language\n@dependabot use these reviewers will set the current reviewers as the default for future PRs for this repo and language\n@dependabot use these assignees will set the current assignees as the default for future PRs for this repo and language\n@dependabot use this milestone will set the current milestone as the default for future PRs for this repo and language\n@dependabot badge me will comment on this PR with code to add a \"Dependabot enabled\" badge to your readme\n\nAdditionally, you can set the following in your Dependabot dashboard:\n\nUpdate frequency (including time of day and day of week)\nPull request limits (per update run and/or open at any time)\nOut-of-range updates (receive only lockfile updates, if desired)\nSecurity updates (receive only security updates, if desired)", "createdAt": "2020-01-01T07:20:08Z", "url": "https://github.com/triplea-game/triplea/pull/5806", "merged": true, "mergeCommit": {"oid": "ea5bb0ed72f6fac4b1dade4d8ee9e8997769bd3f"}, "closed": true, "closedAt": "2020-01-19T00:59:19Z", "author": {"login": "dependabot-preview"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2LjgvgBqjI5MTY3MDUwNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb7s-bGAH2gAyMzU4NDU5ODE1Ojg4MjhlZmJjZGZhMjVjNDFlMmM3NTY4MTA5ODQyYzEyNTY4ZDhlYjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be9ce81ec49e6a5821ebe6e29228f5a0132893e9", "author": {"user": {"login": "dependabot-preview[bot]", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/be9ce81ec49e6a5821ebe6e29228f5a0132893e9", "committedDate": "2020-01-01T07:20:04Z", "message": "Bump error_prone_core from 2.3.3 to 2.3.4\n\nBumps [error_prone_core](https://github.com/google/error-prone) from 2.3.3 to 2.3.4.\n- [Release notes](https://github.com/google/error-prone/releases)\n- [Commits](https://github.com/google/error-prone/compare/v2.3.3...v2.3.4)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>"}, "afterCommit": {"oid": "7b72fe9c17dae2bf95564425b3425576601aa677", "author": {"user": {"login": "dependabot-preview[bot]", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/7b72fe9c17dae2bf95564425b3425576601aa677", "committedDate": "2020-01-01T20:54:33Z", "message": "Bump error_prone_core from 2.3.3 to 2.3.4\n\nBumps [error_prone_core](https://github.com/google/error-prone) from 2.3.3 to 2.3.4.\n- [Release notes](https://github.com/google/error-prone/releases)\n- [Commits](https://github.com/google/error-prone/compare/v2.3.3...v2.3.4)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13430acc821b257844a3e017b23cbf8155517708", "author": {"user": {"login": "dependabot-preview[bot]", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/13430acc821b257844a3e017b23cbf8155517708", "committedDate": "2020-01-02T07:56:16Z", "message": "Bump error_prone_core from 2.3.3 to 2.3.4\n\nBumps [error_prone_core](https://github.com/google/error-prone) from 2.3.3 to 2.3.4.\n- [Release notes](https://github.com/google/error-prone/releases)\n- [Commits](https://github.com/google/error-prone/compare/v2.3.3...v2.3.4)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b72fe9c17dae2bf95564425b3425576601aa677", "author": {"user": {"login": "dependabot-preview[bot]", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/7b72fe9c17dae2bf95564425b3425576601aa677", "committedDate": "2020-01-01T20:54:33Z", "message": "Bump error_prone_core from 2.3.3 to 2.3.4\n\nBumps [error_prone_core](https://github.com/google/error-prone) from 2.3.3 to 2.3.4.\n- [Release notes](https://github.com/google/error-prone/releases)\n- [Commits](https://github.com/google/error-prone/compare/v2.3.3...v2.3.4)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>"}, "afterCommit": {"oid": "13430acc821b257844a3e017b23cbf8155517708", "author": {"user": {"login": "dependabot-preview[bot]", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/13430acc821b257844a3e017b23cbf8155517708", "committedDate": "2020-01-02T07:56:16Z", "message": "Bump error_prone_core from 2.3.3 to 2.3.4\n\nBumps [error_prone_core](https://github.com/google/error-prone) from 2.3.3 to 2.3.4.\n- [Release notes](https://github.com/google/error-prone/releases)\n- [Commits](https://github.com/google/error-prone/compare/v2.3.3...v2.3.4)\n\nSigned-off-by: dependabot-preview[bot] <support@dependabot.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "062ac0534b8b15c2bfef93ee14aed79451bc4eaa", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/062ac0534b8b15c2bfef93ee14aed79451bc4eaa", "committedDate": "2020-01-02T10:05:55Z", "message": "Fix errorprone errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd66f385b044cdf83aeaf08c7922ee2e834282ce", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/fd66f385b044cdf83aeaf08c7922ee2e834282ce", "committedDate": "2020-01-02T10:25:03Z", "message": "Fix method ordering"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NDI0MTk1", "url": "https://github.com/triplea-game/triplea/pull/5806#pullrequestreview-338424195", "createdAt": "2020-01-05T22:08:05Z", "commit": {"oid": "062ac0534b8b15c2bfef93ee14aed79451bc4eaa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQyMjowODowNVrOFaTG9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQyMjowODowNVrOFaTG9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyMDM3Mw==", "bodyText": "The supplier was important before, I forget the exact reasoning why :(\nI think the issue is that the read contents are cached. It was a deceptive situation previously where tests passed but they were reading stale input and a re-ordering of tests caused a failure. The other issue might have been input stream being re-read/exhausted. Again, can't really recall what the subtle point was (should have documented it), it's worth taking a double check here.", "url": "https://github.com/triplea-game/triplea/pull/5806#discussion_r363120373", "createdAt": "2020-01-05T22:08:05Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/test/java/org/triplea/live/servers/ServerYamlParserTest.java", "diffHunk": "@@ -12,19 +12,19 @@\n import java.io.InputStream;\n import java.net.URI;\n import java.util.List;\n-import java.util.function.Supplier;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.params.ParameterizedTest;\n import org.junit.jupiter.params.provider.MethodSource;\n import org.triplea.util.Version;\n \n class ServerYamlParserTest {\n \n-  private static final Supplier<InputStream> SAMPLE_FILE_INPUT =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "062ac0534b8b15c2bfef93ee14aed79451bc4eaa"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NDI0MjQx", "url": "https://github.com/triplea-game/triplea/pull/5806#pullrequestreview-338424241", "createdAt": "2020-01-05T22:09:03Z", "commit": {"oid": "062ac0534b8b15c2bfef93ee14aed79451bc4eaa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQyMjowOTowNFrOFaTHJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQyMjoyMzo0OFrOFaTKRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyMDQyMA==", "bodyText": "The method name seems out of date, perhaps we would just as well inline the supplier where it's needed?", "url": "https://github.com/triplea-game/triplea/pull/5806#discussion_r363120420", "createdAt": "2020-01-05T22:09:04Z", "author": {"login": "DanVanAtta"}, "path": "http-clients/src/test/java/org/triplea/http/client/SystemIdHeaderTest.java", "diffHunk": "@@ -14,18 +13,23 @@\n @ExtendWith(MockitoExtension.class)\n class SystemIdHeaderTest {\n   private static final String SYSTEM_ID = \"system-id\";\n-  private static final Supplier<SystemId> SYSTEM_ID_SUPPLIER = () -> SystemId.of(SYSTEM_ID);\n+\n+  private static SystemId systemIdSupplier() {\n+    return SystemId.of(SYSTEM_ID);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "062ac0534b8b15c2bfef93ee14aed79451bc4eaa"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyMDY1NA==", "bodyText": "I think we might be losing the purpose of this test. We are checking that a refresh will put the value back into the cache again. refresh could be implemented as a no-op and this test would still pass. If using a live cache, we could try to test the same thing by waiting for a cache key to almost be expired. I gave that a try as a first implementation when writing this test but found it to be brittle. EG:\nT0: write key that expires at T10\nT5: refresh key, extends expiry to T15\nT12: verify key value still exists, verifies that key was refreshed and did not expire at T10 \n\nThe mock object route version is more deterministic and hence the preference for it in this test.", "url": "https://github.com/triplea-game/triplea/pull/5806#discussion_r363120654", "createdAt": "2020-01-05T22:13:14Z", "author": {"login": "DanVanAtta"}, "path": "http-server/src/test/java/org/triplea/server/lobby/CacheUtilsTest.java", "diffHunk": "@@ -83,12 +79,13 @@ void refreshTrueWhenFoundInCache() {\n \n     @Test\n     void refreshedItemsAreWrittenBackIntoTheCache() {\n-      when(mockCache.getIfPresent(KEY)).thenReturn(VALUE);\n+      final Cache<String, Integer> cache = CacheBuilder.newBuilder().build();\n+      cache.put(KEY, VALUE);\n \n-      final boolean result = CacheUtils.refresh(mockCache, KEY);\n+      final boolean result = CacheUtils.refresh(cache, KEY);\n \n       assertThat(result, is(true));\n-      verify(mockCache).put(KEY, VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "062ac0534b8b15c2bfef93ee14aed79451bc4eaa"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyMDc4Mw==", "bodyText": "nit, I think it's perhaps more conventional to have the hamcrest 'actual' value be as \"naked\" as possible (so the cast would be moved to the expected value). In this case though, we should probably just use the right matcher to achieve that, eg: assertThat(result, IsCollectionWithSize.hasSize(cache.size())", "url": "https://github.com/triplea-game/triplea/pull/5806#discussion_r363120783", "createdAt": "2020-01-05T22:15:26Z", "author": {"login": "DanVanAtta"}, "path": "http-server/src/test/java/org/triplea/server/lobby/game/listing/GameListingTest.java", "diffHunk": "@@ -77,16 +76,13 @@ void setup() {\n     /** Basic case, no games added, expect none to be returned. */\n     @Test\n     void getGames() {\n-      final Map<GameId, LobbyGame> games = new HashMap<>();\n-      games.put(ID_0, lobbyGame0);\n-      games.put(new GameId(API_KEY_0, GAME_ID_1), lobbyGame1);\n-      games.put(new GameId(API_KEY_1, GAME_ID_2), lobbyGame2);\n-\n-      when(cache.asMap()).thenReturn(new ConcurrentHashMap<>(games));\n+      cache.put(ID_0, lobbyGame0);\n+      cache.put(new GameId(API_KEY_0, GAME_ID_1), lobbyGame1);\n+      cache.put(new GameId(API_KEY_1, GAME_ID_2), lobbyGame2);\n \n       final List<LobbyGameListing> result = gameListing.getGames();\n \n-      assertThat(result.size(), is(games.size()));\n+      assertThat((long) result.size(), is(cache.size()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "062ac0534b8b15c2bfef93ee14aed79451bc4eaa"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyMDg4NQ==", "bodyText": "Nit: Can use the empty map matcher here to be more explicit about the match criteria.", "url": "https://github.com/triplea-game/triplea/pull/5806#discussion_r363120885", "createdAt": "2020-01-05T22:16:45Z", "author": {"login": "DanVanAtta"}, "path": "http-server/src/test/java/org/triplea/server/lobby/game/listing/GameListingTest.java", "diffHunk": "@@ -108,48 +104,42 @@ void getGames() {\n   final class KeepAlive {\n     @Test\n     void noGamesPresent() {\n-      when(cache.getIfPresent(ID_0)).thenReturn(null);\n-\n       final boolean result = gameListing.keepAlive(API_KEY_0, GAME_ID_0);\n       assertThat(\"Game not found, keep alive should return false\", result, is(false));\n \n-      verify(cache, never()).put(any(), any());\n+      assertThat(cache.asMap(), is(Map.of()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "062ac0534b8b15c2bfef93ee14aed79451bc4eaa"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyMTA2OA==", "bodyText": "I'm not sure if this assertion is testing very much, seems like it should be true based on the library spec of the cache we are using and not anything related to the keepAlive. The call to put is important for keepAlive so that it extends the cache expiration.\nI suspect in order to maintain the same level of test, we either need a mock of the cache, or we will need to extract the cache implementation behind an API (and then inject+mock that).\nThis same comment/concern follows for the rest of the examples in this test", "url": "https://github.com/triplea-game/triplea/pull/5806#discussion_r363121068", "createdAt": "2020-01-05T22:20:40Z", "author": {"login": "DanVanAtta"}, "path": "http-server/src/test/java/org/triplea/server/lobby/game/listing/GameListingTest.java", "diffHunk": "@@ -108,48 +104,42 @@ void getGames() {\n   final class KeepAlive {\n     @Test\n     void noGamesPresent() {\n-      when(cache.getIfPresent(ID_0)).thenReturn(null);\n-\n       final boolean result = gameListing.keepAlive(API_KEY_0, GAME_ID_0);\n       assertThat(\"Game not found, keep alive should return false\", result, is(false));\n \n-      verify(cache, never()).put(any(), any());\n+      assertThat(cache.asMap(), is(Map.of()));\n     }\n \n     @Test\n     void gameExists() {\n-      when(cache.getIfPresent(ID_0)).thenReturn(lobbyGame0);\n+      cache.put(ID_0, lobbyGame0);\n \n       final boolean result = gameListing.keepAlive(API_KEY_0, GAME_ID_0);\n \n       assertThat(\"Game found, keep alive should return true\", result, is(true));\n-      verify(cache).put(ID_0, lobbyGame0);\n+      assertThat(cache.asMap(), is(Map.of(ID_0, lobbyGame0)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "062ac0534b8b15c2bfef93ee14aed79451bc4eaa"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyMTIyMQ==", "bodyText": "Any thoughts to inline this directly? I think that might be a bit more direct.", "url": "https://github.com/triplea-game/triplea/pull/5806#discussion_r363121221", "createdAt": "2020-01-05T22:23:48Z", "author": {"login": "DanVanAtta"}, "path": "swing-lib/src/test/java/org/triplea/swing/SwingActionTest.java", "diffHunk": "@@ -28,15 +27,10 @@\n class SwingActionTest {\n   private static final Object VALUE = new Object();\n \n-  private static final Runnable RUNNABLE_THROWING_EXCEPTION =\n-      () -> {\n-        throw new IllegalStateException();\n-      };\n+  private static Object throwException() {\n+    throw new IllegalStateException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "062ac0534b8b15c2bfef93ee14aed79451bc4eaa"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbabe3f56fec05e1933454823389ba6e1dd99fde", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/bbabe3f56fec05e1933454823389ba6e1dd99fde", "committedDate": "2020-01-05T23:17:47Z", "message": "Inline SystemId supplier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5882fe46238dfb282f029bdf14d81fb0c13833e", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/f5882fe46238dfb282f029bdf14d81fb0c13833e", "committedDate": "2020-01-19T00:28:23Z", "message": "Use matchers in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3340663bd079754bb54c82550f46a763e94b39a6", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/3340663bd079754bb54c82550f46a763e94b39a6", "committedDate": "2020-01-19T00:29:21Z", "message": "Revert changes to CacheUtilsTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93d44fd962cb0a97ffcc88ec222a595da4edd921", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/93d44fd962cb0a97ffcc88ec222a595da4edd921", "committedDate": "2020-01-19T00:39:44Z", "message": "Suppress DoNotMock warning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8828efbcdfa25c41e2c7568109842c12568d8eb4", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/8828efbcdfa25c41e2c7568109842c12568d8eb4", "committedDate": "2020-01-19T00:40:28Z", "message": "Merge remote-tracking branch 'origin/master' into dependabot/gradle/com.google.errorprone-error_prone_core-2.3.4"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3740, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}