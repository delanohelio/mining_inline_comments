{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMDM3NDky", "number": 8349, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwNjozOTowNFrOFBY0Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwNjo0MDozM1rOFBY0zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2OTk5NDM4OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/ClearBombardmentCasualties.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwNjozOTowNFrOIAGEMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMToxNjo1N1rOIAPhwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjk3MDI4OQ==", "bodyText": "nit, valid could be more descriptive. When reading the usage, I wondered \"what is valid?\"\nSome rename suggestions:\n\n\"isBombardmentRound\"\n\"bombardmentOccurred\"\n\"bombardUnitsWillFire\"\n\nSide-note, I wonder if it would make sense to create a BombardmentRules object so we can centralize logic like this, where we have one source  to detect, when/how/if bombardment should occur.", "url": "https://github.com/triplea-game/triplea/pull/8349#discussion_r536970289", "createdAt": "2020-12-06T06:39:04Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/ClearBombardmentCasualties.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package games.strategy.triplea.delegate.battle.steps.change;\n+\n+import static games.strategy.triplea.delegate.battle.BattleStepStrings.REMOVE_BOMBARDMENT_CASUALTIES;\n+\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.ExecutionStack;\n+import games.strategy.triplea.delegate.battle.BattleActions;\n+import games.strategy.triplea.delegate.battle.BattleState;\n+import games.strategy.triplea.delegate.battle.steps.BattleStep;\n+import java.util.List;\n+import lombok.AllArgsConstructor;\n+\n+@AllArgsConstructor\n+public class ClearBombardmentCasualties implements BattleStep {\n+  private static final long serialVersionUID = -5723287846470464298L;\n+\n+  private final BattleState battleState;\n+\n+  private final BattleActions battleActions;\n+\n+  @Override\n+  public List<String> getNames() {\n+    return valid() && clearCasualties() ? List.of(REMOVE_BOMBARDMENT_CASUALTIES) : List.of();\n+  }\n+\n+  @Override\n+  public BattleStep.Order getOrder() {\n+    return Order.NAVAL_BOMBARDMENT_REMOVE_CASUALTIES;\n+  }\n+\n+  @Override\n+  public void execute(final ExecutionStack stack, final IDelegateBridge bridge) {\n+    if (valid() && clearCasualties()) {\n+      battleActions.clearWaitingToDieAndDamagedChangesInto(bridge);\n+    }\n+  }\n+\n+  private boolean clearCasualties() {\n+    return !Properties.getNavalBombardCasualtiesReturnFire(\n+        battleState.getGameData().getProperties());\n+  }\n+\n+  private boolean valid() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5637446fc28c683fc6555b5bd515de0787ef5da"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEyNTMxNA==", "bodyText": "I just wrote my thoughts on how to centralize the logic using the game XML in the forum.  You can see my thoughts at https://forums.triplea-game.org/topic/2481/custom-battle-phases.  That forum post encompasses more than just centralizing bombardment logic.", "url": "https://github.com/triplea-game/triplea/pull/8349#discussion_r537125314", "createdAt": "2020-12-06T21:16:57Z", "author": {"login": "trevan"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/change/ClearBombardmentCasualties.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package games.strategy.triplea.delegate.battle.steps.change;\n+\n+import static games.strategy.triplea.delegate.battle.BattleStepStrings.REMOVE_BOMBARDMENT_CASUALTIES;\n+\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.ExecutionStack;\n+import games.strategy.triplea.delegate.battle.BattleActions;\n+import games.strategy.triplea.delegate.battle.BattleState;\n+import games.strategy.triplea.delegate.battle.steps.BattleStep;\n+import java.util.List;\n+import lombok.AllArgsConstructor;\n+\n+@AllArgsConstructor\n+public class ClearBombardmentCasualties implements BattleStep {\n+  private static final long serialVersionUID = -5723287846470464298L;\n+\n+  private final BattleState battleState;\n+\n+  private final BattleActions battleActions;\n+\n+  @Override\n+  public List<String> getNames() {\n+    return valid() && clearCasualties() ? List.of(REMOVE_BOMBARDMENT_CASUALTIES) : List.of();\n+  }\n+\n+  @Override\n+  public BattleStep.Order getOrder() {\n+    return Order.NAVAL_BOMBARDMENT_REMOVE_CASUALTIES;\n+  }\n+\n+  @Override\n+  public void execute(final ExecutionStack stack, final IDelegateBridge bridge) {\n+    if (valid() && clearCasualties()) {\n+      battleActions.clearWaitingToDieAndDamagedChangesInto(bridge);\n+    }\n+  }\n+\n+  private boolean clearCasualties() {\n+    return !Properties.getNavalBombardCasualtiesReturnFire(\n+        battleState.getGameData().getProperties());\n+  }\n+\n+  private boolean valid() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjk3MDI4OQ=="}, "originalCommit": {"oid": "c5637446fc28c683fc6555b5bd515de0787ef5da"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2OTk5NjMxOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/fire/MarkCasualties.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwNjo0MDozM1rOIAGFCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwNjo0MDozM1rOIAGFCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjk3MDUwNQ==", "bodyText": "side comment, just realized the existing comment does not quite make sense.\nSpecifically \"ALL for everything\" reads odd, without context it does not really make sense.\nIf ALL is an enum or a constant defined somewhere, perhaps fully qualifying it would remove any confusion.", "url": "https://github.com/triplea-game/triplea/pull/8349#discussion_r536970505", "createdAt": "2020-12-06T06:40:33Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/fire/MarkCasualties.java", "diffHunk": "@@ -45,9 +44,7 @@\n \n   private final FireRoundState fireRoundState;\n \n-  @ChangeOnNextMajorRelease(\n-      \"returnFire is ALL for everything except NavalBombardment and old saves.\"\n-          + \"Rework so that returnFire isn't needed at all.\")\n+  @RemoveOnNextMajorRelease(\"returnFire is ALL for everything except old saves\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5637446fc28c683fc6555b5bd515de0787ef5da"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2637, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}