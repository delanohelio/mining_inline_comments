{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0Mzk4OTc0", "number": 8078, "title": "Convert Map<Unit, TotalPowerAndTotalRolls> into an instance of TotalPowerStrengthAndRolls", "bodyText": "Split AA logic and non-AA logic into two separate classes with a common\ninterface. AaPowerStrengthAndRolls is for AA logic and\nPowerStrengthAndRolls is for non-AA logic. TotalPowerAndTotalRolls is\nthe common interface.\nCorrect terminology of power, strength, and rolls in methods and variables.\n\nTesting\n\nPlayed World at War and TWW with Hard AI for a round.\nScreens Shots\n\nAdditional Notes to Reviewer\n\nRelease Note", "createdAt": "2020-11-02T23:52:42Z", "url": "https://github.com/triplea-game/triplea/pull/8078", "merged": true, "mergeCommit": {"oid": "573310f8823f8731ccdc208a314218c1f4e4a2c4"}, "closed": true, "closedAt": "2020-11-05T02:49:04Z", "author": {"login": "trevan"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYs22UgH2gAyNTE0Mzk4OTc0OjFiZTZhNzdhMjNkMWM4NTE2Nzg0ZDNkNTg3ODgyMDZlYzE4NzA3NTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZZOncAFqTUyMzg4ODc3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1be6a77a23d1c8516784d3d58788206ec1870757", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/1be6a77a23d1c8516784d3d58788206ec1870757", "committedDate": "2020-11-02T23:07:09Z", "message": "Convert Map<Unit, TotalPowerAndTotalRolls> into an instance of TotalPowerStrengthAndRolls\n\nSplit AA logic and non-AA logic into two separate classes with a common\ninterface. AaPowerStrengthAndRolls is for AA logic and\nPowerStrengthAndRolls is for non-AA logic. TotalPowerAndTotalRolls is\nthe common interface.\n\nCorrect terminology of power, strength, and rolls in methods and variables."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMTE0MTgy", "url": "https://github.com/triplea-game/triplea/pull/8078#pullrequestreview-522114182", "createdAt": "2020-11-02T23:56:01Z", "commit": {"oid": "1be6a77a23d1c8516784d3d58788206ec1870757"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQyMzo1NjowMVrOHsbKVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMDowNzoyM1rOHsbgpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0NDQwNw==", "bodyText": "I'd rather not grab the Map since I want that to be internal to PowerStrengthAndRolls but I didn't want to make too much change to this code at this point.", "url": "https://github.com/triplea-game/triplea/pull/8078#discussion_r516344407", "createdAt": "2020-11-02T23:56:01Z", "author": {"login": "trevan"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/casualty/CasualtyOrderOfLosses.java", "diffHunk": "@@ -102,16 +103,21 @@ void clearOolCache() {\n             parameters.data,\n             true,\n             true);\n-    final Map<Unit, IntegerMap<Unit>> unitSupportPowerMap = new HashMap<>();\n-    final Map<Unit, IntegerMap<Unit>> unitSupportRollsMap = new HashMap<>();\n-    final Map<Unit, TotalPowerAndTotalRolls> unitPowerAndRollsMap =\n-        TotalPowerAndTotalRolls.getUnitPowerAndRollsForNormalBattles(\n-            sortedUnitsList, parameters.combatValue, unitSupportPowerMap, unitSupportRollsMap);\n+    final PowerStrengthAndRolls unitPowerAndRolls =\n+        PowerStrengthAndRolls.build(sortedUnitsList, parameters.combatValue);\n+\n+    final Map<Unit, IntegerMap<Unit>> unitSupportPowerMap =\n+        unitPowerAndRolls.getUnitSupportPowerMap();\n+    final Map<Unit, IntegerMap<Unit>> unitSupportRollsMap =\n+        unitPowerAndRolls.getUnitSupportRollsMap();\n+\n+    final Map<Unit, UnitPowerStrengthAndRolls> unitPowerAndRollsMap =\n+        unitPowerAndRolls.getTotalStrengthAndTotalRollsByUnit();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1be6a77a23d1c8516784d3d58788206ec1870757"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0Nzk3Nw==", "bodyText": "This logic is copied from TotalPowerAndTotalRolls.  Oddly enough, getAttackAaMaxDieSides also checks if it is less than 0 and if so, it returns the gameData.getDiceSides().", "url": "https://github.com/triplea-game/triplea/pull/8078#discussion_r516347977", "createdAt": "2020-11-03T00:02:58Z", "author": {"login": "trevan"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/AaDefenseCombatValue.java", "diffHunk": "@@ -53,7 +53,13 @@ public RollCalculator getRoll() {\n \n   @Override\n   public StrengthCalculator getStrength() {\n-    return new AaDefenseStrength(gameData, supportFromFriends, supportFromEnemies);\n+    return new AaDefenseStrength(this, supportFromFriends, supportFromEnemies);\n+  }\n+\n+  @Override\n+  public int getDiceSides(final Unit unit) {\n+    final int diceSides = unit.getUnitAttachment().getAttackAaMaxDieSides();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1be6a77a23d1c8516784d3d58788206ec1870757"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0ODA5MQ==", "bodyText": "This logic is copied from TotalPowerAndTotalRolls", "url": "https://github.com/triplea-game/triplea/pull/8078#discussion_r516348091", "createdAt": "2020-11-03T00:03:12Z", "author": {"login": "trevan"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/AaOffenseCombatValue.java", "diffHunk": "@@ -53,7 +53,13 @@ public RollCalculator getRoll() {\n \n   @Override\n   public StrengthCalculator getStrength() {\n-    return new AaOffenseStrength(gameData, supportFromFriends, supportFromEnemies);\n+    return new AaOffenseStrength(this, supportFromFriends, supportFromEnemies);\n+  }\n+\n+  @Override\n+  public int getDiceSides(final Unit unit) {\n+    final int diceSides = unit.getUnitAttachment().getOffensiveAttackAaMaxDieSides();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1be6a77a23d1c8516784d3d58788206ec1870757"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0ODgxNw==", "bodyText": "Most of the logic in this method was moved from TotalPowerAndTotalRolls.", "url": "https://github.com/triplea-game/triplea/pull/8078#discussion_r516348817", "createdAt": "2020-11-03T00:04:42Z", "author": {"login": "trevan"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/power/calculator/UnitPowerStrengthAndRolls.java", "diffHunk": "@@ -0,0 +1,67 @@\n+package games.strategy.triplea.delegate.power.calculator;\n+\n+import javax.annotation.Nonnull;\n+import lombok.AccessLevel;\n+import lombok.Builder;\n+import lombok.Getter;\n+import lombok.NonNull;\n+import lombok.Value;\n+\n+/** Stores and computes an individual unit's power, strength and roll */\n+@Value\n+@Builder(access = AccessLevel.PACKAGE, toBuilder = true)\n+public class UnitPowerStrengthAndRolls {\n+  @Nonnull Integer strength;\n+  @Nonnull Integer rolls;\n+\n+  @Getter(AccessLevel.PACKAGE)\n+  @NonNull\n+  Integer diceSides;\n+\n+  @Getter(AccessLevel.PACKAGE)\n+  @NonNull\n+  Boolean chooseBestRoll;\n+\n+  public UnitPowerStrengthAndRolls subtractStrength(final int strengthToSubtract) {\n+    final int newStrength = Math.max(0, strength - strengthToSubtract);\n+    return this.toBuilder().strength(newStrength).rolls(newStrength == 0 ? 0 : rolls).build();\n+  }\n+\n+  public UnitPowerStrengthAndRolls subtractRolls(final int rollsToSubtract) {\n+    final int newRolls = Math.max(0, rolls - rollsToSubtract);\n+    return this.toBuilder().strength(newRolls == 0 ? 0 : strength).rolls(newRolls).build();\n+  }\n+\n+  /**\n+   * Calculates the power of the unit\n+   *\n+   * <p>Be careful using this with AA units because other AA units affect each other's power. Before\n+   * calling this on an AA unit, the entire group needs to be taken into account and adjusted. See\n+   * {@link AaPowerStrengthAndRolls} and how it adjusts the strength and rolls of a group of AA\n+   * units.\n+   */\n+  public int calculatePower() {\n+    int unitStrength = getStrength();\n+    final int unitRolls = getRolls();\n+    if (unitStrength <= 0 || unitRolls <= 0) {\n+      return 0;\n+    }\n+    // Bonus is normally 1 for most games\n+    final int extraRollBonus = Math.max(1, diceSides / 6);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1be6a77a23d1c8516784d3d58788206ec1870757"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM0OTQ0MA==", "bodyText": "In a later PR, I plan to make a new TotalPowerAndTotalRolls implementation for air attack/defense. That will be used here.", "url": "https://github.com/triplea-game/triplea/pull/8078#discussion_r516349440", "createdAt": "2020-11-03T00:06:01Z", "author": {"login": "trevan"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -875,15 +876,15 @@ void refresh() {\n       }\n       final List<Unit> units = new ArrayList<>(this.units);\n       DiceRoll.sortByStrength(units, !attack);\n-      final Map<Unit, TotalPowerAndTotalRolls> unitPowerAndRollsMap;\n+      final TotalPowerAndTotalRolls unitPowerAndRollsMap;\n       final boolean isAirPreBattleOrPreRaid = battleType.isAirBattle();\n       if (isAirPreBattleOrPreRaid) {\n-        unitPowerAndRollsMap = Map.of();\n+        unitPowerAndRollsMap = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1be6a77a23d1c8516784d3d58788206ec1870757"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjM1MDExNg==", "bodyText": "In a later PR, I'll split this test apart so that the AA tests are in AaPowerStrengthAndRollsTest and the non-AA are in PowerStrengthAndRollsTest.  I didn't do it as part of this PR because I wanted to be able to show that I didn't break any of the existing tests.", "url": "https://github.com/triplea-game/triplea/pull/8078#discussion_r516350116", "createdAt": "2020-11-03T00:07:23Z", "author": {"login": "trevan"}, "path": "game-core/src/test/java/games/strategy/triplea/delegate/power/calculator/TotalPowerAndTotalRollsTest.java", "diffHunk": "@@ -36,8 +33,6 @@\n import org.mockito.Mock;\n import org.mockito.junit.jupiter.MockitoExtension;\n import org.triplea.java.collections.IntegerMap;\n-import org.triplea.util.Triple;\n-import org.triplea.util.Tuple;\n \n @ExtendWith(MockitoExtension.class)\n class TotalPowerAndTotalRollsTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1be6a77a23d1c8516784d3d58788206ec1870757"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODg4Nzcz", "url": "https://github.com/triplea-game/triplea/pull/8078#pullrequestreview-523888773", "createdAt": "2020-11-05T02:48:56Z", "commit": {"oid": "1be6a77a23d1c8516784d3d58788206ec1870757"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3840, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}