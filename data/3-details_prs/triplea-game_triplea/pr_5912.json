{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMjkwOTQ1", "number": 5912, "title": "Pbem setup panel", "bodyText": "Overview\nStarts cleaning up UX in dice server email panel when selecting PBEM:\n\nadd a 'register' button to open MARTI registration URL. Otherwise a user has to 'test' the dice roller and note that it lists the 'register' link in the error message. The error message box is cut-off and displays raw-html which further complicates that task.\n'cc' email address is required by dice roller, make that a required field similar to 'to' address\nadd a title border around the dice roller options to make it clear what the fields are related to.\nadd tooltip text to 'test' button to explain why it is disabled\n\nDetailed Change Summary\ncommit e2c4a9c (HEAD -> pbem-setup-panel)\nAdd a register button to dice server options\n\ncommit 4c8f49c\nAdd test email button tooltip and mark 'cc' label as required\n\n1. Send test email button is disabled without a tooltip. This update\nadds a tooltip to explain that both 'to' and 'cc' email fields\nneed to be entered first.\n\n2. 'cc' label does not show up as red text when empty even though\nit is required by dice server to have a 'cc' email address. This\nupdate makes the 'cc' field show as red when empty and does not\nenable the 'test email' button until this field is non-empty\nwith a valid email address.\n\ncommit ef45961\nAdd a titled border around dicer server options\n\ncommit b19b8ef\nSimplify API in abstract class EditorPanel, remove helper method\n\nRemove helper method 'validateComboBox' and isntead invoke 'setLabelValid' directly.\n\n \nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[x] Feature update or enhancement\n[] Feature Removal\n[] Code Cleanup or refactor\n[] Configuration Change\n[] Problem fix:  \n[] Other:   \nTesting\n\n[x] Manual testing done\n\nRan through various field validation options and verified UI looks okay.\n\n\n\nScreens Shots\nBefore\n\nAfter\n\nTooltips", "createdAt": "2020-02-07T08:25:53Z", "url": "https://github.com/triplea-game/triplea/pull/5912", "merged": true, "mergeCommit": {"oid": "445e5d0c7709a494743fa4f088691b1be26cdac6"}, "closed": true, "closedAt": "2020-02-09T03:00:26Z", "author": {"login": "DanVanAtta"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcB6zHeAH2gAyMzcyMjkwOTQ1OmIxOWI4ZWYxOWE5NmUyMDY0MzJlZTMwN2VlMGVmMTdhODNlNzcwMjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCfL0lAH2gAyMzcyMjkwOTQ1OjEzNDNhODc1ZTgxZmI4ZTI3ZjU5OTAxOTQ1MTBmZjcyOWMxYzQzZDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b19b8ef19a96e206432ee307ee0ef17a83e77027", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/b19b8ef19a96e206432ee307ee0ef17a83e77027", "committedDate": "2020-02-07T08:10:20Z", "message": "Simplify API in abstract class EditorPanel, remove helper method\n\nRemove helper method 'validateComboBox' and isntead invoke 'setLabelValid' directly."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef45961010de33402c46cb6b7499b0e7b5d6605d", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/ef45961010de33402c46cb6b7499b0e7b5d6605d", "committedDate": "2020-02-07T08:10:20Z", "message": "Add a titled border around dicer server options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c8f49c06f9b5ec09bddb25238e7a6284ff9f195", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/4c8f49c06f9b5ec09bddb25238e7a6284ff9f195", "committedDate": "2020-02-07T08:10:20Z", "message": "Add test email button tooltip and mark 'cc' label as required\n\n1. Send test email button is disabled without a tooltip. This update\nadds a tooltip to explain that both 'to' and 'cc' email fields\nneed to be entered first.\n\n2. 'cc' label does not show up as red text when empty even though\nit is required by dice server to have a 'cc' email address. This\nupdate makes the 'cc' field show as red when empty and does not\nenable the 'test email' button until this field is non-empty\nwith a valid email address."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2c4a9c66f3b8c917273b724571d247257bc9551", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/e2c4a9c66f3b8c917273b724571d247257bc9551", "committedDate": "2020-02-07T08:24:15Z", "message": "Add a register button to dice server options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d67a7d4bbbe76cd2c83477a743ceca341d746e57", "author": {"user": {"login": "tripleabuilderbot", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/d67a7d4bbbe76cd2c83477a743ceca341d746e57", "committedDate": "2020-02-07T08:26:31Z", "message": "Auto-Formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTk0NjQ0", "url": "https://github.com/triplea-game/triplea/pull/5912#pullrequestreview-354994644", "createdAt": "2020-02-07T08:29:02Z", "commit": {"oid": "d67a7d4bbbe76cd2c83477a743ceca341d746e57"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODoyOTowMlrOFm1eiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QwODoyOTowNFrOFm1emA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2NjM3Ng==", "bodyText": "Identical blocks of code found in 4 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376266376", "createdAt": "2020-02-07T08:29:02Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -39,7 +52,13 @@ public DiceServerEditor(final Runnable readyCallback) {\n     final int labelSpace = 2;\n     int row = 0;\n     diceRollersByDisplayName.keySet().forEach(servers::addItem);\n-    add(\n+\n+    final JPanel diceRollerOptions = new JPanel();\n+    diceRollerOptions.setLayout(new GridBagLayout());\n+    diceRollerOptions.setBorder(new TitledBorder(\"Dice Server Options\"));\n+    add(diceRollerOptions);\n+\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67a7d4bbbe76cd2c83477a743ceca341d746e57"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2NjM3OQ==", "bodyText": "Identical blocks of code found in 4 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376266379", "createdAt": "2020-02-07T08:29:02Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -68,7 +87,7 @@ public DiceServerEditor(final Runnable readyCallback) {\n             0,\n             0));\n     row++;\n-    add(\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67a7d4bbbe76cd2c83477a743ceca341d746e57"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2NjM4MA==", "bodyText": "Identical blocks of code found in 4 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376266380", "createdAt": "2020-02-07T08:29:02Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -97,7 +116,7 @@ public DiceServerEditor(final Runnable readyCallback) {\n             0,\n             0));\n     row++;\n-    add(\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67a7d4bbbe76cd2c83477a743ceca341d746e57"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2NjM4MQ==", "bodyText": "Identical blocks of code found in 4 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376266381", "createdAt": "2020-02-07T08:29:03Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -127,7 +146,7 @@ public DiceServerEditor(final Runnable readyCallback) {\n             0));\n     row++;\n     final JLabel gameIdLabel = new JLabel(\"Game Name:\");\n-    add(\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67a7d4bbbe76cd2c83477a743ceca341d746e57"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2NjM4Mg==", "bodyText": "Identical blocks of code found in 4 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376266382", "createdAt": "2020-02-07T08:29:03Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -53,7 +72,7 @@ public DiceServerEditor(final Runnable readyCallback) {\n             new Insets(0, 0, bottomSpace, labelSpace),\n             0,\n             0));\n-    add(\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67a7d4bbbe76cd2c83477a743ceca341d746e57"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2NjM4Mw==", "bodyText": "Identical blocks of code found in 4 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376266383", "createdAt": "2020-02-07T08:29:03Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -141,7 +160,7 @@ public DiceServerEditor(final Runnable readyCallback) {\n             new Insets(0, 0, bottomSpace, labelSpace),\n             0,\n             0));\n-    add(\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67a7d4bbbe76cd2c83477a743ceca341d746e57"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2NjM4NQ==", "bodyText": "Identical blocks of code found in 4 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376266385", "createdAt": "2020-02-07T08:29:03Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -111,7 +130,7 @@ public DiceServerEditor(final Runnable readyCallback) {\n             new Insets(0, 0, bottomSpace, labelSpace),\n             0,\n             0));\n-    add(\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67a7d4bbbe76cd2c83477a743ceca341d746e57"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2NjM4Nw==", "bodyText": "Identical blocks of code found in 4 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376266387", "createdAt": "2020-02-07T08:29:03Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -82,7 +101,7 @@ public DiceServerEditor(final Runnable readyCallback) {\n             new Insets(0, 0, bottomSpace, labelSpace),\n             0,\n             0));\n-    add(\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67a7d4bbbe76cd2c83477a743ceca341d746e57"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2NjM4OQ==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376266389", "createdAt": "2020-02-07T08:29:03Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -156,7 +175,22 @@ public DiceServerEditor(final Runnable readyCallback) {\n             0,\n             0));\n     row++;\n-    add(\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67a7d4bbbe76cd2c83477a743ceca341d746e57"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjI2NjM5Mg==", "bodyText": "Similar blocks of code found in 2 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376266392", "createdAt": "2020-02-07T08:29:04Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -156,7 +175,22 @@ public DiceServerEditor(final Runnable readyCallback) {\n             0,\n             0));\n     row++;\n-    add(\n+    diceRollerOptions.add(\n+        registerButton,\n+        new GridBagConstraints(\n+            1,\n+            row,\n+            1,\n+            1,\n+            0,\n+            0,\n+            GridBagConstraints.WEST,\n+            GridBagConstraints.NONE,\n+            new Insets(0, 0, bottomSpace, 0),\n+            0,\n+            0));\n+\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67a7d4bbbe76cd2c83477a743ceca341d746e57"}, "originalPosition": 134}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3415c947f4ad6297e0c2de5fbca41bee208831ee", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/3415c947f4ad6297e0c2de5fbca41bee208831ee", "committedDate": "2020-02-08T01:09:52Z", "message": "Fix checkstyle: Move row variable closer to usage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ef2fee3c4f99069ae231a22e07427564170bc42", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/1ef2fee3c4f99069ae231a22e07427564170bc42", "committedDate": "2020-02-08T01:11:31Z", "message": "Merge remote-tracking branch 'origin/pbem-setup-panel' into pbem-setup-panel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60450875ec8c2f6316551bda30ca41a35bf55604", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/60450875ec8c2f6316551bda30ca41a35bf55604", "committedDate": "2020-02-08T08:17:16Z", "message": "Move dice server selection to client settings\n\n- Make dice server be a client setting, add 'test' setting controls to\n  toggle between prod, prerelease, or a custom URI for dice server\n- Inline the dice-server property files, they contain the same configurations\n  except they only have a different URI, which is now a URI client setting.\n- Remove dice server selection drop-down from PBEM/PBF screen. Conditionally\n  show the dice server as a label if a non-prod URI is being used."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTM3MTM0", "url": "https://github.com/triplea-game/triplea/pull/5912#pullrequestreview-355537134", "createdAt": "2020-02-08T08:21:39Z", "commit": {"oid": "60450875ec8c2f6316551bda30ca41a35bf55604"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwODoyMTozOVrOFnPuSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwODoyMTo0MVrOFnPuUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5NjM5NA==", "bodyText": "Method diceRollerOverrideSelection has 69 lines of code (exceeds 25 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376696394", "createdAt": "2020-02-08T08:21:39Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/settings/SelectionComponentFactory.java", "diffHunk": "@@ -507,6 +508,91 @@ public void reset() {\n     };\n   }\n \n+  static SelectionComponent<JComponent> diceRollerOverrideSelection() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60450875ec8c2f6316551bda30ca41a35bf55604"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5NjM5NQ==", "bodyText": "Identical blocks of code found in 3 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376696395", "createdAt": "2020-02-08T08:21:40Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -97,8 +145,9 @@ public DiceServerEditor(final Runnable readyCallback) {\n             0,\n             0));\n     row++;\n-    add(\n-        ccLabel,\n+    final JLabel gameIdLabel = new JLabel(\"Game Name:\");\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60450875ec8c2f6316551bda30ca41a35bf55604"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5NjM5Nw==", "bodyText": "Identical blocks of code found in 3 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376696397", "createdAt": "2020-02-08T08:21:40Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -1,46 +1,94 @@\n package games.strategy.engine.framework.startup.ui.editors;\n \n-import com.google.common.collect.ImmutableMap;\n import games.strategy.engine.data.properties.GameProperties;\n import games.strategy.engine.random.IRemoteDiceServer;\n import games.strategy.engine.random.PbemDiceRoller;\n import games.strategy.engine.random.PropertiesDiceRoller;\n+import games.strategy.triplea.UrlConstants;\n+import games.strategy.triplea.settings.ClientSetting;\n import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n import java.awt.Insets;\n-import java.util.function.Function;\n+import java.net.URI;\n import javax.swing.JButton;\n-import javax.swing.JComboBox;\n import javax.swing.JLabel;\n+import javax.swing.JPanel;\n import javax.swing.JTextField;\n+import javax.swing.border.TitledBorder;\n+import org.triplea.awt.OpenFileUtility;\n import org.triplea.domain.data.PlayerEmailValidation;\n import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.JButtonBuilder;\n \n /** A class to configure a Dice Server for the game. */\n public class DiceServerEditor extends EditorPanel {\n-  private static final long serialVersionUID = -451810815037661114L;\n-  private static final ImmutableMap<String, PropertiesDiceRoller> diceRollersByDisplayName =\n-      PropertiesDiceRoller.loadFromFile().stream()\n-          .collect(\n-              ImmutableMap.toImmutableMap(IRemoteDiceServer::getDisplayName, Function.identity()));\n+  public static URI PRODUCTION_URI = URI.create(\"https://dice.marti.triplea-game.org\");\n+  public static URI PRE_RELEASE_URI = URI.create(\"https://prerelease.dice.marti.triplea-game.org\");\n \n+  private static final long serialVersionUID = -451810815037661114L;\n+  private final JButton registerButton =\n+      new JButtonBuilder(\"Register\")\n+          .actionListener(() -> OpenFileUtility.openUrl(UrlConstants.MARTI_REGISTRATION))\n+          .toolTip(\n+              \"<html>Opens email registration page to register with MARTI dice-roller.<br>\"\n+                  + \"Needs to be done once before MARTI dice server can be used.</html>\")\n+          .build();\n   private final JButton testDiceButton = new JButton(\"Test Server\");\n   private final JTextField toAddress = new JTextField();\n   private final JTextField ccAddress = new JTextField();\n   private final JTextField gameId = new JTextField();\n-  private final JLabel serverLabel = new JLabel(\"Servers:\");\n   private final JLabel toLabel = new JLabel(\"To:\");\n   private final JLabel ccLabel = new JLabel(\"Cc:\");\n-  private final JComboBox<String> servers = new JComboBox<>();\n   private final Runnable readyCallback;\n \n   public DiceServerEditor(final Runnable readyCallback) {\n     this.readyCallback = readyCallback;\n     final int bottomSpace = 1;\n     final int labelSpace = 2;\n+\n+    final JPanel diceRollerOptions = new JPanel();\n+    diceRollerOptions.setLayout(new GridBagLayout());\n+    diceRollerOptions.setBorder(new TitledBorder(\"Dice Server Options\"));\n+    add(diceRollerOptions);\n+\n     int row = 0;\n-    diceRollersByDisplayName.keySet().forEach(servers::addItem);\n-    add(\n-        serverLabel,\n+    // Show the dice server URI only if it is set to a non-default value.\n+    if (!ClientSetting.diceRollerUri\n+        .getValueOrThrow()\n+        .equals(ClientSetting.diceRollerUri.getDefaultValue().orElseThrow())) {\n+      diceRollerOptions.add(\n+          new JLabel(\"Dice Server\"),\n+          new GridBagConstraints(\n+              0,\n+              row,\n+              1,\n+              1,\n+              0,\n+              0,\n+              GridBagConstraints.WEST,\n+              GridBagConstraints.NONE,\n+              new Insets(0, 0, bottomSpace, labelSpace),\n+              0,\n+              0));\n+      diceRollerOptions.add(\n+          new JLabel(ClientSetting.diceRollerUri.getValueOrThrow().toString()),\n+          new GridBagConstraints(\n+              1,\n+              row,\n+              2,\n+              1,\n+              1.0,\n+              0,\n+              GridBagConstraints.EAST,\n+              GridBagConstraints.HORIZONTAL,\n+              new Insets(0, 0, bottomSpace, 0),\n+              0,\n+              0));\n+      row++;\n+    }\n+\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60450875ec8c2f6316551bda30ca41a35bf55604"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5NjM5OA==", "bodyText": "Identical blocks of code found in 3 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376696398", "createdAt": "2020-02-08T08:21:40Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -68,8 +116,8 @@ public DiceServerEditor(final Runnable readyCallback) {\n             0,\n             0));\n     row++;\n-    add(\n-        toLabel,\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60450875ec8c2f6316551bda30ca41a35bf55604"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5NjM5OQ==", "bodyText": "Method diceRollerOverrideSelection has a Cognitive Complexity of 7 (exceeds 5 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376696399", "createdAt": "2020-02-08T08:21:40Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/settings/SelectionComponentFactory.java", "diffHunk": "@@ -507,6 +508,91 @@ public void reset() {\n     };\n   }\n \n+  static SelectionComponent<JComponent> diceRollerOverrideSelection() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60450875ec8c2f6316551bda30ca41a35bf55604"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5NjQwMA==", "bodyText": "Identical blocks of code found in 3 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376696400", "createdAt": "2020-02-08T08:21:40Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -53,8 +101,8 @@ public DiceServerEditor(final Runnable readyCallback) {\n             new Insets(0, 0, bottomSpace, labelSpace),\n             0,\n             0));\n-    add(\n-        servers,\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60450875ec8c2f6316551bda30ca41a35bf55604"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5NjQwMQ==", "bodyText": "Identical blocks of code found in 3 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376696401", "createdAt": "2020-02-08T08:21:41Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -82,8 +130,8 @@ public DiceServerEditor(final Runnable readyCallback) {\n             new Insets(0, 0, bottomSpace, labelSpace),\n             0,\n             0));\n-    add(\n-        toAddress,\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60450875ec8c2f6316551bda30ca41a35bf55604"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5NjQwMg==", "bodyText": "Identical blocks of code found in 3 locations. Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376696402", "createdAt": "2020-02-08T08:21:41Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -111,8 +160,8 @@ public DiceServerEditor(final Runnable readyCallback) {\n             new Insets(0, 0, bottomSpace, labelSpace),\n             0,\n             0));\n-    add(\n-        ccAddress,\n+    diceRollerOptions.add(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60450875ec8c2f6316551bda30ca41a35bf55604"}, "originalPosition": 159}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5debf54718db6ac03c800f26db45f663717f60c", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/c5debf54718db6ac03c800f26db45f663717f60c", "committedDate": "2020-02-08T08:28:02Z", "message": "Improve dice server URI validation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTM3NDM3", "url": "https://github.com/triplea-game/triplea/pull/5912#pullrequestreview-355537437", "createdAt": "2020-02-08T08:31:35Z", "commit": {"oid": "c5debf54718db6ac03c800f26db45f663717f60c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwODozMTozNVrOFnPv3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwODozMTozNVrOFnPv3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5Njc5Ng==", "bodyText": "Method diceRollerOverrideSelection has 73 lines of code (exceeds 25 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376696796", "createdAt": "2020-02-08T08:31:35Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/settings/SelectionComponentFactory.java", "diffHunk": "@@ -507,6 +508,95 @@ public void reset() {\n     };\n   }\n \n+  static SelectionComponent<JComponent> diceRollerOverrideSelection() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5debf54718db6ac03c800f26db45f663717f60c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY5Njc5Nw==", "bodyText": "Method diceRollerOverrideSelection has a Cognitive Complexity of 12 (exceeds 5 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376696797", "createdAt": "2020-02-08T08:31:35Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/settings/SelectionComponentFactory.java", "diffHunk": "@@ -507,6 +508,95 @@ public void reset() {\n     };\n   }\n \n+  static SelectionComponent<JComponent> diceRollerOverrideSelection() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5debf54718db6ac03c800f26db45f663717f60c"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d744e9ab968103070290993283fe9d8e2969aa62", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/d744e9ab968103070290993283fe9d8e2969aa62", "committedDate": "2020-02-08T08:32:21Z", "message": "Mark static variables as also final"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NTQ5ODU1", "url": "https://github.com/triplea-game/triplea/pull/5912#pullrequestreview-355549855", "createdAt": "2020-02-08T14:19:18Z", "commit": {"oid": "d744e9ab968103070290993283fe9d8e2969aa62"}, "state": "APPROVED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNDoxOToxOFrOFnQtWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQxNToxMDozNlrOFnQ3vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxMjUzNw==", "bodyText": "Don't we usually store these in URL constants?", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376712537", "createdAt": "2020-02-08T14:19:18Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -1,46 +1,95 @@\n package games.strategy.engine.framework.startup.ui.editors;\n \n-import com.google.common.collect.ImmutableMap;\n import games.strategy.engine.data.properties.GameProperties;\n import games.strategy.engine.random.IRemoteDiceServer;\n import games.strategy.engine.random.PbemDiceRoller;\n import games.strategy.engine.random.PropertiesDiceRoller;\n+import games.strategy.triplea.UrlConstants;\n+import games.strategy.triplea.settings.ClientSetting;\n import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n import java.awt.Insets;\n-import java.util.function.Function;\n+import java.net.URI;\n import javax.swing.JButton;\n-import javax.swing.JComboBox;\n import javax.swing.JLabel;\n+import javax.swing.JPanel;\n import javax.swing.JTextField;\n+import javax.swing.border.TitledBorder;\n+import org.triplea.awt.OpenFileUtility;\n import org.triplea.domain.data.PlayerEmailValidation;\n import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.JButtonBuilder;\n \n /** A class to configure a Dice Server for the game. */\n public class DiceServerEditor extends EditorPanel {\n-  private static final long serialVersionUID = -451810815037661114L;\n-  private static final ImmutableMap<String, PropertiesDiceRoller> diceRollersByDisplayName =\n-      PropertiesDiceRoller.loadFromFile().stream()\n-          .collect(\n-              ImmutableMap.toImmutableMap(IRemoteDiceServer::getDisplayName, Function.identity()));\n+  public static final URI PRODUCTION_URI = URI.create(\"https://dice.marti.triplea-game.org\");\n+  public static final URI PRE_RELEASE_URI =\n+      URI.create(\"https://prerelease.dice.marti.triplea-game.org\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d744e9ab968103070290993283fe9d8e2969aa62"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxMjc5NA==", "bodyText": "I wonder why you're not using the constraint builder here?", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376712794", "createdAt": "2020-02-08T14:23:44Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -1,46 +1,95 @@\n package games.strategy.engine.framework.startup.ui.editors;\n \n-import com.google.common.collect.ImmutableMap;\n import games.strategy.engine.data.properties.GameProperties;\n import games.strategy.engine.random.IRemoteDiceServer;\n import games.strategy.engine.random.PbemDiceRoller;\n import games.strategy.engine.random.PropertiesDiceRoller;\n+import games.strategy.triplea.UrlConstants;\n+import games.strategy.triplea.settings.ClientSetting;\n import java.awt.GridBagConstraints;\n+import java.awt.GridBagLayout;\n import java.awt.Insets;\n-import java.util.function.Function;\n+import java.net.URI;\n import javax.swing.JButton;\n-import javax.swing.JComboBox;\n import javax.swing.JLabel;\n+import javax.swing.JPanel;\n import javax.swing.JTextField;\n+import javax.swing.border.TitledBorder;\n+import org.triplea.awt.OpenFileUtility;\n import org.triplea.domain.data.PlayerEmailValidation;\n import org.triplea.swing.DocumentListenerBuilder;\n+import org.triplea.swing.JButtonBuilder;\n \n /** A class to configure a Dice Server for the game. */\n public class DiceServerEditor extends EditorPanel {\n-  private static final long serialVersionUID = -451810815037661114L;\n-  private static final ImmutableMap<String, PropertiesDiceRoller> diceRollersByDisplayName =\n-      PropertiesDiceRoller.loadFromFile().stream()\n-          .collect(\n-              ImmutableMap.toImmutableMap(IRemoteDiceServer::getDisplayName, Function.identity()));\n+  public static final URI PRODUCTION_URI = URI.create(\"https://dice.marti.triplea-game.org\");\n+  public static final URI PRE_RELEASE_URI =\n+      URI.create(\"https://prerelease.dice.marti.triplea-game.org\");\n \n+  private static final long serialVersionUID = -451810815037661114L;\n+  private final JButton registerButton =\n+      new JButtonBuilder(\"Register\")\n+          .actionListener(() -> OpenFileUtility.openUrl(UrlConstants.MARTI_REGISTRATION))\n+          .toolTip(\n+              \"<html>Opens email registration page to register with MARTI dice-roller.<br>\"\n+                  + \"Needs to be done once before MARTI dice server can be used.</html>\")\n+          .build();\n   private final JButton testDiceButton = new JButton(\"Test Server\");\n   private final JTextField toAddress = new JTextField();\n   private final JTextField ccAddress = new JTextField();\n   private final JTextField gameId = new JTextField();\n-  private final JLabel serverLabel = new JLabel(\"Servers:\");\n   private final JLabel toLabel = new JLabel(\"To:\");\n   private final JLabel ccLabel = new JLabel(\"Cc:\");\n-  private final JComboBox<String> servers = new JComboBox<>();\n   private final Runnable readyCallback;\n \n   public DiceServerEditor(final Runnable readyCallback) {\n     this.readyCallback = readyCallback;\n     final int bottomSpace = 1;\n     final int labelSpace = 2;\n+\n+    final JPanel diceRollerOptions = new JPanel();\n+    diceRollerOptions.setLayout(new GridBagLayout());\n+    diceRollerOptions.setBorder(new TitledBorder(\"Dice Server Options\"));\n+    add(diceRollerOptions);\n+\n     int row = 0;\n-    diceRollersByDisplayName.keySet().forEach(servers::addItem);\n-    add(\n-        serverLabel,\n+    // Show the dice server URI only if it is set to a non-default value.\n+    if (!ClientSetting.diceRollerUri\n+        .getValueOrThrow()\n+        .equals(ClientSetting.diceRollerUri.getDefaultValue().orElseThrow())) {\n+      diceRollerOptions.add(\n+          new JLabel(\"Dice Server\"),\n+          new GridBagConstraints(\n+              0,\n+              row,\n+              1,\n+              1,\n+              0,\n+              0,\n+              GridBagConstraints.WEST,\n+              GridBagConstraints.NONE,\n+              new Insets(0, 0, bottomSpace, labelSpace),\n+              0,\n+              0));\n+      diceRollerOptions.add(\n+          new JLabel(ClientSetting.diceRollerUri.getValueOrThrow().toString()),\n+          new GridBagConstraints(\n+              1,\n+              row,\n+              2,\n+              1,\n+              1.0,\n+              0,\n+              GridBagConstraints.EAST,\n+              GridBagConstraints.HORIZONTAL,\n+              new Insets(0, 0, bottomSpace, 0),\n+              0,\n+              0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d744e9ab968103070290993283fe9d8e2969aa62"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxMzAzNg==", "bodyText": "Correct me if I'm wrong, but this basically makes the dice server choice independent from the game and makes it a user preference rather than an agreement between 2 players playing PbF/PbEM, right?", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376713036", "createdAt": "2020-02-08T14:28:07Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/editors/DiceServerEditor.java", "diffHunk": "@@ -188,39 +222,41 @@ private void checkFieldsAndNotify() {\n   }\n \n   public boolean areFieldsValid() {\n-    final String toAddressText = toAddress.getText();\n     final boolean toValid =\n         setLabelValid(\n-            !toAddressText.isEmpty() && PlayerEmailValidation.isValid(toAddressText), toLabel);\n+            !toAddress.getText().isEmpty() && PlayerEmailValidation.isValid(toAddress.getText()),\n+            toLabel);\n     final boolean ccValid =\n-        setLabelValid(PlayerEmailValidation.isValid(ccAddress.getText()), ccLabel);\n-    final boolean serverValid = validateComboBox(servers, serverLabel);\n-    final boolean allValid = serverValid && toValid && ccValid;\n+        setLabelValid(\n+            !ccAddress.getText().isEmpty() && PlayerEmailValidation.isValid(ccAddress.getText()),\n+            ccLabel);\n+    final boolean allValid = toValid && ccValid;\n     testDiceButton.setEnabled(allValid);\n+    testDiceButton.setToolTipText(\n+        allValid\n+            ? \"Send a verified dice roll test email\"\n+            : \"First enter a valid 'to' and 'cc' email address\");\n     return allValid;\n   }\n \n   public void applyToGameProperties(final GameProperties properties) {\n-    properties.set(IRemoteDiceServer.NAME, servers.getSelectedItem());\n     properties.set(IRemoteDiceServer.GAME_NAME, gameId.getText());\n     properties.set(IRemoteDiceServer.EMAIL_1, toAddress.getText());\n     properties.set(IRemoteDiceServer.EMAIL_2, ccAddress.getText());\n   }\n \n   public void populateFromGameProperties(final GameProperties properties) {\n-    servers.setSelectedItem(properties.get(IRemoteDiceServer.NAME));\n     gameId.setText(properties.get(IRemoteDiceServer.GAME_NAME, \"\"));\n     toAddress.setText(properties.get(IRemoteDiceServer.EMAIL_1, \"\"));\n     ccAddress.setText(properties.get(IRemoteDiceServer.EMAIL_2, \"\"));\n   }\n \n   public IRemoteDiceServer newDiceServer() {\n-    final String selectedName = (String) servers.getSelectedItem();\n-    assert selectedName != null;\n-    final PropertiesDiceRoller roller = diceRollersByDisplayName.get(selectedName);\n-    roller.setGameId(gameId.getText());\n-    roller.setToAddress(toAddress.getText());\n-    roller.setCcAddress(ccAddress.getText());\n-    return roller;\n+    return PropertiesDiceRoller.builder()\n+        .diceRollerUri(ClientSetting.diceRollerUri.getValueOrThrow())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d744e9ab968103070290993283fe9d8e2969aa62"}, "originalPosition": 265}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxMzIxOA==", "bodyText": "The class name is now no longer accurate, with this update it becomes a MartiDiceRoller instead", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376713218", "createdAt": "2020-02-08T14:31:13Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/random/PropertiesDiceRoller.java", "diffHunk": "@@ -39,57 +33,31 @@\n import org.apache.http.message.BasicNameValuePair;\n import org.apache.http.protocol.HttpContext;\n import org.apache.http.util.EntityUtils;\n-import org.triplea.io.FileUtils;\n \n /** A pbem dice roller that reads its configuration from a properties file. */\n @Log\n+@Builder\n public final class PropertiesDiceRoller implements IRemoteDiceServer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d744e9ab968103070290993283fe9d8e2969aa62"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxMzM2NQ==", "bodyText": "I know this is just copied over, but InvocationTargetException is really not appropriate here, but probably caught somewhere up in the stack", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376713365", "createdAt": "2020-02-08T14:34:08Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/random/PropertiesDiceRoller.java", "diffHunk": "@@ -128,32 +93,21 @@ public String postRequest(\n   @Override\n   public int[] getDice(final String string, final int count)\n       throws IOException, InvocationTargetException {\n-    final String errorStartString = props.getProperty(\"error.start\");\n-    final String errorEndString = props.getProperty(\"error.end\");\n-    // if the error strings are defined\n-    if (errorStartString != null\n-        && errorStartString.length() > 0\n-        && errorEndString != null\n-        && errorEndString.length() > 0) {\n-      final int startIndex = string.indexOf(errorStartString);\n-      if (startIndex >= 0) {\n-        final int endIndex =\n-            string.indexOf(errorEndString, (startIndex + errorStartString.length()));\n-        if (endIndex > 0) {\n-          final String error = string.substring(startIndex + errorStartString.length(), endIndex);\n-          throw new InvocationTargetException(null, error);\n-        }\n+    final String errorStartString = \"fatal error:\";\n+    final String errorEndString = \"!\";\n+    final int errorStringStartIndex = string.indexOf(errorStartString);\n+    if (errorStringStartIndex >= 0) {\n+      final int endIndex =\n+          string.indexOf(errorEndString, (errorStringStartIndex + errorStartString.length()));\n+      if (endIndex > 0) {\n+        final String error =\n+            string.substring(errorStringStartIndex + errorStartString.length(), endIndex);\n+        throw new InvocationTargetException(null, error);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d744e9ab968103070290993283fe9d8e2969aa62"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxNDk1Mw==", "bodyText": "Just a silly thought:\nWe could turn this into a regex and shorten this code to:\nPattern pattern = Pattern.compile(\"fatal error:(.*)!\");\nMatcher matcher = pattern.matcher(string);\nif (matcher.find()) {\n  throw new InvocationTargetException(null, matcher.group(1));\n}", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376714953", "createdAt": "2020-02-08T15:05:51Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/random/PropertiesDiceRoller.java", "diffHunk": "@@ -128,32 +93,21 @@ public String postRequest(\n   @Override\n   public int[] getDice(final String string, final int count)\n       throws IOException, InvocationTargetException {\n-    final String errorStartString = props.getProperty(\"error.start\");\n-    final String errorEndString = props.getProperty(\"error.end\");\n-    // if the error strings are defined\n-    if (errorStartString != null\n-        && errorStartString.length() > 0\n-        && errorEndString != null\n-        && errorEndString.length() > 0) {\n-      final int startIndex = string.indexOf(errorStartString);\n-      if (startIndex >= 0) {\n-        final int endIndex =\n-            string.indexOf(errorEndString, (startIndex + errorStartString.length()));\n-        if (endIndex > 0) {\n-          final String error = string.substring(startIndex + errorStartString.length(), endIndex);\n-          throw new InvocationTargetException(null, error);\n-        }\n+    final String errorStartString = \"fatal error:\";\n+    final String errorEndString = \"!\";\n+    final int errorStringStartIndex = string.indexOf(errorStartString);\n+    if (errorStringStartIndex >= 0) {\n+      final int endIndex =\n+          string.indexOf(errorEndString, (errorStringStartIndex + errorStartString.length()));\n+      if (endIndex > 0) {\n+        final String error =\n+            string.substring(errorStringStartIndex + errorStartString.length(), endIndex);\n+        throw new InvocationTargetException(null, error);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxMzM2NQ=="}, "originalCommit": {"oid": "d744e9ab968103070290993283fe9d8e2969aa62"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjcxNTE5OA==", "bodyText": "Same here with the preprocessing step:\nPattern pattern = Pattern.compile(\"your dice are:(.*)<p>\");\n// Side Note: When using Pattern.compile(\"your dice are:(\\s*\\d+\\s*(?:,\\s*\\d+\\s*)*)<p>\")\n// you could probably avoid having the try-catch block below\nMatcher matcher = pattern.matcher(string);\nif (!matcher.find()) {\n  throw new IOException(\"String doesn't contain dice information\");\n}\n\n// Existing code...\n// replace string.substring(startIndex, endIndex) with matcher.group(1) below", "url": "https://github.com/triplea-game/triplea/pull/5912#discussion_r376715198", "createdAt": "2020-02-08T15:10:36Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/random/PropertiesDiceRoller.java", "diffHunk": "@@ -128,32 +93,21 @@ public String postRequest(\n   @Override\n   public int[] getDice(final String string, final int count)\n       throws IOException, InvocationTargetException {\n-    final String errorStartString = props.getProperty(\"error.start\");\n-    final String errorEndString = props.getProperty(\"error.end\");\n-    // if the error strings are defined\n-    if (errorStartString != null\n-        && errorStartString.length() > 0\n-        && errorEndString != null\n-        && errorEndString.length() > 0) {\n-      final int startIndex = string.indexOf(errorStartString);\n-      if (startIndex >= 0) {\n-        final int endIndex =\n-            string.indexOf(errorEndString, (startIndex + errorStartString.length()));\n-        if (endIndex > 0) {\n-          final String error = string.substring(startIndex + errorStartString.length(), endIndex);\n-          throw new InvocationTargetException(null, error);\n-        }\n+    final String errorStartString = \"fatal error:\";\n+    final String errorEndString = \"!\";\n+    final int errorStringStartIndex = string.indexOf(errorStartString);\n+    if (errorStringStartIndex >= 0) {\n+      final int endIndex =\n+          string.indexOf(errorEndString, (errorStringStartIndex + errorStartString.length()));\n+      if (endIndex > 0) {\n+        final String error =\n+            string.substring(errorStringStartIndex + errorStartString.length(), endIndex);\n+        throw new InvocationTargetException(null, error);\n       }\n     }\n-    final String rollStartString;\n-    final String rollEndString;\n-    if (count == 1) {\n-      rollStartString = props.getProperty(\"roll.single.start\");\n-      rollEndString = props.getProperty(\"roll.single.end\");\n-    } else {\n-      rollStartString = props.getProperty(\"roll.multiple.start\");\n-      rollEndString = props.getProperty(\"roll.multiple.end\");\n-    }\n+\n+    final String rollStartString = \"your dice are:\";\n+    final String rollEndString = \"<p>\";\n     int startIndex = string.indexOf(rollStartString);\n     if (startIndex == -1) {\n       throw new IOException(\"Could not find start index, text returned is:\" + string);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d744e9ab968103070290993283fe9d8e2969aa62"}, "originalPosition": 177}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1343a875e81fb8e27f5990194510ff729c1c43d7", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/1343a875e81fb8e27f5990194510ff729c1c43d7", "committedDate": "2020-02-09T02:33:54Z", "message": "Rename class 'PropertiesDiceRoller'->'MartiDiceRoller'"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3674, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}