{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTY5MjU2", "number": 7088, "title": "Headless: Ignore duplicate game entries", "bodyText": "If we see a duplicate game entry, instead of a bot server crashing,\nthis will update will log the duplicate game entry and ignore it.\nMitigates problem: #7005\n\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[] Code Cleanup or refactor\n[] Configuration Change\n[x] Problem fix\n[] Other:   \nTesting\n\nDownloaded both d-day maps, launched a headless bot locally and confirmed could repro the error.\n\n\nScreens Shots\n\nAdditional Notes to Reviewer\n\nRelease Note\nInstead of creating a Map directly from a stream, we instantiate the Map first and then do a forEach to add games. If we see any duplicates then we log them and do not add them to the map.", "createdAt": "2020-07-10T01:15:20Z", "url": "https://github.com/triplea-game/triplea/pull/7088", "merged": true, "mergeCommit": {"oid": "03ffc42407d07978e661269dda7f07ae2ac80977"}, "closed": true, "closedAt": "2020-07-11T03:45:15Z", "author": {"login": "DanVanAtta"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczZKOggH2gAyNDQ3MTY5MjU2OmFkODE2NTQxMGVmNWM0OTNiZjJiNWVhYmIxNTI2MjE1MjYzYTkzYjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczjS__gFqTQ0NjM4Mjg3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ad8165410ef5c493bf2b5eabb1526215263a93b1", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/ad8165410ef5c493bf2b5eabb1526215263a93b1", "committedDate": "2020-07-10T01:15:01Z", "message": "Headless: Ignore duplicate game entries\n\nIf we see a duplicate game entry, instead of a bot server crashing,\nthis will update will log the duplicate game entry and ignore it.\n\nMitigates problem: https://github.com/triplea-game/triplea/issues/7005\n\nThe fix is as follows;\n Instead of creating a `Map` directly from a stream, we instantiate the `Map` first and then do a `forEach` to add games. If we see any duplicates then we log them and do not add them to the map."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MzgyODc4", "url": "https://github.com/triplea-game/triplea/pull/7088#pullrequestreview-446382878", "createdAt": "2020-07-10T13:03:38Z", "commit": {"oid": "ad8165410ef5c493bf2b5eabb1526215263a93b1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMzowMzozOVrOGv2gTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMzowMzozOVrOGv2gTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyOTI2MA==", "bodyText": "While I don't think I can make a qualified decision if this kind of duplicate handling is the best approach to this, I want to point out that there's an overload of the Collectors#toUnmodifianleMap method that accepts a merge function:\nhttps://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/stream/Collectors.html#toUnmodifiableMap(java.util.function.Function,java.util.function.Function,java.util.function.BinaryOperator)\nThe default implementation seems to be this one:\nhttps://github.com/openjdk/jdk/blob/0a38584c10c1b0d971271f47934e4003bde7d986/src/java.base/share/classes/java/util/stream/Collectors.java#L148-L159\nWhich throws exactly the exception we are experiencing.\nBy providing this custom function we can keep the functional style + we maintain the unmodifiable map, which is no longer defensively copied or wrapped somehow for thread safety (the reason why unmodifiability would be an important thing to keep)", "url": "https://github.com/triplea-game/triplea/pull/7088#discussion_r452829260", "createdAt": "2020-07-10T13:03:39Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/org/triplea/game/server/AvailableGames.java", "diffHunk": "@@ -36,13 +35,23 @@\n   private final Map<String, URI> availableGames;\n \n   AvailableGames() {\n-    availableGames =\n-        FileUtils.listFiles(ClientFileSystemHelper.getUserMapsFolder())\n-            .parallelStream()\n-            .map(AvailableGames::getGames)\n-            .map(Map::entrySet)\n-            .flatMap(Collection::stream)\n-            .collect(Collectors.toUnmodifiableMap(Map.Entry::getKey, Map.Entry::getValue));\n+    availableGames = new HashMap<>();\n+    FileUtils.listFiles(ClientFileSystemHelper.getUserMapsFolder())\n+        .parallelStream()\n+        .map(AvailableGames::getGames)\n+        .map(Map::entrySet)\n+        .flatMap(Collection::stream)\n+        .forEach(\n+            gameEntry -> {\n+              if (!availableGames.containsKey(gameEntry.getKey())) {\n+                availableGames.put(gameEntry.getKey(), gameEntry.getValue());\n+              } else {\n+                log.warning(\n+                    String.format(\n+                        \"DUPLICATE GAME ENTRY! Ignoring game entry: %s, \" + \"existing value is: %s\",\n+                        gameEntry, availableGames.get(gameEntry.getKey())));\n+              }\n+            });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad8165410ef5c493bf2b5eabb1526215263a93b1"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3210, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}