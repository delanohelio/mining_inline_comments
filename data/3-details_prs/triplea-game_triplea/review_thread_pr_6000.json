{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyOTgxMDEx", "number": 6000, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNDoyNjoxOVrODkq-Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNDoyNjoxOVrODkq-Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5Nzc5MzYzOnYy", "diffSide": "RIGHT", "path": "game-headed/src/main/java/org/triplea/game/client/HeadedGameRunner.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNDoyNjoxOVrOFxH3mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNDoyNjoxOVrOFxH3mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA1MzQ2Ng==", "bodyText": "Method initializeDesktopIntegrations has 28 lines of code (exceeds 25 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6000#discussion_r387053466", "createdAt": "2020-03-03T14:26:19Z", "author": {"login": "codeclimate"}, "path": "game-headed/src/main/java/org/triplea/game/client/HeadedGameRunner.java", "diffHunk": "@@ -32,30 +28,21 @@\n public final class HeadedGameRunner {\n   private HeadedGameRunner() {}\n \n-  /** Entry point for running a new headed game client. */\n-  public static void main(final String[] args) {\n-    checkNotNull(args);\n-    checkState(\n-        !GraphicsEnvironment.isHeadless(),\n-        \"UI client launcher invoked from headless environment. This is currently \"\n-            + \"prohibited by design to avoid UI rendering errors in the headless environment.\");\n+  public static void initializeClientSettingAndLogging() {\n     Thread.setDefaultUncaughtExceptionHandler(\n         (t, e) -> log.log(Level.SEVERE, e.getLocalizedMessage(), e));\n \n     ClientSetting.initialize();\n \n     LoggerManager.setLogLevel(\n         ClientSetting.loggingVerbosity.getValue().map(Level::parse).orElse(Level.INFO));\n+  }\n+\n+  public static void initializeLookAndFeel() {\n     Interruptibles.await(() -> SwingAction.invokeAndWait(LookAndFeel::initialize));\n-    if (!ClientSetting.useExperimentalJavaFxUi.getValueOrThrow()) {\n-      Interruptibles.await(\n-          () ->\n-              SwingAction.invokeAndWait(\n-                  () -> {\n-                    ConsoleConfiguration.initialize();\n-                    ErrorMessage.initialize();\n-                  }));\n-    }\n+  }\n+\n+  public static void initializeDesktopIntegrations(final String[] args) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f675885aeb316b0ff64f726f81b3459240e0a3bf"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2493, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}