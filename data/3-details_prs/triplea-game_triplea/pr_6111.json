{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MzMxMzA5", "number": 6111, "title": "Fix connectivity check", "bodyText": "Fixes the connectivity issue mentioned in #6048 (presumably, haven't been able to test it so far should work though).\n@DanVanAtta Have a look at the TODO comment in the test case I added.\nFor the test to work we need to register a lobby game, how would I do that inside this test case?\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[] Code Cleanup or refactor\n[] Configuration Change\n[x] Problem fix:  \n[] Other:   \nTesting", "createdAt": "2020-03-29T22:23:16Z", "url": "https://github.com/triplea-game/triplea/pull/6111", "merged": true, "mergeCommit": {"oid": "f243e4d0319c3dcdb9d872ebc9d026b12ff7a9a9"}, "closed": true, "closedAt": "2020-05-15T06:44:47Z", "author": {"login": "RoiEXLab"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSiAsdgFqTM4MzQ2NTQ2Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABchcTZtgFqTQxMjM4NTc0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzNDY1NDYz", "url": "https://github.com/triplea-game/triplea/pull/6111#pullrequestreview-383465463", "createdAt": "2020-03-29T22:54:15Z", "commit": {"oid": "ba6f9d35bb30bef2e5086a6156eea8a889a014a7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQyMjo1NDoxNVrOF9V5RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQyMjo1NDoxNVrOF9V5RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTg2NjE4MQ==", "bodyText": "The game entry and connectivity check happen effectively in parallel. There is no guarantee that the game entry will have been created. I think the IP to check needs to become an optional parameter to the connectivity check.", "url": "https://github.com/triplea-game/triplea/pull/6111#discussion_r399866181", "createdAt": "2020-03-29T22:54:15Z", "author": {"login": "DanVanAtta"}, "path": "http-server/src/test/java/org/triplea/modules/game/ConnectivityControllerTest.java", "diffHunk": "@@ -32,7 +34,9 @@ void checkConnectivityNegativeCase() {\n   @Test\n   void checkConnectivityPositiveCase() throws IOException {\n     openSocket();\n-    final boolean result = verifyEndpointReturningObject(client -> client.checkConnectivity(PORT));\n+    // TODO Setup GameEntry so that the server correctly checks the connectivity.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba6f9d35bb30bef2e5086a6156eea8a889a014a7"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba6f9d35bb30bef2e5086a6156eea8a889a014a7", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/ba6f9d35bb30bef2e5086a6156eea8a889a014a7", "committedDate": "2020-03-29T22:11:48Z", "message": "Fix connectivity check"}, "afterCommit": {"oid": "389510b72b2c4f61d58ac058c2ba0900d5241199", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/389510b72b2c4f61d58ac058c2ba0900d5241199", "committedDate": "2020-04-10T15:35:38Z", "message": "Fix connectivity check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTk0OTY0", "url": "https://github.com/triplea-game/triplea/pull/6111#pullrequestreview-391594964", "createdAt": "2020-04-10T18:33:15Z", "commit": {"oid": "716f5a6cba298bfa37795050353bbede6fceae22"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxODozMzoxNVrOGECY4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxODozODoyNFrOGEChBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg4NjYyNQ==", "bodyText": "I think we might be a bit too heavy on callbacks here. At this point it might be better to have a single response object, notably 'errorReporter' and it handle the connectivity check failing. This is moot though if we do not combine postGame", "url": "https://github.com/triplea-game/triplea/pull/6111#discussion_r406886625", "createdAt": "2020-04-10T18:33:15Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/InGameLobbyWatcher.java", "diffHunk": "@@ -52,14 +53,16 @@ private InGameLobbyWatcher(\n       final GameToLobbyConnection gameToLobbyConnection,\n       final Consumer<String> errorReporter,\n       final Consumer<String> reconnectionReporter,\n-      @Nullable final InGameLobbyWatcher oldWatcher) {\n+      @Nullable final InGameLobbyWatcher oldWatcher,\n+      final Consumer<Boolean> connectivityHandler) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "716f5a6cba298bfa37795050353bbede6fceae22"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg4NzgwMQ==", "bodyText": "The connectivity handler perhaps should only be invoked on a failed connectivity check. I think it would create a much tighter abstraction rather than leaking details of everything that is involved with connecting. EG:\nif(postGamREsponse.getErrorCode() == CONNECTIVITY_CHECK_FAILED) {\n  connectivityHandler.accept( ... error message ... );\n}\n\nI'm also a bit concerned that the gameId is in an odd state in this case as well. FWIW this is where the code flow is probably simpler if we have the two be separate.\nEG:\nif(!connectvitiyCheck.verify( ..)) {\n    connectivityHandler.accept( ... error message ... );\n    return;\n}\n\ngameId = gameToLobbyConnection.postGame(gameDescription.toLobbyGame());", "url": "https://github.com/triplea-game/triplea/pull/6111#discussion_r406887801", "createdAt": "2020-04-10T18:36:09Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/InGameLobbyWatcher.java", "diffHunk": "@@ -113,7 +117,12 @@ private InGameLobbyWatcher(\n             .gameVersion(\"0\")\n             .build();\n \n-    gameId = gameToLobbyConnection.postGame(gameDescription.toLobbyGame());\n+    final PostGameResponse postGameResponse =\n+        gameToLobbyConnection.postGame(gameDescription.toLobbyGame());\n+\n+    gameId = postGameResponse.getGameId();\n+\n+    connectivityHandler.accept(postGameResponse.isSuccessfulConnectivityCheck());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "716f5a6cba298bfa37795050353bbede6fceae22"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg4ODcxMQ==", "bodyText": "This should not be needed, if we cannot create an initial connection then we should not be getting into the keep alive tasks (and those should be cancelled already by a failed connectivity check). The overload of keep alive is concerning, doubles the endpoint and I think is a bit of a stretch on SRP.", "url": "https://github.com/triplea-game/triplea/pull/6111#discussion_r406888711", "createdAt": "2020-04-10T18:38:24Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/LobbyWatcherKeepAliveTask.java", "diffHunk": "@@ -33,7 +34,9 @@\n   /** Call this to send a keep-alive request to server. */\n   @Nonnull private final Predicate<String> keepAliveSender;\n   /** Call this to re-post the current game, obtains a new game id. */\n-  @Nonnull private final Supplier<String> gamePoster;\n+  @Nonnull private final Supplier<PostGameResponse> gamePoster;\n+  /** Call this to shutdown the client in case the server can't establish a connection. */\n+  @Nonnull private final Consumer<Boolean> connectivityHandler;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "716f5a6cba298bfa37795050353bbede6fceae22"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjAwODg0", "url": "https://github.com/triplea-game/triplea/pull/6111#pullrequestreview-391600884", "createdAt": "2020-04-10T18:45:58Z", "commit": {"oid": "716f5a6cba298bfa37795050353bbede6fceae22"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxODo0NTo1OVrOGECtAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxODo0NTo1OVrOGECtAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg5MTc3OA==", "bodyText": "I think this is getting a bit confused. The API returns a \"here is your game id, but by the way, I cannot connect to your game!\"\nWe are relying on client behavior to shut down and send a disconnect message to delist, otherwise we are waiting for the keep alive to time out.\nThe server should probably not rely on client side implementation that heavily, if the connectivity check fails, we'd ideally not call the post game endpoint and/or not return a game id.\nIf we do not return a game-id, which arguably is more cohesive, then the keep-alive endpoint contract becomes less consistent.", "url": "https://github.com/triplea-game/triplea/pull/6111#discussion_r406891778", "createdAt": "2020-04-10T18:45:59Z", "author": {"login": "DanVanAtta"}, "path": "http-server/src/main/java/org/triplea/modules/game/listing/GameListing.java", "diffHunk": "@@ -71,18 +77,24 @@ public static GameListing build(final Jdbi jdbi, final WebSocketMessagingBus pla\n                 GameListingClient.KEEP_ALIVE_SECONDS,\n                 TimeUnit.SECONDS,\n                 new GameTtlExpiredListener(playerMessagingBus)))\n+        .connectivityCheck(new ConnectivityCheck())\n         .build();\n   }\n \n   /** Adds a game. */\n-  String postGame(final ApiKey apiKey, final LobbyGame lobbyGame) {\n+  PostGameResponse postGame(final ApiKey apiKey, final LobbyGame lobbyGame) {\n     final String id = UUID.randomUUID().toString();\n     games.put(new GameId(apiKey, id), lobbyGame);\n     playerMessagingBus.broadcastMessage(\n         new LobbyGameUpdatedMessage(\n             LobbyGameListing.builder().gameId(id).lobbyGame(lobbyGame).build()));\n     log.info(\"Posted game: {}\", id);\n-    return id;\n+\n+    final boolean successfulCheck = connectivityCheck.test(getHostForGame(lobbyGame));\n+    return PostGameResponse.builder()\n+        .gameId(id)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "716f5a6cba298bfa37795050353bbede6fceae22"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjE2OTAz", "url": "https://github.com/triplea-game/triplea/pull/6111#pullrequestreview-391616903", "createdAt": "2020-04-10T19:21:39Z", "commit": {"oid": "716f5a6cba298bfa37795050353bbede6fceae22"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOToyMTozOVrOGEDhFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOToyMTozOVrOGEDhFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkwNTEwOQ==", "bodyText": "This can pose a major problem. Let's say a user disconnects from a network that has a direct connection to one that no longer does (which is about the only way you'd be able to create and post a game and then later have connectivity fail on a re-posting).\nIn that scenario the keep alive sender would no-op while disconnected, by design, but when we get a reconnection we would get a new game id and then the connectivity check would fail. The connectivity handler would then crash the game that is then in-progress. That game crash would be quite severe, no option to save, the game just closes down on you with an error message.\nOne could simply not do the connectivity check here, which gets into my point a bit about interface segregation principle. I'm certainly leaning to decoupling the functionality so that we don't have dead code on certain call paths. Otherwise if the two functionalities remain coupled, then we need a different error handler implementation to not crash an already-in-progress game.", "url": "https://github.com/triplea-game/triplea/pull/6111#discussion_r406905109", "createdAt": "2020-04-10T19:21:39Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/LobbyWatcherKeepAliveTask.java", "diffHunk": "@@ -45,7 +48,9 @@ public void run() {\n           reportReconnected();\n         }\n       } else {\n-        gameId = gamePoster.get();\n+        final PostGameResponse postGameResponse = gamePoster.get();\n+        gameId = postGameResponse.getGameId();\n+        connectivityHandler.accept(postGameResponse.isSuccessfulConnectivityCheck());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "716f5a6cba298bfa37795050353bbede6fceae22"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46b55a1d72edc93be8a1a8d1cc2b1ec94b9e2072", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/46b55a1d72edc93be8a1a8d1cc2b1ec94b9e2072", "committedDate": "2020-04-26T00:10:40Z", "message": "Fix connectivity check"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "716f5a6cba298bfa37795050353bbede6fceae22", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/716f5a6cba298bfa37795050353bbede6fceae22", "committedDate": "2020-04-10T18:08:43Z", "message": "Fix compile error"}, "afterCommit": {"oid": "46b55a1d72edc93be8a1a8d1cc2b1ec94b9e2072", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/46b55a1d72edc93be8a1a8d1cc2b1ec94b9e2072", "committedDate": "2020-04-26T00:10:40Z", "message": "Fix connectivity check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDQyODY0", "url": "https://github.com/triplea-game/triplea/pull/6111#pullrequestreview-400442864", "createdAt": "2020-04-26T00:13:16Z", "commit": {"oid": "46b55a1d72edc93be8a1a8d1cc2b1ec94b9e2072"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMDoxMzoxNlrOGL8NPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwMDoxMzoxNlrOGL8NPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTE3Mzk0OA==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6111#discussion_r415173948", "createdAt": "2020-04-26T00:13:16Z", "author": {"login": "codeclimate"}, "path": "http-server/src/test/java/org/triplea/modules/game/ConnectivityControllerTest.java", "diffHunk": "@@ -32,7 +34,9 @@ void checkConnectivityNegativeCase() {\n   @Test\n   void checkConnectivityPositiveCase() throws IOException {\n     openSocket();\n-    final boolean result = verifyEndpointReturningObject(client -> client.checkConnectivity(PORT));\n+    // TODO Setup GameEntry so that the server correctly checks the connectivity.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46b55a1d72edc93be8a1a8d1cc2b1ec94b9e2072"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de52c48b0326f7a62fb7be5e10db106d30760a4a", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/de52c48b0326f7a62fb7be5e10db106d30760a4a", "committedDate": "2020-05-13T06:22:49Z", "message": "Merge remote-tracking branch 'origin/master' into fix-connectivity-check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a499052457bcf44610b9731381754ab9af54a29", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/5a499052457bcf44610b9731381754ab9af54a29", "committedDate": "2020-05-13T07:11:41Z", "message": "Fix up tests and update connectivity check\n\n- Move logic in controller to be behind connectivity check\n- Update game list game exists check to return optional if not found\n- Update connectivity controller to return 400 if game is not found\n  instead of throwing (500)\n- Move connectivity check to be immediately after we obtain a gameId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9542beae297998c550e31efd4f1de6b8424c4df7", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/9542beae297998c550e31efd4f1de6b8424c4df7", "committedDate": "2020-05-13T07:13:43Z", "message": "Bug-fix, System.exist *after* we show the connectivity check failed dialog, not *while* we are showing the dialog\n\n- If we shutdown while the dialog is being shown, then the dialog is closed before a user has a chance\nto read it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93acc9a854c354205b4d41dfa8b8ee22ec804be1", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/93acc9a854c354205b4d41dfa8b8ee22ec804be1", "committedDate": "2020-05-13T07:42:00Z", "message": "Move connectivity check to be after server starts accepting connections"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1810b807be1b6e663b8f50bc9e2e6d51ac2d8b16", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/1810b807be1b6e663b8f50bc9e2e6d51ac2d8b16", "committedDate": "2020-05-13T07:42:51Z", "message": "Improve connectivity check, return socket.isConnected rather than just true if no exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25b72b03f8d4d7e72d6c93a85eaa857214981d3b", "author": {"user": {"login": "tripleabuilderbot", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/25b72b03f8d4d7e72d6c93a85eaa857214981d3b", "committedDate": "2020-05-13T07:46:29Z", "message": "Auto-Formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMDE4MzM3", "url": "https://github.com/triplea-game/triplea/pull/6111#pullrequestreview-411018337", "createdAt": "2020-05-13T15:03:15Z", "commit": {"oid": "25b72b03f8d4d7e72d6c93a85eaa857214981d3b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTowMzoxNVrOGU2BmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNToxNDo1MFrOGU2kEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUwOTg0OQ==", "bodyText": "This is an excellent naming change \ud83d\udc4d", "url": "https://github.com/triplea-game/triplea/pull/6111#discussion_r424509849", "createdAt": "2020-05-13T15:03:15Z", "author": {"login": "RoiEXLab"}, "path": "http-server/src/main/java/org/triplea/modules/game/ConnectivityCheck.java", "diffHunk": "@@ -1,27 +1,43 @@\n package org.triplea.modules.game;\n \n+import com.google.common.annotations.VisibleForTesting;\n import java.io.IOException;\n import java.net.InetSocketAddress;\n import java.net.Socket;\n import java.util.concurrent.TimeUnit;\n-import java.util.function.Predicate;\n import java.util.function.Supplier;\n import lombok.AccessLevel;\n import lombok.AllArgsConstructor;\n+import org.triplea.domain.data.ApiKey;\n+import org.triplea.modules.game.listing.GameListing;\n+\n+@AllArgsConstructor(access = AccessLevel.PACKAGE, onConstructor_ = @VisibleForTesting)\n+class ConnectivityCheck {\n \n-@AllArgsConstructor(access = AccessLevel.PACKAGE)\n-class ConnectivityCheck implements Predicate<InetSocketAddress> {\n   private final Supplier<Socket> socketSupplier;\n+  private final GameListing gameListing;\n+\n+  ConnectivityCheck(final GameListing gameListing) {\n+    this(Socket::new, gameListing);\n+  }\n+\n+  /** Verifies if a game exists with a given API key and gameId. */\n+  boolean gameExists(final ApiKey apiKey, final String gameId) {\n+    return gameListing.getHostForGame(apiKey, gameId).isPresent();\n+  }\n \n-  ConnectivityCheck() {\n-    this(Socket::new);\n+  /** Checks if the lobby can create a connection to a given game. */\n+  boolean canDoReverseConnect(final ApiKey apiKey, final String gameId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25b72b03f8d4d7e72d6c93a85eaa857214981d3b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUxMjQwMQ==", "bodyText": "That's an important details as well \ud83d\udc4d", "url": "https://github.com/triplea-game/triplea/pull/6111#discussion_r424512401", "createdAt": "2020-05-13T15:06:31Z", "author": {"login": "RoiEXLab"}, "path": "http-server/src/main/java/org/triplea/modules/game/ConnectivityCheck.java", "diffHunk": "@@ -1,27 +1,43 @@\n package org.triplea.modules.game;\n \n+import com.google.common.annotations.VisibleForTesting;\n import java.io.IOException;\n import java.net.InetSocketAddress;\n import java.net.Socket;\n import java.util.concurrent.TimeUnit;\n-import java.util.function.Predicate;\n import java.util.function.Supplier;\n import lombok.AccessLevel;\n import lombok.AllArgsConstructor;\n+import org.triplea.domain.data.ApiKey;\n+import org.triplea.modules.game.listing.GameListing;\n+\n+@AllArgsConstructor(access = AccessLevel.PACKAGE, onConstructor_ = @VisibleForTesting)\n+class ConnectivityCheck {\n \n-@AllArgsConstructor(access = AccessLevel.PACKAGE)\n-class ConnectivityCheck implements Predicate<InetSocketAddress> {\n   private final Supplier<Socket> socketSupplier;\n+  private final GameListing gameListing;\n+\n+  ConnectivityCheck(final GameListing gameListing) {\n+    this(Socket::new, gameListing);\n+  }\n+\n+  /** Verifies if a game exists with a given API key and gameId. */\n+  boolean gameExists(final ApiKey apiKey, final String gameId) {\n+    return gameListing.getHostForGame(apiKey, gameId).isPresent();\n+  }\n \n-  ConnectivityCheck() {\n-    this(Socket::new);\n+  /** Checks if the lobby can create a connection to a given game. */\n+  boolean canDoReverseConnect(final ApiKey apiKey, final String gameId) {\n+    return gameListing\n+        .getHostForGame(apiKey, gameId)\n+        .map(this::testConnectivityToAddress)\n+        .orElse(false);\n   }\n \n-  @Override\n-  public boolean test(final InetSocketAddress address) {\n+  private boolean testConnectivityToAddress(final InetSocketAddress address) {\n     try (Socket s = socketSupplier.get()) {\n       s.connect(address, (int) TimeUnit.SECONDS.toMillis(10));\n-      return true;\n+      return s.isConnected();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25b72b03f8d4d7e72d6c93a85eaa857214981d3b"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUxNzM0Ng==", "bodyText": "This is something I have absolutely no experience with:\nBasically the result of canDoReverseConnect is false whenever the game does not exist, but that means nothing.\nI think I would've coded this in a way so canDoReverseConnect throws an exception whenever the game doesn't exist and map the exception to a http status code somehow.\nIs this something Dropwizard is designed to do, or do you think it's better the way it currently is?", "url": "https://github.com/triplea-game/triplea/pull/6111#discussion_r424517346", "createdAt": "2020-05-13T15:13:07Z", "author": {"login": "RoiEXLab"}, "path": "http-server/src/main/java/org/triplea/modules/game/ConnectivityController.java", "diffHunk": "@@ -40,9 +37,15 @@ public static ConnectivityController build(final GameListing gameListing) {\n       keys = {KeyPart.IP},\n       rates = {@Rate(limit = 10, duration = 1, timeUnit = TimeUnit.MINUTES)})\n   @RolesAllowed(UserRole.HOST)\n-  public boolean checkConnectivity(\n+  public Response checkConnectivity(\n       @Auth final AuthenticatedUser authenticatedUser, final String gameId) {\n-    return connectivityCheck.test(\n-        gameListing.getHostForGame(authenticatedUser.getApiKey(), gameId));\n+\n+    if (!connectivityCheck.gameExists(authenticatedUser.getApiKey(), gameId)) {\n+      return Response.status(400).build();\n+    }\n+\n+    return Response.ok()\n+        .entity(connectivityCheck.canDoReverseConnect(authenticatedUser.getApiKey(), gameId))\n+        .build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25b72b03f8d4d7e72d6c93a85eaa857214981d3b"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUxODY3Mw==", "bodyText": "I'm always a bit suspicious when I see explicit 400 status codes, they always more or less hint on syntax errors.\nI think 404 might be a better choice here actually.\nSee https://httpstatuses.com/400 and https://httpstatuses.com/404", "url": "https://github.com/triplea-game/triplea/pull/6111#discussion_r424518673", "createdAt": "2020-05-13T15:14:50Z", "author": {"login": "RoiEXLab"}, "path": "http-server/src/main/java/org/triplea/modules/game/ConnectivityController.java", "diffHunk": "@@ -40,9 +37,15 @@ public static ConnectivityController build(final GameListing gameListing) {\n       keys = {KeyPart.IP},\n       rates = {@Rate(limit = 10, duration = 1, timeUnit = TimeUnit.MINUTES)})\n   @RolesAllowed(UserRole.HOST)\n-  public boolean checkConnectivity(\n+  public Response checkConnectivity(\n       @Auth final AuthenticatedUser authenticatedUser, final String gameId) {\n-    return connectivityCheck.test(\n-        gameListing.getHostForGame(authenticatedUser.getApiKey(), gameId));\n+\n+    if (!connectivityCheck.gameExists(authenticatedUser.getApiKey(), gameId)) {\n+      return Response.status(400).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25b72b03f8d4d7e72d6c93a85eaa857214981d3b"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3093b221fd657d02209e5b46a5ffb78ee24c41fc", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/3093b221fd657d02209e5b46a5ffb78ee24c41fc", "committedDate": "2020-05-15T05:46:04Z", "message": "Fix server side INetSocketAddress lookup, properly use host address"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "400a76eed0402b28eb2c0405a090ffce26bea3f4", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/400a76eed0402b28eb2c0405a090ffce26bea3f4", "committedDate": "2020-05-15T05:52:18Z", "message": "Formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27e3415469f2cd47c20d788387de73b7c1cab4f4", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/27e3415469f2cd47c20d788387de73b7c1cab4f4", "committedDate": "2020-05-15T05:52:31Z", "message": "Return 422 when gameId cannot be found instead of 400"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "69b2dc8c214d7fc92ebf7a8bca6cb7790c551efc", "author": {"user": {"login": "tripleabuilderbot", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/69b2dc8c214d7fc92ebf7a8bca6cb7790c551efc", "committedDate": "2020-05-15T05:48:25Z", "message": "Auto-Formatting"}, "afterCommit": {"oid": "27e3415469f2cd47c20d788387de73b7c1cab4f4", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/27e3415469f2cd47c20d788387de73b7c1cab4f4", "committedDate": "2020-05-15T05:52:31Z", "message": "Return 422 when gameId cannot be found instead of 400"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f624bad563b7f87da8a8982fba50e8821628168", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/1f624bad563b7f87da8a8982fba50e8821628168", "committedDate": "2020-05-15T06:12:35Z", "message": "Use return flag to indicate result of connectivity check & fix tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzc3NTMw", "url": "https://github.com/triplea-game/triplea/pull/6111#pullrequestreview-412377530", "createdAt": "2020-05-15T06:25:31Z", "commit": {"oid": "1f624bad563b7f87da8a8982fba50e8821628168"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNjoyNTozMlrOGV4Bww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQwNjoyNTozMlrOGV4Bww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU5MTIzNQ==", "bodyText": "Much better IMO \ud83d\udc4d", "url": "https://github.com/triplea-game/triplea/pull/6111#discussion_r425591235", "createdAt": "2020-05-15T06:25:32Z", "author": {"login": "RoiEXLab"}, "path": "http-server/src/main/java/org/triplea/modules/game/ConnectivityController.java", "diffHunk": "@@ -38,11 +38,21 @@ public static ConnectivityController build() {\n       keys = {KeyPart.IP},\n       rates = {@Rate(limit = 10, duration = 1, timeUnit = TimeUnit.MINUTES)})\n   @RolesAllowed(UserRole.HOST)\n-  public boolean checkConnectivity(@Context final HttpServletRequest request, final Integer port) {\n-    Preconditions.checkArgument(port > 0, \"Port must be a positive number, was: \" + port);\n-    Preconditions.checkArgument(\n-        port < Math.pow(2, 16), \"Port must be less than max value (2^16), was: \" + port);\n+  public Response checkConnectivity(\n+      @Auth final AuthenticatedUser authenticatedUser, final String gameId) {\n \n-    return connectivityCheck.test(new InetSocketAddress(request.getRemoteAddr(), port));\n+    final ConnectivityCheck.ReverseConnectionResult result =\n+        connectivityCheck.canDoReverseConnect(authenticatedUser.getApiKey(), gameId);\n+\n+    switch (result) {\n+      case SUCCESS:\n+        return Response.ok().entity(true).build();\n+      case FAILED:\n+        return Response.ok().entity(false).build();\n+      case GAME_ID_NOT_FOUND:\n+        return Response.status(HttpStatus.UNPROCESSABLE_ENTITY_422).build();\n+      default:\n+        throw new IllegalStateException(\"Switch case not handled: \" + result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f624bad563b7f87da8a8982fba50e8821628168"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyMzg1NzQ1", "url": "https://github.com/triplea-game/triplea/pull/6111#pullrequestreview-412385745", "createdAt": "2020-05-15T06:44:07Z", "commit": {"oid": "1f624bad563b7f87da8a8982fba50e8821628168"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3620, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}