{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5ODcyNjA1", "number": 5894, "reviewThreads": {"totalCount": 34, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwODoyMTozMFrODcaMZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDozNDo0MVrODcb0Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTE1ODc4OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwODoyMTozMFrOFkc4uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwODoyMTozMFrOFkc4uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2NjMyOQ==", "bodyText": "Headers should be surrounded by blank lines", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373766329", "createdAt": "2020-02-01T08:21:30Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -80,19 +80,22 @@ examples\n \n # To see 'diff' output, which shows how each file on server is being updated\n #  (caution!! this can expose secret values to stdout)\n-./run_deployment 2.0.1000 -d -i ansible/inventory/prerelease\n+./run_deployment 2.0.1000 --diff -i ansible/inventory/prerelease\n \n # To see SSL debug output:\n+./run_deployment 2.0.1000 -vvvv -i ansible/inventory/prerelease\n+\n+# To see debug output from each command:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTE1ODc5OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwODoyMTozMFrOFkc4ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwODoyMTozMFrOFkc4ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2NjMzMA==", "bodyText": "Multiple top level headers in the same document", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373766330", "createdAt": "2020-02-01T08:21:30Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -80,19 +80,22 @@ examples\n \n # To see 'diff' output, which shows how each file on server is being updated\n #  (caution!! this can expose secret values to stdout)\n-./run_deployment 2.0.1000 -d -i ansible/inventory/prerelease\n+./run_deployment 2.0.1000 --diff -i ansible/inventory/prerelease\n \n # To see SSL debug output:\n+./run_deployment 2.0.1000 -vvvv -i ansible/inventory/prerelease\n+\n+# To see debug output from each command:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTE1ODgwOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwODoyMTozMFrOFkc4uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwODoyMTozMFrOFkc4uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc2NjMzMQ==", "bodyText": "Trailing punctuation in header", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373766331", "createdAt": "2020-02-01T08:21:30Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -80,19 +80,22 @@ examples\n \n # To see 'diff' output, which shows how each file on server is being updated\n #  (caution!! this can expose secret values to stdout)\n-./run_deployment 2.0.1000 -d -i ansible/inventory/prerelease\n+./run_deployment 2.0.1000 --diff -i ansible/inventory/prerelease\n \n # To see SSL debug output:\n+./run_deployment 2.0.1000 -vvvv -i ansible/inventory/prerelease\n+\n+# To see debug output from each command:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM0NDc5OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxNzowODoyN1rOFkeWpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMzoxNjo1MlrOFkfbGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MDM3Mg==", "bodyText": "Technically that's not 100% required, but it definitely should be created", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373790372", "createdAt": "2020-02-01T17:08:27Z", "author": {"login": "RoiEXLab"}, "path": "infrastructure/README.md", "diffHunk": "@@ -165,47 +168,13 @@ ansible-vault encrypt --vault-password-file=vault_password ansible_ssh_key.ed255\n \n # Https Certificate Installation\n \n-Currently done manually.\n-\n-## certbot from letsencrypt\n-\n-```bash\n-sudo apt-get update\n-sudo apt-get install software-properties-common\n-sudo add-apt-repository universe\n-sudo add-apt-repository ppa:certbot/certbot\n-sudo apt-get update\n-sudo apt-get install certbot python-certbot-nginx \n-\n-sudo certbot --nginx -m tripleabuilderbot@gmail.com --agree-tos\n-```\n+The 'certbot' role will:\n+  - run lets-encrypt and create a publicly signed SSL cert.\n+  - sets up a weekly renewal cronjob that will renew the SSL cert if it\n+    is within 30 days of expiry\n \n-Create CAA DNS records\n+For each domain running SSH, a CAA DNS record needs to be created (one time):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwNzU2MQ==", "bodyText": "Thoughts about the wording here?", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373807561", "createdAt": "2020-02-01T23:08:43Z", "author": {"login": "RoiEXLab"}, "path": "infrastructure/README.md", "diffHunk": "@@ -165,47 +168,13 @@ ansible-vault encrypt --vault-password-file=vault_password ansible_ssh_key.ed255\n \n # Https Certificate Installation\n \n-Currently done manually.\n-\n-## certbot from letsencrypt\n-\n-```bash\n-sudo apt-get update\n-sudo apt-get install software-properties-common\n-sudo add-apt-repository universe\n-sudo add-apt-repository ppa:certbot/certbot\n-sudo apt-get update\n-sudo apt-get install certbot python-certbot-nginx \n-\n-sudo certbot --nginx -m tripleabuilderbot@gmail.com --agree-tos\n-```\n+The 'certbot' role will:\n+  - run lets-encrypt and create a publicly signed SSL cert.\n+  - sets up a weekly renewal cronjob that will renew the SSL cert if it\n+    is within 30 days of expiry\n \n-Create CAA DNS records\n+For each domain running SSH, a CAA DNS record needs to be created (one time):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MDM3Mg=="}, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwNzg5Ng==", "bodyText": "Certainly getting into semantics \ud83d\ude01\nI think explaining that we should but don't have to create such an entry will be too much. Terse, concise instructions that do not require decision making are valuable. We could add a link for background information potentially.\nHence for 'semantics', the 'need' is untrue as it's not required, but if we consider our security requirements to \"need\" such a cert for the improved security, then \"need\" is correct from that perspective.\nSo while not strictly needed, per the security standards we would expect, it is needed and should be done.", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373807896", "createdAt": "2020-02-01T23:16:52Z", "author": {"login": "DanVanAtta"}, "path": "infrastructure/README.md", "diffHunk": "@@ -165,47 +168,13 @@ ansible-vault encrypt --vault-password-file=vault_password ansible_ssh_key.ed255\n \n # Https Certificate Installation\n \n-Currently done manually.\n-\n-## certbot from letsencrypt\n-\n-```bash\n-sudo apt-get update\n-sudo apt-get install software-properties-common\n-sudo add-apt-repository universe\n-sudo add-apt-repository ppa:certbot/certbot\n-sudo apt-get update\n-sudo apt-get install certbot python-certbot-nginx \n-\n-sudo certbot --nginx -m tripleabuilderbot@gmail.com --agree-tos\n-```\n+The 'certbot' role will:\n+  - run lets-encrypt and create a publicly signed SSL cert.\n+  - sets up a weekly renewal cronjob that will renew the SSL cert if it\n+    is within 30 days of expiry\n \n-Create CAA DNS records\n+For each domain running SSH, a CAA DNS record needs to be created (one time):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MDM3Mg=="}, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM0NTk3OnYy", "diffSide": "RIGHT", "path": "infrastructure/ansible/roles/certbot/tasks/main.yml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxNzoxMTowMlrOFkeXRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDo0OTo1M1rOFkfCmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MDUzMg==", "bodyText": "Please correct me if I'm missing something obvious here, but the certbot utility should create a cronjob automatically, so there's no need to define that ourselves", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373790532", "createdAt": "2020-02-01T17:11:02Z", "author": {"login": "RoiEXLab"}, "path": "infrastructure/ansible/roles/certbot/tasks/main.yml", "diffHunk": "@@ -0,0 +1,43 @@\n+- name: install software properties common\n+  become: true\n+  apt:\n+    state: present\n+    name: software-properties-common\n+  \n+- name: install certbot apt-repositories\n+  become: true\n+  apt_repository:\n+    state: present\n+    repo: \"{{ item }}\"\n+  loop:\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic universe\"\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe\"\n+    - \"deb http://security.ubuntu.com/ubuntu/ bionic-security universe\"\n+    - \"ppa:certbot/certbot\"\n+\n+- name: install certbot and python for certbot on nginx\n+  become: true\n+  apt:\n+    update_cache: yes\n+    name:\n+      - certbot\n+      - python-certbot-nginx\n+\n+- name: look for certbot generated key file\n+  become: true\n+  stat:\n+    path: /etc/letsencrypt/live/prerelease.triplea-game.org/cert.pem\n+  register: has_certbot_pem\n+\n+- name: run certbot\n+  become: true\n+  command: \"certbot --nginx -n -m tripleabuilderbot@gmail.com --agree-tos -d {{ inventory_hostname }}\"\n+  when: has_certbot_pem.stat.exists == false\n+\n+- name: Add letsencrypt cronjob for cert renewal\n+  become: true\n+  cron:\n+    name: letsencrypt_renewal\n+    special_time: weekly\n+    job: certbot renew", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwMDQwNA==", "bodyText": "It raises a lot of questions if does:\n\nhow does it know what kind of cron to use\nhow does it know you actually want to auto-renew\nif the job does renew, why does the cert creation not mention it and also give instructions on how to renew\n\nI'll see if I can verify if it does.", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373800404", "createdAt": "2020-02-01T20:24:37Z", "author": {"login": "DanVanAtta"}, "path": "infrastructure/ansible/roles/certbot/tasks/main.yml", "diffHunk": "@@ -0,0 +1,43 @@\n+- name: install software properties common\n+  become: true\n+  apt:\n+    state: present\n+    name: software-properties-common\n+  \n+- name: install certbot apt-repositories\n+  become: true\n+  apt_repository:\n+    state: present\n+    repo: \"{{ item }}\"\n+  loop:\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic universe\"\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe\"\n+    - \"deb http://security.ubuntu.com/ubuntu/ bionic-security universe\"\n+    - \"ppa:certbot/certbot\"\n+\n+- name: install certbot and python for certbot on nginx\n+  become: true\n+  apt:\n+    update_cache: yes\n+    name:\n+      - certbot\n+      - python-certbot-nginx\n+\n+- name: look for certbot generated key file\n+  become: true\n+  stat:\n+    path: /etc/letsencrypt/live/prerelease.triplea-game.org/cert.pem\n+  register: has_certbot_pem\n+\n+- name: run certbot\n+  become: true\n+  command: \"certbot --nginx -n -m tripleabuilderbot@gmail.com --agree-tos -d {{ inventory_hostname }}\"\n+  when: has_certbot_pem.stat.exists == false\n+\n+- name: Add letsencrypt cronjob for cert renewal\n+  become: true\n+  cron:\n+    name: letsencrypt_renewal\n+    special_time: weekly\n+    job: certbot renew", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MDUzMg=="}, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwMTQxNw==", "bodyText": "how does it know what kind of cron to use\n\nGood question, can't answer that but there probably are some checks in place to get the correct one.", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373801417", "createdAt": "2020-02-01T20:44:00Z", "author": {"login": "RoiEXLab"}, "path": "infrastructure/ansible/roles/certbot/tasks/main.yml", "diffHunk": "@@ -0,0 +1,43 @@\n+- name: install software properties common\n+  become: true\n+  apt:\n+    state: present\n+    name: software-properties-common\n+  \n+- name: install certbot apt-repositories\n+  become: true\n+  apt_repository:\n+    state: present\n+    repo: \"{{ item }}\"\n+  loop:\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic universe\"\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe\"\n+    - \"deb http://security.ubuntu.com/ubuntu/ bionic-security universe\"\n+    - \"ppa:certbot/certbot\"\n+\n+- name: install certbot and python for certbot on nginx\n+  become: true\n+  apt:\n+    update_cache: yes\n+    name:\n+      - certbot\n+      - python-certbot-nginx\n+\n+- name: look for certbot generated key file\n+  become: true\n+  stat:\n+    path: /etc/letsencrypt/live/prerelease.triplea-game.org/cert.pem\n+  register: has_certbot_pem\n+\n+- name: run certbot\n+  become: true\n+  command: \"certbot --nginx -n -m tripleabuilderbot@gmail.com --agree-tos -d {{ inventory_hostname }}\"\n+  when: has_certbot_pem.stat.exists == false\n+\n+- name: Add letsencrypt cronjob for cert renewal\n+  become: true\n+  cron:\n+    name: letsencrypt_renewal\n+    special_time: weekly\n+    job: certbot renew", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MDUzMg=="}, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwMTYyNA==", "bodyText": "how does it know you actually want to auto-renew\n\nThis is the default behaviour (the certificates are only valid for 90 days, so unless you only need TLS for less than 90 days you probably want to renew it eventually), but I think there's an option to disable it\n\nif the job does renew, why does the cert creation not mention\n\nHard to answer. I assume that the \"bot\" in certbot somewhat implies thae automation. Note that cerbot is not directly linked to letsencrypt. It's a separate utility that \"just happens\" to be created at the same time as letsencrypt and the ACME protocol and uses letsencrypt as its default CA, but it works with any other CA that supports the ACME protocol as well. So you can get a letsencrypt certificate without this utility.\n\nand also give instructions on how to renew\n\nWell I mean renewing just applies the initial configuration again, that's what certbot renew does, just within a cronjob", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373801624", "createdAt": "2020-02-01T20:49:53Z", "author": {"login": "RoiEXLab"}, "path": "infrastructure/ansible/roles/certbot/tasks/main.yml", "diffHunk": "@@ -0,0 +1,43 @@\n+- name: install software properties common\n+  become: true\n+  apt:\n+    state: present\n+    name: software-properties-common\n+  \n+- name: install certbot apt-repositories\n+  become: true\n+  apt_repository:\n+    state: present\n+    repo: \"{{ item }}\"\n+  loop:\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic universe\"\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe\"\n+    - \"deb http://security.ubuntu.com/ubuntu/ bionic-security universe\"\n+    - \"ppa:certbot/certbot\"\n+\n+- name: install certbot and python for certbot on nginx\n+  become: true\n+  apt:\n+    update_cache: yes\n+    name:\n+      - certbot\n+      - python-certbot-nginx\n+\n+- name: look for certbot generated key file\n+  become: true\n+  stat:\n+    path: /etc/letsencrypt/live/prerelease.triplea-game.org/cert.pem\n+  register: has_certbot_pem\n+\n+- name: run certbot\n+  become: true\n+  command: \"certbot --nginx -n -m tripleabuilderbot@gmail.com --agree-tos -d {{ inventory_hostname }}\"\n+  when: has_certbot_pem.stat.exists == false\n+\n+- name: Add letsencrypt cronjob for cert renewal\n+  become: true\n+  cron:\n+    name: letsencrypt_renewal\n+    special_time: weekly\n+    job: certbot renew", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5MDUzMg=="}, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM4NzkwOnYy", "diffSide": "RIGHT", "path": "infrastructure/ansible/roles/nginx/tasks/main.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTowMToyMlrOFketOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDoyNjozNFrOFke-OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NjE1NQ==", "bodyText": "Doesn't the statement above already ensure the service is restarted? So IIRC this also verifies that the service is started if it wasn't before.", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373796155", "createdAt": "2020-02-01T19:01:22Z", "author": {"login": "RoiEXLab"}, "path": "infrastructure/ansible/roles/nginx/tasks/main.yml", "diffHunk": "@@ -4,52 +4,108 @@\n     name: nginx\n     state: present\n \n+\n - name: generate dhparam.pem\n   become: true\n   shell:\n-    cmd: openssl dhparam -out {{ nginx_ssl_dhparams }} 4096\n-    creates: \"{{ nginx_ssl_dhparams }}\"\n+    cmd: openssl dhparam -out {{ dhparams_pem_file }} 4096\n+    creates: \"{{ dhparams_pem_file }}\"\n \n - name: set permissions of dhparam.pem\n   become: true\n   file:\n-    dest: \"{{ nginx_ssl_dhparams }}\"\n+    dest: \"{{ dhparams_pem_file }}\"\n     mode: 600\n \n-- name: check for nginx cert key\n+\n+- name: check for SSL cert key\n   stat:\n-    path: \"{{ nginx_ssl_certificate_key }}\"\n-  register: cert_key\n+    path: \"{{ ssl_cert_key }}\"\n+  register: has_cert_key\n   changed_when: false\n-\n-- name: check for nginx certificate\n+ \n+- name: check for SSL cert\n   stat:\n-    path: \"{{ nginx_ssl_certificate }}\"\n-  register: cert\n+    path: \"{{ ssl_cert }}\"\n+  register: has_cert\n   changed_when: false\n \n - name: create SSL keys if needed\n   become: true\n-  when: (cert_key.stat.exists == false) or (cert.stat.exists == false)\n-  command: openssl req -x509 -nodes -days 365 -newkey rsa:4096 -keyout {{ nginx_ssl_certificate_key }} -out {{ nginx_ssl_certificate }} -batch -subj '/CN=localhost' -sha256 -addext \"subjectAltName = IP:127.0.0.1, IP:::1\"\n+  when: (has_cert_key.stat.exists == false) or (has_cert.stat.exists == false)\n+  command: |\n+       openssl req -x509 -nodes -days 365 \\\n+          -newkey rsa:4096 -keyout {{ ssl_cert_key }} -out {{ ssl_cert }} \\\n+          -batch -subj '/CN=localhost' -sha256 -addext \"subjectAltName = IP:127.0.0.1, IP:::1\"\n+\n+\n+- name: check for letsencrypt cert key\n+  stat:\n+    path: \"{{ lets_encrypt_cert_key }}\"\n+  register: has_lets_encrypt_cert_key\n+  changed_when: false\n+\n+- name: set cert-key variable to generated cert if letsencrypt cert key DNE\n+  when: has_lets_encrypt_cert_key.stat.exists == false\n+  set_fact:\n+    cert_key: \"{{ ssl_cert_key }};\"\n+  changed_when: false\n+\n+- name: set cert-key variable to lets_encrypt cert-key if exists\n+  when: has_lets_encrypt_cert_key.stat.exists\n+  set_fact:\n+    cert_key: \"{{ lets_encrypt_cert_key }}; # managed by Certbot;\"\n+  changed_when: false\n+\n+\n+- name: check for lets_encrypt cert\n+  stat:\n+    path: \"{{ lets_encrypt_cert }}\"\n+  register: has_lets_encrypt_cert\n+  changed_when: false\n+  \n+- name: set cert variable to generated cert if lets_encrypt cert DNE\n+  when: has_lets_encrypt_cert.stat.exists == false\n+  set_fact:\n+    cert: \"{{ ssl_cert }};\"\n+  changed_when: false\n+\n+- name: set cert variable to lets_encrypt cert if exists\n+  when: has_lets_encrypt_cert.stat.exists\n+  set_fact:\n+    cert: \"{{ lets_encrypt_cert }}; # managed by Certbot;\"\n+  changed_when: false\n+\n \n - name: deploy nginx sites_enabled configuation\n   become: true\n   template:\n     src: etc_nginx_sites_enabled_default.j2\n     dest: /etc/nginx/sites-enabled/default\n+  register: nginx_config_changed\n \n - name: allow ports\n   become: true\n+  tags: firewall\n   ufw:\n     rule: allow\n     port: \"{{ item }}\"\n     proto: tcp\n   with_items: \"{{ nginx_allowed_ports }}\"\n \n-- name: relaunch nginx\n+- name: restart nginx if config changed\n+  when: |\n+    (nginx_config_changed.changed) \n+      or (has_cert_key.stat.exists == false) \n+      or (has_cert.stat.exists == false)\n   become: true\n   systemd:\n     name: nginx\n     state: restarted\n \n+- name: ensure nginx is started\n+  become: true\n+  systemd:\n+    name: nginx\n+    state: started", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwMDUwNA==", "bodyText": "Note that the 'restart' now has a when clause on it for only when something has changed in configuration. That was extremely important otherwise on every build we would have disconnected all users when nginx restarted.\nThis 'started' command has no when clause. This will ensure the service is in a started state. This is really here to 'ensure' an expected state that nginx is running. Namely it is to repair the case where we by hand turn nginx off, or if it somehow terminates in some other manner. The restart should take effect on any initial install, so we would expect this 'started' to virtually never have an effect.", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373800504", "createdAt": "2020-02-01T20:26:34Z", "author": {"login": "DanVanAtta"}, "path": "infrastructure/ansible/roles/nginx/tasks/main.yml", "diffHunk": "@@ -4,52 +4,108 @@\n     name: nginx\n     state: present\n \n+\n - name: generate dhparam.pem\n   become: true\n   shell:\n-    cmd: openssl dhparam -out {{ nginx_ssl_dhparams }} 4096\n-    creates: \"{{ nginx_ssl_dhparams }}\"\n+    cmd: openssl dhparam -out {{ dhparams_pem_file }} 4096\n+    creates: \"{{ dhparams_pem_file }}\"\n \n - name: set permissions of dhparam.pem\n   become: true\n   file:\n-    dest: \"{{ nginx_ssl_dhparams }}\"\n+    dest: \"{{ dhparams_pem_file }}\"\n     mode: 600\n \n-- name: check for nginx cert key\n+\n+- name: check for SSL cert key\n   stat:\n-    path: \"{{ nginx_ssl_certificate_key }}\"\n-  register: cert_key\n+    path: \"{{ ssl_cert_key }}\"\n+  register: has_cert_key\n   changed_when: false\n-\n-- name: check for nginx certificate\n+ \n+- name: check for SSL cert\n   stat:\n-    path: \"{{ nginx_ssl_certificate }}\"\n-  register: cert\n+    path: \"{{ ssl_cert }}\"\n+  register: has_cert\n   changed_when: false\n \n - name: create SSL keys if needed\n   become: true\n-  when: (cert_key.stat.exists == false) or (cert.stat.exists == false)\n-  command: openssl req -x509 -nodes -days 365 -newkey rsa:4096 -keyout {{ nginx_ssl_certificate_key }} -out {{ nginx_ssl_certificate }} -batch -subj '/CN=localhost' -sha256 -addext \"subjectAltName = IP:127.0.0.1, IP:::1\"\n+  when: (has_cert_key.stat.exists == false) or (has_cert.stat.exists == false)\n+  command: |\n+       openssl req -x509 -nodes -days 365 \\\n+          -newkey rsa:4096 -keyout {{ ssl_cert_key }} -out {{ ssl_cert }} \\\n+          -batch -subj '/CN=localhost' -sha256 -addext \"subjectAltName = IP:127.0.0.1, IP:::1\"\n+\n+\n+- name: check for letsencrypt cert key\n+  stat:\n+    path: \"{{ lets_encrypt_cert_key }}\"\n+  register: has_lets_encrypt_cert_key\n+  changed_when: false\n+\n+- name: set cert-key variable to generated cert if letsencrypt cert key DNE\n+  when: has_lets_encrypt_cert_key.stat.exists == false\n+  set_fact:\n+    cert_key: \"{{ ssl_cert_key }};\"\n+  changed_when: false\n+\n+- name: set cert-key variable to lets_encrypt cert-key if exists\n+  when: has_lets_encrypt_cert_key.stat.exists\n+  set_fact:\n+    cert_key: \"{{ lets_encrypt_cert_key }}; # managed by Certbot;\"\n+  changed_when: false\n+\n+\n+- name: check for lets_encrypt cert\n+  stat:\n+    path: \"{{ lets_encrypt_cert }}\"\n+  register: has_lets_encrypt_cert\n+  changed_when: false\n+  \n+- name: set cert variable to generated cert if lets_encrypt cert DNE\n+  when: has_lets_encrypt_cert.stat.exists == false\n+  set_fact:\n+    cert: \"{{ ssl_cert }};\"\n+  changed_when: false\n+\n+- name: set cert variable to lets_encrypt cert if exists\n+  when: has_lets_encrypt_cert.stat.exists\n+  set_fact:\n+    cert: \"{{ lets_encrypt_cert }}; # managed by Certbot;\"\n+  changed_when: false\n+\n \n - name: deploy nginx sites_enabled configuation\n   become: true\n   template:\n     src: etc_nginx_sites_enabled_default.j2\n     dest: /etc/nginx/sites-enabled/default\n+  register: nginx_config_changed\n \n - name: allow ports\n   become: true\n+  tags: firewall\n   ufw:\n     rule: allow\n     port: \"{{ item }}\"\n     proto: tcp\n   with_items: \"{{ nginx_allowed_ports }}\"\n \n-- name: relaunch nginx\n+- name: restart nginx if config changed\n+  when: |\n+    (nginx_config_changed.changed) \n+      or (has_cert_key.stat.exists == false) \n+      or (has_cert.stat.exists == false)\n   become: true\n   systemd:\n     name: nginx\n     state: restarted\n \n+- name: ensure nginx is started\n+  become: true\n+  systemd:\n+    name: nginx\n+    state: started", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NjE1NQ=="}, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM4ODU4OnYy", "diffSide": "RIGHT", "path": "infrastructure/ansible/roles/certbot/tasks/main.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTowMzoxM1rOFketkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDoyMzowOVrOFke9gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NjI0Mw==", "bodyText": "I assume this path shouldn't be hardcoded?", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373796243", "createdAt": "2020-02-01T19:03:13Z", "author": {"login": "RoiEXLab"}, "path": "infrastructure/ansible/roles/certbot/tasks/main.yml", "diffHunk": "@@ -0,0 +1,43 @@\n+- name: install software properties common\n+  become: true\n+  apt:\n+    state: present\n+    name: software-properties-common\n+  \n+- name: install certbot apt-repositories\n+  become: true\n+  apt_repository:\n+    state: present\n+    repo: \"{{ item }}\"\n+  loop:\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic universe\"\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe\"\n+    - \"deb http://security.ubuntu.com/ubuntu/ bionic-security universe\"\n+    - \"ppa:certbot/certbot\"\n+\n+- name: install certbot and python for certbot on nginx\n+  become: true\n+  apt:\n+    update_cache: yes\n+    name:\n+      - certbot\n+      - python-certbot-nginx\n+\n+- name: look for certbot generated key file\n+  become: true\n+  stat:\n+    path: /etc/letsencrypt/live/prerelease.triplea-game.org/cert.pem", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwMDMyMQ==", "bodyText": "Indeed, good catch, updated: 828cce1", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373800321", "createdAt": "2020-02-01T20:23:09Z", "author": {"login": "DanVanAtta"}, "path": "infrastructure/ansible/roles/certbot/tasks/main.yml", "diffHunk": "@@ -0,0 +1,43 @@\n+- name: install software properties common\n+  become: true\n+  apt:\n+    state: present\n+    name: software-properties-common\n+  \n+- name: install certbot apt-repositories\n+  become: true\n+  apt_repository:\n+    state: present\n+    repo: \"{{ item }}\"\n+  loop:\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic universe\"\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe\"\n+    - \"deb http://security.ubuntu.com/ubuntu/ bionic-security universe\"\n+    - \"ppa:certbot/certbot\"\n+\n+- name: install certbot and python for certbot on nginx\n+  become: true\n+  apt:\n+    update_cache: yes\n+    name:\n+      - certbot\n+      - python-certbot-nginx\n+\n+- name: look for certbot generated key file\n+  become: true\n+  stat:\n+    path: /etc/letsencrypt/live/prerelease.triplea-game.org/cert.pem", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NjI0Mw=="}, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5MDc1OnYy", "diffSide": "RIGHT", "path": "infrastructure/ansible/roles/certbot/tasks/main.yml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTowODo1OVrOFkeumA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDoyMjo1N1rOFke9dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NjUwNA==", "bodyText": "We don't have any mail forwarding for this email don't we?\nI just got (2 days ago) an email from the certbot utility telling me that it failed to renew the MARTI HTTP certificates.\nTurns out that there was (and still is, but I found a workaround) a DNSSEC issue with namecheap that fails for a nonexistent subdomain, which ultimately caused the check to fail.\nWithout this email we wouldn't have noticed until it's too late, so I'm convinced there's definitely some value in using an actual email here.", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373796504", "createdAt": "2020-02-01T19:08:59Z", "author": {"login": "RoiEXLab"}, "path": "infrastructure/ansible/roles/certbot/tasks/main.yml", "diffHunk": "@@ -0,0 +1,43 @@\n+- name: install software properties common\n+  become: true\n+  apt:\n+    state: present\n+    name: software-properties-common\n+  \n+- name: install certbot apt-repositories\n+  become: true\n+  apt_repository:\n+    state: present\n+    repo: \"{{ item }}\"\n+  loop:\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic universe\"\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe\"\n+    - \"deb http://security.ubuntu.com/ubuntu/ bionic-security universe\"\n+    - \"ppa:certbot/certbot\"\n+\n+- name: install certbot and python for certbot on nginx\n+  become: true\n+  apt:\n+    update_cache: yes\n+    name:\n+      - certbot\n+      - python-certbot-nginx\n+\n+- name: look for certbot generated key file\n+  become: true\n+  stat:\n+    path: /etc/letsencrypt/live/prerelease.triplea-game.org/cert.pem\n+  register: has_certbot_pem\n+\n+- name: run certbot\n+  become: true\n+  command: \"certbot --nginx -n -m tripleabuilderbot@gmail.com --agree-tos -d {{ inventory_hostname }}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzgwNw==", "bodyText": "Oh and another thing: By adding --rsa-key-size 4096 we get a stronger RSA key.\nI use this for every other server we use certbot on.", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797807", "createdAt": "2020-02-01T19:36:12Z", "author": {"login": "RoiEXLab"}, "path": "infrastructure/ansible/roles/certbot/tasks/main.yml", "diffHunk": "@@ -0,0 +1,43 @@\n+- name: install software properties common\n+  become: true\n+  apt:\n+    state: present\n+    name: software-properties-common\n+  \n+- name: install certbot apt-repositories\n+  become: true\n+  apt_repository:\n+    state: present\n+    repo: \"{{ item }}\"\n+  loop:\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic universe\"\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe\"\n+    - \"deb http://security.ubuntu.com/ubuntu/ bionic-security universe\"\n+    - \"ppa:certbot/certbot\"\n+\n+- name: install certbot and python for certbot on nginx\n+  become: true\n+  apt:\n+    update_cache: yes\n+    name:\n+      - certbot\n+      - python-certbot-nginx\n+\n+- name: look for certbot generated key file\n+  become: true\n+  stat:\n+    path: /etc/letsencrypt/live/prerelease.triplea-game.org/cert.pem\n+  register: has_certbot_pem\n+\n+- name: run certbot\n+  become: true\n+  command: \"certbot --nginx -n -m tripleabuilderbot@gmail.com --agree-tos -d {{ inventory_hostname }}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NjUwNA=="}, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwMDMwOQ==", "bodyText": "tripleabuilderbot@gmail.com  is a real email. If we have a dev-forwaring list, that would be good to use. I just sent a test email to: tripleadevelopers@gmail.com and got nothing - is that a working distro? Arguably we should also encode the email as well so that it does not get scraped and yield spam.\nAdded the key-size flag: 69a240e; The command here is based on what we previously had in the README", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373800309", "createdAt": "2020-02-01T20:22:57Z", "author": {"login": "DanVanAtta"}, "path": "infrastructure/ansible/roles/certbot/tasks/main.yml", "diffHunk": "@@ -0,0 +1,43 @@\n+- name: install software properties common\n+  become: true\n+  apt:\n+    state: present\n+    name: software-properties-common\n+  \n+- name: install certbot apt-repositories\n+  become: true\n+  apt_repository:\n+    state: present\n+    repo: \"{{ item }}\"\n+  loop:\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic universe\"\n+    - \"deb http://archive.ubuntu.com/ubuntu/ bionic-updates universe\"\n+    - \"deb http://security.ubuntu.com/ubuntu/ bionic-security universe\"\n+    - \"ppa:certbot/certbot\"\n+\n+- name: install certbot and python for certbot on nginx\n+  become: true\n+  apt:\n+    update_cache: yes\n+    name:\n+      - certbot\n+      - python-certbot-nginx\n+\n+- name: look for certbot generated key file\n+  become: true\n+  stat:\n+    path: /etc/letsencrypt/live/prerelease.triplea-game.org/cert.pem\n+  register: has_certbot_pem\n+\n+- name: run certbot\n+  become: true\n+  command: \"certbot --nginx -n -m tripleabuilderbot@gmail.com --agree-tos -d {{ inventory_hostname }}\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NjUwNA=="}, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5NzAyOnYy", "diffSide": "RIGHT", "path": "infrastructure/ansible/roles/nginx/tasks/main.yml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOToyNjoyNlrOFkeyAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDo1MDozN1rOFkfCrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzM3Nw==", "bodyText": "How often is this file run?\nCould it happen that the certificate runs out in-between runs?\nFor Marti and the forum I solved this problem by adding a post-hook that runs sudo systemctl reload nginx to ensure that nginx picks up the certificate correctly after refreshing it. It could be the case that certbot does this automatically using the nginx plugin (which is used), but when I initially configured everything there such a plugin didn't exist yer.", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797377", "createdAt": "2020-02-01T19:26:26Z", "author": {"login": "RoiEXLab"}, "path": "infrastructure/ansible/roles/nginx/tasks/main.yml", "diffHunk": "@@ -4,52 +4,108 @@\n     name: nginx\n     state: present\n \n+\n - name: generate dhparam.pem\n   become: true\n   shell:\n-    cmd: openssl dhparam -out {{ nginx_ssl_dhparams }} 4096\n-    creates: \"{{ nginx_ssl_dhparams }}\"\n+    cmd: openssl dhparam -out {{ dhparams_pem_file }} 4096\n+    creates: \"{{ dhparams_pem_file }}\"\n \n - name: set permissions of dhparam.pem\n   become: true\n   file:\n-    dest: \"{{ nginx_ssl_dhparams }}\"\n+    dest: \"{{ dhparams_pem_file }}\"\n     mode: 600\n \n-- name: check for nginx cert key\n+\n+- name: check for SSL cert key\n   stat:\n-    path: \"{{ nginx_ssl_certificate_key }}\"\n-  register: cert_key\n+    path: \"{{ ssl_cert_key }}\"\n+  register: has_cert_key\n   changed_when: false\n-\n-- name: check for nginx certificate\n+ \n+- name: check for SSL cert\n   stat:\n-    path: \"{{ nginx_ssl_certificate }}\"\n-  register: cert\n+    path: \"{{ ssl_cert }}\"\n+  register: has_cert\n   changed_when: false\n \n - name: create SSL keys if needed\n   become: true\n-  when: (cert_key.stat.exists == false) or (cert.stat.exists == false)\n-  command: openssl req -x509 -nodes -days 365 -newkey rsa:4096 -keyout {{ nginx_ssl_certificate_key }} -out {{ nginx_ssl_certificate }} -batch -subj '/CN=localhost' -sha256 -addext \"subjectAltName = IP:127.0.0.1, IP:::1\"\n+  when: (has_cert_key.stat.exists == false) or (has_cert.stat.exists == false)\n+  command: |\n+       openssl req -x509 -nodes -days 365 \\\n+          -newkey rsa:4096 -keyout {{ ssl_cert_key }} -out {{ ssl_cert }} \\\n+          -batch -subj '/CN=localhost' -sha256 -addext \"subjectAltName = IP:127.0.0.1, IP:::1\"\n+\n+\n+- name: check for letsencrypt cert key\n+  stat:\n+    path: \"{{ lets_encrypt_cert_key }}\"\n+  register: has_lets_encrypt_cert_key\n+  changed_when: false\n+\n+- name: set cert-key variable to generated cert if letsencrypt cert key DNE\n+  when: has_lets_encrypt_cert_key.stat.exists == false\n+  set_fact:\n+    cert_key: \"{{ ssl_cert_key }};\"\n+  changed_when: false\n+\n+- name: set cert-key variable to lets_encrypt cert-key if exists\n+  when: has_lets_encrypt_cert_key.stat.exists\n+  set_fact:\n+    cert_key: \"{{ lets_encrypt_cert_key }}; # managed by Certbot;\"\n+  changed_when: false\n+\n+\n+- name: check for lets_encrypt cert\n+  stat:\n+    path: \"{{ lets_encrypt_cert }}\"\n+  register: has_lets_encrypt_cert\n+  changed_when: false\n+  \n+- name: set cert variable to generated cert if lets_encrypt cert DNE\n+  when: has_lets_encrypt_cert.stat.exists == false\n+  set_fact:\n+    cert: \"{{ ssl_cert }};\"\n+  changed_when: false\n+\n+- name: set cert variable to lets_encrypt cert if exists\n+  when: has_lets_encrypt_cert.stat.exists\n+  set_fact:\n+    cert: \"{{ lets_encrypt_cert }}; # managed by Certbot;\"\n+  changed_when: false\n+\n \n - name: deploy nginx sites_enabled configuation\n   become: true\n   template:\n     src: etc_nginx_sites_enabled_default.j2\n     dest: /etc/nginx/sites-enabled/default\n+  register: nginx_config_changed\n \n - name: allow ports\n   become: true\n+  tags: firewall\n   ufw:\n     rule: allow\n     port: \"{{ item }}\"\n     proto: tcp\n   with_items: \"{{ nginx_allowed_ports }}\"\n \n-- name: relaunch nginx\n+- name: restart nginx if config changed\n+  when: |\n+    (nginx_config_changed.changed) \n+      or (has_cert_key.stat.exists == false) \n+      or (has_cert.stat.exists == false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5ODExMQ==", "bodyText": "I just double checked my assumption.\nLooks like the nginx plugin takes care of automatically restarting the service, so no need to restart nginx \"manually\".\nSee https://community.letsencrypt.org/t/doest-certbot-automaticly-reload-nginx-on-successful-renew/40361/5", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373798111", "createdAt": "2020-02-01T19:42:40Z", "author": {"login": "RoiEXLab"}, "path": "infrastructure/ansible/roles/nginx/tasks/main.yml", "diffHunk": "@@ -4,52 +4,108 @@\n     name: nginx\n     state: present\n \n+\n - name: generate dhparam.pem\n   become: true\n   shell:\n-    cmd: openssl dhparam -out {{ nginx_ssl_dhparams }} 4096\n-    creates: \"{{ nginx_ssl_dhparams }}\"\n+    cmd: openssl dhparam -out {{ dhparams_pem_file }} 4096\n+    creates: \"{{ dhparams_pem_file }}\"\n \n - name: set permissions of dhparam.pem\n   become: true\n   file:\n-    dest: \"{{ nginx_ssl_dhparams }}\"\n+    dest: \"{{ dhparams_pem_file }}\"\n     mode: 600\n \n-- name: check for nginx cert key\n+\n+- name: check for SSL cert key\n   stat:\n-    path: \"{{ nginx_ssl_certificate_key }}\"\n-  register: cert_key\n+    path: \"{{ ssl_cert_key }}\"\n+  register: has_cert_key\n   changed_when: false\n-\n-- name: check for nginx certificate\n+ \n+- name: check for SSL cert\n   stat:\n-    path: \"{{ nginx_ssl_certificate }}\"\n-  register: cert\n+    path: \"{{ ssl_cert }}\"\n+  register: has_cert\n   changed_when: false\n \n - name: create SSL keys if needed\n   become: true\n-  when: (cert_key.stat.exists == false) or (cert.stat.exists == false)\n-  command: openssl req -x509 -nodes -days 365 -newkey rsa:4096 -keyout {{ nginx_ssl_certificate_key }} -out {{ nginx_ssl_certificate }} -batch -subj '/CN=localhost' -sha256 -addext \"subjectAltName = IP:127.0.0.1, IP:::1\"\n+  when: (has_cert_key.stat.exists == false) or (has_cert.stat.exists == false)\n+  command: |\n+       openssl req -x509 -nodes -days 365 \\\n+          -newkey rsa:4096 -keyout {{ ssl_cert_key }} -out {{ ssl_cert }} \\\n+          -batch -subj '/CN=localhost' -sha256 -addext \"subjectAltName = IP:127.0.0.1, IP:::1\"\n+\n+\n+- name: check for letsencrypt cert key\n+  stat:\n+    path: \"{{ lets_encrypt_cert_key }}\"\n+  register: has_lets_encrypt_cert_key\n+  changed_when: false\n+\n+- name: set cert-key variable to generated cert if letsencrypt cert key DNE\n+  when: has_lets_encrypt_cert_key.stat.exists == false\n+  set_fact:\n+    cert_key: \"{{ ssl_cert_key }};\"\n+  changed_when: false\n+\n+- name: set cert-key variable to lets_encrypt cert-key if exists\n+  when: has_lets_encrypt_cert_key.stat.exists\n+  set_fact:\n+    cert_key: \"{{ lets_encrypt_cert_key }}; # managed by Certbot;\"\n+  changed_when: false\n+\n+\n+- name: check for lets_encrypt cert\n+  stat:\n+    path: \"{{ lets_encrypt_cert }}\"\n+  register: has_lets_encrypt_cert\n+  changed_when: false\n+  \n+- name: set cert variable to generated cert if lets_encrypt cert DNE\n+  when: has_lets_encrypt_cert.stat.exists == false\n+  set_fact:\n+    cert: \"{{ ssl_cert }};\"\n+  changed_when: false\n+\n+- name: set cert variable to lets_encrypt cert if exists\n+  when: has_lets_encrypt_cert.stat.exists\n+  set_fact:\n+    cert: \"{{ lets_encrypt_cert }}; # managed by Certbot;\"\n+  changed_when: false\n+\n \n - name: deploy nginx sites_enabled configuation\n   become: true\n   template:\n     src: etc_nginx_sites_enabled_default.j2\n     dest: /etc/nginx/sites-enabled/default\n+  register: nginx_config_changed\n \n - name: allow ports\n   become: true\n+  tags: firewall\n   ufw:\n     rule: allow\n     port: \"{{ item }}\"\n     proto: tcp\n   with_items: \"{{ nginx_allowed_ports }}\"\n \n-- name: relaunch nginx\n+- name: restart nginx if config changed\n+  when: |\n+    (nginx_config_changed.changed) \n+      or (has_cert_key.stat.exists == false) \n+      or (has_cert.stat.exists == false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzM3Nw=="}, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwMDgwMw==", "bodyText": "Is this file tasks/main.yml? If so, on every build. If 'this file' is the cert, if you scroll up in the same tasks/main.yml there is a stat command to check for /etc/nginx/cert.crt and key and generates if does not exist, so that is one-time.\nTo explain this when clause, if someone deletes the 'crt' files and we recreate them, and even if 'sites-enabled/default' is not updated, we'll restart nginx. Otherwise, if 'sites-enabled/default' is modified, we'll restart nginx.\n\nCould it happen that the certificate runs out in-between runs?\n\nThis role/task is independent of the certbot certificates, it is for a 'base' nginx only and is unaware of certbot. AFAIK the generated certs /etc/nginx/cert.crt, do not expire as those are just keys.\n\nLooks like the nginx plugin takes care of automatically restarting the service, so no need to restart nginx \"manually\"\n\nI think perhaps there is a disconnect. We are restarting here on configuration change or a change in the nginx keys, there is no certbot involved here yet.", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373800803", "createdAt": "2020-02-01T20:31:58Z", "author": {"login": "DanVanAtta"}, "path": "infrastructure/ansible/roles/nginx/tasks/main.yml", "diffHunk": "@@ -4,52 +4,108 @@\n     name: nginx\n     state: present\n \n+\n - name: generate dhparam.pem\n   become: true\n   shell:\n-    cmd: openssl dhparam -out {{ nginx_ssl_dhparams }} 4096\n-    creates: \"{{ nginx_ssl_dhparams }}\"\n+    cmd: openssl dhparam -out {{ dhparams_pem_file }} 4096\n+    creates: \"{{ dhparams_pem_file }}\"\n \n - name: set permissions of dhparam.pem\n   become: true\n   file:\n-    dest: \"{{ nginx_ssl_dhparams }}\"\n+    dest: \"{{ dhparams_pem_file }}\"\n     mode: 600\n \n-- name: check for nginx cert key\n+\n+- name: check for SSL cert key\n   stat:\n-    path: \"{{ nginx_ssl_certificate_key }}\"\n-  register: cert_key\n+    path: \"{{ ssl_cert_key }}\"\n+  register: has_cert_key\n   changed_when: false\n-\n-- name: check for nginx certificate\n+ \n+- name: check for SSL cert\n   stat:\n-    path: \"{{ nginx_ssl_certificate }}\"\n-  register: cert\n+    path: \"{{ ssl_cert }}\"\n+  register: has_cert\n   changed_when: false\n \n - name: create SSL keys if needed\n   become: true\n-  when: (cert_key.stat.exists == false) or (cert.stat.exists == false)\n-  command: openssl req -x509 -nodes -days 365 -newkey rsa:4096 -keyout {{ nginx_ssl_certificate_key }} -out {{ nginx_ssl_certificate }} -batch -subj '/CN=localhost' -sha256 -addext \"subjectAltName = IP:127.0.0.1, IP:::1\"\n+  when: (has_cert_key.stat.exists == false) or (has_cert.stat.exists == false)\n+  command: |\n+       openssl req -x509 -nodes -days 365 \\\n+          -newkey rsa:4096 -keyout {{ ssl_cert_key }} -out {{ ssl_cert }} \\\n+          -batch -subj '/CN=localhost' -sha256 -addext \"subjectAltName = IP:127.0.0.1, IP:::1\"\n+\n+\n+- name: check for letsencrypt cert key\n+  stat:\n+    path: \"{{ lets_encrypt_cert_key }}\"\n+  register: has_lets_encrypt_cert_key\n+  changed_when: false\n+\n+- name: set cert-key variable to generated cert if letsencrypt cert key DNE\n+  when: has_lets_encrypt_cert_key.stat.exists == false\n+  set_fact:\n+    cert_key: \"{{ ssl_cert_key }};\"\n+  changed_when: false\n+\n+- name: set cert-key variable to lets_encrypt cert-key if exists\n+  when: has_lets_encrypt_cert_key.stat.exists\n+  set_fact:\n+    cert_key: \"{{ lets_encrypt_cert_key }}; # managed by Certbot;\"\n+  changed_when: false\n+\n+\n+- name: check for lets_encrypt cert\n+  stat:\n+    path: \"{{ lets_encrypt_cert }}\"\n+  register: has_lets_encrypt_cert\n+  changed_when: false\n+  \n+- name: set cert variable to generated cert if lets_encrypt cert DNE\n+  when: has_lets_encrypt_cert.stat.exists == false\n+  set_fact:\n+    cert: \"{{ ssl_cert }};\"\n+  changed_when: false\n+\n+- name: set cert variable to lets_encrypt cert if exists\n+  when: has_lets_encrypt_cert.stat.exists\n+  set_fact:\n+    cert: \"{{ lets_encrypt_cert }}; # managed by Certbot;\"\n+  changed_when: false\n+\n \n - name: deploy nginx sites_enabled configuation\n   become: true\n   template:\n     src: etc_nginx_sites_enabled_default.j2\n     dest: /etc/nginx/sites-enabled/default\n+  register: nginx_config_changed\n \n - name: allow ports\n   become: true\n+  tags: firewall\n   ufw:\n     rule: allow\n     port: \"{{ item }}\"\n     proto: tcp\n   with_items: \"{{ nginx_allowed_ports }}\"\n \n-- name: relaunch nginx\n+- name: restart nginx if config changed\n+  when: |\n+    (nginx_config_changed.changed) \n+      or (has_cert_key.stat.exists == false) \n+      or (has_cert.stat.exists == false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzM3Nw=="}, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwMTY0NQ==", "bodyText": "Ah, ok makes sense.\nThanks for clarifying", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373801645", "createdAt": "2020-02-01T20:50:37Z", "author": {"login": "RoiEXLab"}, "path": "infrastructure/ansible/roles/nginx/tasks/main.yml", "diffHunk": "@@ -4,52 +4,108 @@\n     name: nginx\n     state: present\n \n+\n - name: generate dhparam.pem\n   become: true\n   shell:\n-    cmd: openssl dhparam -out {{ nginx_ssl_dhparams }} 4096\n-    creates: \"{{ nginx_ssl_dhparams }}\"\n+    cmd: openssl dhparam -out {{ dhparams_pem_file }} 4096\n+    creates: \"{{ dhparams_pem_file }}\"\n \n - name: set permissions of dhparam.pem\n   become: true\n   file:\n-    dest: \"{{ nginx_ssl_dhparams }}\"\n+    dest: \"{{ dhparams_pem_file }}\"\n     mode: 600\n \n-- name: check for nginx cert key\n+\n+- name: check for SSL cert key\n   stat:\n-    path: \"{{ nginx_ssl_certificate_key }}\"\n-  register: cert_key\n+    path: \"{{ ssl_cert_key }}\"\n+  register: has_cert_key\n   changed_when: false\n-\n-- name: check for nginx certificate\n+ \n+- name: check for SSL cert\n   stat:\n-    path: \"{{ nginx_ssl_certificate }}\"\n-  register: cert\n+    path: \"{{ ssl_cert }}\"\n+  register: has_cert\n   changed_when: false\n \n - name: create SSL keys if needed\n   become: true\n-  when: (cert_key.stat.exists == false) or (cert.stat.exists == false)\n-  command: openssl req -x509 -nodes -days 365 -newkey rsa:4096 -keyout {{ nginx_ssl_certificate_key }} -out {{ nginx_ssl_certificate }} -batch -subj '/CN=localhost' -sha256 -addext \"subjectAltName = IP:127.0.0.1, IP:::1\"\n+  when: (has_cert_key.stat.exists == false) or (has_cert.stat.exists == false)\n+  command: |\n+       openssl req -x509 -nodes -days 365 \\\n+          -newkey rsa:4096 -keyout {{ ssl_cert_key }} -out {{ ssl_cert }} \\\n+          -batch -subj '/CN=localhost' -sha256 -addext \"subjectAltName = IP:127.0.0.1, IP:::1\"\n+\n+\n+- name: check for letsencrypt cert key\n+  stat:\n+    path: \"{{ lets_encrypt_cert_key }}\"\n+  register: has_lets_encrypt_cert_key\n+  changed_when: false\n+\n+- name: set cert-key variable to generated cert if letsencrypt cert key DNE\n+  when: has_lets_encrypt_cert_key.stat.exists == false\n+  set_fact:\n+    cert_key: \"{{ ssl_cert_key }};\"\n+  changed_when: false\n+\n+- name: set cert-key variable to lets_encrypt cert-key if exists\n+  when: has_lets_encrypt_cert_key.stat.exists\n+  set_fact:\n+    cert_key: \"{{ lets_encrypt_cert_key }}; # managed by Certbot;\"\n+  changed_when: false\n+\n+\n+- name: check for lets_encrypt cert\n+  stat:\n+    path: \"{{ lets_encrypt_cert }}\"\n+  register: has_lets_encrypt_cert\n+  changed_when: false\n+  \n+- name: set cert variable to generated cert if lets_encrypt cert DNE\n+  when: has_lets_encrypt_cert.stat.exists == false\n+  set_fact:\n+    cert: \"{{ ssl_cert }};\"\n+  changed_when: false\n+\n+- name: set cert variable to lets_encrypt cert if exists\n+  when: has_lets_encrypt_cert.stat.exists\n+  set_fact:\n+    cert: \"{{ lets_encrypt_cert }}; # managed by Certbot;\"\n+  changed_when: false\n+\n \n - name: deploy nginx sites_enabled configuation\n   become: true\n   template:\n     src: etc_nginx_sites_enabled_default.j2\n     dest: /etc/nginx/sites-enabled/default\n+  register: nginx_config_changed\n \n - name: allow ports\n   become: true\n+  tags: firewall\n   ufw:\n     rule: allow\n     port: \"{{ item }}\"\n     proto: tcp\n   with_items: \"{{ nginx_allowed_ports }}\"\n \n-- name: relaunch nginx\n+- name: restart nginx if config changed\n+  when: |\n+    (nginx_config_changed.changed) \n+      or (has_cert_key.stat.exists == false) \n+      or (has_cert.stat.exists == false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzM3Nw=="}, "originalCommit": {"oid": "6795b0daac398019e2e1705258b8c1e3b3f3adf5"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODE2OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOToyOTo1OVrOFkeyng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOToyOTo1OVrOFkeyng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzUzNA==", "bodyText": "Inconsistent indentation for list items at the same level", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797534", "createdAt": "2020-02-01T19:29:59Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,46 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n+  * -v: Verbose output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODE3OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOToyOTo1OVrOFkeynw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOToyOTo1OVrOFkeynw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzUzNQ==", "bodyText": "Inconsistent indentation for list items at the same level", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797535", "createdAt": "2020-02-01T19:29:59Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,46 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n+  * -v: Verbose output\n+  * -vvv: Debug output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODE4OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOToyOTo1OVrOFkeyoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOToyOTo1OVrOFkeyoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzUzNg==", "bodyText": "Inconsistent indentation for list items at the same level", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797536", "createdAt": "2020-02-01T19:29:59Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,46 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n+  * -v: Verbose output\n+  * -vvv: Debug output\n+  * -vvvv: SSL Debug output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODIwOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMFrOFkeyog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMFrOFkeyog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzUzOA==", "bodyText": "Inconsistent indentation for list items at the same level", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797538", "createdAt": "2020-02-01T19:30:00Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,46 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n+  * -v: Verbose output\n+  * -vvv: Debug output\n+  * -vvvv: SSL Debug output\n+  * --diff: Shows differences in updated templates and files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODIxOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMFrOFkeyow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMFrOFkeyow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzUzOQ==", "bodyText": "Inconsistent indentation for list items at the same level", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797539", "createdAt": "2020-02-01T19:30:00Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,46 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n+  * -v: Verbose output\n+  * -vvv: Debug output\n+  * -vvvv: SSL Debug output\n+  * --diff: Shows differences in updated templates and files\n+  * -t : Tags", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODIyOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMFrOFkeypA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMFrOFkeypA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzU0MA==", "bodyText": "Consider starting bulleted lists at the beginning of the line", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797540", "createdAt": "2020-02-01T19:30:00Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,46 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n+  * -v: Verbose output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODIzOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMFrOFkeypQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMFrOFkeypQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzU0MQ==", "bodyText": "Trailing spaces", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797541", "createdAt": "2020-02-01T19:30:00Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,46 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n+  * -v: Verbose output\n+  * -vvv: Debug output\n+  * -vvvv: SSL Debug output\n+  * --diff: Shows differences in updated templates and files\n+  * -t : Tags\n \n-# To see verbose output\n-./run_deployment 2.0.1000 -v -i ansible/inventory/prerelease\n+### Examples with Tags\n \n-# To see 'diff' output, which shows how each file on server is being updated\n-#  (caution!! this can expose secret values to stdout)\n-./run_deployment 2.0.1000 -d -i ansible/inventory/prerelease\n \n-# To see SSL debug output:\n-./run_deployment 2.0.1000 -vvv -i ansible/inventory/prerelease\n+#### Deploy just bots\n \n-# To deploy to just bots, use tags, '-t' (see playbook for tag names)\n-./run_deployment 2.0.1000 -vvv -t bots -i ansible/inventory/prerelease\n+```bash\n+./run_deployment 2.0.1000 -t bots -i ansible/inventory/prerelease\n+```\n+\n+#### Deploy NGINX and CertBot\n+```bash\n+./run_deployment 2.0.1000 -t nginx,certbot -i ansible/inventory/prerelease\n ```\n \n+\n+## Example Prod Deployment\n+ ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODI0OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMFrOFkeypg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMFrOFkeypg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzU0Mg==", "bodyText": "Headers should be surrounded by blank lines", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797542", "createdAt": "2020-02-01T19:30:00Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,46 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODI1OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMVrOFkeypw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMVrOFkeypw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzU0Mw==", "bodyText": "Headers should be surrounded by blank lines", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797543", "createdAt": "2020-02-01T19:30:01Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,46 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODI2OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMVrOFkeyqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMVrOFkeyqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzU0NA==", "bodyText": "Headers should be surrounded by blank lines", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797544", "createdAt": "2020-02-01T19:30:01Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,46 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n+  * -v: Verbose output\n+  * -vvv: Debug output\n+  * -vvvv: SSL Debug output\n+  * --diff: Shows differences in updated templates and files\n+  * -t : Tags\n \n-# To see verbose output\n-./run_deployment 2.0.1000 -v -i ansible/inventory/prerelease\n+### Examples with Tags\n \n-# To see 'diff' output, which shows how each file on server is being updated\n-#  (caution!! this can expose secret values to stdout)\n-./run_deployment 2.0.1000 -d -i ansible/inventory/prerelease\n \n-# To see SSL debug output:\n-./run_deployment 2.0.1000 -vvv -i ansible/inventory/prerelease\n+#### Deploy just bots\n \n-# To deploy to just bots, use tags, '-t' (see playbook for tag names)\n-./run_deployment 2.0.1000 -vvv -t bots -i ansible/inventory/prerelease\n+```bash\n+./run_deployment 2.0.1000 -t bots -i ansible/inventory/prerelease\n+```\n+\n+#### Deploy NGINX and CertBot", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODI3OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMVrOFkeyqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMVrOFkeyqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzU0NQ==", "bodyText": "Headers should be surrounded by blank lines", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797545", "createdAt": "2020-02-01T19:30:01Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,46 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n+  * -v: Verbose output\n+  * -vvv: Debug output\n+  * -vvvv: SSL Debug output\n+  * --diff: Shows differences in updated templates and files\n+  * -t : Tags\n \n-# To see verbose output\n-./run_deployment 2.0.1000 -v -i ansible/inventory/prerelease\n+### Examples with Tags\n \n-# To see 'diff' output, which shows how each file on server is being updated\n-#  (caution!! this can expose secret values to stdout)\n-./run_deployment 2.0.1000 -d -i ansible/inventory/prerelease\n \n-# To see SSL debug output:\n-./run_deployment 2.0.1000 -vvv -i ansible/inventory/prerelease\n+#### Deploy just bots\n \n-# To deploy to just bots, use tags, '-t' (see playbook for tag names)\n-./run_deployment 2.0.1000 -vvv -t bots -i ansible/inventory/prerelease\n+```bash\n+./run_deployment 2.0.1000 -t bots -i ansible/inventory/prerelease\n+```\n+\n+#### Deploy NGINX and CertBot\n+```bash\n+./run_deployment 2.0.1000 -t nginx,certbot -i ansible/inventory/prerelease\n ```\n \n+\n+## Example Prod Deployment", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODI4OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMVrOFkeyqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMVrOFkeyqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzU0Ng==", "bodyText": "Lists should be surrounded by blank lines", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797546", "createdAt": "2020-02-01T19:30:01Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,46 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n+  * -v: Verbose output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTM5ODI5OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMlrOFkeyqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozMDowMlrOFkeyqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzU0Nw==", "bodyText": "Lists should be surrounded by blank lines", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797547", "createdAt": "2020-02-01T19:30:02Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -165,47 +179,13 @@ ansible-vault encrypt --vault-password-file=vault_password ansible_ssh_key.ed255\n \n # Https Certificate Installation\n \n-Currently done manually.\n-\n-## certbot from letsencrypt\n+The 'certbot' role will:\n+  - run lets-encrypt and create a publicly signed SSL cert.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "651f04a9a496c701b317f7808a435a5534dcdf87"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTQwMDM4OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozNjoyM1rOFkezwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozNjoyM1rOFkezwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzgyNA==", "bodyText": "Inconsistent indentation for list items at the same level", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797824", "createdAt": "2020-02-01T19:36:23Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,47 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n \n-# To see verbose output\n-./run_deployment 2.0.1000 -v -i ansible/inventory/prerelease\n+  * `-v`: Verbose output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ebf211ba0d1a9a70f83bbb1b5884443f2295e1"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTQwMDM5OnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozNjoyM1rOFkezwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozNjoyM1rOFkezwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzgyNQ==", "bodyText": "Inconsistent indentation for list items at the same level", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797825", "createdAt": "2020-02-01T19:36:23Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,47 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n \n-# To see verbose output\n-./run_deployment 2.0.1000 -v -i ansible/inventory/prerelease\n+  * `-v`: Verbose output\n+  * `-vvv`: Debug output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ebf211ba0d1a9a70f83bbb1b5884443f2295e1"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTQwMDQwOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozNjoyM1rOFkezwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozNjoyM1rOFkezwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzgyNg==", "bodyText": "Inconsistent indentation for list items at the same level", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797826", "createdAt": "2020-02-01T19:36:23Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,47 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n \n-# To see verbose output\n-./run_deployment 2.0.1000 -v -i ansible/inventory/prerelease\n+  * `-v`: Verbose output\n+  * `-vvv`: Debug output\n+  * `-vvvv`: SSL Debug output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ebf211ba0d1a9a70f83bbb1b5884443f2295e1"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTQwMDQxOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozNjoyM1rOFkezww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozNjoyM1rOFkezww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzgyNw==", "bodyText": "Inconsistent indentation for list items at the same level", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797827", "createdAt": "2020-02-01T19:36:23Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,47 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n \n-# To see verbose output\n-./run_deployment 2.0.1000 -v -i ansible/inventory/prerelease\n+  * `-v`: Verbose output\n+  * `-vvv`: Debug output\n+  * `-vvvv`: SSL Debug output\n+  * `--diff`: Shows differences in updated templates and files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ebf211ba0d1a9a70f83bbb1b5884443f2295e1"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTQwMDQyOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozNjoyM1rOFkezxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozNjoyM1rOFkezxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzgyOA==", "bodyText": "Inconsistent indentation for list items at the same level", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797828", "createdAt": "2020-02-01T19:36:23Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,47 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n \n-# To see verbose output\n-./run_deployment 2.0.1000 -v -i ansible/inventory/prerelease\n+  * `-v`: Verbose output\n+  * `-vvv`: Debug output\n+  * `-vvvv`: SSL Debug output\n+  * `--diff`: Shows differences in updated templates and files\n+  * `-t`: Tags", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ebf211ba0d1a9a70f83bbb1b5884443f2295e1"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTQwMDQzOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozNjoyNFrOFkezxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQxOTozNjoyNFrOFkezxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5NzgyOQ==", "bodyText": "Consider starting bulleted lists at the beginning of the line", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373797829", "createdAt": "2020-02-01T19:36:24Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -67,32 +67,47 @@ defined in the prerelease inventory file.\n Assuming a vault password file named 'vault_password' is created in the same\n folder and contains the ansible vault password, run: \n \n-``bash\n+```bash\n ./run_deployment [version_to_install] [ansible_args]\n ```\n \n examples\n+\n+\n+### Typical Deployment Command\n ```bash\n ./run_deployment 2.0.1000 -i ansible/inventory/prerelease\n+```\n+\n+### Useful flags\n \n-# To see verbose output\n-./run_deployment 2.0.1000 -v -i ansible/inventory/prerelease\n+  * `-v`: Verbose output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01ebf211ba0d1a9a70f83bbb1b5884443f2295e1"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTQxMzYwOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDowOTo0OVrOFke6cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDowOTo0OVrOFke6cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5OTUzOQ==", "bodyText": "Unordered list style", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373799539", "createdAt": "2020-02-01T20:09:49Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -165,47 +181,14 @@ ansible-vault encrypt --vault-password-file=vault_password ansible_ssh_key.ed255\n \n # Https Certificate Installation\n \n-Currently done manually.\n+The 'certbot' role will:\n \n-## certbot from letsencrypt\n+- run lets-encrypt and create a publicly signed SSL cert.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13758f225e41b933c108218b403eb7f3e420b13c"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTQxMzYxOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDowOTo1MFrOFke6dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDowOTo1MFrOFke6dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc5OTU0MA==", "bodyText": "Unordered list style", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373799540", "createdAt": "2020-02-01T20:09:50Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -165,47 +181,14 @@ ansible-vault encrypt --vault-password-file=vault_password ansible_ssh_key.ed255\n \n # Https Certificate Installation\n \n-Currently done manually.\n+The 'certbot' role will:\n \n-## certbot from letsencrypt\n+- run lets-encrypt and create a publicly signed SSL cert.\n+- sets up a weekly renewal cronjob that will renew the SSL cert if it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13758f225e41b933c108218b403eb7f3e420b13c"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTQyMDQxOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDoyNDowM1rOFke9ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDoyNDowM1rOFke9ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwMDM3OA==", "bodyText": "Unordered list style", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373800378", "createdAt": "2020-02-01T20:24:03Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -165,47 +181,14 @@ ansible-vault encrypt --vault-password-file=vault_password ansible_ssh_key.ed255\n \n # Https Certificate Installation\n \n-Currently done manually.\n+The 'certbot' role will:\n \n-## certbot from letsencrypt\n+- run lets-encrypt and create a publicly signed SSL cert.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69a240eedeb17feccf82b66dc4e633c7eba7de71"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTQyMDQyOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDoyNDowM1rOFke9uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDoyNDowM1rOFke9uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwMDM3OQ==", "bodyText": "Unordered list style", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373800379", "createdAt": "2020-02-01T20:24:03Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -165,47 +181,14 @@ ansible-vault encrypt --vault-password-file=vault_password ansible_ssh_key.ed255\n \n # Https Certificate Installation\n \n-Currently done manually.\n+The 'certbot' role will:\n \n-## certbot from letsencrypt\n+- run lets-encrypt and create a publicly signed SSL cert.\n+- sets up a weekly renewal cronjob that will renew the SSL cert if it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69a240eedeb17feccf82b66dc4e633c7eba7de71"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTQyNDkwOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDozNDo0MVrOFke_8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDozNDo0MVrOFke_8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwMDk0NA==", "bodyText": "Line length", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373800944", "createdAt": "2020-02-01T20:34:41Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -150,10 +166,11 @@ by ansible when ansible is run. To encrypt a variable:\n [Ansible-Vault Docs](https://docs.ansible.com/ansible/latest/user_guide/vault.html)\n \n Warnings:\n- - use files to store passwords/secrets so that the password is not in your shell history\n- - take care to not commit into git any passwords or secrets, files containing secrets should\n+\n+* use files to store passwords/secrets so that the password is not in your shell history", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05ff791652f048ee23926be5b2d9398a6b560ff7"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTQyNDkxOnYy", "diffSide": "RIGHT", "path": "infrastructure/README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDozNDo0MVrOFke_8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQyMDozNDo0MVrOFke_8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzgwMDk0NQ==", "bodyText": "Line length", "url": "https://github.com/triplea-game/triplea/pull/5894#discussion_r373800945", "createdAt": "2020-02-01T20:34:41Z", "author": {"login": "codeclimate"}, "path": "infrastructure/README.md", "diffHunk": "@@ -150,10 +166,11 @@ by ansible when ansible is run. To encrypt a variable:\n [Ansible-Vault Docs](https://docs.ansible.com/ansible/latest/user_guide/vault.html)\n \n Warnings:\n- - use files to store passwords/secrets so that the password is not in your shell history\n- - take care to not commit into git any passwords or secrets, files containing secrets should\n+\n+* use files to store passwords/secrets so that the password is not in your shell history\n+* take care to not commit into git any passwords or secrets, files containing secrets should", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05ff791652f048ee23926be5b2d9398a6b560ff7"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2592, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}