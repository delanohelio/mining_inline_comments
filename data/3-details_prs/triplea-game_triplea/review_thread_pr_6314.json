{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3NTUyNzgy", "number": 6314, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDowNzoyOVrOD1Bucg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDowNzoyOVrOD1Bucg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2OTI5Mzk0OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/org/triplea/debug/error/reporting/StackTraceErrorReportFormatter.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMDowNzoyOVrOGKQ5nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNToyODozMVrOGLHE_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQxNTgzNw==", "bodyText": "How do you know this works @RoiEXLab ? Are you going off of Stack Overflow, are there other examples in the code, or is this a pattern you just know?\nCan you simulate an exception going through this and give an example? Perhaps better yet, a test to do that would be excellent. It could be readily done by elavating this methodto a strategy object and then testing it. (EG:  this method becomes a class that implements Function, then testing the new class you can do a string contains assertion to verify that key words from a nested exception are all present/printed)", "url": "https://github.com/triplea-game/triplea/pull/6314#discussion_r413415837", "createdAt": "2020-04-23T00:07:29Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/org/triplea/debug/error/reporting/StackTraceErrorReportFormatter.java", "diffHunk": "@@ -91,18 +92,15 @@ private String buildBody(@Nullable final String userDescription, final LogRecord\n   }\n \n   private static String throwableToString(final Throwable e) {\n+    final var outputStream = new ByteArrayOutputStream();\n+    try (PrintWriter printWriter = new PrintWriter(outputStream, false, StandardCharsets.UTF_8)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d303fd6795506d737482f0faf49dfb33a0fd1a8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzYwOTI2NA==", "bodyText": "It's just a pattern I know. Basically I just looked at the overloads of Throwable#printStackTrace, checked the PrintWriter constructor and added the ByteArrayOutputStream that would store it in a string for me.\nThere are already test cases in place that check for the existence of some lines:\n\n  \n    \n      triplea/game-core/src/test/java/org/triplea/debug/error/reporting/StackTraceErrorReportFormatterTest.java\n    \n    \n        Lines 137 to 150\n      in\n      b133fd9\n    \n    \n    \n    \n\n        \n          \n           @Test \n        \n\n        \n          \n           void containsStackTraceData() { \n        \n\n        \n          \n             when(logRecord.getThrown()).thenReturn(EXCEPTION_WITH_NO_MESSAGE); \n        \n\n        \n          \n             final ErrorReportRequest errorReportResult = \n        \n\n        \n          \n                 new StackTraceErrorReportFormatter().apply(SAMPLE_USER_DESCRIPTION, logRecord); \n        \n\n        \n          \n            \n        \n\n        \n          \n             Arrays.stream(EXCEPTION_WITH_NO_MESSAGE.getStackTrace()) \n        \n\n        \n          \n                 .forEach( \n        \n\n        \n          \n                     trace -> \n        \n\n        \n          \n                         assertThat( \n        \n\n        \n          \n                             \"should contain each element of stack trace\", \n        \n\n        \n          \n                             errorReportResult.getBody(), \n        \n\n        \n          \n                             containsString(trace.toString()))); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nI just realized I should maybe extend this test case so it verifies the causes are also checked", "url": "https://github.com/triplea-game/triplea/pull/6314#discussion_r413609264", "createdAt": "2020-04-23T08:16:47Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/org/triplea/debug/error/reporting/StackTraceErrorReportFormatter.java", "diffHunk": "@@ -91,18 +92,15 @@ private String buildBody(@Nullable final String userDescription, final LogRecord\n   }\n \n   private static String throwableToString(final Throwable e) {\n+    final var outputStream = new ByteArrayOutputStream();\n+    try (PrintWriter printWriter = new PrintWriter(outputStream, false, StandardCharsets.UTF_8)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQxNTgzNw=="}, "originalCommit": {"oid": "9d303fd6795506d737482f0faf49dfb33a0fd1a8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDMwMzQ4NA==", "bodyText": "Thanks, good work @RoiEXLab", "url": "https://github.com/triplea-game/triplea/pull/6314#discussion_r414303484", "createdAt": "2020-04-24T05:28:31Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/org/triplea/debug/error/reporting/StackTraceErrorReportFormatter.java", "diffHunk": "@@ -91,18 +92,15 @@ private String buildBody(@Nullable final String userDescription, final LogRecord\n   }\n \n   private static String throwableToString(final Throwable e) {\n+    final var outputStream = new ByteArrayOutputStream();\n+    try (PrintWriter printWriter = new PrintWriter(outputStream, false, StandardCharsets.UTF_8)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQxNTgzNw=="}, "originalCommit": {"oid": "9d303fd6795506d737482f0faf49dfb33a0fd1a8"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2286, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}