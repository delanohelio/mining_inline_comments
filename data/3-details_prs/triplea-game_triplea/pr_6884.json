{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwODYxNTQ3", "number": 6884, "title": "Convert defensive sub withdraw", "bodyText": "This converts the defensive sub withdraw step.\nIt is very similar to the offensive sub withdraw step.  The only difference is the offensive one checks for undefended subs and prevents the retreat while the defensive one checks to see if everything has been retreated and marks the game over.  I think both of that can be reworked in separate steps but that is for a later refactoring.\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[x] Code Cleanup or refactor\n[] Configuration Change\n[] Problem fix\n[] Other:   \nTesting\nCreate a saved game with defensive sub retreat and verified that it loads.\nScreens Shots\n\nAdditional Notes to Reviewer\nThis also unifies the logic for the step names and the executable just like with the offensive sub retreat step (#6719).  See the notes there on what was unified.\nI also noticed that I had no tests for the step names in the offensive sub retreat test file.  I added those tests as part of this PR.\nRelease Note", "createdAt": "2020-06-27T05:01:39Z", "url": "https://github.com/triplea-game/triplea/pull/6884", "merged": true, "mergeCommit": {"oid": "c84ae442e78302c92984082d0a03f80b85aeea54"}, "closed": true, "closedAt": "2020-07-01T02:11:32Z", "author": {"login": "trevan"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcu7_obAH2gAyNDQwODYxNTQ3OjE3NWZjZTllNWI4M2I5MzJlYmI4Y2YwZTQwMWU2YTU5NjY3N2QxMzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwgkebgFqTQ0MDUwMDkyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "175fce9e5b83b932ebb8cf0e401e6a596677d132", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/175fce9e5b83b932ebb8cf0e401e6a596677d132", "committedDate": "2020-06-26T05:00:30Z", "message": "Add new methods to BattleState and BattleActions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f81a74acb3f3b4e276b29c995ba78236d1b79adc", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/f81a74acb3f3b4e276b29c995ba78236d1b79adc", "committedDate": "2020-06-26T05:01:03Z", "message": "Convert defensive sub withdraw step to BattleStep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf2b379dae123dd9a6fd154505bc42f57038a6f3", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/bf2b379dae123dd9a6fd154505bc42f57038a6f3", "committedDate": "2020-06-26T15:18:34Z", "message": "Add offensive subs retreat tests for step names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "732a42408c7e7cb2ad9a36846939ef75ff227d28", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/732a42408c7e7cb2ad9a36846939ef75ff227d28", "committedDate": "2020-06-27T03:35:44Z", "message": "Test and refactor defensive sub retreat step"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95a959cfd283ad1d729a042a6d1428bd618a204f", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/95a959cfd283ad1d729a042a6d1428bd618a204f", "committedDate": "2020-06-27T05:11:42Z", "message": "Combine nested if statements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "990ac689e60b7c0d7bdcfd600194803dac466806", "author": {"user": {"login": "tripleabuilderbot", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/990ac689e60b7c0d7bdcfd600194803dac466806", "committedDate": "2020-06-27T05:17:10Z", "message": "Auto-Formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "372f730e87d04351b3fd25b074e63904bf4c5a0a", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/372f730e87d04351b3fd25b074e63904bf4c5a0a", "committedDate": "2020-06-29T00:46:06Z", "message": "Merge remote-tracking branch 'upstream/master' into convert-defensive-sub-withdraw"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTAwOTIw", "url": "https://github.com/triplea-game/triplea/pull/6884#pullrequestreview-440500920", "createdAt": "2020-07-01T02:09:38Z", "commit": {"oid": "372f730e87d04351b3fd25b074e63904bf4c5a0a"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjowOTozOFrOGrUZ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwMjoxMDowNVrOGrUaZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NjI4Mw==", "bodyText": "nit, any thoughts to use a ternary here to isolate the different parts of the 'if/else' block as much as possible?\nEG:\nString stepName =  battleState.getDefender().getName() + (Properties.getSubmersibleSubs(battleState.getGameData() ? SUBS_SUBMERGE : SUBS_WITHDRAW);\nreturn List.of(stepName);", "url": "https://github.com/triplea-game/triplea/pull/6884#discussion_r448076283", "createdAt": "2020-07-01T02:09:38Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/retreat/DefensiveSubsRetreat.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package games.strategy.triplea.delegate.battle.steps.retreat;\n+\n+import static games.strategy.triplea.delegate.battle.BattleStepStrings.SUBS_SUBMERGE;\n+import static games.strategy.triplea.delegate.battle.BattleStepStrings.SUBS_WITHDRAW;\n+import static games.strategy.triplea.delegate.battle.steps.BattleStep.Order.SUB_DEFENSIVE_RETREAT_AFTER_BATTLE;\n+import static games.strategy.triplea.delegate.battle.steps.BattleStep.Order.SUB_DEFENSIVE_RETREAT_BEFORE_BATTLE;\n+\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.ExecutionStack;\n+import games.strategy.triplea.delegate.Matches;\n+import games.strategy.triplea.delegate.battle.BattleActions;\n+import games.strategy.triplea.delegate.battle.BattleState;\n+import games.strategy.triplea.delegate.battle.MustFightBattle.RetreatType;\n+import games.strategy.triplea.delegate.battle.steps.BattleStep;\n+import java.util.List;\n+import lombok.AllArgsConstructor;\n+import org.triplea.java.collections.CollectionUtils;\n+\n+@AllArgsConstructor\n+public class DefensiveSubsRetreat implements BattleStep {\n+\n+  private static final long serialVersionUID = 1249467218938096244L;\n+\n+  protected final BattleState battleState;\n+\n+  protected final BattleActions battleActions;\n+\n+  @Override\n+  public List<String> getNames() {\n+    if (!isEvaderPresent() || !isRetreatPossible()) {\n+      return List.of();\n+    }\n+\n+    if (getOrder() == SUB_DEFENSIVE_RETREAT_BEFORE_BATTLE && isDestroyerPresent()) {\n+      // only check for destroyers if subs can retreat before battle\n+      // because the destroyer could be killed during the battle which would\n+      // allow the sub to withdraw at the end of the battle\n+      return List.of();\n+    }\n+\n+    if (Properties.getSubmersibleSubs(battleState.getGameData())) {\n+      return List.of(battleState.getDefender().getName() + SUBS_SUBMERGE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "372f730e87d04351b3fd25b074e63904bf4c5a0a"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODA3NjM5MQ==", "bodyText": "Ditto on ternary usage here, any objections or thoughts to use it?", "url": "https://github.com/triplea-game/triplea/pull/6884#discussion_r448076391", "createdAt": "2020-07-01T02:10:05Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/retreat/DefensiveSubsRetreat.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package games.strategy.triplea.delegate.battle.steps.retreat;\n+\n+import static games.strategy.triplea.delegate.battle.BattleStepStrings.SUBS_SUBMERGE;\n+import static games.strategy.triplea.delegate.battle.BattleStepStrings.SUBS_WITHDRAW;\n+import static games.strategy.triplea.delegate.battle.steps.BattleStep.Order.SUB_DEFENSIVE_RETREAT_AFTER_BATTLE;\n+import static games.strategy.triplea.delegate.battle.steps.BattleStep.Order.SUB_DEFENSIVE_RETREAT_BEFORE_BATTLE;\n+\n+import games.strategy.engine.delegate.IDelegateBridge;\n+import games.strategy.triplea.Properties;\n+import games.strategy.triplea.delegate.ExecutionStack;\n+import games.strategy.triplea.delegate.Matches;\n+import games.strategy.triplea.delegate.battle.BattleActions;\n+import games.strategy.triplea.delegate.battle.BattleState;\n+import games.strategy.triplea.delegate.battle.MustFightBattle.RetreatType;\n+import games.strategy.triplea.delegate.battle.steps.BattleStep;\n+import java.util.List;\n+import lombok.AllArgsConstructor;\n+import org.triplea.java.collections.CollectionUtils;\n+\n+@AllArgsConstructor\n+public class DefensiveSubsRetreat implements BattleStep {\n+\n+  private static final long serialVersionUID = 1249467218938096244L;\n+\n+  protected final BattleState battleState;\n+\n+  protected final BattleActions battleActions;\n+\n+  @Override\n+  public List<String> getNames() {\n+    if (!isEvaderPresent() || !isRetreatPossible()) {\n+      return List.of();\n+    }\n+\n+    if (getOrder() == SUB_DEFENSIVE_RETREAT_BEFORE_BATTLE && isDestroyerPresent()) {\n+      // only check for destroyers if subs can retreat before battle\n+      // because the destroyer could be killed during the battle which would\n+      // allow the sub to withdraw at the end of the battle\n+      return List.of();\n+    }\n+\n+    if (Properties.getSubmersibleSubs(battleState.getGameData())) {\n+      return List.of(battleState.getDefender().getName() + SUBS_SUBMERGE);\n+    } else {\n+      return List.of(battleState.getDefender().getName() + SUBS_WITHDRAW);\n+    }\n+  }\n+\n+  @Override\n+  public Order getOrder() {\n+    if (Properties.getSubRetreatBeforeBattle(battleState.getGameData())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "372f730e87d04351b3fd25b074e63904bf4c5a0a"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3306, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}