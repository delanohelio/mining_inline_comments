{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NTA2NTc4", "number": 5811, "title": "Use abstract object for retreat", "bodyText": "Follow-up to #5808\nCouldn't use optional, because subs already use the current territory with a different meaning, and also couldn't move this object a layer outside to prevent special null meaning magic because I didn't want to break network compatibility for games.\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[x] Code Cleanup or refactor\n[] Configuration Change\n[] Problem fix:  \n[] Other:   \nTesting\n\n[] Manual testing done", "createdAt": "2020-01-01T18:01:24Z", "url": "https://github.com/triplea-game/triplea/pull/5811", "merged": true, "mergeCommit": {"oid": "072b4bf59038e11dc670470324898d94155e4a16"}, "closed": true, "closedAt": "2020-01-07T15:49:41Z", "author": {"login": "RoiEXLab"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2JBXygH2gAyMzU4NTA2NTc4OjY4MDc1OTVjYjI1NDEyYTk2NDI1MTRmOWYwOGFhMTA1Zjg4MWYxMzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4CVdKAH2gAyMzU4NTA2NTc4OjkyZDhmYTI2NmUyY2Y5ZTlmMGYyMDQwZWY3NjZmMGE0MWU1ZDgyODI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6807595cb25412a9642514f9f08aa105f881f136", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/6807595cb25412a9642514f9f08aa105f881f136", "committedDate": "2020-01-01T17:57:29Z", "message": "Use abstract object for retreat"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3NDk4NTg2", "url": "https://github.com/triplea-game/triplea/pull/5811#pullrequestreview-337498586", "createdAt": "2020-01-01T18:02:44Z", "commit": {"oid": "6807595cb25412a9642514f9f08aa105f881f136"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxODowMjo0NFrOFZjN6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxODowMjo0NFrOFZjN6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzNTcyMg==", "bodyText": "Avoid too many return statements within this method.", "url": "https://github.com/triplea-game/triplea/pull/5811#discussion_r362335722", "createdAt": "2020-01-01T18:02:44Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -478,12 +480,11 @@ private boolean showRetreatDialog(\n             null);\n     if (option == JOptionPane.OK_OPTION) {\n       if (comp.getSelection() != null) {\n-        retreatTo.set(comp.getSelection());\n-        return true;\n+        return RetreatResult.retreatTo(comp.getSelection());\n       }\n     }\n \n-    return false;\n+    return RetreatResult.noResult();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6807595cb25412a9642514f9f08aa105f881f136"}, "originalPosition": 131}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "241bd545ef52f01f47bc36d225ea77a4d22e8caa", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/241bd545ef52f01f47bc36d225ea77a4d22e8caa", "committedDate": "2020-01-02T10:13:51Z", "message": "Extract action to method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70bbccc5cb5845c0bc32468c16b941027b9217e8", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/70bbccc5cb5845c0bc32468c16b941027b9217e8", "committedDate": "2020-01-02T10:21:19Z", "message": "Unify 2 methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9e7f2cf974ef8466df5f51fcacfb8062a8747aa", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/e9e7f2cf974ef8466df5f51fcacfb8062a8747aa", "committedDate": "2020-01-02T10:23:02Z", "message": "Extract to method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4376e1f735085e4d2356a9ce505af339e24b1363", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/4376e1f735085e4d2356a9ce505af339e24b1363", "committedDate": "2020-01-02T10:34:56Z", "message": "Extract common logic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4NDcxMDAy", "url": "https://github.com/triplea-game/triplea/pull/5811#pullrequestreview-338471002", "createdAt": "2020-01-06T05:16:23Z", "commit": {"oid": "4376e1f735085e4d2356a9ce505af339e24b1363"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNToxNjoyM1rOFaVlyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNToxNjoyM1rOFaVlyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE2MTAzNA==", "bodyText": "This still feels a bit clunky - since it's not just some random player action, but something that returns a RetreatResult.\nHow about just not having this method and inlining it into getRetreat() instead?\ne.g.\nfinal String title;\nfinal Suppler<RetreatResult> showDialog;\nif (!submerge || possible.size() > 1) {\n  title = \"Retreat?\";\n  showDialog = () -> showRetreatDialog(message);\n} else {\n  title = \"Submerge Subs?\";\n  showDialog = () -> showSubmergeDialog(message, possible);\n}\n\nAnd then the inlined SwingAction.of() call.\nOtherwise it's hard to follow what's going on especially since there is a lot of stuff happening in this class already - so adding all these new methods just introduces more complexity.\nAnother option is to move the code into separate classes for the logic, but not sure of the best set up there...\n... If we step back a bit, even with this refactoring, I feel that this class suffers a lot from mixing game logic with Swing UI code. Ultimately we'd probably want to recode things such that low level concepts - like use of JOptionPane - are abstracted away, but the business logic remains. But that's probably too big of a change for what you were after here.\nAnother though - I wonder if the Java Future interface would be better suited here than the combination of CountDownLatch and AtomicReference. Doesn't Future provide exactly what we need?", "url": "https://github.com/triplea-game/triplea/pull/5811#discussion_r363161034", "createdAt": "2020-01-06T05:16:23Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -375,8 +367,33 @@ private Territory getSubmerge(final String message) {\n     return retreatTo.get();\n   }\n \n-  private boolean showSubmergeDialog(\n-      final String message, final AtomicReference<Territory> retreatTo) {\n+  private Action getPlayerAction(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4376e1f735085e4d2356a9ce505af339e24b1363"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02153221c3aa7fc19b1687f0df8e885a74e6c23b", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/02153221c3aa7fc19b1687f0df8e885a74e6c23b", "committedDate": "2020-01-06T14:12:47Z", "message": "Use future instead of latch + atomic reference"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2e47ef1133f2ed55bc34c1554e25e0bd73cfe98", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/f2e47ef1133f2ed55bc34c1554e25e0bd73cfe98", "committedDate": "2020-01-06T14:21:03Z", "message": "Inline methods"}, "afterCommit": {"oid": "71dd4cd04df181447d798d462477deb2deacd733", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/71dd4cd04df181447d798d462477deb2deacd733", "committedDate": "2020-01-06T14:22:48Z", "message": "Inline methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71dd4cd04df181447d798d462477deb2deacd733", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/71dd4cd04df181447d798d462477deb2deacd733", "committedDate": "2020-01-06T14:22:48Z", "message": "Inline methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4OTYyNzk3", "url": "https://github.com/triplea-game/triplea/pull/5811#pullrequestreview-338962797", "createdAt": "2020-01-06T23:48:28Z", "commit": {"oid": "71dd4cd04df181447d798d462477deb2deacd733"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMzo0ODoyOFrOFasevg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQyMzo1MTowOVrOFashdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjA2Mg==", "bodyText": "I think you missed the other part of my comment where I suggested not having this getPlayerAction() method and just inlining it here with the changes above, since it's only called once now.", "url": "https://github.com/triplea-game/triplea/pull/5811#discussion_r363536062", "createdAt": "2020-01-06T23:48:28Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -340,43 +349,66 @@ void notifyRetreat(final Collection<Unit> retreating) {\n     attackerModel.notifyRetreat(retreating);\n   }\n \n+  @Nullable\n   Territory getRetreat(\n       final String message, final Collection<Territory> possible, final boolean submerge) {\n-    return (!submerge || possible.size() > 1)\n-        ? getRetreatInternal(message, possible)\n-        : getSubmerge(message);\n-  }\n-\n-  private Territory getSubmerge(final String message) {\n     if (SwingUtilities.isEventDispatchThread()) {\n       throw new IllegalStateException(\"Should not be called from dispatch thread\");\n     }\n-    final AtomicReference<Territory> retreatTo = new AtomicReference<>();\n-    final CountDownLatch latch = new CountDownLatch(1);\n-    final Action action =\n-        SwingAction.of(\n-            \"Submerge Subs?\",\n-            e -> {\n-              actionButton.setEnabled(false);\n-              if (showSubmergeDialog(message, retreatTo)) {\n-                actionButton.setAction(nullAction);\n-                latch.countDown();\n-              }\n-              actionButton.setEnabled(true);\n-            });\n+    final CompletableFuture<Territory> future = new CompletableFuture<>();\n+    final String title;\n+    final Supplier<RetreatResult> supplier;\n+    if (!submerge || possible.size() > 1) {\n+      title = \"Retreat?\";\n+      supplier = () -> showRetreatDialog(message, possible);\n+    } else {\n+      title = \"Submerge Subs?\";\n+      supplier = () -> showSubmergeDialog(message);\n+    }\n+    final Action action = getPlayerAction(title, supplier, future);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dd4cd04df181447d798d462477deb2deacd733"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjMzMA==", "bodyText": "Nit: Move future to be right above the \"final Action action =\" line.", "url": "https://github.com/triplea-game/triplea/pull/5811#discussion_r363536330", "createdAt": "2020-01-06T23:49:38Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -340,43 +349,66 @@ void notifyRetreat(final Collection<Unit> retreating) {\n     attackerModel.notifyRetreat(retreating);\n   }\n \n+  @Nullable\n   Territory getRetreat(\n       final String message, final Collection<Territory> possible, final boolean submerge) {\n-    return (!submerge || possible.size() > 1)\n-        ? getRetreatInternal(message, possible)\n-        : getSubmerge(message);\n-  }\n-\n-  private Territory getSubmerge(final String message) {\n     if (SwingUtilities.isEventDispatchThread()) {\n       throw new IllegalStateException(\"Should not be called from dispatch thread\");\n     }\n-    final AtomicReference<Territory> retreatTo = new AtomicReference<>();\n-    final CountDownLatch latch = new CountDownLatch(1);\n-    final Action action =\n-        SwingAction.of(\n-            \"Submerge Subs?\",\n-            e -> {\n-              actionButton.setEnabled(false);\n-              if (showSubmergeDialog(message, retreatTo)) {\n-                actionButton.setAction(nullAction);\n-                latch.countDown();\n-              }\n-              actionButton.setEnabled(true);\n-            });\n+    final CompletableFuture<Territory> future = new CompletableFuture<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dd4cd04df181447d798d462477deb2deacd733"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzUzNjc1OA==", "bodyText": "Seems like this should live somewhere else and be generic to the return type. Since it's using UiContext, perhaps we can add the method on UiContext instead?", "url": "https://github.com/triplea-game/triplea/pull/5811#discussion_r363536758", "createdAt": "2020-01-06T23:51:09Z", "author": {"login": "asvitkine"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -340,43 +349,66 @@ void notifyRetreat(final Collection<Unit> retreating) {\n     attackerModel.notifyRetreat(retreating);\n   }\n \n+  @Nullable\n   Territory getRetreat(\n       final String message, final Collection<Territory> possible, final boolean submerge) {\n-    return (!submerge || possible.size() > 1)\n-        ? getRetreatInternal(message, possible)\n-        : getSubmerge(message);\n-  }\n-\n-  private Territory getSubmerge(final String message) {\n     if (SwingUtilities.isEventDispatchThread()) {\n       throw new IllegalStateException(\"Should not be called from dispatch thread\");\n     }\n-    final AtomicReference<Territory> retreatTo = new AtomicReference<>();\n-    final CountDownLatch latch = new CountDownLatch(1);\n-    final Action action =\n-        SwingAction.of(\n-            \"Submerge Subs?\",\n-            e -> {\n-              actionButton.setEnabled(false);\n-              if (showSubmergeDialog(message, retreatTo)) {\n-                actionButton.setAction(nullAction);\n-                latch.countDown();\n-              }\n-              actionButton.setEnabled(true);\n-            });\n+    final CompletableFuture<Territory> future = new CompletableFuture<>();\n+    final String title;\n+    final Supplier<RetreatResult> supplier;\n+    if (!submerge || possible.size() > 1) {\n+      title = \"Retreat?\";\n+      supplier = () -> showRetreatDialog(message, possible);\n+    } else {\n+      title = \"Submerge Subs?\";\n+      supplier = () -> showSubmergeDialog(message);\n+    }\n+    final Action action = getPlayerAction(title, supplier, future);\n     SwingUtilities.invokeLater(\n         () -> {\n           actionButton.setAction(action);\n           action.actionPerformed(null);\n         });\n-    mapPanel.getUiContext().addShutdownLatch(latch);\n-    Interruptibles.await(latch);\n-    mapPanel.getUiContext().removeShutdownLatch(latch);\n-    return retreatTo.get();\n+\n+    return awaitUserInput(future);\n+  }\n+\n+  private Territory awaitUserInput(final CompletableFuture<Territory> future) {\n+    final Active rejectionCallback =\n+        () -> future.completeExceptionally(new RuntimeException(\"Shutting down\"));\n+    try {\n+      mapPanel.getUiContext().addActive(rejectionCallback);\n+      return future.get();\n+    } catch (final InterruptedException e) {\n+      Thread.currentThread().interrupt();\n+    } catch (final ExecutionException e) {\n+      log.log(Level.INFO, \"UiContext shut down before supplying result\", e);\n+    } finally {\n+      mapPanel.getUiContext().removeActive(rejectionCallback);\n+    }\n+    return null;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71dd4cd04df181447d798d462477deb2deacd733"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM4OTc0ODQx", "url": "https://github.com/triplea-game/triplea/pull/5811#pullrequestreview-338974841", "createdAt": "2020-01-07T00:32:31Z", "commit": {"oid": "71dd4cd04df181447d798d462477deb2deacd733"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92d8fa266e2cf9e9f0f2040ef766f0a41e5d8282", "author": {"user": {"login": "RoiEXLab", "name": "RoiEX"}}, "url": "https://github.com/triplea-game/triplea/commit/92d8fa266e2cf9e9f0f2040ef766f0a41e5d8282", "committedDate": "2020-01-07T15:17:56Z", "message": "Move line"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3746, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}