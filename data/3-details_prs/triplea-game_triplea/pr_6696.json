{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MzA0MTI1", "number": 6696, "title": "Replace BattleStep#valid with BattleStep#getOrder", "bodyText": "I discovered that some steps have different valid conditions depending on if it is called at the beginning of a round during getNames or later during execute.  An example is the offensive sub submerge/withdraw.  During getNames, it shouldn't care about the presence of a destroyer because the destroyer could be killed later.  But during execute, it must care about the presence of a destroyer.\nSo, this removes the valid method from the BattleStep interface.\nBut since I still need to know if a step should be visible or not, I've added a getOrder method.  If a step should be skipped, then it can return the enum NOT_APPLICABLE.  Otherwise, it should return the order it should be run in.  All of the existing steps that have been converted only return SKIP or one other enum.  But other steps will return different enums depending on their situation (eg. subs can submerge at the beginning of the round or at the end).\nOnce all the steps have been converted, then I should be able to get the step names with code like:\nList<BattleStep> steps = new ArrayList<>();\nsteps.add(new OffensiveAaFire(this, battleActions));\nsteps.add(new DefensiveAaFire(this, battleActions));\nsteps.add(new ...);\nsteps.add(new ...);\n\nList<String> stepNames = steps.stream()\n        .filter(step -> step.getOrder() != BattleStep.Order.NOT_APPLICABLE)\n        .sorted(Comparator.comparing(BattleStep::getOrder))\n        .flatMap(step -> step.getNames().stream())\n        .collect(Collectors.toList());\n\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[x] Code Cleanup or refactor\n[] Configuration Change\n[] Problem fix:  \n[] Other:   \nTesting", "createdAt": "2020-06-15T05:49:10Z", "url": "https://github.com/triplea-game/triplea/pull/6696", "merged": true, "mergeCommit": {"oid": "f59daf7bdf86d3ba4c7188eadd60eff8fe071541"}, "closed": true, "closedAt": "2020-06-18T05:37:19Z", "author": {"login": "trevan"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrZ6stAH2gAyNDM0MzA0MTI1Ojg2N2UyNmU2NDI5YjFmYTY0YTE2YWNkM2VlZGY5NGUzMjRkZDg3YTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsVXT0gH2gAyNDM0MzA0MTI1OjlhNjcwNDhiMjhkOTg3ODljYzRhMDE2Mzg2M2UxNTI4NjMxODZlM2M=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "867e26e6429b1fa64a16acd3eedf94e324dd87a8", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/867e26e6429b1fa64a16acd3eedf94e324dd87a8", "committedDate": "2020-06-15T05:36:34Z", "message": "Replace BattleStep#valid with BattleStep#getOrder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f524e9819a292c6c3bfde535c7f4d90bb94088ca", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/f524e9819a292c6c3bfde535c7f4d90bb94088ca", "committedDate": "2020-06-16T17:48:40Z", "message": "Rename SKIP to NOT_APPLICABLE"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxOTc2MTUw", "url": "https://github.com/triplea-game/triplea/pull/6696#pullrequestreview-431976150", "createdAt": "2020-06-17T00:19:38Z", "commit": {"oid": "f524e9819a292c6c3bfde535c7f4d90bb94088ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMDoxOTozOVrOGkxatA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMDoxOTozOVrOGkxatA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTIxMTU3Mg==", "bodyText": "I think there might be something of a feature envy code smell here. Notably we query an object for its state, then depending on that state we query the same object again for more state. The feature envy is on BattleSteps with respect to the state of offensiveAaStep. In practical sense this indicates a lack of data encapsulation.\nThis could potentially be fixed by moving the getOrder() concern to offensiveAaStep. In such a case there would be no conditional in BattleSteps. In other words, offensiveAaStep would evaluate its own order, if not applicable it would return an empty getNames() list, otherwise it would return some values.\nWDYT?", "url": "https://github.com/triplea-game/triplea/pull/6696#discussion_r441211572", "createdAt": "2020-06-17T00:19:39Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/steps/BattleSteps.java", "diffHunk": "@@ -71,9 +71,12 @@\n     final BattleStep airDefendVsNonSubs = new AirDefendVsNonSubsStep(this);\n \n     final List<String> steps = new ArrayList<>();\n-    steps.addAll(offensiveAaStep.getNames());\n-\n-    steps.addAll(defensiveAaStep.getNames());\n+    if (offensiveAaStep.getOrder() != BattleStep.Order.NOT_APPLICABLE) {\n+      steps.addAll(offensiveAaStep.getNames());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f524e9819a292c6c3bfde535c7f4d90bb94088ca"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e5380d49069b83936499d8fa1943113c0718787", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/2e5380d49069b83936499d8fa1943113c0718787", "committedDate": "2020-06-18T01:55:58Z", "message": "Remove NOT_APPLICABLE order enum and do all validation internally"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dd9e0c574bcc0821c4565673ebc3cc2cdbe7f66", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/6dd9e0c574bcc0821c4565673ebc3cc2cdbe7f66", "committedDate": "2020-06-18T02:17:26Z", "message": "Fix some test names to match what it originally was"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c287c16e696a40775be5115a60bcedf2c51902f0", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/c287c16e696a40775be5115a60bcedf2c51902f0", "committedDate": "2020-06-18T02:49:52Z", "message": "Fix tests now that aa steps are always added"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a67048b28d98789cc4a0163863e152863186e3c", "author": {"user": {"login": "tripleabuilderbot", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/9a67048b28d98789cc4a0163863e152863186e3c", "committedDate": "2020-06-18T02:52:13Z", "message": "Auto-Formatting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3388, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}