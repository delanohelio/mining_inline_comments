{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NDkzODk3", "number": 5808, "title": "Fix freeze with retreat dialog", "bodyText": "Fix freeze with retreat dialog. This was caused by the code allowing multiple retreat dialogs to be shown - when clicking the action button multiple times, and the retreat dialog from a previous battle blocking new UI thread code (for the next battle) from running.\nAlso addresses a similar issue with the select casualties dialog. Previously, you could click the button multiple times to get multiple dialogs shown. When a dialog is still shown when the battle ends, it would also result in a freeze. With this PR, only one dialog can be shown at a time (via making the button disabled while it's shown).\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[X] Code Cleanup or refactor\n[] Configuration Change\n[X] Problem fix:  #5010\n[] Other:   \nTesting\n\n[X] Manual testing done\nTested that it's not possible to bring up multiple retreat dialogs by clicking the action button multiple times. Also tested that without this change, the problem was reproducible when having multiple retreat dialogs open and ending battle with not all of them having been closed (it would freeze).", "createdAt": "2020-01-01T14:41:55Z", "url": "https://github.com/triplea-game/triplea/pull/5808", "merged": true, "mergeCommit": {"oid": "f499a312f5edf7aac5ea41f9d0a129776b463d24"}, "closed": true, "closedAt": "2020-01-01T17:12:22Z", "author": {"login": "asvitkine"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb2GLn9AH2gAyMzU4NDkzODk3OmQzMjMzODZjZmYyZmMwMjAyZmUzNWFhMWY2MGE4ODZiZmIyMDhjMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb2IHpdAFqTMzNzQ5NjQ2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d323386cff2fc0202fe35aa1f60a886bfb208c09", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/d323386cff2fc0202fe35aa1f60a886bfb208c09", "committedDate": "2020-01-01T14:38:58Z", "message": "Fix freeze with retreat dialog"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3NDkxNTY1", "url": "https://github.com/triplea-game/triplea/pull/5808#pullrequestreview-337491565", "createdAt": "2020-01-01T14:45:27Z", "commit": {"oid": "d323386cff2fc0202fe35aa1f60a886bfb208c09"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxNDo0NToyN1rOFZirew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxNDo0NToyOFrOFZirfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkwNw==", "bodyText": "Avoid too many return statements within this method.", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362326907", "createdAt": "2020-01-01T14:45:27Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +418,83 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n-                latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(\n+      final String message,\n+      final Collection<Territory> possible,\n+      final AtomicReference<Territory> retreatTo) {\n+    final String yes =\n+        possible.size() == 1 ? \"Retreat to \" + possible.iterator().next().getName() : \"Retreat\";\n+    final String no = \"Remain\";\n+    final String cancel = \"Ask Me Later\";\n+    final String[] options = {yes, no, cancel};\n+    final int choice =\n+        JOptionPane.showOptionDialog(\n+            BattleDisplay.this,\n+            message,\n+            \"Retreat?\",\n+            JOptionPane.YES_NO_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null,\n+            options,\n+            no);\n+    // dialog dismissed\n+    if (choice == -1) {\n+      return false;\n+    }\n+    // wait\n+    if (choice == JOptionPane.CANCEL_OPTION) {\n+      return false;\n+    }\n+    // remain\n+    if (choice == JOptionPane.NO_OPTION) {\n+      return true;\n+    }\n+    // if you have eliminated the impossible, whatever remains, no matter how improbable,\n+    // must be the truth\n+    // retreat\n+    if (possible.size() == 1) {\n+      retreatTo.set(possible.iterator().next());\n+      return true;\n+    }\n+\n+    final RetreatComponent comp = new RetreatComponent(possible);\n+    final int option =\n+        JOptionPane.showConfirmDialog(\n+            BattleDisplay.this,\n+            comp,\n+            message,\n+            JOptionPane.OK_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null);\n+    if (option == JOptionPane.OK_OPTION) {\n+      if (comp.getSelection() != null) {\n+        retreatTo.set(comp.getSelection());\n+        return true;\n+      }\n+    }\n+\n+    return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d323386cff2fc0202fe35aa1f60a886bfb208c09"}, "originalPosition": 221}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkwOA==", "bodyText": "Avoid too many return statements within this method.", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362326908", "createdAt": "2020-01-01T14:45:28Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +418,83 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n-                latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(\n+      final String message,\n+      final Collection<Territory> possible,\n+      final AtomicReference<Territory> retreatTo) {\n+    final String yes =\n+        possible.size() == 1 ? \"Retreat to \" + possible.iterator().next().getName() : \"Retreat\";\n+    final String no = \"Remain\";\n+    final String cancel = \"Ask Me Later\";\n+    final String[] options = {yes, no, cancel};\n+    final int choice =\n+        JOptionPane.showOptionDialog(\n+            BattleDisplay.this,\n+            message,\n+            \"Retreat?\",\n+            JOptionPane.YES_NO_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null,\n+            options,\n+            no);\n+    // dialog dismissed\n+    if (choice == -1) {\n+      return false;\n+    }\n+    // wait\n+    if (choice == JOptionPane.CANCEL_OPTION) {\n+      return false;\n+    }\n+    // remain\n+    if (choice == JOptionPane.NO_OPTION) {\n+      return true;\n+    }\n+    // if you have eliminated the impossible, whatever remains, no matter how improbable,\n+    // must be the truth\n+    // retreat\n+    if (possible.size() == 1) {\n+      retreatTo.set(possible.iterator().next());\n+      return true;\n+    }\n+\n+    final RetreatComponent comp = new RetreatComponent(possible);\n+    final int option =\n+        JOptionPane.showConfirmDialog(\n+            BattleDisplay.this,\n+            comp,\n+            message,\n+            JOptionPane.OK_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null);\n+    if (option == JOptionPane.OK_OPTION) {\n+      if (comp.getSelection() != null) {\n+        retreatTo.set(comp.getSelection());\n+        return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d323386cff2fc0202fe35aa1f60a886bfb208c09"}, "originalPosition": 217}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkwOQ==", "bodyText": "Method showRetreatDialog has 44 lines of code (exceeds 25 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362326909", "createdAt": "2020-01-01T14:45:28Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +418,83 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n-                latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d323386cff2fc0202fe35aa1f60a886bfb208c09"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMyNjkxMQ==", "bodyText": "Method showRetreatDialog has a Cognitive Complexity of 8 (exceeds 5 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362326911", "createdAt": "2020-01-01T14:45:28Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +418,83 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n-                latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d323386cff2fc0202fe35aa1f60a886bfb208c09"}, "originalPosition": 166}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a241413f3e03ab75be521089b7501e0a13314ed9", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/a241413f3e03ab75be521089b7501e0a13314ed9", "committedDate": "2020-01-01T15:33:11Z", "message": "Disable action button when showing casualties dialog too."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e", "committedDate": "2020-01-01T15:40:32Z", "message": "Use constant for checking joptionpane results"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3NDk0ODgw", "url": "https://github.com/triplea-game/triplea/pull/5808#pullrequestreview-337494880", "createdAt": "2020-01-01T16:06:33Z", "commit": {"oid": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxNjowNjozNFrOFZi6-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxNjoyOTo1OVrOFZi-6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMDg3Mg==", "bodyText": "This is a great sherlock holmes quote, but this should be remove because I don't get what it's trying to imply? \ud83d\ude05", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362330872", "createdAt": "2020-01-01T16:06:34Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +418,83 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n-                latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(\n+      final String message,\n+      final Collection<Territory> possible,\n+      final AtomicReference<Territory> retreatTo) {\n+    final String yes =\n+        possible.size() == 1 ? \"Retreat to \" + possible.iterator().next().getName() : \"Retreat\";\n+    final String no = \"Remain\";\n+    final String cancel = \"Ask Me Later\";\n+    final String[] options = {yes, no, cancel};\n+    final int choice =\n+        JOptionPane.showOptionDialog(\n+            BattleDisplay.this,\n+            message,\n+            \"Retreat?\",\n+            JOptionPane.YES_NO_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null,\n+            options,\n+            no);\n+    // dialog dismissed\n+    if (choice == JOptionPane.CLOSED_OPTION) {\n+      return false;\n+    }\n+    // wait\n+    if (choice == JOptionPane.CANCEL_OPTION) {\n+      return false;\n+    }\n+    // remain\n+    if (choice == JOptionPane.NO_OPTION) {\n+      return true;\n+    }\n+    // if you have eliminated the impossible, whatever remains, no matter how improbable,\n+    // must be the truth", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e"}, "originalPosition": 198}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTA4MQ==", "bodyText": "Do you know why the button was previously disabled here?\nOr if you don't, why did you have to change it?", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362331081", "createdAt": "2020-01-01T16:10:50Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -611,10 +638,10 @@ public void actionPerformed(final ActionEvent e) {\n                     final CasualtyDetails response = new CasualtyDetails(killed, damaged, false);\n                     casualtyDetails.set(response);\n                     dicePanel.removeAll();\n-                    actionButton.setEnabled(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e"}, "originalPosition": 247}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTIwMQ==", "bodyText": "If you want you could merge the 2 if cases together", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362331201", "createdAt": "2020-01-01T16:13:56Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +418,83 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n-                latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(\n+      final String message,\n+      final Collection<Territory> possible,\n+      final AtomicReference<Territory> retreatTo) {\n+    final String yes =\n+        possible.size() == 1 ? \"Retreat to \" + possible.iterator().next().getName() : \"Retreat\";\n+    final String no = \"Remain\";\n+    final String cancel = \"Ask Me Later\";\n+    final String[] options = {yes, no, cancel};\n+    final int choice =\n+        JOptionPane.showOptionDialog(\n+            BattleDisplay.this,\n+            message,\n+            \"Retreat?\",\n+            JOptionPane.YES_NO_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null,\n+            options,\n+            no);\n+    // dialog dismissed\n+    if (choice == JOptionPane.CLOSED_OPTION) {\n+      return false;\n+    }\n+    // wait\n+    if (choice == JOptionPane.CANCEL_OPTION) {\n+      return false;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e"}, "originalPosition": 192}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTIzMA==", "bodyText": "Same here with merged if cases.", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362331230", "createdAt": "2020-01-01T16:14:43Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -357,46 +357,57 @@ private Territory getSubmerge(final String message) {\n         SwingAction.of(\n             \"Submerge Subs?\",\n             e -> {\n-              final String ok = \"Submerge\";\n-              final String cancel = \"Remain\";\n-              final String wait = \"Ask Me Later\";\n-              final String[] options = {ok, cancel, wait};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Submerge Subs?\",\n-                      JOptionPane.OK_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      cancel);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == 2) {\n-                return;\n-              }\n-              // remain\n-              if (choice == 1) {\n+              actionButton.setEnabled(false);\n+              if (showSubmergeDialog(message, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-                return;\n               }\n-              // submerge\n-              retreatTo.set(battleLocation);\n-              latch.countDown();\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n     return retreatTo.get();\n   }\n \n+  private boolean showSubmergeDialog(\n+      final String message, final AtomicReference<Territory> retreatTo) {\n+    final String ok = \"Submerge\";\n+    final String cancel = \"Remain\";\n+    final String wait = \"Ask Me Later\";\n+    final String[] options = {ok, cancel, wait};\n+    final int choice =\n+        JOptionPane.showOptionDialog(\n+            BattleDisplay.this,\n+            message,\n+            \"Submerge Subs?\",\n+            JOptionPane.OK_CANCEL_OPTION,\n+            JOptionPane.PLAIN_MESSAGE,\n+            null,\n+            options,\n+            cancel);\n+    // dialog dismissed\n+    if (choice == JOptionPane.CLOSED_OPTION) {\n+      return false;\n+    }\n+    // wait\n+    if (choice == JOptionPane.CANCEL_OPTION) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMTg4Mg==", "bodyText": "Not mandatory, but I think it would make a nicer API if you returned some sort of RetreatResult object here:\n@AllArgsConstructor\n@Getter\nclass RetreatResult {\n  private final boolean confirmed;\n  @Nullable\n  private final Territory targetTerritory;\n}\nInstead of setting an atomic reference. I'm not quite happy with this approach though, even though it would preserve existing logic.\nInstead I'd rather go with this approach:\n  @Nullable\n  Territory getRetreat(\n      final String message, final Collection<Territory> possible, final boolean submerge) {\n    final Territory territory = (!submerge || possible.size() > 1)\n        ? getRetreatInternal(message, possible)\n        : getSubmerge(message);\n    return territory.equals(getBattleLocation()) ? null : territory;\n}\nAnd then both showSubmergeDialog and showRetreatDialog, return an empty optional at places where false is currently returned and an optional with the retreat territory (the current battle territory instead of null for the remain case) else.\nThis is a far more \"logical\" approach and the \"current territory\" could even get passed out to calling classes to avoid null in a larger refactoring in another PR.", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362331882", "createdAt": "2020-01-01T16:29:59Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -357,46 +357,57 @@ private Territory getSubmerge(final String message) {\n         SwingAction.of(\n             \"Submerge Subs?\",\n             e -> {\n-              final String ok = \"Submerge\";\n-              final String cancel = \"Remain\";\n-              final String wait = \"Ask Me Later\";\n-              final String[] options = {ok, cancel, wait};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Submerge Subs?\",\n-                      JOptionPane.OK_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      cancel);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == 2) {\n-                return;\n-              }\n-              // remain\n-              if (choice == 1) {\n+              actionButton.setEnabled(false);\n+              if (showSubmergeDialog(message, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-                return;\n               }\n-              // submerge\n-              retreatTo.set(battleLocation);\n-              latch.countDown();\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n     return retreatTo.get();\n   }\n \n+  private boolean showSubmergeDialog(\n+      final String message, final AtomicReference<Territory> retreatTo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4299dcf8eb8112b9c2f959b06dc6bd402a37d9e"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "737e2c1e0b0f3519b742fa3c64eb205875cfd2fa", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/737e2c1e0b0f3519b742fa3c64eb205875cfd2fa", "committedDate": "2020-01-01T16:52:18Z", "message": "Small clean ups based on review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM3NDk2NDY1", "url": "https://github.com/triplea-game/triplea/pull/5808#pullrequestreview-337496465", "createdAt": "2020-01-01T16:54:26Z", "commit": {"oid": "737e2c1e0b0f3519b742fa3c64eb205875cfd2fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxNjo1NDoyNlrOFZjC6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMVQxNjo1NDoyNlrOFZjC6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjMzMjkwNQ==", "bodyText": "Method showRetreatDialog has 41 lines of code (exceeds 25 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/5808#discussion_r362332905", "createdAt": "2020-01-01T16:54:26Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/BattleDisplay.java", "diffHunk": "@@ -407,69 +414,78 @@ private Territory getRetreatInternal(final String message, final Collection<Terr\n         SwingAction.of(\n             \"Retreat?\",\n             e -> {\n-              final String yes =\n-                  possible.size() == 1\n-                      ? \"Retreat to \" + possible.iterator().next().getName()\n-                      : \"Retreat\";\n-              final String no = \"Remain\";\n-              final String cancel = \"Ask Me Later\";\n-              final String[] options = {yes, no, cancel};\n-              final int choice =\n-                  JOptionPane.showOptionDialog(\n-                      BattleDisplay.this,\n-                      message,\n-                      \"Retreat?\",\n-                      JOptionPane.YES_NO_CANCEL_OPTION,\n-                      JOptionPane.PLAIN_MESSAGE,\n-                      null,\n-                      options,\n-                      no);\n-              // dialog dismissed\n-              if (choice == -1) {\n-                return;\n-              }\n-              // wait\n-              if (choice == JOptionPane.CANCEL_OPTION) {\n-                return;\n-              }\n-              // remain\n-              if (choice == JOptionPane.NO_OPTION) {\n+              actionButton.setEnabled(false);\n+              if (showRetreatDialog(message, possible, retreatTo)) {\n+                actionButton.setAction(nullAction);\n                 latch.countDown();\n-                return;\n-              }\n-              // if you have eliminated the impossible, whatever remains, no matter how improbable,\n-              // must be the truth\n-              // retreat\n-              if (possible.size() == 1) {\n-                retreatTo.set(possible.iterator().next());\n-                latch.countDown();\n-              } else {\n-                final RetreatComponent comp = new RetreatComponent(possible);\n-                final int option =\n-                    JOptionPane.showConfirmDialog(\n-                        BattleDisplay.this,\n-                        comp,\n-                        message,\n-                        JOptionPane.OK_CANCEL_OPTION,\n-                        JOptionPane.PLAIN_MESSAGE,\n-                        null);\n-                if (option == JOptionPane.OK_OPTION) {\n-                  if (comp.getSelection() != null) {\n-                    retreatTo.set(comp.getSelection());\n-                    latch.countDown();\n-                  }\n-                }\n               }\n+              actionButton.setEnabled(true);\n             });\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(action));\n-    SwingUtilities.invokeLater(() -> action.actionPerformed(null));\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          actionButton.setAction(action);\n+          action.actionPerformed(null);\n+        });\n     mapPanel.getUiContext().addShutdownLatch(latch);\n     Interruptibles.await(latch);\n     mapPanel.getUiContext().removeShutdownLatch(latch);\n-    SwingUtilities.invokeLater(() -> actionButton.setAction(nullAction));\n+\n     return retreatTo.get();\n   }\n \n+  private boolean showRetreatDialog(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "737e2c1e0b0f3519b742fa3c64eb205875cfd2fa"}, "originalPosition": 162}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3742, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}