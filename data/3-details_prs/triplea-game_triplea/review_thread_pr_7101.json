{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NzI1MzAz", "number": 7101, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxOTozNDozOVrOENhq2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxOTozNDozOVrOENhq2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjE4NTg1OnYy", "diffSide": "RIGHT", "path": "smoke-testing/src/test/java/games/strategy/engine/data/TestDataFileLister.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxOTozNDo0MFrOGwOycQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQyMDozNzoyM1rOGwPH5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIyNzEyMQ==", "bodyText": "Might be overkill, but you might want to consider creating a custom ArgumentsProvider.\nIf you combine this with a meta annotation like this:\n@Target({ANNOTATION_TYPE,METHOD})\n@Retention(RUNTIME)\n@ArgumentsSource(CustomArgumentProvider.class)\npublic @interface DirectorySource {\n  String folderName;\n}\nThe ArgumentsProvider could then read out this annotation and provide the folders based on the name.\nIn my opinion a nice use of the API JUnit provides, but as mentioned already potentially overkill for just 2 methods.\nWould avoid the repeated @MethodSource code though", "url": "https://github.com/triplea-game/triplea/pull/7101#discussion_r453227121", "createdAt": "2020-07-11T19:34:40Z", "author": {"login": "RoiEXLab"}, "path": "smoke-testing/src/test/java/games/strategy/engine/data/TestDataFileLister.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package games.strategy.engine.data;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Comparator;\n+import java.util.stream.Collectors;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.Postconditions;\n+\n+@UtilityClass\n+class TestDataFileLister {\n+\n+  /**\n+   * Returns a list of files located in folder like: 'test/resources/{folder-name}'.\n+   *\n+   * @param folderName Name of the folder in 'test/resources'\n+   * @return List of all files located in specified folder.\n+   */\n+  Collection<File> listFilesInTestResourcesDirectory(final String folderName) {\n+    return Arrays.stream(findFilesInFolder(folderName).listFiles())\n+        .sorted(Comparator.comparing(File::getName))\n+        .collect(Collectors.toList());\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247fd5e88aba3378f3bc6d582d5a1020c50efdf8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIzMTk5MA==", "bodyText": "Interesting idea. I was not aware of the custom data source.\nIMO we'll probably want around 3 to 5 examples before that would really makes sense.", "url": "https://github.com/triplea-game/triplea/pull/7101#discussion_r453231990", "createdAt": "2020-07-11T20:30:28Z", "author": {"login": "DanVanAtta"}, "path": "smoke-testing/src/test/java/games/strategy/engine/data/TestDataFileLister.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package games.strategy.engine.data;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Comparator;\n+import java.util.stream.Collectors;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.Postconditions;\n+\n+@UtilityClass\n+class TestDataFileLister {\n+\n+  /**\n+   * Returns a list of files located in folder like: 'test/resources/{folder-name}'.\n+   *\n+   * @param folderName Name of the folder in 'test/resources'\n+   * @return List of all files located in specified folder.\n+   */\n+  Collection<File> listFilesInTestResourcesDirectory(final String folderName) {\n+    return Arrays.stream(findFilesInFolder(folderName).listFiles())\n+        .sorted(Comparator.comparing(File::getName))\n+        .collect(Collectors.toList());\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIyNzEyMQ=="}, "originalCommit": {"oid": "247fd5e88aba3378f3bc6d582d5a1020c50efdf8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIzMjYxMw==", "bodyText": "Yeah, at this point it's probably too much boilerplate to be worth it.\nThe JUnit API is really well designed in my opinion. It's a little bit heavy on reflection use in my opinion, but a lot of the code is designed around annotation inheritance, which makes it very extensible and customizable.\nBut there's definitely a hurdle to get the hang of it by observing how the junit implements csvsource for example", "url": "https://github.com/triplea-game/triplea/pull/7101#discussion_r453232613", "createdAt": "2020-07-11T20:37:23Z", "author": {"login": "RoiEXLab"}, "path": "smoke-testing/src/test/java/games/strategy/engine/data/TestDataFileLister.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package games.strategy.engine.data;\n+\n+import java.io.File;\n+import java.nio.file.Paths;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.Comparator;\n+import java.util.stream.Collectors;\n+import lombok.experimental.UtilityClass;\n+import org.triplea.java.Postconditions;\n+\n+@UtilityClass\n+class TestDataFileLister {\n+\n+  /**\n+   * Returns a list of files located in folder like: 'test/resources/{folder-name}'.\n+   *\n+   * @param folderName Name of the folder in 'test/resources'\n+   * @return List of all files located in specified folder.\n+   */\n+  Collection<File> listFilesInTestResourcesDirectory(final String folderName) {\n+    return Arrays.stream(findFilesInFolder(folderName).listFiles())\n+        .sorted(Comparator.comparing(File::getName))\n+        .collect(Collectors.toList());\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIyNzEyMQ=="}, "originalCommit": {"oid": "247fd5e88aba3378f3bc6d582d5a1020c50efdf8"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1994, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}