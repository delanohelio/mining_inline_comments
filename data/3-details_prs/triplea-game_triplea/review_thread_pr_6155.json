{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMDkyODY2", "number": 6155, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzozNzo1NFrODvb5fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzo0NTo0MFrODvkZdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDY2NzQ4OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ui/PlacementUnitsCollapsiblePanel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzozNzo1NFrOGB2xkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzozNzo1NFrOGB2xkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU5OTE4NQ==", "bodyText": "Method stepIsAfterPurchaseAndBeforePlacement has a Cognitive Complexity of 6 (exceeds 5 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6155#discussion_r404599185", "createdAt": "2020-04-07T07:37:54Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/PlacementUnitsCollapsiblePanel.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package games.strategy.triplea.ui;\n+\n+import games.strategy.engine.data.GameData;\n+import games.strategy.engine.data.GameDataEvent;\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.GameStep;\n+import games.strategy.triplea.util.UnitSeparator;\n+import javax.swing.SwingUtilities;\n+import lombok.Getter;\n+import org.triplea.swing.CollapsiblePanel;\n+\n+class PlacementUnitsCollapsiblePanel {\n+  private final SimpleUnitPanel unitsToPlacePanel;\n+\n+  @Getter private final CollapsiblePanel panel;\n+  private final GameData gameData;\n+\n+  PlacementUnitsCollapsiblePanel(final GameData gameData, final UiContext uiContext) {\n+    this.gameData = gameData;\n+    unitsToPlacePanel =\n+        new SimpleUnitPanel(\n+            uiContext, SimpleUnitPanel.Style.SMALL_ICONS_WRAPPED_WITH_LABEL_WHEN_EMPTY);\n+    panel = new CollapsiblePanel(unitsToPlacePanel, \"\");\n+    panel.setVisible(false);\n+    gameData.addGameDataEventListener(GameDataEvent.GAME_STEP_CHANGED, this::updateStep);\n+  }\n+\n+  private void updateStep() {\n+    final GameStep step = gameData.getSequence().getStep();\n+\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          if (GameStep.isPlaceStep(step.getName()) || isInitializationStep(step)) {\n+            panel.setVisible(false);\n+            return;\n+          }\n+\n+          final boolean hasUnitsToPlace = !step.getPlayerId().getUnits().isEmpty();\n+\n+          if (hasUnitsToPlace || stepIsAfterPurchaseAndBeforePlacement(step)) {\n+            panel.setTitle(\"Units To Place (\" + step.getPlayerId().getUnits().size() + \")\");\n+            unitsToPlacePanel.setUnitsFromCategories(\n+                UnitSeparator.categorize(step.getPlayerId().getUnits()));\n+            panel.setVisible(true);\n+          } else {\n+            panel.setVisible(false);\n+          }\n+        });\n+  }\n+\n+  private static boolean isInitializationStep(final GameStep gameStep) {\n+    return gameStep.getPlayerId() == null;\n+  }\n+\n+  private boolean stepIsAfterPurchaseAndBeforePlacement(final GameStep step) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42674629a3124f8d2aad365e1ab81eacd2de5ad2"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDY2NzUxOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ui/AbstractMovePanel.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzozNzo1NFrOGB2xlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwNzozNzo1NFrOGB2xlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDU5OTE5MA==", "bodyText": "TODO found", "url": "https://github.com/triplea-game/triplea/pull/6155#discussion_r404599190", "createdAt": "2020-04-07T07:37:54Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/AbstractMovePanel.java", "diffHunk": "@@ -104,6 +104,7 @@ private void disableCancelButton() {\n     cancelMoveButton.setEnabled(false);\n   }\n \n+  // TODO: rename this to 'getGameDataFromPlayerBridge'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42674629a3124f8d2aad365e1ab81eacd2de5ad2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjA2MDA3OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/ui/PlacementUnitsCollapsiblePanel.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzo0NTo0MFrOGCETPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMjoxODoxNFrOGCYLAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgyMDc5Nw==", "bodyText": "Is there any specific reason why we iterate backwards over the steps?", "url": "https://github.com/triplea-game/triplea/pull/6155#discussion_r404820797", "createdAt": "2020-04-07T13:45:40Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/PlacementUnitsCollapsiblePanel.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package games.strategy.triplea.ui;\n+\n+import games.strategy.engine.data.GameData;\n+import games.strategy.engine.data.GameDataEvent;\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.GameStep;\n+import games.strategy.triplea.util.UnitSeparator;\n+import javax.swing.SwingUtilities;\n+import lombok.Getter;\n+import org.triplea.swing.CollapsiblePanel;\n+\n+class PlacementUnitsCollapsiblePanel {\n+  private final SimpleUnitPanel unitsToPlacePanel;\n+\n+  @Getter private final CollapsiblePanel panel;\n+  private final GameData gameData;\n+\n+  PlacementUnitsCollapsiblePanel(final GameData gameData, final UiContext uiContext) {\n+    this.gameData = gameData;\n+    unitsToPlacePanel =\n+        new SimpleUnitPanel(\n+            uiContext, SimpleUnitPanel.Style.SMALL_ICONS_WRAPPED_WITH_LABEL_WHEN_EMPTY);\n+    panel = new CollapsiblePanel(unitsToPlacePanel, \"\");\n+    panel.setVisible(false);\n+    gameData.addGameDataEventListener(GameDataEvent.GAME_STEP_CHANGED, this::updateStep);\n+  }\n+\n+  private void updateStep() {\n+    final GameStep step = gameData.getSequence().getStep();\n+\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          if (GameStep.isPlaceStep(step.getName()) || isInitializationStep(step)) {\n+            panel.setVisible(false);\n+            return;\n+          }\n+\n+          final boolean hasUnitsToPlace = !step.getPlayerId().getUnits().isEmpty();\n+\n+          if (hasUnitsToPlace || stepIsAfterPurchaseAndBeforePlacement(step)) {\n+            panel.setTitle(\"Units To Place (\" + step.getPlayerId().getUnits().size() + \")\");\n+            unitsToPlacePanel.setUnitsFromCategories(\n+                UnitSeparator.categorize(step.getPlayerId().getUnits()));\n+            panel.setVisible(true);\n+          } else {\n+            panel.setVisible(false);\n+          }\n+        });\n+  }\n+\n+  private static boolean isInitializationStep(final GameStep gameStep) {\n+    return gameStep.getPlayerId() == null;\n+  }\n+\n+  private boolean stepIsAfterPurchaseAndBeforePlacement(final GameStep step) {\n+    final GamePlayer currentPlayer = step.getPlayerId();\n+\n+    for (int i = gameData.getSequence().getStepIndex() - 1; i >= 0; i--) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf12f9d279954a66e0d53bc40aa1249687876321"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEyNDY0MA==", "bodyText": "Yes, we're trying to see if given a current step, that within the same turn if a player has passed through a purchase phase. Some maps have a combat move before purchase, so we can't just check if we are in a combat move.\nI'll note as well, there's still an assumption that there will be only one place phase, that it has a specific name too, all of which is already a bit brittle.", "url": "https://github.com/triplea-game/triplea/pull/6155#discussion_r405124640", "createdAt": "2020-04-07T21:29:15Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/PlacementUnitsCollapsiblePanel.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package games.strategy.triplea.ui;\n+\n+import games.strategy.engine.data.GameData;\n+import games.strategy.engine.data.GameDataEvent;\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.GameStep;\n+import games.strategy.triplea.util.UnitSeparator;\n+import javax.swing.SwingUtilities;\n+import lombok.Getter;\n+import org.triplea.swing.CollapsiblePanel;\n+\n+class PlacementUnitsCollapsiblePanel {\n+  private final SimpleUnitPanel unitsToPlacePanel;\n+\n+  @Getter private final CollapsiblePanel panel;\n+  private final GameData gameData;\n+\n+  PlacementUnitsCollapsiblePanel(final GameData gameData, final UiContext uiContext) {\n+    this.gameData = gameData;\n+    unitsToPlacePanel =\n+        new SimpleUnitPanel(\n+            uiContext, SimpleUnitPanel.Style.SMALL_ICONS_WRAPPED_WITH_LABEL_WHEN_EMPTY);\n+    panel = new CollapsiblePanel(unitsToPlacePanel, \"\");\n+    panel.setVisible(false);\n+    gameData.addGameDataEventListener(GameDataEvent.GAME_STEP_CHANGED, this::updateStep);\n+  }\n+\n+  private void updateStep() {\n+    final GameStep step = gameData.getSequence().getStep();\n+\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          if (GameStep.isPlaceStep(step.getName()) || isInitializationStep(step)) {\n+            panel.setVisible(false);\n+            return;\n+          }\n+\n+          final boolean hasUnitsToPlace = !step.getPlayerId().getUnits().isEmpty();\n+\n+          if (hasUnitsToPlace || stepIsAfterPurchaseAndBeforePlacement(step)) {\n+            panel.setTitle(\"Units To Place (\" + step.getPlayerId().getUnits().size() + \")\");\n+            unitsToPlacePanel.setUnitsFromCategories(\n+                UnitSeparator.categorize(step.getPlayerId().getUnits()));\n+            panel.setVisible(true);\n+          } else {\n+            panel.setVisible(false);\n+          }\n+        });\n+  }\n+\n+  private static boolean isInitializationStep(final GameStep gameStep) {\n+    return gameStep.getPlayerId() == null;\n+  }\n+\n+  private boolean stepIsAfterPurchaseAndBeforePlacement(final GameStep step) {\n+    final GamePlayer currentPlayer = step.getPlayerId();\n+\n+    for (int i = gameData.getSequence().getStepIndex() - 1; i >= 0; i--) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgyMDc5Nw=="}, "originalCommit": {"oid": "cf12f9d279954a66e0d53bc40aa1249687876321"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTEzMjUwOA==", "bodyText": "Ok, but why is the order important then?\nWouldn't it be sufficient to iterate from 0 to step index over the elements?", "url": "https://github.com/triplea-game/triplea/pull/6155#discussion_r405132508", "createdAt": "2020-04-07T21:45:55Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/PlacementUnitsCollapsiblePanel.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package games.strategy.triplea.ui;\n+\n+import games.strategy.engine.data.GameData;\n+import games.strategy.engine.data.GameDataEvent;\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.GameStep;\n+import games.strategy.triplea.util.UnitSeparator;\n+import javax.swing.SwingUtilities;\n+import lombok.Getter;\n+import org.triplea.swing.CollapsiblePanel;\n+\n+class PlacementUnitsCollapsiblePanel {\n+  private final SimpleUnitPanel unitsToPlacePanel;\n+\n+  @Getter private final CollapsiblePanel panel;\n+  private final GameData gameData;\n+\n+  PlacementUnitsCollapsiblePanel(final GameData gameData, final UiContext uiContext) {\n+    this.gameData = gameData;\n+    unitsToPlacePanel =\n+        new SimpleUnitPanel(\n+            uiContext, SimpleUnitPanel.Style.SMALL_ICONS_WRAPPED_WITH_LABEL_WHEN_EMPTY);\n+    panel = new CollapsiblePanel(unitsToPlacePanel, \"\");\n+    panel.setVisible(false);\n+    gameData.addGameDataEventListener(GameDataEvent.GAME_STEP_CHANGED, this::updateStep);\n+  }\n+\n+  private void updateStep() {\n+    final GameStep step = gameData.getSequence().getStep();\n+\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          if (GameStep.isPlaceStep(step.getName()) || isInitializationStep(step)) {\n+            panel.setVisible(false);\n+            return;\n+          }\n+\n+          final boolean hasUnitsToPlace = !step.getPlayerId().getUnits().isEmpty();\n+\n+          if (hasUnitsToPlace || stepIsAfterPurchaseAndBeforePlacement(step)) {\n+            panel.setTitle(\"Units To Place (\" + step.getPlayerId().getUnits().size() + \")\");\n+            unitsToPlacePanel.setUnitsFromCategories(\n+                UnitSeparator.categorize(step.getPlayerId().getUnits()));\n+            panel.setVisible(true);\n+          } else {\n+            panel.setVisible(false);\n+          }\n+        });\n+  }\n+\n+  private static boolean isInitializationStep(final GameStep gameStep) {\n+    return gameStep.getPlayerId() == null;\n+  }\n+\n+  private boolean stepIsAfterPurchaseAndBeforePlacement(final GameStep step) {\n+    final GamePlayer currentPlayer = step.getPlayerId();\n+\n+    for (int i = gameData.getSequence().getStepIndex() - 1; i >= 0; i--) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgyMDc5Nw=="}, "originalCommit": {"oid": "cf12f9d279954a66e0d53bc40aa1249687876321"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE0NjM2OA==", "bodyText": "Perhaps important to keep in mind that steps is all steps across a full round of play, it has a length of around 70. If we go from 0, we will iterate more, but more importantly it's harder to know when we've dropped to the previously players turn.", "url": "https://github.com/triplea-game/triplea/pull/6155#discussion_r405146368", "createdAt": "2020-04-07T22:18:14Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/PlacementUnitsCollapsiblePanel.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package games.strategy.triplea.ui;\n+\n+import games.strategy.engine.data.GameData;\n+import games.strategy.engine.data.GameDataEvent;\n+import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.GameStep;\n+import games.strategy.triplea.util.UnitSeparator;\n+import javax.swing.SwingUtilities;\n+import lombok.Getter;\n+import org.triplea.swing.CollapsiblePanel;\n+\n+class PlacementUnitsCollapsiblePanel {\n+  private final SimpleUnitPanel unitsToPlacePanel;\n+\n+  @Getter private final CollapsiblePanel panel;\n+  private final GameData gameData;\n+\n+  PlacementUnitsCollapsiblePanel(final GameData gameData, final UiContext uiContext) {\n+    this.gameData = gameData;\n+    unitsToPlacePanel =\n+        new SimpleUnitPanel(\n+            uiContext, SimpleUnitPanel.Style.SMALL_ICONS_WRAPPED_WITH_LABEL_WHEN_EMPTY);\n+    panel = new CollapsiblePanel(unitsToPlacePanel, \"\");\n+    panel.setVisible(false);\n+    gameData.addGameDataEventListener(GameDataEvent.GAME_STEP_CHANGED, this::updateStep);\n+  }\n+\n+  private void updateStep() {\n+    final GameStep step = gameData.getSequence().getStep();\n+\n+    SwingUtilities.invokeLater(\n+        () -> {\n+          if (GameStep.isPlaceStep(step.getName()) || isInitializationStep(step)) {\n+            panel.setVisible(false);\n+            return;\n+          }\n+\n+          final boolean hasUnitsToPlace = !step.getPlayerId().getUnits().isEmpty();\n+\n+          if (hasUnitsToPlace || stepIsAfterPurchaseAndBeforePlacement(step)) {\n+            panel.setTitle(\"Units To Place (\" + step.getPlayerId().getUnits().size() + \")\");\n+            unitsToPlacePanel.setUnitsFromCategories(\n+                UnitSeparator.categorize(step.getPlayerId().getUnits()));\n+            panel.setVisible(true);\n+          } else {\n+            panel.setVisible(false);\n+          }\n+        });\n+  }\n+\n+  private static boolean isInitializationStep(final GameStep gameStep) {\n+    return gameStep.getPlayerId() == null;\n+  }\n+\n+  private boolean stepIsAfterPurchaseAndBeforePlacement(final GameStep step) {\n+    final GamePlayer currentPlayer = step.getPlayerId();\n+\n+    for (int i = gameData.getSequence().getStepIndex() - 1; i >= 0; i--) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgyMDc5Nw=="}, "originalCommit": {"oid": "cf12f9d279954a66e0d53bc40aa1249687876321"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2419, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}