{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MTM4NjIw", "number": 6466, "title": "Mute complete", "bodyText": "Overview\nFinishes up backend for moderator-mute functionality. After this update mutes are functional. A message is printed in lobby when a player is muted, avoids the need for a moderator to tell a player they are about to be muted.\nMutes are kept in-memory  to reduce implementation and  maintenance cost. Mutes are IP-based, this prevents a player from simply logging back in to remove a mute.\nCommits\ncommit 0ade327\nAdd TimeManager convenience utility to get an Instant at UTC by year/month/day/hour/minute\n\ncommit 9ba6a3a\nSuppress muted-chatter messages, send them a message that they are muted\n\ncommit 3bc3a2b\nRename class: TimeManager->DateTimeUtil\n\ncommit b3566e4\nMove method 'toDateString' from DateTimeUtil to DateTimeFormatterUtil\n\ncommit d11b4b0\nUpdate server mute controller to send mute requests to chatters backend data model\n\ncommit 641b79d\nConvert mutes from player-chat-id based to IP address based\n\n- Requires attaching IP addresses to chatter sessions so we can identify\n  chatters by IP.\n\ncommit 87e6db9\nSend broadcast message to lobby informating everyone of mute.\n\ncommit 060da64\nRemove right click menu mute confirmation prompt, lobby broadcast message is confirmation.\n\n\nFunctional Changes\n\n[] New map or map update\n[x] New Feature\n[x] Feature update or enhancement\n[] Feature Removal\n[] Code Cleanup or refactor\n[] Configuration Change\n[] Problem fix:  \n[] Other:   \nTesting\n\nlaunched a local lobby\nconnected with two clients, one being moderator (test:test)\nmuted the other player\nverified:\n\nmessage is broadcasted when mute occurs\nmuted player messages are dropped\nif logging back in, still muted\nplayer muted messages are responded (to only them) that they are muted\nmute is removed after expiry and muted player is able to chat again\n\n\n\n\n\nScreens Shots", "createdAt": "2020-05-13T06:06:30Z", "url": "https://github.com/triplea-game/triplea/pull/6466", "merged": true, "mergeCommit": {"oid": "556ed3b9a1a8c4a979aaad6718efbb99229ea96e"}, "closed": true, "closedAt": "2020-05-16T18:30:03Z", "author": {"login": "DanVanAtta"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgv36UAH2gAyNDE3MTM4NjIwOjBhZGUzMjc4YjRiYmZkZDg0NDNkM2MyMTY5ZmQ3MzMxZjJhNzI1ZGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchqy4HAFqTQxMzAxODk4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0ade3278b4bbfdd8443d3c2169fd7331f2a725db", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/0ade3278b4bbfdd8443d3c2169fd7331f2a725db", "committedDate": "2020-05-13T02:58:16Z", "message": "Add TimeManager convenience utility to get an Instant at UTC by year/month/day/hour/minute"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ba6a3add4d9bf7ad3a1f18eeb9dba62176b2f88", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/9ba6a3add4d9bf7ad3a1f18eeb9dba62176b2f88", "committedDate": "2020-05-13T03:27:50Z", "message": "Suppress muted-chatter messages, send them a message that they are muted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bc3a2b484a536f21fa88f909ca35c6a45c3a42a", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/3bc3a2b484a536f21fa88f909ca35c6a45c3a42a", "committedDate": "2020-05-13T03:54:33Z", "message": "Rename class: TimeManager->DateTimeUtil"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3566e4c6b8fabb9188672e3dea568272397faf1", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/b3566e4c6b8fabb9188672e3dea568272397faf1", "committedDate": "2020-05-13T03:59:48Z", "message": "Move method 'toDateString' from DateTimeUtil to DateTimeFormatterUtil"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d11b4b0575c3c91057a8ff77e0846038d50b31ba", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/d11b4b0575c3c91057a8ff77e0846038d50b31ba", "committedDate": "2020-05-13T04:08:48Z", "message": "Update server mute controller to send mute requests to chatters backend data model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "641b79d733de44e0f597124644ed793abb3074a7", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/641b79d733de44e0f597124644ed793abb3074a7", "committedDate": "2020-05-13T05:08:56Z", "message": "Convert mutes from player-chat-id based to IP address based\n\n- Requires attaching IP addresses to chatter sessions so we can identify\n  chatters by IP."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87e6db938277a9f868dc3eaf08e3a45efd992f51", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/87e6db938277a9f868dc3eaf08e3a45efd992f51", "committedDate": "2020-05-13T05:37:53Z", "message": "Send broadcast message to lobby informating everyone of mute."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "060da64cfffe04e66e81a6d9ef66b14c0734fede", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/060da64cfffe04e66e81a6d9ef66b14c0734fede", "committedDate": "2020-05-13T05:38:19Z", "message": "Remove right click menu mute confirmation prompt, lobby broadcast message is confirmation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f54ba778754dc1dba196a2953e66e247bb76982f", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/f54ba778754dc1dba196a2953e66e247bb76982f", "committedDate": "2020-05-13T06:02:42Z", "message": "Test fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNjEyMjg1", "url": "https://github.com/triplea-game/triplea/pull/6466#pullrequestreview-410612285", "createdAt": "2020-05-13T06:08:58Z", "commit": {"oid": "f54ba778754dc1dba196a2953e66e247bb76982f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNjowODo1OFrOGUirlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwNjowODo1OFrOGUirlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDE5MjkxNg==", "bodyText": "Method utcInstantOf has 5 arguments (exceeds 4 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6466#discussion_r424192916", "createdAt": "2020-05-13T06:08:58Z", "author": {"login": "codeclimate"}, "path": "java-extras/src/main/java/org/triplea/java/DateTimeUtil.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.triplea.java;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import java.time.Clock;\n+import java.time.Instant;\n+import java.time.LocalDateTime;\n+import java.time.ZoneId;\n+import java.time.ZoneOffset;\n+import java.time.format.DateTimeFormatterBuilder;\n+import java.time.format.FormatStyle;\n+import java.util.Locale;\n+import java.util.Locale.Category;\n+import lombok.experimental.UtilityClass;\n+\n+/** Provides methods for getting time and date instances. */\n+@UtilityClass\n+public final class DateTimeUtil {\n+  @VisibleForTesting static ZoneId defaultZoneId = ZoneId.systemDefault();\n+  @VisibleForTesting static Clock clock = Clock.system(defaultZoneId);\n+  @VisibleForTesting static Locale defaultLocale = Locale.getDefault(Category.FORMAT);\n+\n+  /**\n+   * Returns a String representing the current {@link LocalDateTime}. Based on where you live this\n+   * might be either for example 13:45 or 1:45pm.\n+   *\n+   * @return The formatted String\n+   */\n+  public static String getLocalizedTime() {\n+    return new DateTimeFormatterBuilder()\n+        .appendLocalized(null, FormatStyle.MEDIUM)\n+        .toFormatter(defaultLocale)\n+        .format(LocalDateTime.ofInstant(clock.instant(), defaultZoneId));\n+  }\n+\n+  /** Returns an {@code Instant} in UTC with a specified year, month, day, hour and minute. */\n+  public static Instant utcInstantOf(\n+      final int year, final int month, final int day, final int hour, final int minute) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54ba778754dc1dba196a2953e66e247bb76982f"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzI2NDcy", "url": "https://github.com/triplea-game/triplea/pull/6466#pullrequestreview-411326472", "createdAt": "2020-05-13T21:53:30Z", "commit": {"oid": "f54ba778754dc1dba196a2953e66e247bb76982f"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo1MzozMFrOGVE3LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMjoxNzoyM1rOGVFdbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1Mjk0MQ==", "bodyText": "Looks like this test is failing on travis.\nIt seems to be a typo, but I could imagine it's a locale issue. Looking at the code those tests may fail when executed in a different part of the world, where the default date format looks different (or simply is in a different language).", "url": "https://github.com/triplea-game/triplea/pull/6466#discussion_r424752941", "createdAt": "2020-05-13T21:53:30Z", "author": {"login": "RoiEXLab"}, "path": "java-extras/src/test/java/org/triplea/java/DateTimeFormatterUtilTest.java", "diffHunk": "@@ -35,4 +38,12 @@ void verifyFormattingNoTimeZone() {\n             DEC_FIRST_EPOCH_MILLIS, FormatOption.WITHOUT_TIMEZONE);\n     assertThat(result, is(\"2000-12-1 15:59\"));\n   }\n+\n+  @Test\n+  void toDateString() {\n+    assertThat(\n+        DateTimeFormatterUtil.toDateString(\n+            LocalDateTime.ofInstant(JAN_FIRST_INSTANT, ZoneOffset.UTC)),\n+        is(\"Wed. Jan. 01 14:30:00 UTC 2020\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54ba778754dc1dba196a2953e66e247bb76982f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1Mzk4Mg==", "bodyText": "Judging by the other map in this class:\nShouldn't we use a Thread-Safe implementation here?", "url": "https://github.com/triplea-game/triplea/pull/6466#discussion_r424753982", "createdAt": "2020-05-13T21:56:00Z", "author": {"login": "RoiEXLab"}, "path": "http-server/src/main/java/org/triplea/modules/chat/Chatters.java", "diffHunk": "@@ -24,6 +32,8 @@\n   @Getter(value = AccessLevel.PACKAGE, onMethod_ = @VisibleForTesting)\n   private final Map<String, ChatterSession> participants = new ConcurrentHashMap<>();\n \n+  private final Map<InetAddress, Instant> playerMutes = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54ba778754dc1dba196a2953e66e247bb76982f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1NzA5NA==", "bodyText": "This sounds like a good candidate for Map#computeIfPresent:\nreturn Optional.ofNullable(playerMutes.computeIfPresent(inetAddress, (key, muteInstant) -> {\n  if (muteInstant.isAfter(clock.instant())) {\n    return muteInstant;\n  }\n  return null;\n}));\nNote that I haven't actually tested this code, but it should have the exact same behaviour if the javadocs are accurate", "url": "https://github.com/triplea-game/triplea/pull/6466#discussion_r424757094", "createdAt": "2020-05-13T22:03:19Z", "author": {"login": "RoiEXLab"}, "path": "http-server/src/main/java/org/triplea/modules/chat/Chatters.java", "diffHunk": "@@ -97,4 +107,73 @@ public boolean disconnectPlayerSessions(final UserName userName, final String di\n         });\n     return !sessions.isEmpty();\n   }\n+\n+  /**\n+   * Checks if a given chatter is muted, if so returns the {@code Instant} when the mute expires\n+   * otherwise returns an empty optional\n+   */\n+  public Optional<Instant> getPlayerMuteExpiration(final InetAddress inetAddress) {\n+    return getPlayerMuteExpiration(inetAddress, Clock.systemUTC());\n+  }\n+\n+  @VisibleForTesting\n+  Optional<Instant> getPlayerMuteExpiration(final InetAddress inetAddress, final Clock clock) {\n+    return Optional.ofNullable(playerMutes.get(inetAddress))\n+        .map(\n+            muteInstant -> {\n+              if (muteInstant.isAfter(clock.instant())) {\n+                return muteInstant;\n+              } else {\n+                playerMutes.remove(inetAddress);\n+                return null;\n+              }\n+            });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54ba778754dc1dba196a2953e66e247bb76982f"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1OTQyOQ==", "bodyText": "Thoughts on using a simple static method instead of a lambda edxpression?", "url": "https://github.com/triplea-game/triplea/pull/6466#discussion_r424759429", "createdAt": "2020-05-13T22:08:53Z", "author": {"login": "RoiEXLab"}, "path": "http-server/src/main/java/org/triplea/modules/chat/event/processing/PlayerIsMutedMessage.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.triplea.modules.chat.event.processing;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import java.time.Clock;\n+import java.time.Duration;\n+import java.time.Instant;\n+import java.util.function.BiFunction;\n+import lombok.experimental.UtilityClass;\n+\n+@UtilityClass\n+class PlayerIsMutedMessage {\n+\n+  @VisibleForTesting\n+  static final BiFunction<Clock, Instant, String> muteDurationRemainingToString =\n+      (clock, muteExpiry) -> {\n+        final long minutes = Duration.between(clock.instant(), muteExpiry).toMinutes();\n+        return minutes > 0\n+            ? minutes + \" minutes\"\n+            : Duration.between(clock.instant(), muteExpiry).toSeconds() + \" seconds\";\n+      };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54ba778754dc1dba196a2953e66e247bb76982f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2MDExMg==", "bodyText": "I don't think it's a good thing to get different values from test cases that we make special cases for in non-test code.", "url": "https://github.com/triplea-game/triplea/pull/6466#discussion_r424760112", "createdAt": "2020-05-13T22:10:32Z", "author": {"login": "RoiEXLab"}, "path": "http-server/src/main/java/org/triplea/web/socket/InetExtractor.java", "diffHunk": "@@ -15,11 +15,16 @@\n \n   @SuppressWarnings(\"UnstableApiUsage\")\n   public static InetAddress extract(final Map<String, Object> userSession) {\n-    // expected format '/127.0.0.1:42840'\n-    final String ipString = String.valueOf(userSession.get(IP_ADDRESS_KEY)).substring(1);\n+    // expected format '/127.0.0.1:42840' or (for test-cases) '127.0.0.1'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54ba778754dc1dba196a2953e66e247bb76982f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2MTgyOA==", "bodyText": "If for some reason this test will take longer than a minute to execute we might run into a failure \ud83d\ude1b", "url": "https://github.com/triplea-game/triplea/pull/6466#discussion_r424761828", "createdAt": "2020-05-13T22:15:00Z", "author": {"login": "RoiEXLab"}, "path": "http-server/src/test/java/org/triplea/modules/chat/event/processing/PlayerIsMutedMessageTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.triplea.modules.chat.event.processing;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.core.Is.is;\n+import static org.triplea.java.DateTimeUtil.utcInstantOf;\n+\n+import java.time.Clock;\n+import java.time.Instant;\n+import java.time.ZoneOffset;\n+import java.time.temporal.ChronoUnit;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)\n+class PlayerIsMutedMessageTest {\n+  private static final Instant CURRENT_TIME = utcInstantOf(2020, 11, 1, 2, 20);\n+\n+  @Test\n+  @DisplayName(\"Verify an example mute message calculation with 10 minutes remaining\")\n+  void verifyTimeDurationComputation() {\n+    final Instant banExpiry = CURRENT_TIME.plus(10, ChronoUnit.MINUTES);\n+\n+    final String result =\n+        PlayerIsMutedMessage.muteDurationRemainingToString.apply(\n+            Clock.fixed(CURRENT_TIME, ZoneOffset.UTC), banExpiry);\n+\n+    assertThat(result, is(\"10 minutes\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54ba778754dc1dba196a2953e66e247bb76982f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2MjI1OA==", "bodyText": "1 second is a tight time window.\nLet's hope we never run into any issues with that. \ud83d\ude4f", "url": "https://github.com/triplea-game/triplea/pull/6466#discussion_r424762258", "createdAt": "2020-05-13T22:16:06Z", "author": {"login": "RoiEXLab"}, "path": "http-server/src/test/java/org/triplea/modules/chat/event/processing/PlayerIsMutedMessageTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.triplea.modules.chat.event.processing;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.core.Is.is;\n+import static org.triplea.java.DateTimeUtil.utcInstantOf;\n+\n+import java.time.Clock;\n+import java.time.Instant;\n+import java.time.ZoneOffset;\n+import java.time.temporal.ChronoUnit;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.mockito.junit.jupiter.MockitoExtension;\n+\n+@ExtendWith(MockitoExtension.class)\n+class PlayerIsMutedMessageTest {\n+  private static final Instant CURRENT_TIME = utcInstantOf(2020, 11, 1, 2, 20);\n+\n+  @Test\n+  @DisplayName(\"Verify an example mute message calculation with 10 minutes remaining\")\n+  void verifyTimeDurationComputation() {\n+    final Instant banExpiry = CURRENT_TIME.plus(10, ChronoUnit.MINUTES);\n+\n+    final String result =\n+        PlayerIsMutedMessage.muteDurationRemainingToString.apply(\n+            Clock.fixed(CURRENT_TIME, ZoneOffset.UTC), banExpiry);\n+\n+    assertThat(result, is(\"10 minutes\"));\n+  }\n+\n+  @Test\n+  @DisplayName(\"Verify an example mute message calculation with seconds remaining\")\n+  void verifyTimeDurationComputationWithSecondsRemaining() {\n+    final Instant banExpiry = CURRENT_TIME.plus(20, ChronoUnit.SECONDS);\n+\n+    final String result =\n+        PlayerIsMutedMessage.muteDurationRemainingToString.apply(\n+            Clock.fixed(CURRENT_TIME, ZoneOffset.UTC), banExpiry);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54ba778754dc1dba196a2953e66e247bb76982f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc2MjczNQ==", "bodyText": "Thanks for merging the classes \ud83d\udc4d", "url": "https://github.com/triplea-game/triplea/pull/6466#discussion_r424762735", "createdAt": "2020-05-13T22:17:23Z", "author": {"login": "RoiEXLab"}, "path": "java-extras/src/main/java/org/triplea/java/TimeManager.java", "diffHunk": "@@ -1,38 +0,0 @@\n-package org.triplea.java;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f54ba778754dc1dba196a2953e66e247bb76982f"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0694e3c1b2b805b1a46b53a3e26d2266bf81d58c", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/0694e3c1b2b805b1a46b53a3e26d2266bf81d58c", "committedDate": "2020-05-14T01:12:12Z", "message": "Explicitly set locale in DateTimeFormatterUtil"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3acb6493545e19cffa10631c135d4802a862f78f", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/3acb6493545e19cffa10631c135d4802a862f78f", "committedDate": "2020-05-14T01:28:06Z", "message": "Update expected format string"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8ef3f6636d9b0a1635e318665174fbb712906ae", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/b8ef3f6636d9b0a1635e318665174fbb712906ae", "committedDate": "2020-05-14T01:40:03Z", "message": "Convert formatting function to be an inner class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53b4f70e21c7b27d439300dc10db6a711d2c6888", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/53b4f70e21c7b27d439300dc10db6a711d2c6888", "committedDate": "2020-05-15T02:35:31Z", "message": "Simplify, use computeIfPresent to purge expired mutes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72b4fc7f884f22f5e24cff487991356fffcc62ef", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/72b4fc7f884f22f5e24cff487991356fffcc62ef", "committedDate": "2020-05-15T04:54:22Z", "message": "Fix typo/formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4140e9ea1b7b967236ef55fddfe5d18842dfe5a4", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/4140e9ea1b7b967236ef55fddfe5d18842dfe5a4", "committedDate": "2020-05-15T05:10:03Z", "message": "Add @Override"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMDE4OTg5", "url": "https://github.com/triplea-game/triplea/pull/6466#pullrequestreview-413018989", "createdAt": "2020-05-15T23:36:00Z", "commit": {"oid": "4140e9ea1b7b967236ef55fddfe5d18842dfe5a4"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMzozNjowMFrOGWWZfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMzozNjowMFrOGWWZfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjA4ODgyOA==", "bodyText": "side-note: We could store the result of Duration.between(clock.instant(), muteExpiry) in a variable instead of potentially calculating it twice, but just a minor detail", "url": "https://github.com/triplea-game/triplea/pull/6466#discussion_r426088828", "createdAt": "2020-05-15T23:36:00Z", "author": {"login": "RoiEXLab"}, "path": "http-server/src/main/java/org/triplea/modules/chat/event/processing/PlayerIsMutedMessage.java", "diffHunk": "@@ -4,23 +4,34 @@\n import java.time.Clock;\n import java.time.Duration;\n import java.time.Instant;\n-import java.util.function.BiFunction;\n+import java.util.function.Function;\n+import lombok.Builder;\n import lombok.experimental.UtilityClass;\n \n @UtilityClass\n class PlayerIsMutedMessage {\n+  private static Function<Instant, String> muteDurationFormatter =\n+      MuteDurationRemainingCalculator.builder().build();\n \n+  String build(final Instant muteExpiry) {\n+    return \"You have been muted, expiring in: \" + muteDurationFormatter.apply(muteExpiry);\n+  }\n+\n+  /**\n+   * Calculates a string of how many minutes are remaining in a mute until expired, or if less than\n+   * a minute then how many seconds are left.\n+   */\n   @VisibleForTesting\n-  static final BiFunction<Clock, Instant, String> muteDurationRemainingToString =\n-      (clock, muteExpiry) -> {\n-        final long minutes = Duration.between(clock.instant(), muteExpiry).toMinutes();\n-        return minutes > 0\n-            ? minutes + \" minutes\"\n-            : Duration.between(clock.instant(), muteExpiry).toSeconds() + \" seconds\";\n-      };\n+  @Builder\n+  static class MuteDurationRemainingCalculator implements Function<Instant, String> {\n+    @Builder.Default private Clock clock = Clock.systemUTC();\n \n-  String build(final Instant muteExpiry) {\n-    return \"You have been muted, expiring in: \"\n-        + muteDurationRemainingToString.apply(Clock.systemUTC(), muteExpiry);\n+    @Override\n+    public String apply(final Instant muteExpiry) {\n+      final long minutes = Duration.between(clock.instant(), muteExpiry).toMinutes();\n+      return minutes > 0\n+          ? minutes + \" minutes\"\n+          : Duration.between(clock.instant(), muteExpiry).toSeconds() + \" seconds\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4140e9ea1b7b967236ef55fddfe5d18842dfe5a4"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3423, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}