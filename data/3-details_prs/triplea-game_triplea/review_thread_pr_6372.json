{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNTM5MjYx", "number": 6372, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwMjo1MDowM1rOD4uHow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwMjo1MDozM1rOD4uHvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODAyNDY3OnYy", "diffSide": "LEFT", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/casualty/CasualtySelector.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwMjo1MDowM1rOGPoCcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxODo1Mjo1OVrOGPug5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAzNzgwOA==", "bodyText": "This zero is a hard-coding of the number of hits (which creates problems).\nWe could in theory have kept this behavior and simplified to set CasualtyDetails to be empty as the 'editSelection' result is always (and forced to be empty).\nPerhaps the original intent of this code was to prompt zero casualties and allow for selection of any number? Regardless if that was the intent or not,  you are forced to choose zero casualties which creates dead code paths in casualty selection (always returns empty).", "url": "https://github.com/triplea-game/triplea/pull/6372#discussion_r419037808", "createdAt": "2020-05-03T02:50:03Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/casualty/CasualtySelector.java", "diffHunk": "@@ -74,62 +73,22 @@ public static CasualtyDetails selectCasualties(\n     if (targetsToPickFrom.isEmpty()) {\n       return new CasualtyDetails();\n     }\n-    if (!friendlyUnits.containsAll(targetsToPickFrom)) {\n-      throw new IllegalStateException(\n-          \"friendlyUnits should but does not contain all units from targetsToPickFrom\"\n-              + \", battlesite: \"\n-              + battlesite\n-              + \", friendlyUnits: \"\n-              + friendlyUnits\n-              + \", targetsToPickFrom: \"\n-              + targetsToPickFrom);\n-    }\n     final GameData data = bridge.getData();\n-    final boolean isEditMode = BaseEditDelegate.getEditMode(data);\n     final Player tripleaPlayer =\n         player.isNull() ? new WeakAi(player.getName()) : bridge.getRemotePlayer(player);\n     final Map<Unit, Collection<Unit>> dependents =\n         headLess ? Map.of() : CasualtyUtil.getDependents(targetsToPickFrom);\n-    if (isEditMode && !headLess) {\n-      final CasualtyDetails editSelection =\n-          tripleaPlayer.selectCasualties(\n-              targetsToPickFrom,\n-              dependents,\n-              0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c68a30d8a4395d0cd540212ec3236219daae57e"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEzODI5OQ==", "bodyText": "So if you want to simplify this code I'm good with that but I think we should keep the edit mode behavior.", "url": "https://github.com/triplea-game/triplea/pull/6372#discussion_r419138299", "createdAt": "2020-05-03T18:05:15Z", "author": {"login": "ron-murhammer"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/casualty/CasualtySelector.java", "diffHunk": "@@ -74,62 +73,22 @@ public static CasualtyDetails selectCasualties(\n     if (targetsToPickFrom.isEmpty()) {\n       return new CasualtyDetails();\n     }\n-    if (!friendlyUnits.containsAll(targetsToPickFrom)) {\n-      throw new IllegalStateException(\n-          \"friendlyUnits should but does not contain all units from targetsToPickFrom\"\n-              + \", battlesite: \"\n-              + battlesite\n-              + \", friendlyUnits: \"\n-              + friendlyUnits\n-              + \", targetsToPickFrom: \"\n-              + targetsToPickFrom);\n-    }\n     final GameData data = bridge.getData();\n-    final boolean isEditMode = BaseEditDelegate.getEditMode(data);\n     final Player tripleaPlayer =\n         player.isNull() ? new WeakAi(player.getName()) : bridge.getRemotePlayer(player);\n     final Map<Unit, Collection<Unit>> dependents =\n         headLess ? Map.of() : CasualtyUtil.getDependents(targetsToPickFrom);\n-    if (isEditMode && !headLess) {\n-      final CasualtyDetails editSelection =\n-          tripleaPlayer.selectCasualties(\n-              targetsToPickFrom,\n-              dependents,\n-              0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAzNzgwOA=="}, "originalCommit": {"oid": "5c68a30d8a4395d0cd540212ec3236219daae57e"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0MzkwOQ==", "bodyText": "I really disagree, something that can cause a game-crash without possibility to save is very bad. Furthermore the current behavior just does not make sense - if you are forced to retreat how is that helpful?\nHow do we resolve this disagreement?\nThe updates here are blocking further updates from being done. I'd like to move forward, maintaining a broken feature going forward seems like we are creating more work to maintain a broken feature.", "url": "https://github.com/triplea-game/triplea/pull/6372#discussion_r419143909", "createdAt": "2020-05-03T18:52:59Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/casualty/CasualtySelector.java", "diffHunk": "@@ -74,62 +73,22 @@ public static CasualtyDetails selectCasualties(\n     if (targetsToPickFrom.isEmpty()) {\n       return new CasualtyDetails();\n     }\n-    if (!friendlyUnits.containsAll(targetsToPickFrom)) {\n-      throw new IllegalStateException(\n-          \"friendlyUnits should but does not contain all units from targetsToPickFrom\"\n-              + \", battlesite: \"\n-              + battlesite\n-              + \", friendlyUnits: \"\n-              + friendlyUnits\n-              + \", targetsToPickFrom: \"\n-              + targetsToPickFrom);\n-    }\n     final GameData data = bridge.getData();\n-    final boolean isEditMode = BaseEditDelegate.getEditMode(data);\n     final Player tripleaPlayer =\n         player.isNull() ? new WeakAi(player.getName()) : bridge.getRemotePlayer(player);\n     final Map<Unit, Collection<Unit>> dependents =\n         headLess ? Map.of() : CasualtyUtil.getDependents(targetsToPickFrom);\n-    if (isEditMode && !headLess) {\n-      final CasualtyDetails editSelection =\n-          tripleaPlayer.selectCasualties(\n-              targetsToPickFrom,\n-              dependents,\n-              0,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAzNzgwOA=="}, "originalCommit": {"oid": "5c68a30d8a4395d0cd540212ec3236219daae57e"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODAyNDk0OnYy", "diffSide": "LEFT", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/casualty/CasualtySelector.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwMjo1MDozM1rOGPoCjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QwMjo1MDozM1rOGPoCjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTAzNzgzOA==", "bodyText": "This iterator was re-written to be a stream+limit+collect.", "url": "https://github.com/triplea-game/triplea/pull/6372#discussion_r419037838", "createdAt": "2020-05-03T02:50:33Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/casualty/CasualtySelector.java", "diffHunk": "@@ -74,62 +73,22 @@ public static CasualtyDetails selectCasualties(\n     if (targetsToPickFrom.isEmpty()) {\n       return new CasualtyDetails();\n     }\n-    if (!friendlyUnits.containsAll(targetsToPickFrom)) {\n-      throw new IllegalStateException(\n-          \"friendlyUnits should but does not contain all units from targetsToPickFrom\"\n-              + \", battlesite: \"\n-              + battlesite\n-              + \", friendlyUnits: \"\n-              + friendlyUnits\n-              + \", targetsToPickFrom: \"\n-              + targetsToPickFrom);\n-    }\n     final GameData data = bridge.getData();\n-    final boolean isEditMode = BaseEditDelegate.getEditMode(data);\n     final Player tripleaPlayer =\n         player.isNull() ? new WeakAi(player.getName()) : bridge.getRemotePlayer(player);\n     final Map<Unit, Collection<Unit>> dependents =\n         headLess ? Map.of() : CasualtyUtil.getDependents(targetsToPickFrom);\n-    if (isEditMode && !headLess) {\n-      final CasualtyDetails editSelection =\n-          tripleaPlayer.selectCasualties(\n-              targetsToPickFrom,\n-              dependents,\n-              0,\n-              text,\n-              dice,\n-              player,\n-              friendlyUnits,\n-              enemyUnits,\n-              amphibious,\n-              amphibiousLandAttackers,\n-              new CasualtyList(),\n-              battleId,\n-              battlesite,\n-              allowMultipleHitsPerUnit);\n-      final List<Unit> killed = editSelection.getKilled();\n-      // if partial retreat is possible, kill amphibious units first\n-      if (Properties.getPartialAmphibiousRetreat(data)) {\n-        killAmphibiousFirst(killed, targetsToPickFrom);\n-      }\n-      return editSelection;\n-    }\n     if (dice.getHits() == 0) {\n       return new CasualtyDetails(List.of(), List.of(), true);\n     }\n-    int hitsRemaining = dice.getHits();\n-    if (Properties.getTransportCasualtiesRestricted(data)) {\n-      hitsRemaining = extraHits;\n-    }\n-    if (!isEditMode && allTargetsOneTypeOneHitPoint(targetsToPickFrom, dependents)) {\n-      final List<Unit> killed = new ArrayList<>();\n-      final Iterator<Unit> iter = targetsToPickFrom.iterator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c68a30d8a4395d0cd540212ec3236219daae57e"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2325, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}