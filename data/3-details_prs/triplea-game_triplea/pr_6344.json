{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5OTE5NTMz", "number": 6344, "title": "Is instant matcher", "bodyText": "Commits\ncommit c420bd1\nAdd IsInstant matcher to facilitate matching instant values\n\n- Rather than parsing an instant value from a formatted string\nand comparing against a target instant, this matcher allows for\nan instant to be matched against a numerically specified instant,\neg: 'assertThat(Instant.now(), isInstant(2020, 2, 20, 23, 59, 0));'\n\ncommit 5a4f7e6\nConvert tests to use 'isInstant(...)' in preference to 'is(Instant.parse(...))'\n\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[x] Code Cleanup or refactor\n[] Configuration Change\n[] Problem fix:  \n[] Other:", "createdAt": "2020-04-28T06:52:17Z", "url": "https://github.com/triplea-game/triplea/pull/6344", "merged": true, "mergeCommit": {"oid": "4b9ad1473a5ec9f1f8462284765539f79d0e5114"}, "closed": true, "closedAt": "2020-04-29T04:16:12Z", "author": {"login": "DanVanAtta"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcb-J2xgH2gAyNDA5OTE5NTMzOmM0MjBiZDFlN2JkMzI1OTIzZDI3OGUxYWMwYmNhYjljYTFkZTc2MTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccP_mEAH2gAyNDA5OTE5NTMzOjljMzRiNDI3YzAxNjQzNTg3ZjAyYWQ3MzUzODA2ZGMxMWI0ZmY4NzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c420bd1e7bd325923d278e1ac0bcab9ca1de7610", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/c420bd1e7bd325923d278e1ac0bcab9ca1de7610", "committedDate": "2020-04-28T06:46:55Z", "message": "Add IsInstant matcher to facilitate matching instant values\n\n- Rather than parsing an instant value from a formatted string\nand comparing against a target instant, this matcher allows for\nan instant to be matched against a numerically specified instant,\neg: 'assertThat(Instant.now(), isInstant(2020, 2, 20, 23, 59, 0));'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a4f7e6d962542b18cb9e73cbecc642e7083ff2e", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/5a4f7e6d962542b18cb9e73cbecc642e7083ff2e", "committedDate": "2020-04-28T06:48:48Z", "message": "Convert tests to use 'isInstant(...)' in preference to 'is(Instant.parse(...))'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNTQ1NTQy", "url": "https://github.com/triplea-game/triplea/pull/6344#pullrequestreview-401545542", "createdAt": "2020-04-28T06:55:30Z", "commit": {"oid": "5a4f7e6d962542b18cb9e73cbecc642e7083ff2e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNjo1NTozMFrOGNFZBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNjo1NTozMFrOGNFZBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM3Mjk5Nw==", "bodyText": "Method isInstant has 6 arguments (exceeds 4 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/6344#discussion_r416372997", "createdAt": "2020-04-28T06:55:30Z", "author": {"login": "codeclimate"}, "path": "test-common/src/main/java/org/triplea/test/common/IsInstant.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.triplea.test.common;\n+\n+import static org.hamcrest.core.Is.is;\n+import static org.hamcrest.core.IsEqual.equalTo;\n+\n+import com.google.common.base.Preconditions;\n+import java.time.Instant;\n+import lombok.experimental.UtilityClass;\n+import org.apache.commons.lang3.StringUtils;\n+import org.hamcrest.Matcher;\n+\n+@UtilityClass\n+public class IsInstant {\n+\n+  /**\n+   * Matches if a given instant has the equivalent date as defined by the parameters (parameters are\n+   * assumed to be UTC).\n+   *\n+   * <p>Example usage: <code>\n+   *   assertThat(Instant.now(), isInstant(2020, 12, 24, 23, 59, 59));\n+   * </code> <br>\n+   * The above is equivalent to:<code>\n+   *   assertThat(Instant.now(), is(Instant.parse(\"2020-12-24T23:59:59Z\")));\n+   * </code>\n+   *\n+   * @param year The year to match (should be YYYY format, eg: 2020)\n+   * @param month The month to match (1-12)\n+   * @param day The day to match (1-31)\n+   * @param hour The hour of day to match (1-23)\n+   * @param minute The minute of the hour to match (0-59)\n+   * @param second The second of the minute to match (0-59)\n+   */\n+  public static Matcher<Instant> isInstant(\n+      final int year,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a4f7e6d962542b18cb9e73cbecc642e7083ff2e"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNjQyMTU5", "url": "https://github.com/triplea-game/triplea/pull/6344#pullrequestreview-401642159", "createdAt": "2020-04-28T09:07:42Z", "commit": {"oid": "5a4f7e6d962542b18cb9e73cbecc642e7083ff2e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTowNzo0M1rOGNKV6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwOTowNzo0M1rOGNKV6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjQ1NDEyMA==", "bodyText": "Thoughts about using https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/LocalDateTime.html#of(int,int,int,int,int,int)\nInstead and converting that to an instant?\nThis way you wouldn't need the preconditions and custom parse logic.\nSomething like\nvar ldt = LocalDateTime.of(year, month, day, hour, minute, second);\nvar instant = ldt.toInstant(ZoneOffset.UTC);", "url": "https://github.com/triplea-game/triplea/pull/6344#discussion_r416454120", "createdAt": "2020-04-28T09:07:43Z", "author": {"login": "RoiEXLab"}, "path": "test-common/src/main/java/org/triplea/test/common/IsInstant.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.triplea.test.common;\n+\n+import static org.hamcrest.core.Is.is;\n+import static org.hamcrest.core.IsEqual.equalTo;\n+\n+import com.google.common.base.Preconditions;\n+import java.time.Instant;\n+import lombok.experimental.UtilityClass;\n+import org.apache.commons.lang3.StringUtils;\n+import org.hamcrest.Matcher;\n+\n+@UtilityClass\n+public class IsInstant {\n+\n+  /**\n+   * Matches if a given instant has the equivalent date as defined by the parameters (parameters are\n+   * assumed to be UTC).\n+   *\n+   * <p>Example usage: <code>\n+   *   assertThat(Instant.now(), isInstant(2020, 12, 24, 23, 59, 59));\n+   * </code> <br>\n+   * The above is equivalent to:<code>\n+   *   assertThat(Instant.now(), is(Instant.parse(\"2020-12-24T23:59:59Z\")));\n+   * </code>\n+   *\n+   * @param year The year to match (should be YYYY format, eg: 2020)\n+   * @param month The month to match (1-12)\n+   * @param day The day to match (1-31)\n+   * @param hour The hour of day to match (1-23)\n+   * @param minute The minute of the hour to match (0-59)\n+   * @param second The second of the minute to match (0-59)\n+   */\n+  public static Matcher<Instant> isInstant(\n+      final int year,\n+      final int month,\n+      final int day,\n+      final int hour,\n+      final int minute,\n+      final int second) {\n+\n+    Preconditions.checkArgument(month > 0 && month < 13);\n+    Preconditions.checkArgument(day > 0 && day < 32);\n+    Preconditions.checkArgument(hour >= 0 && hour < 24);\n+    Preconditions.checkArgument(minute >= 0 && minute < 60);\n+    Preconditions.checkArgument(second >= 0 && second < 60);\n+\n+    return is(\n+        equalTo(\n+            Instant.parse(\n+                String.format(\n+                    \"%s-%s-%sT%s:%s:%sZ\",\n+                    StringUtils.leftPad(String.valueOf(year), 4, '0'),\n+                    StringUtils.leftPad(String.valueOf(month), 2, '0'),\n+                    StringUtils.leftPad(String.valueOf(day), 2, '0'),\n+                    StringUtils.leftPad(String.valueOf(hour), 2, '0'),\n+                    StringUtils.leftPad(String.valueOf(minute), 2, '0'),\n+                    StringUtils.leftPad(String.valueOf(second), 2, '0')))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a4f7e6d962542b18cb9e73cbecc642e7083ff2e"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c34b427c01643587f02ad7353806dc11b4ff871", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/9c34b427c01643587f02ad7353806dc11b4ff871", "committedDate": "2020-04-29T03:34:00Z", "message": "Use LocalDateTime.of over Instant.parse"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3529, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}