{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NTc3ODI0", "number": 6449, "title": "Make displayed dice rolls span multiple lines and other combat UI improvements", "bodyText": "This change improves the display of dice rolls when there's a lot\nof them, by wrapping the dice as opposed to showing them all in\none scrollable line. To accommodate the change, which can increase\nthe height of the containing components, some UI elements are\nrestructured to use an outer scrollpane - particularly the combat\nand history views.\nAlso improves the battle window in a few ways:\n\nIf the screen is more than 1024x768, use 1024x768 size\nThe total hits line is now on top in a larger font\nFor each dice value, show number of hits and number of rolls\nShow number of hits in red\n\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[X] Feature update or enhancement\n[] Feature Removal\n[] Code Cleanup or refactor\n[] Configuration Change\n[] Problem fix:  \n[] Other:   \nTesting\nManual testing on both existing save games and with map edit to add different, large number of units to verify things are displayed correctly in different scenarios. Tested resize behavior in both the combat window and the history panel to make sure the dice rolls are correctly reflowed. Tested on different themes.\nScreens Shots\nBefore (Combat)\n\nNotice the vertical scrollbar and the fact there's no horizontal scrollbar even though the content is already too tall.\nAfter (Combat)\n\nSave game for testing the above (end the combat step to see the battle window):\nbefore_dice.tsvg.zip\nDark theme, 12-sided dice with lots of rolls to require scrolling:\n\nBefore (History)\nDifferent theme, showing the history panel:\n\nAfter (History)\nDifferent theme, showing the history panel:\n\nSave game for testing the history view (open saved game and switch to history view and view the combat where Austria attacks Greece):\ndom_arabia_10.tsvg.zip", "createdAt": "2020-05-09T13:45:18Z", "url": "https://github.com/triplea-game/triplea/pull/6449", "merged": true, "mergeCommit": {"oid": "52b8420d8568ae579f70b1dbf3a2424a09b9bd06"}, "closed": true, "closedAt": "2020-05-23T19:50:15Z", "author": {"login": "asvitkine"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfmmVgAH2gAyNDE1NTc3ODI0OjliNjZlOGZkMjc1NzNlYjFiNDQ2YzgxNTg1YzJmODM1ZWU0ZTJmOGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjxrAKgH2gAyNDE1NTc3ODI0OmFjMGJjYTg4NDZkNDIwMDUxNTI5YmEzNWNmNzBiNGY0MjY5MjY3OWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9b66e8fd27573eb1b446c81585c2f835ee4e2f8a", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/9b66e8fd27573eb1b446c81585c2f835ee4e2f8a", "committedDate": "2020-05-09T13:36:00Z", "message": "Make displayed dice rolls span multiple lines via a WrapLayout.\n\nThis change improves the display of dice rolls when there's a lot\nof them, by wrapping the dice as opposed to showing them all in\none scrollable line. To accomodate the change, which can increase\nthe height of the containing components, some UI elements are\nrestructured to use an outer scrollpane - particularly the combat\nand history views."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a91a276e09e65f08f83aa3d3c9d7b1f78e72e50", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/4a91a276e09e65f08f83aa3d3c9d7b1f78e72e50", "committedDate": "2020-05-09T13:56:24Z", "message": "Add missing gridx settings. I accidentally removed these but they are significant."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "225e8697d14ff94f98b9fe70719e82faf81f2189", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/225e8697d14ff94f98b9fe70719e82faf81f2189", "committedDate": "2020-05-09T14:03:05Z", "message": "small clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "147a2cc87f86e8a7b73bf288e2f4a6173f3157d1", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/147a2cc87f86e8a7b73bf288e2f4a6173f3157d1", "committedDate": "2020-05-16T13:42:51Z", "message": "Some improvements based on the code review:\n  - Show total hits on top\n  - Make casualties not part of the scroll pane.\n  - Show number of hits for each dice value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf39808141cafb34a82a998fdf6e2d28a55d907f", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/cf39808141cafb34a82a998fdf6e2d28a55d907f", "committedDate": "2020-05-16T13:56:36Z", "message": "Make battle window 1024 x 768 if the screen resolution is higher.\nAlso fix a warning."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a00d5ccefe22271d5c28b6658ace4eba3454f6b6", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/a00d5ccefe22271d5c28b6658ace4eba3454f6b6", "committedDate": "2020-05-16T14:03:13Z", "message": "Make hits string singular on one hit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d237b4669f10f522245b837f4ea1f1591a62393a", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/d237b4669f10f522245b837f4ea1f1591a62393a", "committedDate": "2020-05-16T14:12:49Z", "message": "restore missing invalidate/validate/repaint calls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e88186860bc4b6e236babbada9990e3991246ab", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/1e88186860bc4b6e236babbada9990e3991246ab", "committedDate": "2020-05-16T14:23:52Z", "message": "fix location of bottom label"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04ae31a9d65c2eb24c7080ee1717ac091f27f0db", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/04ae31a9d65c2eb24c7080ee1717ac091f27f0db", "committedDate": "2020-05-20T04:02:40Z", "message": "colorize hits; increase text size for total; use correct screen for size check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MDk0OTAx", "url": "https://github.com/triplea-game/triplea/pull/6449#pullrequestreview-415094901", "createdAt": "2020-05-20T08:15:30Z", "commit": {"oid": "04ae31a9d65c2eb24c7080ee1717ac091f27f0db"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwODoxNTozMFrOGYAQeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwODoxNTozMFrOGYAQeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgyMzIyNA==", "bodyText": "If you want to go for streams\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                int hits = 0;\n          \n          \n            \n                for (final Die die : dice) {\n          \n          \n            \n                  if (die.getType() == Die.DieType.HIT) {\n          \n          \n            \n                    hits++;\n          \n          \n            \n                  }\n          \n          \n            \n                }\n          \n          \n            \n                final long hits = dice.stream().map(Die::getType).filter(Die.DieType.HIT::equals).count();", "url": "https://github.com/triplea-game/triplea/pull/6449#discussion_r427823224", "createdAt": "2020-05-20T08:15:30Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/DicePanel.java", "diffHunk": "@@ -27,59 +26,82 @@\n   public DicePanel(final UiContext uiContext, final GameData data) {\n     this.uiContext = uiContext;\n     this.data = data;\n-    setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));\n+    setLayout(new GridBagLayout());\n+    setBorder(BorderFactory.createEmptyBorder(8, 16, 0, 0));\n   }\n \n   void setDiceRollForBombing(final List<Die> dice, final int cost) {\n     removeAll();\n+    add(new JLabel(\"Cost: \" + cost, SwingConstants.LEFT));\n     add(create(dice));\n-    add(Box.createVerticalGlue());\n-    add(new JLabel(\"Cost:\" + cost));\n-    invalidate();\n+    addBottomLabel(new JLabel());\n   }\n \n   /** Sets the dice roll to display. */\n   public void setDiceRoll(final DiceRoll diceRoll) {\n-    SwingAction.invokeNowOrLater(\n-        () -> {\n-          removeAll();\n-          for (int i = 1; i <= data.getDiceSides(); i++) {\n-            final List<Die> dice = diceRoll.getRolls(i);\n-            if (dice.isEmpty()) {\n-              continue;\n-            }\n-            add(new JLabel(\"Rolled at \" + i + \":\"));\n-            add(create(diceRoll.getRolls(i)));\n-          }\n-          add(Box.createVerticalGlue());\n-          add(new JLabel(\"Total hits:\" + diceRoll.getHits()));\n-          validate();\n-          invalidate();\n-          repaint();\n-        });\n+    removeAll();\n+    add(\n+        new JLabel(\n+            \"<html><b><font style='font-size:120%'>Total hits: <font color='#8B0000'>\"\n+                + diceRoll.getHits(),\n+            SwingConstants.LEFT));\n+    add(new JSeparator());\n+\n+    for (int i = 1; i <= data.getDiceSides(); i++) {\n+      final List<Die> dice = diceRoll.getRolls(i);\n+      if (dice.isEmpty()) {\n+        continue;\n+      }\n+      add(makeDiceRolledLabel(dice, i));\n+      add(create(dice));\n+    }\n+    addBottomLabel(new JLabel());\n+    invalidate();\n+    validate();\n+    repaint();\n+  }\n+\n+  private JLabel makeDiceRolledLabel(final List<Die> dice, final int value) {\n+    int hits = 0;\n+    for (final Die die : dice) {\n+      if (die.getType() == Die.DieType.HIT) {\n+        hits++;\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04ae31a9d65c2eb24c7080ee1717ac091f27f0db"}, "originalPosition": 90}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76663c0d5a91d1d47351885eedea35b0005e4b22", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/76663c0d5a91d1d47351885eedea35b0005e4b22", "committedDate": "2020-05-20T13:34:40Z", "message": "use stream & make a helper for coloring hits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4caea7ebf6413e62055cbf2df249d4a8344267d5", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/4caea7ebf6413e62055cbf2df249d4a8344267d5", "committedDate": "2020-05-20T13:35:54Z", "message": "fix typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be1278a75e9d82406a7b41e123e7cdb75244d970", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/be1278a75e9d82406a7b41e123e7cdb75244d970", "committedDate": "2020-05-20T23:25:03Z", "message": "Use red with a dark theme instead of dark red."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1Nzk1NzY4", "url": "https://github.com/triplea-game/triplea/pull/6449#pullrequestreview-415795768", "createdAt": "2020-05-21T00:06:25Z", "commit": {"oid": "be1278a75e9d82406a7b41e123e7cdb75244d970"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMDowNjoyNVrOGYh9DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMDowNjoyNVrOGYh9DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM3NTMwOA==", "bodyText": "Would you mind adding some unit testing for this function?", "url": "https://github.com/triplea-game/triplea/pull/6449#discussion_r428375308", "createdAt": "2020-05-21T00:06:25Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/framework/lookandfeel/LookAndFeel.java", "diffHunk": "@@ -78,6 +79,18 @@ public static String getDefaultLookAndFeelClassName() {\n             .orElseGet(UIManager::getSystemLookAndFeelClassName);\n   }\n \n+  public static boolean isCurrentLookAndFeelDark() {\n+    final Color background = UIManager.getColor(\"Panel.background\");\n+    return background != null && isColorDark(background);\n+  }\n+\n+  public static boolean isColorDark(final Color color) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be1278a75e9d82406a7b41e123e7cdb75244d970"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1Nzk2NDYx", "url": "https://github.com/triplea-game/triplea/pull/6449#pullrequestreview-415796461", "createdAt": "2020-05-21T00:08:35Z", "commit": {"oid": "be1278a75e9d82406a7b41e123e7cdb75244d970"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMDowODozNVrOGYh_XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMDowODozNVrOGYh_XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM3NTkwMA==", "bodyText": "minor, any objections to extracting \"#8B0000\" to a named constant? EG: \"DARKER_RED\"", "url": "https://github.com/triplea-game/triplea/pull/6449#discussion_r428375900", "createdAt": "2020-05-21T00:08:35Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/DicePanel.java", "diffHunk": "@@ -69,7 +70,9 @@ private JLabel makeDiceRolledLabel(final List<Die> dice, final int value) {\n   }\n \n   private static String colorizeHitString(final Object hitsString) {\n-    return \"<font color='#8B0000'>\" + hitsString + \"</font>\";\n+    // On a dark theme, use red. Use a darker red with a light theme.\n+    final String color = LookAndFeel.isCurrentLookAndFeelDark() ? \"red\" : \"#8B0000\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be1278a75e9d82406a7b41e123e7cdb75244d970"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1Nzk3NDY4", "url": "https://github.com/triplea-game/triplea/pull/6449#pullrequestreview-415797468", "createdAt": "2020-05-21T00:11:36Z", "commit": {"oid": "be1278a75e9d82406a7b41e123e7cdb75244d970"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMDoxMTozNlrOGYiCsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMDoxMTozNlrOGYiCsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM3Njc1NA==", "bodyText": "FWIW, there is a type-safe builder for GridBagConstraints that can be used.\nIs gridy default to 0, if so, do we need to set gridx to 0 as well on line 91?", "url": "https://github.com/triplea-game/triplea/pull/6449#discussion_r428376754", "createdAt": "2020-05-21T00:11:36Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/DicePanel.java", "diffHunk": "@@ -27,59 +27,80 @@\n   public DicePanel(final UiContext uiContext, final GameData data) {\n     this.uiContext = uiContext;\n     this.data = data;\n-    setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));\n+    setLayout(new GridBagLayout());\n+    setBorder(BorderFactory.createEmptyBorder(8, 16, 0, 0));\n   }\n \n   void setDiceRollForBombing(final List<Die> dice, final int cost) {\n     removeAll();\n+    add(new JLabel(\"Cost: \" + cost, SwingConstants.LEFT));\n     add(create(dice));\n-    add(Box.createVerticalGlue());\n-    add(new JLabel(\"Cost:\" + cost));\n-    invalidate();\n+    addBottomLabel(new JLabel());\n   }\n \n   /** Sets the dice roll to display. */\n   public void setDiceRoll(final DiceRoll diceRoll) {\n-    SwingAction.invokeNowOrLater(\n-        () -> {\n-          removeAll();\n-          for (int i = 1; i <= data.getDiceSides(); i++) {\n-            final List<Die> dice = diceRoll.getRolls(i);\n-            if (dice.isEmpty()) {\n-              continue;\n-            }\n-            add(new JLabel(\"Rolled at \" + i + \":\"));\n-            add(create(diceRoll.getRolls(i)));\n-          }\n-          add(Box.createVerticalGlue());\n-          add(new JLabel(\"Total hits:\" + diceRoll.getHits()));\n-          validate();\n-          invalidate();\n-          repaint();\n-        });\n+    removeAll();\n+    final String hitsString = colorizeHitString(diceRoll.getHits());\n+    add(\n+        new JLabel(\n+            \"<html><b><font style='font-size:120%'>Total hits: \" + hitsString,\n+            SwingConstants.LEFT));\n+    add(new JSeparator());\n+\n+    for (int i = 1; i <= data.getDiceSides(); i++) {\n+      final List<Die> dice = diceRoll.getRolls(i);\n+      if (dice.isEmpty()) {\n+        continue;\n+      }\n+      add(makeDiceRolledLabel(dice, i));\n+      add(create(dice));\n+    }\n+    addBottomLabel(new JLabel());\n+    invalidate();\n+    validate();\n+    repaint();\n+  }\n+\n+  private JLabel makeDiceRolledLabel(final List<Die> dice, final int value) {\n+    final long hits = dice.stream().map(Die::getType).filter(Die.DieType.HIT::equals).count();\n+    final String countString = dice.size() == 1 ? \"1 die\" : dice.size() + \" dice\";\n+    final String hitsString = colorizeHitString(hits == 1 ? \"1 hit\" : hits + \" hits\");\n+    return new JLabel(\"<html><b>Rolled \" + countString + \" at \" + value + \" (\" + hitsString + \"):\");\n+  }\n+\n+  private static String colorizeHitString(final Object hitsString) {\n+    // On a dark theme, use red. Use a darker red with a light theme.\n+    final String color = LookAndFeel.isCurrentLookAndFeelDark() ? \"red\" : \"#8B0000\";\n+    return \"<font color='\" + color + \"'>\" + hitsString + \"</font>\";\n+  }\n+\n+  private void add(final JComponent component) {\n+    final GridBagConstraints constraints = new GridBagConstraints();\n+    constraints.fill = GridBagConstraints.HORIZONTAL;\n+    constraints.weightx = 1;\n+    constraints.gridx = 0;\n+    add(component, constraints);\n+  }\n+\n+  private void addBottomLabel(final JLabel label) {\n+    final GridBagConstraints constraints = new GridBagConstraints();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be1278a75e9d82406a7b41e123e7cdb75244d970"}, "originalPosition": 109}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1Nzk4MDA1", "url": "https://github.com/triplea-game/triplea/pull/6449#pullrequestreview-415798005", "createdAt": "2020-05-21T00:13:18Z", "commit": {"oid": "be1278a75e9d82406a7b41e123e7cdb75244d970"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMDoxMzoxOFrOGYiEjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMDoxNTo0N1rOGYiHYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM3NzIyOQ==", "bodyText": "Any objection to having the bottom label be returned from the function? As is, the method addBottomLabel relies on side effects. To understand what is happening, you have to dive into the method, which lacks abstraction. We also have some inconsistency from the other methods that add returned values compared to this last one that adds a component as a side-effect.", "url": "https://github.com/triplea-game/triplea/pull/6449#discussion_r428377229", "createdAt": "2020-05-21T00:13:18Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/DicePanel.java", "diffHunk": "@@ -27,59 +27,80 @@\n   public DicePanel(final UiContext uiContext, final GameData data) {\n     this.uiContext = uiContext;\n     this.data = data;\n-    setLayout(new BoxLayout(this, BoxLayout.Y_AXIS));\n+    setLayout(new GridBagLayout());\n+    setBorder(BorderFactory.createEmptyBorder(8, 16, 0, 0));\n   }\n \n   void setDiceRollForBombing(final List<Die> dice, final int cost) {\n     removeAll();\n+    add(new JLabel(\"Cost: \" + cost, SwingConstants.LEFT));\n     add(create(dice));\n-    add(Box.createVerticalGlue());\n-    add(new JLabel(\"Cost:\" + cost));\n-    invalidate();\n+    addBottomLabel(new JLabel());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be1278a75e9d82406a7b41e123e7cdb75244d970"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM3Nzk1NA==", "bodyText": "nit: changing serialVersionUID strings of swing components should not be necessary. I'm not sure there is consensus whether we should default serialVersoinId to a simple 1L. In essence, I'd recommend to not go out of your way to change them unless it's intentional/necessary.", "url": "https://github.com/triplea-game/triplea/pull/6449#discussion_r428377954", "createdAt": "2020-05-21T00:15:47Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/history/HistoryDetailsPanel.java", "diffHunk": "@@ -35,32 +38,39 @@\n  * </ul>\n  */\n public class HistoryDetailsPanel extends JPanel {\n-  private static final long serialVersionUID = 5092004144144006960L;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be1278a75e9d82406a7b41e123e7cdb75244d970"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0419f0f373b17b6abfed562381adb9b2445994de", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/0419f0f373b17b6abfed562381adb9b2445994de", "committedDate": "2020-05-21T13:40:25Z", "message": "Address some comments. More later."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78465d46cb5c9b75ef3a301da53365153705da17", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/78465d46cb5c9b75ef3a301da53365153705da17", "committedDate": "2020-05-22T12:24:27Z", "message": "Add new unit test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac0bca8846d420051529ba35cf70b4f42692679e", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/ac0bca8846d420051529ba35cf70b4f42692679e", "committedDate": "2020-05-22T12:45:45Z", "message": "small clean ups"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3418, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}