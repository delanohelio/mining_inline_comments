{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MjcxMzg0", "number": 8289, "title": "Allow validating canals when finding neighbors or distances", "bodyText": "The ProAI calculates the value of territories based on neighboring\nterritories and distances to enemy factories/capitals. If a neighboring\nterritory had a canal to it, the ProAI would ignore the canal and assume\nthat the units could travel to it. This could cause unit stacking\nbecause of the higher value of the territory.\nNow, when the ProAI calculates the neighboring territories, it checks if\nunits can travel between between the two territories. This will cause\nsome neighboring territories to have a higher distance and so the value\nof the territory will go down.\n\nTesting\n\nPlayed the save from #8266 and verified that the stacked units moved.  Played 7 rounds of a Hard AI warcraft heroes game and ensured there were no stacked units or errors.  Played 3 rounds of a Hard AI WW2 Global 1940 game to ensure no errors.\nScreens Shots\n\nAdditional Notes to Reviewer\n\nRelease Note\n\nFIX|AI incorporates canal restrictions when calculating the value of its territories.  This value is used by the AI to determine where units should be moved.  Before this change, if an unopened canal separated two territories and one territory was owned by the AI an the other territory was a high value territory (such as enemy capital), then it would stack up units in that territory since the units couldn't traverse the canal but the value of the territory was really high.  AI should handle now Warcraft War Heroes air routes better.", "createdAt": "2020-11-26T21:26:24Z", "url": "https://github.com/triplea-game/triplea/pull/8289", "merged": true, "mergeCommit": {"oid": "ef721ec3ae423b33440a065f8ecd1c98b5ff34b0"}, "closed": true, "closedAt": "2020-12-02T01:29:51Z", "author": {"login": "trevan"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgZCiygH2gAyNTI4MjcxMzg0OjRiZjc0ZGZkZjc3ZTc2YjQ2OWVmMzQ5Mzg5OGQ1ZDJiMDcxYWEwMTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhz1C3AH2gAyNTI4MjcxMzg0OjQ3MTI5MjhhNGI1YWU1YjAyNjVhYzgwMzA4OGI2ZjU2NjhhOGU5Mjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4bf74dfdf77e76b469ef3493898d5d2b071aa015", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/4bf74dfdf77e76b469ef3493898d5d2b071aa015", "committedDate": "2020-11-26T20:33:13Z", "message": "Allow validating canals when finding neighbors or distances\n\nThe ProAI calculates the value of territories based on neighboring\nterritories and distances to enemy factories/capitals. If a neighboring\nterritory had a canal to it, the ProAI would ignore the canal and assume\nthat the units could travel to it. This could cause unit stacking\nbecause of the higher value of the territory.\n\nNow, when the ProAI calculates the neighboring territories, it checks if\nunits can travel between between the two territories. This will cause\nsome neighboring territories to have a higher distance and so the value\nof the territory will go down."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "def97701d23227d8b9ecd04662d19fda1426c7bb", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/def97701d23227d8b9ecd04662d19fda1426c7bb", "committedDate": "2020-11-27T00:00:30Z", "message": "Fix unittests matchers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDEzMjYw", "url": "https://github.com/triplea-game/triplea/pull/8289#pullrequestreview-540413260", "createdAt": "2020-11-28T19:42:09Z", "commit": {"oid": "def97701d23227d8b9ecd04662d19fda1426c7bb"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20850d8f76e16a5d384ecbca5a030e3e7cc14e0c", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/20850d8f76e16a5d384ecbca5a030e3e7cc14e0c", "committedDate": "2020-11-29T01:01:57Z", "message": "Create another two overloaded getNeighbors methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e681ed5e241b6d58a1b81876d579db6a8153918", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/2e681ed5e241b6d58a1b81876d579db6a8153918", "committedDate": "2020-11-29T01:08:59Z", "message": "Add overloaded getDistance method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDI3MTgx", "url": "https://github.com/triplea-game/triplea/pull/8289#pullrequestreview-540427181", "createdAt": "2020-11-29T01:08:36Z", "commit": {"oid": "20850d8f76e16a5d384ecbca5a030e3e7cc14e0c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwMTowODozNlrOH7eaxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwMTowODozNlrOH7eaxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNjQwNQ==", "bodyText": "Please rename Matches.alwaysBi(). I had a lot of trouble reading that at first, it was not clear what it meant (even the type being passed was not clear, so it looked like 'Bi' was an abbreviation for something').\nThe implementation for an always true bi-predicate is kinda trivial, I'm not sure we really need a matches for it and can just inline it. I don't think we should be encouraging usages of tautology functions by having it be in Matches. A tautology funtion makes methods look a lot more complex then they actually are.", "url": "https://github.com/triplea-game/triplea/pull/8289#discussion_r532126405", "createdAt": "2020-11-29T01:08:36Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/data/GameMap.java", "diffHunk": "@@ -104,6 +104,11 @@ public Territory getTerritory(final String s) {\n     return neighbors;\n   }\n \n+  public Set<Territory> getNeighbors(\n+      final Territory territory, @Nullable final Predicate<Territory> cond) {\n+    return getNeighbors(territory, cond, Matches.alwaysBi());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20850d8f76e16a5d384ecbca5a030e3e7cc14e0c"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7befed3ddb61344407847c2f66caa58af2a9ce35", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/7befed3ddb61344407847c2f66caa58af2a9ce35", "committedDate": "2020-11-29T01:11:47Z", "message": "Inline Matches.alwaysBi instead"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDI3Mjk4", "url": "https://github.com/triplea-game/triplea/pull/8289#pullrequestreview-540427298", "createdAt": "2020-11-29T01:12:36Z", "commit": {"oid": "7befed3ddb61344407847c2f66caa58af2a9ce35"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwMToxMjozNlrOH7ecDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQwMToxMjozNlrOH7ecDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjEyNjczMg==", "bodyText": "Just noticed, when is the units value null? Generally an empty collection is preferred rather than a null.", "url": "https://github.com/triplea-game/triplea/pull/8289#discussion_r532126732", "createdAt": "2020-11-29T01:12:36Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/move/validation/MoveValidator.java", "diffHunk": "@@ -278,13 +279,13 @@ private MoveValidationResult validateCanal(\n    * @param units (Can be null. If null we will assume all units would be stopped by the canal.)\n    */\n   public String validateCanal(\n-      final Route route, final Collection<Unit> units, final GamePlayer player) {\n+      final Route route, @Nullable final Collection<Unit> units, final GamePlayer player) {\n     return validateCanal(route, units, new HashMap<>(), player);\n   }\n \n   String validateCanal(\n       final Route route,\n-      final Collection<Unit> units,\n+      @Nullable final Collection<Unit> units,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7befed3ddb61344407847c2f66caa58af2a9ce35"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNTA5OTI1", "url": "https://github.com/triplea-game/triplea/pull/8289#pullrequestreview-540509925", "createdAt": "2020-11-29T19:38:35Z", "commit": {"oid": "7befed3ddb61344407847c2f66caa58af2a9ce35"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxOTozODozNVrOH7mUKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxOTo1Nzo0NVrOH7mcmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI1NTc4Ng==", "bodyText": "Nit - This parameter is now the 'territoryCondition', correct? Would you have any objection to rename it?\nNow that there are two parameters, making the names distinct is more significant as one wonders how the 'cond' and 'routeCond' are different. Secondly, 'cond' was not the best name to begin with as it was cryptic and did not describe what the condition represented or was used for.", "url": "https://github.com/triplea-game/triplea/pull/8289#discussion_r532255786", "createdAt": "2020-11-29T19:38:35Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/data/GameMap.java", "diffHunk": "@@ -103,15 +104,24 @@ public Territory getTerritory(final String s) {\n     return neighbors;\n   }\n \n+  public Set<Territory> getNeighbors(\n+      final Territory territory, @Nullable final Predicate<Territory> cond) {\n+    return getNeighbors(territory, cond, (it, it2) -> true);\n+  }\n+\n   /**\n    * Returns all adjacent neighbors of the starting territory that match the condition. Does NOT\n    * include the original/starting territory in the returned Set.\n    */\n-  public Set<Territory> getNeighbors(final Territory territory, final Predicate<Territory> cond) {\n+  public Set<Territory> getNeighbors(\n+      final Territory territory,\n+      @Nullable final Predicate<Territory> cond,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7befed3ddb61344407847c2f66caa58af2a9ce35"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI1NjA0Mg==", "bodyText": "It looks like this method is only called internally to GameMap now as well, if I have that right - we can reduce the visibility to private. Would you mind doing so?", "url": "https://github.com/triplea-game/triplea/pull/8289#discussion_r532256042", "createdAt": "2020-11-29T19:40:29Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/data/GameMap.java", "diffHunk": "@@ -103,15 +104,24 @@ public Territory getTerritory(final String s) {\n     return neighbors;\n   }\n \n+  public Set<Territory> getNeighbors(\n+      final Territory territory, @Nullable final Predicate<Territory> cond) {\n+    return getNeighbors(territory, cond, (it, it2) -> true);\n+  }\n+\n   /**\n    * Returns all adjacent neighbors of the starting territory that match the condition. Does NOT\n    * include the original/starting territory in the returned Set.\n    */\n-  public Set<Territory> getNeighbors(final Territory territory, final Predicate<Territory> cond) {\n+  public Set<Territory> getNeighbors(\n+      final Territory territory,\n+      @Nullable final Predicate<Territory> cond,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI1NTc4Ng=="}, "originalCommit": {"oid": "7befed3ddb61344407847c2f66caa58af2a9ce35"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI1NjI5MQ==", "bodyText": "This javadoc perhaps could be better. What kind of check are we doing? What is the signifcance of the check?\nSuggestion: reword to something like:  \"distance All returned territories will be within the max distance from the starting territory. 0 represents the starting territory and no adjacencies, 1 is all immediately adjacent territories.\"", "url": "https://github.com/triplea-game/triplea/pull/8289#discussion_r532256291", "createdAt": "2020-11-29T19:42:40Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/data/GameMap.java", "diffHunk": "@@ -127,19 +137,41 @@ public Territory getTerritory(final String s) {\n   /**\n    * Returns all neighbors within a certain distance of the starting territory that match the\n    * condition. Does NOT include the original/starting territory in the returned Set.\n+   *\n+   * @param territory starting territory\n+   * @param distance distance to check", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7befed3ddb61344407847c2f66caa58af2a9ce35"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI1NjY1OQ==", "bodyText": "Side-note, the getNeighbors code is largely only used by AI. It's something for us to consider as every logical graph operation involving the map does not scale if it's all found within GameMap. My thoughts are a Territory object having a collection of neighbors would help avoid the need to get all data from GameMap, and then also the AI code could have the path finding algorithms localized in the AI packages.", "url": "https://github.com/triplea-game/triplea/pull/8289#discussion_r532256659", "createdAt": "2020-11-29T19:46:18Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/data/GameMap.java", "diffHunk": "@@ -127,19 +137,41 @@ public Territory getTerritory(final String s) {\n   /**\n    * Returns all neighbors within a certain distance of the starting territory that match the\n    * condition. Does NOT include the original/starting territory in the returned Set.\n+   *\n+   * @param territory starting territory\n+   * @param distance distance to check\n+   * @param cond the neighbor territory must match this condition\n    */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7befed3ddb61344407847c2f66caa58af2a9ce35"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI1NzY4MA==", "bodyText": "Thank you for the previous cleanups, it's now clear that either cond is used with an always true bi-predicate (route condition), or if the bi-predicate is used then it is always with these two conditions:\n                ProMatches.territoryCanPotentiallyMoveLandUnits(player, data.getProperties()),\n                ProMatches.noCanalsBetweenTerritories(player, data));\n\nI think there are some issues here:\n\nDRY violation, the idea of how to calculate land-passable territories without canal is derived in two different places (happily the matching logic is in one spot, but still it's indirect to go from a matcher to a method call to actually getting the neighbors).\nMakes for a difficult API to use. I don't think it's very fluent to look up a matcher and seems confusing to keep straight the difference between a route and territory condition. We also have a number of overloads which makes a person wonder how they should get neighbors if that is what they are trying to do.\n\nWhat do you think we created an API that could hide the two predicates from callers?\nThe signature would be something like:\nSet<Territory> getLandTraversableNeighbors(\n      final Territory territory,\n      final int distance);\n\nThen in the javadoc we could define what is meant by land-traversable. Or we could call the method getNonCanalLandTraversableNeighbors if we feel the canal aspect is distinct enough to need to be in the method name.\nI would agree that having ProMatches in GameMap is bad, though I think we are already there indirectly by having entire methods (like this and similar) be in GameMap only to support AI. As noted earlier, the entire method likely ought to be picked up and moved to AI specific code.\nOtherwise, WDYT?\nSuch a move should hopefully make the method overloads easier to use, reduce the API surface, reduce the number of parameters (which makes it more testable!), and just easier to understand how to use these methods.", "url": "https://github.com/triplea-game/triplea/pull/8289#discussion_r532257680", "createdAt": "2020-11-29T19:55:22Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/data/GameMap.java", "diffHunk": "@@ -127,19 +137,41 @@ public Territory getTerritory(final String s) {\n   /**\n    * Returns all neighbors within a certain distance of the starting territory that match the\n    * condition. Does NOT include the original/starting territory in the returned Set.\n+   *\n+   * @param territory starting territory\n+   * @param distance distance to check\n+   * @param cond the neighbor territory must match this condition\n    */\n   public Set<Territory> getNeighbors(\n-      final Territory territory, final int distance, final Predicate<Territory> cond) {\n+      final Territory territory, final int distance, @Nullable final Predicate<Territory> cond) {\n+    return getNeighbors(territory, distance, cond, (it, it2) -> true);\n+  }\n+\n+  /**\n+   * Returns all neighbors within a certain distance of the starting territory that match the\n+   * condition. Does NOT include the original/starting territory in the returned Set.\n+   *\n+   * @param territory starting territory\n+   * @param distance distance to check\n+   * @param cond the neighbor territory must match this condition\n+   * @param routeCond the route between the starting territory and the neighbor territory must match\n+   *     this condition\n+   */\n+  public Set<Territory> getNeighbors(\n+      final Territory territory,\n+      final int distance,\n+      @Nullable final Predicate<Territory> cond,\n+      final BiPredicate<Territory, Territory> routeCond) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7befed3ddb61344407847c2f66caa58af2a9ce35"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI1Nzk0NA==", "bodyText": "Similar comment to this method, it's either invoked with a no-op arg or the arg is always:\n                  ProMatches.territoryCanPotentiallyMoveLandUnits(player, data.getProperties()),\n                  ProMatches.noCanalsBetweenTerritories(player, data));\n\nThat hints that we could use another method rather than it need to be parameterized as part of the public API.", "url": "https://github.com/triplea-game/triplea/pull/8289#discussion_r532257944", "createdAt": "2020-11-29T19:57:45Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/engine/data/GameMap.java", "diffHunk": "@@ -317,10 +355,27 @@ public int getDistance(final Territory t1, final Territory t2) {\n    * @param cond condition that covered territories of the route must match\n    */\n   public int getDistance(final Territory t1, final Territory t2, final Predicate<Territory> cond) {\n+    return getDistance(t1, t2, cond, (it, it2) -> true);\n+  }\n+\n+  /**\n+   * Returns the distance between two territories where the covered territories of the route satisfy\n+   * the condition or -1 if they are not connected.\n+   *\n+   * @param t1 start territory of the route\n+   * @param t2 end territory of the route\n+   * @param cond condition that covered territories of the route must match\n+   * @param routeCond condition that routes between neighboring territories must match\n+   */\n+  public int getDistance(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7befed3ddb61344407847c2f66caa58af2a9ce35"}, "originalPosition": 141}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9eb9d523ff1ee50f70441970e39416c11497c3be", "author": {"user": {"login": "trevan", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/9eb9d523ff1ee50f70441970e39416c11497c3be", "committedDate": "2020-11-30T03:17:43Z", "message": "Change variable names and lengthen comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88dd27d7d4c089437220841d0feb5ce62e0ccf20", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/88dd27d7d4c089437220841d0feb5ce62e0ccf20", "committedDate": "2020-12-01T05:51:03Z", "message": "Add shim code to combine predicate and bipredicates to be a single call to a bipredicate only method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "593bfde74a2528bc56e7f085b85553ab2519a186", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/593bfde74a2528bc56e7f085b85553ab2519a186", "committedDate": "2020-12-01T05:57:32Z", "message": "Remove shimmed methods, change invocations of (predicate, bipredicate) methods to invoke (bipredicate) methods directly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b8513b65a8076ac675def4ce90894d3db80a6d9", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/0b8513b65a8076ac675def4ce90894d3db80a6d9", "committedDate": "2020-12-01T06:01:04Z", "message": "Remove another shimmed method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4712928a4b5ae5b0265ac803088b6f5668a8e927", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/4712928a4b5ae5b0265ac803088b6f5668a8e927", "committedDate": "2020-12-01T06:19:50Z", "message": "Fix refactoring mistake, use correct variable in condition."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3781, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}