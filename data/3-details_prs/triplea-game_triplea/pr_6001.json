{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMzI5NzM2", "number": 6001, "title": "Game runner extract main frame", "bodyText": "Series of refactors to help start fixing the entanglement of 'GameSelectorModel' with many other game selection components. The overall goal was to fix game loader error handling triggered from 'GameSelectorModel', to get there it is a long top-down road and is a first step.\nIn this update we start at GameRunner and extract and remove dependencies on MainFrame. This will let us start working out the interplay between 'GameSetupPanel' and 'GameSelectorModel'\n \nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[x] Code Cleanup or refactor\n[] Configuration Change\n[] Problem fix:  \n[] Other:   \nTesting\n\n[x] Manual testing done\n\nchecked game launch, various startup screens like PBF, background task runner still worked, started a game and checked quit still works.", "createdAt": "2020-03-04T04:15:00Z", "url": "https://github.com/triplea-game/triplea/pull/6001", "merged": true, "mergeCommit": {"oid": "ce9f968b7173d6528063534e0adc6c51c0490a24"}, "closed": true, "closedAt": "2020-03-04T20:49:54Z", "author": {"login": "DanVanAtta"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKNbBEAH2gAyMzgzMzI5NzM2OjQ0ZTk2MDc0ZWViMTYyZjE2MTc5NGE2ZTg5ZjZjOGZkYTQzNWQ2MDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKZTZIAFqTM2ODg5NjMzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "44e96074eeb162f161794a6e89f6c8fda435d603", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/44e96074eeb162f161794a6e89f6c8fda435d603", "committedDate": "2020-03-04T02:23:36Z", "message": "Move GameSelectorModel, colocate with GameSelectorPanel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3553a098fa19a38fecaa0b5826a83995053c7aad", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/3553a098fa19a38fecaa0b5826a83995053c7aad", "committedDate": "2020-03-04T02:58:10Z", "message": "Simplify GameRunner - Encapsulate MainFrame in its own class, migrate BackGroundTaskRunner usages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "321a066530ee09d63aa3835dbcb86d583b7be2e8", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/321a066530ee09d63aa3835dbcb86d583b7be2e8", "committedDate": "2020-03-04T03:19:47Z", "message": "Simplify GameRunner - inline usages of JOptionPane, remove dependencies on mainFrame"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17d5462ef4c4623c4734f3a09c2640a027ce0aa9", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/17d5462ef4c4623c4734f3a09c2640a027ce0aa9", "committedDate": "2020-03-04T03:33:43Z", "message": "Simplify GameRunner - Move more mainFrame dependencies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cb620733286f95bb0a47f0352ec7e7786f81304", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/1cb620733286f95bb0a47f0352ec7e7786f81304", "committedDate": "2020-03-04T03:36:33Z", "message": "Show main frame fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87dfca2f84eda300cc7cde62c0d9a805758a8f3d", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/87dfca2f84eda300cc7cde62c0d9a805758a8f3d", "committedDate": "2020-03-04T03:37:53Z", "message": "Formatting and remove commented out code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0452f416debaa416d8f0d1e8923ad6edc59a792d", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/0452f416debaa416d8f0d1e8923ad6edc59a792d", "committedDate": "2020-03-04T03:50:09Z", "message": "Style fix and javadoc MainFrame"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75787e250d801c6fcb2f8bffb9c1b0a988bc6cb6", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/75787e250d801c6fcb2f8bffb9c1b0a988bc6cb6", "committedDate": "2020-03-04T03:54:22Z", "message": "Remove unnecessary private field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcbb5da7f7909f2240ccc2bf55abd5f01fd184a9", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/dcbb5da7f7909f2240ccc2bf55abd5f01fd184a9", "committedDate": "2020-03-04T04:01:39Z", "message": "Move test to mirror prod class file move"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4NDk1MjY4", "url": "https://github.com/triplea-game/triplea/pull/6001#pullrequestreview-368495268", "createdAt": "2020-03-04T04:16:51Z", "commit": {"oid": "dcbb5da7f7909f2240ccc2bf55abd5f01fd184a9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNDoxNjo1MVrOFxfhjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwNDoxNjo1MVrOFxfhjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQ0MTAzNw==", "bodyText": "@RoiEXLab this was removed as it does not seem to belong in the JavaFx componentry. This invocation seemed like an intermediary step to get java fx working. I'm hoping we can circle back and get this fixed correctly and not have swing dependencies in JavaFx, all in part of fixing up the game startup models.\nI tried to test if this had an impact, and was getting an error launching this class:\n\nError: JavaFX runtime components are missing, and are required to run this application", "url": "https://github.com/triplea-game/triplea/pull/6001#discussion_r387441037", "createdAt": "2020-03-04T04:16:51Z", "author": {"login": "DanVanAtta"}, "path": "game-headed-javafx/src/main/java/org/triplea/game/client/ui/javafx/TripleA.java", "diffHunk": "@@ -40,10 +37,6 @@ public void start(final Stage stage) {\n     navigationPane.switchScreen(FxmlManager.MAIN_MENU_PANE);\n \n     setupStage(stage, scene, loadedNode.getController());\n-    // Don't invoke Swing if headless (for example in tests)\n-    if (!GraphicsEnvironment.isHeadless()) {\n-      SwingUtilities.invokeLater(GameRunner::newMainFrame);\n-    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbb5da7f7909f2240ccc2bf55abd5f01fd184a9"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4ODk2MzM5", "url": "https://github.com/triplea-game/triplea/pull/6001#pullrequestreview-368896339", "createdAt": "2020-03-04T15:51:17Z", "commit": {"oid": "dcbb5da7f7909f2240ccc2bf55abd5f01fd184a9"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNTo1ODo0MVrOFxzKSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjoxMjozNFrOFxzvZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2Mjc2MA==", "bodyText": "This cyclic dependency is weird. I wonder if it's better to pass some sort of CompletableFuture<JFrame> to the constructor and \"complete\" it once the frame is ready.\nIn any case some sort of check that the ui isn't set more than once would be nice", "url": "https://github.com/triplea-game/triplea/pull/6001#discussion_r387762760", "createdAt": "2020-03-04T15:58:41Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/mc/SetupPanelModel.java", "diffHunk": "@@ -35,7 +35,7 @@\n   protected SetupPanel panel = null;\n \n   @Setter private Consumer<SetupPanel> panelChangeListener;\n-  @Nonnull private final JFrame ui;\n+  @Setter private JFrame ui;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbb5da7f7909f2240ccc2bf55abd5f01fd184a9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2Njg4Mg==", "bodyText": "One difference this is probably going to cause is that the dialogs now no longer share the icon with the main frame, this problem can be found in different places too though.\nAlso it might be no longer on top of the mainframe", "url": "https://github.com/triplea-game/triplea/pull/6001#discussion_r387766882", "createdAt": "2020-03-04T16:04:29Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/framework/startup/ui/posted/game/pbem/EmailSenderEditor.java", "diffHunk": "@@ -181,8 +180,8 @@ private void testEmail() {\n                 final int finalMessageType = messageType;\n                 SwingUtilities.invokeLater(\n                     () ->\n-                        GameRunner.showMessageDialog(\n-                            finalMessage, GameRunner.Title.of(\"Email Test\"), finalMessageType));\n+                        JOptionPane.showMessageDialog(\n+                            null, finalMessage, \"Email Test\", finalMessageType));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbb5da7f7909f2240ccc2bf55abd5f01fd184a9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2ODk2OQ==", "bodyText": "I think those static actions should be moved up one call layer:\nI'f this constructor is ever called tice this could result in weird problems", "url": "https://github.com/triplea-game/triplea/pull/6001#discussion_r387768969", "createdAt": "2020-03-04T16:07:36Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/framework/ui/MainFrame.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package games.strategy.engine.framework.ui;\n+\n+import com.google.common.base.Preconditions;\n+import games.strategy.engine.framework.GameRunner;\n+import games.strategy.engine.framework.lookandfeel.LookAndFeelSwingFrameListener;\n+import games.strategy.engine.framework.startup.mc.SetupPanelModel;\n+import games.strategy.engine.framework.startup.ui.panels.main.MainPanelBuilder;\n+import games.strategy.engine.framework.startup.ui.panels.main.game.selector.GameSelectorModel;\n+import games.strategy.engine.framework.ui.background.BackgroundTaskRunner;\n+import java.awt.event.WindowEvent;\n+import javax.swing.JFrame;\n+import javax.swing.SwingUtilities;\n+import javax.swing.WindowConstants;\n+import org.triplea.swing.JFrameBuilder;\n+\n+/** Represents the outermost JFrame, maintains the reference to it and controls access. */\n+public class MainFrame {\n+\n+  private static MainFrame instance;\n+\n+  private JFrame mainFrame;\n+\n+  private MainFrame(\n+      final SetupPanelModel setupPanelModel, final GameSelectorModel gameSelectorModel) {\n+    mainFrame =\n+        JFrameBuilder.builder()\n+            .title(\"TripleA\")\n+            .windowClosedAction(GameRunner::exitGameIfFinished)\n+            .build();\n+    BackgroundTaskRunner.setMainFrame(mainFrame);\n+\n+    LookAndFeelSwingFrameListener.register(mainFrame);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbb5da7f7909f2240ccc2bf55abd5f01fd184a9"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc3MjI2MA==", "bodyText": "Hmm I wonder if this really needs to be changed, would anything speak against the callers explicitly passing some sort of frame (not necessarily the main frame) and adding a deprecated getter for the singleton frame if needed?", "url": "https://github.com/triplea-game/triplea/pull/6001#discussion_r387772260", "createdAt": "2020-03-04T16:12:34Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/engine/framework/ui/background/BackgroundTaskRunner.java", "diffHunk": "@@ -11,17 +12,17 @@\n import javax.swing.JFrame;\n import javax.swing.SwingUtilities;\n import javax.swing.SwingWorker;\n-import org.triplea.java.Interruptibles;\n+import lombok.experimental.UtilityClass;\n import org.triplea.java.function.ThrowingSupplier;\n \n /** Provides methods for running tasks in the background to avoid blocking the UI. */\n+@UtilityClass\n public final class BackgroundTaskRunner {\n-  private final JFrame frame;\n+  private static JFrame mainFrame;\n \n-  public BackgroundTaskRunner(final JFrame frame) {\n-    checkNotNull(frame);\n-\n-    this.frame = frame;\n+  public static void setMainFrame(final JFrame mainFrame) {\n+    Preconditions.checkState(BackgroundTaskRunner.mainFrame == null);\n+    BackgroundTaskRunner.mainFrame = mainFrame;\n   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbb5da7f7909f2240ccc2bf55abd5f01fd184a9"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3711, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}