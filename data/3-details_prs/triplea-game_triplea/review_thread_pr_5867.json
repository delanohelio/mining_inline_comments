{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NjE5Nzg3", "number": 5867, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMTozMTozOVrODZsNAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwOTowNDoxMVrODZwYBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjY1MjE2OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/attachments/UnitAttachment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMTozMTozOVrOFgOM3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMTozMTozOVrOFgOM3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMzMTQyMQ==", "bodyText": "Increase unit type cap to 25.", "url": "https://github.com/triplea-game/triplea/pull/5867#discussion_r369331421", "createdAt": "2020-01-22T01:31:39Z", "author": {"login": "ron-murhammer"}, "path": "game-core/src/main/java/games/strategy/triplea/attachments/UnitAttachment.java", "diffHunk": "@@ -3267,9 +3267,9 @@ public String toStringShortAndOnlyImportantDifferences(final GamePlayer player)\n                 + (support.getAllied() && support.getEnemy()\n                     ? \" Allied & Enemy \"\n                     : (support.getAllied() ? \" Allied \" : \" Enemy \"))\n-                + (support.getUnitType().size() > 4\n+                + (support.getUnitType().size() > 25", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "283859034bb14a0a25f9e05215a4bb14248e1936"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjY1Mjc4OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/attachments/UnitAttachment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMTozMjowM1rOFgONNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMTozMjowM1rOFgONNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMzMTUwOA==", "bodyText": "Change unit delimiter to comma instead of slash as it works better with line breaks.", "url": "https://github.com/triplea-game/triplea/pull/5867#discussion_r369331508", "createdAt": "2020-01-22T01:32:03Z", "author": {"login": "ron-murhammer"}, "path": "game-core/src/main/java/games/strategy/triplea/attachments/UnitAttachment.java", "diffHunk": "@@ -3267,9 +3267,9 @@ public String toStringShortAndOnlyImportantDifferences(final GamePlayer player)\n                 + (support.getAllied() && support.getEnemy()\n                     ? \" Allied & Enemy \"\n                     : (support.getAllied() ? \" Allied \" : \" Enemy \"))\n-                + (support.getUnitType().size() > 4\n+                + (support.getUnitType().size() > 25\n                     ? \"Units\"\n-                    : MyFormatter.defaultNamedToTextList(support.getUnitType(), \"/\", false));\n+                    : MyFormatter.defaultNamedToTextList(support.getUnitType()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "283859034bb14a0a25f9e05215a4bb14248e1936"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjY1MzYzOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/delegate/EndRoundDelegate.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMTozMjo0MVrOFgONuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMTozMjo0MVrOFgONuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMzMTY0Mw==", "bodyText": "Remove unnecessary parameters.", "url": "https://github.com/triplea-game/triplea/pull/5867#discussion_r369331643", "createdAt": "2020-01-22T01:32:41Z", "author": {"login": "ron-murhammer"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/EndRoundDelegate.java", "diffHunk": "@@ -303,9 +303,7 @@ public void signalGameOver(\n       // end round delegate)\n       final String title =\n           \"Victory Achieved\"\n-              + (winners.isEmpty()\n-                  ? \"\"\n-                  : \" by \" + MyFormatter.defaultNamedToTextList(winners, \", \", false));\n+              + (winners.isEmpty() ? \"\" : \" by \" + MyFormatter.defaultNamedToTextList(winners));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "283859034bb14a0a25f9e05215a4bb14248e1936"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MjY1NDI3OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/TripleAPlayer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMTozMzowNFrOFgOOGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwMTozMzowNFrOFgOOGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTMzMTczOQ==", "bodyText": "Change to use default delimiter and method call.", "url": "https://github.com/triplea-game/triplea/pull/5867#discussion_r369331739", "createdAt": "2020-01-22T01:33:04Z", "author": {"login": "ron-murhammer"}, "path": "game-core/src/main/java/games/strategy/triplea/TripleAPlayer.java", "diffHunk": "@@ -694,7 +694,7 @@ public Territory selectTerritoryForAirToLand(\n   public boolean confirmMoveInFaceOfAa(final Collection<Territory> aaFiringTerritories) {\n     final String question =\n         \"Your units will be fired on in: \"\n-            + MyFormatter.defaultNamedToTextList(aaFiringTerritories, \" and \", false)\n+            + MyFormatter.defaultNamedToTextList(aaFiringTerritories)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "283859034bb14a0a25f9e05215a4bb14248e1936"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzMzNTczOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/formatter/MyFormatter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwOTowNDoxMVrOFgUsQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMzo1Njo1OVrOFgyPrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzNzc2Mg==", "bodyText": "I really have no clue what exact rules the logic here follows.\nThe Javadoc helps a bit, but the word wrapping makes stuff a little confusing.\nWould you mind adding a few unit tests that test the behavior of this method an test edge cases with very long words?", "url": "https://github.com/triplea-game/triplea/pull/5867#discussion_r369437762", "createdAt": "2020-01-22T09:04:11Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/formatter/MyFormatter.java", "diffHunk": "@@ -407,4 +408,38 @@ public static String integerUnitMapToString(\n     }\n     return buf.toString().replaceFirst(separator, \"\");\n   }\n+\n+  /**\n+   * Adds HTML line breaks and indentation to a string so it wraps for things like long tooltips.\n+   *\n+   * <pre>\n+   * string part 1\n+   *           string part 2\n+   *           ...\n+   *           string part X\n+   * </pre>\n+   */\n+  public static String addHtmlBreaksAndIndents(\n+      final String target, final int firstLineMaxLength, final int maxLength) {\n+    final StringBuilder sb = new StringBuilder();\n+    final BreakIterator breakIterator = BreakIterator.getLineInstance();\n+    breakIterator.setText(target);\n+    int start = breakIterator.first();\n+    int end = breakIterator.next();\n+    int lineLength = 0;\n+    int currentMaxLength = firstLineMaxLength;\n+    while (end != BreakIterator.DONE) {\n+      final String word = target.substring(start, end);\n+      lineLength = lineLength + word.length();\n+      if (lineLength >= currentMaxLength) {\n+        sb.append(\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\");\n+        lineLength = word.length() + 5; // Add 5 for the indent\n+        currentMaxLength = maxLength;\n+      }\n+      sb.append(word);\n+      start = end;\n+      end = breakIterator.next();\n+    }\n+    return sb.toString();\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "74e38f1549dd0fbdf966b207d7f28ba324ff0430"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkyMDA1OA==", "bodyText": "Yeah, I'll add a quick unit test though it follows the line breaks functionality provided by Java BreakIterator:\nhttps://docs.oracle.com/javase/8/docs/api/java/text/BreakIterator.html#getLineInstance--\nhttps://docs.oracle.com/javase/tutorial/i18n/text/line.html", "url": "https://github.com/triplea-game/triplea/pull/5867#discussion_r369920058", "createdAt": "2020-01-23T03:45:17Z", "author": {"login": "ron-murhammer"}, "path": "game-core/src/main/java/games/strategy/triplea/formatter/MyFormatter.java", "diffHunk": "@@ -407,4 +408,38 @@ public static String integerUnitMapToString(\n     }\n     return buf.toString().replaceFirst(separator, \"\");\n   }\n+\n+  /**\n+   * Adds HTML line breaks and indentation to a string so it wraps for things like long tooltips.\n+   *\n+   * <pre>\n+   * string part 1\n+   *           string part 2\n+   *           ...\n+   *           string part X\n+   * </pre>\n+   */\n+  public static String addHtmlBreaksAndIndents(\n+      final String target, final int firstLineMaxLength, final int maxLength) {\n+    final StringBuilder sb = new StringBuilder();\n+    final BreakIterator breakIterator = BreakIterator.getLineInstance();\n+    breakIterator.setText(target);\n+    int start = breakIterator.first();\n+    int end = breakIterator.next();\n+    int lineLength = 0;\n+    int currentMaxLength = firstLineMaxLength;\n+    while (end != BreakIterator.DONE) {\n+      final String word = target.substring(start, end);\n+      lineLength = lineLength + word.length();\n+      if (lineLength >= currentMaxLength) {\n+        sb.append(\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\");\n+        lineLength = word.length() + 5; // Add 5 for the indent\n+        currentMaxLength = maxLength;\n+      }\n+      sb.append(word);\n+      start = end;\n+      end = breakIterator.next();\n+    }\n+    return sb.toString();\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzNzc2Mg=="}, "originalCommit": {"oid": "74e38f1549dd0fbdf966b207d7f28ba324ff0430"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTkyMTk2NA==", "bodyText": "Added.", "url": "https://github.com/triplea-game/triplea/pull/5867#discussion_r369921964", "createdAt": "2020-01-23T03:56:59Z", "author": {"login": "ron-murhammer"}, "path": "game-core/src/main/java/games/strategy/triplea/formatter/MyFormatter.java", "diffHunk": "@@ -407,4 +408,38 @@ public static String integerUnitMapToString(\n     }\n     return buf.toString().replaceFirst(separator, \"\");\n   }\n+\n+  /**\n+   * Adds HTML line breaks and indentation to a string so it wraps for things like long tooltips.\n+   *\n+   * <pre>\n+   * string part 1\n+   *           string part 2\n+   *           ...\n+   *           string part X\n+   * </pre>\n+   */\n+  public static String addHtmlBreaksAndIndents(\n+      final String target, final int firstLineMaxLength, final int maxLength) {\n+    final StringBuilder sb = new StringBuilder();\n+    final BreakIterator breakIterator = BreakIterator.getLineInstance();\n+    breakIterator.setText(target);\n+    int start = breakIterator.first();\n+    int end = breakIterator.next();\n+    int lineLength = 0;\n+    int currentMaxLength = firstLineMaxLength;\n+    while (end != BreakIterator.DONE) {\n+      final String word = target.substring(start, end);\n+      lineLength = lineLength + word.length();\n+      if (lineLength >= currentMaxLength) {\n+        sb.append(\"<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\");\n+        lineLength = word.length() + 5; // Add 5 for the indent\n+        currentMaxLength = maxLength;\n+      }\n+      sb.append(word);\n+      start = end;\n+      end = breakIterator.next();\n+    }\n+    return sb.toString();\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQzNzc2Mg=="}, "originalCommit": {"oid": "74e38f1549dd0fbdf966b207d7f28ba324ff0430"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2573, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}