{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyMjI2OTQ5", "number": 6189, "title": "Make Territory.getUnits() return an unmodifiable list.", "bodyText": "Make Territory.getUnits() return an unmodifiable list.\nPreviously, it was returning a copy, which was actually quite expensive given how often this was called. On a Domination 1914 game, with all AIs, this took 100 seconds of CPU time (across different threads since it's used in battle sim) over a single round.\nA few places that need a copy are updated to do the copy on their side.\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[] Code Cleanup or refactor\n[] Configuration Change\n[] Problem fix:  \n[X] Other:  Optimization\nTesting\nRan an all-AI round without errors on Domination 1914 and on WW2 Global.", "createdAt": "2020-04-11T18:11:08Z", "url": "https://github.com/triplea-game/triplea/pull/6189", "merged": true, "mergeCommit": {"oid": "5719b96f762eafa13c1c40f92be14a1d8f1dd1e2"}, "closed": true, "closedAt": "2020-04-11T21:44:46Z", "author": {"login": "asvitkine"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWpuB4AH2gAyNDAyMjI2OTQ5OmRhY2ZmMWNmMDk4NWY4NzhkYjdjNzVjNjE0NGRkMWU5YjVhYzRlYTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWszlbgFqTM5MTgwMjczNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "dacff1cf0985f878db7c75c6144dd1e9b5ac4ea3", "author": {"user": {"login": "asvitkine", "name": null}}, "url": "https://github.com/triplea-game/triplea/commit/dacff1cf0985f878db7c75c6144dd1e9b5ac4ea3", "committedDate": "2020-04-11T18:08:48Z", "message": "Make Territory.getUnits() return an unmodifiable list."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzg5Mzc2", "url": "https://github.com/triplea-game/triplea/pull/6189#pullrequestreview-391789376", "createdAt": "2020-04-11T18:24:23Z", "commit": {"oid": "dacff1cf0985f878db7c75c6144dd1e9b5ac4ea3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODAyNjM0", "url": "https://github.com/triplea-game/triplea/pull/6189#pullrequestreview-391802634", "createdAt": "2020-04-11T21:42:24Z", "commit": {"oid": "dacff1cf0985f878db7c75c6144dd1e9b5ac4ea3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMTo0MjoyNFrOGEQRGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMTo0MjoyNFrOGEQRGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzExNDAwOA==", "bodyText": "The existing code seems to have been kinda not optimal, returning a copy of a list to then create a copy of a list..\nMore fundamentally, if this is a heavily invoked code path, wouldn't the better datastructure here be a Set instead of List for faster item removal?", "url": "https://github.com/triplea-game/triplea/pull/6189#discussion_r407114008", "createdAt": "2020-04-11T21:42:24Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/AbstractPlaceDelegate.java", "diffHunk": "@@ -1652,14 +1652,13 @@ private boolean getCanAllUnitsWithRequiresUnitsBePlacedCorrectly(\n     if (to == null) {\n       return new ArrayList<>();\n     }\n-    final Collection<Unit> unitsInTo = to.getUnits();\n     final Collection<Unit> unitsPlacedAlready = getAlreadyProduced(to);\n     if (Matches.territoryIsWater().test(to)) {\n       for (final Territory current : getAllProducers(to, player, null, true)) {\n         unitsPlacedAlready.addAll(getAlreadyProduced(current));\n       }\n     }\n-    final Collection<Unit> unitsAtStartOfTurnInTo = new ArrayList<>(unitsInTo);\n+    final Collection<Unit> unitsAtStartOfTurnInTo = new ArrayList<>(to.getUnits());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dacff1cf0985f878db7c75c6144dd1e9b5ac4ea3"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxODAyNzM0", "url": "https://github.com/triplea-game/triplea/pull/6189#pullrequestreview-391802734", "createdAt": "2020-04-11T21:44:35Z", "commit": {"oid": "dacff1cf0985f878db7c75c6144dd1e9b5ac4ea3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMTo0NDozNVrOGEQRxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMTo0NDozNVrOGEQRxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzExNDE4MA==", "bodyText": "side-note, not to update for this PR: I think one problem we are running into is a lack of encapsulation. We would not have to worry as much about set mutability if battleSite perhaps just handled this, eg: battleSite.getRemainingUnits, instead it seems we have relatively procedural code and battleSite is more a struct, so we run into conflicts with not trying to mutate the state of an object that is fundamentally mutable state.", "url": "https://github.com/triplea-game/triplea/pull/6189#discussion_r407114180", "createdAt": "2020-04-11T21:44:35Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/MustFightBattle.java", "diffHunk": "@@ -268,7 +268,7 @@ void addDependentUnits(final Map<Unit, Collection<Unit>> dependencies) {\n   @Override\n   public List<Unit> getRemainingAttackingUnits() {\n     final List<Unit> remaining = new ArrayList<>(attackingUnitsRetreated);\n-    final Collection<Unit> unitsLeftInTerritory = battleSite.getUnits();\n+    final Collection<Unit> unitsLeftInTerritory = new ArrayList<>(battleSite.getUnits());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dacff1cf0985f878db7c75c6144dd1e9b5ac4ea3"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3658, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}