{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NjcwNzI5", "number": 7249, "title": "Unit help - add a 'hasImage' to avoid unnecessary image rendering", "bodyText": "There are four parts to this update:\n\nSimplify UnitStatsTable\nIntroduce and use \"ImageKey\" as a parameter object in UnitImageFactory\nReplace the key for UnitImageFactory image cache with \"ImageKey\" instead of a string.\nAdd a 'hasImage' method and invoke that in UnitStatsTable. This avoids rendering images where we only need to check if they exist (and we do not use the resulting image).\n\n\nFunctional Changes\n\n[] New map or map update\n[] New Feature\n[] Feature update or enhancement\n[] Feature Removal\n[] Code Cleanup or refactor\n[] Configuration Change\n[x] Problem fix\n[] Other:   \nTesting\n\nDid some smoke testing verify that both map loaded and unit help rendered on maps:\n\nNWO\nWaW\nWofW\n\n\n\n\nScreens Shots\n\nAdditional Notes to Reviewer\n\nThis series of updates seeks to address part of: #7142 (Calculating Data on \"Unit Help\" takes extraordinarily long time).\nAfter this update I was able to load & view the \"unit help\" on WofW for the very first time ever (and not hit an out of heap error).\nRelease Note\n\nFIX|Reduce memory usage when loading the \"unit help\" menu", "createdAt": "2020-07-25T21:26:21Z", "url": "https://github.com/triplea-game/triplea/pull/7249", "merged": true, "mergeCommit": {"oid": "10311fbe1f65d3d01064c0b7f54b3f4ef463b456"}, "closed": true, "closedAt": "2020-07-29T22:48:09Z", "author": {"login": "DanVanAtta"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4bSRRAH2gAyNDU2NjcwNzI5OjYzM2ExZGE5OTExNzZmYTUyMjY4NzAzZWM2MGFiMzc4ZmZlNTlmYzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5Kd_9gFqTQ1NjIwMTA4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "633a1da991176fa52268703ec60ab378ffe59fc6", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/633a1da991176fa52268703ec60ab378ffe59fc6", "committedDate": "2020-07-25T16:33:14Z", "message": "Move method: 'getAllUnitsWithImages' from UnitType to UnitStatsTable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c1718f385c61b64198f6ea3c36deae1c764d99f", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/5c1718f385c61b64198f6ea3c36deae1c764d99f", "committedDate": "2020-07-25T16:35:14Z", "message": "Simplify, inline always true method parameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f029d7cd33c46c2921ac6daa6bc02a65a7e0512", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/5f029d7cd33c46c2921ac6daa6bc02a65a7e0512", "committedDate": "2020-07-25T16:38:32Z", "message": "Remove game-locks, redundant and reading data that does not change once GameData is loaded"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6192bc6408d8230cf345df286a62cbe423a73ac", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/b6192bc6408d8230cf345df286a62cbe423a73ac", "committedDate": "2020-07-25T16:58:00Z", "message": "Use a Set and remove unnecessary contains checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33dbe24bf38e5d116c88de0c6f4e3269c685acf9", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/33dbe24bf38e5d116c88de0c6f4e3269c685acf9", "committedDate": "2020-07-25T17:02:27Z", "message": "Fix inline of always true condition (if statement is always true!)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0980dd10da2fb161571bee702209c35a52d185ba", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/0980dd10da2fb161571bee702209c35a52d185ba", "committedDate": "2020-07-25T18:27:31Z", "message": "Simplify 'getImage' API, add overload that avoids 'false, false' parameters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9363359789d819c123ab651af0aaa289f0dd1ca", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/f9363359789d819c123ab651af0aaa289f0dd1ca", "committedDate": "2020-07-25T20:48:36Z", "message": "Unify 'getImage' APIs, use parameter object 'ImageKey'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7046d6b42921bc86ffdb5db00e8d1b6468c83bba", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/7046d6b42921bc86ffdb5db00e8d1b6468c83bba", "committedDate": "2020-07-25T20:54:24Z", "message": "Use ImageKey for key value of image cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49d4ba8bbcca09847bb54f1ee0bd7287bfbad666", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/49d4ba8bbcca09847bb54f1ee0bd7287bfbad666", "committedDate": "2020-07-25T20:59:45Z", "message": "Continue replacing method parameters with ImageKey"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bff693d37ef4511b93d398f926ad830ffb967658", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/bff693d37ef4511b93d398f926ad830ffb967658", "committedDate": "2020-07-25T21:05:33Z", "message": "FIX: Add and use 'hasImage' method when we only want to check for an image but not render it\n\nThis is a fix as the unnecessary rendering of images consumes enough resources\nwe can get an OOM when loading the Unit Help Menu."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4aa79785ddab06a8e02b63115eab89f6680228f", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/c4aa79785ddab06a8e02b63115eab89f6680228f", "committedDate": "2020-07-25T21:06:32Z", "message": "Simplify, use 'getIcon' API where possible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81e3bd845bfb456c571fef6841ab42d288eda3b4", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/81e3bd845bfb456c571fef6841ab42d288eda3b4", "committedDate": "2020-07-25T21:09:12Z", "message": "Import formatting, avoid star import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbd502c01c5b25deaf6c6e449cda25864c0bb634", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/dbd502c01c5b25deaf6c6e449cda25864c0bb634", "committedDate": "2020-07-25T21:12:20Z", "message": "Re-use MissingImageException over RuntimeException"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ab194e2a099ec3c7854f7b632e7424425a132e6", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/9ab194e2a099ec3c7854f7b632e7424425a132e6", "committedDate": "2020-07-25T21:14:27Z", "message": "Checkstyle: Remove star import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a9af2e5e0c899c7a348f42d0bc7369da92c48bc", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/1a9af2e5e0c899c7a348f42d0bc7369da92c48bc", "committedDate": "2020-07-25T21:16:57Z", "message": "Pmd fix: remove unused constructor parameter 'player'"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "406ea3685b3fa3749cb2be84e2ffa38044e4b0be", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/406ea3685b3fa3749cb2be84e2ffa38044e4b0be", "committedDate": "2020-07-25T21:20:43Z", "message": "Remove unused lombok '@Log'"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzE2OTg1", "url": "https://github.com/triplea-game/triplea/pull/7249#pullrequestreview-455316985", "createdAt": "2020-07-25T21:29:34Z", "commit": {"oid": "406ea3685b3fa3749cb2be84e2ffa38044e4b0be"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToyOTozNFrOG3HjFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMToyOTozNVrOG3HjGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0ODUzNQ==", "bodyText": "Method getPlayerUnitsWithImages has a Cognitive Complexity of 26 (exceeds 7 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/7249#discussion_r460448535", "createdAt": "2020-07-25T21:29:34Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/menubar/help/UnitStatsTable.java", "diffHunk": "@@ -2,94 +2,174 @@\n \n import games.strategy.engine.data.GameData;\n import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.NamedAttachable;\n+import games.strategy.engine.data.ProductionRule;\n import games.strategy.engine.data.ResourceCollection;\n+import games.strategy.engine.data.Territory;\n+import games.strategy.engine.data.Unit;\n import games.strategy.engine.data.UnitType;\n import games.strategy.triplea.image.UnitImageFactory;\n+import games.strategy.triplea.image.UnitImageFactory.ImageKey;\n import games.strategy.triplea.ui.TooltipProperties;\n import games.strategy.triplea.ui.UiContext;\n import games.strategy.triplea.util.TuvUtils;\n-import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.HashSet;\n+import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n+import java.util.Set;\n+import java.util.logging.Level;\n+import java.util.stream.Collectors;\n import lombok.experimental.UtilityClass;\n+import lombok.extern.java.Log;\n \n @UtilityClass\n+@Log\n public class UnitStatsTable {\n \n   public static String getUnitStatsTable(final GameData gameData, final UiContext uiContext) {\n     // html formatted string\n     final StringBuilder hints = new StringBuilder();\n     hints.append(\"<html>\");\n     hints.append(\"<head><style>th, tr{color:black}</style></head>\");\n-    try {\n-      gameData.acquireReadLock();\n-      final Map<GamePlayer, Map<UnitType, ResourceCollection>> costs =\n-          TuvUtils.getResourceCostsForTuv(gameData, true);\n-      final Map<GamePlayer, List<UnitType>> playerUnitTypes =\n-          UnitType.getAllPlayerUnitsWithImages(gameData, uiContext, true);\n-      final String color3 = \"FEECE2\";\n-      final String color2 = \"BDBDBD\";\n-      final String color1 = \"ABABAB\";\n-      int i = 0;\n-      for (final Map.Entry<GamePlayer, List<UnitType>> entry : playerUnitTypes.entrySet()) {\n-        final GamePlayer player = entry.getKey();\n-        hints.append(\"<p><table border=\\\"1\\\" bgcolor=\\\"\" + color1 + \"\\\">\");\n-        hints\n-            .append(\n-                \"<tr><th style=\\\"font-size:120%;000000\\\" bgcolor=\\\"\" + color3 + \"\\\" colspan=\\\"4\\\">\")\n-            .append(player == null ? \"NULL\" : player.getName())\n-            .append(\" Units</th></tr>\");\n-        hints\n-            .append(\"<tr\")\n-            .append(((i & 1) == 0) ? \" bgcolor=\\\"\" + color1 + \"\\\"\" : \" bgcolor=\\\"\" + color2 + \"\\\"\")\n-            .append(\"><td>Unit</td><td>Name</td><td>Cost</td><td>Tool Tip</td></tr>\");\n-        for (final UnitType ut : entry.getValue()) {\n-          if (uiContext.getMapData().shouldDrawUnit(ut.getName())) {\n-            i++;\n-            hints\n-                .append(\"<tr\")\n-                .append(\n-                    ((i & 1) == 0) ? \" bgcolor=\\\"\" + color1 + \"\\\"\" : \" bgcolor=\\\"\" + color2 + \"\\\"\")\n-                .append(\">\")\n-                .append(\"<td>\")\n-                .append(getUnitImageUrl(ut, player, uiContext))\n-                .append(\"</td>\")\n-                .append(\"<td>\")\n-                .append(ut.getName())\n-                .append(\"</td>\")\n-                .append(\"<td>\")\n-                .append(costs.get(player).get(ut).toStringForHtml())\n-                .append(\"</td>\")\n-                .append(\"<td>\")\n-                .append(TooltipProperties.getInstance().getTooltip(ut, player))\n-                .append(\"</td></tr>\");\n-          }\n+    final Map<GamePlayer, Map<UnitType, ResourceCollection>> costs =\n+        TuvUtils.getResourceCostsForTuv(gameData, true);\n+    final Map<GamePlayer, List<UnitType>> playerUnitTypes =\n+        getAllPlayerUnitsWithImages(gameData, uiContext);\n+    final String color3 = \"FEECE2\";\n+    final String color2 = \"BDBDBD\";\n+    final String color1 = \"ABABAB\";\n+    int i = 0;\n+    for (final Map.Entry<GamePlayer, List<UnitType>> entry : playerUnitTypes.entrySet()) {\n+      final GamePlayer player = entry.getKey();\n+      hints.append(\"<p><table border=\\\"1\\\" bgcolor=\\\"\" + color1 + \"\\\">\");\n+      hints\n+          .append(\n+              \"<tr><th style=\\\"font-size:120%;000000\\\" bgcolor=\\\"\" + color3 + \"\\\" colspan=\\\"4\\\">\")\n+          .append(player == null ? \"NULL\" : player.getName())\n+          .append(\" Units</th></tr>\");\n+      hints\n+          .append(\"<tr\")\n+          .append(((i & 1) == 0) ? \" bgcolor=\\\"\" + color1 + \"\\\"\" : \" bgcolor=\\\"\" + color2 + \"\\\"\")\n+          .append(\"><td>Unit</td><td>Name</td><td>Cost</td><td>Tool Tip</td></tr>\");\n+      for (final UnitType ut : entry.getValue()) {\n+        if (uiContext.getMapData().shouldDrawUnit(ut.getName())) {\n+          i++;\n+          hints\n+              .append(\"<tr\")\n+              .append(\n+                  ((i & 1) == 0) ? \" bgcolor=\\\"\" + color1 + \"\\\"\" : \" bgcolor=\\\"\" + color2 + \"\\\"\")\n+              .append(\">\")\n+              .append(\"<td>\")\n+              .append(getUnitImageUrl(ut, player, uiContext))\n+              .append(\"</td>\")\n+              .append(\"<td>\")\n+              .append(ut.getName())\n+              .append(\"</td>\")\n+              .append(\"<td>\")\n+              .append(costs.get(player).get(ut).toStringForHtml())\n+              .append(\"</td>\")\n+              .append(\"<td>\")\n+              .append(TooltipProperties.getInstance().getTooltip(ut, player))\n+              .append(\"</td></tr>\");\n         }\n-        i++;\n-        hints\n-            .append(\"<tr\")\n-            .append(((i & 1) == 0) ? \" bgcolor=\\\"\" + color1 + \"\\\"\" : \" bgcolor=\\\"\" + color2 + \"\\\"\")\n-            .append(\">\")\n-            .append(\n-                \"<td>Unit</td><td>Name</td><td>Cost</td><td>Tool Tip</td></tr></table></p><br />\");\n       }\n-    } finally {\n-      gameData.releaseReadLock();\n+      i++;\n+      hints\n+          .append(\"<tr\")\n+          .append(((i & 1) == 0) ? \" bgcolor=\\\"\" + color1 + \"\\\"\" : \" bgcolor=\\\"\" + color2 + \"\\\"\")\n+          .append(\">\")\n+          .append(\n+              \"<td>Unit</td><td>Name</td><td>Cost</td><td>Tool Tip</td></tr></table></p><br />\");\n     }\n     hints.append(\"</html>\");\n     return hints.toString();\n   }\n \n+  /** Will return a key of NULL for any units which we do not have art for. */\n+  private static Map<GamePlayer, List<UnitType>> getAllPlayerUnitsWithImages(\n+      final GameData data, final UiContext uiContext) {\n+    final Map<GamePlayer, List<UnitType>> unitTypes = new LinkedHashMap<>();\n+    for (final GamePlayer p : data.getPlayerList().getPlayers()) {\n+      unitTypes.put(p, getPlayerUnitsWithImages(p, data, uiContext));\n+    }\n+    final Set<UnitType> unitsSoFar = new HashSet<>();\n+    for (final List<UnitType> l : unitTypes.values()) {\n+      unitsSoFar.addAll(l);\n+    }\n+    final Set<UnitType> all = data.getUnitTypeList().getAllUnitTypes();\n+    all.removeAll(unitsSoFar);\n+    unitTypes.put(\n+        GamePlayer.NULL_PLAYERID,\n+        getPlayerUnitsWithImages(GamePlayer.NULL_PLAYERID, data, uiContext));\n+    unitsSoFar.addAll(unitTypes.get(GamePlayer.NULL_PLAYERID));\n+    all.removeAll(unitsSoFar);\n+    if (!all.isEmpty()) {\n+      unitTypes.put(null, new ArrayList<>(all));\n+    }\n+    return unitTypes;\n+  }\n+\n+  private static List<UnitType> getPlayerUnitsWithImages(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "406ea3685b3fa3749cb2be84e2ffa38044e4b0be"}, "originalPosition": 168}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ0ODUzNg==", "bodyText": "Method getPlayerUnitsWithImages has 36 lines of code (exceeds 30 allowed). Consider refactoring.", "url": "https://github.com/triplea-game/triplea/pull/7249#discussion_r460448536", "createdAt": "2020-07-25T21:29:35Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/menubar/help/UnitStatsTable.java", "diffHunk": "@@ -2,94 +2,174 @@\n \n import games.strategy.engine.data.GameData;\n import games.strategy.engine.data.GamePlayer;\n+import games.strategy.engine.data.NamedAttachable;\n+import games.strategy.engine.data.ProductionRule;\n import games.strategy.engine.data.ResourceCollection;\n+import games.strategy.engine.data.Territory;\n+import games.strategy.engine.data.Unit;\n import games.strategy.engine.data.UnitType;\n import games.strategy.triplea.image.UnitImageFactory;\n+import games.strategy.triplea.image.UnitImageFactory.ImageKey;\n import games.strategy.triplea.ui.TooltipProperties;\n import games.strategy.triplea.ui.UiContext;\n import games.strategy.triplea.util.TuvUtils;\n-import java.net.URL;\n+import java.util.ArrayList;\n+import java.util.Comparator;\n+import java.util.HashSet;\n+import java.util.LinkedHashMap;\n import java.util.List;\n import java.util.Map;\n-import java.util.Optional;\n+import java.util.Set;\n+import java.util.logging.Level;\n+import java.util.stream.Collectors;\n import lombok.experimental.UtilityClass;\n+import lombok.extern.java.Log;\n \n @UtilityClass\n+@Log\n public class UnitStatsTable {\n \n   public static String getUnitStatsTable(final GameData gameData, final UiContext uiContext) {\n     // html formatted string\n     final StringBuilder hints = new StringBuilder();\n     hints.append(\"<html>\");\n     hints.append(\"<head><style>th, tr{color:black}</style></head>\");\n-    try {\n-      gameData.acquireReadLock();\n-      final Map<GamePlayer, Map<UnitType, ResourceCollection>> costs =\n-          TuvUtils.getResourceCostsForTuv(gameData, true);\n-      final Map<GamePlayer, List<UnitType>> playerUnitTypes =\n-          UnitType.getAllPlayerUnitsWithImages(gameData, uiContext, true);\n-      final String color3 = \"FEECE2\";\n-      final String color2 = \"BDBDBD\";\n-      final String color1 = \"ABABAB\";\n-      int i = 0;\n-      for (final Map.Entry<GamePlayer, List<UnitType>> entry : playerUnitTypes.entrySet()) {\n-        final GamePlayer player = entry.getKey();\n-        hints.append(\"<p><table border=\\\"1\\\" bgcolor=\\\"\" + color1 + \"\\\">\");\n-        hints\n-            .append(\n-                \"<tr><th style=\\\"font-size:120%;000000\\\" bgcolor=\\\"\" + color3 + \"\\\" colspan=\\\"4\\\">\")\n-            .append(player == null ? \"NULL\" : player.getName())\n-            .append(\" Units</th></tr>\");\n-        hints\n-            .append(\"<tr\")\n-            .append(((i & 1) == 0) ? \" bgcolor=\\\"\" + color1 + \"\\\"\" : \" bgcolor=\\\"\" + color2 + \"\\\"\")\n-            .append(\"><td>Unit</td><td>Name</td><td>Cost</td><td>Tool Tip</td></tr>\");\n-        for (final UnitType ut : entry.getValue()) {\n-          if (uiContext.getMapData().shouldDrawUnit(ut.getName())) {\n-            i++;\n-            hints\n-                .append(\"<tr\")\n-                .append(\n-                    ((i & 1) == 0) ? \" bgcolor=\\\"\" + color1 + \"\\\"\" : \" bgcolor=\\\"\" + color2 + \"\\\"\")\n-                .append(\">\")\n-                .append(\"<td>\")\n-                .append(getUnitImageUrl(ut, player, uiContext))\n-                .append(\"</td>\")\n-                .append(\"<td>\")\n-                .append(ut.getName())\n-                .append(\"</td>\")\n-                .append(\"<td>\")\n-                .append(costs.get(player).get(ut).toStringForHtml())\n-                .append(\"</td>\")\n-                .append(\"<td>\")\n-                .append(TooltipProperties.getInstance().getTooltip(ut, player))\n-                .append(\"</td></tr>\");\n-          }\n+    final Map<GamePlayer, Map<UnitType, ResourceCollection>> costs =\n+        TuvUtils.getResourceCostsForTuv(gameData, true);\n+    final Map<GamePlayer, List<UnitType>> playerUnitTypes =\n+        getAllPlayerUnitsWithImages(gameData, uiContext);\n+    final String color3 = \"FEECE2\";\n+    final String color2 = \"BDBDBD\";\n+    final String color1 = \"ABABAB\";\n+    int i = 0;\n+    for (final Map.Entry<GamePlayer, List<UnitType>> entry : playerUnitTypes.entrySet()) {\n+      final GamePlayer player = entry.getKey();\n+      hints.append(\"<p><table border=\\\"1\\\" bgcolor=\\\"\" + color1 + \"\\\">\");\n+      hints\n+          .append(\n+              \"<tr><th style=\\\"font-size:120%;000000\\\" bgcolor=\\\"\" + color3 + \"\\\" colspan=\\\"4\\\">\")\n+          .append(player == null ? \"NULL\" : player.getName())\n+          .append(\" Units</th></tr>\");\n+      hints\n+          .append(\"<tr\")\n+          .append(((i & 1) == 0) ? \" bgcolor=\\\"\" + color1 + \"\\\"\" : \" bgcolor=\\\"\" + color2 + \"\\\"\")\n+          .append(\"><td>Unit</td><td>Name</td><td>Cost</td><td>Tool Tip</td></tr>\");\n+      for (final UnitType ut : entry.getValue()) {\n+        if (uiContext.getMapData().shouldDrawUnit(ut.getName())) {\n+          i++;\n+          hints\n+              .append(\"<tr\")\n+              .append(\n+                  ((i & 1) == 0) ? \" bgcolor=\\\"\" + color1 + \"\\\"\" : \" bgcolor=\\\"\" + color2 + \"\\\"\")\n+              .append(\">\")\n+              .append(\"<td>\")\n+              .append(getUnitImageUrl(ut, player, uiContext))\n+              .append(\"</td>\")\n+              .append(\"<td>\")\n+              .append(ut.getName())\n+              .append(\"</td>\")\n+              .append(\"<td>\")\n+              .append(costs.get(player).get(ut).toStringForHtml())\n+              .append(\"</td>\")\n+              .append(\"<td>\")\n+              .append(TooltipProperties.getInstance().getTooltip(ut, player))\n+              .append(\"</td></tr>\");\n         }\n-        i++;\n-        hints\n-            .append(\"<tr\")\n-            .append(((i & 1) == 0) ? \" bgcolor=\\\"\" + color1 + \"\\\"\" : \" bgcolor=\\\"\" + color2 + \"\\\"\")\n-            .append(\">\")\n-            .append(\n-                \"<td>Unit</td><td>Name</td><td>Cost</td><td>Tool Tip</td></tr></table></p><br />\");\n       }\n-    } finally {\n-      gameData.releaseReadLock();\n+      i++;\n+      hints\n+          .append(\"<tr\")\n+          .append(((i & 1) == 0) ? \" bgcolor=\\\"\" + color1 + \"\\\"\" : \" bgcolor=\\\"\" + color2 + \"\\\"\")\n+          .append(\">\")\n+          .append(\n+              \"<td>Unit</td><td>Name</td><td>Cost</td><td>Tool Tip</td></tr></table></p><br />\");\n     }\n     hints.append(\"</html>\");\n     return hints.toString();\n   }\n \n+  /** Will return a key of NULL for any units which we do not have art for. */\n+  private static Map<GamePlayer, List<UnitType>> getAllPlayerUnitsWithImages(\n+      final GameData data, final UiContext uiContext) {\n+    final Map<GamePlayer, List<UnitType>> unitTypes = new LinkedHashMap<>();\n+    for (final GamePlayer p : data.getPlayerList().getPlayers()) {\n+      unitTypes.put(p, getPlayerUnitsWithImages(p, data, uiContext));\n+    }\n+    final Set<UnitType> unitsSoFar = new HashSet<>();\n+    for (final List<UnitType> l : unitTypes.values()) {\n+      unitsSoFar.addAll(l);\n+    }\n+    final Set<UnitType> all = data.getUnitTypeList().getAllUnitTypes();\n+    all.removeAll(unitsSoFar);\n+    unitTypes.put(\n+        GamePlayer.NULL_PLAYERID,\n+        getPlayerUnitsWithImages(GamePlayer.NULL_PLAYERID, data, uiContext));\n+    unitsSoFar.addAll(unitTypes.get(GamePlayer.NULL_PLAYERID));\n+    all.removeAll(unitsSoFar);\n+    if (!all.isEmpty()) {\n+      unitTypes.put(null, new ArrayList<>(all));\n+    }\n+    return unitTypes;\n+  }\n+\n+  private static List<UnitType> getPlayerUnitsWithImages(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "406ea3685b3fa3749cb2be84e2ffa38044e4b0be"}, "originalPosition": 168}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d38d61d7552e272607f5fedc9f1c71cce2bc2e9", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/5d38d61d7552e272607f5fedc9f1c71cce2bc2e9", "committedDate": "2020-07-25T21:50:47Z", "message": "Add 'serialVersionUID' to (serializable) MissingImageException.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MzE4MDQx", "url": "https://github.com/triplea-game/triplea/pull/7249#pullrequestreview-455318041", "createdAt": "2020-07-25T21:55:35Z", "commit": {"oid": "5d38d61d7552e272607f5fedc9f1c71cce2bc2e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTo1NTozNVrOG3Hqcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQyMTo1NTozNVrOG3Hqcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDQ1MDQxOQ==", "bodyText": "Codacy found an issue: The method 'getBaseImageName()' has an NPath complexity of 102606, current threshold is 200", "url": "https://github.com/triplea-game/triplea/pull/7249#discussion_r460450419", "createdAt": "2020-07-25T21:55:35Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/image/UnitImageFactory.java", "diffHunk": "@@ -61,6 +65,113 @@ public UnitImageFactory(\n     this.mapData = mapData;\n   }\n \n+  @Value\n+  @Builder\n+  public static class ImageKey {\n+    private final GamePlayer player;\n+    private final UnitType type;\n+    private final boolean damaged;\n+    private final boolean disabled;\n+\n+    public static ImageKey of(final UnitCategory unit) {\n+      return ImageKey.builder()\n+          .player(unit.getOwner())\n+          .type(unit.getType())\n+          .damaged(unit.hasDamageOrBombingUnitDamage())\n+          .disabled(unit.getDisabled())\n+          .build();\n+    }\n+\n+    public static ImageKey of(final UnitOwner holder) {\n+      return ImageKey.builder().player(holder.getOwner()).type(holder.getType()).build();\n+    }\n+\n+    public static ImageKey of(final Unit unit) {\n+      return ImageKey.builder()\n+          .player(unit.getOwner())\n+          .type(unit.getType())\n+          .damaged(Matches.unitHasTakenSomeBombingUnitDamage().test(unit))\n+          .disabled(Matches.unitIsDisabled().test(unit))\n+          .build();\n+    }\n+\n+    public String getFullName() {\n+      return getBaseImageName() + player.getName();\n+    }\n+\n+    public String getBaseImageName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d38d61d7552e272607f5fedc9f1c71cce2bc2e9"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2MjAxMDg3", "url": "https://github.com/triplea-game/triplea/pull/7249#pullrequestreview-456201087", "createdAt": "2020-07-27T23:24:44Z", "commit": {"oid": "33dbe24bf38e5d116c88de0c6f4e3269c685acf9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMzoyNDo0NFrOG33CNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QyMzoyNDo0NFrOG33CNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTIyNjU1MQ==", "bodyText": "Could you explain why this if statement is always true?\nIf all is no subset of unitsSoFar this isn't always the case", "url": "https://github.com/triplea-game/triplea/pull/7249#discussion_r461226551", "createdAt": "2020-07-27T23:24:44Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/ui/menubar/help/UnitStatsTable.java", "diffHunk": "@@ -103,15 +103,13 @@ public static String getUnitStatsTable(final GameData gameData, final UiContext\n     }\n     final Set<UnitType> all = data.getUnitTypeList().getAllUnitTypes();\n     all.removeAll(unitsSoFar);\n+    unitTypes.put(\n+        GamePlayer.NULL_PLAYERID,\n+        getPlayerUnitsWithImages(GamePlayer.NULL_PLAYERID, data, uiContext));\n+    unitsSoFar.addAll(unitTypes.get(GamePlayer.NULL_PLAYERID));\n+    all.removeAll(unitsSoFar);\n     if (!all.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33dbe24bf38e5d116c88de0c6f4e3269c685acf9"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3242, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}