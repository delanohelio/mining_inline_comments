{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMDM2MTE2", "number": 7566, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNDozNDozOFrOEgxwCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNDozNDozOFrOEgxwCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyODA1MDAxOnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/engine/data/gameparser/GameParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNDozNDozOFrOHNv4Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNDozNDozOFrOHNv4Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE3Nzk3NA==", "bodyText": "Avoid too many return statements within this method.", "url": "https://github.com/triplea-game/triplea/pull/7566#discussion_r484177974", "createdAt": "2020-09-07T04:34:38Z", "author": {"login": "codeclimate"}, "path": "game-core/src/main/java/games/strategy/engine/data/gameparser/GameParser.java", "diffHunk": "@@ -99,10 +103,25 @@ private GameParser(\n    *\n    * @return A complete {@link GameData} instance that can be used to play the game.\n    */\n-  @Nonnull\n-  public static GameData parse(final String mapName, final InputStream stream)\n-      throws GameParseException, EngineVersionException {\n-    return parse(mapName, stream, new XmlGameElementMapper());\n+  public static Optional<GameData> parse(final URI mapUri) {\n+\n+    final Optional<InputStream> inputStream = UrlStreams.openStream(mapUri);\n+    if (inputStream.isEmpty()) {\n+      return Optional.empty();\n+    }\n+\n+    try (InputStream input = inputStream.get()) {\n+      return Optional.of(parse(mapUri.toString(), input, new XmlGameElementMapper()));\n+    } catch (final EngineVersionException e) {\n+      log.log(Level.WARNING, \"Game engine not compatible with: \" + mapUri, e);\n+      return Optional.empty();\n+    } catch (final GameParseException e) {\n+      log.log(Level.WARNING, \"Could not parse:\" + mapUri, e);\n+      return Optional.empty();\n+    } catch (final IOException e) {\n+      log.log(Level.SEVERE, \"Error opening file: \" + mapUri + \", \" + e.getMessage(), e);\n+      return Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1d7e935697675e4331b7f60da88720b51970d92"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2922, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}