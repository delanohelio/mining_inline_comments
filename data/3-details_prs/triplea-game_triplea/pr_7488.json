{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1ODU3ODQ2", "number": 7488, "title": "Speed up db rider tests", "bodyText": "Commits\ncommit d7fc365\nUpdate DropWizardExtension: clean after each test & init JDBI once  & fail if server already started\n\n1. Re-creating DB connection takes some time, if we already have a DB\nconnection (ie: jdbi != null), then do not re-created it. This is\na matter of adding an if null check around the JDBI instantiation.\n\n2. Clean DB after each test, this helps avoid FK violations between\ntests within a test class. The execution of the clean-up is quite\nfast, this makes it easier to write valid tests without slowing\nthings down noticably.\n\n3. To improve error handling and error messaging, configure the drop wizard\nextension server startup (starts server when tests execute) to fail if\nthe server is already running. Given we no longer manually start a server\nin CI, this is okay.\n\ncommit d7fc365\nSpeed up Tests: Update all @DataSet to have 'useSequenceFiltering = false'\n\nThis is a big boost in performance for DBRider tests that has more than a\nfew tables. SequenceFiltering checks the right order in which to insert tables,\npresumably by attempting permutations. By not doing this, we see pretty significant\ntest execution speed-ups.\n\nA downside to this udate is that DbRider will typically fail if we define\nmultiple tables in a single YML. The order of tables in YML does not determine\nthe order of creation in DbRider. To fix this, we can put each database table\nin its own YML and include multiple YML files per @Dataset. The order of included\nYMLs is deterministic relative to table creation and in this way we can\nensure tables are created in the right order.\n\nAdditional Notes to Reviewer\nBenchmarks\nRunning all tests of the server subprojects in IDEA:\nmaps_server:  1.8s ->  0.9ms\nlobby_server : 124s -> 9.7s\nRunning integration test in Travis:  7m 14s ->  3min 44s\n\nRelease Note", "createdAt": "2020-08-30T03:40:49Z", "url": "https://github.com/triplea-game/triplea/pull/7488", "merged": true, "mergeCommit": {"oid": "0f7ec12392cd7ba66785a6aee53507c88371f118"}, "closed": true, "closedAt": "2020-08-30T19:02:57Z", "author": {"login": "DanVanAtta"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdD1yAmAH2gAyNDc1ODU3ODQ2OmQ3ZmMzNjUzZDliZmUyN2FmNWZlY2NlY2NjNzg3M2M0OTI0Mjc0ZGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdD_tpQgFqTQ3ODIwOTQ0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d7fc3653d9bfe27af5fecceccc7873c4924274da", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/d7fc3653d9bfe27af5fecceccc7873c4924274da", "committedDate": "2020-08-30T03:38:36Z", "message": "Update DropWizardExtension: clean after each test & init JDBI once & fail if server already started\n\n1. Re-creating DB connection takes some time, if we already have a DB\nconnection (ie: jdbi != null), then do not re-created it. This is\na matter of adding an if null check around the JDBI instantiation.\n\n2. Clean DB after each test, this helps avoid FK violations between\ntests within a test class. The execution of the clean-up is quite\nfast, this makes it easier to write valid tests without slowing\nthings down noticably.\n\n3. To improve error handling and error messaging, configure the drop wizard\nextension server startup (starts server when tests execute) to fail if\nthe server is already running. Given we no longer manually start a server\nin CI, this is okay."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f1c16880d1c47fba1472ed29e1b790928ae81c3", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/7f1c16880d1c47fba1472ed29e1b790928ae81c3", "committedDate": "2020-08-30T03:38:36Z", "message": "Speed up Tests: Update all @DataSet to have 'useSequenceFiltering = false'\n\nThis is a big boost in performance for DBRider tests that has more than a\nfew tables. SequenceFiltering checks the right order in which to insert tables,\npresumably by attempting permutations. By not doing this, we see pretty significant\ntest execution speed-ups.\n\nA downside to this udate is that DbRider will typically fail if we define\nmultiple tables in a single YML. The order of tables in YML does not determine\nthe order of creation in DbRider. To fix this, we can put each database table\nin its own YML and include multiple YML files per @Dataset. The order of included\nYMLs is deterministic relative to table creation and in this way we can\nensure tables are created in the right order."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "009fc32852dfcba56bc8b334a2055f813a2a95ce", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/009fc32852dfcba56bc8b334a2055f813a2a95ce", "committedDate": "2020-08-30T03:51:40Z", "message": "Delete unused test DataSet"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f5ef5bf9df456755b351caeb0aa6d553d348426", "author": {"user": {"login": "DanVanAtta", "name": "Dan Van Atta"}}, "url": "https://github.com/triplea-game/triplea/commit/3f5ef5bf9df456755b351caeb0aa6d553d348426", "committedDate": "2020-08-30T03:52:00Z", "message": "Fix checkstyle violation (line too long and variable ordering)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MjA5NDQ3", "url": "https://github.com/triplea-game/triplea/pull/7488#pullrequestreview-478209447", "createdAt": "2020-08-30T14:44:01Z", "commit": {"oid": "3f5ef5bf9df456755b351caeb0aa6d553d348426"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToxMjo0OFrOHJjjNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMFQxNToxMjo0OFrOHJjjNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTc4MTY4NQ==", "bodyText": "Some thoughts here:\nIt seems that JUnit does not make any guarantees when an Extension is instantiated + there is no explicit closing of the DB connection in this Extension.\nI did a little bit of research and from what I was able to tell here's how it's supposed to be done:\nInstead of using static fields, the ExtensionContext provides a store to store intermediate values.\nThis would also allow to make use of the ExtensionContext.Store.CloseableResource interface to do the automated cleanup. Something like\n@Override\nvoid beforeAll(ExtensionContext context) {\n  context.getStore(ExtensionContext.Namespace.GLOBAL).getOrComputeIfAbsent(\"JDBI\", () -> new JdbiWrapper(/* create jdbi*/), JdbiWrapper .class).getJdbi();;\n}\n\n@AllArgsConstructor\n@Getter\nstatic class JdbiWrapper implements ExtensionContext.Store.CloseableResource {\n\n  private final Jdbi jdbi;\n\n  @Override\n  void close() {\n    // cleanup of jdbi\n  }\n}\nThoughts?", "url": "https://github.com/triplea-game/triplea/pull/7488#discussion_r479781685", "createdAt": "2020-08-30T15:12:48Z", "author": {"login": "RoiEXLab"}, "path": "dropwizard-common-test/src/main/java/org/triplea/dropwizard/test/DropwizardServerExtension.java", "diffHunk": "@@ -60,25 +60,24 @@\n   @Override\n   public void beforeAll(final ExtensionContext context) {\n     final DropwizardTestSupport<C> support = getSupport();\n-    try {\n-      log.info(\"Starting local server for testing..\");\n-      support.before();\n+    log.info(\"Starting local server for testing..\");\n+    support.before();\n+\n+    if (jdbi == null) {\n       jdbi =\n           Jdbi.create(getDatabase().getUrl(), getDatabase().getUser(), getDatabase().getPassword());\n       jdbi.installPlugin(new SqlObjectPlugin());\n       rowMappers().forEach(jdbi::registerRowMapper);\n-\n       log.info(\"Created JDBI connection to: {}\", getDatabase().getUrl());\n-      final String localUri = \"http://localhost:\" + support.getLocalPort();\n-      serverUri = URI.create(localUri);\n-      log.info(\"Local server URL set to: {}\", localUri);\n-    } catch (final RuntimeException e) {\n-      log.warn(\"Ignoring setup error, server already started: {}\", e.getMessage());\n     }\n+\n+    final String localUri = \"http://localhost:\" + support.getLocalPort();\n+    serverUri = URI.create(localUri);\n+    log.info(\"Local server URL set to: {}\", localUri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f5ef5bf9df456755b351caeb0aa6d553d348426"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3967, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}