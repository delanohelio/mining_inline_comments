{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0OTg1NDEx", "number": 6276, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjo0NToyOFrODy4wrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjo0ODoxNlrODy40Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Njg1MzU3OnYy", "diffSide": "RIGHT", "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/casualty/CasualtyOrderOfLosses.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjo0NToyOFrOGHMeow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QyMzozNTo1NFrOGHf27w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE5NzY2Nw==", "bodyText": "I'm seeing this code snippet an odd amount of times.\nThoughts about extracting this to a helper method?", "url": "https://github.com/triplea-game/triplea/pull/6276#discussion_r410197667", "createdAt": "2020-04-17T12:45:28Z", "author": {"login": "RoiEXLab"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/casualty/CasualtyOrderOfLosses.java", "diffHunk": "@@ -276,13 +297,13 @@ static void clearOolCache() {\n       }\n       amphibHashCode *= 31;\n       key =\n-          player.getName()\n+          parameters.player.getName()\n               + \"|\"\n-              + battlesite.getName()\n+              + parameters.battlesite.getName()\n               + \"|\"\n-              + defending\n+              + parameters.defending\n               + \"|\"\n-              + amphibious\n+              + parameters.amphibious\n               + \"|\"\n               + targetsHashCode\n               + \"|\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6144be3addcb8f054a4cc430c83771034fcb1570"}, "originalPosition": 201}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxNTE4Mw==", "bodyText": "There are more areas of copy / paste than this too, code climate does a pretty decent job pointing them out.\nThis update is just preliminary, intentionally not modifying too much of the existing code yet. It needs to be done iteratively. I'm hoping as well that this hashing function can be removed as part of one those iterations.", "url": "https://github.com/triplea-game/triplea/pull/6276#discussion_r410515183", "createdAt": "2020-04-17T23:35:54Z", "author": {"login": "DanVanAtta"}, "path": "game-core/src/main/java/games/strategy/triplea/delegate/battle/casualty/CasualtyOrderOfLosses.java", "diffHunk": "@@ -276,13 +297,13 @@ static void clearOolCache() {\n       }\n       amphibHashCode *= 31;\n       key =\n-          player.getName()\n+          parameters.player.getName()\n               + \"|\"\n-              + battlesite.getName()\n+              + parameters.battlesite.getName()\n               + \"|\"\n-              + defending\n+              + parameters.defending\n               + \"|\"\n-              + amphibious\n+              + parameters.amphibious\n               + \"|\"\n               + targetsHashCode\n               + \"|\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE5NzY2Nw=="}, "originalCommit": {"oid": "6144be3addcb8f054a4cc430c83771034fcb1570"}, "originalPosition": 201}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Njg2Mjc4OnYy", "diffSide": "RIGHT", "path": "java-extras/src/main/java/org/triplea/java/collections/IntegerMap.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjo0ODoxNlrOGHMkZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQwNzo1ODozOFrOGHpADw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE5OTE0MQ==", "bodyText": "What is this method for and why isn't the constructor enough?", "url": "https://github.com/triplea-game/triplea/pull/6276#discussion_r410199141", "createdAt": "2020-04-17T12:48:16Z", "author": {"login": "RoiEXLab"}, "path": "java-extras/src/main/java/org/triplea/java/collections/IntegerMap.java", "diffHunk": "@@ -30,6 +30,10 @@ public IntegerMap(final IntegerMap<T> integerMap) {\n     this(integerMap.mapValues);\n   }\n \n+  public static <X> IntegerMap<X> of(final Map<X, Integer> map) {\n+    return new IntegerMap<>(map);\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04c1112d6da394804c40745233589e1a17f4a2b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDUxNTYxMA==", "bodyText": "Convenience and avoids the diamond notation:\neg:\nnew IntegerMap<>(Map.of(...));\n\nvs:\nIntegerMap.of(Map.of(...))\n\nGuava does that type of think all over the place, type inference in java is much smarter about static calls than it is about new\nUltimately I think IntegerMap is possibly a pre-Java 1.5 artifact from before there were even generics, we should consider replacing IntegerMap with Map<T, Integer>.", "url": "https://github.com/triplea-game/triplea/pull/6276#discussion_r410515610", "createdAt": "2020-04-17T23:37:59Z", "author": {"login": "DanVanAtta"}, "path": "java-extras/src/main/java/org/triplea/java/collections/IntegerMap.java", "diffHunk": "@@ -30,6 +30,10 @@ public IntegerMap(final IntegerMap<T> integerMap) {\n     this(integerMap.mapValues);\n   }\n \n+  public static <X> IntegerMap<X> of(final Map<X, Integer> map) {\n+    return new IntegerMap<>(map);\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE5OTE0MQ=="}, "originalCommit": {"oid": "04c1112d6da394804c40745233589e1a17f4a2b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2NDQyNw==", "bodyText": "@DanVanAtta I should've clarified:\nI don't think I've seen this method being used inside of this PR.\nSo I suspect it's unused", "url": "https://github.com/triplea-game/triplea/pull/6276#discussion_r410664427", "createdAt": "2020-04-18T07:52:14Z", "author": {"login": "RoiEXLab"}, "path": "java-extras/src/main/java/org/triplea/java/collections/IntegerMap.java", "diffHunk": "@@ -30,6 +30,10 @@ public IntegerMap(final IntegerMap<T> integerMap) {\n     this(integerMap.mapValues);\n   }\n \n+  public static <X> IntegerMap<X> of(final Map<X, Integer> map) {\n+    return new IntegerMap<>(map);\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE5OTE0MQ=="}, "originalCommit": {"oid": "04c1112d6da394804c40745233589e1a17f4a2b4"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY2NDk3NQ==", "bodyText": "FWIW - test cases make use of it:\nhttps://github.com/triplea-game/triplea/pull/6276/files#diff-98b2c58d739b161b3aa5cc607fe5b6baR42", "url": "https://github.com/triplea-game/triplea/pull/6276#discussion_r410664975", "createdAt": "2020-04-18T07:58:38Z", "author": {"login": "DanVanAtta"}, "path": "java-extras/src/main/java/org/triplea/java/collections/IntegerMap.java", "diffHunk": "@@ -30,6 +30,10 @@ public IntegerMap(final IntegerMap<T> integerMap) {\n     this(integerMap.mapValues);\n   }\n \n+  public static <X> IntegerMap<X> of(final Map<X, Integer> map) {\n+    return new IntegerMap<>(map);\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE5OTE0MQ=="}, "originalCommit": {"oid": "04c1112d6da394804c40745233589e1a17f4a2b4"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2268, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}