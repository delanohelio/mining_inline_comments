{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4Mzc1ODc2", "number": 1430, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMToxMjozOFrOE3LYrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMToxMjo0OFrOE3LY8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjkzNjc5OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMToxMjozOFrOHwXtHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMToxMjozOFrOHwXtHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MjA3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tprivate int parseNewValue(String value) {\n          \n          \n            \n            \tprivate int processNewValue(String value) {", "url": "https://github.com/bakdata/conquery/pull/1430#discussion_r520482078", "createdAt": "2020-11-10T11:12:38Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java", "diffHunk": "@@ -49,19 +49,20 @@\n \tpublic StringParser(ParserConfig config) {\n \n \t}\n+\t\n+\tprivate int parseNewValue(String value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27b7ec8283dc6db2c098b16aab51ec0e24dce36"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2MjkzNzQ1OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMToxMjo0OFrOHwXthg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMToxMjo0OFrOHwXthg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ4MjE4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\treturn strings.computeIfAbsent(value, this::parseNewValue);\n          \n          \n            \n            \t\treturn strings.computeIfAbsent(value, this::processNewValue);", "url": "https://github.com/bakdata/conquery/pull/1430#discussion_r520482182", "createdAt": "2020-11-10T11:12:48Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/types/parser/specific/string/StringParser.java", "diffHunk": "@@ -49,19 +49,20 @@\n \tpublic StringParser(ParserConfig config) {\n \n \t}\n+\t\n+\tprivate int parseNewValue(String value) {\n \n-\t@Override\n-\tprotected Integer parseValue(String value) throws ParsingException {\n-\t\treturn strings.computeIfAbsent(value, v-> {\n-\t\t\t//new values\n+\t\t//set longest common prefix and suffix\n+\t\tprefix = Strings.commonPrefix(value, Objects.requireNonNullElse(prefix, value));\n+\t\tsuffix = Strings.commonSuffix(value, Objects.requireNonNullElse(suffix, value));\n \n-\t\t\t//set longest common prefix and suffix\n-\t\t\tprefix = Strings.commonPrefix(v, Objects.requireNonNullElse(prefix, v));\n-\t\t\tsuffix = Strings.commonSuffix(v, Objects.requireNonNullElse(suffix, v));\n+\t\t//return next id\n+\t\treturn strings.size();\n+\t}\n \n-\t\t\t//return next id\n-\t\t\treturn strings.size();\n-\t\t});\n+\t@Override\n+\tprotected Integer parseValue(String value) throws ParsingException {\n+\t\treturn strings.computeIfAbsent(value, this::parseNewValue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b27b7ec8283dc6db2c098b16aab51ec0e24dce36"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1526, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}