{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MzM2NTg4", "number": 1163, "title": "full export queries", "bodyText": "", "createdAt": "2020-04-16T12:35:24Z", "url": "https://github.com/bakdata/conquery/pull/1163", "merged": true, "mergeCommit": {"oid": "554084669a8e9d68e532f78ed07e00e4c50bc861"}, "closed": true, "closedAt": "2020-10-07T15:19:05Z", "author": {"login": "manuel-hegner"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcShTe6AH2gAyNDA0MzM2NTg4OjNlZTA0ZmRmODMzMjUyNTRmYjgzMjY3YWY0ZDFkMWFkMzg0MDIyOWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQOW5LAH2gAyNDA0MzM2NTg4OjFmYzg3NTM4NGIxNzhhNjU1ZjFhNDFlZDMwYWNmNjU3Y2RjNWE1N2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3ee04fdf83325254fb83267af4d1d1ad3840229f", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/3ee04fdf83325254fb83267af4d1d1ad3840229f", "committedDate": "2020-03-29T22:04:52Z", "message": "refactoring of SpecialDateUnion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d702cc2a9be63ad2ea860f17711a2afb71ddd3b2", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/d702cc2a9be63ad2ea860f17711a2afb71ddd3b2", "committedDate": "2020-03-30T02:33:20Z", "message": "Merge remote-tracking branch 'origin/feature/secondary_ids' into feature/long_format_queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb76f5d328a9e43e1a53058475bbe63ffbdcb3d1", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/cb76f5d328a9e43e1a53058475bbe63ffbdcb3d1", "committedDate": "2020-04-06T00:17:01Z", "message": "long format full table export with filter support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60987c297de1abbfaaa742930319f811abb78d0a", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/60987c297de1abbfaaa742930319f811abb78d0a", "committedDate": "2020-04-16T12:28:45Z", "message": "added a new pretty print representation for DateRanges"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60f8c22d57ac56ff730fc2013760760b517630f6", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/60f8c22d57ac56ff730fc2013760760b517630f6", "committedDate": "2020-04-16T12:35:44Z", "message": "Merge branch 'develop' into feature/long_format_queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04dccd59877b2d47d3a726b0e08cf5f7901ff7f6", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/04dccd59877b2d47d3a726b0e08cf5f7901ff7f6", "committedDate": "2020-04-16T12:35:45Z", "message": "Merge 60f8c22d57ac56ff730fc2013760760b517630f6 into 0a4b428deadbdb68d90328023a80674a45b42583"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0498a4fae3e59a3876befdb140e9b1c3ad5b85b2", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/0498a4fae3e59a3876befdb140e9b1c3ad5b85b2", "committedDate": "2020-04-16T12:37:29Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0ce3a87c54488cf35c35950c908b022d6358bda", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/e0ce3a87c54488cf35c35950c908b022d6358bda", "committedDate": "2020-04-16T12:50:58Z", "message": "some commenting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b36a36153d74e1135caa97a68b2d2ae942c10bd", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/8b36a36153d74e1135caa97a68b2d2ae942c10bd", "committedDate": "2020-04-16T12:51:56Z", "message": "Merge e0ce3a87c54488cf35c35950c908b022d6358bda into 0a4b428deadbdb68d90328023a80674a45b42583"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0ef9c361e4e62f2e95b260421265c27829e119a", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/b0ef9c361e4e62f2e95b260421265c27829e119a", "committedDate": "2020-04-16T12:53:45Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "656d535653f627805bc6df94d5e2947a36d87396", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/656d535653f627805bc6df94d5e2947a36d87396", "committedDate": "2020-04-30T12:59:24Z", "message": " Please enter the simpler export solution"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzNTMyOTE2", "url": "https://github.com/bakdata/conquery/pull/1163#pullrequestreview-403532916", "createdAt": "2020-04-30T13:44:04Z", "commit": {"oid": "656d535653f627805bc6df94d5e2947a36d87396"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMzo0NDowNFrOGOp7WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxMzo1NzowM1rOGOqhHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAyMDE4NQ==", "bodyText": "Ich wei\u00df nicht ob das frontend das macht aber es sollte immer ein default validity date geben.", "url": "https://github.com/bakdata/conquery/pull/1163#discussion_r418020185", "createdAt": "2020-04-30T13:44:04Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/concepts/Connector.java", "diffHunk": "@@ -154,6 +154,9 @@ public boolean validateSelectableDates(ConstraintValidatorContext context) {\n \t}\n \n \tpublic Column getValidityDateColumn(String name) {\n+\t\tif(name == null ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "656d535653f627805bc6df94d5e2947a36d87396"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAyMTkwNQ==", "bodyText": "warum machst du das hier und nicht im resolve schritt?", "url": "https://github.com/bakdata/conquery/pull/1163#discussion_r418021905", "createdAt": "2020-04-30T13:46:21Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/TableExportQuery.java", "diffHunk": "@@ -0,0 +1,115 @@\n+package com.bakdata.conquery.models.query.concept;\n+\n+import java.time.LocalDate;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.NoSuchElementException;\n+import java.util.Set;\n+import java.util.function.Consumer;\n+import java.util.stream.Collectors;\n+\n+import javax.validation.Valid;\n+import javax.validation.constraints.NotNull;\n+\n+import org.hibernate.validator.constraints.NotEmpty;\n+\n+import com.bakdata.conquery.apiv1.QueryDescription;\n+import com.bakdata.conquery.io.cps.CPSType;\n+import com.bakdata.conquery.models.common.Range;\n+import com.bakdata.conquery.models.common.daterange.CDateRange;\n+import com.bakdata.conquery.models.concepts.Concept;\n+import com.bakdata.conquery.models.externalservice.ResultType;\n+import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n+import com.bakdata.conquery.models.query.IQuery;\n+import com.bakdata.conquery.models.query.QueryPlanContext;\n+import com.bakdata.conquery.models.query.QueryResolveContext;\n+import com.bakdata.conquery.models.query.Visitable;\n+import com.bakdata.conquery.models.query.concept.filter.CQUnfilteredTable;\n+import com.bakdata.conquery.models.query.queryplan.TableExportQueryPlan;\n+import com.bakdata.conquery.models.query.queryplan.TableExportQueryPlan.TableExportConnector;\n+import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n+import com.bakdata.conquery.models.query.resultinfo.SimpleResultInfo;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+\n+import lombok.Getter;\n+import lombok.NonNull;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Setter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+\n+/**\n+ * A TABLE_EXPORT creates a full export of the given tables. It ignores selects completely.\n+ */\n+@Slf4j\n+@Getter @Setter\n+@CPSType(id = \"TABLE_EXPORT\", base = QueryDescription.class)\n+@RequiredArgsConstructor(onConstructor = @__({@JsonCreator}))\n+public class TableExportQuery extends IQuery {\n+\n+\t@Valid\n+\t@NotNull @NonNull\n+\tprotected IQuery query;\n+\t@NotNull\n+\tprivate Range<LocalDate> dateRange = Range.all();\n+\t@NotEmpty @Valid\n+\tprivate List<CQUnfilteredTable> tables;\n+\n+\t@Override\n+\tpublic TableExportQueryPlan createQueryPlan(QueryPlanContext context) {\n+\t\tfor(CQUnfilteredTable table : tables) {\n+\t\t\ttry {\n+\t\t\t\tConcept<?> concept=context.getCentralRegistry().resolve(table.getId().getConcept());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "656d535653f627805bc6df94d5e2947a36d87396"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAyNzkwNA==", "bodyText": "Da w\u00fcrde ich mir Doku w\u00fcnschen. Mir ist nicht klar wof\u00fcr genau das gut ist", "url": "https://github.com/bakdata/conquery/pull/1163#discussion_r418027904", "createdAt": "2020-04-30T13:54:22Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/TableRequiringAggregatorNode.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.bakdata.conquery.models.query.queryplan.specific;\n+\n+import java.util.Set;\n+\n+import com.bakdata.conquery.models.identifiable.ids.specific.TableId;\n+import com.bakdata.conquery.models.query.queryplan.aggregators.Aggregator;\n+import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+\n+public class TableRequiringAggregatorNode<T> extends AggregatorNode<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "656d535653f627805bc6df94d5e2947a36d87396"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAyODQwMw==", "bodyText": "hier dann auch null?", "url": "https://github.com/bakdata/conquery/pull/1163#discussion_r418028403", "createdAt": "2020-04-30T13:55:04Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/types/specific/DateRangeTypePacked.java", "diffHunk": "@@ -20,16 +20,24 @@ public DateRangeTypePacked() {\n \t}\n \t\n \t@Override\n-\tpublic Object createPrintValue(Integer value) {\n-\t\tif (value == null) {\n-\t\t\treturn \"\";\n+\tpublic CDateRange createScriptValue(Integer value) {\n+\t\tif(value == null) {\n+\t\t\treturn null;\n \t\t}\n-\n \t\treturn CDateRange.of(\n \t\t\tPackedUnsigned1616.getLeft(value)+minValue,\n \t\t\tPackedUnsigned1616.getRight(value)+minValue\n \t\t);\n \t}\n+\t\n+\t@Override\n+\tpublic Object createPrintValue(Integer value) {\n+\t\tif (value == null) {\n+\t\t\treturn \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "656d535653f627805bc6df94d5e2947a36d87396"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAyOTg1Mg==", "bodyText": "Kleiner  makel aber ich finde den Namen hier etwas tr\u00fcgerisch weil es ja kein echter Connector ist", "url": "https://github.com/bakdata/conquery/pull/1163#discussion_r418029852", "createdAt": "2020-04-30T13:57:03Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package com.bakdata.conquery.models.query.queryplan;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import com.bakdata.conquery.models.common.daterange.CDateRange;\n+import com.bakdata.conquery.models.datasets.Column;\n+import com.bakdata.conquery.models.datasets.Table;\n+import com.bakdata.conquery.models.events.Bucket;\n+import com.bakdata.conquery.models.query.QueryExecutionContext;\n+import com.bakdata.conquery.models.query.entity.Entity;\n+import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+import com.bakdata.conquery.models.query.results.EntityResult;\n+import com.bakdata.conquery.models.types.CType;\n+\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+\n+/**\n+ * The QueryPlan creates a full dump of the given table within a certain\n+ * date range.\n+ */\n+@RequiredArgsConstructor\n+public class TableExportQueryPlan implements QueryPlan {\n+\n+\tprivate final QueryPlan subPlan;\n+\tprivate final CDateRange dateRange;\n+\tprivate final List<TableExportConnector> tables;\n+\tprivate final int totalColumns;\n+\t\n+\t@Override\n+\tpublic QueryPlan clone(CloneContext ctx) {\n+\t\treturn new TableExportQueryPlan(subPlan.clone(ctx), dateRange, tables, totalColumns);\n+\t}\n+\n+\t@Override\n+\tpublic boolean isOfInterest(Entity entity) {\n+\t\treturn subPlan.isOfInterest(entity);\n+\t}\n+\n+\t@Override\n+\tpublic EntityResult execute(QueryExecutionContext ctx, Entity entity) {\n+\t\tEntityResult result = subPlan.execute(ctx, entity);\n+\t\t\n+\t\tif(!result.isContained()) {\n+\t\t\treturn result;\n+\t\t}\n+\t\t\n+\t\tif (tables.isEmpty()) {\n+\t\t\treturn EntityResult.notContained();\n+\t\t}\n+\n+\t\t\n+\t\tList<Object[]> results = new ArrayList<>();\n+\t\tfor(TableExportConnector tec : tables) {\n+\t\t\tfor(Bucket bucket : entity.getBucket(tec.getTable().getId())) {\n+\t\t\t\tint localEntity = bucket.toLocal(entity.getId());\n+\t\t\t\tif(bucket.containsLocalEntity(localEntity)) {\n+\t\t\t\t\tint start = bucket.getFirstEventOfLocal(localEntity);\n+\t\t\t\t\tint end = bucket.getLastEventOfLocal(localEntity);\n+\t\t\t\t\tfor(int event = start; event < end ; event++) {\n+\t\t\t\t\t\tif (bucket.eventIsContainedIn(event, tec.getValidityDateColumn(), dateRange)) {\n+\t\t\t\t\t\t\tObject[] entry = new Object[totalColumns];\n+\t\t\t\t\t\t\tfor(int col = 0; col < tec.getTable().getColumns().length; col++) {\n+\t\t\t\t\t\t\t\tCType type = tec.getTable().getColumns()[col].getTypeFor(bucket);\n+\t\n+\t\t\t\t\t\t\t\t// depending on context use pretty printing or script value\n+\t\t\t\t\t\t\t\tentry[col+tec.getColumnOffset()] = ctx.isPrettyPrint()\n+\t\t\t\t\t\t\t\t\t? type.createPrintValue(bucket.getRaw(event, col))\n+\t\t\t\t\t\t\t\t\t: type.createScriptValue(bucket.getRaw(event, col));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tresults.add(entry);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t\t//pivot the last column\n+\t\treturn EntityResult.multilineOf(\n+\t\t\tresult.asContained().getEntityId(),\n+\t\t\tresults\n+\t\t);\n+\t}\n+\t\n+\t@RequiredArgsConstructor\n+\t@Getter\n+\tpublic static class TableExportConnector {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "656d535653f627805bc6df94d5e2947a36d87396"}, "originalPosition": 87}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2348f6ebf90874c3fe75b4678b38046cdbd55bb", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/b2348f6ebf90874c3fe75b4678b38046cdbd55bb", "committedDate": "2020-04-30T14:10:16Z", "message": "added missing files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfddad2d710885b7db05f63a473bef49fe5d94ef", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/cfddad2d710885b7db05f63a473bef49fe5d94ef", "committedDate": "2020-04-30T14:12:05Z", "message": "Merge b2348f6ebf90874c3fe75b4678b38046cdbd55bb into d80368c1e0fa3665f5b044a84fd7406cf815c0d5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8489bc7954c0001a99408f917c155d7c7f81fc5a", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/8489bc7954c0001a99408f917c155d7c7f81fc5a", "committedDate": "2020-04-30T14:14:04Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "034e76a84890aafada921398cd62e0553064610c", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/034e76a84890aafada921398cd62e0553064610c", "committedDate": "2020-04-30T14:46:23Z", "message": "fixed error in export code / header generation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c26615f7dec936a5fbf1d777cfdfd87a187c2de", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/4c26615f7dec936a5fbf1d777cfdfd87a187c2de", "committedDate": "2020-04-30T14:47:34Z", "message": "Merge 034e76a84890aafada921398cd62e0553064610c into d80368c1e0fa3665f5b044a84fd7406cf815c0d5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60b8a894b038e7d55f2ccde441aed6d6b823537f", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/60b8a894b038e7d55f2ccde441aed6d6b823537f", "committedDate": "2020-04-30T14:49:05Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0823fc02fdde7e1c7865532120e44da9dcdf12ec", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/0823fc02fdde7e1c7865532120e44da9dcdf12ec", "committedDate": "2020-04-30T14:55:37Z", "message": "small refactorings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe58428255ffac172c7ba21724971df0e4f2b3c0", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/fe58428255ffac172c7ba21724971df0e4f2b3c0", "committedDate": "2020-04-30T14:56:18Z", "message": "Merge 0823fc02fdde7e1c7865532120e44da9dcdf12ec into d80368c1e0fa3665f5b044a84fd7406cf815c0d5"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c0a079498a3b138e24088572a1e486b7dfac6fd", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/5c0a079498a3b138e24088572a1e486b7dfac6fd", "committedDate": "2020-04-30T14:58:04Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3039fcf648ae0bab129050644b5d628a30dbbfb0", "author": {"user": {"login": "manuel-hegner", "name": "Manuel Hegner"}}, "url": "https://github.com/bakdata/conquery/commit/3039fcf648ae0bab129050644b5d628a30dbbfb0", "committedDate": "2020-04-30T14:59:43Z", "message": "Merge branch 'develop' into feature/long_format_queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb9188b0c971a26243f3f005946654177ab2429b", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/fb9188b0c971a26243f3f005946654177ab2429b", "committedDate": "2020-09-30T12:11:12Z", "message": "Merge remote-tracking branch 'origin/develop' into feature/long_format_queries\n\n# Conflicts:\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQExternalResolved.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/aggregators/specific/SpecialDateUnion.java\n#\tdocs/REST API JSONs.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13143176c96cd01b9c28e1557b9a9997ffa38871", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/13143176c96cd01b9c28e1557b9a9997ffa38871", "committedDate": "2020-09-30T12:19:00Z", "message": "fix test having wrong column definitions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d88c88a5c529bc8ebb5f116b308742f0ac55f90", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/4d88c88a5c529bc8ebb5f116b308742f0ac55f90", "committedDate": "2020-09-30T12:21:10Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3b3cf9c637f94671a432501f0caa5f338f69bab", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/e3b3cf9c637f94671a432501f0caa5f338f69bab", "committedDate": "2020-09-30T12:27:16Z", "message": "cleanup code for TableExportQueryPlan.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5750252d13f131f35e13788a26972dd37a996910", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/5750252d13f131f35e13788a26972dd37a996910", "committedDate": "2020-09-30T12:29:43Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NDEwOTgw", "url": "https://github.com/bakdata/conquery/pull/1163#pullrequestreview-499410980", "createdAt": "2020-09-30T13:09:48Z", "commit": {"oid": "5750252d13f131f35e13788a26972dd37a996910"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzowOTo0OFrOHacvKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzoyNDo0NFrOHadXHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ5NTg1MA==", "bodyText": "Ist der Umweg hier unbedingt gewollt, dass ein Connector \u00fcbergeben wird. W\u00fcrde es nicht auch schon eine TableId tun und man w\u00fcrde Concepte und Connectoren ganz raus lassen?", "url": "https://github.com/bakdata/conquery/pull/1163#discussion_r497495850", "createdAt": "2020-09-30T13:09:48Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/TableExportQuery.java", "diffHunk": "@@ -0,0 +1,130 @@\n+package com.bakdata.conquery.models.query.concept;\n+\n+import java.time.LocalDate;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.NoSuchElementException;\n+import java.util.Set;\n+import java.util.function.Consumer;\n+\n+import javax.validation.Valid;\n+import javax.validation.constraints.NotNull;\n+\n+import com.bakdata.conquery.apiv1.QueryDescription;\n+import com.bakdata.conquery.io.cps.CPSType;\n+import com.bakdata.conquery.models.common.Range;\n+import com.bakdata.conquery.models.common.daterange.CDateRange;\n+import com.bakdata.conquery.models.concepts.Concept;\n+import com.bakdata.conquery.models.concepts.Connector;\n+import com.bakdata.conquery.models.datasets.Column;\n+import com.bakdata.conquery.models.externalservice.ResultType;\n+import com.bakdata.conquery.models.identifiable.ids.specific.ColumnId;\n+import com.bakdata.conquery.models.identifiable.ids.specific.ManagedExecutionId;\n+import com.bakdata.conquery.models.query.IQuery;\n+import com.bakdata.conquery.models.query.QueryPlanContext;\n+import com.bakdata.conquery.models.query.QueryResolveContext;\n+import com.bakdata.conquery.models.query.Visitable;\n+import com.bakdata.conquery.models.query.concept.filter.CQUnfilteredTable;\n+import com.bakdata.conquery.models.query.queryplan.TableExportQueryPlan;\n+import com.bakdata.conquery.models.query.queryplan.TableExportQueryPlan.TableExportDescription;\n+import com.bakdata.conquery.models.query.resultinfo.ResultInfoCollector;\n+import com.bakdata.conquery.models.query.resultinfo.SimpleResultInfo;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import lombok.Getter;\n+import lombok.NonNull;\n+import lombok.RequiredArgsConstructor;\n+import lombok.Setter;\n+import lombok.extern.slf4j.Slf4j;\n+import org.hibernate.validator.constraints.NotEmpty;\n+\n+\n+/**\n+ * A TABLE_EXPORT creates a full export of the given tables. It ignores selects completely.\n+ */\n+@Slf4j\n+@Getter @Setter\n+@CPSType(id = \"TABLE_EXPORT\", base = QueryDescription.class)\n+@RequiredArgsConstructor(onConstructor = @__({@JsonCreator}))\n+public class TableExportQuery extends IQuery {\n+\n+\t@Valid\n+\t@NotNull @NonNull\n+\tprotected IQuery query;\n+\t@NotNull\n+\tprivate Range<LocalDate> dateRange = Range.all();\n+\t@NotEmpty @Valid\n+\tprivate List<CQUnfilteredTable> tables;\n+\tprivate List<ColumnId> resolvedHeader;  \n+\n+\t@Override\n+\tpublic TableExportQueryPlan createQueryPlan(QueryPlanContext context) {\n+\t\tint totalColumns = 0;\n+\t\tList<TableExportDescription> resolvedConnectors = new ArrayList<>();\n+\t\tfor(CQUnfilteredTable table : tables) {\n+\t\t\ttry {\n+\t\t\t\tConcept<?> concept = context.getCentralRegistry().resolve(table.getId().getConcept());\n+\t\t\t\tConnector connector = concept.getConnectorByName(table.getId().getConnector());\n+\t\t\t\tresolvedConnectors.add(\n+\t\t\t\t\tnew TableExportDescription(\n+\t\t\t\t\t\tconnector.getTable(),\n+\t\t\t\t\t\tconnector.getValidityDateColumn(table.selectedValidityDate()),\n+\t\t\t\t\t\ttotalColumns\n+\t\t\t\t\t)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5750252d13f131f35e13788a26972dd37a996910"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUwMzU4Ng==", "bodyText": "Das f\u00fchrt in 'Connector::getValidityDateColumn' zu einer NoSuchElementException. Soweit muss es ja nicht kommen.", "url": "https://github.com/bakdata/conquery/pull/1163#discussion_r497503586", "createdAt": "2020-09-30T13:21:14Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/filter/CQUnfilteredTable.java", "diffHunk": "@@ -0,0 +1,42 @@\n+package com.bakdata.conquery.models.query.concept.filter;\n+\n+import javax.validation.Valid;\n+import javax.validation.constraints.NotNull;\n+\n+import com.bakdata.conquery.models.concepts.Connector;\n+import com.bakdata.conquery.models.identifiable.ids.specific.ConnectorId;\n+import com.bakdata.conquery.models.identifiable.ids.specific.ValidityDateId;\n+import com.fasterxml.jackson.annotation.JsonIgnore;\n+\n+import lombok.AllArgsConstructor;\n+import lombok.Data;\n+import lombok.Getter;\n+import lombok.NoArgsConstructor;\n+import lombok.Setter;\n+\n+@Getter @Setter\n+public class CQUnfilteredTable {\n+\t@Valid @NotNull\n+\tprivate ConnectorId id;\n+\t@Valid\n+\tprivate ValidityDateColumn dateColumn;\n+\n+\t@JsonIgnore\n+\tprivate Connector resolvedConnector;\n+\t\n+\t@Data @AllArgsConstructor @NoArgsConstructor\n+\tpublic static class ValidityDateColumn {\n+\t\tprivate ValidityDateId value;\n+\t\t\n+\t\tpublic ValidityDateColumn(String id) {\n+\t\t\tthis(ValidityDateId.Parser.INSTANCE.parse(id));\n+\t\t}\n+\t}\n+\n+\tpublic String selectedValidityDate() {\n+\t\tif(dateColumn == null || dateColumn.getValue() == null) {\n+\t\t\treturn null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5750252d13f131f35e13788a26972dd37a996910"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUwNjA3OQ==", "bodyText": "@awildturtok gab es nicht einen Weg die localEntities hier rauszuhalten?", "url": "https://github.com/bakdata/conquery/pull/1163#discussion_r497506079", "createdAt": "2020-09-30T13:24:44Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/TableExportQueryPlan.java", "diffHunk": "@@ -0,0 +1,106 @@\n+package com.bakdata.conquery.models.query.queryplan;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import com.bakdata.conquery.models.common.daterange.CDateRange;\n+import com.bakdata.conquery.models.datasets.Column;\n+import com.bakdata.conquery.models.datasets.Table;\n+import com.bakdata.conquery.models.events.Bucket;\n+import com.bakdata.conquery.models.query.QueryExecutionContext;\n+import com.bakdata.conquery.models.query.entity.Entity;\n+import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+import com.bakdata.conquery.models.query.results.EntityResult;\n+import com.bakdata.conquery.models.types.CType;\n+import lombok.Getter;\n+import lombok.RequiredArgsConstructor;\n+\n+/**\n+ * The QueryPlan creates a full dump of the given table within a certain\n+ * date range.\n+ */\n+@RequiredArgsConstructor\n+public class TableExportQueryPlan implements QueryPlan {\n+\n+\tprivate final QueryPlan subPlan;\n+\tprivate final CDateRange dateRange;\n+\tprivate final List<TableExportDescription> tables;\n+\tprivate final int totalColumns;\n+\t\n+\t@Override\n+\tpublic QueryPlan clone(CloneContext ctx) {\n+\t\treturn new TableExportQueryPlan(subPlan.clone(ctx), dateRange, tables, totalColumns);\n+\t}\n+\n+\t@Override\n+\tpublic boolean isOfInterest(Entity entity) {\n+\t\treturn subPlan.isOfInterest(entity);\n+\t}\n+\n+\t@Override\n+\tpublic EntityResult execute(QueryExecutionContext ctx, Entity entity) {\n+\t\tEntityResult result = subPlan.execute(ctx, entity);\n+\t\t\n+\t\tif(!result.isContained()) {\n+\t\t\treturn result;\n+\t\t}\n+\t\t\n+\t\tif (tables.isEmpty()) {\n+\t\t\treturn EntityResult.notContained();\n+\t\t}\n+\n+\t\t\n+\t\tList<Object[]> results = new ArrayList<>();\n+\t\tfor(TableExportDescription exportDescription : tables) {\n+\t\t\tfor(Bucket bucket : entity.getBucket(exportDescription.getTable().getId())) {\n+\n+\t\t\t\tint localEntity = bucket.toLocal(entity.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5750252d13f131f35e13788a26972dd37a996910"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc46141c93a8e64d85dccdbbf4b6ca0b999468ea", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/dc46141c93a8e64d85dccdbbf4b6ca0b999468ea", "committedDate": "2020-10-01T12:30:46Z", "message": "Cleanup of CQTable CQUnfilteredTable; not all inehritance is good"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "987991bfe4df1310586f134c59a311068e0bd6eb", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/987991bfe4df1310586f134c59a311068e0bd6eb", "committedDate": "2020-10-02T11:42:27Z", "message": "Merge branch 'develop' into feature/long_format_queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2e2481dfe83bdfc34af1f01784ea049745be54e", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/b2e2481dfe83bdfc34af1f01784ea049745be54e", "committedDate": "2020-10-02T11:47:14Z", "message": "fix non null check in CQConcept.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31b2cf941225b45eb80636e61c1762aa63746238", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/31b2cf941225b45eb80636e61c1762aa63746238", "committedDate": "2020-10-02T11:55:45Z", "message": "fix some method usages and Class name dupes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d5863384a83e20c15dc7460b662d76e2b052a31", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/3d5863384a83e20c15dc7460b662d76e2b052a31", "committedDate": "2020-10-02T11:57:56Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaef1568830c887a5aa6083cdef31ab7ce682931", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/eaef1568830c887a5aa6083cdef31ab7ce682931", "committedDate": "2020-10-05T12:40:06Z", "message": "add missing constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a72dd4fdefc473846f54fabc5a449976569acfb7", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/a72dd4fdefc473846f54fabc5a449976569acfb7", "committedDate": "2020-10-05T12:42:26Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa06cb5f113251cb1ae135bbb800375e01bb34b6", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/fa06cb5f113251cb1ae135bbb800375e01bb34b6", "committedDate": "2020-10-05T13:03:04Z", "message": "fix dateColumn usgae"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTY4ODQy", "url": "https://github.com/bakdata/conquery/pull/1163#pullrequestreview-503968842", "createdAt": "2020-10-07T14:53:52Z", "commit": {"oid": "fa06cb5f113251cb1ae135bbb800375e01bb34b6"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf2108b394fb5d1137858e370079a74dbfdd1675", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/cf2108b394fb5d1137858e370079a74dbfdd1675", "committedDate": "2020-10-07T14:55:45Z", "message": "Merge branch 'develop' into feature/long_format_queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76f69b9dc933a659ebd1f6072e9ca8f0468b0cb1", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/76f69b9dc933a659ebd1f6072e9ca8f0468b0cb1", "committedDate": "2020-10-07T15:01:17Z", "message": "Merge branch 'develop' into feature/long_format_queries"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fc875384b178a655f1a41ed30acf657cdc5a57b", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/1fc875384b178a655f1a41ed30acf657cdc5a57b", "committedDate": "2020-10-07T15:03:42Z", "message": "automatic update to docs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4586, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}