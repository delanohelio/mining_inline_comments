{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2ODcwMzM1", "number": 1190, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0NjowMVrOD821kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo1NzowNVrOD83EeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTM5NjAyOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/api/description/FERoot.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0NjowMVrOGWDVmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo0NjowMVrOGWDVmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc3NjUzNw==", "bodyText": "Warum nicht die Ids?", "url": "https://github.com/bakdata/conquery/pull/1190#discussion_r425776537", "createdAt": "2020-05-15T12:46:01Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/api/description/FERoot.java", "diffHunk": "@@ -12,5 +16,6 @@\n  */\n @Getter\n public class FERoot {\n+\tprivate Set<String> secondaryIds = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b068cbc8c54330e6fb9b53d2847b43c25de3820"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTQzMjA1OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/SecondaryIdQueryPlan.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo1NjoyNlrOGWDsIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo1NjoyNlrOGWDsIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc4MjMwNg==", "bodyText": "Kannst du die tables vorher auf trennen und dann die schleifen machen? Der Code macht schon so viel, da muss das nicht noch mit drin rumschwirren", "url": "https://github.com/bakdata/conquery/pull/1190#discussion_r425782306", "createdAt": "2020-05-15T12:56:26Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/SecondaryIdQueryPlan.java", "diffHunk": "@@ -74,32 +72,24 @@ public EntityResult execute(QueryExecutionContext ctx, Entity entity) {\n \t\t\treturn EntityResult.notContained();\n \t\t}\n \n+\t\tList<Table> tablesWithoutSecondary = new ArrayList<>();\n+\t\t//first execute only tables with secondaryIds\n \t\tfor(Table currentTable : query.getRequiredTables()) {\n-\t\t\tcurrentSecondaryIdColumn = findSecondaryIdColumn(currentTable);\n-\t\t\tnextTable(ctx, currentTable);\n-\t\t\tfor(Bucket bucket : entity.getBucket(currentTable.getId())) {\n-\t\t\t\tint localEntity = bucket.toLocal(entity.getId());\n-\t\t\t\tAStringType<?> secondaryIdType = (AStringType<?>)currentSecondaryIdColumn.getTypeFor(bucket);\n-\t\t\t\tnextBlock(bucket);\n-\t\t\t\tif(bucket.containsLocalEntity(localEntity)) {\n-\t\t\t\t\tif(isOfInterest(bucket)) {\n-\t\t\t\t\t\tint start = bucket.getFirstEventOfLocal(localEntity);\n-\t\t\t\t\t\tint end = bucket.getLastEventOfLocal(localEntity);\n-\t\t\t\t\t\tfor(int event = start; event < end ; event++) {\n-\t\t\t\t\t\t\t//we ignore events with no value in the secondaryIdColumn\n-\t\t\t\t\t\t\tif(bucket.has(event, currentSecondaryIdColumn)) {\n-\t\t\t\t\t\t\t\tString key = secondaryIdType.getElement(bucket.getString(event, currentSecondaryIdColumn));\n-\t\t\t\t\t\t\t\tchildPerKey\n-\t\t\t\t\t\t\t\t\t.computeIfAbsent(key, k->this.createChild(k, ctx, bucket))\n-\t\t\t\t\t\t\t\t\t.nextEvent(bucket, event);\n-\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n+\t\t\tColumn secondaryIdColumn = findSecondaryIdColumn(currentTable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b068cbc8c54330e6fb9b53d2847b43c25de3820"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTQzNDE3OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/SecondaryIdQueryPlan.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo1NzowNVrOGWDthA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMjo1NzowNVrOGWDthA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTc4MjY2MA==", "bodyText": "Bitte unterschiedliche namen anstatt overloading", "url": "https://github.com/bakdata/conquery/pull/1190#discussion_r425782660", "createdAt": "2020-05-15T12:57:05Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/SecondaryIdQueryPlan.java", "diffHunk": "@@ -112,6 +102,50 @@ public EntityResult execute(QueryExecutionContext ctx, Entity entity) {\n \t\treturn EntityResult.multilineOf(entity.getId(), result);\n \t}\n \n+\tprivate void execute(QueryExecutionContext ctx, Entity entity, Column secondaryIdColumn) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b068cbc8c54330e6fb9b53d2847b43c25de3820"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1397, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}