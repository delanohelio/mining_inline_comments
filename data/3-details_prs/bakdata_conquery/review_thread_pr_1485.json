{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MTI2NTA2", "number": 1485, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzoxNjozN1rOFFlRTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNTo0MTo1N1rOFONFaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzk3ODM4OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/io/jackson/serializer/NsIdReferenceDeserializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMzoxNjozN1rOIGKXIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxNDowODozM1rOISDBpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMzMjEzMQ==", "bodyText": "Ist das aus dem Debugging? Kann idResolveContext  null sein?", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r543332131", "createdAt": "2020-12-15T13:16:37Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/io/jackson/serializer/NsIdReferenceDeserializer.java", "diffHunk": "@@ -57,8 +57,9 @@ public T deserialize(JsonParser parser, DeserializationContext ctxt) throws IOEx\n \t\t\t\telse {\n \t\t\t\t\tid = idParser.parse(text);\n \t\t\t\t}\n-\t\t\t\t\n-\t\t\t\tOptional<T> result = IdResolveContext.get(ctxt).getOptional(id);\n+\n+\t\t\t\tfinal IdResolveContext idResolveContext = IdResolveContext.get(ctxt);\n+\t\t\t\tOptional<T> result = idResolveContext.getOptional(id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04a00bf6cd3a25b30fbeeb48bb485ec7e6c2ae67"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTc5NDg1Mw==", "bodyText": "Der Change war nur zum debugging da, w\u00fcrde ihn aber lassen, weil es manchmal gut ist zu sehen, welchen Kontext man genau bekommt.", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555794853", "createdAt": "2021-01-12T14:08:33Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/io/jackson/serializer/NsIdReferenceDeserializer.java", "diffHunk": "@@ -57,8 +57,9 @@ public T deserialize(JsonParser parser, DeserializationContext ctxt) throws IOEx\n \t\t\t\telse {\n \t\t\t\t\tid = idParser.parse(text);\n \t\t\t\t}\n-\t\t\t\t\n-\t\t\t\tOptional<T> result = IdResolveContext.get(ctxt).getOptional(id);\n+\n+\t\t\t\tfinal IdResolveContext idResolveContext = IdResolveContext.get(ctxt);\n+\t\t\t\tOptional<T> result = idResolveContext.getOptional(id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzMzMjEzMQ=="}, "originalCommit": {"oid": "04a00bf6cd3a25b30fbeeb48bb485ec7e6c2ae67"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTAxODI5OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/apiv1/StoredQueriesProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNjoyNjoyOFrOIRdNZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNjoyNjoyOFrOIRdNZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE3NTI2OA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555175268", "createdAt": "2021-01-11T16:26:28Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/apiv1/StoredQueriesProcessor.java", "diffHunk": "@@ -47,7 +48,7 @@\n \t\treturn allQueries\n \t\t\t.stream()\n \t\t\t// to exclude subtypes from somewhere else\n-\t\t\t.filter(q -> (q instanceof ManagedQuery) && ((ManagedQuery) q).getQuery().getClass().equals(ConceptQuery.class))\n+\t\t\t.filter(StoredQueriesProcessor::canFrontendRender)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTEwODEzOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/messages/namespaces/specific/RemoveSecondaryId.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNjo0Njo0NVrOIReEJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQxNDowNzoxOVrOISC-VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE4OTI4NQ==", "bodyText": "Willst du die Synchronisierung nicht im Worker machen? Sonst k\u00f6nnten Add und Remove ineinander greifen.\nAuch erzeugt context.getStorage() momentan immer ein neues Object", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555189285", "createdAt": "2021-01-11T16:46:45Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/messages/namespaces/specific/RemoveSecondaryId.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.bakdata.conquery.models.messages.namespaces.specific;\n+\n+import com.bakdata.conquery.io.cps.CPSType;\n+import com.bakdata.conquery.models.identifiable.ids.specific.SecondaryIdDescriptionId;\n+import com.bakdata.conquery.models.messages.namespaces.NamespacedMessage;\n+import com.bakdata.conquery.models.messages.namespaces.WorkerMessage;\n+import com.bakdata.conquery.models.worker.Worker;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@CPSType(id=\"REMOVE_SECONDARYID\", base=NamespacedMessage.class) @Slf4j\n+@AllArgsConstructor(onConstructor_=@JsonCreator) @Getter @Setter @ToString(callSuper=true)\n+public class RemoveSecondaryId extends WorkerMessage.Slow {\n+\n+\tprivate SecondaryIdDescriptionId secondaryId;\n+\n+\t@Override\n+\tpublic void react(Worker context) throws Exception {\n+\t\tlog.info(\"Received Deletion of SecondaryId {}\", secondaryId);\n+\t\tsynchronized (context.getStorage()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTc5NDAwNA==", "bodyText": "habe jetzt die Methode im zugrunde liegenden Storage synchronized gemacht, macht Sinn!", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555794004", "createdAt": "2021-01-12T14:07:19Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/messages/namespaces/specific/RemoveSecondaryId.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.bakdata.conquery.models.messages.namespaces.specific;\n+\n+import com.bakdata.conquery.io.cps.CPSType;\n+import com.bakdata.conquery.models.identifiable.ids.specific.SecondaryIdDescriptionId;\n+import com.bakdata.conquery.models.messages.namespaces.NamespacedMessage;\n+import com.bakdata.conquery.models.messages.namespaces.WorkerMessage;\n+import com.bakdata.conquery.models.worker.Worker;\n+import com.fasterxml.jackson.annotation.JsonCreator;\n+import lombok.AllArgsConstructor;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.ToString;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@CPSType(id=\"REMOVE_SECONDARYID\", base=NamespacedMessage.class) @Slf4j\n+@AllArgsConstructor(onConstructor_=@JsonCreator) @Getter @Setter @ToString(callSuper=true)\n+public class RemoveSecondaryId extends WorkerMessage.Slow {\n+\n+\tprivate SecondaryIdDescriptionId secondaryId;\n+\n+\t@Override\n+\tpublic void react(Worker context) throws Exception {\n+\t\tlog.info(\"Received Deletion of SecondaryId {}\", secondaryId);\n+\t\tsynchronized (context.getStorage()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE4OTI4NQ=="}, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTExNzA4OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/query/IQuery.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNjo0ODo0MlrOIReJZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwNjowMTo1M1rOISgr0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5MDYyOQ==", "bodyText": "Sieht static aus", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555190629", "createdAt": "2021-01-11T16:48:42Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/IQuery.java", "diffHunk": "@@ -62,4 +65,7 @@ private static DatasetId getDataset(IQuery query, DatasetId alternativeDataset)\n \t\treturn dataset;\n \t}\n \n+\tpublic long countResults(List<EntityResult> results) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU4NzYxMg==", "bodyText": "jein, das ist eine klassen methode, damit es beim addResult gez\u00e4hlt werden kann spezifisch der ausgef\u00fchrten Query, ohne sich die Klasse anschauen zu m\u00fcssen o\u00e4", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555587612", "createdAt": "2021-01-12T08:24:04Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/IQuery.java", "diffHunk": "@@ -62,4 +65,7 @@ private static DatasetId getDataset(IQuery query, DatasetId alternativeDataset)\n \t\treturn dataset;\n \t}\n \n+\tpublic long countResults(List<EntityResult> results) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5MDYyOQ=="}, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjI4MDc4Ng==", "bodyText": "Ah okay, dann bitte Doku ran machen.", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r556280786", "createdAt": "2021-01-13T06:01:53Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/IQuery.java", "diffHunk": "@@ -62,4 +65,7 @@ private static DatasetId getDataset(IQuery query, DatasetId alternativeDataset)\n \t\treturn dataset;\n \t}\n \n+\tpublic long countResults(List<EntityResult> results) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5MDYyOQ=="}, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTE2NzY4OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/SecondaryIdQuery.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNzowMDowNFrOIReoNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwODoyMjoyNFrOIR2UUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5ODUxNg==", "bodyText": "Ist im Frontend eine Anpassung der Ergebnisanzeige eingeplant? Hier werden ja jetzt keine Versicherten mehr ausgegeben.", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555198516", "createdAt": "2021-01-11T17:00:04Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/SecondaryIdQuery.java", "diffHunk": "@@ -53,13 +126,22 @@ public void resolve(QueryResolveContext context) {\n \n \t@Override\n \tpublic void collectResultInfos(ResultInfoCollector collector) {\n-\t\tcollector.add( new SimpleResultInfo(secondaryId.getName(), ResultType.STRING));\n+\t\tcollector.add(new SimpleResultInfo(secondaryId.getName(), ResultType.STRING));\n \t\tquery.collectResultInfos(collector);\n \t}\n \n \t@Override\n \tpublic void visit(Consumer<Visitable> visitor) {\n \t\tvisitor.accept(this);\n-\t\tquery.visit(visitor);\n+\t\troot.visit(visitor);\n+\t}\n+\n+\t@Override\n+\tpublic long countResults(List<EntityResult> results) {\n+\t\treturn results.stream()\n+\t\t\t\t\t  .flatMap(ContainedEntityResult::filterCast)\n+\t\t\t\t\t  .map(ContainedEntityResult::listResultLines)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 150}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU4NjY0MA==", "bodyText": "ja", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555586640", "createdAt": "2021-01-12T08:22:24Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/SecondaryIdQuery.java", "diffHunk": "@@ -53,13 +126,22 @@ public void resolve(QueryResolveContext context) {\n \n \t@Override\n \tpublic void collectResultInfos(ResultInfoCollector collector) {\n-\t\tcollector.add( new SimpleResultInfo(secondaryId.getName(), ResultType.STRING));\n+\t\tcollector.add(new SimpleResultInfo(secondaryId.getName(), ResultType.STRING));\n \t\tquery.collectResultInfos(collector);\n \t}\n \n \t@Override\n \tpublic void visit(Consumer<Visitable> visitor) {\n \t\tvisitor.accept(this);\n-\t\tquery.visit(visitor);\n+\t\troot.visit(visitor);\n+\t}\n+\n+\t@Override\n+\tpublic long countResults(List<EntityResult> results) {\n+\t\treturn results.stream()\n+\t\t\t\t\t  .flatMap(ContainedEntityResult::filterCast)\n+\t\t\t\t\t  .map(ContainedEntityResult::listResultLines)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5ODUxNg=="}, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 150}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTE3MjMyOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNzowMTowNFrOIReq-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNzowMTowNFrOIReq-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTE5OTIyNA==", "bodyText": "Hier ist die Einr\u00fcckung kaputt", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555199224", "createdAt": "2021-01-11T17:01:04Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java", "diffHunk": "@@ -123,6 +130,17 @@ public QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n \n \t\t\texistsAggregators.forEach(agg -> agg.setReference(filtersNode));\n \n+\n+\n+\t\t\tfinal Connector connector = table.getResolvedConnector();\n+\n+\t\t\tfinal SecondaryIdDescriptionId selectedSecondaryId = Arrays.stream(connector.getTable().getColumns())\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .map(Column::getSecondaryId)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .filter(Objects::nonNull)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .map(SecondaryIdDescription::getId)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .filter(o -> Objects.equals(context.getSelectedSecondaryId(), o))\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .collect(MoreCollectors.toOptional())\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .orElse(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTIxNDAwOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/rest/AdminProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNzoxMDoyMVrOIRfEOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNzoxMDoyMVrOIRfEOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwNTY4OQ==", "bodyText": "Hier sollte dataset jetzt nicht mehr \u00fcbergeben werden, da es ja schon namespace gibt.", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555205689", "createdAt": "2021-01-11T17:10:21Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/rest/AdminProcessor.java", "diffHunk": "@@ -108,7 +116,7 @@\n \tprivate final ObjectWriter jsonWriter = Jackson.MAPPER.writer();\n \tprivate final int entityBucketSize;\n \n-\tpublic void addTable(Dataset dataset, Table table) throws JSONException {\n+\tpublic void addTable(Dataset dataset, Table table, Namespace namespace) throws JSONException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTIzMDMwOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/rest/AdminProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNzoxNDoxMVrOIRfOBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNToyOToxOFrOIS0kFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwODE5Ng==", "bodyText": "Achtung RaceCondition mit AddTable", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555208196", "createdAt": "2021-01-11T17:14:11Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/rest/AdminProcessor.java", "diffHunk": "@@ -621,4 +618,43 @@ public void updateMatchingStats(DatasetId datasetId) {\n \n \t\tFilterSearch.updateSearch(getDatasetRegistry(), Collections.singleton(ns.getDataset()), getJobManager());\n \t}\n+\n+\tpublic void addSecondaryId(Namespace namespace, SecondaryIdDescription secondaryId) {\n+\t\tfinal Dataset dataset = namespace.getDataset();\n+\t\tsecondaryId.setDataset(dataset);\n+\n+\t\tlog.trace(\"Received new {}\", secondaryId);\n+\t\tlog.info(\"Received new SecondaryId[{}]\", secondaryId.getId());\n+\n+\t\tnamespace.getStorage().addSecondaryId(secondaryId);\n+\n+\t\tnamespace.sendToAll(new UpdateSecondaryId(secondaryId));\n+\t}\n+\n+\tpublic void deleteSecondaryId(SecondaryIdDescriptionId secondaryId) {\n+\t\tfinal Namespace namespace = datasetRegistry.get(secondaryId.getDataset());\n+\t\tfinal Dataset dataset = namespace.getDataset();\n+\n+\t\t// Before we commit this deletion, we check if this SecondaryId still has dependent Columns.\n+\t\tfinal List<Column> dependents = namespace.getStorage().getTables().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYwNjQ4Nw==", "bodyText": "habe mal alles was Sinn macht synchronized markiert, multithreading w\u00e4re hier eh schlecht", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r556606487", "createdAt": "2021-01-13T15:29:18Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/rest/AdminProcessor.java", "diffHunk": "@@ -621,4 +618,43 @@ public void updateMatchingStats(DatasetId datasetId) {\n \n \t\tFilterSearch.updateSearch(getDatasetRegistry(), Collections.singleton(ns.getDataset()), getJobManager());\n \t}\n+\n+\tpublic void addSecondaryId(Namespace namespace, SecondaryIdDescription secondaryId) {\n+\t\tfinal Dataset dataset = namespace.getDataset();\n+\t\tsecondaryId.setDataset(dataset);\n+\n+\t\tlog.trace(\"Received new {}\", secondaryId);\n+\t\tlog.info(\"Received new SecondaryId[{}]\", secondaryId.getId());\n+\n+\t\tnamespace.getStorage().addSecondaryId(secondaryId);\n+\n+\t\tnamespace.sendToAll(new UpdateSecondaryId(secondaryId));\n+\t}\n+\n+\tpublic void deleteSecondaryId(SecondaryIdDescriptionId secondaryId) {\n+\t\tfinal Namespace namespace = datasetRegistry.get(secondaryId.getDataset());\n+\t\tfinal Dataset dataset = namespace.getDataset();\n+\n+\t\t// Before we commit this deletion, we check if this SecondaryId still has dependent Columns.\n+\t\tfinal List<Column> dependents = namespace.getStorage().getTables().stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwODE5Ng=="}, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 200}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTIzNjUxOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/ui/TablesUIResource.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNzoxNToyMlrOIRfRhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwNTo1OTo1OVrOISgp1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwOTA5Mg==", "bodyText": "Cool die Exceptions kannte ich noch nicht", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555209092", "createdAt": "2021-01-11T17:15:22Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/ui/TablesUIResource.java", "diffHunk": "@@ -46,17 +46,19 @@\n \tprotected TableId tableId;\n \tprotected Table table;\n \t\n+\t@SneakyThrows({NotFoundException.class})\n \t@PostConstruct\n \t@Override\n \tpublic void init() {\n \t\tsuper.init();\n \t\tthis.namespace = processor.getDatasetRegistry().get(datasetId);\n \t\tthis.table = namespace\n \t\t\t.getStorage()\n-\t\t\t.getDataset()\n-\t\t\t.getTables()\n-\t\t\t.getOptional(tableId)\n-\t\t\t.orElseThrow(() -> new WebApplicationException(\"Could not find table \"+tableId, Status.NOT_FOUND));\n+\t\t\t.getTable(tableId);\n+\n+\t\tif(table == null){\n+\t\t\tthrow new NotFoundException(\"Could not find Table \" + tableId.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIxMTM2Mg==", "bodyText": "Aber das sind leider keine WebExceptions :|\nBitte wieder r\u00fcckg\u00e4ngig machen", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555211362", "createdAt": "2021-01-11T17:18:48Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/ui/TablesUIResource.java", "diffHunk": "@@ -46,17 +46,19 @@\n \tprotected TableId tableId;\n \tprotected Table table;\n \t\n+\t@SneakyThrows({NotFoundException.class})\n \t@PostConstruct\n \t@Override\n \tpublic void init() {\n \t\tsuper.init();\n \t\tthis.namespace = processor.getDatasetRegistry().get(datasetId);\n \t\tthis.table = namespace\n \t\t\t.getStorage()\n-\t\t\t.getDataset()\n-\t\t\t.getTables()\n-\t\t\t.getOptional(tableId)\n-\t\t\t.orElseThrow(() -> new WebApplicationException(\"Could not find table \"+tableId, Status.NOT_FOUND));\n+\t\t\t.getTable(tableId);\n+\n+\t\tif(table == null){\n+\t\t\tthrow new NotFoundException(\"Could not find Table \" + tableId.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwOTA5Mg=="}, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIxMzM2Ng==", "bodyText": "Die ForbiddenException ist eine WebApplication Exception", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555213366", "createdAt": "2021-01-11T17:21:59Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/ui/TablesUIResource.java", "diffHunk": "@@ -46,17 +46,19 @@\n \tprotected TableId tableId;\n \tprotected Table table;\n \t\n+\t@SneakyThrows({NotFoundException.class})\n \t@PostConstruct\n \t@Override\n \tpublic void init() {\n \t\tsuper.init();\n \t\tthis.namespace = processor.getDatasetRegistry().get(datasetId);\n \t\tthis.table = namespace\n \t\t\t.getStorage()\n-\t\t\t.getDataset()\n-\t\t\t.getTables()\n-\t\t\t.getOptional(tableId)\n-\t\t\t.orElseThrow(() -> new WebApplicationException(\"Could not find table \"+tableId, Status.NOT_FOUND));\n+\t\t\t.getTable(tableId);\n+\n+\t\tif(table == null){\n+\t\t\tthrow new NotFoundException(\"Could not find Table \" + tableId.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwOTA5Mg=="}, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU5MDU5MQ==", "bodyText": "Das war nur der falsche import:  import javax.ws.rs.NotFoundException;", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555590591", "createdAt": "2021-01-12T08:29:07Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/ui/TablesUIResource.java", "diffHunk": "@@ -46,17 +46,19 @@\n \tprotected TableId tableId;\n \tprotected Table table;\n \t\n+\t@SneakyThrows({NotFoundException.class})\n \t@PostConstruct\n \t@Override\n \tpublic void init() {\n \t\tsuper.init();\n \t\tthis.namespace = processor.getDatasetRegistry().get(datasetId);\n \t\tthis.table = namespace\n \t\t\t.getStorage()\n-\t\t\t.getDataset()\n-\t\t\t.getTables()\n-\t\t\t.getOptional(tableId)\n-\t\t\t.orElseThrow(() -> new WebApplicationException(\"Could not find table \"+tableId, Status.NOT_FOUND));\n+\t\t\t.getTable(tableId);\n+\n+\t\tif(table == null){\n+\t\t\tthrow new NotFoundException(\"Could not find Table \" + tableId.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwOTA5Mg=="}, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjI4MDI3OQ==", "bodyText": "Oki", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r556280279", "createdAt": "2021-01-13T05:59:59Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/ui/TablesUIResource.java", "diffHunk": "@@ -46,17 +46,19 @@\n \tprotected TableId tableId;\n \tprotected Table table;\n \t\n+\t@SneakyThrows({NotFoundException.class})\n \t@PostConstruct\n \t@Override\n \tpublic void init() {\n \t\tsuper.init();\n \t\tthis.namespace = processor.getDatasetRegistry().get(datasetId);\n \t\tthis.table = namespace\n \t\t\t.getStorage()\n-\t\t\t.getDataset()\n-\t\t\t.getTables()\n-\t\t\t.getOptional(tableId)\n-\t\t\t.orElseThrow(() -> new WebApplicationException(\"Could not find table \"+tableId, Status.NOT_FOUND));\n+\t\t\t.getTable(tableId);\n+\n+\t\tif(table == null){\n+\t\t\tthrow new NotFoundException(\"Could not find Table \" + tableId.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIwOTA5Mg=="}, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTI1MjQ4OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/resources/hierarchies/HTables.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNzoxOTowM1rOIRfbCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxNzoxOTowM1rOIRfbCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTIxMTUyOQ==", "bodyText": "Hier auch", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555211529", "createdAt": "2021-01-11T17:19:03Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/resources/hierarchies/HTables.java", "diffHunk": "@@ -21,16 +21,18 @@\n \t@PathParam(TABLE)\n \tprotected TableId tableId;\n \tprotected Table table;\n-\t\n+\n+\t@SneakyThrows({NotFoundException.class})\n \t@PostConstruct\n \t@Override\n \tpublic void init() {\n \t\tsuper.init();\n \t\tthis.table = namespace\n \t\t\t.getStorage()\n-\t\t\t.getDataset()\n-\t\t\t.getTables()\n-\t\t\t.getOptional(tableId)\n-\t\t\t.orElseThrow(() -> new WebApplicationException(\"Could not find table \"+tableId, Status.NOT_FOUND));\n+\t\t\t.getTable(tableId);\n+\n+\t\tif(table == null){\n+\t\t\tthrow new NotFoundException(\"Could not find Table \" + tableId.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NzU2MjU2OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/rest/AdminProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwNzozMToxMFrOIR02gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMlQwNzozMToxMFrOIR02gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTU2MjYyNw==", "bodyText": "Eins reicht denke ich", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r555562627", "createdAt": "2021-01-12T07:31:10Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/resources/admin/rest/AdminProcessor.java", "diffHunk": "@@ -621,4 +618,43 @@ public void updateMatchingStats(DatasetId datasetId) {\n \n \t\tFilterSearch.updateSearch(getDatasetRegistry(), Collections.singleton(ns.getDataset()), getJobManager());\n \t}\n+\n+\tpublic void addSecondaryId(Namespace namespace, SecondaryIdDescription secondaryId) {\n+\t\tfinal Dataset dataset = namespace.getDataset();\n+\t\tsecondaryId.setDataset(dataset);\n+\n+\t\tlog.trace(\"Received new {}\", secondaryId);\n+\t\tlog.info(\"Received new SecondaryId[{}]\", secondaryId.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1269ab700f02d9e83f24a00ac31850082b85724"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNDM4NzYzOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/query/IQuery.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNTo0MTo1N1rOIS1KPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QxNTo0MTo1N1rOIS1KPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjYxNjI1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Implement Query-type aware counting of results. Standard method is counting person-lines.\n          \n          \n            \n            \t * Implement Query-type aware counting of results. Standard method is counting unique entities.", "url": "https://github.com/bakdata/conquery/pull/1485#discussion_r556616254", "createdAt": "2021-01-13T15:41:57Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/IQuery.java", "diffHunk": "@@ -65,6 +67,12 @@ private static DatasetId getDataset(IQuery query, DatasetId alternativeDataset)\n \t\treturn dataset;\n \t}\n \n+\t/**\n+\t * Implement Query-type aware counting of results. Standard method is counting person-lines.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d020ff643f1e9d597443048a37b3f0a662f7867"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1564, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}