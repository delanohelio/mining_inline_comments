{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0OTg1NjEw", "number": 996, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMDoyNjoyMVrODZUMeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMDoyNjoyMVrODZUMeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODcxODY0OnYy", "diffSide": "RIGHT", "path": "frontend/lib/js/user/selectors.js", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQyMDoyNjoyMVrOFfokug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQyMDo0Njo1NVrOFgIRoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxNDkzOA==", "bodyText": "Zur vollen Unterst\u00fctzung der Wildcardpermissions m\u00fcsste das denke ich so aus sehen:\np =>\n      (p.domains.includes(\"datasets\") ||  p.domains.includes(\"*\")) &&\n      (p.abilities.includes(\"download\") ||  p.abilities.includes(\"*\") || (p.abilities.isEmpty() && !p.domains.isEmpty())) &&\n      (p.targets.includes(dataset) || p.targets.includes(\"*\") || (p.targets.isEmpty() && !p.abilities.isEmpty()))", "url": "https://github.com/bakdata/conquery/pull/996#discussion_r368714938", "createdAt": "2020-01-20T20:26:21Z", "author": {"login": "thoniTUB"}, "path": "frontend/lib/js/user/selectors.js", "diffHunk": "@@ -4,23 +4,25 @@ export function selectPermissions(state) {\n     : null;\n }\n \n-export function canDownloadResult(state) {\n+export function canDownloadResult(state, datasetId?: string) {\n   const permissions = selectPermissions(state);\n \n   if (!permissions) return false;\n \n-  const permission = permissions.find(\n-    p => p.domains.includes(\"datasets\") && p.abilities.includes(\"download\")\n-  );\n-\n   const { selectedDatasetId } = state.datasets;\n \n-  return (\n-    !!permission &&\n-    (permission.targets.includes(\"*\") ||\n-      // TODO: This makes not that much sense yet, because\n-      //       the dataset shouldn't be the selected one, but the one\n-      //       which relates to the result\n-      permission.targets.includes(selectedDatasetId))\n+  // TODO: Fallback to selectedDatasetId probably doesn't make that much sense,\n+  //       because the dataset to use should probably always relates to the result\n+  //       or entity, that is being checked here.\n+  //\n+  const dataset = datasetId || selectedDatasetId;\n+\n+  const permission = permissions.find(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b184732b87d2e324779dc17edb75939370f13069"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxNjAyNg==", "bodyText": "Ja, ginge, aber dann w\u00e4re das hier in der spezifischen canDownload-Funktion halb-allgemein gel\u00f6st und m\u00fcsste bei allen weiteren Permissions kopiert werden => Ich w\u00fcrde daf\u00fcr gerne eine Abstraktion bauen und es gleich richtig implementieren\n=> Dauert noch etwas. Wenn ich richtig verstehe ist das zumindest noch nicht zeitkritisch, richtig?", "url": "https://github.com/bakdata/conquery/pull/996#discussion_r368716026", "createdAt": "2020-01-20T20:30:09Z", "author": {"login": "Kadrian"}, "path": "frontend/lib/js/user/selectors.js", "diffHunk": "@@ -4,23 +4,25 @@ export function selectPermissions(state) {\n     : null;\n }\n \n-export function canDownloadResult(state) {\n+export function canDownloadResult(state, datasetId?: string) {\n   const permissions = selectPermissions(state);\n \n   if (!permissions) return false;\n \n-  const permission = permissions.find(\n-    p => p.domains.includes(\"datasets\") && p.abilities.includes(\"download\")\n-  );\n-\n   const { selectedDatasetId } = state.datasets;\n \n-  return (\n-    !!permission &&\n-    (permission.targets.includes(\"*\") ||\n-      // TODO: This makes not that much sense yet, because\n-      //       the dataset shouldn't be the selected one, but the one\n-      //       which relates to the result\n-      permission.targets.includes(selectedDatasetId))\n+  // TODO: Fallback to selectedDatasetId probably doesn't make that much sense,\n+  //       because the dataset to use should probably always relates to the result\n+  //       or entity, that is being checked here.\n+  //\n+  const dataset = datasetId || selectedDatasetId;\n+\n+  const permission = permissions.find(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxNDkzOA=="}, "originalCommit": {"oid": "b184732b87d2e324779dc17edb75939370f13069"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxNjYwMg==", "bodyText": "Side-Notiz ;-)", "url": "https://github.com/bakdata/conquery/pull/996#discussion_r368716602", "createdAt": "2020-01-20T20:31:55Z", "author": {"login": "Kadrian"}, "path": "frontend/lib/js/user/selectors.js", "diffHunk": "@@ -4,23 +4,25 @@ export function selectPermissions(state) {\n     : null;\n }\n \n-export function canDownloadResult(state) {\n+export function canDownloadResult(state, datasetId?: string) {\n   const permissions = selectPermissions(state);\n \n   if (!permissions) return false;\n \n-  const permission = permissions.find(\n-    p => p.domains.includes(\"datasets\") && p.abilities.includes(\"download\")\n-  );\n-\n   const { selectedDatasetId } = state.datasets;\n \n-  return (\n-    !!permission &&\n-    (permission.targets.includes(\"*\") ||\n-      // TODO: This makes not that much sense yet, because\n-      //       the dataset shouldn't be the selected one, but the one\n-      //       which relates to the result\n-      permission.targets.includes(selectedDatasetId))\n+  // TODO: Fallback to selectedDatasetId probably doesn't make that much sense,\n+  //       because the dataset to use should probably always relates to the result\n+  //       or entity, that is being checked here.\n+  //\n+  const dataset = datasetId || selectedDatasetId;\n+\n+  const permission = permissions.find(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxNDkzOA=="}, "originalCommit": {"oid": "b184732b87d2e324779dc17edb75939370f13069"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg2MjU4Nw==", "bodyText": "Sorry war Pseudo-Code :)", "url": "https://github.com/bakdata/conquery/pull/996#discussion_r368862587", "createdAt": "2020-01-21T08:25:54Z", "author": {"login": "thoniTUB"}, "path": "frontend/lib/js/user/selectors.js", "diffHunk": "@@ -4,23 +4,25 @@ export function selectPermissions(state) {\n     : null;\n }\n \n-export function canDownloadResult(state) {\n+export function canDownloadResult(state, datasetId?: string) {\n   const permissions = selectPermissions(state);\n \n   if (!permissions) return false;\n \n-  const permission = permissions.find(\n-    p => p.domains.includes(\"datasets\") && p.abilities.includes(\"download\")\n-  );\n-\n   const { selectedDatasetId } = state.datasets;\n \n-  return (\n-    !!permission &&\n-    (permission.targets.includes(\"*\") ||\n-      // TODO: This makes not that much sense yet, because\n-      //       the dataset shouldn't be the selected one, but the one\n-      //       which relates to the result\n-      permission.targets.includes(selectedDatasetId))\n+  // TODO: Fallback to selectedDatasetId probably doesn't make that much sense,\n+  //       because the dataset to use should probably always relates to the result\n+  //       or entity, that is being checked here.\n+  //\n+  const dataset = datasetId || selectedDatasetId;\n+\n+  const permission = permissions.find(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxNDkzOA=="}, "originalCommit": {"oid": "b184732b87d2e324779dc17edb75939370f13069"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk2ODMxMA==", "bodyText": "=> Dauert noch etwas. Wenn ich richtig verstehe ist das zumindest noch nicht zeitkritisch, richtig?\n\nNicht umbedingt, aber wir w\u00fcrden gerne die Woche Live gehen. Denke sp\u00e4testens Donnerstag weil Freitag live gehen immer doof ist. gglg", "url": "https://github.com/bakdata/conquery/pull/996#discussion_r368968310", "createdAt": "2020-01-21T12:19:10Z", "author": {"login": "awildturtok"}, "path": "frontend/lib/js/user/selectors.js", "diffHunk": "@@ -4,23 +4,25 @@ export function selectPermissions(state) {\n     : null;\n }\n \n-export function canDownloadResult(state) {\n+export function canDownloadResult(state, datasetId?: string) {\n   const permissions = selectPermissions(state);\n \n   if (!permissions) return false;\n \n-  const permission = permissions.find(\n-    p => p.domains.includes(\"datasets\") && p.abilities.includes(\"download\")\n-  );\n-\n   const { selectedDatasetId } = state.datasets;\n \n-  return (\n-    !!permission &&\n-    (permission.targets.includes(\"*\") ||\n-      // TODO: This makes not that much sense yet, because\n-      //       the dataset shouldn't be the selected one, but the one\n-      //       which relates to the result\n-      permission.targets.includes(selectedDatasetId))\n+  // TODO: Fallback to selectedDatasetId probably doesn't make that much sense,\n+  //       because the dataset to use should probably always relates to the result\n+  //       or entity, that is being checked here.\n+  //\n+  const dataset = datasetId || selectedDatasetId;\n+\n+  const permission = permissions.find(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxNDkzOA=="}, "originalCommit": {"oid": "b184732b87d2e324779dc17edb75939370f13069"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTIzNDMzNg==", "bodyText": "Ah, bis Donnerstag schaffe ich das nicht, fr\u00fchestens am Samstag falls das mit Wildcards Priorit\u00e4t vor all den anderen Dingen hat. Der PR hier ist von mir aus merge-bar.", "url": "https://github.com/bakdata/conquery/pull/996#discussion_r369234336", "createdAt": "2020-01-21T20:46:55Z", "author": {"login": "Kadrian"}, "path": "frontend/lib/js/user/selectors.js", "diffHunk": "@@ -4,23 +4,25 @@ export function selectPermissions(state) {\n     : null;\n }\n \n-export function canDownloadResult(state) {\n+export function canDownloadResult(state, datasetId?: string) {\n   const permissions = selectPermissions(state);\n \n   if (!permissions) return false;\n \n-  const permission = permissions.find(\n-    p => p.domains.includes(\"datasets\") && p.abilities.includes(\"download\")\n-  );\n-\n   const { selectedDatasetId } = state.datasets;\n \n-  return (\n-    !!permission &&\n-    (permission.targets.includes(\"*\") ||\n-      // TODO: This makes not that much sense yet, because\n-      //       the dataset shouldn't be the selected one, but the one\n-      //       which relates to the result\n-      permission.targets.includes(selectedDatasetId))\n+  // TODO: Fallback to selectedDatasetId probably doesn't make that much sense,\n+  //       because the dataset to use should probably always relates to the result\n+  //       or entity, that is being checked here.\n+  //\n+  const dataset = datasetId || selectedDatasetId;\n+\n+  const permission = permissions.find(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcxNDkzOA=="}, "originalCommit": {"oid": "b184732b87d2e324779dc17edb75939370f13069"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1481, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}