{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NDcxODY0", "number": 1382, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMjowODozNFrOEqslnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjoyNTowOVrOErlrLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjA2MTczOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/events/BucketManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMjowODozNFrOHdDKXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMjowODozNFrOHdDKXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDIyMjU1Ng==", "bodyText": "W\u00fcrde ich nicht im Konstruktor machen", "url": "https://github.com/bakdata/conquery/pull/1382#discussion_r500222556", "createdAt": "2020-10-06T12:08:34Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/events/BucketManager.java", "diffHunk": "@@ -40,37 +39,50 @@\n \tprivate final IdMutex<ConnectorId> cBlockLocks = new IdMutex<>();\n \tprivate final JobManager jobManager;\n \tprivate final WorkerStorage storage;\n-\tprivate final IdMap<ConceptId, Concept<?>> concepts = new IdMap<>();\n-\tprivate final IdMap<BucketId, Bucket> buckets = new IdMap<>();\n-\tprivate final IdMap<CBlockId, CBlock> cBlocks = new IdMap<>();\n \t@Getter\n \tprivate final Int2ObjectMap<Entity> entities = new Int2ObjectAVLTreeMap<>();\n-\tprivate final WorkerInformation workerInformation;\n+\tprivate final Worker worker;\n \n-\tpublic BucketManager(JobManager jobManager, WorkerStorage storage, WorkerInformation workerInformation) {\n+\tpublic BucketManager(JobManager jobManager, WorkerStorage storage, Worker worker) {\n \t\tthis.jobManager = jobManager;\n \t\tthis.storage = storage;\n-\t\tthis.concepts.addAll(storage.getAllConcepts());\n-\t\tthis.buckets.addAll(storage.getAllBuckets());\n-\t\tthis.cBlocks.addAll(storage.getAllCBlocks());\n-\t\tthis.workerInformation = workerInformation;\n+\t\tthis.worker = worker;\n+\t\t\n+\t\tIntArrayList requiredBuckets = worker.getInfo().getIncludedBuckets().clone();\n+\t\tlog.trace(\"Trying to load these buckets: {}\", requiredBuckets);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f718594397271648de9e93c24fb5b4fa546e56b4"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzUxOTg3OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/io/xodus/WorkerStorageRetrivalDelegate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDo0OToyNlrOHd3N9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDo0OToyNlrOHd3N9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA3NTQ0NQ==", "bodyText": "Doku", "url": "https://github.com/bakdata/conquery/pull/1382#discussion_r501075445", "createdAt": "2020-10-07T14:49:26Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/io/xodus/WorkerStorageRetrivalDelegate.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package com.bakdata.conquery.io.xodus;\n+\n+import java.io.File;\n+import java.util.Collection;\n+\n+import javax.validation.Validator;\n+\n+import com.bakdata.conquery.models.concepts.Concept;\n+import com.bakdata.conquery.models.datasets.Dataset;\n+import com.bakdata.conquery.models.datasets.Import;\n+import com.bakdata.conquery.models.dictionary.Dictionary;\n+import com.bakdata.conquery.models.dictionary.DirectDictionary;\n+import com.bakdata.conquery.models.events.Bucket;\n+import com.bakdata.conquery.models.events.CBlock;\n+import com.bakdata.conquery.models.identifiable.CentralRegistry;\n+import com.bakdata.conquery.models.identifiable.ids.specific.BucketId;\n+import com.bakdata.conquery.models.identifiable.ids.specific.CBlockId;\n+import com.bakdata.conquery.models.identifiable.ids.specific.ConceptId;\n+import com.bakdata.conquery.models.identifiable.ids.specific.DictionaryId;\n+import com.bakdata.conquery.models.identifiable.ids.specific.ImportId;\n+import com.bakdata.conquery.models.worker.WorkerInformation;\n+import jetbrains.exodus.env.Environment;\n+import lombok.RequiredArgsConstructor;\n+\n+@RequiredArgsConstructor\n+public class WorkerStorageRetrivalDelegate {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "115cabce043bc0896625ce70ff6d152fad5a07f2"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTQwNzI0OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/events/BucketManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjoyMzowNlrOHeb8jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjoyMzowNlrOHeb8jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY3NzE5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @implNote These numbers are estimates, we could make them configurable, though they aren't very important.", "url": "https://github.com/bakdata/conquery/pull/1382#discussion_r501677196", "createdAt": "2020-10-08T12:23:06Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/events/BucketManager.java", "diffHunk": "@@ -43,36 +43,52 @@\n  * @implNote This class is only used per {@link Worker}. And NOT in the ManagerNode.\n  */\n @Slf4j\n+@RequiredArgsConstructor\n public class BucketManager {\n \n-\t@Getter\n-\tprivate final int bucketSize;\n-\n \tprivate final IdMutex<ConnectorId> cBlockLocks = new IdMutex<>();\n \tprivate final JobManager jobManager;\n \tprivate final WorkerStorage storage;\n-\tprivate final IdMap<ConceptId, Concept<?>> concepts = new IdMap<>();\n-\tprivate final IdMap<BucketId, Bucket> buckets = new IdMap<>();\n-\tprivate final IdMap<CBlockId, CBlock> cBlocks = new IdMap<>();\n-\t@Getter\n-\tprivate final Int2ObjectMap<Entity> entities = new Int2ObjectAVLTreeMap<>();\n-\n \t//Backreference\n \tprivate final Worker worker;\n+\t@Getter\n+\tprivate final Int2ObjectMap<Entity> entities;\n+\t\n+\t/**\n+\t * Connector -> Bucket -> [CBlock]\n+\t * @implNote These numbers are estimates, we could make them configurable, though they aren't very important.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7828b2e5c043f06412edbaafe9c7d2cd8c47e8c9"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTQxNDg3OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/query/QueryPlanContext.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjoyNTowOVrOHecBMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMjoyNTowOVrOHecBMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY3ODM4NA==", "bodyText": "mlady -- \ud83c\udfa9", "url": "https://github.com/bakdata/conquery/pull/1382#discussion_r501678384", "createdAt": "2020-10-08T12:25:09Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/QueryPlanContext.java", "diffHunk": "@@ -1,6 +1,6 @@\n package com.bakdata.conquery.models.query;\n \n-import com.bakdata.conquery.io.xodus.WorkerStorage;\n+import com.bakdata.conquery.io.xodus.ModificationShieldedWorkerStorage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7828b2e5c043f06412edbaafe9c7d2cd8c47e8c9"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1593, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}