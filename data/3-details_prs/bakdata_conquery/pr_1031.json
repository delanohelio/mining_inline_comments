{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0OTExMDYz", "number": 1031, "title": "new default column naming", "bodyText": "", "createdAt": "2020-02-13T14:51:57Z", "url": "https://github.com/bakdata/conquery/pull/1031", "merged": true, "mergeCommit": {"oid": "d5e6117b7c167c063586b4b69def9240c958d041"}, "closed": true, "closedAt": "2020-02-14T13:13:17Z", "author": {"login": "thoniTUB"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcD8IsHgH2gAyMzc0OTExMDYzOjFkMTcwNTAyY2IwN2U1MjRjZGMxNTRhN2ZkNDRjYWE5MDQ3NzA2NTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcEOsS9AH2gAyMzc0OTExMDYzOjhhZGEwN2FlMTgzNWFmMDcxMWRmOGU5NTVjZDNiMzNkYTZhYWI4MzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1d170502cb07e524cdc154a7fd44caa904770654", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/1d170502cb07e524cdc154a7fd44caa904770654", "committedDate": "2020-02-13T14:51:39Z", "message": "new default column naming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d2e32ccd908122a9731fcd75a4d9e21255079fc", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/7d2e32ccd908122a9731fcd75a4d9e21255079fc", "committedDate": "2020-02-13T14:51:58Z", "message": "Merge 1d170502cb07e524cdc154a7fd44caa904770654 into 24c7166b0be27ebd70400049dc31c45a0f6c4fc7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d4fc6ba0ab87e64e0449997f0b35148e8fbdb34", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/4d4fc6ba0ab87e64e0449997f0b35148e8fbdb34", "committedDate": "2020-02-13T14:54:01Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33b91e4837066a9ecc0ea4e0c91796e6b536bac5", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/33b91e4837066a9ecc0ea4e0c91796e6b536bac5", "committedDate": "2020-02-13T15:32:31Z", "message": "removes columnNamerScript form project"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54d7ce963e7300eff620322731bef8b7ef3dca14", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/54d7ce963e7300eff620322731bef8b7ef3dca14", "committedDate": "2020-02-13T15:32:45Z", "message": "Merge branch 'feature/better-column-names' of https://github.com/bakdata/conquery into feature/better-column-names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80592980381007b7c95b2d03663cf9187a46bc8c", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/80592980381007b7c95b2d03663cf9187a46bc8c", "committedDate": "2020-02-13T15:44:41Z", "message": "Merge 54d7ce963e7300eff620322731bef8b7ef3dca14 into 24c7166b0be27ebd70400049dc31c45a0f6c4fc7"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4f0db3763973e387ea0b99fe69562472c9409af", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/d4f0db3763973e387ea0b99fe69562472c9409af", "committedDate": "2020-02-13T15:46:38Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4ODkxMzU4", "url": "https://github.com/bakdata/conquery/pull/1031#pullrequestreview-358891358", "createdAt": "2020-02-14T11:54:18Z", "commit": {"oid": "d4f0db3763973e387ea0b99fe69562472c9409af"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMTo1NDoxOFrOFp0SlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMTo1NDo0M1rOFp0TPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5MjY2MA==", "bodyText": "Kannst du das nicht als default column name l\u00f6sen? dadurch hast du nen eindeutigen datenfluss", "url": "https://github.com/bakdata/conquery/pull/1031#discussion_r379392660", "createdAt": "2020-02-14T11:54:18Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/PrintSettings.java", "diffHunk": "@@ -1,54 +1,49 @@\n package com.bakdata.conquery.models.query;\n \n-import java.util.Objects;\n-\n-import org.codehaus.groovy.control.CompilerConfiguration;\n+import java.util.function.Function;\n \n+import com.bakdata.conquery.models.concepts.Connector;\n import com.bakdata.conquery.models.query.resultinfo.SelectNameExtractor;\n import com.bakdata.conquery.models.query.resultinfo.SelectResultInfo;\n-import com.google.common.base.Strings;\n-\n-import groovy.lang.GroovyShell;\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n import lombok.ToString;\n-import lombok.extern.slf4j.Slf4j;\n \n-@Slf4j\n @Getter @RequiredArgsConstructor @AllArgsConstructor @ToString\n public class PrintSettings implements SelectNameExtractor {\n-\tpublic static final String GROOVY_VARIABLE = \"columnInfo\";\n-\t/**\n-\t * Non static shell because thread safety is not given.\n-\t */\n-\tprivate final GroovyShell groovyShell = new GroovyShell(new CompilerConfiguration());\n \n \tprivate final boolean prettyPrint;\n-\t/**\n-\t * Assuming the Script has already been validated (from loading the config).\n-\t */\n-\tprivate String columnNamerScript = null;\n+\t\n+\tprivate Function<SelectResultInfo, String> columnNamer = null;\n \t\n \n \t/**\n \t * Generates the name for a query result column.\n-\t * The name is either determined by a configured script or by a standard procedure\n \t */\n \t@Override\n \tpublic String columnName(SelectResultInfo columnInfo) {\n-\t\tif(!Strings.isNullOrEmpty(columnNamerScript)) {\n-\t\t\t// Use the provided script\n-\t\t\tgroovyShell.setProperty(GROOVY_VARIABLE, columnInfo);\n-\t\t\tObject result = groovyShell.evaluate(columnNamerScript);\n-\t\t\tif(result != null) {\n-\t\t\t\treturn Objects.toString(result);\n-\t\t\t}\n-\t\t\tlog.info(\"The column namer script returned null: {}\\nFalling back to standard format\",columnNamerScript);\n+\t\tif (columnNamer != null) {\n+\t\t\t// If a columnNamer is supplied it is used\n+\t\t\treturn columnNamer.apply(columnInfo);\n \t\t}\n+\t\tStringBuilder sb = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f0db3763973e387ea0b99fe69562472c9409af"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM5MjgyOA==", "bodyText": "equalsIgnoreCase?", "url": "https://github.com/bakdata/conquery/pull/1031#discussion_r379392828", "createdAt": "2020-02-14T11:54:43Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/PrintSettings.java", "diffHunk": "@@ -1,54 +1,49 @@\n package com.bakdata.conquery.models.query;\n \n-import java.util.Objects;\n-\n-import org.codehaus.groovy.control.CompilerConfiguration;\n+import java.util.function.Function;\n \n+import com.bakdata.conquery.models.concepts.Connector;\n import com.bakdata.conquery.models.query.resultinfo.SelectNameExtractor;\n import com.bakdata.conquery.models.query.resultinfo.SelectResultInfo;\n-import com.google.common.base.Strings;\n-\n-import groovy.lang.GroovyShell;\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n import lombok.RequiredArgsConstructor;\n import lombok.ToString;\n-import lombok.extern.slf4j.Slf4j;\n \n-@Slf4j\n @Getter @RequiredArgsConstructor @AllArgsConstructor @ToString\n public class PrintSettings implements SelectNameExtractor {\n-\tpublic static final String GROOVY_VARIABLE = \"columnInfo\";\n-\t/**\n-\t * Non static shell because thread safety is not given.\n-\t */\n-\tprivate final GroovyShell groovyShell = new GroovyShell(new CompilerConfiguration());\n \n \tprivate final boolean prettyPrint;\n-\t/**\n-\t * Assuming the Script has already been validated (from loading the config).\n-\t */\n-\tprivate String columnNamerScript = null;\n+\t\n+\tprivate Function<SelectResultInfo, String> columnNamer = null;\n \t\n \n \t/**\n \t * Generates the name for a query result column.\n-\t * The name is either determined by a configured script or by a standard procedure\n \t */\n \t@Override\n \tpublic String columnName(SelectResultInfo columnInfo) {\n-\t\tif(!Strings.isNullOrEmpty(columnNamerScript)) {\n-\t\t\t// Use the provided script\n-\t\t\tgroovyShell.setProperty(GROOVY_VARIABLE, columnInfo);\n-\t\t\tObject result = groovyShell.evaluate(columnNamerScript);\n-\t\t\tif(result != null) {\n-\t\t\t\treturn Objects.toString(result);\n-\t\t\t}\n-\t\t\tlog.info(\"The column namer script returned null: {}\\nFalling back to standard format\",columnNamerScript);\n+\t\tif (columnNamer != null) {\n+\t\t\t// If a columnNamer is supplied it is used\n+\t\t\treturn columnNamer.apply(columnInfo);\n \t\t}\n+\t\tStringBuilder sb = new StringBuilder();\n+\t\tString cqLabel = columnInfo.getCqConcept().getLabel();\n+\t\tString conceptLabel = columnInfo.getSelect().getHolder().findConcept().getLabel();\n \t\t\n-\t\t// Use the standard procedure\n-\t\treturn String.format(\"%s %s\",columnInfo.getCqConcept().getLabel(),columnInfo.getSelect().getLabel());\n-\t\t\n+\t\tsb.append(conceptLabel);\n+\t\tsb.append(' ');\n+\t\tif (!cqLabel.equals(conceptLabel)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4f0db3763973e387ea0b99fe69562472c9409af"}, "originalPosition": 65}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e78a25d8fc91187c3e546e8172e435385f9a48a8", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/e78a25d8fc91187c3e546e8172e435385f9a48a8", "committedDate": "2020-02-14T12:27:41Z", "message": "review changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ada07ae1835af0711df8e955cd3b33da6aab835", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/8ada07ae1835af0711df8e955cd3b33da6aab835", "committedDate": "2020-02-14T12:28:50Z", "message": "Merge branch 'develop' into feature/better-column-names"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4708, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}