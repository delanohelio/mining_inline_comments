{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0NTE3MjQw", "number": 1287, "title": "Cleanup and Refactor QueryEngine", "bodyText": "", "createdAt": "2020-07-21T13:47:18Z", "url": "https://github.com/bakdata/conquery/pull/1287", "merged": true, "mergeCommit": {"oid": "f414fca57da2372f8b5640a9078e21984bfe0658"}, "closed": true, "closedAt": "2020-07-28T12:10:27Z", "author": {"login": "awildturtok"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3GJS5AH2gAyNDU0NTE3MjQwOmRhMzQ0YjY5MTRhNGFmNDhhM2I3ODBjMTk3NDIzMjA1ZWYwNGE0MTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5Bk2LgH2gAyNDU0NTE3MjQwOjk5MmNkNTJjOTEwY2Q0ZTEzOTQzYmZjMjE4YjU2OWZmODVlY2U0ZmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "da344b6914a4af48a3b780c197423205ef04a412", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/da344b6914a4af48a3b780c197423205ef04a412", "committedDate": "2020-07-21T13:21:30Z", "message": "Refactor and Cleanup implementations of EventIterating. Now contains EventIterating.acceptEvent."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d23914e25032ed767db315b2f6561b323190aa8", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/8d23914e25032ed767db315b2f6561b323190aa8", "committedDate": "2020-07-21T13:46:27Z", "message": "Add EventFilterNode as specific case of FilterNode towards a separation of the two"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3a5fb78bb704d8e0fda1fa756aa3de238e84b74", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/d3a5fb78bb704d8e0fda1fa756aa3de238e84b74", "committedDate": "2020-07-21T13:47:38Z", "message": "Merge branch 'develop' into feature/cleanup-event-iterating"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2a8c0d508b8c96e20ce07566dd4aa279072e826", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/f2a8c0d508b8c96e20ce07566dd4aa279072e826", "committedDate": "2020-07-21T14:40:06Z", "message": "Remove duplicate EventFilterNode.filterValue as it is not required and cause null values in cloning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d17a02eb8e00b94e75bb6ba35907a789e4fb77e", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/6d17a02eb8e00b94e75bb6ba35907a789e4fb77e", "committedDate": "2020-07-21T15:34:03Z", "message": "Delete AggregatorNode.java, prepapre most Code to directly use Aggregators"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f57e207a16da382be6836ba0e4e10ac3342e6584", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/f57e207a16da382be6836ba0e4e10ac3342e6584", "committedDate": "2020-07-21T15:46:09Z", "message": "Rework FiltersNode towards full fledged evaulating node"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fae7b05614a1902afe57f5e7a9d09ebfa4a50703", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/fae7b05614a1902afe57f5e7a9d09ebfa4a50703", "committedDate": "2020-07-21T15:46:20Z", "message": "Merge f57e207a16da382be6836ba0e4e10ac3342e6584 into da4dc50c70715fd861f88318b0db92eb4b514761"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcf15fa17657268cc01f49227f0290b41508e4a6", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/bcf15fa17657268cc01f49227f0290b41508e4a6", "committedDate": "2020-07-21T15:48:16Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a24540461df64c44a1660c7544d18b6c84c6cbe", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/1a24540461df64c44a1660c7544d18b6c84c6cbe", "committedDate": "2020-07-22T07:53:52Z", "message": "cleanup and simplfiy Exists/FiltersNode linkage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11b175404bd51f0bc4182e6e088579f93e3a89ab", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/11b175404bd51f0bc4182e6e088579f93e3a89ab", "committedDate": "2020-07-22T09:59:04Z", "message": "add missing changes from previous commit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMDc5ODMx", "url": "https://github.com/bakdata/conquery/pull/1287#pullrequestreview-453079831", "createdAt": "2020-07-22T07:55:54Z", "commit": {"oid": "1a24540461df64c44a1660c7544d18b6c84c6cbe"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzo1NTo1NFrOG1XDMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzo1Njo1NFrOG1XFgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNTM2MQ==", "bodyText": "Inline this class", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r458605361", "createdAt": "2020-07-22T07:55:54Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/filter/SingleColumnEventFilterNode.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.bakdata.conquery.models.query.queryplan.filter;\n+\n+import java.util.Set;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import com.bakdata.conquery.models.datasets.Column;\n+import com.bakdata.conquery.models.identifiable.ids.specific.TableId;\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+public abstract class SingleColumnEventFilterNode<FE_TYPE> extends EventFilterNode<FE_TYPE> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a24540461df64c44a1660c7544d18b6c84c6cbe"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNTk1NQ==", "bodyText": "Namen sind doof", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r458605955", "createdAt": "2020-07-22T07:56:54Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/FiltersNode.java", "diffHunk": "@@ -64,23 +90,30 @@ public boolean isContained() {\n \t\t\t\treturn false;\n \t\t\t}\n \t\t}\n-\t\treturn getChild().isContained();\n+\n+\t\treturn hit;\n \t}\n \t\n \t@Override\n \tpublic FiltersNode doClone(CloneContext ctx) {\n-\t\tList<FilterNode<?>> copy = new ArrayList<>(filters);\n-\t\tcopy.replaceAll(fn->fn.clone(ctx));\n+\t\tList<FilterNode<?>> _filters = new ArrayList<>(filters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a24540461df64c44a1660c7544d18b6c84c6cbe"}, "originalPosition": 112}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzODY0ODQ3", "url": "https://github.com/bakdata/conquery/pull/1287#pullrequestreview-453864847", "createdAt": "2020-07-23T06:34:07Z", "commit": {"oid": "11b175404bd51f0bc4182e6e088579f93e3a89ab"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNjozNDowN1rOG19yEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QwNzoyNTo1OFrOG1_Cig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTIzOTk1NQ==", "bodyText": "Kannst du diese Zeile nach Zeile 99 packen, dort werden die anderen Selects zusammengeholt und es l\u00e4sst sich bestimmt noch etwas vereinfachen.", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459239955", "createdAt": "2020-07-23T06:34:07Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java", "diffHunk": "@@ -72,7 +70,7 @@\n \tpublic QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n \t\tConceptElement<?>[] concepts = resolveConcepts(ids, context.getCentralRegistry());\n \n-\t\tList<AggregatorNode<?>> conceptAggregators = createConceptAggregators(plan, selects);\n+\t\tList<Aggregator<?>> conceptAggregators = createConceptAggregators(plan, selects);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b175404bd51f0bc4182e6e088579f93e3a89ab"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0MTIzMw==", "bodyText": "resolvedSelects w\u00fcrde ich z.B. tableSelects nennen", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459241233", "createdAt": "2020-07-23T06:37:39Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java", "diffHunk": "@@ -98,31 +96,34 @@ public QPNode createQueryPlan(QueryPlanContext context, ConceptQueryPlan plan) {\n \t\t\t\t}\n \t\t\t}\n \n-\t\t\tList<AggregatorNode<?>> aggregators = new ArrayList<>();\n+\t\t\tList<Aggregator<?>> aggregators = new ArrayList<>();\n \t\t\t//add aggregators\n \n \t\t\taggregators.addAll(conceptAggregators);\n \t\t\taggregators.addAll(createConceptAggregators(plan, resolvedSelects));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b175404bd51f0bc4182e6e088579f93e3a89ab"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0NTI3OA==", "bodyText": "Die Umbenennung verstehe ich nicht so wirklich", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459245278", "createdAt": "2020-07-23T06:48:45Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/filter/SingleColumnEventFilterNode.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.bakdata.conquery.models.query.queryplan.filter;\n+\n+import java.util.Set;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import com.bakdata.conquery.models.datasets.Column;\n+import com.bakdata.conquery.models.identifiable.ids.specific.TableId;\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+public abstract class SingleColumnEventFilterNode<FE_TYPE> extends EventFilterNode<FE_TYPE> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYwNTM2MQ=="}, "originalCommit": {"oid": "1a24540461df64c44a1660c7544d18b6c84c6cbe"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0ODI4OQ==", "bodyText": "for-Loop-Klammern", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459248289", "createdAt": "2020-07-23T06:56:25Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/ConceptQueryPlan.java", "diffHunk": "@@ -50,10 +50,10 @@ public ConceptQueryPlan clone(CloneContext ctx) {\n \t\tcheckRequiredTables(ctx.getStorage());\n \t\t\n \t\tConceptQueryPlan clone = new ConceptQueryPlan(false);\n-\t\tclone.setChild(child.clone(ctx));\n+\t\tclone.setChild(ctx.clone((QPNode) child));\n \t\tfor(Aggregator<?> agg:aggregators)\n-\t\t\tclone.aggregators.add(agg.clone(ctx));\n-\t\tclone.specialDateUnion = specialDateUnion.clone(ctx);\n+\t\t\tclone.aggregators.add(ctx.clone((Aggregator<?>) agg));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b175404bd51f0bc4182e6e088579f93e3a89ab"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI0OTc4Mg==", "bodyText": "muss hier gecastet werden?", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459249782", "createdAt": "2020-07-23T07:00:12Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/ConceptQueryPlan.java", "diffHunk": "@@ -50,10 +50,10 @@ public ConceptQueryPlan clone(CloneContext ctx) {\n \t\tcheckRequiredTables(ctx.getStorage());\n \t\t\n \t\tConceptQueryPlan clone = new ConceptQueryPlan(false);\n-\t\tclone.setChild(child.clone(ctx));\n+\t\tclone.setChild(ctx.clone((QPNode) child));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b175404bd51f0bc4182e6e088579f93e3a89ab"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1MTI0MA==", "bodyText": "Hier dr\u00fcber sind noch isOfInterest Methoden ohne fast-fail", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459251240", "createdAt": "2020-07-23T07:04:02Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/QPParentNode.java", "diffHunk": "@@ -99,25 +97,25 @@ public boolean isOfInterest(Entity entity) {\n \t\t}\n \t\treturn interest;\n \t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b175404bd51f0bc4182e6e088579f93e3a89ab"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1Mjg4NQ==", "bodyText": "Ist der jetzt noch special?", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459252885", "createdAt": "2020-07-23T07:08:16Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/aggregators/specific/SpecialDateUnion.java", "diffHunk": "@@ -1,21 +1,49 @@\n package com.bakdata.conquery.models.query.queryplan.aggregators.specific;\n \n import com.bakdata.conquery.models.common.CDateSet;\n+import com.bakdata.conquery.models.common.daterange.CDateRange;\n+import com.bakdata.conquery.models.datasets.Column;\n+import com.bakdata.conquery.models.datasets.Table;\n import com.bakdata.conquery.models.events.Bucket;\n import com.bakdata.conquery.models.externalservice.ResultType;\n+import com.bakdata.conquery.models.query.QueryExecutionContext;\n import com.bakdata.conquery.models.query.queryplan.aggregators.Aggregator;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n+import lombok.RequiredArgsConstructor;\n \n /**\n  * Special Aggregator, used to calculate the times an entity has events after filtering.\n  */\n+@RequiredArgsConstructor\n public class SpecialDateUnion implements Aggregator<String> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b175404bd51f0bc4182e6e088579f93e3a89ab"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI1ODkzMg==", "bodyText": "Eigentlich k\u00f6nnten wir hier auch die Table zur\u00fcckgeben anstatt der ID. Der Queryplan existiert ja nur noch auf dem Worker und muss nicht mehr serialisiert/deserializiert werden.\nK\u00f6nnen wir uns mal \u00fcberlegen, bei einiges Selects wird eine Table zu einer Id umgewandelt bevor der Aggregator erzeugt wird. Manche haben eine statische Table Id ALL_ID-Table.", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459258932", "createdAt": "2020-07-23T07:22:20Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/filter/SingleColumnEventFilterNode.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.bakdata.conquery.models.query.queryplan.filter;\n+\n+import java.util.Set;\n+\n+import javax.validation.constraints.NotNull;\n+\n+import com.bakdata.conquery.models.datasets.Column;\n+import com.bakdata.conquery.models.identifiable.ids.specific.TableId;\n+import lombok.Getter;\n+import lombok.Setter;\n+\n+public abstract class SingleColumnEventFilterNode<FE_TYPE> extends EventFilterNode<FE_TYPE> {\n+\n+\tpublic SingleColumnEventFilterNode(Column column, FE_TYPE filterValue) {\n+\t\tsuper(filterValue);\n+\t\tthis.column = column;\n+\t}\n+\n+\t@NotNull @Getter @Setter\n+\tprivate Column column;\n+\n+\t@Override\n+\tpublic void collectRequiredTables(Set<TableId> requiredTables) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b175404bd51f0bc4182e6e088579f93e3a89ab"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTI2MDU1NA==", "bodyText": "du kannst @NonNull an den Parameter machen", "url": "https://github.com/bakdata/conquery/pull/1287#discussion_r459260554", "createdAt": "2020-07-23T07:25:58Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/ExternalNode.java", "diffHunk": "@@ -15,27 +12,25 @@\n import com.bakdata.conquery.models.identifiable.ids.specific.TableId;\n import com.bakdata.conquery.models.query.QueryExecutionContext;\n import com.bakdata.conquery.models.query.entity.Entity;\n-import com.bakdata.conquery.models.query.queryplan.QPChainNode;\n import com.bakdata.conquery.models.query.queryplan.QPNode;\n+import com.bakdata.conquery.models.query.queryplan.aggregators.specific.SpecialDateUnion;\n import com.bakdata.conquery.models.query.queryplan.clone.CloneContext;\n-\n import lombok.Getter;\n+import org.hibernate.validator.constraints.NotEmpty;\n \n-public class ExternalNode extends QPChainNode {\n+public class ExternalNode extends QPNode {\n \n+\tprivate SpecialDateUnion dateUnion;\n \t@Getter\n \tprivate final DatasetId dataset;\n \t@Getter @NotEmpty\n \tprivate final Map<Integer, CDateSet> includedEntities;\n \tprivate CDateSet contained;\n \t\n-\tpublic ExternalNode(QPNode child, DatasetId dataset, Map<Integer, CDateSet> includedEntities) {\n-\t\tsuper(child);\n+\tpublic ExternalNode(SpecialDateUnion dateUnion, DatasetId dataset, Map<Integer, CDateSet> includedEntities) {\n+\t\tthis.dateUnion = dateUnion;\n \t\tthis.dataset = dataset;\n-\t\tthis.includedEntities = Objects.requireNonNullElse(\n-\t\t\tincludedEntities,\n-\t\t\tCollections.emptyMap()\n-\t\t);\n+\t\tthis.includedEntities = Objects.requireNonNull(includedEntities);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11b175404bd51f0bc4182e6e088579f93e3a89ab"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ecd8d25bd6e795fcb4409b1a8e3946150d990b2", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/6ecd8d25bd6e795fcb4409b1a8e3946150d990b2", "committedDate": "2020-07-23T11:35:11Z", "message": "Code Review cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cde5bd8ad0b760ee7a099f02756592d3ead2196c", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/cde5bd8ad0b760ee7a099f02756592d3ead2196c", "committedDate": "2020-07-23T11:35:22Z", "message": "Merge 6ecd8d25bd6e795fcb4409b1a8e3946150d990b2 into 9341fbfa062c2613b47f8f262ffcc7db4b269d7a"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4be816cb2d99059b86ad0ad692172a894bf6c979", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/4be816cb2d99059b86ad0ad692172a894bf6c979", "committedDate": "2020-07-23T11:37:37Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d10bac1ba479d1b29e98b7324e0ef18432e8e5a1", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/d10bac1ba479d1b29e98b7324e0ef18432e8e5a1", "committedDate": "2020-07-23T12:52:53Z", "message": "Add NonNull Anno instead of manual checking"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22b853dff43f6defed2f8b1e03bf0dede362ea19", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/22b853dff43f6defed2f8b1e03bf0dede362ea19", "committedDate": "2020-07-23T12:58:09Z", "message": "more cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f0a2db33f0e34440bed253c54f91a59750a3ea9", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/5f0a2db33f0e34440bed253c54f91a59750a3ea9", "committedDate": "2020-07-23T14:46:01Z", "message": "Fixed a bug where state was maintained in ConceptNode::isOfInterest(Bucket)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "096f458f1560bb1dcecdf24587c46c4a7458040a", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/096f458f1560bb1dcecdf24587c46c4a7458040a", "committedDate": "2020-07-23T16:38:55Z", "message": "- Iterate only currently active children\n- Add nicer ToString to Column"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NjczNzA4", "url": "https://github.com/bakdata/conquery/pull/1287#pullrequestreview-454673708", "createdAt": "2020-07-24T07:09:37Z", "commit": {"oid": "096f458f1560bb1dcecdf24587c46c4a7458040a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51c9c84e9a6fb47a553d634fbd3752dddff89979", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/51c9c84e9a6fb47a553d634fbd3752dddff89979", "committedDate": "2020-07-24T14:05:13Z", "message": "Merge branch 'develop' into feature/cleanup-event-iterating\n\n# Conflicts:\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQExternalResolved.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/ConceptQueryPlan.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/EventIterating.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/QPNode.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/QPParentNode.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/AggregatorNode.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/ExternalNode.java\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/queryplan/specific/SpecialDateUnionAggregatorNode.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54c82133a86309637b415d94eaefd11211ad2bb1", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/54c82133a86309637b415d94eaefd11211ad2bb1", "committedDate": "2020-07-24T14:08:50Z", "message": "Post merge fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90620bc6f12a0f36a0679e373d8fa3c2abce80fb", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/90620bc6f12a0f36a0679e373d8fa3c2abce80fb", "committedDate": "2020-07-24T14:27:51Z", "message": "Post merge fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75f7f56ddd7e2098e61d2dfeb518e01d0867f7aa", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/75f7f56ddd7e2098e61d2dfeb518e01d0867f7aa", "committedDate": "2020-07-24T14:33:41Z", "message": "Fix NPE after merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c390244f91a79f0900b798077f68f983771c258", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/6c390244f91a79f0900b798077f68f983771c258", "committedDate": "2020-07-27T07:42:05Z", "message": "Merge branch 'develop' into feature/cleanup-event-iterating"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c344e07e127ee5009f8c685efb3901d48f891cb5", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/c344e07e127ee5009f8c685efb3901d48f891cb5", "committedDate": "2020-07-27T12:33:40Z", "message": "Undo change to FiltersNode in CQPConcept as that is required for Plugins"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "992cd52c910cd4e13943bfc218b569ff85ece4fc", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/992cd52c910cd4e13943bfc218b569ff85ece4fc", "committedDate": "2020-07-27T13:09:55Z", "message": "Merge branch 'develop' into feature/cleanup-event-iterating"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4506, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}