{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NzE3MDAz", "number": 1043, "title": "Feature/grafana", "bodyText": "", "createdAt": "2020-02-18T16:33:12Z", "url": "https://github.com/bakdata/conquery/pull/1043", "merged": true, "mergeCommit": {"oid": "9254de4b01e891f6bd625dddec65d6936a053c86"}, "closed": true, "closedAt": "2020-03-16T16:52:23Z", "author": {"login": "awildturtok"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFLN5HAH2gAyMzc2NzE3MDAzOjQ0NDAzODJjOTMwODIzMTg3Y2M2YzU2ZDBkNjEwNzY0MDk3ODE5Y2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOQ0HxAH2gAyMzc2NzE3MDAzOmNkMDM4Yjg5NzkyZmJhOTM4YWVjOGQyYmUyNTkxZWRmNDI5ZmFjZDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4440382c930823187cc6c56d0d610764097819cc", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/4440382c930823187cc6c56d0d610764097819cc", "committedDate": "2020-02-17T10:59:50Z", "message": "metrics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7128781d7ef96752b503618920c6b02ce25dcbd", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/c7128781d7ef96752b503618920c6b02ce25dcbd", "committedDate": "2020-02-17T16:25:21Z", "message": "metrics for Query execution"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b93d75dcc787aecec42ee0c92b70ab9e17f1b05e", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/b93d75dcc787aecec42ee0c92b70ab9e17f1b05e", "committedDate": "2020-02-17T16:25:40Z", "message": "metered annotations for API classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "afb136890b0a860e92b7f903c65cd266e5c809c1", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/afb136890b0a860e92b7f903c65cd266e5c809c1", "committedDate": "2020-02-18T14:17:17Z", "message": "Metrics for Jobs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12a4fc19a6d82fe49f7d8003f728df50bcfb9865", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/12a4fc19a6d82fe49f7d8003f728df50bcfb9865", "committedDate": "2020-02-18T16:31:37Z", "message": "remove registry as parameter and instead rely on shared registry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7ceeab98d3693a975a30b295d3b886587159f26", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/b7ceeab98d3693a975a30b295d3b886587159f26", "committedDate": "2020-02-19T12:46:15Z", "message": "Fixed DefaultAuthFilter having Priority=5000 (by way of default value)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c999e1c58f5d417ad1cd9055291cac2d50254d0", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/5c999e1c58f5d417ad1cd9055291cac2d50254d0", "committedDate": "2020-02-19T12:46:48Z", "message": "Fixed DefaultInitialUserRealm not removing initial 'Bearer' prefix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ee34259e6fa52bdd460eb65f19ab017ff6a454b", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/7ee34259e6fa52bdd460eb65f19ab017ff6a454b", "committedDate": "2020-02-19T12:47:47Z", "message": "Added ActiveUsersFilter, counting the active users via Cache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30a183b3ad06c52689d61621222bb860cef8583f", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/30a183b3ad06c52689d61621222bb860cef8583f", "committedDate": "2020-02-19T12:47:58Z", "message": "Merge 7ee34259e6fa52bdd460eb65f19ab017ff6a454b into 5069bf6e15c95229661b99828bbab56c7be45647"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e4ecfa0b4dae48d2783ee776dfd774b63600366", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/1e4ecfa0b4dae48d2783ee776dfd774b63600366", "committedDate": "2020-02-19T12:50:06Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a030d7dfedfd38e00f2dabb21220eae5d46de2e2", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/a030d7dfedfd38e00f2dabb21220eae5d46de2e2", "committedDate": "2020-02-19T14:51:45Z", "message": "Metrics reporting of QueryExecution is now done for the whole tree."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b89b5665f5d6f5a4fefd8e0d845e123d242b43b", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/4b89b5665f5d6f5a4fefd8e0d845e123d242b43b", "committedDate": "2020-02-19T14:57:20Z", "message": "fixed naming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82a71dcda6a787316432e6e92a9391e55bca97e7", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/82a71dcda6a787316432e6e92a9391e55bca97e7", "committedDate": "2020-02-19T14:57:32Z", "message": "Merge remote-tracking branch 'origin/feature/grafana' into feature/grafana"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f35e30a64bb2e754c1970ca697a94c8e15f1fb67", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/f35e30a64bb2e754c1970ca697a94c8e15f1fb67", "committedDate": "2020-02-24T10:50:25Z", "message": "Fixed not cleaning up Grafana Gauge."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MTc0NTIz", "url": "https://github.com/bakdata/conquery/pull/1043#pullrequestreview-364174523", "createdAt": "2020-02-25T14:18:50Z", "commit": {"oid": "f35e30a64bb2e754c1970ca697a94c8e15f1fb67"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MTg4MjA0", "url": "https://github.com/bakdata/conquery/pull/1043#pullrequestreview-367188204", "createdAt": "2020-03-02T13:15:55Z", "commit": {"oid": "f35e30a64bb2e754c1970ca697a94c8e15f1fb67"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMzoxNTo1NlrOFwfEig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMzoxNTo1NlrOFwfEig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM4NTAzNA==", "bodyText": "Ich glaube hier ist ein unn\u00f6tiges Klammerpaar", "url": "https://github.com/bakdata/conquery/pull/1043#discussion_r386385034", "createdAt": "2020-03-02T13:15:56Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/auth/web/ActiveUsersFilter.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package com.bakdata.conquery.models.auth.web;\n+\n+import java.io.IOException;\n+import java.security.Principal;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.annotation.Priority;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n+import javax.ws.rs.container.PreMatching;\n+\n+import com.bakdata.conquery.io.xodus.MasterMetaStorage;\n+import com.bakdata.conquery.models.auth.AuthorizationHelper;\n+import com.bakdata.conquery.models.auth.entities.Group;\n+import com.bakdata.conquery.models.auth.entities.User;\n+import com.bakdata.conquery.models.config.ConqueryConfig;\n+import com.codahale.metrics.SharedMetricRegistries;\n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import lombok.RequiredArgsConstructor;\n+import lombok.SneakyThrows;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+@PreMatching\n+// Chain this filter after the Authentication filter\n+@Priority(2000)\n+@RequiredArgsConstructor\n+public class ActiveUsersFilter implements ContainerRequestFilter {\n+\n+\tprivate final MasterMetaStorage storage;\n+\n+\t/**\n+\t * Google cache managing evicition etc for us.\n+\t */\n+\tprivate final Cache<User, Boolean> activeUsers = CacheBuilder.newBuilder()\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .expireAfterAccess(ConqueryConfig.getInstance().getMetricsConfig().getUserActiveHours(), TimeUnit.HOURS)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.removalListener(notification -> decrementPrimaryGroupCount((User) notification.getKey()))\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.build();\n+\n+\n+\n+\n+\tpublic void incrementPrimaryGroupCount(User user) {\n+\t\tfinal Group primaryGroup = AuthorizationHelper.getPrimaryGroup(user, storage);\n+\n+\t\t// Groups with less than three users are not tracked, for privacy reasons.\n+\t\tif(primaryGroup.getMembers().size() <= ConqueryConfig.getInstance().getMetricsConfig().getGroupTrackingMinSize())\n+\t\t\treturn;\n+\n+\t\tSharedMetricRegistries.getDefault().counter(primaryGroup.getName() + \".active\").inc();\n+\t}\n+\n+\tpublic void decrementPrimaryGroupCount(User user) {\n+\t\tfinal Group primaryGroup = AuthorizationHelper.getPrimaryGroup(user, storage);\n+\n+\t\t// Groups with less than three users are not tracked.\n+\t\tif(primaryGroup.getMembers().size() <= ConqueryConfig.getInstance().getMetricsConfig().getGroupTrackingMinSize())\n+\t\t\treturn;\n+\n+\t\tSharedMetricRegistries.getDefault().counter(primaryGroup.getName() + \".active\").dec();\n+\t}\n+\n+\n+\t@SneakyThrows\n+\t@Override\n+\tpublic void filter(ContainerRequestContext requestContext) throws IOException {\n+\t\tfinal Principal userPrincipal = requestContext.getSecurityContext().getUserPrincipal();\n+\n+\t\tif(userPrincipal == null){\n+\t\t\treturn;\n+\t\t}\n+\n+\t\tactiveUsers.get(((User) userPrincipal), () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f35e30a64bb2e754c1970ca697a94c8e15f1fb67"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfe4ddf7d33b2ce55d8e75e8d5e900ee57c7d960", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/dfe4ddf7d33b2ce55d8e75e8d5e900ee57c7d960", "committedDate": "2020-03-02T13:27:44Z", "message": "Update ActiveUsersFilter.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "313844ee592f1115e4b40c25b4512f34125a33dc", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/313844ee592f1115e4b40c25b4512f34125a33dc", "committedDate": "2020-03-02T13:29:01Z", "message": "Update ConqueryMetricsConfig.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d2248040772f82aaa817fec0edbdb8a5fd20c1f", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/2d2248040772f82aaa817fec0edbdb8a5fd20c1f", "committedDate": "2020-03-04T11:08:55Z", "message": "Merge branch 'develop' into feature/grafana"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae391108472944219918feb3db48146754daca8a", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/ae391108472944219918feb3db48146754daca8a", "committedDate": "2020-03-16T14:05:14Z", "message": "Merge remote-tracking branch 'origin/develop' into feature/grafana\n\n# Conflicts:\n#\tbackend/src/main/java/com/bakdata/conquery/models/query/QueryManager.java\n#\tbackend/src/main/java/com/bakdata/conquery/resources/api/FilterResource.java\n#\tdocs/Config JSON.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5462701711af2541c68662bc3df498a0c23cd7c", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/a5462701711af2541c68662bc3df498a0c23cd7c", "committedDate": "2020-03-16T14:06:56Z", "message": "removed duplicate handling of finish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67a5167c90257062ee97101ce1b6f31c6d0592bb", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/67a5167c90257062ee97101ce1b6f31c6d0592bb", "committedDate": "2020-03-16T15:43:52Z", "message": "fixed not properly setting state in finish method."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9771ad8b2301f5f0a0d1e194b72838103c2bc31b", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/9771ad8b2301f5f0a0d1e194b72838103c2bc31b", "committedDate": "2020-03-16T15:49:50Z", "message": "Merge branch 'develop' into feature/grafana"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9207c09cd66d6f0084576b0d9fdc0d40e033382", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/c9207c09cd66d6f0084576b0d9fdc0d40e033382", "committedDate": "2020-03-16T16:03:36Z", "message": "Update AutoDoc.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc4611388c9c3a30289b44cba9d8627328e04e6f", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/cc4611388c9c3a30289b44cba9d8627328e04e6f", "committedDate": "2020-03-16T16:03:48Z", "message": "Merge branch 'develop' into feature/grafana"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c1d593d25673e83a72b128b963e2c3e3b5ac550", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/8c1d593d25673e83a72b128b963e2c3e3b5ac550", "committedDate": "2020-03-16T16:06:26Z", "message": "Update azure-test.yml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1MzQ3MDU2", "url": "https://github.com/bakdata/conquery/pull/1043#pullrequestreview-375347056", "createdAt": "2020-03-16T15:50:35Z", "commit": {"oid": "67a5167c90257062ee97101ce1b6f31c6d0592bb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTo1MDo1OFrOF26fyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjowNzoyNlrOF27NKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEyNTgzMw==", "bodyText": "Cool gel\u00f6st!", "url": "https://github.com/bakdata/conquery/pull/1043#discussion_r393125833", "createdAt": "2020-03-16T15:50:58Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/auth/web/ActiveUsersFilter.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package com.bakdata.conquery.models.auth.web;\n+\n+import java.io.IOException;\n+import java.security.Principal;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.annotation.Priority;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n+import javax.ws.rs.container.PreMatching;\n+\n+import com.bakdata.conquery.io.xodus.MasterMetaStorage;\n+import com.bakdata.conquery.models.auth.AuthorizationHelper;\n+import com.bakdata.conquery.models.auth.entities.Group;\n+import com.bakdata.conquery.models.auth.entities.User;\n+import com.bakdata.conquery.models.config.ConqueryConfig;\n+import com.codahale.metrics.SharedMetricRegistries;\n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import lombok.RequiredArgsConstructor;\n+import lombok.SneakyThrows;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+@PreMatching\n+// Chain this filter after the Authentication filter\n+@Priority(2000)\n+@RequiredArgsConstructor\n+public class ActiveUsersFilter implements ContainerRequestFilter {\n+\n+\tprivate final MasterMetaStorage storage;\n+\n+\t/**\n+\t * Google cache managing evicition etc for us.\n+\t */\n+\tprivate final Cache<User, Boolean> activeUsers = CacheBuilder.newBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9771ad8b2301f5f0a0d1e194b72838103c2bc31b"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEyNjQwNw==", "bodyText": "zweimal \".active\" -> Konstante", "url": "https://github.com/bakdata/conquery/pull/1043#discussion_r393126407", "createdAt": "2020-03-16T15:51:46Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/auth/web/ActiveUsersFilter.java", "diffHunk": "@@ -0,0 +1,79 @@\n+package com.bakdata.conquery.models.auth.web;\n+\n+import java.io.IOException;\n+import java.security.Principal;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.annotation.Priority;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n+import javax.ws.rs.container.PreMatching;\n+\n+import com.bakdata.conquery.io.xodus.MasterMetaStorage;\n+import com.bakdata.conquery.models.auth.AuthorizationHelper;\n+import com.bakdata.conquery.models.auth.entities.Group;\n+import com.bakdata.conquery.models.auth.entities.User;\n+import com.bakdata.conquery.models.config.ConqueryConfig;\n+import com.codahale.metrics.SharedMetricRegistries;\n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import lombok.RequiredArgsConstructor;\n+import lombok.SneakyThrows;\n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n+@PreMatching\n+// Chain this filter after the Authentication filter\n+@Priority(2000)\n+@RequiredArgsConstructor\n+public class ActiveUsersFilter implements ContainerRequestFilter {\n+\n+\tprivate final MasterMetaStorage storage;\n+\n+\t/**\n+\t * Google cache managing evicition etc for us.\n+\t */\n+\tprivate final Cache<User, Boolean> activeUsers = CacheBuilder.newBuilder()\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t   .expireAfterAccess(ConqueryConfig.getInstance().getMetricsConfig().getUserActiveHours(), TimeUnit.HOURS)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.removalListener(notification -> decrementPrimaryGroupCount((User) notification.getKey()))\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t.build();\n+\n+\n+\n+\n+\tpublic void incrementPrimaryGroupCount(User user) {\n+\t\tfinal Group primaryGroup = AuthorizationHelper.getPrimaryGroup(user, storage);\n+\n+\t\t// Groups with less than three users are not tracked, for privacy reasons.\n+\t\tif(primaryGroup.getMembers().size() <= ConqueryConfig.getInstance().getMetricsConfig().getGroupTrackingMinSize())\n+\t\t\treturn;\n+\n+\t\tSharedMetricRegistries.getDefault().counter(primaryGroup.getName() + \".active\").inc();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9771ad8b2301f5f0a0d1e194b72838103c2bc31b"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEyNjcwOA==", "bodyText": "Danke :)", "url": "https://github.com/bakdata/conquery/pull/1043#discussion_r393126708", "createdAt": "2020-03-16T15:52:11Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/auth/develop/DefaultInitialUserRealm.java", "diffHunk": "@@ -88,9 +88,12 @@ public AuthenticationToken extractToken(ContainerRequestContext requestContext)\n \t\t\tuid = requestContext.getUriInfo().getQueryParameters().getFirst(UID_QUERY_STRING_PARAMETER);\n \t\t}\n \n+\n \t\tUserId userId = null;\n \n \t\tif (StringUtils.isNotEmpty(uid)) {\n+\t\t\tuid = uid.replaceFirst(\"^Bearer \", \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9771ad8b2301f5f0a0d1e194b72838103c2bc31b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEyNzY5NQ==", "bodyText": "Danke nochmals!", "url": "https://github.com/bakdata/conquery/pull/1043#discussion_r393127695", "createdAt": "2020-03-16T15:53:37Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/auth/web/DefaultAuthFilter.java", "diffHunk": "@@ -35,6 +37,7 @@\n @Slf4j\n @PreMatching\n @RequiredArgsConstructor(access = AccessLevel.PRIVATE)\n+@Priority(Priorities.AUTHENTICATION)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9771ad8b2301f5f0a0d1e194b72838103c2bc31b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMTI0Mw==", "bodyText": "Da fehlt noch ein decrement f\u00fcr diese Metric oder?", "url": "https://github.com/bakdata/conquery/pull/1043#discussion_r393131243", "createdAt": "2020-03-16T15:58:29Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java", "diffHunk": "@@ -107,27 +108,26 @@ public ManagedExecutionId createId() {\n \t\treturn new ManagedExecutionId(dataset, queryId);\n \t}\n \n-\tprotected void fail() {\n-\t\tsynchronized (execution) {\n-\t\t\tstate = ExecutionState.FAILED;\n-\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\texecution.countDown();\n-\t\t}\n+\tprotected void fail(MasterMetaStorage storage) {\n+\t\tfinish(storage, ExecutionState.FAILED);\n \t}\n \n \tpublic void start() {\n+\t\tSharedMetricRegistries.getDefault().counter(\"queries.running\").inc();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9771ad8b2301f5f0a0d1e194b72838103c2bc31b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMjQ5Mw==", "bodyText": "Wenn ja, dann ist es vielleicht besser eine Konstante f\u00fcr die metric zu haben", "url": "https://github.com/bakdata/conquery/pull/1043#discussion_r393132493", "createdAt": "2020-03-16T16:00:14Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java", "diffHunk": "@@ -107,27 +108,26 @@ public ManagedExecutionId createId() {\n \t\treturn new ManagedExecutionId(dataset, queryId);\n \t}\n \n-\tprotected void fail() {\n-\t\tsynchronized (execution) {\n-\t\t\tstate = ExecutionState.FAILED;\n-\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\texecution.countDown();\n-\t\t}\n+\tprotected void fail(MasterMetaStorage storage) {\n+\t\tfinish(storage, ExecutionState.FAILED);\n \t}\n \n \tpublic void start() {\n+\t\tSharedMetricRegistries.getDefault().counter(\"queries.running\").inc();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzMTI0Mw=="}, "originalCommit": {"oid": "9771ad8b2301f5f0a0d1e194b72838103c2bc31b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNDI0Ng==", "bodyText": "Werden failed executions auch dem Nutzer im Frontend angezeigt?", "url": "https://github.com/bakdata/conquery/pull/1043#discussion_r393134246", "createdAt": "2020-03-16T16:02:46Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java", "diffHunk": "@@ -107,27 +108,26 @@ public ManagedExecutionId createId() {\n \t\treturn new ManagedExecutionId(dataset, queryId);\n \t}\n \n-\tprotected void fail() {\n-\t\tsynchronized (execution) {\n-\t\t\tstate = ExecutionState.FAILED;\n-\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\texecution.countDown();\n-\t\t}\n+\tprotected void fail(MasterMetaStorage storage) {\n+\t\tfinish(storage, ExecutionState.FAILED);\n \t}\n \n \tpublic void start() {\n+\t\tSharedMetricRegistries.getDefault().counter(\"queries.running\").inc();\n+\n \t\tstartTime = LocalDateTime.now();\n \t\tstate = ExecutionState.RUNNING;\n \t}\n \n-\tprotected void finish(@NonNull MasterMetaStorage storage) {\n+\tprotected void finish(@NonNull MasterMetaStorage storage, ExecutionState executionState) {\n \t\tif (getState() == ExecutionState.NEW)\n \t\t\tlog.error(\"Query {} was never run.\", getId());\n \n \t\tsynchronized (execution) {\n \t\t\tfinishTime = LocalDateTime.now();\n-\t\t\tstate = ExecutionState.DONE;\n \t\t\texecution.countDown();\n+\t\t\tsetState(executionState);\n+\n \t\t\ttry {\n \t\t\t\tstorage.updateExecution(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9771ad8b2301f5f0a0d1e194b72838103c2bc31b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNTc0NA==", "bodyText": "typo lfast", "url": "https://github.com/bakdata/conquery/pull/1043#discussion_r393135744", "createdAt": "2020-03-16T16:04:53Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/jobs/JobManager.java", "diffHunk": "@@ -12,11 +12,11 @@\n public class JobManager implements Managed {\n \tprivate final JobExecutor slowExecutor;\n \tprivate final JobExecutor fastExecutor;\n-\t\n-\t\n+\n+\n \tpublic JobManager(String labelSuffix) {\n-\t\tslowExecutor = new JobExecutor(\"slow \"+labelSuffix);\n-\t\tfastExecutor = new JobExecutor(\"fast \"+labelSuffix);\n+\t\tslowExecutor = new JobExecutor(\"Job Manager slow \" + labelSuffix);\n+\t\tfastExecutor = new JobExecutor(\"Job Manager lfast \" + labelSuffix);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4611388c9c3a30289b44cba9d8627328e04e6f"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNjc5Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/bakdata/conquery/pull/1043#discussion_r393136793", "createdAt": "2020-03-16T16:06:28Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/messages/namespaces/specific/ExecuteQuery.java", "diffHunk": "@@ -43,6 +43,7 @@ public void react(Worker context) throws Exception {\n \t\t} catch (Exception e) {\n \t\t\t// If one of the plans can not be created (maybe due to a Id that references a non existing concept) fail the whole job.\n \t\t\tsendFailureToMaster(execution.getInitializedShardResult(null), execution, context, e);\n+\t\t\treturn;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc4611388c9c3a30289b44cba9d8627328e04e6f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNzQ1MQ==", "bodyText": "Ansonsten speicher die Query nur ab wenn auch ein Storage reingereicht wird", "url": "https://github.com/bakdata/conquery/pull/1043#discussion_r393137451", "createdAt": "2020-03-16T16:07:26Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java", "diffHunk": "@@ -107,27 +108,26 @@ public ManagedExecutionId createId() {\n \t\treturn new ManagedExecutionId(dataset, queryId);\n \t}\n \n-\tprotected void fail() {\n-\t\tsynchronized (execution) {\n-\t\t\tstate = ExecutionState.FAILED;\n-\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\texecution.countDown();\n-\t\t}\n+\tprotected void fail(MasterMetaStorage storage) {\n+\t\tfinish(storage, ExecutionState.FAILED);\n \t}\n \n \tpublic void start() {\n+\t\tSharedMetricRegistries.getDefault().counter(\"queries.running\").inc();\n+\n \t\tstartTime = LocalDateTime.now();\n \t\tstate = ExecutionState.RUNNING;\n \t}\n \n-\tprotected void finish(@NonNull MasterMetaStorage storage) {\n+\tprotected void finish(@NonNull MasterMetaStorage storage, ExecutionState executionState) {\n \t\tif (getState() == ExecutionState.NEW)\n \t\t\tlog.error(\"Query {} was never run.\", getId());\n \n \t\tsynchronized (execution) {\n \t\t\tfinishTime = LocalDateTime.now();\n-\t\t\tstate = ExecutionState.DONE;\n \t\t\texecution.countDown();\n+\t\t\tsetState(executionState);\n+\n \t\t\ttry {\n \t\t\t\tstorage.updateExecution(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEzNDI0Ng=="}, "originalCommit": {"oid": "9771ad8b2301f5f0a0d1e194b72838103c2bc31b"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f94cbf9a014c998585b2d147a88834f5cdbbb812", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/f94cbf9a014c998585b2d147a88834f5cdbbb812", "committedDate": "2020-03-16T16:33:27Z", "message": "cleanup of Metrics consolidated into utility classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78ca005f876baac89e255721a61110fee3a9c3cc", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/78ca005f876baac89e255721a61110fee3a9c3cc", "committedDate": "2020-03-16T16:36:08Z", "message": "fixed Metrics usage to always use name creation method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd038b89792fba938aec8d2be2591edf429facd5", "author": {"user": {"login": "awildturtok", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/cd038b89792fba938aec8d2be2591edf429facd5", "committedDate": "2020-03-16T16:36:26Z", "message": "Merge remote-tracking branch 'origin/feature/grafana' into feature/grafana"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4716, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}