{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5MTU3ODUy", "number": 1236, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjoxNzo0N1rOEIV2ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjoxNzo0N1rOEIV2ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTgyMDUzOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjoxNzo0N1rOGoPlNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjoxNzo0N1rOGoPlNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg1MTUxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tList<AggregatorNode<?>> nodes = new ArrayList<>();\n          \n          \n            \n            \t\tList<ExistsAggregator> existsAggregators = new ArrayList<>();\n          \n          \n            \n            \n          \n          \n            \n            \t\tfor (Select s : select) {\n          \n          \n            \n            \t\t\tAggregatorNode<?> agg = new AggregatorNode<>(s.createAggregator());\n          \n          \n            \n            \n          \n          \n            \n            \t\t\tif(agg.getAggregator() instanceof ExistsAggregator){\n          \n          \n            \n            \t\t\t\texistsAggregators.add(((ExistsAggregator) agg.getAggregator()));\n          \n          \n            \n            \t\t\t}\n          \n          \n            \n            \n          \n          \n            \n            \t\t\tplan.addAggregator(agg.getAggregator());\n          \n          \n            \n            \t\tList<AggregatorNode<?>> nodes = new ArrayList<>();\n          \n          \n            \n            \n          \n          \n            \n            \t\tfor (Select s : select) {\n          \n          \n            \n            \t\t\tAggregatorNode<?> agg = new AggregatorNode<>(s.createAggregator());\n          \n          \n            \n            \n          \n          \n            \n            \t\t\tplan.addAggregator(agg.getAggregator());", "url": "https://github.com/bakdata/conquery/pull/1236#discussion_r444851510", "createdAt": "2020-06-24T12:17:47Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/concept/specific/CQConcept.java", "diffHunk": "@@ -149,17 +154,24 @@ private long calculateBitMask(ConceptElement<?>[] concepts) {\n \tprotected QPNode conceptChild(Concept<?> concept, QueryPlanContext context, List<FilterNode<?>> filters, List<AggregatorNode<?>> aggregators) {\n \t\tQPNode result = AndNode.of(aggregators);\n \t\tif(!filters.isEmpty()) {\n-\t\t\tresult = new FiltersNode(filters, result);\n+\t\t\treturn new FiltersNode(filters, result);\n \t\t}\n+\n \t\treturn result;\n \t}\n \n \tprivate static List<AggregatorNode<?>> createConceptAggregators(ConceptQueryPlan plan, List<Select> select) {\n \n \t\tList<AggregatorNode<?>> nodes = new ArrayList<>();\n+\t\tList<ExistsAggregator> existsAggregators = new ArrayList<>();\n \n \t\tfor (Select s : select) {\n \t\t\tAggregatorNode<?> agg = new AggregatorNode<>(s.createAggregator());\n+\n+\t\t\tif(agg.getAggregator() instanceof ExistsAggregator){\n+\t\t\t\texistsAggregators.add(((ExistsAggregator) agg.getAggregator()));\n+\t\t\t}\n+\n \t\t\tplan.addAggregator(agg.getAggregator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e584c639a07a3f708c871244298cb11e3e1eef5e"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1418, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}