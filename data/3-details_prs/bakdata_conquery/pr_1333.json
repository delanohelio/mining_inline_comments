{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3MzQwMjcz", "number": 1333, "title": "remove decoupled meta store", "bodyText": "The MetaStorage contained a so called meta store which was not used. This removes that store.", "createdAt": "2020-09-01T21:16:29Z", "url": "https://github.com/bakdata/conquery/pull/1333", "merged": true, "mergeCommit": {"oid": "c0a031a3ede18cbe99fe5c7c1736d46e8f522b7f"}, "closed": true, "closedAt": "2020-10-07T10:15:33Z", "author": {"login": "thoniTUB"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLZzdPABqjM3OTM5MTE0MTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQIADFgFqTUwMzYwMjA2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e3c494a1440e24ca700cadb7f748124d1c65520", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/3e3c494a1440e24ca700cadb7f748124d1c65520", "committedDate": "2020-09-02T07:25:18Z", "message": "improve log message"}, "afterCommit": {"oid": "e2874c074c81c9b49541956c22a678a02de56703", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/e2874c074c81c9b49541956c22a678a02de56703", "committedDate": "2020-09-22T15:33:40Z", "message": "improve log message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NDU2NjMw", "url": "https://github.com/bakdata/conquery/pull/1333#pullrequestreview-498456630", "createdAt": "2020-09-29T13:17:12Z", "commit": {"oid": "1c1044b6553af2a4f2b5acc5a300e5af064c0f37"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzoxNzoxMlrOHZspFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzoyMTowNVrOHZs0AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcwNzg2MA==", "bodyText": "irgendwie wirkt das etwas redundant?", "url": "https://github.com/bakdata/conquery/pull/1333#discussion_r496707860", "createdAt": "2020-09-29T13:17:12Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/io/xodus/NamespacedStorageImpl.java", "diffHunk": "@@ -122,10 +127,15 @@ protected void createStores(Collector<KeyIncludingStore<?, ?>> collector) {\n \n \n \t\tcollector\n-\t\t\t.collect(dataset)\n-\t\t\t.collect(dictionaries)\n-\t\t\t.collect(concepts)\n-\t\t\t.collect(imports);\n+\t\t\t.collect(environment,dataset)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c1044b6553af2a4f2b5acc5a300e5af064c0f37"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcxMDY1Nw==", "bodyText": "Ich hab gerade mal geschaut, die Store::close Methode wird nirgends implementiert :D", "url": "https://github.com/bakdata/conquery/pull/1333#discussion_r496710657", "createdAt": "2020-09-29T13:21:05Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/io/xodus/ConqueryStorageImpl.java", "diffHunk": "@@ -14,63 +13,84 @@\n import com.bakdata.conquery.util.functions.Collector;\n import com.codahale.metrics.Timer;\n import com.google.common.base.Stopwatch;\n+import com.google.common.collect.Multimap;\n+import com.google.common.collect.MultimapBuilder;\n import jetbrains.exodus.env.Environment;\n-import jetbrains.exodus.env.Environments;\n import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n \n+/**\n+ * Base class of persistent storages to uniformly handle load of data and closing of storages.\n+ */\n @Getter @Slf4j\n public abstract class ConqueryStorageImpl implements ConqueryStorage {\n \n-\tprotected final File directory;\n \tprotected final Validator validator;\n-\tprotected final Environment environment;\n \tprotected final StorageConfig config;\n \t@Getter\n \tprotected final CentralRegistry centralRegistry = new CentralRegistry();\n \tprivate final List<KeyIncludingStore<?,?>> stores = new ArrayList<>();\n+\t\n+\tprivate final Multimap<Environment, KeyIncludingStore<?,?>> environmentToStores = MultimapBuilder.linkedHashKeys().arrayListValues().build();\n \n-\tpublic ConqueryStorageImpl(Validator validator, StorageConfig config, File directory) {\n-\t\tthis.directory = directory;\n+\tpublic ConqueryStorageImpl(Validator validator, StorageConfig config) {\n \t\tthis.validator = validator;\n-\t\tthis.environment = Environments.newInstance(directory, config.getXodus().createConfig());\n \t\tthis.config = config;\n \t}\n \n-\tprotected void createStores(Collector<KeyIncludingStore<?,?>> collector) {\n-\t}\n+\t/**\n+\t * Stores can contain of multiple environments, whose themselves can consist of multiple stores.\n+\t * This method collects this information as a mapping that is used to load and later close the stores.\n+\t * The environments should be collected in the order the stores should be loaded.\n+\t */\n+\tabstract protected void createStores(Collector<Environment,KeyIncludingStore<?,?>> collector);\n \n \t/**\n \t * Load all stores from disk.\n \t */\n \t@Override\n \tpublic void loadData() {\n-\t\tcreateStores(stores::add);\n-\t\tlog.info(\"Loading storage {} from {}\", this.getClass().getSimpleName(), directory);\n-\n-\t\ttry (final Timer.Context timer = JobMetrics.getStoreLoadingTimer()) {\n-\t\t\tStopwatch all = Stopwatch.createStarted();\n-\t\t\tfor (KeyIncludingStore<?, ?> store : stores) {\n-\t\t\t\tstore.loadData();\n+\t\tcreateStores(environmentToStores::put);\n+\t\tfor(Environment environment : environmentToStores.keySet()) {\n+\t\t\tlog.info(\"Loading storage {} from {}\", this.getClass().getSimpleName(), environment.getLocation());\n+\t\t\t\n+\t\t\ttry (final Timer.Context timer = JobMetrics.getStoreLoadingTimer()) {\n+\t\t\t\tStopwatch all = Stopwatch.createStarted();\n+\t\t\t\tfor (KeyIncludingStore<?, ?> store : environmentToStores.get(environment)) {\n+\t\t\t\t\tstore.loadData();\n+\t\t\t\t}\n+\t\t\t\tlog.info(\"Loading of environment {} completed within {}\", environment.getLocation(), all.stop());\n \t\t\t}\n-\t\t\tlog.info(\"Loaded complete {} storage within {}\", this.getClass().getSimpleName(), all.stop());\n \t\t}\n-\n \t}\n+\t\n \n \t@Override\n \tpublic void close() throws IOException {\n-\t\tfor(KeyIncludingStore<?, ?> store : stores) {\n-\t\t\tstore.close();\n+\t\tfor(Environment environment : environmentToStores.keySet()) {\n+\t\t\tlog.info(\"Closing stores of environment {}\", environment.getLocation());\n+\t\t\tfor (KeyIncludingStore<?, ?> store : environmentToStores.get(environment)) {\n+\t\t\t\tlog.info(\"Closing store {}\", store.toString());\n+\t\t\t\tstore.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c1044b6553af2a4f2b5acc5a300e5af064c0f37"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bf99dc4a96b208e5f03a4297290daec2f7564ad", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/4bf99dc4a96b208e5f03a4297290daec2f7564ad", "committedDate": "2020-10-06T14:54:46Z", "message": "remove meta store and cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba89cad8bd7e141d785125e86a0a806314202879", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/ba89cad8bd7e141d785125e86a0a806314202879", "committedDate": "2020-10-06T14:54:47Z", "message": "improve log message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80082ea7762ee251d4f1e80d49347f59065a6494", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/80082ea7762ee251d4f1e80d49347f59065a6494", "committedDate": "2020-10-06T14:54:47Z", "message": "remove unused close method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a804459f70bf6018844f44467579da30e5660a2", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/6a804459f70bf6018844f44467579da30e5660a2", "committedDate": "2020-09-30T14:47:01Z", "message": "remove unused close method"}, "afterCommit": {"oid": "80082ea7762ee251d4f1e80d49347f59065a6494", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/80082ea7762ee251d4f1e80d49347f59065a6494", "committedDate": "2020-10-06T14:54:47Z", "message": "remove unused close method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d309716e97680f51335b6fa2a28297466e91f9a3", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/d309716e97680f51335b6fa2a28297466e91f9a3", "committedDate": "2020-10-06T14:56:13Z", "message": "adds missing import"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ae3470d3ed7804bb433fff942b2971e371a34b2", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/1ae3470d3ed7804bb433fff942b2971e371a34b2", "committedDate": "2020-10-06T15:34:52Z", "message": "fixes tests for storages, which are not auto closable anymore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3242a9ab9e959fa6f356fc83f627c4b579d09330", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/3242a9ab9e959fa6f356fc83f627c4b579d09330", "committedDate": "2020-10-06T15:35:16Z", "message": "pass multimap directly to the stores"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjAyMDYw", "url": "https://github.com/bakdata/conquery/pull/1333#pullrequestreview-503602060", "createdAt": "2020-10-07T07:39:20Z", "commit": {"oid": "3242a9ab9e959fa6f356fc83f627c4b579d09330"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4568, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}