{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzNjIzNTc5", "number": 1160, "title": "fix concurrent modification exception on permission cleanup", "bodyText": "", "createdAt": "2020-04-15T08:44:09Z", "url": "https://github.com/bakdata/conquery/pull/1160", "merged": true, "mergeCommit": {"oid": "4460ce39660ae1674dcecfc3a5f5ae115556dff5"}, "closed": true, "closedAt": "2020-04-15T10:34:10Z", "author": {"login": "thoniTUB"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXyxeZAH2gAyNDAzNjIzNTc5OjQ4YzkxZmJkMzk5NzkzMTRhYzg5NmFjNmRiNzZiYmI2ZDJlMzRkMjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX1m-mgH2gAyNDAzNjIzNTc5OjEwNjFlZjhiYTg3MmI3YTIwY2MxZjg2NWI0MTI3Y2RmNjMzNDI2NDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "48c91fbd39979314ac896ac6db76bbb6d2e34d25", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/48c91fbd39979314ac896ac6db76bbb6d2e34d25", "committedDate": "2020-04-15T07:15:38Z", "message": "hands out a copy of the permissions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzNTg1NjU2", "url": "https://github.com/bakdata/conquery/pull/1160#pullrequestreview-393585656", "createdAt": "2020-04-15T09:00:30Z", "commit": {"oid": "48c91fbd39979314ac896ac6db76bbb6d2e34d25"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwOTowMDozMFrOGFwZDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwOTowMDozMFrOGFwZDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY4ODkxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\tif (validRef.size() > 0) {\n          \n          \n            \n            \t\t\t\tif (!validRef.isEmpty()) {", "url": "https://github.com/bakdata/conquery/pull/1160#discussion_r408688910", "createdAt": "2020-04-15T09:00:30Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/tasks/QueryCleanupTask.java", "diffHunk": "@@ -142,52 +142,46 @@ public static int deleteQueryPermissionsWithMissingRef(MasterMetaStorage storage\n \t\t// Do the loop-di-loop\n \t\tfor (PermissionOwner<?> owner : owners) {\n \t\t\tSet<Permission> permissions = owner.getPermissions();\n-\t\t\tsynchronized (permissions) {\n-\t\t\t\t/*\n-\t\t\t\t * Directly use an Iterator here because the iterator of an for(elem:collection)\n-\t\t\t\t * loop does not consider that the collections grows or in our case shrinks.\n-\t\t\t\t */\n-\t\t\t\tIterator<Permission> it = permissions.iterator();\n-\t\t\t\twhile (it.hasNext()) {\n-\t\t\t\t\tPermission permission = it.next();\n-\t\t\t\t\tif (!(permission instanceof WildcardPermission)) {\n-\t\t\t\t\t\tlog.warn(\n-\t\t\t\t\t\t\t\"Encountered the permission type {} that is not handled by this routine. Permission was: {}\",\n-\t\t\t\t\t\t\tpermission.getClass(),\n-\t\t\t\t\t\t\tpermission);\n-\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t}\n-\t\t\t\t\tWildcardPermission wpermission = (WildcardPermission) permission;\n-\t\t\t\t\tif (!wpermission.getDomains().contains(QueryPermission.DOMAIN)) {\n-\t\t\t\t\t\t// Skip Permissions that do not reference an Execution/Query\n-\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t}\n+\t\t\tIterator<Permission> it = permissions.iterator();\n+\t\t\twhile (it.hasNext()) {\n+\t\t\t\tPermission permission = it.next();\n+\t\t\t\tif (!(permission instanceof WildcardPermission)) {\n+\t\t\t\t\tlog.warn(\n+\t\t\t\t\t\t\"Encountered the permission type {} that is not handled by this routine. Permission was: {}\",\n+\t\t\t\t\t\tpermission.getClass(),\n+\t\t\t\t\t\tpermission);\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\t\t\t\tWildcardPermission wpermission = (WildcardPermission) permission;\n+\t\t\t\tif (!wpermission.getDomains().contains(QueryPermission.DOMAIN)) {\n+\t\t\t\t\t// Skip Permissions that do not reference an Execution/Query\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n \n-\t\t\t\t\t// Handle multiple references to instances\n-\t\t\t\t\tSet<String> validRef = new HashSet<>();\n-\t\t\t\t\tfor (String sId : wpermission.getInstances()) {\n-\t\t\t\t\t\tManagedExecutionId mId = ManagedExecutionId.Parser.INSTANCE.parse(sId);\n-\t\t\t\t\t\tif (storage.getExecution(mId) != null) {\n-\t\t\t\t\t\t\t// Execution exists -- it is a valid reference\n-\t\t\t\t\t\t\tvalidRef.add(mId.toString());\n-\t\t\t\t\t\t}\n+\t\t\t\t// Handle multiple references to instances\n+\t\t\t\tSet<String> validRef = new HashSet<>();\n+\t\t\t\tfor (String sId : wpermission.getInstances()) {\n+\t\t\t\t\tManagedExecutionId mId = ManagedExecutionId.Parser.INSTANCE.parse(sId);\n+\t\t\t\t\tif (storage.getExecution(mId) != null) {\n+\t\t\t\t\t\t// Execution exists -- it is a valid reference\n+\t\t\t\t\t\tvalidRef.add(mId.toString());\n \t\t\t\t\t}\n-\t\t\t\t\tif (validRef.size() > 0) {\n-\t\t\t\t\t\tif (wpermission.getInstances().size() == validRef.size()) {\n-\t\t\t\t\t\t\t// All are valid, nothing changed proceed with the next permission\n-\t\t\t\t\t\t\tcontinue;\n-\t\t\t\t\t\t}\n-\t\t\t\t\t\t// Create a new Permission that only contains valid references\n-\t\t\t\t\t\tWildcardPermission reducedPermission = new WildcardPermission(\n-\t\t\t\t\t\t\tList.of(wpermission.getDomains(), wpermission.getAbilities(), validRef), wpermission.getCreationTime());\n-\t\t\t\t\t\towner.addPermission(storage, reducedPermission);\n+\t\t\t\t}\n+\t\t\t\tif (validRef.size() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48c91fbd39979314ac896ac6db76bbb6d2e34d25"}, "originalPosition": 66}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1061ef8ba872b7a20cc1f865b4127cdf63342643", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/1061ef8ba872b7a20cc1f865b4127cdf63342643", "committedDate": "2020-04-15T10:33:53Z", "message": "review changes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4584, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}