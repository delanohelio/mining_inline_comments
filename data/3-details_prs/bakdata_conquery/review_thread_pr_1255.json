{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MTAxMjYz", "number": 1255, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjo0MTo1NVrOEOH9YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjo1MDozN1rOEOIHVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjQ1OTIwOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/query/results/FailedEntityResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjo0MTo1NVrOGxGSsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNzo1NToxMlrOGxIgHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzNjQ5Ng==", "bodyText": "Ich wei\u00df, das war vorher schon so, aber macht es Sinn hier true zur\u00fcck zugeben?", "url": "https://github.com/bakdata/conquery/pull/1255#discussion_r454136496", "createdAt": "2020-07-14T06:41:55Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/results/FailedEntityResult.java", "diffHunk": "@@ -20,7 +20,12 @@\n \tpublic boolean isFailed() {\n \t\treturn true;\n \t}\n-\t\n+\n+\t@Override\n+\tpublic boolean isContained() {\n+\t\treturn true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f53ac391759780e6fb62b5f42a13f542bf2101"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE3MjcwMA==", "bodyText": "Gute Frage. So wie ich es umgesetzt habe schon aber das kann man ja auch anders l\u00f6sen.", "url": "https://github.com/bakdata/conquery/pull/1255#discussion_r454172700", "createdAt": "2020-07-14T07:55:12Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/results/FailedEntityResult.java", "diffHunk": "@@ -20,7 +20,12 @@\n \tpublic boolean isFailed() {\n \t\treturn true;\n \t}\n-\t\n+\n+\t@Override\n+\tpublic boolean isContained() {\n+\t\treturn true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzNjQ5Ng=="}, "originalCommit": {"oid": "84f53ac391759780e6fb62b5f42a13f542bf2101"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjQ2ODczOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/query/results/ShardResult.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjo0NToxN1rOGxGYNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjo0NToxN1rOGxGYNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDEzNzkxMQ==", "bodyText": "Warum nicht\nlog.error(\"Failed query {}\", queryId, e);", "url": "https://github.com/bakdata/conquery/pull/1255#discussion_r454137911", "createdAt": "2020-07-14T06:45:17Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/results/ShardResult.java", "diffHunk": "@@ -43,14 +44,26 @@ public synchronized void addResult(EntityResult result) {\n \t}\n \n \tpublic synchronized void finish() {\n-\t\tif(finishTime == null) {\n-\t\t\ttry {\n-\t\t\t\tresults = new ArrayList<>(Uninterruptibles.getUninterruptibly(future));\n-\t\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\t\tlog.info(\"Finished query {} with {} results within {}\", queryId, results.size(), Duration.between(startTime, finishTime));\n-\t\t\t} catch (ExecutionException e) {\n-\t\t\t\tlog.error(\"Failed query \"+queryId, e);\n+\t\tif (finishTime != null) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tfinal List<EntityResult> entityResults = Uninterruptibles.getUninterruptibly(future);\n+\t\t\tresults = new ArrayList<>(entityResults.size());\n+\n+\t\t\tfor (EntityResult entityResult : entityResults) {\n+\t\t\t\tif (!entityResult.isContained()){\n+\t\t\t\t\tcontinue;\n+\t\t\t\t}\n+\n+\t\t\t\tresults.add(entityResult);\n \t\t\t}\n+\n+\t\t\tfinishTime = LocalDateTime.now();\n+\t\t\tlog.info(\"Finished query {} with {} results within {}\", queryId, results.size(), Duration.between(startTime, finishTime));\n+\t\t} catch (ExecutionException e) {\n+\t\t\tlog.error(\"Failed query \"+queryId, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f53ac391759780e6fb62b5f42a13f542bf2101"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMjQ4NDcxOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/query/results/ShardResult.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNjo1MDozN1rOGxGh0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwNzo1MDoxOFrOGxIVZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0MDM2OQ==", "bodyText": "Ich bin mir nicht ganz sicher ob das einfach so mit FormQueryPlan geht. So weit ich das verstanden habe braucht dieser die Information \u00fcber NOT_CONTAINED, um leere Zeilen zu erzeugen.", "url": "https://github.com/bakdata/conquery/pull/1255#discussion_r454140369", "createdAt": "2020-07-14T06:50:37Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/results/ShardResult.java", "diffHunk": "@@ -43,14 +44,26 @@ public synchronized void addResult(EntityResult result) {\n \t}\n \n \tpublic synchronized void finish() {\n-\t\tif(finishTime == null) {\n-\t\t\ttry {\n-\t\t\t\tresults = new ArrayList<>(Uninterruptibles.getUninterruptibly(future));\n-\t\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\t\tlog.info(\"Finished query {} with {} results within {}\", queryId, results.size(), Duration.between(startTime, finishTime));\n-\t\t\t} catch (ExecutionException e) {\n-\t\t\t\tlog.error(\"Failed query \"+queryId, e);\n+\t\tif (finishTime != null) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tfinal List<EntityResult> entityResults = Uninterruptibles.getUninterruptibly(future);\n+\t\t\tresults = new ArrayList<>(entityResults.size());\n+\n+\t\t\tfor (EntityResult entityResult : entityResults) {\n+\t\t\t\tif (!entityResult.isContained()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84f53ac391759780e6fb62b5f42a13f542bf2101"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE2OTk1Ng==", "bodyText": "Das hier ist erst beim zur\u00fccksenden der Ergenisse. Innerhalb einer Entity/Ausf\u00fchrung bleibt das erhalten also sollte das passen.", "url": "https://github.com/bakdata/conquery/pull/1255#discussion_r454169956", "createdAt": "2020-07-14T07:50:18Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/results/ShardResult.java", "diffHunk": "@@ -43,14 +44,26 @@ public synchronized void addResult(EntityResult result) {\n \t}\n \n \tpublic synchronized void finish() {\n-\t\tif(finishTime == null) {\n-\t\t\ttry {\n-\t\t\t\tresults = new ArrayList<>(Uninterruptibles.getUninterruptibly(future));\n-\t\t\t\tfinishTime = LocalDateTime.now();\n-\t\t\t\tlog.info(\"Finished query {} with {} results within {}\", queryId, results.size(), Duration.between(startTime, finishTime));\n-\t\t\t} catch (ExecutionException e) {\n-\t\t\t\tlog.error(\"Failed query \"+queryId, e);\n+\t\tif (finishTime != null) {\n+\t\t\treturn;\n+\t\t}\n+\n+\t\ttry {\n+\t\t\tfinal List<EntityResult> entityResults = Uninterruptibles.getUninterruptibly(future);\n+\t\t\tresults = new ArrayList<>(entityResults.size());\n+\n+\t\t\tfor (EntityResult entityResult : entityResults) {\n+\t\t\t\tif (!entityResult.isContained()){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE0MDM2OQ=="}, "originalCommit": {"oid": "84f53ac391759780e6fb62b5f42a13f542bf2101"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1289, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}