{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NTE3NDc3", "number": 1273, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzoxNjozMFrOEPbHew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzoxNjozMFrOEPbHew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NjA4Mzc5OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/commands/SlaveCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzoxNjozMFrOGzIDKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNzoxNjozMFrOGzIDKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjI2MjQ0MQ==", "bodyText": "Die Wartezeit unterscheidet sich vom Master", "url": "https://github.com/bakdata/conquery/pull/1273#discussion_r456262441", "createdAt": "2020-07-17T07:16:30Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/commands/SlaveCommand.java", "diffHunk": "@@ -73,52 +75,63 @@ protected void run(Environment environment, Namespace namespace, ConqueryConfig\n \t\tsynchronized (environment) {\n \t\t\tenvironment.lifecycle().manage(this);\n \t\t\tvalidator = environment.getValidator();\n-\t\t\t\n+\n \t\t\tscheduler = environment\n-\t\t\t\t.lifecycle()\n-\t\t\t\t.scheduledExecutorService(\"Scheduled Messages\")\n-\t\t\t\t.build();\n+\t\t\t\t\t\t\t\t.lifecycle()\n+\t\t\t\t\t\t\t\t.scheduledExecutorService(\"Scheduled Messages\")\n+\t\t\t\t\t\t\t\t.build();\n \t\t}\n-\t\t\n+\n \t\tscheduler.scheduleAtFixedRate(this::reportJobManagerStatus, 30, 1, TimeUnit.SECONDS);\n \n \t\tthis.config = config;\n \n-\t\tif(config.getStorage().getDirectory().mkdirs()){\n+\t\tif (config.getStorage().getDirectory().mkdirs()) {\n \t\t\tlog.warn(\"Had to create Storage Dir at `{}`\", config.getStorage().getDirectory());\n \t\t}\n \n-\t\tworkers = new Workers(config.getQueries().getExecutionPool(),  config.getStorage().getNThreads());\n+\t\tworkers = new Workers(config.getQueries().getExecutionPool(), config.getStorage().getNThreads());\n+\t\tExecutorService loaders = Executors.newFixedThreadPool(config.getStorage().getNThreads());\n+\n \n \t\tFile storageDir = config.getStorage().getDirectory();\n-\t\tfor(File directory : storageDir.listFiles((file, name) -> name.startsWith(\"worker_\"))) {\n+\t\tfor (File directory : storageDir.listFiles((file, name) -> name.startsWith(\"worker_\"))) {\n \n-\t\t\tWorkerStorage workerStorage = WorkerStorage.tryLoad(validator, config.getStorage(), directory);\n-\t\t\tif (workerStorage == null) {\n-\t\t\t\tlog.warn(\"No valid WorkerStorage found in {}\",directory);\n-\t\t\t\tcontinue;\n-\t\t\t}\n+\t\t\tloaders.submit(() -> {\n+\t\t\t\tConqueryMDC.setLocation(directory.toString());\n \n-\t\t\tworkers.createWorker(\n-\t\t\t\t\tworkerStorage.getWorker(),\n-\t\t\t\t\tworkerStorage\n-\t\t\t);\n-\t\t}\n+\t\t\t\tWorkerStorage workerStorage = WorkerStorage.tryLoad(validator, config.getStorage(), directory);\n+\t\t\t\tif (workerStorage == null) {\n+\t\t\t\t\tlog.warn(\"No valid WorkerStorage found.\");\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\n+\t\t\t\tworkers.createWorker(\n+\t\t\t\t\t\tworkerStorage.getWorker(),\n+\t\t\t\t\t\tworkerStorage\n+\t\t\t\t);\n \n+\t\t\t\tConqueryMDC.clearLocation();\n+\t\t\t});\n+\t\t}\n \n+\t\tloaders.shutdown();\n+\t\twhile (!loaders.awaitTermination(30, TimeUnit.SECONDS)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eecadc11e65b180746290d3b67bbc97a8a2572d"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1300, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}