{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MTY0MzQy", "number": 1409, "title": "Feature/use user group mapping provided from oidc provider", "bodyText": "", "createdAt": "2020-10-23T19:08:14Z", "url": "https://github.com/bakdata/conquery/pull/1409", "merged": true, "mergeCommit": {"oid": "aa134d964d6777e5a24c02b21a398953e3d21796"}, "closed": true, "closedAt": "2020-11-26T12:19:45Z", "author": {"login": "thoniTUB"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ2PpDAH2gAyNTA5MTY0MzQyOmI5YWNhZWIwNTlhYzhmZjdlMzc4MzVkZDRhZTVjZTlhYzE0NmVmOWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgRfc0gH2gAyNTA5MTY0MzQyOjczZGI4NGFhYTY3ZTZlNDk2ZTkzM2ZiODYyMjgwNmQ2NjIyMjY3ZTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b9acaeb059ac8ff7e37835dd4ae5ce9ac146ef9e", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/b9acaeb059ac8ff7e37835dd4ae5ce9ac146ef9e", "committedDate": "2020-11-06T12:37:18Z", "message": "add group mappings to keycloak authenticated users"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f9193737f6753d45d8f804e22526139cf99be0c", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/4f9193737f6753d45d8f804e22526139cf99be0c", "committedDate": "2020-11-06T12:37:20Z", "message": "improve validation helper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "183bdd64a2d785769b5bf4101c7818de08018aa1", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/183bdd64a2d785769b5bf4101c7818de08018aa1", "committedDate": "2020-11-06T12:37:20Z", "message": "remove unused code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87728fc98f148becb2f14803c97f7292999e6009", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/87728fc98f148becb2f14803c97f7292999e6009", "committedDate": "2020-11-06T12:37:21Z", "message": "also support null values for leafs in violation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcdc2610701ab1ee1f675b294d1b7c4107599439", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/dcdc2610701ab1ee1f675b294d1b7c4107599439", "committedDate": "2020-11-06T12:37:21Z", "message": "adds comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d24dfc2e443b13e7ffdbe46e8bc8268cb0e73776", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/d24dfc2e443b13e7ffdbe46e8bc8268cb0e73776", "committedDate": "2020-11-06T12:38:36Z", "message": "adds validation to OIDCResourceOwnerPasswordCredentialRealmFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12921364d492ca58f04ff09ecbdfb0d26a4d2d19", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/12921364d492ca58f04ff09ecbdfb0d26a4d2d19", "committedDate": "2020-11-06T12:42:08Z", "message": "adds test for realm"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19b75bed35dfee28423f48b83c3cc31e9f5a0349", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/19b75bed35dfee28423f48b83c3cc31e9f5a0349", "committedDate": "2020-11-06T12:42:09Z", "message": "cleans up test, does not use mock lib for storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "411a4e707eab82fac6d4bb7d6b2d47ef743c5587", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/411a4e707eab82fac6d4bb7d6b2d47ef743c5587", "committedDate": "2020-11-06T12:42:10Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7443c399b05ca9d3c47ded3806e120fd23bc156c", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/7443c399b05ca9d3c47ded3806e120fd23bc156c", "committedDate": "2020-11-06T12:42:10Z", "message": "use Ids instead of concrete Object because their hash stays constant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bd03e5ccb9d88dd931048196a4174527e08ae29", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/1bd03e5ccb9d88dd931048196a4174527e08ae29", "committedDate": "2020-11-06T12:42:11Z", "message": "marks explicitly roles as a json property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d32779682a3270724f4d4a754049af553af0351d", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/d32779682a3270724f4d4a754049af553af0351d", "committedDate": "2020-11-06T12:42:11Z", "message": "further fixes from change to id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a7ffa63315c92b6e33afba8ef00c1caa18f7ff9", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/3a7ffa63315c92b6e33afba8ef00c1caa18f7ff9", "committedDate": "2020-11-06T13:23:19Z", "message": "fix secret extraction"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0f51895e34598a3a9babfb1c9c3d238d528d641", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/b0f51895e34598a3a9babfb1c9c3d238d528d641", "committedDate": "2020-10-26T13:22:48Z", "message": "further fixes from change to id"}, "afterCommit": {"oid": "3a7ffa63315c92b6e33afba8ef00c1caa18f7ff9", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/3a7ffa63315c92b6e33afba8ef00c1caa18f7ff9", "committedDate": "2020-11-06T13:23:19Z", "message": "fix secret extraction"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef79cd1ef662d80846c81f95eaf0b2594ed9a836", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/ef79cd1ef662d80846c81f95eaf0b2594ed9a836", "committedDate": "2020-11-06T13:25:52Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db28e093eb8af9fffad87d92fb695fd63c52d5a0", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/db28e093eb8af9fffad87d92fb695fd63c52d5a0", "committedDate": "2020-11-13T10:17:27Z", "message": "Merge branch 'develop' into feature/Auth-resolve-mapped-groups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MzQ0MTcx", "url": "https://github.com/bakdata/conquery/pull/1409#pullrequestreview-537344171", "createdAt": "2020-11-24T10:20:56Z", "commit": {"oid": "db28e093eb8af9fffad87d92fb695fd63c52d5a0"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoyMDo1N1rOH44nNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoyMjoyMFrOH44tjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQwOTg0Nw==", "bodyText": "Kannst du hier nicht einfach ne MultiException draus machen?", "url": "https://github.com/bakdata/conquery/pull/1409#discussion_r529409847", "createdAt": "2020-11-24T10:20:57Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/exceptions/ValidatorHelper.java", "diffHunk": "@@ -1,46 +1,63 @@\n package com.bakdata.conquery.models.exceptions;\n \n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n import javax.validation.ConstraintViolation;\n-import javax.ws.rs.core.Request;\n+import javax.validation.ValidationException;\n \n-import io.dropwizard.jersey.validation.ConstraintMessage;\n+import io.dropwizard.logback.shaded.guava.base.Optional;\n import lombok.experimental.UtilityClass;\n-import org.glassfish.jersey.process.Inflector;\n-import org.glassfish.jersey.server.model.Invocable;\n import org.slf4j.Logger;\n \n @UtilityClass\n public final class ValidatorHelper {\n+\t\n+\tprivate static final String VERTICAL_DIVIDER = \"------------------------------------\\n\";\n \n-\tpublic static void failOnError(Logger log, Set<? extends ConstraintViolation<?>> violations) throws JSONException {\n+\tpublic static void failOnError(Logger log, Set<? extends ConstraintViolation<?>> violations) {\n \t\tfailOnError(log, violations, null);\n \t}\n \t\n-\tpublic static void failOnError(Logger log, Set<? extends ConstraintViolation<?>> violations, String context) throws JSONException {\n-\t\tList<String> violationMessages = violations\n-\t\t\t\t.stream()\n-\t\t\t\t.map( v->\n-\t\t\t\t\tConstraintMessage.getMessage(v,Invocable.create((Inflector<Request, Void>) data -> null)))\n-\t\t\t\t.collect(Collectors.toList());\n+\tpublic static <V extends ConstraintViolation<?>> void failOnError(Logger log, Set<V> violations, String context) {\n+\t\t\n+\t\t// Wrap grouper in Optional to also catch null values.\n+\t\tMap<Optional<Object>, List<V>> mapByLeaf = violations.stream().collect(Collectors.groupingBy(v -> Optional.of(v.getLeafBean())));\n \t\t\n-\t\tfailOnError(log, violationMessages, context);\n+\t\t// Combine all leaf fail reports into a single exception.\n+\t\tif(!mapByLeaf.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db28e093eb8af9fffad87d92fb695fd63c52d5a0"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQxMTQ3MQ==", "bodyText": "Das ist ganz sch\u00f6n ausf\u00fchrlich, hast du daf\u00fcr eine Beispiel Message rumliegen?", "url": "https://github.com/bakdata/conquery/pull/1409#discussion_r529411471", "createdAt": "2020-11-24T10:22:20Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/exceptions/ValidatorHelper.java", "diffHunk": "@@ -1,46 +1,63 @@\n package com.bakdata.conquery.models.exceptions;\n \n import java.util.List;\n+import java.util.Map;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n import javax.validation.ConstraintViolation;\n-import javax.ws.rs.core.Request;\n+import javax.validation.ValidationException;\n \n-import io.dropwizard.jersey.validation.ConstraintMessage;\n+import io.dropwizard.logback.shaded.guava.base.Optional;\n import lombok.experimental.UtilityClass;\n-import org.glassfish.jersey.process.Inflector;\n-import org.glassfish.jersey.server.model.Invocable;\n import org.slf4j.Logger;\n \n @UtilityClass\n public final class ValidatorHelper {\n+\t\n+\tprivate static final String VERTICAL_DIVIDER = \"------------------------------------\\n\";\n \n-\tpublic static void failOnError(Logger log, Set<? extends ConstraintViolation<?>> violations) throws JSONException {\n+\tpublic static void failOnError(Logger log, Set<? extends ConstraintViolation<?>> violations) {\n \t\tfailOnError(log, violations, null);\n \t}\n \t\n-\tpublic static void failOnError(Logger log, Set<? extends ConstraintViolation<?>> violations, String context) throws JSONException {\n-\t\tList<String> violationMessages = violations\n-\t\t\t\t.stream()\n-\t\t\t\t.map( v->\n-\t\t\t\t\tConstraintMessage.getMessage(v,Invocable.create((Inflector<Request, Void>) data -> null)))\n-\t\t\t\t.collect(Collectors.toList());\n+\tpublic static <V extends ConstraintViolation<?>> void failOnError(Logger log, Set<V> violations, String context) {\n+\t\t\n+\t\t// Wrap grouper in Optional to also catch null values.\n+\t\tMap<Optional<Object>, List<V>> mapByLeaf = violations.stream().collect(Collectors.groupingBy(v -> Optional.of(v.getLeafBean())));\n \t\t\n-\t\tfailOnError(log, violationMessages, context);\n+\t\t// Combine all leaf fail reports into a single exception.\n+\t\tif(!mapByLeaf.isEmpty()) {\n+\t\t\tthrow new ValidationException(mapByLeaf.entrySet().stream().map(ValidatorHelper::createViolationString).collect(Collectors.joining(VERTICAL_DIVIDER)));\t\t\t\n+\t\t}\n \t}\n \t\n-\tpublic static void failOnError(Logger log, List<String> violations, String context) throws JSONException {\n-\t\tif(violations.size()>0) {\n-\t\t\tfor(String v:violations) {\n-\t\t\t\tlog.error(v);\n-\t\t\t}\n-\t\t\t\n-\t\t\tif(context!=null) {\n-\t\t\t\tthrow new JSONException(\"Failed with \"+violations.size()+\" errors in \"+context+\".\");\n-\t\t\t}\n-\t\t\tthrow new JSONException(\"Failed with \"+violations.size()+\" errors.\");\n+\t/**\n+\t * Combines all violations for a given leaf object and gives the path to the root object if possible.\n+\t */\n+\tprivate static <V extends ConstraintViolation<?>> String createViolationString(Map.Entry<Optional<Object>, List<V>> objectToViolation) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db28e093eb8af9fffad87d92fb695fd63c52d5a0"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d79cd608658fe779d4da2304c4a49e80750c848e", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/d79cd608658fe779d4da2304c4a49e80750c848e", "committedDate": "2020-11-26T08:21:31Z", "message": "slim validator fail output"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MjIwMTM0", "url": "https://github.com/bakdata/conquery/pull/1409#pullrequestreview-539220134", "createdAt": "2020-11-26T11:12:53Z", "commit": {"oid": "d79cd608658fe779d4da2304c4a49e80750c848e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73db84aaa67e6e496e933fb8622806d6622267e3", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/73db84aaa67e6e496e933fb8622806d6622267e3", "committedDate": "2020-11-26T11:45:33Z", "message": "Merge branch 'develop' into feature/Auth-resolve-mapped-groups"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4838, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}