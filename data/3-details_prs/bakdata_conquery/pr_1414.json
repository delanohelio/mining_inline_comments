{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMTE1MzE5", "number": 1414, "title": "Feature/better default query name", "bodyText": "Instead of setting the UUID of the execution by default, a default expressive non unique name is now generated upon query initialization.", "createdAt": "2020-10-30T16:14:47Z", "url": "https://github.com/bakdata/conquery/pull/1414", "merged": true, "mergeCommit": {"oid": "f98519799d5af196a2c3c1e1bcb0ee7a0af704d1"}, "closed": true, "closedAt": "2020-11-19T08:36:13Z", "author": {"login": "thoniTUB"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYnWcnAH2gAyNTEzMTE1MzE5OjU5NmY0YmUzN2I3ODViNzFmODk5OGQxMTJiNjAxZDI0NjJjODM3NzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddw2NzAFqTUzMzYzNTc2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "596f4be37b785b71f8998d112b601d2462c83775", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/596f4be37b785b71f8998d112b601d2462c83775", "committedDate": "2020-11-02T16:42:14Z", "message": "Set download name to execution file name explicitly if possible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8786c3f6be01173528119bf145071e6a9d4a0dc7", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/8786c3f6be01173528119bf145071e6a9d4a0dc7", "committedDate": "2020-11-02T16:42:14Z", "message": "adds Internationalization for query label"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "693e9fc55f6f2c21aed8b23d68854f4ebee8c639", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/693e9fc55f6f2c21aed8b23d68854f4ebee8c639", "committedDate": "2020-11-02T16:42:14Z", "message": "remove suffix in query status"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b2df12e86a5493a11e5cb209bafc9603dcf71cb", "author": {"user": {"login": "bakdata-bot", "name": null}}, "url": "https://github.com/bakdata/conquery/commit/8b2df12e86a5493a11e5cb209bafc9603dcf71cb", "committedDate": "2020-11-02T16:42:15Z", "message": "automatic update to docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b944cc390fbcb2695003b70c10bfc7fc9c1842c9", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/b944cc390fbcb2695003b70c10bfc7fc9c1842c9", "committedDate": "2020-11-02T16:42:15Z", "message": "wrap sertialization in assert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7904a967b2d3053daee2125756a523f2ba50eb77", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/7904a967b2d3053daee2125756a523f2ba50eb77", "committedDate": "2020-11-02T16:42:15Z", "message": "remove use of deprecated functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa987d5e578684e601ee9ad60d19e7b298490884", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/aa987d5e578684e601ee9ad60d19e7b298490884", "committedDate": "2020-11-02T16:42:15Z", "message": "adds checks and logging to contains function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "633b43a546dde2b4166290f9fd4f83e4c5a8ed6b", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/633b43a546dde2b4166290f9fd4f83e4c5a8ed6b", "committedDate": "2020-11-02T16:42:15Z", "message": "use id for deserialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6dfa73ef96fc1e34ac8cc1b3efdb11aeef8aff41", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/6dfa73ef96fc1e34ac8cc1b3efdb11aeef8aff41", "committedDate": "2020-11-02T16:42:15Z", "message": "remove placeholder id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bd201e450f44f6591517605e364f05e93448020", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/9bd201e450f44f6591517605e364f05e93448020", "committedDate": "2020-11-02T16:42:16Z", "message": "fixes conditions for contained entity check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "527bce54e947a4211177532d0556ffe1ff52415b", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/527bce54e947a4211177532d0556ffe1ff52415b", "committedDate": "2020-11-02T16:42:16Z", "message": "make download filename save"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e", "committedDate": "2020-11-02T16:42:16Z", "message": "add null check to default label generator"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a1b20675c9830bad2706cfa8480120d524b99abb", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/a1b20675c9830bad2706cfa8480120d524b99abb", "committedDate": "2020-11-02T16:41:19Z", "message": "add null check to default label generator"}, "afterCommit": {"oid": "fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e", "committedDate": "2020-11-02T16:42:16Z", "message": "add null check to default label generator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MDYxMDQ1", "url": "https://github.com/bakdata/conquery/pull/1414#pullrequestreview-527061045", "createdAt": "2020-11-10T10:28:10Z", "commit": {"oid": "fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMDoyODoxMFrOHwV-1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMTowMDo0MFrOHwXQig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ1Mzg0Ng==", "bodyText": "Doku", "url": "https://github.com/bakdata/conquery/pull/1414#discussion_r520453846", "createdAt": "2020-11-10T10:28:10Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/internationalization/CQElementC10n.java", "diffHunk": "@@ -0,0 +1,16 @@\n+package com.bakdata.conquery.internationalization;\n+\n+import c10n.annotations.De;\n+import c10n.annotations.En;\n+\n+public interface CQElementC10n {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ1NDQzMw==", "bodyText": "ist das ein Bug gewesen?", "url": "https://github.com/bakdata/conquery/pull/1414#discussion_r520454433", "createdAt": "2020-11-10T10:29:01Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/events/Bucket.java", "diffHunk": "@@ -80,6 +80,13 @@ public BucketId createId() {\n \t}\n \n \tpublic boolean containsLocalEntity(int localEntity) {\n+\t\tif(offsets.length != 1 && offsets.length != getBucketSize()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ1NDYzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * Some unusual suffix. Its not too bad if someone actually this. \n          \n          \n            \n            \t * Some unusual suffix. Its not too bad if someone actually uses this.", "url": "https://github.com/bakdata/conquery/pull/1414#discussion_r520454634", "createdAt": "2020-11-10T10:29:19Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java", "diffHunk": "@@ -75,6 +75,11 @@\n @NoArgsConstructor\n @JsonTypeInfo(use = JsonTypeInfo.Id.CUSTOM, property = \"type\")\n public abstract class ManagedExecution<R extends ShardResult> extends IdentifiableImpl<ManagedExecutionId> implements Taggable, Shareable, Labelable {\n+\t\n+\t/**\n+\t * Some unusual suffix. Its not too bad if someone actually this. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ1Njk1MQ==", "bodyText": "Die Strategie finde ich etwas merkw\u00fcrdig, du f\u00fcgst hier bewusst ins Label M\u00fcll hinzu, damit du sicher bist, dass es nicht gesetzt ist? W\u00fcrde es nicht mehr Sinn machen, das hier eben ungesetzt zu lassen und ne Migration zum ent-setzen zu machen?", "url": "https://github.com/bakdata/conquery/pull/1414#discussion_r520456951", "createdAt": "2020-11-10T10:32:58Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java", "diffHunk": "@@ -75,6 +75,11 @@\n @NoArgsConstructor\n @JsonTypeInfo(use = JsonTypeInfo.Id.CUSTOM, property = \"type\")\n public abstract class ManagedExecution<R extends ShardResult> extends IdentifiableImpl<ManagedExecutionId> implements Taggable, Shareable, Labelable {\n+\t\n+\t/**\n+\t * Some unusual suffix. Its not too bad if someone actually this. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ1NDYzNA=="}, "originalCommit": {"oid": "fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ1ODEzMg==", "bodyText": "macht das sinn, den im SerializingStore zu haben?", "url": "https://github.com/bakdata/conquery/pull/1414#discussion_r520458132", "createdAt": "2020-11-10T10:34:53Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/execution/ResultProcessor.java", "diffHunk": "@@ -51,8 +53,17 @@ public static ResponseBuilder getResult(User user, DatasetId datasetId, ManagedE\n \n \t\ttry {\n \t\t\tStreamingOutput out = exec.getResult(mappingState, settings, charset, config.getCsv().getLineSeparator());\n-\n-\t\t\treturn Response.ok(out);\n+\t\t\t\n+\t\t\tResponseBuilder response = Response.ok(out);\n+\t\t\tString label = exec.getLabel();\n+\t\t\tif(!(Strings.isNullOrEmpty(label) || label.isBlank())) {\n+\t\t\t\t// Set filename from label if the label was set, otherwise the browser will name the file according to the request path\n+\t\t\t\tresponse.header(\"Content-Disposition\", String.format(\n+\t\t\t\t\t\"attachment; filename=\\\"%s.%s\\\"\",\n+\t\t\t\t\tSerializingStore.SAVE_FILENAME_REPLACEMENT_MATCHER.matcher(exec.getLabel()).replaceAll(\"_\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ3MTczMA==", "bodyText": "Die ganze Strategie musst du etwas weiter ausf\u00fchren", "url": "https://github.com/bakdata/conquery/pull/1414#discussion_r520471730", "createdAt": "2020-11-10T10:56:13Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/ManagedQuery.java", "diffHunk": "@@ -219,4 +230,48 @@ protected URL getDownloadURLInternal(@NonNull UriBuilder url) throws MalformedUR\n \t\t\t.build()\n \t\t\t.toURL();\n \t}\n+\n+\tprivate static final int MAX_CONCEPT_LABEL_CONCAT_LENGTH = 20;\n+\t@Override\n+\tprotected void makeDefaultLabel(final StringBuilder sb) {\n+\t\tfinal Map<Class<? extends Visitable>,List<Visitable>> sortedContents = new HashMap<>();\n+\t\tQueryVisitor visitor = new QueryVisitor() {\n+\t\t\t\n+\t\t\t@Override\n+\t\t\tpublic void accept(Visitable t) {\n+\t\t\t\tsortedContents.computeIfAbsent(t.getClass(), (clazz) -> new ArrayList<>()).add(t);\n+\t\t\t}\n+\t\t};\n+\t\tquery.visit(visitor);\n+\t\t\n+\t\tList<Visitable> externals = sortedContents.computeIfAbsent(CQExternal.class, (clazz)-> List.of());\n+\t\tif(!externals.isEmpty()) {\n+\t\t\tif (sb.length() > 0) {\n+\t\t\t\tsb.append(\" \");\n+\t\t\t}\n+\t\t\tsb.append(C10N.get(CQElementC10n.class, I18n.LOCALE.get()).external());\n+\t\t}\n+\t\t\n+\t\tif( !sortedContents.computeIfAbsent(CQReusedQuery.class, (clazz)-> List.of()).isEmpty()) {\n+\t\t\tif (sb.length() > 0) {\n+\t\t\t\tsb.append(\" \");\n+\t\t\t}\n+\t\t\tsb.append(C10N.get(CQElementC10n.class, I18n.LOCALE.get()).reused());\n+\t\t}\n+\t\t\n+\t\tfinal AtomicInteger length = new AtomicInteger();\n+\t\tString usedConcepts = sortedContents.computeIfAbsent(CQConcept.class, (clazz)-> List.of()).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ3MjU2Ng==", "bodyText": "W\u00fcrde es nicht fast ausreichen, die einfach zusammen zu kleben und dann truncaten mit einer elipsis (...)? Aber eigentlich coole Idee!", "url": "https://github.com/bakdata/conquery/pull/1414#discussion_r520472566", "createdAt": "2020-11-10T10:57:29Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/query/ManagedQuery.java", "diffHunk": "@@ -219,4 +230,48 @@ protected URL getDownloadURLInternal(@NonNull UriBuilder url) throws MalformedUR\n \t\t\t.build()\n \t\t\t.toURL();\n \t}\n+\n+\tprivate static final int MAX_CONCEPT_LABEL_CONCAT_LENGTH = 20;\n+\t@Override\n+\tprotected void makeDefaultLabel(final StringBuilder sb) {\n+\t\tfinal Map<Class<? extends Visitable>,List<Visitable>> sortedContents = new HashMap<>();\n+\t\tQueryVisitor visitor = new QueryVisitor() {\n+\t\t\t\n+\t\t\t@Override\n+\t\t\tpublic void accept(Visitable t) {\n+\t\t\t\tsortedContents.computeIfAbsent(t.getClass(), (clazz) -> new ArrayList<>()).add(t);\n+\t\t\t}\n+\t\t};\n+\t\tquery.visit(visitor);\n+\t\t\n+\t\tList<Visitable> externals = sortedContents.computeIfAbsent(CQExternal.class, (clazz)-> List.of());\n+\t\tif(!externals.isEmpty()) {\n+\t\t\tif (sb.length() > 0) {\n+\t\t\t\tsb.append(\" \");\n+\t\t\t}\n+\t\t\tsb.append(C10N.get(CQElementC10n.class, I18n.LOCALE.get()).external());\n+\t\t}\n+\t\t\n+\t\tif( !sortedContents.computeIfAbsent(CQReusedQuery.class, (clazz)-> List.of()).isEmpty()) {\n+\t\t\tif (sb.length() > 0) {\n+\t\t\t\tsb.append(\" \");\n+\t\t\t}\n+\t\t\tsb.append(C10N.get(CQElementC10n.class, I18n.LOCALE.get()).reused());\n+\t\t}\n+\t\t\n+\t\tfinal AtomicInteger length = new AtomicInteger();\n+\t\tString usedConcepts = sortedContents.computeIfAbsent(CQConcept.class, (clazz)-> List.of()).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ3MzQwNg==", "bodyText": "nice! Damit habe ich etwas gestruggled bei meinen Buckets!", "url": "https://github.com/bakdata/conquery/pull/1414#discussion_r520473406", "createdAt": "2020-11-10T10:58:37Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/models/types/specific/StringTypeDictionary.java", "diffHunk": "@@ -34,18 +34,23 @@\n public class StringTypeDictionary extends CTypeVarInt<Integer> {\n \n \t@NotNull @Nonnull\n-\tprivate DictionaryId dictionaryId = new DictionaryId(new DatasetId(\"null\"), UUID.randomUUID().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDQ3NDc2Mg==", "bodyText": "den hast du ausversehen gepusht?", "url": "https://github.com/bakdata/conquery/pull/1414#discussion_r520474762", "createdAt": "2020-11-10T11:00:40Z", "author": {"login": "awildturtok"}, "path": "backend/src/test/java/com/bakdata/conquery/util/NonPersistentNamespaceStorage.java", "diffHunk": "@@ -0,0 +1,206 @@\n+package com.bakdata.conquery.util;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+\n+import javax.validation.Validator;\n+\n+import com.bakdata.conquery.io.xodus.MetaStorage;\n+import com.bakdata.conquery.io.xodus.NamespaceStorage;\n+import com.bakdata.conquery.models.concepts.Concept;\n+import com.bakdata.conquery.models.concepts.StructureNode;\n+import com.bakdata.conquery.models.datasets.Dataset;\n+import com.bakdata.conquery.models.datasets.Import;\n+import com.bakdata.conquery.models.dictionary.Dictionary;\n+import com.bakdata.conquery.models.dictionary.DirectDictionary;\n+import com.bakdata.conquery.models.exceptions.JSONException;\n+import com.bakdata.conquery.models.identifiable.CentralRegistry;\n+import com.bakdata.conquery.models.identifiable.ids.specific.ConceptId;\n+import com.bakdata.conquery.models.identifiable.ids.specific.DictionaryId;\n+import com.bakdata.conquery.models.identifiable.ids.specific.ImportId;\n+import com.bakdata.conquery.models.identifiable.mapping.PersistentIdMap;\n+import lombok.NonNull;\n+\n+public class NonPersistentNamespaceStorage implements NamespaceStorage {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe692fd8e8bb3cb6a77bafda8cfd34373cb8802e"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db71952ab0a51a4f49783a1365ef497cf02c9d74", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/db71952ab0a51a4f49783a1365ef497cf02c9d74", "committedDate": "2020-11-10T13:39:17Z", "message": "Update backend/src/main/java/com/bakdata/conquery/models/execution/ManagedExecution.java\n\nCo-authored-by: awildturtok <1553491+awildturtok@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "849b5c3a62b10585c6aa2f13375f53f66a628685", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/849b5c3a62b10585c6aa2f13375f53f66a628685", "committedDate": "2020-11-10T14:17:41Z", "message": "Adds doku"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01748b0f59fd1c05adb5c0ff652e5e74467231ac", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/01748b0f59fd1c05adb5c0ff652e5e74467231ac", "committedDate": "2020-11-10T14:18:43Z", "message": "adds labeling fallback if no usefull information could be extracted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "198becf08136c60ec0ecbdfcb5de37a04f1d2d3c", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/198becf08136c60ec0ecbdfcb5de37a04f1d2d3c", "committedDate": "2020-11-10T14:20:41Z", "message": "remove unused class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7500396467509dcc961e79cd39ce75b1d79f805", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/a7500396467509dcc961e79cd39ce75b1d79f805", "committedDate": "2020-11-10T14:33:35Z", "message": "moves save filename matcher to utility class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a850ff389bff0064d55637490fdfdd92775f7b4", "author": {"user": {"login": "thoniTUB", "name": "MT"}}, "url": "https://github.com/bakdata/conquery/commit/1a850ff389bff0064d55637490fdfdd92775f7b4", "committedDate": "2020-11-10T14:35:07Z", "message": "Merge branch 'develop' into feature/better-default-query-name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNjM1NzY2", "url": "https://github.com/bakdata/conquery/pull/1414#pullrequestreview-533635766", "createdAt": "2020-11-18T16:35:42Z", "commit": {"oid": "1a850ff389bff0064d55637490fdfdd92775f7b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4721, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}