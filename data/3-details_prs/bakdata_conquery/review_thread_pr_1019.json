{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxODk5NTQ5", "number": 1019, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDo1NzoxOVrODeaQ2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo1OToyMFrODedoaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjE0MTcwOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/apiv1/FilterSearch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDo1NzoxOVrOFnh1IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMDo1NzoxOVrOFnh1IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njk5MzA1Ng==", "bodyText": "doku", "url": "https://github.com/bakdata/conquery/pull/1019#discussion_r376993056", "createdAt": "2020-02-10T10:57:19Z", "author": {"login": "awildturtok"}, "path": "backend/src/main/java/com/bakdata/conquery/apiv1/FilterSearch.java", "diffHunk": "@@ -83,18 +83,13 @@ public double score(String candidate, String keyword) {\n \n \tprivate static Map<String, QuickSearch<FilterSearchItem>> search = new HashMap<>();\n \n-\tpublic static ExecutorService init(Namespaces namespaces, Collection<Dataset> datasets) {\n-\t\tExecutorService executor = Executors.newSingleThreadExecutor();\n-\n+\tpublic static void init(Namespaces namespaces, Collection<Dataset> datasets, JobManager jobManager) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9995b57373f20a1401e5fde8e1c0e670ab73dfe"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjYyNzg0OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/apiv1/FilterSearch.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0MTozMlrOFnmaHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0NDozOFrOFnmg0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2ODA2Mw==", "bodyText": "addFastJob -> Der PR titel sagt, dass der Bau der Suche ein SlowJob sein sollte.", "url": "https://github.com/bakdata/conquery/pull/1019#discussion_r377068063", "createdAt": "2020-02-10T13:41:32Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/apiv1/FilterSearch.java", "diffHunk": "@@ -83,20 +83,22 @@ public double score(String candidate, String keyword) {\n \n \tprivate static Map<String, QuickSearch<FilterSearchItem>> search = new HashMap<>();\n \n-\tpublic static ExecutorService init(Namespaces namespaces, Collection<Dataset> datasets) {\n-\t\tExecutorService executor = Executors.newSingleThreadExecutor();\n-\n+\t/**\n+\t * Scan all SelectFilters and submit {@link SimpleJob}s to create interactive searches for them.\n+\t */\n+\tpublic static void updateSearch(Namespaces namespaces, Collection<Dataset> datasets, JobManager jobManager) {\n \t\tdatasets.stream()\n \t\t\t\t.flatMap(ds -> namespaces.get(ds.getId()).getStorage().getAllConcepts().stream())\n \t\t\t\t.flatMap(c -> c.getConnectors().stream())\n \t\t\t\t.flatMap(co -> co.collectAllFilters().stream())\n-\t\t\t\t.filter(f -> f instanceof AbstractSelectFilter && f.getTemplate() != null)\n-\t\t\t\t.forEach(f -> executor.submit(() -> createSourceSearch(((AbstractSelectFilter<?>) f))));\n-\n-\t\texecutor.shutdown();\n-\t\treturn executor;\n+\t\t\t\t.filter(f -> f instanceof AbstractSelectFilter && ((AbstractSelectFilter<?>) f).getTemplate() != null)\n+\t\t\t\t.forEach(f -> jobManager.addFastJob(new SimpleJob(String.format(\"SourceSearch[%s]\", f.getId()), () -> createSourceSearch(((AbstractSelectFilter<?>) f)))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ba1fee101b6abb7a13416adf6254062fc143fa7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2OTc3OQ==", "bodyText": "Ich w\u00fcrde noch im Stream casten\n\t\t\t\t.map(AbstractSelectFilter.class::cast)\n\t\t\t\t.forEach(f -> jobManager.addFastJob(new SimpleJob(String.format(\"SourceSearch[%s]\", f.getId()), () -> createSourceSearch(( f))));", "url": "https://github.com/bakdata/conquery/pull/1019#discussion_r377069779", "createdAt": "2020-02-10T13:44:38Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/apiv1/FilterSearch.java", "diffHunk": "@@ -83,20 +83,22 @@ public double score(String candidate, String keyword) {\n \n \tprivate static Map<String, QuickSearch<FilterSearchItem>> search = new HashMap<>();\n \n-\tpublic static ExecutorService init(Namespaces namespaces, Collection<Dataset> datasets) {\n-\t\tExecutorService executor = Executors.newSingleThreadExecutor();\n-\n+\t/**\n+\t * Scan all SelectFilters and submit {@link SimpleJob}s to create interactive searches for them.\n+\t */\n+\tpublic static void updateSearch(Namespaces namespaces, Collection<Dataset> datasets, JobManager jobManager) {\n \t\tdatasets.stream()\n \t\t\t\t.flatMap(ds -> namespaces.get(ds.getId()).getStorage().getAllConcepts().stream())\n \t\t\t\t.flatMap(c -> c.getConnectors().stream())\n \t\t\t\t.flatMap(co -> co.collectAllFilters().stream())\n-\t\t\t\t.filter(f -> f instanceof AbstractSelectFilter && f.getTemplate() != null)\n-\t\t\t\t.forEach(f -> executor.submit(() -> createSourceSearch(((AbstractSelectFilter<?>) f))));\n-\n-\t\texecutor.shutdown();\n-\t\treturn executor;\n+\t\t\t\t.filter(f -> f instanceof AbstractSelectFilter && ((AbstractSelectFilter<?>) f).getTemplate() != null)\n+\t\t\t\t.forEach(f -> jobManager.addFastJob(new SimpleJob(String.format(\"SourceSearch[%s]\", f.getId()), () -> createSourceSearch(((AbstractSelectFilter<?>) f)))));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2ODA2Mw=="}, "originalCommit": {"oid": "4ba1fee101b6abb7a13416adf6254062fc143fa7"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjY1MjI5OnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/concepts/filters/Filter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0ODowNVrOFnmoeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0ODowNVrOFnmoeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3MTczNg==", "bodyText": "dann kann der Kommentar auch weg ;)", "url": "https://github.com/bakdata/conquery/pull/1019#discussion_r377071736", "createdAt": "2020-02-10T13:48:05Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/concepts/filters/Filter.java", "diffHunk": "@@ -35,7 +32,6 @@\n \t@JsonBackReference\n \tprivate Connector connector;\n \t// TODO: 20.11.2019 Move to AbstractSelectFilter", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ba1fee101b6abb7a13416adf6254062fc143fa7"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjY5MzUyOnYy", "diffSide": "RIGHT", "path": "backend/src/main/java/com/bakdata/conquery/models/concepts/FrontEndConceptBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo1OToyMFrOFnnBEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo1OToyMFrOFnnBEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3ODAzMg==", "bodyText": "Die Zeile k\u00f6nntest du nach  AbstractSelectFilter#configureFrontend verschieben. Die Funktion wird nach diesem Builder aufgerufen.", "url": "https://github.com/bakdata/conquery/pull/1019#discussion_r377078032", "createdAt": "2020-02-10T13:59:20Z", "author": {"login": "thoniTUB"}, "path": "backend/src/main/java/com/bakdata/conquery/models/concepts/FrontEndConceptBuilder.java", "diffHunk": "@@ -209,7 +210,7 @@ public static FEFilter createFilter(Filter<?> filter) {\n \t\t\t.unit(filter.getUnit())\n \t\t\t.allowDropFile(filter.getAllowDropFile())\n \t\t\t.pattern(filter.getPattern())\n-\t\t\t.template(filter.getTemplate())\n+\t\t\t.template(filter instanceof AbstractSelectFilter ? ((AbstractSelectFilter<?>) filter).getTemplate() : null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ba1fee101b6abb7a13416adf6254062fc143fa7"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1493, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}