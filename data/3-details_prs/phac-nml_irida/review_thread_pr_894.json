{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzNzE3MDk1", "number": 894, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMjozNjozMlrOFIx8Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMjo0Njo1NFrOFIyHag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NzUxMTcxOnYy", "diffSide": "RIGHT", "path": "build-docs.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMjozNjozMlrOIK5roA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMzo1MTo1OVrOILH_SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwMTcyOA==", "bodyText": "Typo in documentation", "url": "https://github.com/phac-nml/irida/pull/894#discussion_r548301728", "createdAt": "2020-12-23T22:36:32Z", "author": {"login": "deepsidhu85"}, "path": "build-docs.py", "diffHunk": "@@ -0,0 +1,72 @@\n+import os\n+import sys\n+import shutil\n+import time\n+\n+################################################################################\n+# This script is used to build documentation for IRIDA for deployment.  It will\n+# build the IRIDA javadoc and transfer all the documentation directories to an\n+# external documentation repository.  See below for usage.\n+################################################################################\n+\n+# If no args, print usage statement\n+if len(sys.argv) == 1:\n+    print(\"IRIDA documentation deployment script.\")\n+    print(\"Usage: build-docs.py TARGET_DIRECTORY\")\n+    print(\"TARGET_DIRECTORY should be the 'irida-documentation/docs' directory\")\n+    exit(0)\n+\n+pom_file = 'pom.xml'\n+result_dir = sys.argv[1]\n+doc_dir = 'doc/'\n+\n+# Check if we're in the irida directory\n+if not os.path.exists(pom_file):\n+    print(\"Cannot find pom file.  This script must be run in the base directory of the IRIDA repository.\")\n+    exit(1)\n+\n+if not os.path.isdir(doc_dir):\n+    print(\"Cannot find `/doc` directory.  This script must be run in the base directory of the IRIDA repository.\")\n+    exit(1)\n+\n+# check if the argument is the irida-documentation/docs directory\n+if not (result_dir.endswith('docs') or result_dir.endswith('docs/')) or not os.path.isdir(result_dir):\n+    print(\"The target directory doesn't appear to be the irida-docuemtation repository's `/docs` directory.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc46ca0672bc097eff08e1f07f4e15f199de76e7"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUzNjEzNw==", "bodyText": "Fixed in 6351ffb", "url": "https://github.com/phac-nml/irida/pull/894#discussion_r548536137", "createdAt": "2020-12-24T13:51:59Z", "author": {"login": "tom114"}, "path": "build-docs.py", "diffHunk": "@@ -0,0 +1,72 @@\n+import os\n+import sys\n+import shutil\n+import time\n+\n+################################################################################\n+# This script is used to build documentation for IRIDA for deployment.  It will\n+# build the IRIDA javadoc and transfer all the documentation directories to an\n+# external documentation repository.  See below for usage.\n+################################################################################\n+\n+# If no args, print usage statement\n+if len(sys.argv) == 1:\n+    print(\"IRIDA documentation deployment script.\")\n+    print(\"Usage: build-docs.py TARGET_DIRECTORY\")\n+    print(\"TARGET_DIRECTORY should be the 'irida-documentation/docs' directory\")\n+    exit(0)\n+\n+pom_file = 'pom.xml'\n+result_dir = sys.argv[1]\n+doc_dir = 'doc/'\n+\n+# Check if we're in the irida directory\n+if not os.path.exists(pom_file):\n+    print(\"Cannot find pom file.  This script must be run in the base directory of the IRIDA repository.\")\n+    exit(1)\n+\n+if not os.path.isdir(doc_dir):\n+    print(\"Cannot find `/doc` directory.  This script must be run in the base directory of the IRIDA repository.\")\n+    exit(1)\n+\n+# check if the argument is the irida-documentation/docs directory\n+if not (result_dir.endswith('docs') or result_dir.endswith('docs/')) or not os.path.isdir(result_dir):\n+    print(\"The target directory doesn't appear to be the irida-docuemtation repository's `/docs` directory.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwMTcyOA=="}, "originalCommit": {"oid": "bc46ca0672bc097eff08e1f07f4e15f199de76e7"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NzUyNjg0OnYy", "diffSide": "RIGHT", "path": "build-docs.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMjo0MDowNlrOIK51WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMzo1MTo1NVrOILH_Pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwNDIxNg==", "bodyText": "Typo in continue", "url": "https://github.com/phac-nml/irida/pull/894#discussion_r548304216", "createdAt": "2020-12-23T22:40:06Z", "author": {"login": "deepsidhu85"}, "path": "build-docs.py", "diffHunk": "@@ -0,0 +1,72 @@\n+import os\n+import sys\n+import shutil\n+import time\n+\n+################################################################################\n+# This script is used to build documentation for IRIDA for deployment.  It will\n+# build the IRIDA javadoc and transfer all the documentation directories to an\n+# external documentation repository.  See below for usage.\n+################################################################################\n+\n+# If no args, print usage statement\n+if len(sys.argv) == 1:\n+    print(\"IRIDA documentation deployment script.\")\n+    print(\"Usage: build-docs.py TARGET_DIRECTORY\")\n+    print(\"TARGET_DIRECTORY should be the 'irida-documentation/docs' directory\")\n+    exit(0)\n+\n+pom_file = 'pom.xml'\n+result_dir = sys.argv[1]\n+doc_dir = 'doc/'\n+\n+# Check if we're in the irida directory\n+if not os.path.exists(pom_file):\n+    print(\"Cannot find pom file.  This script must be run in the base directory of the IRIDA repository.\")\n+    exit(1)\n+\n+if not os.path.isdir(doc_dir):\n+    print(\"Cannot find `/doc` directory.  This script must be run in the base directory of the IRIDA repository.\")\n+    exit(1)\n+\n+# check if the argument is the irida-documentation/docs directory\n+if not (result_dir.endswith('docs') or result_dir.endswith('docs/')) or not os.path.isdir(result_dir):\n+    print(\"The target directory doesn't appear to be the irida-docuemtation repository's `/docs` directory.\")\n+    exit(1)\n+\n+# first run mvn site to build the javadoc\n+print(\"========== Building documentation pages\")\n+retval = os.system('mvn clean site')\n+\n+# ensure it built correctly\n+if retval != 0:\n+    print(\"========== Docs construction failed.  See above for error messages\")\n+    exit(1)\n+\n+\n+print(\"========== Documentation built successfully\")\n+\n+# Give the user 5 seconds to chicken out\n+print(\"========== WARNING: this script will now replace the existing docs directory {} with the docs built above\".format(result_dir))\n+print(\"========== This process will contine in 5 seconds...\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc46ca0672bc097eff08e1f07f4e15f199de76e7"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUzNjEyNw==", "bodyText": "Fixed in 6351ffb", "url": "https://github.com/phac-nml/irida/pull/894#discussion_r548536127", "createdAt": "2020-12-24T13:51:55Z", "author": {"login": "tom114"}, "path": "build-docs.py", "diffHunk": "@@ -0,0 +1,72 @@\n+import os\n+import sys\n+import shutil\n+import time\n+\n+################################################################################\n+# This script is used to build documentation for IRIDA for deployment.  It will\n+# build the IRIDA javadoc and transfer all the documentation directories to an\n+# external documentation repository.  See below for usage.\n+################################################################################\n+\n+# If no args, print usage statement\n+if len(sys.argv) == 1:\n+    print(\"IRIDA documentation deployment script.\")\n+    print(\"Usage: build-docs.py TARGET_DIRECTORY\")\n+    print(\"TARGET_DIRECTORY should be the 'irida-documentation/docs' directory\")\n+    exit(0)\n+\n+pom_file = 'pom.xml'\n+result_dir = sys.argv[1]\n+doc_dir = 'doc/'\n+\n+# Check if we're in the irida directory\n+if not os.path.exists(pom_file):\n+    print(\"Cannot find pom file.  This script must be run in the base directory of the IRIDA repository.\")\n+    exit(1)\n+\n+if not os.path.isdir(doc_dir):\n+    print(\"Cannot find `/doc` directory.  This script must be run in the base directory of the IRIDA repository.\")\n+    exit(1)\n+\n+# check if the argument is the irida-documentation/docs directory\n+if not (result_dir.endswith('docs') or result_dir.endswith('docs/')) or not os.path.isdir(result_dir):\n+    print(\"The target directory doesn't appear to be the irida-docuemtation repository's `/docs` directory.\")\n+    exit(1)\n+\n+# first run mvn site to build the javadoc\n+print(\"========== Building documentation pages\")\n+retval = os.system('mvn clean site')\n+\n+# ensure it built correctly\n+if retval != 0:\n+    print(\"========== Docs construction failed.  See above for error messages\")\n+    exit(1)\n+\n+\n+print(\"========== Documentation built successfully\")\n+\n+# Give the user 5 seconds to chicken out\n+print(\"========== WARNING: this script will now replace the existing docs directory {} with the docs built above\".format(result_dir))\n+print(\"========== This process will contine in 5 seconds...\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwNDIxNg=="}, "originalCommit": {"oid": "bc46ca0672bc097eff08e1f07f4e15f199de76e7"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NzUzMDU5OnYy", "diffSide": "RIGHT", "path": "build-docs.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMjo0MjoyNFrOIK53eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMzo1MTo1M1rOILH_PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwNDc2MA==", "bodyText": "Provide the user with the command to exit out if they do not want to continue", "url": "https://github.com/phac-nml/irida/pull/894#discussion_r548304760", "createdAt": "2020-12-23T22:42:24Z", "author": {"login": "deepsidhu85"}, "path": "build-docs.py", "diffHunk": "@@ -0,0 +1,72 @@\n+import os\n+import sys\n+import shutil\n+import time\n+\n+################################################################################\n+# This script is used to build documentation for IRIDA for deployment.  It will\n+# build the IRIDA javadoc and transfer all the documentation directories to an\n+# external documentation repository.  See below for usage.\n+################################################################################\n+\n+# If no args, print usage statement\n+if len(sys.argv) == 1:\n+    print(\"IRIDA documentation deployment script.\")\n+    print(\"Usage: build-docs.py TARGET_DIRECTORY\")\n+    print(\"TARGET_DIRECTORY should be the 'irida-documentation/docs' directory\")\n+    exit(0)\n+\n+pom_file = 'pom.xml'\n+result_dir = sys.argv[1]\n+doc_dir = 'doc/'\n+\n+# Check if we're in the irida directory\n+if not os.path.exists(pom_file):\n+    print(\"Cannot find pom file.  This script must be run in the base directory of the IRIDA repository.\")\n+    exit(1)\n+\n+if not os.path.isdir(doc_dir):\n+    print(\"Cannot find `/doc` directory.  This script must be run in the base directory of the IRIDA repository.\")\n+    exit(1)\n+\n+# check if the argument is the irida-documentation/docs directory\n+if not (result_dir.endswith('docs') or result_dir.endswith('docs/')) or not os.path.isdir(result_dir):\n+    print(\"The target directory doesn't appear to be the irida-docuemtation repository's `/docs` directory.\")\n+    exit(1)\n+\n+# first run mvn site to build the javadoc\n+print(\"========== Building documentation pages\")\n+retval = os.system('mvn clean site')\n+\n+# ensure it built correctly\n+if retval != 0:\n+    print(\"========== Docs construction failed.  See above for error messages\")\n+    exit(1)\n+\n+\n+print(\"========== Documentation built successfully\")\n+\n+# Give the user 5 seconds to chicken out\n+print(\"========== WARNING: this script will now replace the existing docs directory {} with the docs built above\".format(result_dir))\n+print(\"========== This process will contine in 5 seconds...\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc46ca0672bc097eff08e1f07f4e15f199de76e7"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUzNjEyNQ==", "bodyText": "Fixed in 6351ffb", "url": "https://github.com/phac-nml/irida/pull/894#discussion_r548536125", "createdAt": "2020-12-24T13:51:53Z", "author": {"login": "tom114"}, "path": "build-docs.py", "diffHunk": "@@ -0,0 +1,72 @@\n+import os\n+import sys\n+import shutil\n+import time\n+\n+################################################################################\n+# This script is used to build documentation for IRIDA for deployment.  It will\n+# build the IRIDA javadoc and transfer all the documentation directories to an\n+# external documentation repository.  See below for usage.\n+################################################################################\n+\n+# If no args, print usage statement\n+if len(sys.argv) == 1:\n+    print(\"IRIDA documentation deployment script.\")\n+    print(\"Usage: build-docs.py TARGET_DIRECTORY\")\n+    print(\"TARGET_DIRECTORY should be the 'irida-documentation/docs' directory\")\n+    exit(0)\n+\n+pom_file = 'pom.xml'\n+result_dir = sys.argv[1]\n+doc_dir = 'doc/'\n+\n+# Check if we're in the irida directory\n+if not os.path.exists(pom_file):\n+    print(\"Cannot find pom file.  This script must be run in the base directory of the IRIDA repository.\")\n+    exit(1)\n+\n+if not os.path.isdir(doc_dir):\n+    print(\"Cannot find `/doc` directory.  This script must be run in the base directory of the IRIDA repository.\")\n+    exit(1)\n+\n+# check if the argument is the irida-documentation/docs directory\n+if not (result_dir.endswith('docs') or result_dir.endswith('docs/')) or not os.path.isdir(result_dir):\n+    print(\"The target directory doesn't appear to be the irida-docuemtation repository's `/docs` directory.\")\n+    exit(1)\n+\n+# first run mvn site to build the javadoc\n+print(\"========== Building documentation pages\")\n+retval = os.system('mvn clean site')\n+\n+# ensure it built correctly\n+if retval != 0:\n+    print(\"========== Docs construction failed.  See above for error messages\")\n+    exit(1)\n+\n+\n+print(\"========== Documentation built successfully\")\n+\n+# Give the user 5 seconds to chicken out\n+print(\"========== WARNING: this script will now replace the existing docs directory {} with the docs built above\".format(result_dir))\n+print(\"========== This process will contine in 5 seconds...\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwNDc2MA=="}, "originalCommit": {"oid": "bc46ca0672bc097eff08e1f07f4e15f199de76e7"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NzUzODI0OnYy", "diffSide": "RIGHT", "path": "doc/developer/getting-started/index.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMjo0NjowMVrOIK570g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMzo1MTo1MVrOILH_Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwNTg3NA==", "bodyText": "Typo in checkout", "url": "https://github.com/phac-nml/irida/pull/894#discussion_r548305874", "createdAt": "2020-12-23T22:46:01Z", "author": {"login": "deepsidhu85"}, "path": "doc/developer/getting-started/index.md", "diffHunk": "@@ -263,24 +263,44 @@ mvn clean package -DskipTests\n This will create the `.war` and `.zip` files for IRIDA release under the `target/` directory.\n \n #### Building IRIDA documentation\n+IRIDA documentation can be found in the <https://github.com/phac-nml/irida-docs> GitHub project.  IRIDA's documentation is built using [Jekyll][] and [GitHub Pages](https://pages.github.com/).  Jekyll allows us to write documentation in Markdown format and it will convert the pages to HTML.  We can use Jekyll both for viewing the documentation locally and for publishing to GitHub Pages.  The current documentation can be found at <https://phac-nml.github.io/irida-docs>.\n \n-IRIDA documentation can be found in the `doc/` directory in the IRIDA root directory.  IRIDA's documentation is built using [Jekyll][].  Jekyll allows us to write documentation in Markdown format and it will convert the pages to HTML for releasing to the web.  The documentation at [http://irida.corefacility.ca/documentation](http://irida.corefacility.ca/documentation) is all generated using this tool.\n+##### Testing IRIDA documentation locally\n+To view the documentation locally or make changes, you can checkou the above GitHub project and make changes.  To run the server locally you can run Jekyll to generate the pages.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc46ca0672bc097eff08e1f07f4e15f199de76e7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUzNjExNQ==", "bodyText": "Fixed in 6351ffb", "url": "https://github.com/phac-nml/irida/pull/894#discussion_r548536115", "createdAt": "2020-12-24T13:51:51Z", "author": {"login": "tom114"}, "path": "doc/developer/getting-started/index.md", "diffHunk": "@@ -263,24 +263,44 @@ mvn clean package -DskipTests\n This will create the `.war` and `.zip` files for IRIDA release under the `target/` directory.\n \n #### Building IRIDA documentation\n+IRIDA documentation can be found in the <https://github.com/phac-nml/irida-docs> GitHub project.  IRIDA's documentation is built using [Jekyll][] and [GitHub Pages](https://pages.github.com/).  Jekyll allows us to write documentation in Markdown format and it will convert the pages to HTML.  We can use Jekyll both for viewing the documentation locally and for publishing to GitHub Pages.  The current documentation can be found at <https://phac-nml.github.io/irida-docs>.\n \n-IRIDA documentation can be found in the `doc/` directory in the IRIDA root directory.  IRIDA's documentation is built using [Jekyll][].  Jekyll allows us to write documentation in Markdown format and it will convert the pages to HTML for releasing to the web.  The documentation at [http://irida.corefacility.ca/documentation](http://irida.corefacility.ca/documentation) is all generated using this tool.\n+##### Testing IRIDA documentation locally\n+To view the documentation locally or make changes, you can checkou the above GitHub project and make changes.  To run the server locally you can run Jekyll to generate the pages.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwNTg3NA=="}, "originalCommit": {"oid": "bc46ca0672bc097eff08e1f07f4e15f199de76e7"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NzU0MDI2OnYy", "diffSide": "RIGHT", "path": "doc/developer/getting-started/index.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QyMjo0Njo1NFrOIK581w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMzo1MTo0OFrOILH_Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwNjEzNQ==", "bodyText": "Change First you can to just First", "url": "https://github.com/phac-nml/irida/pull/894#discussion_r548306135", "createdAt": "2020-12-23T22:46:54Z", "author": {"login": "deepsidhu85"}, "path": "doc/developer/getting-started/index.md", "diffHunk": "@@ -263,24 +263,44 @@ mvn clean package -DskipTests\n This will create the `.war` and `.zip` files for IRIDA release under the `target/` directory.\n \n #### Building IRIDA documentation\n+IRIDA documentation can be found in the <https://github.com/phac-nml/irida-docs> GitHub project.  IRIDA's documentation is built using [Jekyll][] and [GitHub Pages](https://pages.github.com/).  Jekyll allows us to write documentation in Markdown format and it will convert the pages to HTML.  We can use Jekyll both for viewing the documentation locally and for publishing to GitHub Pages.  The current documentation can be found at <https://phac-nml.github.io/irida-docs>.\n \n-IRIDA documentation can be found in the `doc/` directory in the IRIDA root directory.  IRIDA's documentation is built using [Jekyll][].  Jekyll allows us to write documentation in Markdown format and it will convert the pages to HTML for releasing to the web.  The documentation at [http://irida.corefacility.ca/documentation](http://irida.corefacility.ca/documentation) is all generated using this tool.\n+##### Testing IRIDA documentation locally\n+To view the documentation locally or make changes, you can checkou the above GitHub project and make changes.  To run the server locally you can run Jekyll to generate the pages.\n \n-To test any documentation changes, you can `cd` into the `doc/` directory and run the following command:\n+First you can `cd` into the `docs/` directory and run the following command:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc46ca0672bc097eff08e1f07f4e15f199de76e7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUzNjEwMw==", "bodyText": "Fixed in 6351ffb", "url": "https://github.com/phac-nml/irida/pull/894#discussion_r548536103", "createdAt": "2020-12-24T13:51:48Z", "author": {"login": "tom114"}, "path": "doc/developer/getting-started/index.md", "diffHunk": "@@ -263,24 +263,44 @@ mvn clean package -DskipTests\n This will create the `.war` and `.zip` files for IRIDA release under the `target/` directory.\n \n #### Building IRIDA documentation\n+IRIDA documentation can be found in the <https://github.com/phac-nml/irida-docs> GitHub project.  IRIDA's documentation is built using [Jekyll][] and [GitHub Pages](https://pages.github.com/).  Jekyll allows us to write documentation in Markdown format and it will convert the pages to HTML.  We can use Jekyll both for viewing the documentation locally and for publishing to GitHub Pages.  The current documentation can be found at <https://phac-nml.github.io/irida-docs>.\n \n-IRIDA documentation can be found in the `doc/` directory in the IRIDA root directory.  IRIDA's documentation is built using [Jekyll][].  Jekyll allows us to write documentation in Markdown format and it will convert the pages to HTML for releasing to the web.  The documentation at [http://irida.corefacility.ca/documentation](http://irida.corefacility.ca/documentation) is all generated using this tool.\n+##### Testing IRIDA documentation locally\n+To view the documentation locally or make changes, you can checkou the above GitHub project and make changes.  To run the server locally you can run Jekyll to generate the pages.\n \n-To test any documentation changes, you can `cd` into the `doc/` directory and run the following command:\n+First you can `cd` into the `docs/` directory and run the following command:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODMwNjEzNQ=="}, "originalCommit": {"oid": "bc46ca0672bc097eff08e1f07f4e15f199de76e7"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 619, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}