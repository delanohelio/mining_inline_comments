{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MjM4MTQ0", "number": 873, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNzowOTo0MFrOE-D2XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNzowOTo0MFrOE-D2XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNTEwMjM3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/apis/projects/reference-files.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNzowOTo0MFrOH7Engw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxOTozNToyMFrOH7G9bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcwMzY4Mw==", "bodyText": "When using await keep to the syntax you like (this is probably how I have been doing it and it is not exactly correct.  Keep the way I have seen you write it, it is much more elegant.  Also, I learned recently that instead of throwing a new error, just return a rejected promise:\nexport async function uploadProjectReferenceFiles(projectId, formData, config) {\n  try {\n    const { data } = await axios.post(\n      setBaseUrl(`ajax/reference-files/project/${projectId}`),\n      formData,\n      config\n    );\n    return data;\n  } catch (e) {\n    return Promise.reject(error.response.data.error);\n  }\n}\nYou can then handle this the same way:\nuploadProjectReferenceFiles(projectId, formData, config)\n  .then(console.log)\n  .catch(console.error);   \nYou should start freaking out on me when I don't do it this way!", "url": "https://github.com/phac-nml/irida/pull/873#discussion_r531703683", "createdAt": "2020-11-27T17:09:40Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/apis/projects/reference-files.js", "diffHunk": "@@ -41,3 +41,23 @@ export async function removeProjectReferenceFile(projectId, fileId) {\n       throw new Error(error.response.data.error);\n     });\n }\n+\n+/**\n+ * Remove the reference file from the project id provided\n+ * @param {projectId} project for which to remove reference file from\n+ * @param {formData} List of files to upload\n+ * @param config Configuration options for upload\n+ * @return {Promise<*>} `data` contains the OK response; `error` contains error information if an error occurred.\n+ */\n+export async function uploadProjectReferenceFiles(projectId, formData, config) {\n+  return await axios\n+    .post(\n+      setBaseUrl(`ajax/reference-files/project/${projectId}`),\n+      formData,\n+      config\n+    )\n+    .then(({ data }) => data)\n+    .catch((error) => {\n+      throw new Error(error.response.data.error);\n+    });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da7a321201ff6411d36a0f1d7de13ce6e0cdbbd0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcwNjAyMw==", "bodyText": "Thanks. Yeah I've found myself flip flopping on it too. Oh for sure!", "url": "https://github.com/phac-nml/irida/pull/873#discussion_r531706023", "createdAt": "2020-11-27T17:16:51Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/apis/projects/reference-files.js", "diffHunk": "@@ -41,3 +41,23 @@ export async function removeProjectReferenceFile(projectId, fileId) {\n       throw new Error(error.response.data.error);\n     });\n }\n+\n+/**\n+ * Remove the reference file from the project id provided\n+ * @param {projectId} project for which to remove reference file from\n+ * @param {formData} List of files to upload\n+ * @param config Configuration options for upload\n+ * @return {Promise<*>} `data` contains the OK response; `error` contains error information if an error occurred.\n+ */\n+export async function uploadProjectReferenceFiles(projectId, formData, config) {\n+  return await axios\n+    .post(\n+      setBaseUrl(`ajax/reference-files/project/${projectId}`),\n+      formData,\n+      config\n+    )\n+    .then(({ data }) => data)\n+    .catch((error) => {\n+      throw new Error(error.response.data.error);\n+    });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcwMzY4Mw=="}, "originalCommit": {"oid": "da7a321201ff6411d36a0f1d7de13ce6e0cdbbd0"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTc0MjA2MA==", "bodyText": "Updated in 496e774", "url": "https://github.com/phac-nml/irida/pull/873#discussion_r531742060", "createdAt": "2020-11-27T19:35:20Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/apis/projects/reference-files.js", "diffHunk": "@@ -41,3 +41,23 @@ export async function removeProjectReferenceFile(projectId, fileId) {\n       throw new Error(error.response.data.error);\n     });\n }\n+\n+/**\n+ * Remove the reference file from the project id provided\n+ * @param {projectId} project for which to remove reference file from\n+ * @param {formData} List of files to upload\n+ * @param config Configuration options for upload\n+ * @return {Promise<*>} `data` contains the OK response; `error` contains error information if an error occurred.\n+ */\n+export async function uploadProjectReferenceFiles(projectId, formData, config) {\n+  return await axios\n+    .post(\n+      setBaseUrl(`ajax/reference-files/project/${projectId}`),\n+      formData,\n+      config\n+    )\n+    .then(({ data }) => data)\n+    .catch((error) => {\n+      throw new Error(error.response.data.error);\n+    });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTcwMzY4Mw=="}, "originalCommit": {"oid": "da7a321201ff6411d36a0f1d7de13ce6e0cdbbd0"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 592, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}