{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MDUxMzE5", "number": 864, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMToxNTowMFrOE_V64g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMToyMToyMlrOE_WDKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODU0ODgyOnYy", "diffSide": "RIGHT", "path": "doc/user/user/project/index.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMToxNTowMFrOH9AB9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo0OToxOFrOH9hf-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyNTY4NQ==", "bodyText": "Remove the fast5 section below in the will not section.", "url": "https://github.com/phac-nml/irida/pull/864#discussion_r533725685", "createdAt": "2020-12-01T21:15:00Z", "author": {"login": "tom114"}, "path": "doc/user/user/project/index.md", "diffHunk": "@@ -310,6 +310,7 @@ The following data will be synchronized:\n * Basic project metadata\n * FASTQ sequencing data associated with samples\n * Assemblies associated with samples (including both assemblies created by pipelines within IRIDA, and uploaded assemblies)\n+* FAST5 sequencing data associated with samples", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc9696bb8d262371fcfbbf428efc6ac66971dd09"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI3NDA0Mw==", "bodyText": "Removed in 955479a", "url": "https://github.com/phac-nml/irida/pull/864#discussion_r534274043", "createdAt": "2020-12-02T15:49:18Z", "author": {"login": "deepsidhu85"}, "path": "doc/user/user/project/index.md", "diffHunk": "@@ -310,6 +310,7 @@ The following data will be synchronized:\n * Basic project metadata\n * FASTQ sequencing data associated with samples\n * Assemblies associated with samples (including both assemblies created by pipelines within IRIDA, and uploaded assemblies)\n+* FAST5 sequencing data associated with samples", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyNTY4NQ=="}, "originalCommit": {"oid": "cc9696bb8d262371fcfbbf428efc6ac66971dd09"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODU1OTU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/service/remote/ProjectSynchronizationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMToxODoxMVrOH9AImg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo0OToyNFrOH9hgPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyNzM4Ng==", "bodyText": "Note the try/catch around this block in the assemblies section below.  It should be added in case the host system doesn't support fast5 data.", "url": "https://github.com/phac-nml/irida/pull/864#discussion_r533727386", "createdAt": "2020-12-01T21:18:11Z", "author": {"login": "tom114"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/service/remote/ProjectSynchronizationService.java", "diffHunk": "@@ -374,6 +377,24 @@ private void syncProject(Project project) {\n \t\t\t}\n \t\t}\n \n+\t\t//list the fast5 files from the remote api\n+\t\tList<Fast5Object> fast5FilesForSample = fast5ObjectRemoteService.getFast5FilesForSample(sample);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc9696bb8d262371fcfbbf428efc6ac66971dd09"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI3NDEwOA==", "bodyText": "Added in ccf8d68", "url": "https://github.com/phac-nml/irida/pull/864#discussion_r534274108", "createdAt": "2020-12-02T15:49:24Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/service/remote/ProjectSynchronizationService.java", "diffHunk": "@@ -374,6 +377,24 @@ private void syncProject(Project project) {\n \t\t\t}\n \t\t}\n \n+\t\t//list the fast5 files from the remote api\n+\t\tList<Fast5Object> fast5FilesForSample = fast5ObjectRemoteService.getFast5FilesForSample(sample);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyNzM4Ng=="}, "originalCommit": {"oid": "cc9696bb8d262371fcfbbf428efc6ac66971dd09"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODU3MDAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/service/remote/ProjectSynchronizationService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMToyMToyMlrOH9APNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTo0OTo0MFrOH9hhPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyOTA3Nw==", "bodyText": "This whole section is exactly the same for single end and fast5 files, and nearly the same for pairs.  Want to encapsulate it into a private method that can be called here and in those other file types?", "url": "https://github.com/phac-nml/irida/pull/864#discussion_r533729077", "createdAt": "2020-12-01T21:21:22Z", "author": {"login": "tom114"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/service/remote/ProjectSynchronizationService.java", "diffHunk": "@@ -465,6 +488,39 @@ public void syncSingleEndSequenceFile(SingleEndSequenceFile file, Sample sample)\n \t\t}\n \t}\n \n+\t/**\n+\t * Synchronize a given {@link Fast5Object} to the local\n+\t * installation\n+\t *\n+\t * @param fast5Object\n+\t *            the {@link Fast5Object} to sync\n+\t * @param sample\n+\t *            the {@link Sample} to add the file to\n+\t */\n+\tpublic void syncFast5File(Fast5Object fast5Object, Sample sample) {\n+\t\tRemoteStatus fileStatus = fast5Object.getRemoteStatus();\n+\t\tfileStatus.setSyncStatus(SyncStatus.UPDATING);\n+\t\ttry {\n+\t\t\tfast5Object = fast5ObjectRemoteService.mirrorSequencingObject(fast5Object);\n+\n+\t\t\tfast5Object.setProcessingState(SequencingObject.ProcessingState.UNPROCESSED);\n+\t\t\tfast5Object.setFileProcessor(null);\n+\n+\t\t\tfast5Object.getFile().setId(null);\n+\t\t\tfast5Object.getRemoteStatus().setSyncStatus(SyncStatus.SYNCHRONIZED);\n+\n+\t\t\tobjectService.createSequencingObjectInSample(fast5Object, sample);\n+\n+\t\t\tfileStatus.setSyncStatus(SyncStatus.SYNCHRONIZED);\n+\n+\t\t\tobjectService.updateRemoteStatus(fast5Object.getId(), fileStatus);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc9696bb8d262371fcfbbf428efc6ac66971dd09"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI3NDM2NA==", "bodyText": "Yup that was a good idea. Added in ccf8d68", "url": "https://github.com/phac-nml/irida/pull/864#discussion_r534274364", "createdAt": "2020-12-02T15:49:40Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/service/remote/ProjectSynchronizationService.java", "diffHunk": "@@ -465,6 +488,39 @@ public void syncSingleEndSequenceFile(SingleEndSequenceFile file, Sample sample)\n \t\t}\n \t}\n \n+\t/**\n+\t * Synchronize a given {@link Fast5Object} to the local\n+\t * installation\n+\t *\n+\t * @param fast5Object\n+\t *            the {@link Fast5Object} to sync\n+\t * @param sample\n+\t *            the {@link Sample} to add the file to\n+\t */\n+\tpublic void syncFast5File(Fast5Object fast5Object, Sample sample) {\n+\t\tRemoteStatus fileStatus = fast5Object.getRemoteStatus();\n+\t\tfileStatus.setSyncStatus(SyncStatus.UPDATING);\n+\t\ttry {\n+\t\t\tfast5Object = fast5ObjectRemoteService.mirrorSequencingObject(fast5Object);\n+\n+\t\t\tfast5Object.setProcessingState(SequencingObject.ProcessingState.UNPROCESSED);\n+\t\t\tfast5Object.setFileProcessor(null);\n+\n+\t\t\tfast5Object.getFile().setId(null);\n+\t\t\tfast5Object.getRemoteStatus().setSyncStatus(SyncStatus.SYNCHRONIZED);\n+\n+\t\t\tobjectService.createSequencingObjectInSample(fast5Object, sample);\n+\n+\t\t\tfileStatus.setSyncStatus(SyncStatus.SYNCHRONIZED);\n+\n+\t\t\tobjectService.updateRemoteStatus(fast5Object.getId(), fileStatus);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyOTA3Nw=="}, "originalCommit": {"oid": "cc9696bb8d262371fcfbbf428efc6ac66971dd09"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 577, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}