{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMjU4ODIz", "number": 837, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTo1Nzo1NVrOE10nWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDozMDoxNlrOE11S8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODcyMDI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/pipeline/SavedPipelineParameters.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTo1Nzo1NVrOHuUP9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjoxMjoyMlrOHu0R1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyODMxMA==", "bodyText": "Is this empty constructor required?", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518328310", "createdAt": "2020-11-05T19:57:55Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/pipeline/SavedPipelineParameters.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.pipeline;\n+\n+import java.util.List;\n+\n+/**\n+ * Used by the UI for displaying a named pipeline parameter set.\n+ */\n+public class SavedPipelineParameters {\n+    private  Long id;\n+    private  String label;\n+    private  List<PipelineParameter> parameters;\n+\n+    public SavedPipelineParameters() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg1MzA3Ng==", "bodyText": "I believe so since it is used as part of a request body.", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518853076", "createdAt": "2020-11-06T16:12:22Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/pipeline/SavedPipelineParameters.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.pipeline;\n+\n+import java.util.List;\n+\n+/**\n+ * Used by the UI for displaying a named pipeline parameter set.\n+ */\n+public class SavedPipelineParameters {\n+    private  Long id;\n+    private  String label;\n+    private  List<PipelineParameter> parameters;\n+\n+    public SavedPipelineParameters() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyODMxMA=="}, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODczNDcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDowMjowNFrOHuUY0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjoyNzo1M1rOHu02rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzMDU3Ng==", "bodyText": "Add javadoc", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518330576", "createdAt": "2020-11-05T20:02:04Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -128,4 +156,52 @@ private String localizedParamOptionLabel(Locale locale, String workflowName, Str\n             return paramName + \".\" + optionName;\n         }\n     }\n+\n+    private List<SavedPipelineParameters> getSavedPipelineParameters(IridaWorkflow workflow, Locale locale) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg2MjUwOQ==", "bodyText": "Updated in ff30fb6", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518862509", "createdAt": "2020-11-06T16:27:53Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -128,4 +156,52 @@ private String localizedParamOptionLabel(Locale locale, String workflowName, Str\n             return paramName + \".\" + optionName;\n         }\n     }\n+\n+    private List<SavedPipelineParameters> getSavedPipelineParameters(IridaWorkflow workflow, Locale locale) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzMDU3Ng=="}, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODc1MDE5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDowNjozOFrOHuUivw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjoyOTowNFrOHu05sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzMzExOQ==", "bodyText": "Shouldn't 0L be the actual id. Wouldn't this just set the id to 0 for all of the SavedPipelineParameters?", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518333119", "createdAt": "2020-11-05T20:06:38Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -128,4 +156,52 @@ private String localizedParamOptionLabel(Locale locale, String workflowName, Str\n             return paramName + \".\" + optionName;\n         }\n     }\n+\n+    private List<SavedPipelineParameters> getSavedPipelineParameters(IridaWorkflow workflow, Locale locale) {\n+        IridaWorkflowDescription description = workflow.getWorkflowDescription();\n+        List<IridaWorkflowParameter> workflowParameters = description.getParameters();\n+        String pipelineName = description.getName()\n+                .toLowerCase();\n+        List<SavedPipelineParameters> savedParameters = new ArrayList<>();\n+\n+        /*\n+        If there are no parameters just return an empty list.\n+         */\n+        if (workflowParameters == null) {\n+            return savedParameters;\n+        }\n+\n+        /*\n+        Get the default parameter set\n+         */\n+        List<PipelineParameter> defaultParameters = workflowParameters.stream()\n+                .filter(p -> !p.isRequired())\n+                .map(p -> new PipelineParameter(\n+                        p.getName(),\n+                        messageSource.getMessage(\"pipeline.parameters.\" + pipelineName + \".\" + p.getName(), new Object[]{}, locale),\n+                        p.getDefaultValue()))\n+                .collect(Collectors.toList());\n+        savedParameters.add(new SavedPipelineParameters(0L, messageSource.getMessage(\"workflow.parameters.named.default\", new Object[]{}, locale), defaultParameters));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg2MzI4Mg==", "bodyText": "So this is a special case because it is the \"default\" set it doesn't actually have it own identifier.", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518863282", "createdAt": "2020-11-06T16:29:04Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -128,4 +156,52 @@ private String localizedParamOptionLabel(Locale locale, String workflowName, Str\n             return paramName + \".\" + optionName;\n         }\n     }\n+\n+    private List<SavedPipelineParameters> getSavedPipelineParameters(IridaWorkflow workflow, Locale locale) {\n+        IridaWorkflowDescription description = workflow.getWorkflowDescription();\n+        List<IridaWorkflowParameter> workflowParameters = description.getParameters();\n+        String pipelineName = description.getName()\n+                .toLowerCase();\n+        List<SavedPipelineParameters> savedParameters = new ArrayList<>();\n+\n+        /*\n+        If there are no parameters just return an empty list.\n+         */\n+        if (workflowParameters == null) {\n+            return savedParameters;\n+        }\n+\n+        /*\n+        Get the default parameter set\n+         */\n+        List<PipelineParameter> defaultParameters = workflowParameters.stream()\n+                .filter(p -> !p.isRequired())\n+                .map(p -> new PipelineParameter(\n+                        p.getName(),\n+                        messageSource.getMessage(\"pipeline.parameters.\" + pipelineName + \".\" + p.getName(), new Object[]{}, locale),\n+                        p.getDefaultValue()))\n+                .collect(Collectors.toList());\n+        savedParameters.add(new SavedPipelineParameters(0L, messageSource.getMessage(\"workflow.parameters.named.default\", new Object[]{}, locale), defaultParameters));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzMzExOQ=="}, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODc3NTI3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/apis/pipelines/pipelines.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDoxNDoxNFrOHuUyig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjozMDo0OFrOHu0-XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzNzE2Mg==", "bodyText": "This should probably catch and rethrow the error if there was an error saving the params", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518337162", "createdAt": "2020-11-05T20:14:14Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/apis/pipelines/pipelines.js", "diffHunk": "@@ -62,3 +62,9 @@ export const launchPipeline = (id, parameters) =>\n     .catch((error) => {\n       throw new Error(error.response.data);\n     });\n+\n+export function saveNewPipelineParameters({ label, parameters, id }) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg2NDQ3Ng==", "bodyText": "What are you talking about, no errors ever happen.  Updated in 9230a9b", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518864476", "createdAt": "2020-11-06T16:30:48Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/apis/pipelines/pipelines.js", "diffHunk": "@@ -62,3 +62,9 @@ export const launchPipeline = (id, parameters) =>\n     .catch((error) => {\n       throw new Error(error.response.data);\n     });\n+\n+export function saveNewPipelineParameters({ label, parameters, id }) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzNzE2Mg=="}, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODc4MzQ0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/launch/SavedParameters.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDoxNjo0MVrOHuU3jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjozMzo0N1rOHu1FXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzODQ0NQ==", "bodyText": "I haven't seen this before. Is it just the regular Form from ant design? If so, then it can just be added to the importing from antd below", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518338445", "createdAt": "2020-11-05T20:16:41Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/launch/SavedParameters.jsx", "diffHunk": "@@ -0,0 +1,64 @@\n+import React from \"react\";\n+import Form from \"antd/es/form\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg2NjI3MA==", "bodyText": "Yeah, if I'm not carefully Intellij likes to mess with me and do stuff like that,  Fixed in 94c9af7", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518866270", "createdAt": "2020-11-06T16:33:47Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/SavedParameters.jsx", "diffHunk": "@@ -0,0 +1,64 @@\n+import React from \"react\";\n+import Form from \"antd/es/form\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMzODQ0NQ=="}, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODgwNTM2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/launch/components/ParametersModal/ParametersModal.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDoyMjo0OVrOHuVEWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjozNDo1NlrOHu1ISg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM0MTcyMQ==", "bodyText": "Typo. Changed to Used", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518341721", "createdAt": "2020-11-05T20:22:49Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/launch/components/ParametersModal/ParametersModal.jsx", "diffHunk": "@@ -0,0 +1,139 @@\n+import React from \"react\";\n+import isEqual from \"lodash/isEqual\";\n+import { Form, Input, Modal, Space, Tag } from \"antd\";\n+import { useLaunchDispatch, useLaunchState } from \"../../launch-context\";\n+import { SPACE_SM } from \"../../../../styles/spacing\";\n+import { ParametersFooter } from \"./ParametersFooter\";\n+import { useResetFormOnCloseModal } from \"../../../../hooks\";\n+\n+/**\n+ * React component to render a modal window for modifying and saving pipeline\n+ * parameters.\n+ *\n+ * @param {boolean} visible - determines if the modal should be displayed or not.\n+ * @param {function} closeModal - function to close the modal window.\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function ParametersModal({ visible, closeModal }) {\n+  /*\n+   The currently selected parameter set.  If it is the pipelines default set,\n+   it can be used modified (but not saved over), or it can be saved as a new\n+   parameter set.\n+   */\n+  const { parameterSet } = useLaunchState();\n+  const {\n+    dispatchUseSaveAs,\n+    dispatchUseModifiedParameters,\n+  } = useLaunchDispatch();\n+\n+  /*\n+  Store a copy of the original values to compare against to see if they\n+  have been modified.\n+   */\n+  const originalValues = parameterSet.parameters.reduce(\n+    (a, b) => ({ ...a, [b.name]: b.value }),\n+    {}\n+  );\n+\n+  /*\n+  Have any of the field been modified?\n+   */\n+  const [modified, setModified] = React.useState(false);\n+\n+  /*\n+  Use by the ant form to set original values for the parameters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg2NzAxOA==", "bodyText": "Fixed in 84c7e78", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518867018", "createdAt": "2020-11-06T16:34:56Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/components/ParametersModal/ParametersModal.jsx", "diffHunk": "@@ -0,0 +1,139 @@\n+import React from \"react\";\n+import isEqual from \"lodash/isEqual\";\n+import { Form, Input, Modal, Space, Tag } from \"antd\";\n+import { useLaunchDispatch, useLaunchState } from \"../../launch-context\";\n+import { SPACE_SM } from \"../../../../styles/spacing\";\n+import { ParametersFooter } from \"./ParametersFooter\";\n+import { useResetFormOnCloseModal } from \"../../../../hooks\";\n+\n+/**\n+ * React component to render a modal window for modifying and saving pipeline\n+ * parameters.\n+ *\n+ * @param {boolean} visible - determines if the modal should be displayed or not.\n+ * @param {function} closeModal - function to close the modal window.\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function ParametersModal({ visible, closeModal }) {\n+  /*\n+   The currently selected parameter set.  If it is the pipelines default set,\n+   it can be used modified (but not saved over), or it can be saved as a new\n+   parameter set.\n+   */\n+  const { parameterSet } = useLaunchState();\n+  const {\n+    dispatchUseSaveAs,\n+    dispatchUseModifiedParameters,\n+  } = useLaunchDispatch();\n+\n+  /*\n+  Store a copy of the original values to compare against to see if they\n+  have been modified.\n+   */\n+  const originalValues = parameterSet.parameters.reduce(\n+    (a, b) => ({ ...a, [b.name]: b.value }),\n+    {}\n+  );\n+\n+  /*\n+  Have any of the field been modified?\n+   */\n+  const [modified, setModified] = React.useState(false);\n+\n+  /*\n+  Use by the ant form to set original values for the parameters.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM0MTcyMQ=="}, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODgxNTYyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/launch/components/ParametersModal/SaveParametersAsFooter.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDoyNTozMlrOHuVKcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjozNzowMVrOHu1NBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM0MzI4Mw==", "bodyText": "File comments", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518343283", "createdAt": "2020-11-05T20:25:32Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/launch/components/ParametersModal/SaveParametersAsFooter.jsx", "diffHunk": "@@ -0,0 +1,37 @@\n+import React from \"react\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg2ODIzMQ==", "bodyText": "Updated in da2f590", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518868231", "createdAt": "2020-11-06T16:37:01Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/components/ParametersModal/SaveParametersAsFooter.jsx", "diffHunk": "@@ -0,0 +1,37 @@\n+import React from \"react\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM0MzI4Mw=="}, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODgzMTg0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/launch/launch-context.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQyMDozMDoxNlrOHuVUMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjozODoyMFrOHu1QFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM0NTc3Ng==", "bodyText": "Typo: change to name from mame", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518345776", "createdAt": "2020-11-05T20:30:16Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/launch/launch-context.js", "diffHunk": "@@ -81,20 +108,187 @@ function LaunchProvider({ children }) {\n           type: TYPES.LOADED,\n           payload: {\n             ...details,\n+            parameterSet: deepCopy(formattedParameterSets[0]), // This will be the default set of saved parameters\n             parameterWithOptions: formattedParameterWithOptions,\n+            parameterSets: formattedParameterSets,\n           },\n         });\n       }\n     );\n   }, [id]);\n \n+  function dispatchUseParameterSetById(id) {\n+    const set = state.parameterSets.find((p) => p.id === id);\n+    dispatch({\n+      type: TYPES.PARAMETER_SET,\n+      payload: { set: deepCopy(set) },\n+    });\n+  }\n+\n   function dispatchLaunch(values) {\n     launchPipeline(id, values);\n   }\n \n+  /**\n+   * Dispatch function called when a user modifies the current saved parameter\n+   * set parameter values, and wants to use them without saving.\n+   *\n+   * @param {array} parameters - list of key value pairs for the parameters ({mame: value})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg2OTAxNA==", "bodyText": "Updated in 7fe76aa", "url": "https://github.com/phac-nml/irida/pull/837#discussion_r518869014", "createdAt": "2020-11-06T16:38:20Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/launch-context.js", "diffHunk": "@@ -81,20 +108,187 @@ function LaunchProvider({ children }) {\n           type: TYPES.LOADED,\n           payload: {\n             ...details,\n+            parameterSet: deepCopy(formattedParameterSets[0]), // This will be the default set of saved parameters\n             parameterWithOptions: formattedParameterWithOptions,\n+            parameterSets: formattedParameterSets,\n           },\n         });\n       }\n     );\n   }, [id]);\n \n+  function dispatchUseParameterSetById(id) {\n+    const set = state.parameterSets.find((p) => p.id === id);\n+    dispatch({\n+      type: TYPES.PARAMETER_SET,\n+      payload: { set: deepCopy(set) },\n+    });\n+  }\n+\n   function dispatchLaunch(values) {\n     launchPipeline(id, values);\n   }\n \n+  /**\n+   * Dispatch function called when a user modifies the current saved parameter\n+   * set parameter values, and wants to use them without saving.\n+   *\n+   * @param {array} parameters - list of key value pairs for the parameters ({mame: value})", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODM0NTc3Ng=="}, "originalCommit": {"oid": "9e273f0334b2cda04de0a1070d70409efea7df3d"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 785, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}