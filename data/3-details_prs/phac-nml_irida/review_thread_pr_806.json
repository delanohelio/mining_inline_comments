{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxOTQ1NTQ2", "number": 806, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODo1ODoxNlrOEmvY1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo1MTo0MFrOEpEZBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDU3NzQ5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/WEB-INF/web.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxODo1ODoxNlrOHW8tVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxOTo0Njo1MVrOHZNJyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgyNTM2NQ==", "bodyText": "Do you know what the consequence of changing this is? I ask because it looks like something that impacts all pages in IRIDA (not just the SISTR page).", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r493825365", "createdAt": "2020-09-23T18:58:16Z", "author": {"login": "apetkau"}, "path": "src/main/webapp/WEB-INF/web.xml", "diffHunk": "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n \txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n-\tversion=\"3.0\" metadata-complete=\"true\">\n+\tversion=\"3.0\" metadata-complete=\"false\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f199afd845c483dd2f6cd161c5bfe14e0d90bdf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE5MTk0Nw==", "bodyText": "I did not changed this. I guess what happened is there was a commit from Tom 4 days ago which changed it to true. I would keep it as true", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r496191947", "createdAt": "2020-09-28T19:46:51Z", "author": {"login": "kbessonov1984"}, "path": "src/main/webapp/WEB-INF/web.xml", "diffHunk": "@@ -1,11 +1,11 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n <web-app xmlns=\"http://java.sun.com/xml/ns/javaee\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n \txsi:schemaLocation=\"http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd\"\n-\tversion=\"3.0\" metadata-complete=\"true\">\n+\tversion=\"3.0\" metadata-complete=\"false\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzgyNTM2NQ=="}, "originalCommit": {"oid": "9f199afd845c483dd2f6cd161c5bfe14e0d90bdf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTU1MDE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjozMjo1MFrOHZGiWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMDowMjoxM1rOHZNo8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA4MzU0Ng==", "bodyText": "Could you fix up formatting around else (add spaces around }else{).", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r496083546", "createdAt": "2020-09-28T16:32:50Z", "author": {"login": "apetkau"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "diffHunk": "@@ -750,10 +749,18 @@ public AnalysisSistrResults getSistrAnalysis(@PathVariable Long id) {\n \t\t}\n \t\tAnalysisType analysisType = iridaWorkflow.getWorkflowDescription()\n \t\t\t\t.getAnalysisType();\n-\t\tif (analysisType.equals(BuiltInAnalysisTypes.SISTR_TYPING)) {\n+\t\tif (analysisTypesService.getViewerForAnalysisType(analysisType).get().equals(\"sistr\")) {\n \t\t\tAnalysis analysis = submission.getAnalysis();\n-\t\t\tPath path = analysis.getAnalysisOutputFile(sistrFileKey)\n-\t\t\t\t\t.getFile();\n+\n+\t\t\tPath path = null;\n+\t\t\tif(analysis.getAnalysisOutputFile(sistrFileKey) != null) {\n+\t\t\t\tpath = analysis.getAnalysisOutputFile(sistrFileKey).getFile();\n+\t\t\t}else{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de06006aaf6f9e26457fe500b1752889bf414bed"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE5OTkyMQ==", "bodyText": "Sure. Spaces added around else", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r496199921", "createdAt": "2020-09-28T20:02:13Z", "author": {"login": "kbessonov1984"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "diffHunk": "@@ -750,10 +749,18 @@ public AnalysisSistrResults getSistrAnalysis(@PathVariable Long id) {\n \t\t}\n \t\tAnalysisType analysisType = iridaWorkflow.getWorkflowDescription()\n \t\t\t\t.getAnalysisType();\n-\t\tif (analysisType.equals(BuiltInAnalysisTypes.SISTR_TYPING)) {\n+\t\tif (analysisTypesService.getViewerForAnalysisType(analysisType).get().equals(\"sistr\")) {\n \t\t\tAnalysis analysis = submission.getAnalysis();\n-\t\t\tPath path = analysis.getAnalysisOutputFile(sistrFileKey)\n-\t\t\t\t\t.getFile();\n+\n+\t\t\tPath path = null;\n+\t\t\tif(analysis.getAnalysisOutputFile(sistrFileKey) != null) {\n+\t\t\t\tpath = analysis.getAnalysisOutputFile(sistrFileKey).getFile();\n+\t\t\t}else{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA4MzU0Ng=="}, "originalCommit": {"oid": "de06006aaf6f9e26457fe500b1752889bf414bed"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTc3ODc5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzozMjozNFrOHZIvWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxOTo1NTo1MFrOHZNcaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExOTY0MQ==", "bodyText": "Could you move the entire try-catch block below into this if statement? Since it only applies if there is a SISTR results file available.\nWith the try-catch outside of the if-statement then, if no SISTR output file is found the IRIDA UI won't display anything for the output page.", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r496119641", "createdAt": "2020-09-28T17:32:34Z", "author": {"login": "apetkau"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "diffHunk": "@@ -750,10 +749,18 @@ public AnalysisSistrResults getSistrAnalysis(@PathVariable Long id) {\n \t\t}\n \t\tAnalysisType analysisType = iridaWorkflow.getWorkflowDescription()\n \t\t\t\t.getAnalysisType();\n-\t\tif (analysisType.equals(BuiltInAnalysisTypes.SISTR_TYPING)) {\n+\t\tif (analysisTypesService.getViewerForAnalysisType(analysisType).get().equals(\"sistr\")) {\n \t\t\tAnalysis analysis = submission.getAnalysis();\n-\t\t\tPath path = analysis.getAnalysisOutputFile(sistrFileKey)\n-\t\t\t\t\t.getFile();\n+\n+\t\t\tPath path = null;\n+\t\t\tif(analysis.getAnalysisOutputFile(sistrFileKey) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5aef4cb6b9421876f84f9c0087c28d4e28a98a2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE5NjcxNQ==", "bodyText": "I do agree that it makes sense to move that try-catch statement into if statement that checks if SISTR results JSON file is present. It is more logical. Thank you", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r496196715", "createdAt": "2020-09-28T19:55:50Z", "author": {"login": "kbessonov1984"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "diffHunk": "@@ -750,10 +749,18 @@ public AnalysisSistrResults getSistrAnalysis(@PathVariable Long id) {\n \t\t}\n \t\tAnalysisType analysisType = iridaWorkflow.getWorkflowDescription()\n \t\t\t\t.getAnalysisType();\n-\t\tif (analysisType.equals(BuiltInAnalysisTypes.SISTR_TYPING)) {\n+\t\tif (analysisTypesService.getViewerForAnalysisType(analysisType).get().equals(\"sistr\")) {\n \t\t\tAnalysis analysis = submission.getAnalysis();\n-\t\t\tPath path = analysis.getAnalysisOutputFile(sistrFileKey)\n-\t\t\t\t\t.getFile();\n+\n+\t\t\tPath path = null;\n+\t\t\tif(analysis.getAnalysisOutputFile(sistrFileKey) != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExOTY0MQ=="}, "originalCommit": {"oid": "a5aef4cb6b9421876f84f9c0087c28d4e28a98a2"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTgwNTA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzo0MDowMVrOHZI_Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMDowMDoyN1rOHZNlmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMzcxOQ==", "bodyText": "Could you add a space after the final period \".\" here?", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r496123719", "createdAt": "2020-09-28T17:40:01Z", "author": {"login": "apetkau"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "diffHunk": "@@ -750,10 +749,18 @@ public AnalysisSistrResults getSistrAnalysis(@PathVariable Long id) {\n \t\t}\n \t\tAnalysisType analysisType = iridaWorkflow.getWorkflowDescription()\n \t\t\t\t.getAnalysisType();\n-\t\tif (analysisType.equals(BuiltInAnalysisTypes.SISTR_TYPING)) {\n+\t\tif (analysisTypesService.getViewerForAnalysisType(analysisType).get().equals(\"sistr\")) {\n \t\t\tAnalysis analysis = submission.getAnalysis();\n-\t\t\tPath path = analysis.getAnalysisOutputFile(sistrFileKey)\n-\t\t\t\t\t.getFile();\n+\n+\t\t\tPath path = null;\n+\t\t\tif(analysis.getAnalysisOutputFile(sistrFileKey) != null) {\n+\t\t\t\tpath = analysis.getAnalysisOutputFile(sistrFileKey).getFile();\n+\t\t\t}else{\n+\t\t\t\tlogger.error(\"Null response from analysis.getAnalysisOutputFile(sistrFileKey). \" +\n+\t\t\t\t\t\t\"No output file was found for the default sistrFileKey \\\"\"+sistrFileKey + \"\\\".\"+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5aef4cb6b9421876f84f9c0087c28d4e28a98a2"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE5OTA2Nw==", "bodyText": "Sure", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r496199067", "createdAt": "2020-09-28T20:00:27Z", "author": {"login": "kbessonov1984"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "diffHunk": "@@ -750,10 +749,18 @@ public AnalysisSistrResults getSistrAnalysis(@PathVariable Long id) {\n \t\t}\n \t\tAnalysisType analysisType = iridaWorkflow.getWorkflowDescription()\n \t\t\t\t.getAnalysisType();\n-\t\tif (analysisType.equals(BuiltInAnalysisTypes.SISTR_TYPING)) {\n+\t\tif (analysisTypesService.getViewerForAnalysisType(analysisType).get().equals(\"sistr\")) {\n \t\t\tAnalysis analysis = submission.getAnalysis();\n-\t\t\tPath path = analysis.getAnalysisOutputFile(sistrFileKey)\n-\t\t\t\t\t.getFile();\n+\n+\t\t\tPath path = null;\n+\t\t\tif(analysis.getAnalysisOutputFile(sistrFileKey) != null) {\n+\t\t\t\tpath = analysis.getAnalysisOutputFile(sistrFileKey).getFile();\n+\t\t\t}else{\n+\t\t\t\tlogger.error(\"Null response from analysis.getAnalysisOutputFile(sistrFileKey). \" +\n+\t\t\t\t\t\t\"No output file was found for the default sistrFileKey \\\"\"+sistrFileKey + \"\\\".\"+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjEyMzcxOQ=="}, "originalCommit": {"oid": "a5aef4cb6b9421876f84f9c0087c28d4e28a98a2"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDg2OTQ5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/analysis/components/sistr/CgMlst.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDoyNzozMFrOHagTvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOTowNzozOFrOHarg4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU1NDM2Ng==", "bodyText": "Comment for this function please.", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r497554366", "createdAt": "2020-09-30T14:27:30Z", "author": {"login": "tom114"}, "path": "src/main/webapp/resources/js/pages/analysis/components/sistr/CgMlst.jsx", "diffHunk": "@@ -25,19 +25,33 @@ export default function CgMlst({ sistrResults }) {\n       {\n         title: i18n(\"AnalysisSistr.percentMatching\"),\n         desc:\n-          sistrResults.cgmlst_distance !== null\n-            ? `${getPercentage(sistrResults.cgmlst_distance) + \"\"}%`\n-            : \"\"\n+            sistrResults.cgmlst_distance !== null\n+                ? `${getPercentageFromDistance(sistrResults.cgmlst_distance) + \"\"}%`\n+                : \"-\"\n+      },\n+      {\n+        title: i18n(\"AnalysisSistr.allelesFoundGenome\"),\n+        desc: sistrResults.cgmlst_found_loci !== null\n+          ? `${sistrResults.cgmlst_found_loci}/330` + \"\" : \"-\"\n+      },\n+      {\n+        title: i18n(\"AnalysisSistr.allelesFoundGenomePercent\"),\n+        desc: sistrResults.cgmlst_found_loci !== null\n+            ? `${getPercentage(sistrResults.cgmlst_found_loci)+\"\"}%` + \"\" : \"-\"\n       },\n       {\n         title: i18n(\"AnalysisSistr.cgmlstSequenceType\"),\n-        desc: sistrResults.cgmlst_ST !== null ? sistrResults.cgmlst_ST + \"\" : \"\"\n+        desc: sistrResults.cgmlst_ST !== null ? sistrResults.cgmlst_ST + \"\" : \"-\"\n       }\n     ];\n   }\n \n+  function getPercentageFromDistance(str) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1260bbcdd7d9b5d6db61120508228f185bbb4b3"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzczNzk1Mw==", "bodyText": "Provided comments to getPercentageFromDistance() and getPercentage() functions to better reflect their purpose", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r497737953", "createdAt": "2020-09-30T19:07:38Z", "author": {"login": "kbessonov1984"}, "path": "src/main/webapp/resources/js/pages/analysis/components/sistr/CgMlst.jsx", "diffHunk": "@@ -25,19 +25,33 @@ export default function CgMlst({ sistrResults }) {\n       {\n         title: i18n(\"AnalysisSistr.percentMatching\"),\n         desc:\n-          sistrResults.cgmlst_distance !== null\n-            ? `${getPercentage(sistrResults.cgmlst_distance) + \"\"}%`\n-            : \"\"\n+            sistrResults.cgmlst_distance !== null\n+                ? `${getPercentageFromDistance(sistrResults.cgmlst_distance) + \"\"}%`\n+                : \"-\"\n+      },\n+      {\n+        title: i18n(\"AnalysisSistr.allelesFoundGenome\"),\n+        desc: sistrResults.cgmlst_found_loci !== null\n+          ? `${sistrResults.cgmlst_found_loci}/330` + \"\" : \"-\"\n+      },\n+      {\n+        title: i18n(\"AnalysisSistr.allelesFoundGenomePercent\"),\n+        desc: sistrResults.cgmlst_found_loci !== null\n+            ? `${getPercentage(sistrResults.cgmlst_found_loci)+\"\"}%` + \"\" : \"-\"\n       },\n       {\n         title: i18n(\"AnalysisSistr.cgmlstSequenceType\"),\n-        desc: sistrResults.cgmlst_ST !== null ? sistrResults.cgmlst_ST + \"\" : \"\"\n+        desc: sistrResults.cgmlst_ST !== null ? sistrResults.cgmlst_ST + \"\" : \"-\"\n       }\n     ];\n   }\n \n+  function getPercentageFromDistance(str) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU1NDM2Ng=="}, "originalCommit": {"oid": "b1260bbcdd7d9b5d6db61120508228f185bbb4b3"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDk4NDc4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/analysis/components/sistr/CgMlst.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo1MDozMVrOHahcFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOToxMToyN1rOHaro4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3Mjg4NQ==", "bodyText": "I see the 330 magic number around in this file a few times.  Can that get changed to a defined variable at the top of the file or something instead of just 330?", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r497572885", "createdAt": "2020-09-30T14:50:31Z", "author": {"login": "tom114"}, "path": "src/main/webapp/resources/js/pages/analysis/components/sistr/CgMlst.jsx", "diffHunk": "@@ -25,19 +25,33 @@ export default function CgMlst({ sistrResults }) {\n       {\n         title: i18n(\"AnalysisSistr.percentMatching\"),\n         desc:\n-          sistrResults.cgmlst_distance !== null\n-            ? `${getPercentage(sistrResults.cgmlst_distance) + \"\"}%`\n-            : \"\"\n+            sistrResults.cgmlst_distance !== null\n+                ? `${getPercentageFromDistance(sistrResults.cgmlst_distance) + \"\"}%`\n+                : \"-\"\n+      },\n+      {\n+        title: i18n(\"AnalysisSistr.allelesFoundGenome\"),\n+        desc: sistrResults.cgmlst_found_loci !== null\n+          ? `${sistrResults.cgmlst_found_loci}/330` + \"\" : \"-\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1260bbcdd7d9b5d6db61120508228f185bbb4b3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc0MDAwMQ==", "bodyText": "Yes, I saw it too. I think it is good idea to define it as a constant variable (max_cgMLST_count) which will make code modification easier as only a single place would need to be modified. This number refers to the maximum number of cgMLST alleles which should not change as SISTR uses this MLST scheme since the beginning. I do not see that this number would change unless a completely new cgMLST will be used in the future. Perhaps it is a good idea to add this field into SISTR results JSON file for automatic adjustment of this constant.", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r497740001", "createdAt": "2020-09-30T19:11:27Z", "author": {"login": "kbessonov1984"}, "path": "src/main/webapp/resources/js/pages/analysis/components/sistr/CgMlst.jsx", "diffHunk": "@@ -25,19 +25,33 @@ export default function CgMlst({ sistrResults }) {\n       {\n         title: i18n(\"AnalysisSistr.percentMatching\"),\n         desc:\n-          sistrResults.cgmlst_distance !== null\n-            ? `${getPercentage(sistrResults.cgmlst_distance) + \"\"}%`\n-            : \"\"\n+            sistrResults.cgmlst_distance !== null\n+                ? `${getPercentageFromDistance(sistrResults.cgmlst_distance) + \"\"}%`\n+                : \"-\"\n+      },\n+      {\n+        title: i18n(\"AnalysisSistr.allelesFoundGenome\"),\n+        desc: sistrResults.cgmlst_found_loci !== null\n+          ? `${sistrResults.cgmlst_found_loci}/330` + \"\" : \"-\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3Mjg4NQ=="}, "originalCommit": {"oid": "b1260bbcdd7d9b5d6db61120508228f185bbb4b3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDk5MDE1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/analysis/components/sistr/CgMlst.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDo1MTo0MFrOHahflg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxOToxMjoxMFrOHarqNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3Mzc4Mg==", "bodyText": "Same here with the 330.  Also comment on this function please since it's actually doing something specific with the 330.", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r497573782", "createdAt": "2020-09-30T14:51:40Z", "author": {"login": "tom114"}, "path": "src/main/webapp/resources/js/pages/analysis/components/sistr/CgMlst.jsx", "diffHunk": "@@ -25,19 +25,33 @@ export default function CgMlst({ sistrResults }) {\n       {\n         title: i18n(\"AnalysisSistr.percentMatching\"),\n         desc:\n-          sistrResults.cgmlst_distance !== null\n-            ? `${getPercentage(sistrResults.cgmlst_distance) + \"\"}%`\n-            : \"\"\n+            sistrResults.cgmlst_distance !== null\n+                ? `${getPercentageFromDistance(sistrResults.cgmlst_distance) + \"\"}%`\n+                : \"-\"\n+      },\n+      {\n+        title: i18n(\"AnalysisSistr.allelesFoundGenome\"),\n+        desc: sistrResults.cgmlst_found_loci !== null\n+          ? `${sistrResults.cgmlst_found_loci}/330` + \"\" : \"-\"\n+      },\n+      {\n+        title: i18n(\"AnalysisSistr.allelesFoundGenomePercent\"),\n+        desc: sistrResults.cgmlst_found_loci !== null\n+            ? `${getPercentage(sistrResults.cgmlst_found_loci)+\"\"}%` + \"\" : \"-\"\n       },\n       {\n         title: i18n(\"AnalysisSistr.cgmlstSequenceType\"),\n-        desc: sistrResults.cgmlst_ST !== null ? sistrResults.cgmlst_ST + \"\" : \"\"\n+        desc: sistrResults.cgmlst_ST !== null ? sistrResults.cgmlst_ST + \"\" : \"-\"\n       }\n     ];\n   }\n \n+  function getPercentageFromDistance(str) {\n+    return parseFloat((1 - str) * 100).toFixed(2);\n+  }\n+\n   function getPercentage(str) {\n-    return parseFloat((1 - str) * 100).toFixed(1);\n+    return parseFloat((str / 330) * 100).toFixed(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1260bbcdd7d9b5d6db61120508228f185bbb4b3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzc0MDM0Mw==", "bodyText": "Changed 330 to max_cgMLST_count constant", "url": "https://github.com/phac-nml/irida/pull/806#discussion_r497740343", "createdAt": "2020-09-30T19:12:10Z", "author": {"login": "kbessonov1984"}, "path": "src/main/webapp/resources/js/pages/analysis/components/sistr/CgMlst.jsx", "diffHunk": "@@ -25,19 +25,33 @@ export default function CgMlst({ sistrResults }) {\n       {\n         title: i18n(\"AnalysisSistr.percentMatching\"),\n         desc:\n-          sistrResults.cgmlst_distance !== null\n-            ? `${getPercentage(sistrResults.cgmlst_distance) + \"\"}%`\n-            : \"\"\n+            sistrResults.cgmlst_distance !== null\n+                ? `${getPercentageFromDistance(sistrResults.cgmlst_distance) + \"\"}%`\n+                : \"-\"\n+      },\n+      {\n+        title: i18n(\"AnalysisSistr.allelesFoundGenome\"),\n+        desc: sistrResults.cgmlst_found_loci !== null\n+          ? `${sistrResults.cgmlst_found_loci}/330` + \"\" : \"-\"\n+      },\n+      {\n+        title: i18n(\"AnalysisSistr.allelesFoundGenomePercent\"),\n+        desc: sistrResults.cgmlst_found_loci !== null\n+            ? `${getPercentage(sistrResults.cgmlst_found_loci)+\"\"}%` + \"\" : \"-\"\n       },\n       {\n         title: i18n(\"AnalysisSistr.cgmlstSequenceType\"),\n-        desc: sistrResults.cgmlst_ST !== null ? sistrResults.cgmlst_ST + \"\" : \"\"\n+        desc: sistrResults.cgmlst_ST !== null ? sistrResults.cgmlst_ST + \"\" : \"-\"\n       }\n     ];\n   }\n \n+  function getPercentageFromDistance(str) {\n+    return parseFloat((1 - str) * 100).toFixed(2);\n+  }\n+\n   function getPercentage(str) {\n-    return parseFloat((1 - str) * 100).toFixed(1);\n+    return parseFloat((str / 330) * 100).toFixed(2);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU3Mzc4Mg=="}, "originalCommit": {"oid": "b1260bbcdd7d9b5d6db61120508228f185bbb4b3"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 744, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}