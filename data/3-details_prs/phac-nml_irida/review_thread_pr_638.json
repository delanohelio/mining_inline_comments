{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNjA0MjM5", "number": 638, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDo1OTozMVrODrr40Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjoxNzoxNFrODtL3Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTM0NDE3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/projects/samples/linker/Linker.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNDo1OTozMVrOF8LF-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzo0OTowNlrOF9qoiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY0MDYzMw==", "bodyText": "Remove {\" \"} that's an artifact from formatting with Prettier. It thinks you literally want to add a space.", "url": "https://github.com/phac-nml/irida/pull/638#discussion_r398640633", "createdAt": "2020-03-26T14:59:31Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/projects/samples/linker/Linker.jsx", "diffHunk": "@@ -27,33 +27,79 @@ const CommandText = styled(Paragraph)`\n  * @constructor\n  */\n function Linker() {\n+  const options = [\n+    { label: i18n(\"Linker.fastq\"), value: \"fastq\" },\n+    { label: i18n(\"Linker.assembly\"), value: \"assembly\" }\n+  ];\n+\n+  //this will hold the base string of the script with the projects & samples.  The filetypes will be appended before displaying.\n+  let scriptString = undefined;\n+\n+  let modal = undefined; \n+\n+  const ModalContents = (\n+    { command } \n+  ) => (\n+    <>\n+      {\" \"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba2cde9a19c77894e1e6c1da4c67a1b9bd0dd99d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIwNTk2MA==", "bodyText": "Removed in 0c2a1d3", "url": "https://github.com/phac-nml/irida/pull/638#discussion_r400205960", "createdAt": "2020-03-30T13:49:06Z", "author": {"login": "tom114"}, "path": "src/main/webapp/resources/js/pages/projects/samples/linker/Linker.jsx", "diffHunk": "@@ -27,33 +27,79 @@ const CommandText = styled(Paragraph)`\n  * @constructor\n  */\n function Linker() {\n+  const options = [\n+    { label: i18n(\"Linker.fastq\"), value: \"fastq\" },\n+    { label: i18n(\"Linker.assembly\"), value: \"assembly\" }\n+  ];\n+\n+  //this will hold the base string of the script with the projects & samples.  The filetypes will be appended before displaying.\n+  let scriptString = undefined;\n+\n+  let modal = undefined; \n+\n+  const ModalContents = (\n+    { command } \n+  ) => (\n+    <>\n+      {\" \"}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY0MDYzMw=="}, "originalCommit": {"oid": "ba2cde9a19c77894e1e6c1da4c67a1b9bd0dd99d"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjcwNDkzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/projects/samples/linker/Linker.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDoxMToyOVrOF8YiXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMzo1MToxMVrOF9qugQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2MDg5Mg==", "bodyText": "You can rename a variable when you are destructuring the object, so:\n getNGSLinkerCode(detail).then(({ data : scriptString }) => {\n\nwould give the same result.", "url": "https://github.com/phac-nml/irida/pull/638#discussion_r398860892", "createdAt": "2020-03-26T20:11:29Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/projects/samples/linker/Linker.jsx", "diffHunk": "@@ -27,33 +27,79 @@ const CommandText = styled(Paragraph)`\n  * @constructor\n  */\n function Linker() {\n+  const options = [\n+    { label: i18n(\"Linker.fastq\"), value: \"fastq\" },\n+    { label: i18n(\"Linker.assembly\"), value: \"assembly\" }\n+  ];\n+\n+  //this will hold the base string of the script with the projects & samples.  The filetypes will be appended before displaying.\n+  let scriptString = undefined;\n+\n+  let modal = undefined; \n+\n+  const ModalContents = (\n+    { command } \n+  ) => (\n+    <>\n+      {\" \"}\n+      <Paragraph>{i18n(\"Linker.details\")}</Paragraph>\n+      <Text type=\"secondary\">\n+        <span dangerouslySetInnerHTML={{ __html: i18n(\"Linker.note\") }} />\n+      </Text>\n+      <br/><br/>\n+      <Text strong>{i18n(\"Linker.types\")}</Text> <Checkbox.Group\n+        options={options}\n+        defaultValue={[\"fastq\"]}\n+        onChange={updateCommand}\n+      />\n+      <CommandText\n+        className=\"t-cmd-text\"\n+        ellipsis={{ rows: 1 }}\n+        copyable={ command }\n+      >\n+        {command}\n+      </CommandText>\n+      \n+    </>\n+  );\n+\n   function handleSampleIds(e) {\n-    // Post data to get linker command.\n+    // Post data to the server to get the linker command.\n     const { detail } = e;\n     getNGSLinkerCode(detail).then(({ data }) => {\n-      Modal.success({\n+      scriptString = data;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba2cde9a19c77894e1e6c1da4c67a1b9bd0dd99d"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDIwNzQ4OQ==", "bodyText": "So this wasn't just renaming the variable.  That variable is at https://github.com/phac-nml/irida/pull/638/files#diff-383b10c14b55cb1fcd2260780fbcf323R36 to hold the base of the script string so when it gets updated it doesn't have to repeat the server call.  See how it's building the string to display at https://github.com/phac-nml/irida/pull/638/files#diff-383b10c14b55cb1fcd2260780fbcf323R97.\nLet me know if there's a different way to go about this.", "url": "https://github.com/phac-nml/irida/pull/638#discussion_r400207489", "createdAt": "2020-03-30T13:51:11Z", "author": {"login": "tom114"}, "path": "src/main/webapp/resources/js/pages/projects/samples/linker/Linker.jsx", "diffHunk": "@@ -27,33 +27,79 @@ const CommandText = styled(Paragraph)`\n  * @constructor\n  */\n function Linker() {\n+  const options = [\n+    { label: i18n(\"Linker.fastq\"), value: \"fastq\" },\n+    { label: i18n(\"Linker.assembly\"), value: \"assembly\" }\n+  ];\n+\n+  //this will hold the base string of the script with the projects & samples.  The filetypes will be appended before displaying.\n+  let scriptString = undefined;\n+\n+  let modal = undefined; \n+\n+  const ModalContents = (\n+    { command } \n+  ) => (\n+    <>\n+      {\" \"}\n+      <Paragraph>{i18n(\"Linker.details\")}</Paragraph>\n+      <Text type=\"secondary\">\n+        <span dangerouslySetInnerHTML={{ __html: i18n(\"Linker.note\") }} />\n+      </Text>\n+      <br/><br/>\n+      <Text strong>{i18n(\"Linker.types\")}</Text> <Checkbox.Group\n+        options={options}\n+        defaultValue={[\"fastq\"]}\n+        onChange={updateCommand}\n+      />\n+      <CommandText\n+        className=\"t-cmd-text\"\n+        ellipsis={{ rows: 1 }}\n+        copyable={ command }\n+      >\n+        {command}\n+      </CommandText>\n+      \n+    </>\n+  );\n+\n   function handleSampleIds(e) {\n-    // Post data to get linker command.\n+    // Post data to the server to get the linker command.\n     const { detail } = e;\n     getNGSLinkerCode(detail).then(({ data }) => {\n-      Modal.success({\n+      scriptString = data;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg2MDg5Mg=="}, "originalCommit": {"oid": "ba2cde9a19c77894e1e6c1da4c67a1b9bd0dd99d"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NzA2ODU1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/projects/samples/linker/Linker.jsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNjoxNzoxNFrOF-dq5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzoxNToxNlrOF_ACfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0MjE1MQ==", "bodyText": "Replace this with IconCode it's already in the imports, but I must have missed updating it.  Please then remove the import for CodeOutlined", "url": "https://github.com/phac-nml/irida/pull/638#discussion_r401042151", "createdAt": "2020-03-31T16:17:14Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/projects/samples/linker/Linker.jsx", "diffHunk": "@@ -27,58 +29,85 @@ const CommandText = styled(Paragraph)`\n  * @constructor\n  */\n function Linker() {\n-  function handleSampleIds(e) {\n-    // Post data to get linker command.\n-    const { detail } = e;\n+  const [visible, setVisible] = useState(false);\n+  const [types, setTypes] = useState([\"fastq\"]);\n+  const [scriptString, setScriptString] = useState();\n+  const [command, setCommand] = useState();\n+\n+  const options = [\n+    { label: i18n(\"Linker.fastq\"), value: \"fastq\" },\n+    { label: i18n(\"Linker.assembly\"), value: \"assembly\" }\n+  ];\n+\n+  function handleSampleIds({ detail }) {\n     getNGSLinkerCode(detail).then(({ data }) => {\n-      Modal.success({\n-        className: \"t-linker-modal\",\n-        width: 500,\n-        title: i18n(\"Linker.title\"),\n-        content: (\n-          <>\n-            <Paragraph>{i18n(\"Linker.details\")}</Paragraph>\n-            <Text type=\"secondary\">\n-              <span dangerouslySetInnerHTML={{ __html: i18n(\"Linker.note\") }} />\n-            </Text>\n-            <CommandText\n-              className=\"t-cmd-text\"\n-              ellipsis={{ rows: 1 }}\n-              copyable={{ text: data }}\n-            >\n-              {data}\n-            </CommandText>\n-          </>\n-        )\n-      });\n+      // Post data to the server to get the linker command.\n+      setScriptString(data);\n+      setVisible(true);\n     });\n   }\n \n+  useEffect(() => {\n+    setCommand(\n+      types.length ? `${scriptString} -t ${types.join(\",\")}` : scriptString\n+    );\n+  }, [scriptString, types]);\n+\n   /*\n   These Listeners and Dispatchers are a way to get around the separation between react\n   components and the legacy JS code already on the page.\n   */\n   document.addEventListener(\"sample-ids-return\", handleSampleIds, false);\n \n-  function showModal() {\n+  function getIds() {\n     document.dispatchEvent(new Event(\"sample-ids\"));\n   }\n \n   return (\n-    <Button\n-      type=\"link\"\n-      style={{\n-        margin: `0 inherit`,\n-        padding: 0,\n-        color: grey9\n-      }}\n-      className=\"t-linker-btn\"\n-      onClick={showModal}\n-    >\n-      {/* constant marginRight here to match old styles */}\n-      <IconCode style={{ marginRight: 2 }} />\n-      {i18n(\"project.samples.export.linker\")}\n-    </Button>\n+    <>\n+      <Button\n+        type=\"link\"\n+        style={{\n+          margin: `0 inherit`,\n+          padding: 0,\n+          color: grey9\n+        }}\n+        className=\"t-linker-btn\"\n+        onClick={getIds}\n+      >\n+        {/* constant marginRight here to match old styles */}\n+        <CodeOutlined style={{ marginRight: 2 }} />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7a50a5efe0c4c2001dca9d08035b8e444c447d0"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYwNTI0NQ==", "bodyText": "Done in 6cff5b9", "url": "https://github.com/phac-nml/irida/pull/638#discussion_r401605245", "createdAt": "2020-04-01T13:15:16Z", "author": {"login": "tom114"}, "path": "src/main/webapp/resources/js/pages/projects/samples/linker/Linker.jsx", "diffHunk": "@@ -27,58 +29,85 @@ const CommandText = styled(Paragraph)`\n  * @constructor\n  */\n function Linker() {\n-  function handleSampleIds(e) {\n-    // Post data to get linker command.\n-    const { detail } = e;\n+  const [visible, setVisible] = useState(false);\n+  const [types, setTypes] = useState([\"fastq\"]);\n+  const [scriptString, setScriptString] = useState();\n+  const [command, setCommand] = useState();\n+\n+  const options = [\n+    { label: i18n(\"Linker.fastq\"), value: \"fastq\" },\n+    { label: i18n(\"Linker.assembly\"), value: \"assembly\" }\n+  ];\n+\n+  function handleSampleIds({ detail }) {\n     getNGSLinkerCode(detail).then(({ data }) => {\n-      Modal.success({\n-        className: \"t-linker-modal\",\n-        width: 500,\n-        title: i18n(\"Linker.title\"),\n-        content: (\n-          <>\n-            <Paragraph>{i18n(\"Linker.details\")}</Paragraph>\n-            <Text type=\"secondary\">\n-              <span dangerouslySetInnerHTML={{ __html: i18n(\"Linker.note\") }} />\n-            </Text>\n-            <CommandText\n-              className=\"t-cmd-text\"\n-              ellipsis={{ rows: 1 }}\n-              copyable={{ text: data }}\n-            >\n-              {data}\n-            </CommandText>\n-          </>\n-        )\n-      });\n+      // Post data to the server to get the linker command.\n+      setScriptString(data);\n+      setVisible(true);\n     });\n   }\n \n+  useEffect(() => {\n+    setCommand(\n+      types.length ? `${scriptString} -t ${types.join(\",\")}` : scriptString\n+    );\n+  }, [scriptString, types]);\n+\n   /*\n   These Listeners and Dispatchers are a way to get around the separation between react\n   components and the legacy JS code already on the page.\n   */\n   document.addEventListener(\"sample-ids-return\", handleSampleIds, false);\n \n-  function showModal() {\n+  function getIds() {\n     document.dispatchEvent(new Event(\"sample-ids\"));\n   }\n \n   return (\n-    <Button\n-      type=\"link\"\n-      style={{\n-        margin: `0 inherit`,\n-        padding: 0,\n-        color: grey9\n-      }}\n-      className=\"t-linker-btn\"\n-      onClick={showModal}\n-    >\n-      {/* constant marginRight here to match old styles */}\n-      <IconCode style={{ marginRight: 2 }} />\n-      {i18n(\"project.samples.export.linker\")}\n-    </Button>\n+    <>\n+      <Button\n+        type=\"link\"\n+        style={{\n+          margin: `0 inherit`,\n+          padding: 0,\n+          color: grey9\n+        }}\n+        className=\"t-linker-btn\"\n+        onClick={getIds}\n+      >\n+        {/* constant marginRight here to match old styles */}\n+        <CodeOutlined style={{ marginRight: 2 }} />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA0MjE1MQ=="}, "originalCommit": {"oid": "d7a50a5efe0c4c2001dca9d08035b8e444c447d0"}, "originalPosition": 100}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 837, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}