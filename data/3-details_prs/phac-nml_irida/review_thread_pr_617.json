{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MjA2MDk0", "number": 617, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMDoxNToxNlrODmcpQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMDoxNToxNlrODmcpQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjQxNzkzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/analysis/components/AnalysisBioHansel.jsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMDoxNToxNlrOFz3zWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMDoxNToxNlrOFz3zWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTkzNTk2Mw==", "bodyText": "You needed the br element because you used a span (inline) element.  If you used a div (block) element the break would already be there.", "url": "https://github.com/phac-nml/irida/pull/617#discussion_r389935963", "createdAt": "2020-03-09T20:15:16Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/analysis/components/AnalysisBioHansel.jsx", "diffHunk": "@@ -67,57 +57,88 @@ export default function AnalysisBioHansel() {\n     }\n   }\n \n-  return (\n-    <Layout>\n-      <Sider width={200} style={{ background: grey1 }}>\n-        <Location>\n-          {props => {\n-            const keyname = props.location.pathname.match(pathRegx);\n-            return (\n-              <Menu\n-                mode=\"vertical\"\n-                selectedKeys={[keyname ? keyname[1] : BIOHANSEL.INFO]}\n-              >\n-                <Menu.Item key=\"info\">\n-                  <Link to={`${DEFAULT_URL}/${BIOHANSEL.INFO}`}>\n-                    {i18n(\"AnalysisBioHansel.bioHanselInformation\")}\n-                  </Link>\n-                </Menu.Item>\n-                <Menu.Item key=\"file_preview\">\n-                  <Link to={`${DEFAULT_URL}/${BIOHANSEL.FILE_PREVIEW}`}>\n-                    {i18n(\"AnalysisOutputs.outputFilePreview\")}\n-                  </Link>\n-                </Menu.Item>\n-              </Menu>\n-            );\n-          }}\n-        </Location>\n-      </Sider>\n+  const biohanselResults = [\n+    {\n+      title: i18n(\"AnalysisBioHansel.sampleName\"),\n+      desc: bioHanselResults ? bioHanselResults.sample : \"\"\n+    },\n+    {\n+      title: `${i18n(\"AnalysisBioHansel.schemeName\")} (v${i18n(\n+        \"AnalysisBioHansel.schemeVersion\"\n+      )})`,\n+      desc: bioHanselResults\n+        ? `${bioHanselResults.scheme} (${bioHanselResults.scheme_version})`\n+        : \"\"\n+    },\n+    {\n+      title: i18n(\"AnalysisBioHansel.subtype\"),\n+      desc: bioHanselResults ? bioHanselResults.subtype : \"\"\n+    },\n+    {\n+      title: i18n(\"AnalysisBioHansel.averageTileFrequency\"),\n+      desc:\n+        bioHanselResults && bioHanselResults.avg_tile_coverage\n+          ? bioHanselResults.avg_tile_coverage.toString()\n+          : \"\"\n+    },\n+    {\n+      title: i18n(\"AnalysisBioHansel.qualityControlStatus\"),\n+      desc: bioHanselResults ? (\n+        bioHanselResults.qc_status === \"PASS\" ? (\n+          <Success\n+            message={bioHanselResults.qc_status}\n+          />\n+        ) : bioHanselResults.qc_status === \"FAIL\" ? (\n+          <Error\n+            message={formatQcMessage(\n+              bioHanselResults.qc_status,\n+              bioHanselResults.qc_message\n+            )}\n+          />\n+        ) : (\n+          <Warning\n+            message={formatQcMessage(\n+              bioHanselResults.qc_status,\n+              bioHanselResults.qc_message\n+            )}\n+          />\n+        )\n+      ) : (\n+        \"\"\n+      )\n+    }\n+  ];\n \n-      <Layout style={{ paddingLeft: SPACE_MD, backgroundColor: grey1 }}>\n-        <Content>\n-          {typeof bioHanselResults === \"undefined\" ? (\n-            <WarningAlert\n-              message={i18n(\"AnalysisBioHansel.resultsUnavailable\")}\n-            />\n-          ) : bioHanselResults !== null ? (\n-            <Suspense fallback={<ContentLoading />}>\n-              <Router>\n-                <BioHanselInfo\n-                  bioHanselResults={bioHanselResults}\n-                  path={`${DEFAULT_URL}/${BIOHANSEL.INFO}`}\n-                  default\n-                />\n-                <OutputFilePreview\n-                  path={`${DEFAULT_URL}/${BIOHANSEL.FILE_PREVIEW}`}\n-                />\n-              </Router>\n-            </Suspense>\n-          ) : (\n-            <ContentLoading />\n-          )}\n-        </Content>\n-      </Layout>\n+  /*\n+   * Formats the QC status and QC messages to display\n+   * in a list.\n+   */\n+  function formatQcMessage(qc_status, qc_message) {\n+    let msgs = [];\n+    if (qc_message) {\n+      msgs = qc_message.trim().split(\"|\");\n+    }\n+\n+    return (\n+      <>\n+        <span>{qc_status}</span>\n+        <br />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c3910778fa540f9c7bc5ba785efe22a690022d"}, "originalPosition": 163}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 820, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}