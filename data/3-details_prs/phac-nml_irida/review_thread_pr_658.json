{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NzQwMjc5", "number": 658, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMDozOTozOVrODy2mxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjo1NzoyMFrODy4_zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjUwMDU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMDozOTozOVrOGHJBWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNjoxODo0M1rOGHUgTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE0MTAxOQ==", "bodyText": "Instead of a straight out String, can we get in the habit of return ResponseEntity<String> it allows for better control of the response.  In the case, when you log the exception you could return an error state: ResponseEntity.status(HttpStatus.BAD_REQUEST).body(\"That was a terrible idea\").  That way the UI can response the the status of the request appropriately.", "url": "https://github.com/phac-nml/irida/pull/658#discussion_r410141019", "createdAt": "2020-04-17T10:39:39Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "diffHunk": "@@ -882,6 +882,39 @@ public void getAjaxDownloadAnalysisSubmissionIndividualFile(@PathVariable Long a\n \t\treturn ImmutableMap.of(\"newick\", lines.get(0));\n \t}\n \n+\t/**\n+\t * Get an image file associated with a specific {@link AnalysisSubmission} by file name.\n+\t *\n+\t * @param submissionId {@link Long} id for an {@link AnalysisSubmission}\n+\t * @param filename {@link String} filename for an {@link AnalysisOutputFile}\n+\t *\n+\t * @return {@link String} containing the image file contents as a base64 encoded string.\n+\t */\n+\t@RequestMapping(\"{submissionId}/image\")\n+\t@ResponseBody\n+\tpublic String getImageFile(@PathVariable Long submissionId, String filename){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1068fb1d2168a577299c23d72d475f87e6976eef"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMyOTE2Nw==", "bodyText": "Updated in a6f973b", "url": "https://github.com/phac-nml/irida/pull/658#discussion_r410329167", "createdAt": "2020-04-17T16:18:43Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "diffHunk": "@@ -882,6 +882,39 @@ public void getAjaxDownloadAnalysisSubmissionIndividualFile(@PathVariable Long a\n \t\treturn ImmutableMap.of(\"newick\", lines.get(0));\n \t}\n \n+\t/**\n+\t * Get an image file associated with a specific {@link AnalysisSubmission} by file name.\n+\t *\n+\t * @param submissionId {@link Long} id for an {@link AnalysisSubmission}\n+\t * @param filename {@link String} filename for an {@link AnalysisOutputFile}\n+\t *\n+\t * @return {@link String} containing the image file contents as a base64 encoded string.\n+\t */\n+\t@RequestMapping(\"{submissionId}/image\")\n+\t@ResponseBody\n+\tpublic String getImageFile(@PathVariable Long submissionId, String filename){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE0MTAxOQ=="}, "originalCommit": {"oid": "1068fb1d2168a577299c23d72d475f87e6976eef"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjcyMjg5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/contexts/AnalysisOutputsContext.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjowMjoxMVrOGHLNvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNjoxODo1NVrOGHUgxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE3Njk1OA==", "bodyText": "Remember, in es6 this is redundant, you only need:\nfileTypes: [\n            {\n              hasJsonFile,\n              hasTabularFile,\n              hasTextFile,\n              hasExcelFile,\n              hasImageFile,\n            }\n          ]", "url": "https://github.com/phac-nml/irida/pull/658#discussion_r410176958", "createdAt": "2020-04-17T12:02:11Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/contexts/AnalysisOutputsContext.js", "diffHunk": "@@ -71,7 +78,8 @@ function AnalysisOutputsProvider(props) {\n               hasJsonFile: hasJsonFile,\n               hasTabularFile: hasTabularFile,\n               hasTextFile: hasTextFile,\n-              hasExcelFile: hasExcelFile\n+              hasExcelFile: hasExcelFile,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1068fb1d2168a577299c23d72d475f87e6976eef"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMyOTI4Nw==", "bodyText": "Updated in a6f973b", "url": "https://github.com/phac-nml/irida/pull/658#discussion_r410329287", "createdAt": "2020-04-17T16:18:55Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/contexts/AnalysisOutputsContext.js", "diffHunk": "@@ -71,7 +78,8 @@ function AnalysisOutputsProvider(props) {\n               hasJsonFile: hasJsonFile,\n               hasTabularFile: hasTabularFile,\n               hasTextFile: hasTextFile,\n-              hasExcelFile: hasExcelFile\n+              hasExcelFile: hasExcelFile,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE3Njk1OA=="}, "originalCommit": {"oid": "1068fb1d2168a577299c23d72d475f87e6976eef"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Njc5MDg2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/analysis/components/outputs/OutputFilePreview.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjoyNTo0N1rOGHL36Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDo1NTo1N1rOGHRZDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4Nzc1Mw==", "bodyText": "This file is really get big.  Don't do it know, but if you need to add more to it, refactor some helper functions into their own file.", "url": "https://github.com/phac-nml/irida/pull/658#discussion_r410187753", "createdAt": "2020-04-17T12:25:47Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/analysis/components/outputs/OutputFilePreview.jsx", "diffHunk": "@@ -20,6 +20,7 @@ import { IconFile } from \"../../../../components/icons/Icons\";\n const AnalysisTextPreview = React.lazy(() => import(\"../AnalysisTextPreview\"));\n const AnalysisJsonPreview = React.lazy(() => import(\"../AnalysisJsonPreview\"));\n const AnalysisExcelPreview = React.lazy(() => import(\"../AnalysisExcelPreview\"));\n+const AnalysisImagePreview = React.lazy(() => import(\"../AnalysisImagePreview\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1068fb1d2168a577299c23d72d475f87e6976eef"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3ODE1OA==", "bodyText": "Yeah I thought about doing that as well. If we need to add another one I will break it up. Thanks", "url": "https://github.com/phac-nml/irida/pull/658#discussion_r410278158", "createdAt": "2020-04-17T14:55:57Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/analysis/components/outputs/OutputFilePreview.jsx", "diffHunk": "@@ -20,6 +20,7 @@ import { IconFile } from \"../../../../components/icons/Icons\";\n const AnalysisTextPreview = React.lazy(() => import(\"../AnalysisTextPreview\"));\n const AnalysisJsonPreview = React.lazy(() => import(\"../AnalysisJsonPreview\"));\n const AnalysisExcelPreview = React.lazy(() => import(\"../AnalysisExcelPreview\"));\n+const AnalysisImagePreview = React.lazy(() => import(\"../AnalysisImagePreview\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4Nzc1Mw=="}, "originalCommit": {"oid": "1068fb1d2168a577299c23d72d475f87e6976eef"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Njg5MjMxOnYy", "diffSide": "LEFT", "path": "src/main/webapp/resources/js/pages/analysis/components/outputs/OutputFilePreview.jsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjo1NzoyMFrOGHM3NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNjoxOToxMlrOGHUhiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwMzk1Ng==", "bodyText": "Isn't this a duplicate set of code from AnalysisOutputsContext?", "url": "https://github.com/phac-nml/irida/pull/658#discussion_r410203956", "createdAt": "2020-04-17T12:57:20Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/analysis/components/outputs/OutputFilePreview.jsx", "diffHunk": "@@ -152,7 +177,9 @@ export default function OutputFilePreview() {\n       if (\n         !jsonExtSet.has(output.fileExt) &&\n         !tabExtSet.has(output.fileExt) &&\n-        !blacklistExtSet.has(output.fileExt)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1068fb1d2168a577299c23d72d475f87e6976eef"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI3Nzg3OA==", "bodyText": "In AnalysisOutputsContext we use this to check if there is a file with type extension within the outputs. In the OutputFilePreview we use it to create the preview for that type of file. It is run within a for loop so we need to check if the current output from the array is that type", "url": "https://github.com/phac-nml/irida/pull/658#discussion_r410277878", "createdAt": "2020-04-17T14:55:33Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/analysis/components/outputs/OutputFilePreview.jsx", "diffHunk": "@@ -152,7 +177,9 @@ export default function OutputFilePreview() {\n       if (\n         !jsonExtSet.has(output.fileExt) &&\n         !tabExtSet.has(output.fileExt) &&\n-        !blacklistExtSet.has(output.fileExt)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwMzk1Ng=="}, "originalCommit": {"oid": "1068fb1d2168a577299c23d72d475f87e6976eef"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI4MTUxMQ==", "bodyText": "Wouldn't it make more sense to have the context return a function called getPreviewForFileType  and have that stored when you first iterate over all the types?", "url": "https://github.com/phac-nml/irida/pull/658#discussion_r410281511", "createdAt": "2020-04-17T15:01:08Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/analysis/components/outputs/OutputFilePreview.jsx", "diffHunk": "@@ -152,7 +177,9 @@ export default function OutputFilePreview() {\n       if (\n         !jsonExtSet.has(output.fileExt) &&\n         !tabExtSet.has(output.fileExt) &&\n-        !blacklistExtSet.has(output.fileExt)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwMzk1Ng=="}, "originalCommit": {"oid": "1068fb1d2168a577299c23d72d475f87e6976eef"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDMyOTQ4Mw==", "bodyText": "Yup totally does. Updated in a6f973b", "url": "https://github.com/phac-nml/irida/pull/658#discussion_r410329483", "createdAt": "2020-04-17T16:19:12Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/analysis/components/outputs/OutputFilePreview.jsx", "diffHunk": "@@ -152,7 +177,9 @@ export default function OutputFilePreview() {\n       if (\n         !jsonExtSet.has(output.fileExt) &&\n         !tabExtSet.has(output.fileExt) &&\n-        !blacklistExtSet.has(output.fileExt)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwMzk1Ng=="}, "originalCommit": {"oid": "1068fb1d2168a577299c23d72d475f87e6976eef"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 855, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}