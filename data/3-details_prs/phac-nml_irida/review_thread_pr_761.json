{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzOTQxNDQ5", "number": 761, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTo0NzoxN1rOE9r-cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDoyODoyNlrOE-1FFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTE5MDkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/repositories/filesystem/IridaFileStorageUtility.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNTo0NzoxN1rOH6gjAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMDo1MzoxMVrOH6nKIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExMjcwNA==", "bodyText": "It looks like we were using this already for things like the fastqc images, but we'll need to be sure to use this very carefully.  Reading all the bytes into memory isn't the greatest thing.  Anywhere it can be streamed would be much nicer and less prone to crashing things.", "url": "https://github.com/phac-nml/irida/pull/761#discussion_r531112704", "createdAt": "2020-11-26T15:47:17Z", "author": {"login": "tom114"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/repositories/filesystem/IridaFileStorageUtility.java", "diffHunk": "@@ -113,4 +113,11 @@\n \t */\n \tpublic String getFileExtension(List<? extends SequencingObject> sequencingObjects) throws IOException;\n \n+\t/**\n+\t * Read the bytes for a file\n+\t *\n+\t * @param file The path to the file\n+\t * @return the bytes for the file\n+\t */\n+\tpublic byte[] readAllBytes(Path file);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd47bd853a94535ff115f45c35aeb39b49066fe"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIyMTAyNw==", "bodyText": "Yup all that is used for is the FastQC images and any analysis outputs which are images. Looks like it is used in FileUtilities.java as well in the createAnalysisOutputFileZippedResponse method which was changed from byte[] bytes = objectMapper.writeValueAsBytes(file); to byte[] bytes = file.getBytesForFile(); to work with our object store stuff. Anywhere the files are larger they are streamed using the getFileInputStream method.", "url": "https://github.com/phac-nml/irida/pull/761#discussion_r531221027", "createdAt": "2020-11-26T20:53:11Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/repositories/filesystem/IridaFileStorageUtility.java", "diffHunk": "@@ -113,4 +113,11 @@\n \t */\n \tpublic String getFileExtension(List<? extends SequencingObject> sequencingObjects) throws IOException;\n \n+\t/**\n+\t * Read the bytes for a file\n+\t *\n+\t * @param file The path to the file\n+\t * @return the bytes for the file\n+\t */\n+\tpublic byte[] readAllBytes(Path file);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTExMjcwNA=="}, "originalCommit": {"oid": "acd47bd853a94535ff115f45c35aeb39b49066fe"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTM5MzU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/SequenceFileController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQxNjo0NzoyOVrOH6ic4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxNjo0MjozNVrOH7EA5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE0MzkwNw==", "bodyText": "This path is unused now.", "url": "https://github.com/phac-nml/irida/pull/761#discussion_r531143907", "createdAt": "2020-11-26T16:47:29Z", "author": {"login": "tom114"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/SequenceFileController.java", "diffHunk": "@@ -88,7 +87,7 @@ public void downloadSequenceFile(@PathVariable Long sequencingObjectId, @PathVar\n \t\tSequenceFile sequenceFile = sequencingObject.getFileWithId(sequenceFileId);\n \t\tPath path = sequenceFile.getFile();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acd47bd853a94535ff115f45c35aeb39b49066fe"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE0NDM4OA==", "bodyText": "Check all these file controllers.  Looks like they have an old path variable that's unused.", "url": "https://github.com/phac-nml/irida/pull/761#discussion_r531144388", "createdAt": "2020-11-26T16:48:36Z", "author": {"login": "tom114"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/SequenceFileController.java", "diffHunk": "@@ -88,7 +87,7 @@ public void downloadSequenceFile(@PathVariable Long sequencingObjectId, @PathVar\n \t\tSequenceFile sequenceFile = sequencingObject.getFileWithId(sequenceFileId);\n \t\tPath path = sequenceFile.getFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE0MzkwNw=="}, "originalCommit": {"oid": "acd47bd853a94535ff115f45c35aeb39b49066fe"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTY5Mzc5OQ==", "bodyText": "Removed in 812a1b8", "url": "https://github.com/phac-nml/irida/pull/761#discussion_r531693799", "createdAt": "2020-11-27T16:42:35Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/SequenceFileController.java", "diffHunk": "@@ -88,7 +87,7 @@ public void downloadSequenceFile(@PathVariable Long sequencingObjectId, @PathVar\n \t\tSequenceFile sequenceFile = sequencingObject.getFileWithId(sequenceFileId);\n \t\tPath path = sequenceFile.getFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTE0MzkwNw=="}, "originalCommit": {"oid": "acd47bd853a94535ff115f45c35aeb39b49066fe"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzE2ODIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDoyODoyNlrOH8MnCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDo0Nzo1MlrOH8NPMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4MzIxMQ==", "bodyText": "Add the throwable cause here in the error logging so we can see the stack trace please.", "url": "https://github.com/phac-nml/irida/pull/761#discussion_r532883211", "createdAt": "2020-11-30T20:28:26Z", "author": {"login": "tom114"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "diffHunk": "@@ -1093,8 +1094,11 @@ public AnalysisTreeResponse getNewickTree(@PathVariable Long submissionId, Local\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t} catch (NoSuchFileException e) {\n-\t\t\t\tlogger.debug(\"File was not found: \" + e.toString());\n+\t\t\t\tlogger.error(\"File was not found: \" + e.toString());\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tlogger.error(\"Unable to read input stream for file\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39c04c47efd0427cab616de9fcc2d94ab6803ec8"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg5MzQ4OQ==", "bodyText": "Updated in dca4590", "url": "https://github.com/phac-nml/irida/pull/761#discussion_r532893489", "createdAt": "2020-11-30T20:47:52Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisAjaxController.java", "diffHunk": "@@ -1093,8 +1094,11 @@ public AnalysisTreeResponse getNewickTree(@PathVariable Long submissionId, Local\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t} catch (NoSuchFileException e) {\n-\t\t\t\tlogger.debug(\"File was not found: \" + e.toString());\n+\t\t\t\tlogger.error(\"File was not found: \" + e.toString());\n+\t\t\t} catch (IOException e) {\n+\t\t\t\tlogger.error(\"Unable to read input stream for file\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4MzIxMQ=="}, "originalCommit": {"oid": "39c04c47efd0427cab616de9fcc2d94ab6803ec8"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 683, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}