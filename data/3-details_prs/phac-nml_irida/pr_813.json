{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2MjE4NTg0", "number": 813, "title": "Cart server refactor", "bodyText": "Description of changes\nCleaning up server call to better facilitate getting the files for the cart.\nRelated issue\nLink to the GitHub issue this pull request addresses using the #issuenum format. If it completes an issue, use Fixes #issuenum to automatically close the issue.\nChecklist\nThings for the developer to confirm they've done before the PR should be accepted:\n\n CHANGELOG.md (and UPGRADING.md if necessary) updated with information for new change.\n Tests added (or description of how to test) for any new features.\n User documentation updated for UI or technical changes.", "createdAt": "2020-10-01T12:25:51Z", "url": "https://github.com/phac-nml/irida/pull/813", "merged": true, "mergeCommit": {"oid": "29809f836356dc19df05024567240b242fd6aaab"}, "closed": true, "closedAt": "2020-10-07T20:25:53Z", "author": {"login": "joshsadam"}, "timelineItems": {"totalCount": 32, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdN9rYxgH2gAyNDk2MjE4NTg0OjNhYTg3YjZhMjdlNzM3ZDNhZTM4ODVlMTQwYzc5YWUzNjQ3YjhkNTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQS8PlgFqTUwNDIzODIzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3aa87b6a27e737d3ae3885e140c79ae3647b8d54", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/3aa87b6a27e737d3ae3885e140c79ae3647b8d54", "committedDate": "2020-09-30T14:29:51Z", "message": ":construction: Working on new cart api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c759769055b1263f006ac8771cbefe269be37e6e", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/c759769055b1263f006ac8771cbefe269be37e6e", "committedDate": "2020-09-30T17:52:03Z", "message": ":construction: Updated adding samples to cart"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a5efa04d126c467a94dbe2019f36047e429542a", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/5a5efa04d126c467a94dbe2019f36047e429542a", "committedDate": "2020-10-01T11:38:34Z", "message": ":construction: Cleaning up the CartController"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad5d3a6dd970d7a448814783345f97baabd34ea9", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/ad5d3a6dd970d7a448814783345f97baabd34ea9", "committedDate": "2020-10-01T15:22:36Z", "message": "\ud83d\udea7 Working on fixing changes after new cart"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32b7c81648c35568968acb8b14576d7c80f06eec", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/32b7c81648c35568968acb8b14576d7c80f06eec", "committedDate": "2020-10-02T13:12:47Z", "message": ":construction: Cleaned up server response\n\nPreviously we were sending the project info with every sample.  This is a lot of wasted data.  Not the response is frame in terms of project, and those contain their own samples."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8af55bd9ff2aeb9d5b889619a44a74087180b3f", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/c8af55bd9ff2aeb9d5b889619a44a74087180b3f", "committedDate": "2020-10-05T14:02:47Z", "message": "Updated JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c1fd2189ec85347b5806fd6463911e8f2ea7ad9", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/0c1fd2189ec85347b5806fd6463911e8f2ea7ad9", "committedDate": "2020-10-05T14:09:57Z", "message": "Updated JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57091b32d51a02091b5bf6e9a6ffb36aae1dae03", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/57091b32d51a02091b5bf6e9a6ffb36aae1dae03", "committedDate": "2020-10-05T16:54:27Z", "message": "Fix galaxy code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8689afbcd74a10d59a9d4bb83ff3c9a216f1f91", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/e8689afbcd74a10d59a9d4bb83ff3c9a216f1f91", "committedDate": "2020-10-05T18:19:12Z", "message": "Updated JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba0e3a9e18d90522d8e6ae429ebcd269160bae13", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/ba0e3a9e18d90522d8e6ae429ebcd269160bae13", "committedDate": "2020-10-06T09:58:20Z", "message": "This version of the cart is no longer used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3a4e92edfa90f274ba499dfd31e3f7755dbec72", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/a3a4e92edfa90f274ba499dfd31e3f7755dbec72", "committedDate": "2020-10-06T11:27:46Z", "message": "Updated JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29a5c75c779d396581719102e4d29e633db3acef", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/29a5c75c779d396581719102e4d29e633db3acef", "committedDate": "2020-10-06T11:55:08Z", "message": "Updated JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62fce0f9a7eabe343cecf0451be520a302280f53", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/62fce0f9a7eabe343cecf0451be520a302280f53", "committedDate": "2020-10-06T11:59:29Z", "message": "Updated JavaDoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57a26578621738f7bc555da2cf24938b0d83a65c", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/57a26578621738f7bc555da2cf24938b0d83a65c", "committedDate": "2020-10-06T12:03:44Z", "message": "Merge branch 'development' into cart-server-refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bae1fae4f5489fe5b24d321815e4e894f568ec1", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/5bae1fae4f5489fe5b24d321815e4e894f568ec1", "committedDate": "2020-10-06T12:05:27Z", "message": "Updated CHANGELOG"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/f58611dcacf9ee48b8662e993144b6ecaa79ef88", "committedDate": "2020-10-06T12:56:58Z", "message": "CartGalaxyController does not need to be session scoped any more"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTE2MTM0", "url": "https://github.com/phac-nml/irida/pull/813#pullrequestreview-503116134", "createdAt": "2020-10-06T15:52:05Z", "commit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTo1MjowNVrOHdOn8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjo0Njo0NFrOHdQ26g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxMDM1Mg==", "bodyText": "Should be Get the samples", "url": "https://github.com/phac-nml/irida/pull/813#discussion_r500410352", "createdAt": "2020-10-06T15:52:05Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/CartAjaxController.java", "diffHunk": "@@ -0,0 +1,99 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax;\n+\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.cart.CartProject;\n+import ca.corefacility.bioinformatics.irida.ria.web.cart.dto.AddToCartRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.cart.dto.RemoveSampleRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.services.UICartService;\n+\n+/**\n+ * AJAX controller for cart functionality\n+ */\n+@RestController\n+@RequestMapping(\"/ajax/cart\")\n+public class CartAjaxController {\n+\tprivate final UICartService service;\n+\n+\t@Autowired\n+\tpublic CartAjaxController(UICartService service) {\n+\t\tthis.service = service;\n+\t}\n+\n+\t/**\n+\t * Add a set of samples to the cart from a particular project\n+\t *\n+\t * @param request Request to add sample to the cart\n+\t * @return the number of samples currrently in the cart\n+\t */\n+\t@PostMapping(\"\")\n+\tpublic ResponseEntity<Integer> addSamplesToCart(@RequestBody AddToCartRequest request) {\n+\t\treturn ResponseEntity.ok(service.addSamplesToCart(request));\n+\t}\n+\n+\t/**\n+\t * Get the number of samples from all projects that are currently in the cart\n+\t *\n+\t * @return the number of samples currently in the cart\n+\t */\n+\t@GetMapping(\"/count\")\n+\tpublic ResponseEntity<Integer> getNumberOfSamplesInCart() {\n+\t\treturn ResponseEntity.ok(service.getNumberOfSamplesInCart());\n+\t}\n+\n+\t/**\n+\t * Remove a sample from the cart\n+\t *\n+\t * @param request Request to move a sample from the cart\n+\t * @return the number of samples currently in the cart\n+\t */\n+\t@DeleteMapping(\"/sample\")\n+\tpublic ResponseEntity<Integer> removeSample(@RequestBody RemoveSampleRequest request) {\n+\t\treturn ResponseEntity.ok(service.removeSample(request));\n+\t}\n+\n+\t/**\n+\t * Remove all samples from a specific project from the cart\n+\t *\n+\t * @param id for a project\n+\t * @return the number of samples currently in the cart\n+\t */\n+\t@DeleteMapping(\"/project\")\n+\tpublic ResponseEntity<Integer> removeProject(@RequestParam Long id) {\n+\t\treturn ResponseEntity.ok(service.removeProject(id));\n+\t}\n+\n+\t/**\n+\t * Completely empty the cart\n+\t */\n+\t@DeleteMapping(\"\")\n+\tpublic void emptyCart() {\n+\t\tservice.emptyCart();\n+\t}\n+\n+\t/**\n+\t * Get a list of project identifiers for projects that have samples in the cart.\n+\t *\n+\t * @return list of project identifiers\n+\t */\n+\t@GetMapping(\"/ids\")\n+\tpublic ResponseEntity<Set<Long>> getProjectIdsInCart() {\n+\t\treturn ResponseEntity.ok(service.getProjectIdsInCart());\n+\t}\n+\n+\t/**\n+\t * Cart the samples that are in the cart for a specific project", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxMDcyMg==", "bodyText": "Should be provided a service", "url": "https://github.com/phac-nml/irida/pull/813#discussion_r500410722", "createdAt": "2020-10-06T15:52:36Z", "author": {"login": "deepsidhu85"}, "path": "CHANGELOG.md", "diffHunk": "@@ -6,6 +6,7 @@ Changes\n * [UI]: Fixed bug where sequencing runs could not be deleted on sequencing runs details page. (20.09.1)\n * [Developer] Fixed `SISTR viewer` so plugin and built-in pipelines can use it (20.09.1)\n * [UI] Added two additional fields to SISTR viewer describing the number of alleles found (20.09.1)\n+* [Developer]: Updated the session Cart and provided a services for accessing it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzNTAxNQ==", "bodyText": "As this is a model for the UI rename it to CartProjectModel", "url": "https://github.com/phac-nml/irida/pull/813#discussion_r500435015", "createdAt": "2020-10-06T16:28:20Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/cart/CartProject.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.cart;\n+\n+import java.util.List;\n+\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.CartSample;\n+\n+/**\n+ * Model for UI to represent a project and its sample within the cart.\n+ */\n+public class CartProject {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzNTg3NQ==", "bodyText": "Remove the final", "url": "https://github.com/phac-nml/irida/pull/813#discussion_r500435875", "createdAt": "2020-10-06T16:29:41Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/cart/CartController.java", "diffHunk": "@@ -1,49 +1,32 @@\n package ca.corefacility.bioinformatics.irida.ria.web.cart;\n \n-import ca.corefacility.bioinformatics.irida.model.project.Project;\n-import ca.corefacility.bioinformatics.irida.model.sample.Sample;\n-import ca.corefacility.bioinformatics.irida.ria.web.cart.components.Cart;\n-import ca.corefacility.bioinformatics.irida.ria.web.cart.dto.*;\n-import ca.corefacility.bioinformatics.irida.ria.web.oauth.GalaxyRedirectionEndpointController;\n-import ca.corefacility.bioinformatics.irida.service.ProjectService;\n-import ca.corefacility.bioinformatics.irida.service.sample.SampleService;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.beans.factory.annotation.Qualifier;\n import org.springframework.beans.factory.annotation.Value;\n-import org.springframework.context.annotation.Scope;\n import org.springframework.http.MediaType;\n import org.springframework.stereotype.Controller;\n import org.springframework.ui.Model;\n-import org.springframework.web.bind.annotation.*;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n \n-import java.util.*;\n+import ca.corefacility.bioinformatics.irida.ria.web.oauth.GalaxyRedirectionEndpointController;\n \n /**\n  * Controller managing interactions with the selected sequences\n  */\n @Controller\n-@Scope(\"session\")\n @RequestMapping(\"/cart\")\n public class CartController {\n-\tprivate Cart cart;\n-\n-\tprivate final SampleService sampleService;\n-\tprivate final ProjectService projectService;\n-\n \t@Value(\"${server.base.url}\")\n \tprivate String serverBaseUrl;\n \t/*\n \t * Additional variables\n \t */\n-\tprivate String iridaPipelinePluginStyle;\n+\tprivate final String iridaPipelinePluginStyle;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzNzU5MQ==", "bodyText": "Remove the final from the variables", "url": "https://github.com/phac-nml/irida/pull/813#discussion_r500437591", "createdAt": "2020-10-06T16:32:14Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/cart/CartGalaxyController.java", "diffHunk": "@@ -12,27 +13,26 @@\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RestController;\n \n+import ca.corefacility.bioinformatics.irida.model.project.Project;\n import ca.corefacility.bioinformatics.irida.model.sample.Sample;\n import ca.corefacility.bioinformatics.irida.ria.config.GalaxySessionInterceptor;\n-import ca.corefacility.bioinformatics.irida.ria.web.cart.components.Cart;\n-import ca.corefacility.bioinformatics.irida.ria.web.cart.dto.CartSample;\n import ca.corefacility.bioinformatics.irida.ria.web.cart.dto.GalaxyExportSample;\n+import ca.corefacility.bioinformatics.irida.ria.web.services.UICartService;\n import ca.corefacility.bioinformatics.irida.service.sample.SampleService;\n \n /**\n  * Controller to handle all ajax requests made to the cart that have to do with Galaxy.\n  */\n @RestController\n-@Scope(\"session\")\n @RequestMapping(\"/ajax/galaxy-export\")\n public class CartGalaxyController {\n-\tprivate SampleService sampleService;\n-\tprivate Cart cart;\n+\tprivate final SampleService sampleService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQzODE1NA==", "bodyText": "Might need to apply the irida intellij styling to this method", "url": "https://github.com/phac-nml/irida/pull/813#discussion_r500438154", "createdAt": "2020-10-06T16:33:03Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/cart/CartGalaxyController.java", "diffHunk": "@@ -41,14 +41,9 @@ public CartGalaxyController(SampleService sampleService, Cart cart) {\n \t */\n \t@RequestMapping(\"/samples\")\n \tpublic List<GalaxyExportSample> getGalaxyExportForm() {\n-\t\tMap<Long, Map<Long, CartSample>> contents = cart.get();\n-\t\tList<GalaxyExportSample> result = new ArrayList<>();\n-\t\tfor (Long projectId : contents.keySet()) {\n-\t\t\tIterable<Sample> samples = sampleService.readMultiple(contents.get(projectId)\n-\t\t\t\t\t.keySet());\n-\t\t\tsamples.forEach(s -> result.add(new GalaxyExportSample(s, projectId)));\n-\t\t}\n-\t\treturn result;\n+\t\tMap<Project, List<Sample>> contents = cartService.getFullCart();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ0MDI5Mw==", "bodyText": "Remove the final from the variables", "url": "https://github.com/phac-nml/irida/pull/813#discussion_r500440293", "createdAt": "2020-10-06T16:36:20Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/pipelines/PipelineController.java", "diffHunk": "@@ -83,45 +83,41 @@\n \t/*\n \t * SERVICES\n \t */\n-\tprivate ReferenceFileService referenceFileService;\n-\tprivate SequencingObjectService sequencingObjectService;\n-\tprivate AnalysisSubmissionService analysisSubmissionService;\n-\tprivate ProjectService projectService;\n-\tprivate UserService userService;\n-\tprivate IridaWorkflowsService workflowsService;\n-\tprivate MessageSource messageSource;\n+\tprivate final ReferenceFileService referenceFileService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ0MDYzNQ==", "bodyText": "Remove final", "url": "https://github.com/phac-nml/irida/pull/813#discussion_r500440635", "createdAt": "2020-10-06T16:36:53Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/pipelines/PipelineController.java", "diffHunk": "@@ -83,45 +83,41 @@\n \t/*\n \t * SERVICES\n \t */\n-\tprivate ReferenceFileService referenceFileService;\n-\tprivate SequencingObjectService sequencingObjectService;\n-\tprivate AnalysisSubmissionService analysisSubmissionService;\n-\tprivate ProjectService projectService;\n-\tprivate UserService userService;\n-\tprivate IridaWorkflowsService workflowsService;\n-\tprivate MessageSource messageSource;\n+\tprivate final ReferenceFileService referenceFileService;\n+\tprivate final SequencingObjectService sequencingObjectService;\n+\tprivate final AnalysisSubmissionService analysisSubmissionService;\n+\tprivate final ProjectService projectService;\n+\tprivate final UserService userService;\n+\tprivate final IridaWorkflowsService workflowsService;\n+\tprivate final MessageSource messageSource;\n \tprivate final WorkflowNamedParametersService namedParameterService;\n-\tprivate UpdateSamplePermission updateSamplePermission;\n-\tprivate AnalysisSubmissionSampleProcessor analysisSubmissionSampleProcessor;\n-\tprivate GalaxyToolDataService galaxyToolDataService;\n-\tprivate EmailController emailController;\n-\n-\t/*\n-\t * CONTROLLERS\n-\t */\n-\tprivate CartController cartController;\n+\tprivate final UpdateSamplePermission updateSamplePermission;\n+\tprivate final AnalysisSubmissionSampleProcessor analysisSubmissionSampleProcessor;\n+\tprivate final GalaxyToolDataService galaxyToolDataService;\n+\tprivate final EmailController emailController;\n+\tprivate final UICartService cartService;\n \n \t@Autowired\n \tpublic PipelineController(SequencingObjectService sequencingObjectService,\n \t\t\tReferenceFileService referenceFileService, AnalysisSubmissionService analysisSubmissionService,\n \t\t\tIridaWorkflowsService iridaWorkflowsService, ProjectService projectService, UserService userService,\n-\t\t\tCartController cartController, MessageSource messageSource,\n+\t\t\tMessageSource messageSource,\n \t\t\tfinal WorkflowNamedParametersService namedParameterService, UpdateSamplePermission updateSamplePermission,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ0MzU3Nw==", "bodyText": "What do you think about changing wherever you have Map<Project, List<Sample>> here and any of the above files to a dto which contains those objects?", "url": "https://github.com/phac-nml/irida/pull/813#discussion_r500443577", "createdAt": "2020-10-06T16:41:26Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UICartService.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.services;\n+\n+import java.util.*;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import ca.corefacility.bioinformatics.irida.model.project.Project;\n+import ca.corefacility.bioinformatics.irida.model.sample.Sample;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.CartSample;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.cart.CartProject;\n+import ca.corefacility.bioinformatics.irida.ria.web.cart.dto.AddToCartRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.cart.dto.RemoveSampleRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.sessionAttrs.Cart;\n+import ca.corefacility.bioinformatics.irida.service.ProjectService;\n+import ca.corefacility.bioinformatics.irida.service.sample.SampleService;\n+\n+/**\n+ * Service for handling all aspects interaction with the Cart.\n+ */\n+@Component\n+public class UICartService {\n+\tprivate final Cart cart;\n+\tprivate final ProjectService projectService;\n+\tprivate final SampleService sampleService;\n+\n+\t@Autowired\n+\tpublic UICartService(Cart cart, ProjectService projectService, SampleService sampleService) {\n+\t\tthis.cart = cart;\n+\t\tthis.projectService = projectService;\n+\t\tthis.sampleService = sampleService;\n+\t}\n+\n+\t/**\n+\t * Add samples from a project to the cart.\n+\t *\n+\t * @param request Information about the project and samples to add to the cart\n+\t * @return number of total samples in the cart\n+\t */\n+\tpublic int addSamplesToCart(AddToCartRequest request) {\n+\t\treturn cart.add(request.getProjectId(), (List<Long>) request.getSampleIds());\n+\t}\n+\n+\t/**\n+\t * Get the number of samples in the cart\n+\t *\n+\t * @return number of total samples in the cart\n+\t */\n+\tpublic int getNumberOfSamplesInCart() {\n+\t\treturn cart.getNumberOfSamplesInCart();\n+\t}\n+\n+\t/**\n+\t * Remove all samples from the cart\n+\t */\n+\tpublic void emptyCart() {\n+\t\tcart.clear();\n+\t}\n+\n+\t/**\n+\t * Remove a specific sample from the cart.\n+\t *\n+\t * @param request Information about the samplet o remove from the cart\n+\t * @return number of total samples in the cart\n+\t */\n+\tpublic int removeSample(RemoveSampleRequest request) {\n+\t\treturn cart.removeSample(request.getProjectId(), request.getSampleId());\n+\t}\n+\n+\t/**\n+\t * Remove all samples from a specific project from the cart.\n+\t *\n+\t * @param id identifier for the project to remove from the cart.\n+\t * @return number of total samples in the cart\n+\t */\n+\tpublic int removeProject(Long id) {\n+\t\treturn cart.removeProject(id);\n+\t}\n+\n+\t/**\n+\t * Get a set of  identifiers for {@link Project}s in the cart\n+\t *\n+\t * @return {@link Set} of {@link Project} identifiers\n+\t */\n+\tpublic Set<Long> getProjectIdsInCart() {\n+\t\treturn cart.getProjectIdsInCart();\n+\t}\n+\n+\t/**\n+\t * Get a list of sample in the cart belonging to a list of projects\n+\t *\n+\t * @param ids List of identifiers for project to get the samples for.\n+\t * @return {@link List} of {@link CartProject}s containing project and sample information for items in the cart.\n+\t */\n+\tpublic List<CartProject> getSamplesForProjects(List<Long> ids) {\n+\t\tList<Project> projects = (List<Project>) projectService.readMultiple(ids);\n+\t\tList<CartProject> cartProjects = new ArrayList<>();\n+\t\tfor (Project project : projects) {\n+\t\t\tCartProject cartProject = new CartProject(project.getId(), project.getLabel());\n+\t\t\tList<CartSample> samples = new ArrayList<>();\n+\t\t\tsampleService.readMultiple(cart.getCartSampleIdsForProject(project.getId()))\n+\t\t\t\t\t.forEach(sample -> {\n+\t\t\t\t\t\tsamples.add(new CartSample(sample));\n+\t\t\t\t\t});\n+\t\t\tcartProject.setSamples(samples);\n+\t\t\tcartProjects.add(cartProject);\n+\t\t}\n+\t\treturn cartProjects;\n+\t}\n+\n+\t/**\n+\t * Get the entire cart flushed out into {@link Project}s with their {@link Sample}s\n+\t *\n+\t * @return All proejcts and samples in the part\n+\t */\n+\tpublic Map<Project, List<Sample>> getFullCart() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ0NDg0MA==", "bodyText": "Method comment", "url": "https://github.com/phac-nml/irida/pull/813#discussion_r500444840", "createdAt": "2020-10-06T16:43:24Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/sessionAttrs/Cart.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.sessionAttrs;\n+\n+import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+\n+/**\n+ * Session object to hold samples that are currently in the cart.\n+ */\n+public class Cart extends HashMap<Long, HashSet<Long>> {\n+\n+\tpublic int add(Long projectId, List<Long> sampleIds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ0NjMyMg==", "bodyText": "Add comments to functions", "url": "https://github.com/phac-nml/irida/pull/813#discussion_r500446322", "createdAt": "2020-10-06T16:45:40Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/apis/cart/cart.js", "diffHunk": "@@ -1,47 +1,49 @@\n import axios from \"axios\";\n import { setBaseUrl } from \"../../utilities/url-utilities\";\n \n-const url = setBaseUrl(`cart`);\n+const AJAX_URL = setBaseUrl(`/ajax/cart`);\n \n /**\n  * Add samples for a project to the cart.\n  * @param {number} projectId Identifier for the project the samples are from.\n  * @param {array} samples array of sample {ids } to add to cart.\n- * @returns {AxiosPromise<any>}\n+ * @returns {Promise<{count: any}>}\n  */\n export const putSampleInCart = async (projectId, samples) =>\n-  axios.put(url, {\n-    projectId,\n-    samples\n-  });\n+  axios\n+    .post(AJAX_URL, {\n+      projectId,\n+      sampleIds: samples.map((s) => s.id),\n+    })\n+    .then(({ data }) => data);\n \n /**\n  * Get the current number of samples in the cart\n- * @returns {Promise<void>}\n+ * @returns {Promise<{count: any}>}\n  */\n export const getCartCount = async () => {\n-  return axios.get(`${url}/count`).then(response => ({ count: response.data }));\n+  return axios.get(`${AJAX_URL}/count`).then(({ data }) => ({ count: data }));\n };\n \n /**\n  * Get the current state of the cart.\n  * @returns {Promise<void | never>}\n  */\n export const getCart = async () =>\n-  axios.get(`${url}`).then(response => response.data);\n+  axios.get(`${AJAX_URL}`).then((response) => response.data);\n \n export const getCartIds = async () =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ0Njk1NA==", "bodyText": "Remove this logging statement and also change the const variable name to make it clear as to what it is", "url": "https://github.com/phac-nml/irida/pull/813#discussion_r500446954", "createdAt": "2020-10-06T16:46:44Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/cart/components/CartSamples.jsx", "diffHunk": "@@ -72,18 +72,27 @@ function CartSamplesComponent({\n   emptyCart,\n   displaySample,\n   removeSample,\n-  removeProject\n+  removeProject,\n }) {\n-  const filterSamples = e => applyFilter(e.target.value);\n+  const s = samples\n+    .map((project) => {\n+      const { samples, ...p } = project;\n+      return project.samples.map((sample) => ({ ...sample, project: p }));\n+    })\n+    .flat();\n+  console.log(s);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f58611dcacf9ee48b8662e993144b6ecaa79ef88"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ff3cc60b7ad101a19b06bf2ea94e6e007a93528", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/7ff3cc60b7ad101a19b06bf2ea94e6e007a93528", "committedDate": "2020-10-06T17:01:17Z", "message": "\ud83d\udcddFixed typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "413e19783ef142068ca7a6d5a36c8bcfd9d03ce6", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/413e19783ef142068ca7a6d5a36c8bcfd9d03ce6", "committedDate": "2020-10-06T17:03:19Z", "message": "\ud83d\udcdd Fixed grammar in CHANGELOG.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "355003282dbbbbf2cc92247eb2a8b80b5b121a5f", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/355003282dbbbbf2cc92247eb2a8b80b5b121a5f", "committedDate": "2020-10-06T17:05:01Z", "message": "\ud83d\udea7 Updated CartProject to CartProjectModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37d24d4e0a1663bbf1ae171af0c98c390adef69a", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/37d24d4e0a1663bbf1ae171af0c98c390adef69a", "committedDate": "2020-10-06T17:05:37Z", "message": "\ud83d\udea7 Updated CartSample to CartSampleModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "720b1f646043b2d45e37716fa49ddeb822744838", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/720b1f646043b2d45e37716fa49ddeb822744838", "committedDate": "2020-10-06T17:06:42Z", "message": "\ud83d\udea7 Does not need to be final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0019e2334d708eab552b72a2f9e3acea265c71c3", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/0019e2334d708eab552b72a2f9e3acea265c71c3", "committedDate": "2020-10-06T17:07:21Z", "message": "\ud83d\udea7 Services do not need to be final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "746b003e81aa0d6e9e5f6b072670b1c231c0d8fc", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/746b003e81aa0d6e9e5f6b072670b1c231c0d8fc", "committedDate": "2020-10-06T17:10:12Z", "message": "\ud83d\udea7 Remove final from constructor call"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff327b3dfaf6c5db4002fe5a0c32ffbf4a7512c7", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/ff327b3dfaf6c5db4002fe5a0c32ffbf4a7512c7", "committedDate": "2020-10-06T17:11:53Z", "message": "\ud83d\udcdd Added JSDoc for add"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edb5a72614c8656f5bef85e0f90bce70295b0a90", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/edb5a72614c8656f5bef85e0f90bce70295b0a90", "committedDate": "2020-10-06T17:13:48Z", "message": "\ud83d\udcdd Added missing JSDoc for cart.js"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b5643b1b98b4b90291a3f3834053255bbd13da7", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/0b5643b1b98b4b90291a3f3834053255bbd13da7", "committedDate": "2020-10-06T17:14:54Z", "message": "\ud83d\udea7 Removed logging statement in CartSamples.jsx"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82e5a94bf2cf47a92e2795d0b3966b2643609fa5", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/82e5a94bf2cf47a92e2795d0b3966b2643609fa5", "committedDate": "2020-10-07T02:13:59Z", "message": "Removed final variable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f40df94f064d6b214c61a4dd3795ff6330ec33e1", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/f40df94f064d6b214c61a4dd3795ff6330ec33e1", "committedDate": "2020-10-07T02:14:39Z", "message": "Updated formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc1976bc5eb3845274bb847a3ceb3c02098c4819", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/fc1976bc5eb3845274bb847a3ceb3c02098c4819", "committedDate": "2020-10-07T12:32:34Z", "message": "Fixed broken tests to to change is response structures"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e08daff3a097bc78106483b9d424b3b28233f5d", "author": {"user": {"login": "joshsadam", "name": "Josh Adam"}}, "url": "https://github.com/phac-nml/irida/commit/5e08daff3a097bc78106483b9d424b3b28233f5d", "committedDate": "2020-10-07T12:49:34Z", "message": "Merge branch 'development' into cart-server-refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MjM4MjMx", "url": "https://github.com/phac-nml/irida/pull/813#pullrequestreview-504238231", "createdAt": "2020-10-07T20:24:07Z", "commit": {"oid": "5e08daff3a097bc78106483b9d424b3b28233f5d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 128, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}