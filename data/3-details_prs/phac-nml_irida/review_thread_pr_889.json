{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NjczNTE4", "number": 889, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMjoxMDoxNFrOFG7Tgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo1NzowOVrOFHTs9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyODA3NDI2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/apis/pipelines/pipelines.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QyMjoxMDoxNFrOIIKxWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxOTo1ODozN1rOIIw_LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQzNTk5Mg==", "bodyText": "I don't think this belongs here", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r545435992", "createdAt": "2020-12-17T22:10:14Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/apis/pipelines/pipelines.js", "diffHunk": "@@ -3,6 +3,7 @@\n  */\n import axios from \"axios\";\n import { setBaseUrl } from \"../../utilities/url-utilities\";\n+import { notification } from \"antd\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA2MjEyNQ==", "bodyText": "Removed in c22841d", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546062125", "createdAt": "2020-12-18T19:58:37Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/apis/pipelines/pipelines.js", "diffHunk": "@@ -3,6 +3,7 @@\n  */\n import axios from \"axios\";\n import { setBaseUrl } from \"../../utilities/url-utilities\";\n+import { notification } from \"antd\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTQzNTk5Mg=="}, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjAzMTM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineSampleService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo0Njo1OVrOIIuiNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMDowMjoyOFrOIIxF-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMTk0Mw==", "bodyText": "Change variable ls to launchSample or something to make it more clear", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546021943", "createdAt": "2020-12-18T18:46:59Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineSampleService.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.services;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import ca.corefacility.bioinformatics.irida.model.project.Project;\n+import ca.corefacility.bioinformatics.irida.model.sample.Sample;\n+import ca.corefacility.bioinformatics.irida.model.sequenceFile.SequencingObject;\n+import ca.corefacility.bioinformatics.irida.ria.web.launchPipeline.dtos.LaunchSample;\n+\n+/**\n+ * UI Service for all things related to samples within the pipeline\n+ */\n+@Component\n+public class UIPipelineSampleService {\n+\tprivate final UISampleService sampleService;\n+\tprivate final UICartService cartService;\n+\n+\t@Autowired\n+\tpublic UIPipelineSampleService(UISampleService sampleService, UICartService cartService) {\n+\t\tthis.sampleService = sampleService;\n+\t\tthis.cartService = cartService;\n+\t}\n+\n+\t/**\n+\t * Get a list of the samples that are in the cart and get their associated sequence files that\n+\t * can be used on the current pipeline\n+\t *\n+\t * @param paired  Whether paired end files can be run on the current pipeline\n+\t * @param singles Whether single end files can be run on the current pipeline\n+\t * @return list of samples containing their associated sequencing data\n+\t */\n+\tpublic List<LaunchSample> getPipelineSamples(boolean paired, boolean singles) {\n+\t\tMap<Project, List<Sample>> cart = cartService.getFullCart();\n+\t\tList<LaunchSample> samples = new ArrayList<>();\n+\t\tcart.forEach((project, projectSamples) -> {\n+\t\t\tfor (Sample sample : projectSamples) {\n+\t\t\t\tLaunchSample ls = new LaunchSample(sample, project);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA2Mzg2Ng==", "bodyText": "Updated in 816dd5f", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546063866", "createdAt": "2020-12-18T20:02:28Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineSampleService.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.services;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+\n+import ca.corefacility.bioinformatics.irida.model.project.Project;\n+import ca.corefacility.bioinformatics.irida.model.sample.Sample;\n+import ca.corefacility.bioinformatics.irida.model.sequenceFile.SequencingObject;\n+import ca.corefacility.bioinformatics.irida.ria.web.launchPipeline.dtos.LaunchSample;\n+\n+/**\n+ * UI Service for all things related to samples within the pipeline\n+ */\n+@Component\n+public class UIPipelineSampleService {\n+\tprivate final UISampleService sampleService;\n+\tprivate final UICartService cartService;\n+\n+\t@Autowired\n+\tpublic UIPipelineSampleService(UISampleService sampleService, UICartService cartService) {\n+\t\tthis.sampleService = sampleService;\n+\t\tthis.cartService = cartService;\n+\t}\n+\n+\t/**\n+\t * Get a list of the samples that are in the cart and get their associated sequence files that\n+\t * can be used on the current pipeline\n+\t *\n+\t * @param paired  Whether paired end files can be run on the current pipeline\n+\t * @param singles Whether single end files can be run on the current pipeline\n+\t * @return list of samples containing their associated sequencing data\n+\t */\n+\tpublic List<LaunchSample> getPipelineSamples(boolean paired, boolean singles) {\n+\t\tMap<Project, List<Sample>> cart = cartService.getFullCart();\n+\t\tList<LaunchSample> samples = new ArrayList<>();\n+\t\tcart.forEach((project, projectSamples) -> {\n+\t\t\tfor (Sample sample : projectSamples) {\n+\t\t\t\tLaunchSample ls = new LaunchSample(sample, project);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyMTk0Mw=="}, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjA2MjgzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo1NDozM1rOIIu1yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMDowNTo0OVrOIIxL3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyNjk1Mw==", "bodyText": "Change s to a different variable name to make it more clear", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546026953", "createdAt": "2020-12-18T18:54:33Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "diffHunk": "@@ -0,0 +1,130 @@\n+import React from \"react\";\n+import { fetchPipelineSamples } from \"../../apis/pipelines/pipelines\";\n+import {\n+  Button,\n+  Dropdown,\n+  List,\n+  Menu,\n+  notification,\n+  Space,\n+  Typography,\n+} from \"antd\";\n+import { useLaunch } from \"./launch-context\";\n+import { IconDropDown } from \"../../components/icons/Icons\";\n+import { removeSample } from \"../../apis/cart/cart\";\n+import { SectionHeading } from \"../../components/ant.design/SectionHeading\";\n+import { SampleFilesListItem } from \"./files/SampleFilesListItem\";\n+import { setSelectedSampleFiles } from \"./launch-dispatch\";\n+\n+/**\n+ * React component to display sample files that will be used in the launching\n+ * of the pipeline\n+ *\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function LaunchFiles() {\n+  const [selected, setSelected] = React.useState();\n+  const [\n+    { acceptsPairedSequenceFiles: paired, acceptsSingleSequenceFiles: singles },\n+    dispatch,\n+  ] = useLaunch();\n+  const [hideUnusable, setHideUnusable] = React.useState(true);\n+  const [visibleSamples, setVisibleSamples] = React.useState();\n+  const [samples, setSamples] = React.useState();\n+\n+  React.useEffect(() => {\n+    fetchPipelineSamples({\n+      paired,\n+      singles,\n+    })\n+      .then((data) => {\n+        setSamples(data);\n+        setSelected(\n+          data.filter((s) => s.files.length).map((s) => s.files[0].identifier)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA2NTM3NA==", "bodyText": "Updated in 6da8d9b", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546065374", "createdAt": "2020-12-18T20:05:49Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "diffHunk": "@@ -0,0 +1,130 @@\n+import React from \"react\";\n+import { fetchPipelineSamples } from \"../../apis/pipelines/pipelines\";\n+import {\n+  Button,\n+  Dropdown,\n+  List,\n+  Menu,\n+  notification,\n+  Space,\n+  Typography,\n+} from \"antd\";\n+import { useLaunch } from \"./launch-context\";\n+import { IconDropDown } from \"../../components/icons/Icons\";\n+import { removeSample } from \"../../apis/cart/cart\";\n+import { SectionHeading } from \"../../components/ant.design/SectionHeading\";\n+import { SampleFilesListItem } from \"./files/SampleFilesListItem\";\n+import { setSelectedSampleFiles } from \"./launch-dispatch\";\n+\n+/**\n+ * React component to display sample files that will be used in the launching\n+ * of the pipeline\n+ *\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function LaunchFiles() {\n+  const [selected, setSelected] = React.useState();\n+  const [\n+    { acceptsPairedSequenceFiles: paired, acceptsSingleSequenceFiles: singles },\n+    dispatch,\n+  ] = useLaunch();\n+  const [hideUnusable, setHideUnusable] = React.useState(true);\n+  const [visibleSamples, setVisibleSamples] = React.useState();\n+  const [samples, setSamples] = React.useState();\n+\n+  React.useEffect(() => {\n+    fetchPipelineSamples({\n+      paired,\n+      singles,\n+    })\n+      .then((data) => {\n+        setSamples(data);\n+        setSelected(\n+          data.filter((s) => s.files.length).map((s) => s.files[0].identifier)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyNjk1Mw=="}, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjA2NTI0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo1NToyMVrOIIu3QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMDowODo0OVrOIIxRNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyNzMyOQ==", "bodyText": "Same as above. Change s to a more clear variable name", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546027329", "createdAt": "2020-12-18T18:55:21Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "diffHunk": "@@ -0,0 +1,130 @@\n+import React from \"react\";\n+import { fetchPipelineSamples } from \"../../apis/pipelines/pipelines\";\n+import {\n+  Button,\n+  Dropdown,\n+  List,\n+  Menu,\n+  notification,\n+  Space,\n+  Typography,\n+} from \"antd\";\n+import { useLaunch } from \"./launch-context\";\n+import { IconDropDown } from \"../../components/icons/Icons\";\n+import { removeSample } from \"../../apis/cart/cart\";\n+import { SectionHeading } from \"../../components/ant.design/SectionHeading\";\n+import { SampleFilesListItem } from \"./files/SampleFilesListItem\";\n+import { setSelectedSampleFiles } from \"./launch-dispatch\";\n+\n+/**\n+ * React component to display sample files that will be used in the launching\n+ * of the pipeline\n+ *\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function LaunchFiles() {\n+  const [selected, setSelected] = React.useState();\n+  const [\n+    { acceptsPairedSequenceFiles: paired, acceptsSingleSequenceFiles: singles },\n+    dispatch,\n+  ] = useLaunch();\n+  const [hideUnusable, setHideUnusable] = React.useState(true);\n+  const [visibleSamples, setVisibleSamples] = React.useState();\n+  const [samples, setSamples] = React.useState();\n+\n+  React.useEffect(() => {\n+    fetchPipelineSamples({\n+      paired,\n+      singles,\n+    })\n+      .then((data) => {\n+        setSamples(data);\n+        setSelected(\n+          data.filter((s) => s.files.length).map((s) => s.files[0].identifier)\n+        );\n+      })\n+      .catch((message) => notification.error({ message }));\n+  }, [paired, singles]);\n+\n+  React.useEffect(() => {\n+    setSelectedSampleFiles(dispatch, selected);\n+  }, [selected]);\n+\n+  React.useEffect(() => {\n+    if (samples) {\n+      if (hideUnusable) {\n+        setVisibleSamples(samples.filter((s) => s.files.length));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA2Njc0MA==", "bodyText": "Updated in ab4014e", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546066740", "createdAt": "2020-12-18T20:08:49Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "diffHunk": "@@ -0,0 +1,130 @@\n+import React from \"react\";\n+import { fetchPipelineSamples } from \"../../apis/pipelines/pipelines\";\n+import {\n+  Button,\n+  Dropdown,\n+  List,\n+  Menu,\n+  notification,\n+  Space,\n+  Typography,\n+} from \"antd\";\n+import { useLaunch } from \"./launch-context\";\n+import { IconDropDown } from \"../../components/icons/Icons\";\n+import { removeSample } from \"../../apis/cart/cart\";\n+import { SectionHeading } from \"../../components/ant.design/SectionHeading\";\n+import { SampleFilesListItem } from \"./files/SampleFilesListItem\";\n+import { setSelectedSampleFiles } from \"./launch-dispatch\";\n+\n+/**\n+ * React component to display sample files that will be used in the launching\n+ * of the pipeline\n+ *\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function LaunchFiles() {\n+  const [selected, setSelected] = React.useState();\n+  const [\n+    { acceptsPairedSequenceFiles: paired, acceptsSingleSequenceFiles: singles },\n+    dispatch,\n+  ] = useLaunch();\n+  const [hideUnusable, setHideUnusable] = React.useState(true);\n+  const [visibleSamples, setVisibleSamples] = React.useState();\n+  const [samples, setSamples] = React.useState();\n+\n+  React.useEffect(() => {\n+    fetchPipelineSamples({\n+      paired,\n+      singles,\n+    })\n+      .then((data) => {\n+        setSamples(data);\n+        setSelected(\n+          data.filter((s) => s.files.length).map((s) => s.files[0].identifier)\n+        );\n+      })\n+      .catch((message) => notification.error({ message }));\n+  }, [paired, singles]);\n+\n+  React.useEffect(() => {\n+    setSelectedSampleFiles(dispatch, selected);\n+  }, [selected]);\n+\n+  React.useEffect(() => {\n+    if (samples) {\n+      if (hideUnusable) {\n+        setVisibleSamples(samples.filter((s) => s.files.length));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyNzMyOQ=="}, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjA2NzY0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo1NjowM1rOIIu4pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMDoyNjo0MFrOIIxvYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyNzY4NA==", "bodyText": "Can I get you to add comments for these useeffect hooks. Just so we are clear with what's happening", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546027684", "createdAt": "2020-12-18T18:56:03Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "diffHunk": "@@ -0,0 +1,130 @@\n+import React from \"react\";\n+import { fetchPipelineSamples } from \"../../apis/pipelines/pipelines\";\n+import {\n+  Button,\n+  Dropdown,\n+  List,\n+  Menu,\n+  notification,\n+  Space,\n+  Typography,\n+} from \"antd\";\n+import { useLaunch } from \"./launch-context\";\n+import { IconDropDown } from \"../../components/icons/Icons\";\n+import { removeSample } from \"../../apis/cart/cart\";\n+import { SectionHeading } from \"../../components/ant.design/SectionHeading\";\n+import { SampleFilesListItem } from \"./files/SampleFilesListItem\";\n+import { setSelectedSampleFiles } from \"./launch-dispatch\";\n+\n+/**\n+ * React component to display sample files that will be used in the launching\n+ * of the pipeline\n+ *\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function LaunchFiles() {\n+  const [selected, setSelected] = React.useState();\n+  const [\n+    { acceptsPairedSequenceFiles: paired, acceptsSingleSequenceFiles: singles },\n+    dispatch,\n+  ] = useLaunch();\n+  const [hideUnusable, setHideUnusable] = React.useState(true);\n+  const [visibleSamples, setVisibleSamples] = React.useState();\n+  const [samples, setSamples] = React.useState();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA2Njg3NQ==", "bodyText": "Um... nope", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546066875", "createdAt": "2020-12-18T20:09:05Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "diffHunk": "@@ -0,0 +1,130 @@\n+import React from \"react\";\n+import { fetchPipelineSamples } from \"../../apis/pipelines/pipelines\";\n+import {\n+  Button,\n+  Dropdown,\n+  List,\n+  Menu,\n+  notification,\n+  Space,\n+  Typography,\n+} from \"antd\";\n+import { useLaunch } from \"./launch-context\";\n+import { IconDropDown } from \"../../components/icons/Icons\";\n+import { removeSample } from \"../../apis/cart/cart\";\n+import { SectionHeading } from \"../../components/ant.design/SectionHeading\";\n+import { SampleFilesListItem } from \"./files/SampleFilesListItem\";\n+import { setSelectedSampleFiles } from \"./launch-dispatch\";\n+\n+/**\n+ * React component to display sample files that will be used in the launching\n+ * of the pipeline\n+ *\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function LaunchFiles() {\n+  const [selected, setSelected] = React.useState();\n+  const [\n+    { acceptsPairedSequenceFiles: paired, acceptsSingleSequenceFiles: singles },\n+    dispatch,\n+  ] = useLaunch();\n+  const [hideUnusable, setHideUnusable] = React.useState(true);\n+  const [visibleSamples, setVisibleSamples] = React.useState();\n+  const [samples, setSamples] = React.useState();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyNzY4NA=="}, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA3NDQ2NQ==", "bodyText": "Ok, updated in 36217e1", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546074465", "createdAt": "2020-12-18T20:26:40Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "diffHunk": "@@ -0,0 +1,130 @@\n+import React from \"react\";\n+import { fetchPipelineSamples } from \"../../apis/pipelines/pipelines\";\n+import {\n+  Button,\n+  Dropdown,\n+  List,\n+  Menu,\n+  notification,\n+  Space,\n+  Typography,\n+} from \"antd\";\n+import { useLaunch } from \"./launch-context\";\n+import { IconDropDown } from \"../../components/icons/Icons\";\n+import { removeSample } from \"../../apis/cart/cart\";\n+import { SectionHeading } from \"../../components/ant.design/SectionHeading\";\n+import { SampleFilesListItem } from \"./files/SampleFilesListItem\";\n+import { setSelectedSampleFiles } from \"./launch-dispatch\";\n+\n+/**\n+ * React component to display sample files that will be used in the launching\n+ * of the pipeline\n+ *\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function LaunchFiles() {\n+  const [selected, setSelected] = React.useState();\n+  const [\n+    { acceptsPairedSequenceFiles: paired, acceptsSingleSequenceFiles: singles },\n+    dispatch,\n+  ] = useLaunch();\n+  const [hideUnusable, setHideUnusable] = React.useState(true);\n+  const [visibleSamples, setVisibleSamples] = React.useState();\n+  const [samples, setSamples] = React.useState();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyNzY4NA=="}, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjA3MTU2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo1NzowOVrOIIu67Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMDoxMzowMFrOIIxX2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyODI2OQ==", "bodyText": "Change s to a more clear variable name", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546028269", "createdAt": "2020-12-18T18:57:09Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "diffHunk": "@@ -0,0 +1,130 @@\n+import React from \"react\";\n+import { fetchPipelineSamples } from \"../../apis/pipelines/pipelines\";\n+import {\n+  Button,\n+  Dropdown,\n+  List,\n+  Menu,\n+  notification,\n+  Space,\n+  Typography,\n+} from \"antd\";\n+import { useLaunch } from \"./launch-context\";\n+import { IconDropDown } from \"../../components/icons/Icons\";\n+import { removeSample } from \"../../apis/cart/cart\";\n+import { SectionHeading } from \"../../components/ant.design/SectionHeading\";\n+import { SampleFilesListItem } from \"./files/SampleFilesListItem\";\n+import { setSelectedSampleFiles } from \"./launch-dispatch\";\n+\n+/**\n+ * React component to display sample files that will be used in the launching\n+ * of the pipeline\n+ *\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function LaunchFiles() {\n+  const [selected, setSelected] = React.useState();\n+  const [\n+    { acceptsPairedSequenceFiles: paired, acceptsSingleSequenceFiles: singles },\n+    dispatch,\n+  ] = useLaunch();\n+  const [hideUnusable, setHideUnusable] = React.useState(true);\n+  const [visibleSamples, setVisibleSamples] = React.useState();\n+  const [samples, setSamples] = React.useState();\n+\n+  React.useEffect(() => {\n+    fetchPipelineSamples({\n+      paired,\n+      singles,\n+    })\n+      .then((data) => {\n+        setSamples(data);\n+        setSelected(\n+          data.filter((s) => s.files.length).map((s) => s.files[0].identifier)\n+        );\n+      })\n+      .catch((message) => notification.error({ message }));\n+  }, [paired, singles]);\n+\n+  React.useEffect(() => {\n+    setSelectedSampleFiles(dispatch, selected);\n+  }, [selected]);\n+\n+  React.useEffect(() => {\n+    if (samples) {\n+      if (hideUnusable) {\n+        setVisibleSamples(samples.filter((s) => s.files.length));\n+      } else {\n+        setVisibleSamples(samples);\n+      }\n+    }\n+  }, [samples, hideUnusable]);\n+\n+  const toggleUsable = () => setHideUnusable(!hideUnusable);\n+\n+  const updateSelectedFiles = (previous, current) => {\n+    const ids = new Set(selected);\n+    ids.delete(previous);\n+    ids.add(current);\n+    setSelected(Array.from(ids));\n+  };\n+\n+  const removeSampleFromCart = (sample, selectedId) => {\n+    removeSample(sample.project.id, sample.id).then(() => {\n+      setSamples(samples.filter((s) => sample.id !== s.id));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA2ODA3MQ==", "bodyText": "I really like the letter s, this is the 3rd time you have asked me to change it, I am getting a little frustrated.", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546068071", "createdAt": "2020-12-18T20:12:02Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "diffHunk": "@@ -0,0 +1,130 @@\n+import React from \"react\";\n+import { fetchPipelineSamples } from \"../../apis/pipelines/pipelines\";\n+import {\n+  Button,\n+  Dropdown,\n+  List,\n+  Menu,\n+  notification,\n+  Space,\n+  Typography,\n+} from \"antd\";\n+import { useLaunch } from \"./launch-context\";\n+import { IconDropDown } from \"../../components/icons/Icons\";\n+import { removeSample } from \"../../apis/cart/cart\";\n+import { SectionHeading } from \"../../components/ant.design/SectionHeading\";\n+import { SampleFilesListItem } from \"./files/SampleFilesListItem\";\n+import { setSelectedSampleFiles } from \"./launch-dispatch\";\n+\n+/**\n+ * React component to display sample files that will be used in the launching\n+ * of the pipeline\n+ *\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function LaunchFiles() {\n+  const [selected, setSelected] = React.useState();\n+  const [\n+    { acceptsPairedSequenceFiles: paired, acceptsSingleSequenceFiles: singles },\n+    dispatch,\n+  ] = useLaunch();\n+  const [hideUnusable, setHideUnusable] = React.useState(true);\n+  const [visibleSamples, setVisibleSamples] = React.useState();\n+  const [samples, setSamples] = React.useState();\n+\n+  React.useEffect(() => {\n+    fetchPipelineSamples({\n+      paired,\n+      singles,\n+    })\n+      .then((data) => {\n+        setSamples(data);\n+        setSelected(\n+          data.filter((s) => s.files.length).map((s) => s.files[0].identifier)\n+        );\n+      })\n+      .catch((message) => notification.error({ message }));\n+  }, [paired, singles]);\n+\n+  React.useEffect(() => {\n+    setSelectedSampleFiles(dispatch, selected);\n+  }, [selected]);\n+\n+  React.useEffect(() => {\n+    if (samples) {\n+      if (hideUnusable) {\n+        setVisibleSamples(samples.filter((s) => s.files.length));\n+      } else {\n+        setVisibleSamples(samples);\n+      }\n+    }\n+  }, [samples, hideUnusable]);\n+\n+  const toggleUsable = () => setHideUnusable(!hideUnusable);\n+\n+  const updateSelectedFiles = (previous, current) => {\n+    const ids = new Set(selected);\n+    ids.delete(previous);\n+    ids.add(current);\n+    setSelected(Array.from(ids));\n+  };\n+\n+  const removeSampleFromCart = (sample, selectedId) => {\n+    removeSample(sample.project.id, sample.id).then(() => {\n+      setSamples(samples.filter((s) => sample.id !== s.id));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyODI2OQ=="}, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA2ODA3OA==", "bodyText": "I really like the letter s, this is the 3rd time you have asked me to change it, I am getting a little frustrated.", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546068078", "createdAt": "2020-12-18T20:12:02Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "diffHunk": "@@ -0,0 +1,130 @@\n+import React from \"react\";\n+import { fetchPipelineSamples } from \"../../apis/pipelines/pipelines\";\n+import {\n+  Button,\n+  Dropdown,\n+  List,\n+  Menu,\n+  notification,\n+  Space,\n+  Typography,\n+} from \"antd\";\n+import { useLaunch } from \"./launch-context\";\n+import { IconDropDown } from \"../../components/icons/Icons\";\n+import { removeSample } from \"../../apis/cart/cart\";\n+import { SectionHeading } from \"../../components/ant.design/SectionHeading\";\n+import { SampleFilesListItem } from \"./files/SampleFilesListItem\";\n+import { setSelectedSampleFiles } from \"./launch-dispatch\";\n+\n+/**\n+ * React component to display sample files that will be used in the launching\n+ * of the pipeline\n+ *\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function LaunchFiles() {\n+  const [selected, setSelected] = React.useState();\n+  const [\n+    { acceptsPairedSequenceFiles: paired, acceptsSingleSequenceFiles: singles },\n+    dispatch,\n+  ] = useLaunch();\n+  const [hideUnusable, setHideUnusable] = React.useState(true);\n+  const [visibleSamples, setVisibleSamples] = React.useState();\n+  const [samples, setSamples] = React.useState();\n+\n+  React.useEffect(() => {\n+    fetchPipelineSamples({\n+      paired,\n+      singles,\n+    })\n+      .then((data) => {\n+        setSamples(data);\n+        setSelected(\n+          data.filter((s) => s.files.length).map((s) => s.files[0].identifier)\n+        );\n+      })\n+      .catch((message) => notification.error({ message }));\n+  }, [paired, singles]);\n+\n+  React.useEffect(() => {\n+    setSelectedSampleFiles(dispatch, selected);\n+  }, [selected]);\n+\n+  React.useEffect(() => {\n+    if (samples) {\n+      if (hideUnusable) {\n+        setVisibleSamples(samples.filter((s) => s.files.length));\n+      } else {\n+        setVisibleSamples(samples);\n+      }\n+    }\n+  }, [samples, hideUnusable]);\n+\n+  const toggleUsable = () => setHideUnusable(!hideUnusable);\n+\n+  const updateSelectedFiles = (previous, current) => {\n+    const ids = new Set(selected);\n+    ids.delete(previous);\n+    ids.add(current);\n+    setSelected(Array.from(ids));\n+  };\n+\n+  const removeSampleFromCart = (sample, selectedId) => {\n+    removeSample(sample.project.id, sample.id).then(() => {\n+      setSamples(samples.filter((s) => sample.id !== s.id));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyODI2OQ=="}, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjA2ODQ0Mw==", "bodyText": "Updated in 1f43922", "url": "https://github.com/phac-nml/irida/pull/889#discussion_r546068443", "createdAt": "2020-12-18T20:13:00Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/LaunchFiles.jsx", "diffHunk": "@@ -0,0 +1,130 @@\n+import React from \"react\";\n+import { fetchPipelineSamples } from \"../../apis/pipelines/pipelines\";\n+import {\n+  Button,\n+  Dropdown,\n+  List,\n+  Menu,\n+  notification,\n+  Space,\n+  Typography,\n+} from \"antd\";\n+import { useLaunch } from \"./launch-context\";\n+import { IconDropDown } from \"../../components/icons/Icons\";\n+import { removeSample } from \"../../apis/cart/cart\";\n+import { SectionHeading } from \"../../components/ant.design/SectionHeading\";\n+import { SampleFilesListItem } from \"./files/SampleFilesListItem\";\n+import { setSelectedSampleFiles } from \"./launch-dispatch\";\n+\n+/**\n+ * React component to display sample files that will be used in the launching\n+ * of the pipeline\n+ *\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function LaunchFiles() {\n+  const [selected, setSelected] = React.useState();\n+  const [\n+    { acceptsPairedSequenceFiles: paired, acceptsSingleSequenceFiles: singles },\n+    dispatch,\n+  ] = useLaunch();\n+  const [hideUnusable, setHideUnusable] = React.useState(true);\n+  const [visibleSamples, setVisibleSamples] = React.useState();\n+  const [samples, setSamples] = React.useState();\n+\n+  React.useEffect(() => {\n+    fetchPipelineSamples({\n+      paired,\n+      singles,\n+    })\n+      .then((data) => {\n+        setSamples(data);\n+        setSelected(\n+          data.filter((s) => s.files.length).map((s) => s.files[0].identifier)\n+        );\n+      })\n+      .catch((message) => notification.error({ message }));\n+  }, [paired, singles]);\n+\n+  React.useEffect(() => {\n+    setSelectedSampleFiles(dispatch, selected);\n+  }, [selected]);\n+\n+  React.useEffect(() => {\n+    if (samples) {\n+      if (hideUnusable) {\n+        setVisibleSamples(samples.filter((s) => s.files.length));\n+      } else {\n+        setVisibleSamples(samples);\n+      }\n+    }\n+  }, [samples, hideUnusable]);\n+\n+  const toggleUsable = () => setHideUnusable(!hideUnusable);\n+\n+  const updateSelectedFiles = (previous, current) => {\n+    const ids = new Set(selected);\n+    ids.delete(previous);\n+    ids.add(current);\n+    setSelected(Array.from(ids));\n+  };\n+\n+  const removeSampleFromCart = (sample, selectedId) => {\n+    removeSample(sample.project.id, sample.id).then(() => {\n+      setSamples(samples.filter((s) => sample.id !== s.id));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyODI2OQ=="}, "originalCommit": {"oid": "202f99d72b909bfffd861d2137a341819be9b293"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 612, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}