{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNDQ3Nzcw", "number": 697, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTowNTozN1rOD_t0wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTozNzozM1rOD_uwzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTM3NjY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/projects/ProjectUserGroupsAjaxController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTowNTozN1rOGaiqMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxODozNjoxOVrOGarQ-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ4NDAxNg==", "bodyText": "Just a general question. Even if there is an error deleting the usergroup would we still want it to return a ResponseEntity.ok? Or should we set the status as a bad request with the error message?", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430484016", "createdAt": "2020-05-26T15:05:37Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/projects/ProjectUserGroupsAjaxController.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.projects;\n+\n+import java.util.List;\n+import java.util.Locale;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+\n+import ca.corefacility.bioinformatics.irida.exceptions.ProjectWithoutOwnerException;\n+import ca.corefacility.bioinformatics.irida.model.user.group.UserGroup;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.NewMemberRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ProjectUserGroupsTableModel;\n+import ca.corefacility.bioinformatics.irida.ria.web.models.tables.TableRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.models.tables.TableResponse;\n+import ca.corefacility.bioinformatics.irida.ria.web.services.UIProjectUserGroupsService;\n+\n+/**\n+ * UI Ajax Controller for handling project user groups\n+ */\n+@RestController\n+@RequestMapping(\"/ajax/projects/{projectId}/user-groups\")\n+public class ProjectUserGroupsAjaxController {\n+\tprivate final UIProjectUserGroupsService service;\n+\n+\t@Autowired\n+\tpublic ProjectUserGroupsAjaxController(UIProjectUserGroupsService service) {\n+\t\tthis.service = service;\n+\t}\n+\n+\t/**\n+\t * Get a table page of {@link ProjectUserGroupsTableModel}\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param request   {@link TableRequest} details about the current page of the table\n+\t * @return {@link TableResponse}\n+\t */\n+\t@RequestMapping(\"\")\n+\tpublic ResponseEntity<TableResponse<ProjectUserGroupsTableModel>> getProjectUserGroups(@PathVariable Long projectId,\n+\t\t\t@RequestBody TableRequest request) {\n+\t\treturn ResponseEntity.ok(service.getUserGroupsForProject(projectId, request));\n+\t}\n+\n+\t/**\n+\t * Remove a user group from a project\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param groupId   Identifier for an user group\n+\t * @param locale    current users locale\n+\t * @return message to user about the result of removing the user group\n+\t */\n+\t@RequestMapping(value = \"\", method = RequestMethod.DELETE)\n+\tpublic ResponseEntity<String> removeUserGroupFromProject(@PathVariable long projectId, @RequestParam long groupId,\n+\t\t\tLocale locale) {\n+\t\treturn ResponseEntity.ok(service.removeUserGroupFromProject(projectId, groupId, locale));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxOTcyNA==", "bodyText": "No but it should throw it's own error at that point and not actually return here.", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430519724", "createdAt": "2020-05-26T15:50:30Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/projects/ProjectUserGroupsAjaxController.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.projects;\n+\n+import java.util.List;\n+import java.util.Locale;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+\n+import ca.corefacility.bioinformatics.irida.exceptions.ProjectWithoutOwnerException;\n+import ca.corefacility.bioinformatics.irida.model.user.group.UserGroup;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.NewMemberRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ProjectUserGroupsTableModel;\n+import ca.corefacility.bioinformatics.irida.ria.web.models.tables.TableRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.models.tables.TableResponse;\n+import ca.corefacility.bioinformatics.irida.ria.web.services.UIProjectUserGroupsService;\n+\n+/**\n+ * UI Ajax Controller for handling project user groups\n+ */\n+@RestController\n+@RequestMapping(\"/ajax/projects/{projectId}/user-groups\")\n+public class ProjectUserGroupsAjaxController {\n+\tprivate final UIProjectUserGroupsService service;\n+\n+\t@Autowired\n+\tpublic ProjectUserGroupsAjaxController(UIProjectUserGroupsService service) {\n+\t\tthis.service = service;\n+\t}\n+\n+\t/**\n+\t * Get a table page of {@link ProjectUserGroupsTableModel}\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param request   {@link TableRequest} details about the current page of the table\n+\t * @return {@link TableResponse}\n+\t */\n+\t@RequestMapping(\"\")\n+\tpublic ResponseEntity<TableResponse<ProjectUserGroupsTableModel>> getProjectUserGroups(@PathVariable Long projectId,\n+\t\t\t@RequestBody TableRequest request) {\n+\t\treturn ResponseEntity.ok(service.getUserGroupsForProject(projectId, request));\n+\t}\n+\n+\t/**\n+\t * Remove a user group from a project\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param groupId   Identifier for an user group\n+\t * @param locale    current users locale\n+\t * @return message to user about the result of removing the user group\n+\t */\n+\t@RequestMapping(value = \"\", method = RequestMethod.DELETE)\n+\tpublic ResponseEntity<String> removeUserGroupFromProject(@PathVariable long projectId, @RequestParam long groupId,\n+\t\t\tLocale locale) {\n+\t\treturn ResponseEntity.ok(service.removeUserGroupFromProject(projectId, groupId, locale));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ4NDAxNg=="}, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYyNTAxOQ==", "bodyText": "Sounds good!", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430625019", "createdAt": "2020-05-26T18:36:19Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/projects/ProjectUserGroupsAjaxController.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.projects;\n+\n+import java.util.List;\n+import java.util.Locale;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+\n+import ca.corefacility.bioinformatics.irida.exceptions.ProjectWithoutOwnerException;\n+import ca.corefacility.bioinformatics.irida.model.user.group.UserGroup;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.NewMemberRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ProjectUserGroupsTableModel;\n+import ca.corefacility.bioinformatics.irida.ria.web.models.tables.TableRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.models.tables.TableResponse;\n+import ca.corefacility.bioinformatics.irida.ria.web.services.UIProjectUserGroupsService;\n+\n+/**\n+ * UI Ajax Controller for handling project user groups\n+ */\n+@RestController\n+@RequestMapping(\"/ajax/projects/{projectId}/user-groups\")\n+public class ProjectUserGroupsAjaxController {\n+\tprivate final UIProjectUserGroupsService service;\n+\n+\t@Autowired\n+\tpublic ProjectUserGroupsAjaxController(UIProjectUserGroupsService service) {\n+\t\tthis.service = service;\n+\t}\n+\n+\t/**\n+\t * Get a table page of {@link ProjectUserGroupsTableModel}\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param request   {@link TableRequest} details about the current page of the table\n+\t * @return {@link TableResponse}\n+\t */\n+\t@RequestMapping(\"\")\n+\tpublic ResponseEntity<TableResponse<ProjectUserGroupsTableModel>> getProjectUserGroups(@PathVariable Long projectId,\n+\t\t\t@RequestBody TableRequest request) {\n+\t\treturn ResponseEntity.ok(service.getUserGroupsForProject(projectId, request));\n+\t}\n+\n+\t/**\n+\t * Remove a user group from a project\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param groupId   Identifier for an user group\n+\t * @param locale    current users locale\n+\t * @return message to user about the result of removing the user group\n+\t */\n+\t@RequestMapping(value = \"\", method = RequestMethod.DELETE)\n+\tpublic ResponseEntity<String> removeUserGroupFromProject(@PathVariable long projectId, @RequestParam long groupId,\n+\t\t\tLocale locale) {\n+\t\treturn ResponseEntity.ok(service.removeUserGroupFromProject(projectId, groupId, locale));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ4NDAxNg=="}, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTM4NTA4OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/projects/ProjectUserGroupsAjaxController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTowNzozNVrOGaiv5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo0OTo1MVrOGakz7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ4NTQ3OA==", "bodyText": "We should probably set this as a bad request instead of an internal server error as this really isn't an internal server error", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430485478", "createdAt": "2020-05-26T15:07:35Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/projects/ProjectUserGroupsAjaxController.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.projects;\n+\n+import java.util.List;\n+import java.util.Locale;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+\n+import ca.corefacility.bioinformatics.irida.exceptions.ProjectWithoutOwnerException;\n+import ca.corefacility.bioinformatics.irida.model.user.group.UserGroup;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.NewMemberRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ProjectUserGroupsTableModel;\n+import ca.corefacility.bioinformatics.irida.ria.web.models.tables.TableRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.models.tables.TableResponse;\n+import ca.corefacility.bioinformatics.irida.ria.web.services.UIProjectUserGroupsService;\n+\n+/**\n+ * UI Ajax Controller for handling project user groups\n+ */\n+@RestController\n+@RequestMapping(\"/ajax/projects/{projectId}/user-groups\")\n+public class ProjectUserGroupsAjaxController {\n+\tprivate final UIProjectUserGroupsService service;\n+\n+\t@Autowired\n+\tpublic ProjectUserGroupsAjaxController(UIProjectUserGroupsService service) {\n+\t\tthis.service = service;\n+\t}\n+\n+\t/**\n+\t * Get a table page of {@link ProjectUserGroupsTableModel}\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param request   {@link TableRequest} details about the current page of the table\n+\t * @return {@link TableResponse}\n+\t */\n+\t@RequestMapping(\"\")\n+\tpublic ResponseEntity<TableResponse<ProjectUserGroupsTableModel>> getProjectUserGroups(@PathVariable Long projectId,\n+\t\t\t@RequestBody TableRequest request) {\n+\t\treturn ResponseEntity.ok(service.getUserGroupsForProject(projectId, request));\n+\t}\n+\n+\t/**\n+\t * Remove a user group from a project\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param groupId   Identifier for an user group\n+\t * @param locale    current users locale\n+\t * @return message to user about the result of removing the user group\n+\t */\n+\t@RequestMapping(value = \"\", method = RequestMethod.DELETE)\n+\tpublic ResponseEntity<String> removeUserGroupFromProject(@PathVariable long projectId, @RequestParam long groupId,\n+\t\t\tLocale locale) {\n+\t\treturn ResponseEntity.ok(service.removeUserGroupFromProject(projectId, groupId, locale));\n+\t}\n+\n+\t/**\n+\t * Get a list of user groups that are not on the current project\n+\t *\n+\t * @param projectId Identifier for the current project\n+\t * @param query     Filter string to search the existing user groups by\n+\t * @return List of user groups\n+\t */\n+\t@RequestMapping(\"/available\")\n+\tpublic ResponseEntity<List<UserGroup>> getAvailableUserGroupsForProject(@PathVariable Long projectId,\n+\t\t\t@RequestParam String query) {\n+\t\treturn ResponseEntity.ok(service.getAvailableUserGroupsForProject(projectId, query));\n+\t}\n+\n+\t/**\n+\t * Add a user group to the current project\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param request   Identifier for an user group\n+\t * @param locale    Current users locale\n+\t * @return message to user about the outcome of adding the user group to the project\n+\t */\n+\t@RequestMapping(value = \"/add\", method = RequestMethod.POST)\n+\tpublic ResponseEntity<String> addUserGroupToProject(@PathVariable Long projectId,\n+\t\t\t@RequestBody NewMemberRequest request, Locale locale) {\n+\t\treturn ResponseEntity.ok(service.addUserGroupToProject(projectId, request, locale));\n+\t}\n+\n+\t/**\n+\t * Update the project role of a user group on the current project\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param id        Identifier for an user group\n+\t * @param role      Role to update the user group to\n+\t * @param locale    Current users locale\n+\t * @return message to user about the result of the update\n+\t */\n+\t@RequestMapping(value = \"/role\", method = RequestMethod.PUT)\n+\tpublic ResponseEntity<String> updateUserGroupRoleOnProject(@PathVariable Long projectId, @RequestParam Long id,\n+\t\t\t@RequestParam String role, Locale locale) {\n+\t\ttry {\n+\t\t\treturn ResponseEntity.ok(service.updateUserGroupRoleOnProject(projectId, id, role, locale));\n+\t\t} catch (ProjectWithoutOwnerException e) {\n+\t\t\treturn ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUxOTI3Nw==", "bodyText": "Updated in 8fc41cc", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430519277", "createdAt": "2020-05-26T15:49:51Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/projects/ProjectUserGroupsAjaxController.java", "diffHunk": "@@ -0,0 +1,105 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.projects;\n+\n+import java.util.List;\n+import java.util.Locale;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.HttpStatus;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+\n+import ca.corefacility.bioinformatics.irida.exceptions.ProjectWithoutOwnerException;\n+import ca.corefacility.bioinformatics.irida.model.user.group.UserGroup;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.NewMemberRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ProjectUserGroupsTableModel;\n+import ca.corefacility.bioinformatics.irida.ria.web.models.tables.TableRequest;\n+import ca.corefacility.bioinformatics.irida.ria.web.models.tables.TableResponse;\n+import ca.corefacility.bioinformatics.irida.ria.web.services.UIProjectUserGroupsService;\n+\n+/**\n+ * UI Ajax Controller for handling project user groups\n+ */\n+@RestController\n+@RequestMapping(\"/ajax/projects/{projectId}/user-groups\")\n+public class ProjectUserGroupsAjaxController {\n+\tprivate final UIProjectUserGroupsService service;\n+\n+\t@Autowired\n+\tpublic ProjectUserGroupsAjaxController(UIProjectUserGroupsService service) {\n+\t\tthis.service = service;\n+\t}\n+\n+\t/**\n+\t * Get a table page of {@link ProjectUserGroupsTableModel}\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param request   {@link TableRequest} details about the current page of the table\n+\t * @return {@link TableResponse}\n+\t */\n+\t@RequestMapping(\"\")\n+\tpublic ResponseEntity<TableResponse<ProjectUserGroupsTableModel>> getProjectUserGroups(@PathVariable Long projectId,\n+\t\t\t@RequestBody TableRequest request) {\n+\t\treturn ResponseEntity.ok(service.getUserGroupsForProject(projectId, request));\n+\t}\n+\n+\t/**\n+\t * Remove a user group from a project\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param groupId   Identifier for an user group\n+\t * @param locale    current users locale\n+\t * @return message to user about the result of removing the user group\n+\t */\n+\t@RequestMapping(value = \"\", method = RequestMethod.DELETE)\n+\tpublic ResponseEntity<String> removeUserGroupFromProject(@PathVariable long projectId, @RequestParam long groupId,\n+\t\t\tLocale locale) {\n+\t\treturn ResponseEntity.ok(service.removeUserGroupFromProject(projectId, groupId, locale));\n+\t}\n+\n+\t/**\n+\t * Get a list of user groups that are not on the current project\n+\t *\n+\t * @param projectId Identifier for the current project\n+\t * @param query     Filter string to search the existing user groups by\n+\t * @return List of user groups\n+\t */\n+\t@RequestMapping(\"/available\")\n+\tpublic ResponseEntity<List<UserGroup>> getAvailableUserGroupsForProject(@PathVariable Long projectId,\n+\t\t\t@RequestParam String query) {\n+\t\treturn ResponseEntity.ok(service.getAvailableUserGroupsForProject(projectId, query));\n+\t}\n+\n+\t/**\n+\t * Add a user group to the current project\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param request   Identifier for an user group\n+\t * @param locale    Current users locale\n+\t * @return message to user about the outcome of adding the user group to the project\n+\t */\n+\t@RequestMapping(value = \"/add\", method = RequestMethod.POST)\n+\tpublic ResponseEntity<String> addUserGroupToProject(@PathVariable Long projectId,\n+\t\t\t@RequestBody NewMemberRequest request, Locale locale) {\n+\t\treturn ResponseEntity.ok(service.addUserGroupToProject(projectId, request, locale));\n+\t}\n+\n+\t/**\n+\t * Update the project role of a user group on the current project\n+\t *\n+\t * @param projectId Identifier for a project\n+\t * @param id        Identifier for an user group\n+\t * @param role      Role to update the user group to\n+\t * @param locale    Current users locale\n+\t * @return message to user about the result of the update\n+\t */\n+\t@RequestMapping(value = \"/role\", method = RequestMethod.PUT)\n+\tpublic ResponseEntity<String> updateUserGroupRoleOnProject(@PathVariable Long projectId, @RequestParam Long id,\n+\t\t\t@RequestParam String role, Locale locale) {\n+\t\ttry {\n+\t\t\treturn ResponseEntity.ok(service.updateUserGroupRoleOnProject(projectId, id, role, locale));\n+\t\t} catch (ProjectWithoutOwnerException e) {\n+\t\t\treturn ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ4NTQ3OA=="}, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTQyMTQ1OnYy", "diffSide": "RIGHT", "path": "src/main/resources/i18n/messages.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNToxNTo1MFrOGajHIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo1Mjo0OFrOGak8LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5MTQyNw==", "bodyText": "Can you change the - to . here and in the translation keys below? Just to keep with the format we have for the keys", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430491427", "createdAt": "2020-05-26T15:15:50Z", "author": {"login": "deepsidhu85"}, "path": "src/main/resources/i18n/messages.properties", "diffHunk": "@@ -369,6 +369,25 @@ AddMemberButton.modal.user-help=Search by first name, last name, or username.\n AddMemberButton.modal.role=Project Role\n AddMemberButton.modal.okText=Add Member\n \n+# ========================================================================================== #\n+# Project User Groups                                                                        #\n+# ========================================================================================== #\n+server.usergroups.remove-group.success={0} removed from this project.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUyMTM4OA==", "bodyText": "Updated in d2184e5", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430521388", "createdAt": "2020-05-26T15:52:48Z", "author": {"login": "joshsadam"}, "path": "src/main/resources/i18n/messages.properties", "diffHunk": "@@ -369,6 +369,25 @@ AddMemberButton.modal.user-help=Search by first name, last name, or username.\n AddMemberButton.modal.role=Project Role\n AddMemberButton.modal.okText=Add Member\n \n+# ========================================================================================== #\n+# Project User Groups                                                                        #\n+# ========================================================================================== #\n+server.usergroups.remove-group.success={0} removed from this project.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5MTQyNw=="}, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTQyNTc2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/apis/projects/user-groups.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNToxNjo1M1rOGajJ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTo1NToyOVrOGalD2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5MjE1NQ==", "bodyText": "Function comments", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430492155", "createdAt": "2020-05-26T15:16:53Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/apis/projects/user-groups.js", "diffHunk": "@@ -0,0 +1,28 @@\n+import axios from \"axios\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUyMzM1Mg==", "bodyText": "Updated in 3e455c1", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430523352", "createdAt": "2020-05-26T15:55:29Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/apis/projects/user-groups.js", "diffHunk": "@@ -0,0 +1,28 @@\n+import axios from \"axios\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5MjE1NQ=="}, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTQ3MTUxOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/components/project-user-groups/AddGroupButton.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNToyNToyNlrOGajmkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjoxNDoxMFrOGal3fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5OTQ3NA==", "bodyText": "Clicking the cancel or x button in the modal results in the modal just refreshing and not actually closing", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430499474", "createdAt": "2020-05-26T15:25:26Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/components/project-user-groups/AddGroupButton.jsx", "diffHunk": "@@ -77,87 +79,84 @@ export function AddMembersButton() {\n     visible,\n   });\n \n-  /*\n-  Watch for changes to the forms visibility, when it becomes visible\n-  set keyboard focus onto the user name input.\n-   */\n-  useEffect(() => {\n-    if (visible) {\n-      setTimeout(() => userRef.current.focus(), 100);\n-    }\n-  }, [visible]);\n-\n   /*\n   Watch for changes to the debounced entered value for the user search.\n   Once it changes send a request for filtered users.\n    */\n   useEffect(() => {\n     if (debouncedQuery) {\n-      getAvailableUsersForProject(debouncedQuery).then((data) =>\n+      getAvailableGroupsForProject(debouncedQuery).then((data) =>\n         setResults(data)\n       );\n     } else {\n       setResults([]);\n     }\n   }, [debouncedQuery]);\n \n+  /*\n+  Watch for changes to the forms visibility, when it becomes visible\n+  set keyboard focus onto the user name input.\n+   */\n+  useEffect(() => {\n+    if (visible) {\n+      setTimeout(() => groupRef.current.focus(), 100);\n+    }\n+  }, [visible]);\n+\n+  /*\n+  Close the modal and reset the fields\n+   */\n+  const onCancel = () => {\n+    form.resetFields();\n+    setVisible(false);\n+  };\n+\n+  /*\n+  Add the user group\n+   */\n+  const addUserGroup = () => {\n+    addUserGroupToProject({ groupId, role }).then((message) => {\n+      onGroupAdded();\n+      notification.success({ message });\n+      form.resetFields();\n+      setVisible(false);\n+    });\n+  };\n+\n   /*\n   Before rendering format the results into Select.Option\n    */\n   const options = results.map((u) => (\n     <Option className=\"t-new-member\" key={u.identifier}>\n       <Text style={{ marginRight: SPACE_XS }}>{u.label}</Text>\n-      <Text type=\"secondary\">{u.username}</Text>\n     </Option>\n   ));\n \n-  /**\n-   * Called when the user clicks the ok button.\n-   */\n-  const addUserToProject = () => {\n-    addMemberToProject({ id: userId, role })\n-      .then((message) => {\n-        updateTable();\n-        notification.success({ message });\n-        setVisible(false);\n-      })\n-      .catch((message) => notification.error({ message }));\n-  };\n-\n   return (\n-    <>\n-      <Button className=\"t-add-member-btn\" onClick={() => setVisible(true)}>\n-        {i18n(\"AddMemberButton.label\")}\n-      </Button>\n-      <Modal\n-        className=\"t-add-member-modal\"\n-        visible={visible}\n-        okButtonProps={{ disabled: typeof userId === \"undefined\" }}\n-        onCancel={() => setVisible(false)}\n-        title={i18n(\"AddMemberButton.modal.title\")}\n-        onOk={addUserToProject}\n-        okText={i18n(\"AddMemberButton.modal.okText\")}\n-      >\n-        <Form layout=\"vertical\" form={form} initialValues={{ role }}>\n+    <Button onClick={() => setVisible(true)}>\n+      {i18n(\"AddGroupButton.label\")}\n+      <Modal onCancel={onCancel} visible={visible} onOk={addUserGroup}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 169}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzNjU3Mg==", "bodyText": "Fixed in a86d8c7", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430536572", "createdAt": "2020-05-26T16:14:10Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/components/project-user-groups/AddGroupButton.jsx", "diffHunk": "@@ -77,87 +79,84 @@ export function AddMembersButton() {\n     visible,\n   });\n \n-  /*\n-  Watch for changes to the forms visibility, when it becomes visible\n-  set keyboard focus onto the user name input.\n-   */\n-  useEffect(() => {\n-    if (visible) {\n-      setTimeout(() => userRef.current.focus(), 100);\n-    }\n-  }, [visible]);\n-\n   /*\n   Watch for changes to the debounced entered value for the user search.\n   Once it changes send a request for filtered users.\n    */\n   useEffect(() => {\n     if (debouncedQuery) {\n-      getAvailableUsersForProject(debouncedQuery).then((data) =>\n+      getAvailableGroupsForProject(debouncedQuery).then((data) =>\n         setResults(data)\n       );\n     } else {\n       setResults([]);\n     }\n   }, [debouncedQuery]);\n \n+  /*\n+  Watch for changes to the forms visibility, when it becomes visible\n+  set keyboard focus onto the user name input.\n+   */\n+  useEffect(() => {\n+    if (visible) {\n+      setTimeout(() => groupRef.current.focus(), 100);\n+    }\n+  }, [visible]);\n+\n+  /*\n+  Close the modal and reset the fields\n+   */\n+  const onCancel = () => {\n+    form.resetFields();\n+    setVisible(false);\n+  };\n+\n+  /*\n+  Add the user group\n+   */\n+  const addUserGroup = () => {\n+    addUserGroupToProject({ groupId, role }).then((message) => {\n+      onGroupAdded();\n+      notification.success({ message });\n+      form.resetFields();\n+      setVisible(false);\n+    });\n+  };\n+\n   /*\n   Before rendering format the results into Select.Option\n    */\n   const options = results.map((u) => (\n     <Option className=\"t-new-member\" key={u.identifier}>\n       <Text style={{ marginRight: SPACE_XS }}>{u.label}</Text>\n-      <Text type=\"secondary\">{u.username}</Text>\n     </Option>\n   ));\n \n-  /**\n-   * Called when the user clicks the ok button.\n-   */\n-  const addUserToProject = () => {\n-    addMemberToProject({ id: userId, role })\n-      .then((message) => {\n-        updateTable();\n-        notification.success({ message });\n-        setVisible(false);\n-      })\n-      .catch((message) => notification.error({ message }));\n-  };\n-\n   return (\n-    <>\n-      <Button className=\"t-add-member-btn\" onClick={() => setVisible(true)}>\n-        {i18n(\"AddMemberButton.label\")}\n-      </Button>\n-      <Modal\n-        className=\"t-add-member-modal\"\n-        visible={visible}\n-        okButtonProps={{ disabled: typeof userId === \"undefined\" }}\n-        onCancel={() => setVisible(false)}\n-        title={i18n(\"AddMemberButton.modal.title\")}\n-        onOk={addUserToProject}\n-        okText={i18n(\"AddMemberButton.modal.okText\")}\n-      >\n-        <Form layout=\"vertical\" form={form} initialValues={{ role }}>\n+    <Button onClick={() => setVisible(true)}>\n+      {i18n(\"AddGroupButton.label\")}\n+      <Modal onCancel={onCancel} visible={visible} onOk={addUserGroup}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ5OTQ3NA=="}, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 169}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTUxNDI2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/UserGroupsPage/components/UserGroupMembersTable.jsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTozNDozOVrOGakBrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxODowMDowOVrOGap-Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUwNjQxMg==", "bodyText": "A question related to this file. Should it be allowed for a group to be left without an owner? Testing this out on the group members table let's me change the owner to a member (currently only the one member is a part of the group)?", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430506412", "createdAt": "2020-05-26T15:34:39Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/UserGroupsPage/components/UserGroupMembersTable.jsx", "diffHunk": "@@ -35,21 +34,6 @@ export default function UserGroupMembersTable({\n   groupId,\n   updateTable,\n }) {\n-  const { roles } = useContext(UserGroupRolesContext);\n-\n-  /**\n-   * Remove a member from the group, and then refresh the table.\n-   * @param user\n-   * @returns {void | Promise<AxiosResponse<*>>}\n-   */\n-  function removeMember(user) {\n-    return removeMemberFromUserGroup({ groupId, userId: user.id }).then(\n-      (message) => {\n-        updateTable();\n-        return message;\n-      }\n-    );\n-  }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU4Njc4MA==", "bodyText": "The method to assess this is completely screwed, trying to fix it now", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430586780", "createdAt": "2020-05-26T17:32:53Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/UserGroupsPage/components/UserGroupMembersTable.jsx", "diffHunk": "@@ -35,21 +34,6 @@ export default function UserGroupMembersTable({\n   groupId,\n   updateTable,\n }) {\n-  const { roles } = useContext(UserGroupRolesContext);\n-\n-  /**\n-   * Remove a member from the group, and then refresh the table.\n-   * @param user\n-   * @returns {void | Promise<AxiosResponse<*>>}\n-   */\n-  function removeMember(user) {\n-    return removeMemberFromUserGroup({ groupId, userId: user.id }).then(\n-      (message) => {\n-        updateTable();\n-        return message;\n-      }\n-    );\n-  }\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUwNjQxMg=="}, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDYwMzgzOA==", "bodyText": "Fixed in 3a15ed6", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430603838", "createdAt": "2020-05-26T18:00:09Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/UserGroupsPage/components/UserGroupMembersTable.jsx", "diffHunk": "@@ -35,21 +34,6 @@ export default function UserGroupMembersTable({\n   groupId,\n   updateTable,\n }) {\n-  const { roles } = useContext(UserGroupRolesContext);\n-\n-  /**\n-   * Remove a member from the group, and then refresh the table.\n-   * @param user\n-   * @returns {void | Promise<AxiosResponse<*>>}\n-   */\n-  function removeMember(user) {\n-    return removeMemberFromUserGroup({ groupId, userId: user.id }).then(\n-      (message) => {\n-        updateTable();\n-        return message;\n-      }\n-    );\n-  }\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUwNjQxMg=="}, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTUxNjI1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/UserGroupsPage/index.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTozNTowM1rOGakCzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjozODozNFrOGam3ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUwNjcwMQ==", "bodyText": "File comments", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430506701", "createdAt": "2020-05-26T15:35:03Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/UserGroupsPage/index.js", "diffHunk": "@@ -2,6 +2,8 @@ import React, { lazy, Suspense } from \"react\";\n import { render } from \"react-dom\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU1MjkzMw==", "bodyText": "Done", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430552933", "createdAt": "2020-05-26T16:38:34Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/UserGroupsPage/index.js", "diffHunk": "@@ -2,6 +2,8 @@ import React, { lazy, Suspense } from \"react\";\n import { render } from \"react-dom\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUwNjcwMQ=="}, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTUyNzI1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/UserGroupsPage/index.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTozNzowMVrOGakKDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjozODowOFrOGam2Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUwODU1Nw==", "bodyText": "Shouldn't we use setBaseUrl here? Probably best to set it at the top of the function as it used a couple of times", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430508557", "createdAt": "2020-05-26T15:37:01Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/UserGroupsPage/index.js", "diffHunk": "@@ -30,10 +32,10 @@ export function UserGroups() {\n         </div>\n       }\n     >\n-      <Router style={{ height: \"100%\" }}>\n-        <UserGroupsPage path=\"/groups\" />\n-        <UserGroupsDetailsPage path=\"/groups/:id\" />\n-      </Router>\n+      <RolesProvider rolesFn={getUserGroupRoles}><Router style={{height: \"100%\"}}>\n+        <UserGroupsPage path=\"/groups\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU1MjY1NA==", "bodyText": "This was already addressed in a different merge and will be addressed by merging in dev", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430552654", "createdAt": "2020-05-26T16:38:08Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/UserGroupsPage/index.js", "diffHunk": "@@ -30,10 +32,10 @@ export function UserGroups() {\n         </div>\n       }\n     >\n-      <Router style={{ height: \"100%\" }}>\n-        <UserGroupsPage path=\"/groups\" />\n-        <UserGroupsDetailsPage path=\"/groups/:id\" />\n-      </Router>\n+      <RolesProvider rolesFn={getUserGroupRoles}><Router style={{height: \"100%\"}}>\n+        <UserGroupsPage path=\"/groups\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUwODU1Nw=="}, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTUzMDM4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/projects/ProjectUserGroups.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTozNzozM1rOGakMLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjozOTozNVrOGam6pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUwOTEwMA==", "bodyText": "File comments", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430509100", "createdAt": "2020-05-26T15:37:33Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/projects/ProjectUserGroups.jsx", "diffHunk": "@@ -0,0 +1,25 @@\n+import React from \"react\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDU1Mzc2Ng==", "bodyText": "Updated in 144312e", "url": "https://github.com/phac-nml/irida/pull/697#discussion_r430553766", "createdAt": "2020-05-26T16:39:35Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/projects/ProjectUserGroups.jsx", "diffHunk": "@@ -0,0 +1,25 @@\n+import React from \"react\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUwOTEwMA=="}, "originalCommit": {"oid": "5b55997cbd03fe33112f60afa242c57db86205e0"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 881, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}