{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMTg0OTEz", "number": 614, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzowMDo0OFrODlIE4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzowMTo0NlrODlIGKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjU2MjI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzowMDo0OFrOFx1rig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNToxOTo1M1rOFyXvtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNDA0Mg==", "bodyText": "The sorter function is exactly the same as what is on line 265.  Want to make that it's own method?", "url": "https://github.com/phac-nml/irida/pull/614#discussion_r387804042", "createdAt": "2020-03-04T17:00:48Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java", "diffHunk": "@@ -277,6 +275,22 @@ public String getDetailsPage(@PathVariable Long submissionId, Model model, Local\n \t\t}).collect(Collectors.toList());\n \t\tmodel.addAttribute(\"paired_end\", sampleFiles);\n \n+\t\t// - Single\n+\t\tSet<SingleEndSequenceFile> inputFilesSingle = sequencingObjectService.getSequencingObjectsOfTypeForAnalysisSubmission(\n+\t\t\t\tsubmission, SingleEndSequenceFile.class);\n+\t\tList<SampleSingleFiles> singleFiles = inputFilesSingle.stream().map(SampleSingleFiles::new).sorted((a, b) -> {\n+\t\t\tif (a.sample == null && b.sample == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "005bfd97cde873aafff9153b8eace882a9f65068"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyMzcwMA==", "bodyText": "Took this sort away by making the class comparable in 2da4fa3", "url": "https://github.com/phac-nml/irida/pull/614#discussion_r387823700", "createdAt": "2020-03-04T17:35:29Z", "author": {"login": "tom114"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java", "diffHunk": "@@ -277,6 +275,22 @@ public String getDetailsPage(@PathVariable Long submissionId, Model model, Local\n \t\t}).collect(Collectors.toList());\n \t\tmodel.addAttribute(\"paired_end\", sampleFiles);\n \n+\t\t// - Single\n+\t\tSet<SingleEndSequenceFile> inputFilesSingle = sequencingObjectService.getSequencingObjectsOfTypeForAnalysisSubmission(\n+\t\t\t\tsubmission, SingleEndSequenceFile.class);\n+\t\tList<SampleSingleFiles> singleFiles = inputFilesSingle.stream().map(SampleSingleFiles::new).sorted((a, b) -> {\n+\t\t\tif (a.sample == null && b.sample == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNDA0Mg=="}, "originalCommit": {"oid": "005bfd97cde873aafff9153b8eace882a9f65068"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM2MjE2NQ==", "bodyText": "I really like how you re-wrote this, thanks :)", "url": "https://github.com/phac-nml/irida/pull/614#discussion_r388362165", "createdAt": "2020-03-05T15:19:53Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java", "diffHunk": "@@ -277,6 +275,22 @@ public String getDetailsPage(@PathVariable Long submissionId, Model model, Local\n \t\t}).collect(Collectors.toList());\n \t\tmodel.addAttribute(\"paired_end\", sampleFiles);\n \n+\t\t// - Single\n+\t\tSet<SingleEndSequenceFile> inputFilesSingle = sequencingObjectService.getSequencingObjectsOfTypeForAnalysisSubmission(\n+\t\t\t\tsubmission, SingleEndSequenceFile.class);\n+\t\tList<SampleSingleFiles> singleFiles = inputFilesSingle.stream().map(SampleSingleFiles::new).sorted((a, b) -> {\n+\t\t\tif (a.sample == null && b.sample == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNDA0Mg=="}, "originalCommit": {"oid": "005bfd97cde873aafff9153b8eace882a9f65068"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjU2NTU1OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzowMTo0NlrOFx1tsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzozMToxMVrOFx2vUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNDU5Mg==", "bodyText": "Why did you make this a private class when we have been keeping all our UI models in dto packages?", "url": "https://github.com/phac-nml/irida/pull/614#discussion_r387804592", "createdAt": "2020-03-04T17:01:46Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java", "diffHunk": "@@ -1114,4 +1128,37 @@ public SequenceFilePair getSequenceFilePair() {\n \t\t\treturn sequenceFilePair;\n \t\t}\n \t}\n+\n+\t/**\n+\t * UI Model to return a single end sequence file with its sample", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "005bfd97cde873aafff9153b8eace882a9f65068"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyMTM5NA==", "bodyText": "I was just duplicating what was done above in the paired version of the class.  I refactored this down to a single private class now in 2da4fa3.  I didn't put it into a separate dto class because the constructor is using some service calls to pick up the associated sample.\nNote this will all get removed anyway when the new analysis pages are done.", "url": "https://github.com/phac-nml/irida/pull/614#discussion_r387821394", "createdAt": "2020-03-04T17:31:11Z", "author": {"login": "tom114"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/analysis/AnalysisController.java", "diffHunk": "@@ -1114,4 +1128,37 @@ public SequenceFilePair getSequenceFilePair() {\n \t\t\treturn sequenceFilePair;\n \t\t}\n \t}\n+\n+\t/**\n+\t * UI Model to return a single end sequence file with its sample", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgwNDU5Mg=="}, "originalCommit": {"oid": "005bfd97cde873aafff9153b8eace882a9f65068"}, "originalPosition": 100}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 816, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}