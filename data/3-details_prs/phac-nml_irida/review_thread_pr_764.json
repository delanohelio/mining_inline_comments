{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MzUxMjMx", "number": 764, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMTowMTo0NVrOES_b7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODozNjo1OVrOETYMeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MzQ5MTY2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/projects/metadata/ProjectSampleMetadataController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMTowMTo0NVrOG4et6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMTowMTo0NVrOG4et6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg3NjcxNQ==", "bodyText": "This seems to work for me, glad it was that straightforwad.  Even rounding seems to happen the same as expected.  Can you add a comment about why it's being added?", "url": "https://github.com/phac-nml/irida/pull/764#discussion_r461876715", "createdAt": "2020-07-28T21:01:45Z", "author": {"login": "tom114"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/projects/metadata/ProjectSampleMetadataController.java", "diffHunk": "@@ -132,14 +132,22 @@ public SampleMetadataStorage createProjectSampleMetadata(HttpSession session, @P\n \t\t\t\tIterator<Cell> cellIterator = row.cellIterator();\n \t\t\t\twhile (cellIterator.hasNext()) {\n \t\t\t\t\tCell cell = cellIterator.next();\n+\n \t\t\t\t\tint columnIndex = cell.getColumnIndex();\n \t\t\t\t\tif (columnIndex < headers.size()) {\n \t\t\t\t\t\tString header = headers.get(columnIndex);\n \n \t\t\t\t\t\tif (!Strings.isNullOrEmpty(header)) {\n \t\t\t\t\t\t\t// Need to ignore empty headers.\n-\t\t\t\t\t\t\tcell.setCellType(CellType.STRING);\n-\t\t\t\t\t\t\trowMap.put(header, cell.getStringCellValue());\n+\t\t\t\t\t\t\tif(cell.getCellTypeEnum().equals(CellType.NUMERIC)) {\n+\t\t\t\t\t\t\t\tDataFormatter formatter = new DataFormatter();\n+\t\t\t\t\t\t\t\tString value = formatter.formatCellValue(cell);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68081c2382124056a5a4ec1c2c6502bc69f1def5"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NzU0ODA4OnYy", "diffSide": "RIGHT", "path": "src/test/java/ca/corefacility/bioinformatics/irida/ria/integration/pages/projects/ProjectSampleMetadataImportPage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODozNjo1OVrOG5FLYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODo0NDoxOVrOG5Fb1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUwNjg1MA==", "bodyText": "This method is a bit too specific to the test data being used in ProjectSampleMetadataImportPageIT.java.  Can you change it to accept the header name as a string so it can be passed in by the test?  That way we can better reuse this page object if we wanted different input data.", "url": "https://github.com/phac-nml/irida/pull/764#discussion_r462506850", "createdAt": "2020-07-29T18:36:59Z", "author": {"login": "tom114"}, "path": "src/test/java/ca/corefacility/bioinformatics/irida/ria/integration/pages/projects/ProjectSampleMetadataImportPage.java", "diffHunk": "@@ -55,4 +58,15 @@ public int getFoundCount() {\n \tpublic int getMissingCount() {\n \t\treturn Integer.parseInt(missingPill.findElement(By.className(\"badge\")).getText());\n \t}\n+\n+\tpublic List<String> getNumberColumnValues() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8225710892b864fec5f931b454e69addbe6ad003"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxMTA2MA==", "bodyText": "Updated", "url": "https://github.com/phac-nml/irida/pull/764#discussion_r462511060", "createdAt": "2020-07-29T18:44:19Z", "author": {"login": "joshsadam"}, "path": "src/test/java/ca/corefacility/bioinformatics/irida/ria/integration/pages/projects/ProjectSampleMetadataImportPage.java", "diffHunk": "@@ -55,4 +58,15 @@ public int getFoundCount() {\n \tpublic int getMissingCount() {\n \t\treturn Integer.parseInt(missingPill.findElement(By.className(\"badge\")).getText());\n \t}\n+\n+\tpublic List<String> getNumberColumnValues() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUwNjg1MA=="}, "originalCommit": {"oid": "8225710892b864fec5f931b454e69addbe6ad003"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 691, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}