{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxOTQ2NTA5", "number": 794, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzoxODo1OFrOEhx5Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzozNTo1MlrOEhyQRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODU1OTA2OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxCreateItemResponse.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzoxODo1OFrOHPSNKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzoxODo1OFrOHPSNKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc4ODk2OA==", "bodyText": "Can we change this to AjaxCreateItemSuccessResponse? Just so we stay consistent as we have the AjaxErrorResponse", "url": "https://github.com/phac-nml/irida/pull/794#discussion_r485788968", "createdAt": "2020-09-09T17:18:58Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxCreateItemResponse.java", "diffHunk": "@@ -0,0 +1,17 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ajax;\n+\n+/**\n+ * UI Response for successfully creating an item.  Since all items in IRIDA require an id,\n+ * the identifier is returned to the client on successful creation.\n+ */\n+public class AjaxCreateItemResponse extends AjaxResponse {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db7a332b118d4b1cfee5bcacbeee8854b00da402"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODYwNjA3OnYy", "diffSide": "RIGHT", "path": "src/main/resources/i18n/messages.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzozMjowOVrOHPSraA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzozMjowOVrOHPSraA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc5NjcxMg==", "bodyText": "Change to CLIENT ID", "url": "https://github.com/phac-nml/irida/pull/794#discussion_r485796712", "createdAt": "2020-09-09T17:32:09Z", "author": {"login": "deepsidhu85"}, "path": "src/main/resources/i18n/messages.properties", "diffHunk": "@@ -1109,8 +1109,68 @@ sf.tooltip.sistr=SISTR\n sf.tooltip.qc=Quality Control\n fastqc.file.processor.analysis.description=Analysis produced by FastQC (Version {0})\n \n-# Clients\n-clients.title=Clients\n+# ========================================================================================== #\n+# CLIENTS                                                                                    #\n+# ========================================================================================== #\n+\n+ClientListingPage.title=Clients\n+\n+ClientsTable.column.id=ID\n+ClientsTable.column.clientId=Client Id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db7a332b118d4b1cfee5bcacbeee8854b00da402"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzODYxODI5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/apis/clients/clients.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzozNTo1MlrOHPSzZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNzozNTo1MlrOHPSzZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTc5ODc1OQ==", "bodyText": "Add function comments", "url": "https://github.com/phac-nml/irida/pull/794#discussion_r485798759", "createdAt": "2020-09-09T17:35:52Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/apis/clients/clients.js", "diffHunk": "@@ -1,10 +1,21 @@\n import axios from \"axios\";\n+import { setBaseUrl } from \"../../utilities/url-utilities\";\n+\n+const BASE_URL = setBaseUrl(`/ajax/clients`);\n \n /**\n  * Revoke all tokens for a given client by identifier.\n  * @param {number} id for the client\n  * @return {Promise<AxiosResponse<T>>}\n  */\n export async function revokeClientTokens(id) {\n-  return await axios.delete(`clients/ajax/revoke?id=${id}`);\n+  return await axios.delete(`${BASE_URL}/revoke?id=${id}`);\n+}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db7a332b118d4b1cfee5bcacbeee8854b00da402"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 722, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}