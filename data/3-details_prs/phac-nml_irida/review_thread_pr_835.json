{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5MDcwOTYz", "number": 835, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMDozMToxMVrOEyR84w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODoyMTowMVrOEzbQ0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTU4MzcxOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQC.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMDozMToxMVrOHo1JBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNToyMToyN1rOHpB7Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU3NTc1MA==", "bodyText": "Make sure to set up the onBack handler which should take you back to the sample files page.", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r512575750", "createdAt": "2020-10-27T10:31:11Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQC.jsx", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * This file is responsible for displaying the\n+ * tabs required and default renders the\n+ * FastQCCharts component.\n+ */\n+\n+import React, { Suspense, useEffect, useState } from \"react\";\n+import { setBaseUrl } from \"../../../utilities/url-utilities\";\n+import { PageWrapper } from \"../../../components/page/PageWrapper\";\n+import { Link, Location, Router } from \"@reach/router\";\n+import { Badge, Menu } from \"antd\";\n+import { ContentLoading } from \"../../../components/loader\";\n+\n+import { SPACE_MD, SPACE_XS } from \"../../../styles/spacing\"\n+import { getFastQCDetails } from \"../../../apis/files/sequence-files\";\n+import {\n+  seqObjId,\n+  seqFileId,\n+  urlMatch\n+} from \"../fastqc-constants\";\n+import { InfoAlert } from \"../../../components/alerts\";\n+import { blue6 } from \"../../../styles/colors\";\n+\n+const FastQCDetails = React.lazy(() => import(\"./FastQCDetails\"));\n+const FastQCCharts = React.lazy(() => import(\"./FastQCCharts\"));\n+const OverRepresentedSequences = React.lazy(() => import(\"./OverRepresentedSequences\"));\n+\n+export default function FastQC() {\n+  const [loading, setLoading] = useState(true);\n+  const [fastQC, setFastQC] = useState({});\n+  const [file, setFile] = useState({});\n+\n+  const DEFAULT_URL = setBaseUrl(urlMatch[0]);\n+\n+  const [selectedKeys, setSelectedKeys] = React.useState(() => {\n+    // Create a regex from the string with an additional string at the end\n+    const regexStr = urlMatch[0] + \"/(\\\\w*)?\";\n+    const urlRegex = new RegExp(regexStr, \"i\");\n+\n+    const urlMatchRegex = window.location.href.match(urlRegex);\n+    // Grab the key if it exists from the match array otherwise default to 'charts'\n+    return urlMatchRegex !== null ? urlMatchRegex[1] : \"charts\";\n+  });\n+\n+  useEffect(() => {\n+    getFastQCDetails(seqObjId, seqFileId).then(({ analysisFastQC, sequenceFile }) => {\n+      setFile(sequenceFile);\n+      setFastQC(analysisFastQC);\n+      setLoading(false);\n+    });\n+  }, []);\n+\n+  return (\n+    <PageWrapper title={file.fileName}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed4f2289929a35edd9e10b1dd6a7764021712b52"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc4NTI0Mg==", "bodyText": "As discussed we are going to leave this for now", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r512785242", "createdAt": "2020-10-27T15:21:27Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQC.jsx", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * This file is responsible for displaying the\n+ * tabs required and default renders the\n+ * FastQCCharts component.\n+ */\n+\n+import React, { Suspense, useEffect, useState } from \"react\";\n+import { setBaseUrl } from \"../../../utilities/url-utilities\";\n+import { PageWrapper } from \"../../../components/page/PageWrapper\";\n+import { Link, Location, Router } from \"@reach/router\";\n+import { Badge, Menu } from \"antd\";\n+import { ContentLoading } from \"../../../components/loader\";\n+\n+import { SPACE_MD, SPACE_XS } from \"../../../styles/spacing\"\n+import { getFastQCDetails } from \"../../../apis/files/sequence-files\";\n+import {\n+  seqObjId,\n+  seqFileId,\n+  urlMatch\n+} from \"../fastqc-constants\";\n+import { InfoAlert } from \"../../../components/alerts\";\n+import { blue6 } from \"../../../styles/colors\";\n+\n+const FastQCDetails = React.lazy(() => import(\"./FastQCDetails\"));\n+const FastQCCharts = React.lazy(() => import(\"./FastQCCharts\"));\n+const OverRepresentedSequences = React.lazy(() => import(\"./OverRepresentedSequences\"));\n+\n+export default function FastQC() {\n+  const [loading, setLoading] = useState(true);\n+  const [fastQC, setFastQC] = useState({});\n+  const [file, setFile] = useState({});\n+\n+  const DEFAULT_URL = setBaseUrl(urlMatch[0]);\n+\n+  const [selectedKeys, setSelectedKeys] = React.useState(() => {\n+    // Create a regex from the string with an additional string at the end\n+    const regexStr = urlMatch[0] + \"/(\\\\w*)?\";\n+    const urlRegex = new RegExp(regexStr, \"i\");\n+\n+    const urlMatchRegex = window.location.href.match(urlRegex);\n+    // Grab the key if it exists from the match array otherwise default to 'charts'\n+    return urlMatchRegex !== null ? urlMatchRegex[1] : \"charts\";\n+  });\n+\n+  useEffect(() => {\n+    getFastQCDetails(seqObjId, seqFileId).then(({ analysisFastQC, sequenceFile }) => {\n+      setFile(sequenceFile);\n+      setFastQC(analysisFastQC);\n+      setLoading(false);\n+    });\n+  }, []);\n+\n+  return (\n+    <PageWrapper title={file.fileName}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU3NTc1MA=="}, "originalCommit": {"oid": "ed4f2289929a35edd9e10b1dd6a7764021712b52"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTYwMzYwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCCharts.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMDozNjowMVrOHo1U_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNToyMTozOFrOHpB8BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU3ODgxNA==", "bodyText": "I think using the Image tag here might be a little overkill.  I think you might want to consider displaying the images at a decent size.  I don't think they need to be clickable since there are only 3.", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r512578814", "createdAt": "2020-10-27T10:36:01Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCCharts.jsx", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * This file renders the FastQC charts component.\n+ */\n+\n+import React, { useEffect, useState } from \"react\";\n+import { Col, Image, Layout , Row, Typography} from \"antd\";\n+import { SPACE_MD } from \"../../../styles/spacing\";\n+import { grey1 } from \"../../../styles/colors\";\n+import { TabPaneContent } from \"../../../components/tabs/TabPaneContent\";\n+import { getFastQCImages } from \"../../../apis/files/sequence-files\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import {\n+  seqObjId,\n+  seqFileId\n+} from \"../fastqc-constants\";\n+\n+export default function FastQCCharts() {\n+\n+  const [loading, setLoading] = useState(true);\n+  const [perBase, setPerBase] = useState(\"\");\n+  const [perSeq, setPerSeq] = useState(\"\");\n+  const [duplicationLevel, setDuplicationLevel] = useState(\"\");\n+  const [fastQCVersion, setFastQCVersion] = useState(\"\");\n+\n+  useEffect(() => {\n+    getFastQCImages(seqObjId, seqFileId).then(({ perbaseChart, persequenceChart, duplicationlevelChart, fastQCVersion }) => {\n+      // Convert the images from byte arrays into a png images\n+      setPerBase(`data:image/png;base64,${perbaseChart}`);\n+      setPerSeq(`data:image/png;base64,${persequenceChart}`);\n+      setDuplicationLevel(`data:image/png;base64,${duplicationlevelChart}`);\n+\n+      setFastQCVersion(fastQCVersion);\n+      setLoading(false);\n+    });\n+  }, []);\n+\n+  return (\n+    <div>\n+    {\n+      loading ?\n+        <ContentLoading message={i18n(\"FastQC.fetchingCharts\")}/>\n+        :\n+        <Layout style={{paddingLeft: SPACE_MD, backgroundColor: grey1}}>\n+          <TabPaneContent title={i18n(\"FastQC.charts\")}>\n+            <Typography.Paragraph>{i18n(\"FastQC.overrepresentedSequencesDescription\", fastQCVersion)}</Typography.Paragraph>\n+            <Row\n+              gutter={[16, 16]}\n+              style={{ padding: SPACE_MD }}\n+            >\n+              <Col sm={24} md={12}>\n+                <Image src={perBase} />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed4f2289929a35edd9e10b1dd6a7764021712b52"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjc4NTQxMg==", "bodyText": "Updated in 4372be3", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r512785412", "createdAt": "2020-10-27T15:21:38Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCCharts.jsx", "diffHunk": "@@ -0,0 +1,65 @@\n+/*\n+ * This file renders the FastQC charts component.\n+ */\n+\n+import React, { useEffect, useState } from \"react\";\n+import { Col, Image, Layout , Row, Typography} from \"antd\";\n+import { SPACE_MD } from \"../../../styles/spacing\";\n+import { grey1 } from \"../../../styles/colors\";\n+import { TabPaneContent } from \"../../../components/tabs/TabPaneContent\";\n+import { getFastQCImages } from \"../../../apis/files/sequence-files\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import {\n+  seqObjId,\n+  seqFileId\n+} from \"../fastqc-constants\";\n+\n+export default function FastQCCharts() {\n+\n+  const [loading, setLoading] = useState(true);\n+  const [perBase, setPerBase] = useState(\"\");\n+  const [perSeq, setPerSeq] = useState(\"\");\n+  const [duplicationLevel, setDuplicationLevel] = useState(\"\");\n+  const [fastQCVersion, setFastQCVersion] = useState(\"\");\n+\n+  useEffect(() => {\n+    getFastQCImages(seqObjId, seqFileId).then(({ perbaseChart, persequenceChart, duplicationlevelChart, fastQCVersion }) => {\n+      // Convert the images from byte arrays into a png images\n+      setPerBase(`data:image/png;base64,${perbaseChart}`);\n+      setPerSeq(`data:image/png;base64,${persequenceChart}`);\n+      setDuplicationLevel(`data:image/png;base64,${duplicationlevelChart}`);\n+\n+      setFastQCVersion(fastQCVersion);\n+      setLoading(false);\n+    });\n+  }, []);\n+\n+  return (\n+    <div>\n+    {\n+      loading ?\n+        <ContentLoading message={i18n(\"FastQC.fetchingCharts\")}/>\n+        :\n+        <Layout style={{paddingLeft: SPACE_MD, backgroundColor: grey1}}>\n+          <TabPaneContent title={i18n(\"FastQC.charts\")}>\n+            <Typography.Paragraph>{i18n(\"FastQC.overrepresentedSequencesDescription\", fastQCVersion)}</Typography.Paragraph>\n+            <Row\n+              gutter={[16, 16]}\n+              style={{ padding: SPACE_MD }}\n+            >\n+              <Col sm={24} md={12}>\n+                <Image src={perBase} />", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU3ODgxNA=="}, "originalCommit": {"oid": "ed4f2289929a35edd9e10b1dd6a7764021712b52"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTYyMjY3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCCharts.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDozNjo0M1rOHqVyDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1NzozNlrOHqf7yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1OTExOA==", "bodyText": "Images look a bit small now.  You may want to consider increasing the widths on the Col spans a little.  Playing a bit just with <Col span={24}> seemed to work ok.  On wider screens it gets really big so maybe set an xl or xxl breakpoint, but I think I would skip the smaller ones.", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514159118", "createdAt": "2020-10-29T10:36:43Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCCharts.jsx", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * This file renders the FastQC charts component.\n+ */\n+\n+import React, { useEffect, useState } from \"react\";\n+import { Col, Layout , Row, Typography} from \"antd\";\n+import { SPACE_MD } from \"../../../styles/spacing\";\n+import { grey1 } from \"../../../styles/colors\";\n+import { TabPaneContent } from \"../../../components/tabs/TabPaneContent\";\n+import { getFastQCImages } from \"../../../apis/files/sequence-files\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import {\n+  seqObjId,\n+  seqFileId\n+} from \"../fastqc-constants\";\n+\n+import styled from \"styled-components\";\n+\n+const StyledImage = styled.img`\n+  height: 100%;\n+  width: 100%;\n+`;\n+\n+export default function FastQCCharts() {\n+\n+  const [loading, setLoading] = useState(true);\n+  const [perBase, setPerBase] = useState(\"\");\n+  const [perSeq, setPerSeq] = useState(\"\");\n+  const [duplicationLevel, setDuplicationLevel] = useState(\"\");\n+  const [fastQCVersion, setFastQCVersion] = useState(\"\");\n+\n+  useEffect(() => {\n+    getFastQCImages(seqObjId, seqFileId).then(({ perbaseChart, persequenceChart, duplicationlevelChart, fastQCVersion }) => {\n+      // Convert the images from byte arrays into a png images\n+      setPerBase(`data:image/png;base64,${perbaseChart}`);\n+      setPerSeq(`data:image/png;base64,${persequenceChart}`);\n+      setDuplicationLevel(`data:image/png;base64,${duplicationlevelChart}`);\n+\n+      setFastQCVersion(fastQCVersion);\n+      setLoading(false);\n+    });\n+  }, []);\n+\n+  return (\n+    <div>\n+    {\n+      loading ?\n+        <ContentLoading message={i18n(\"FastQC.fetchingCharts\")}/>\n+        :\n+        <Layout style={{paddingLeft: SPACE_MD, backgroundColor: grey1}}>\n+          <TabPaneContent title={i18n(\"FastQC.charts\")} xxl={16}>\n+            <Typography.Paragraph>{i18n(\"FastQC.overrepresentedSequencesDescription\", fastQCVersion)}</Typography.Paragraph>\n+            <Row\n+              gutter={[16, 16]}\n+              style={{ padding: SPACE_MD }}\n+            >\n+              <Col sm={24} md={18} xl={16} xxl={12}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5ecc8e7816d5049359e352b93fc4c70c6602b08"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyNTQ0OA==", "bodyText": "Updated in 139845a", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514325448", "createdAt": "2020-10-29T14:57:36Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCCharts.jsx", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * This file renders the FastQC charts component.\n+ */\n+\n+import React, { useEffect, useState } from \"react\";\n+import { Col, Layout , Row, Typography} from \"antd\";\n+import { SPACE_MD } from \"../../../styles/spacing\";\n+import { grey1 } from \"../../../styles/colors\";\n+import { TabPaneContent } from \"../../../components/tabs/TabPaneContent\";\n+import { getFastQCImages } from \"../../../apis/files/sequence-files\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import {\n+  seqObjId,\n+  seqFileId\n+} from \"../fastqc-constants\";\n+\n+import styled from \"styled-components\";\n+\n+const StyledImage = styled.img`\n+  height: 100%;\n+  width: 100%;\n+`;\n+\n+export default function FastQCCharts() {\n+\n+  const [loading, setLoading] = useState(true);\n+  const [perBase, setPerBase] = useState(\"\");\n+  const [perSeq, setPerSeq] = useState(\"\");\n+  const [duplicationLevel, setDuplicationLevel] = useState(\"\");\n+  const [fastQCVersion, setFastQCVersion] = useState(\"\");\n+\n+  useEffect(() => {\n+    getFastQCImages(seqObjId, seqFileId).then(({ perbaseChart, persequenceChart, duplicationlevelChart, fastQCVersion }) => {\n+      // Convert the images from byte arrays into a png images\n+      setPerBase(`data:image/png;base64,${perbaseChart}`);\n+      setPerSeq(`data:image/png;base64,${persequenceChart}`);\n+      setDuplicationLevel(`data:image/png;base64,${duplicationlevelChart}`);\n+\n+      setFastQCVersion(fastQCVersion);\n+      setLoading(false);\n+    });\n+  }, []);\n+\n+  return (\n+    <div>\n+    {\n+      loading ?\n+        <ContentLoading message={i18n(\"FastQC.fetchingCharts\")}/>\n+        :\n+        <Layout style={{paddingLeft: SPACE_MD, backgroundColor: grey1}}>\n+          <TabPaneContent title={i18n(\"FastQC.charts\")} xxl={16}>\n+            <Typography.Paragraph>{i18n(\"FastQC.overrepresentedSequencesDescription\", fastQCVersion)}</Typography.Paragraph>\n+            <Row\n+              gutter={[16, 16]}\n+              style={{ padding: SPACE_MD }}\n+            >\n+              <Col sm={24} md={18} xl={16} xxl={12}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1OTExOA=="}, "originalCommit": {"oid": "b5ecc8e7816d5049359e352b93fc4c70c6602b08"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTYyMzg1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCCharts.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDozNzowNFrOHqVy3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1Nzo0M1rOHqf8Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1OTMyNA==", "bodyText": "Can you add:\n  border: 1px solid ${grey4};\n  padding: ${SPACE_MD};\n  border-radius: 2px;", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514159324", "createdAt": "2020-10-29T10:37:04Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCCharts.jsx", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * This file renders the FastQC charts component.\n+ */\n+\n+import React, { useEffect, useState } from \"react\";\n+import { Col, Layout , Row, Typography} from \"antd\";\n+import { SPACE_MD } from \"../../../styles/spacing\";\n+import { grey1 } from \"../../../styles/colors\";\n+import { TabPaneContent } from \"../../../components/tabs/TabPaneContent\";\n+import { getFastQCImages } from \"../../../apis/files/sequence-files\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import {\n+  seqObjId,\n+  seqFileId\n+} from \"../fastqc-constants\";\n+\n+import styled from \"styled-components\";\n+\n+const StyledImage = styled.img`\n+  height: 100%;\n+  width: 100%;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5ecc8e7816d5049359e352b93fc4c70c6602b08"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyNTUzOQ==", "bodyText": "Added in 139845a", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514325539", "createdAt": "2020-10-29T14:57:43Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCCharts.jsx", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * This file renders the FastQC charts component.\n+ */\n+\n+import React, { useEffect, useState } from \"react\";\n+import { Col, Layout , Row, Typography} from \"antd\";\n+import { SPACE_MD } from \"../../../styles/spacing\";\n+import { grey1 } from \"../../../styles/colors\";\n+import { TabPaneContent } from \"../../../components/tabs/TabPaneContent\";\n+import { getFastQCImages } from \"../../../apis/files/sequence-files\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import {\n+  seqObjId,\n+  seqFileId\n+} from \"../fastqc-constants\";\n+\n+import styled from \"styled-components\";\n+\n+const StyledImage = styled.img`\n+  height: 100%;\n+  width: 100%;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1OTMyNA=="}, "originalCommit": {"oid": "b5ecc8e7816d5049359e352b93fc4c70c6602b08"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTYyNTE2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCDetails.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDozNzoyN1rOHqVzww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1Nzo0OVrOHqf8cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1OTU1NQ==", "bodyText": "Comments", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514159555", "createdAt": "2020-10-29T10:37:27Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCDetails.jsx", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * This file renders the FastQC details component.\n+ */\n+\n+import React, { useEffect, useState } from \"react\";\n+import { Divider, Layout, Typography } from \"antd\";\n+import { SPACE_MD } from \"../../../styles/spacing\";\n+import { grey1 } from \"../../../styles/colors\";\n+import { TabPaneContent } from \"../../../components/tabs/TabPaneContent\";\n+import { BasicList } from \"../../../components/lists\";\n+import { getFastQCDetails } from \"../../../apis/files/sequence-files\";\n+import { formatDate } from \"../../../utilities/date-utilities\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import { seqFileId, seqObjId } from \"../fastqc-constants\";\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5ecc8e7816d5049359e352b93fc4c70c6602b08"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyNTYxOA==", "bodyText": "Added in 139845a", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514325618", "createdAt": "2020-10-29T14:57:49Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCDetails.jsx", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * This file renders the FastQC details component.\n+ */\n+\n+import React, { useEffect, useState } from \"react\";\n+import { Divider, Layout, Typography } from \"antd\";\n+import { SPACE_MD } from \"../../../styles/spacing\";\n+import { grey1 } from \"../../../styles/colors\";\n+import { TabPaneContent } from \"../../../components/tabs/TabPaneContent\";\n+import { BasicList } from \"../../../components/lists\";\n+import { getFastQCDetails } from \"../../../apis/files/sequence-files\";\n+import { formatDate } from \"../../../utilities/date-utilities\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import { seqFileId, seqObjId } from \"../fastqc-constants\";\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1OTU1NQ=="}, "originalCommit": {"oid": "b5ecc8e7816d5049359e352b93fc4c70c6602b08"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTYyNzA4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/sequence-files/components/OverRepresentedSequences.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDozODowMVrOHqV0_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo1Nzo1NVrOHqf8xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1OTg2OQ==", "bodyText": "Comments", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514159869", "createdAt": "2020-10-29T10:38:01Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/OverRepresentedSequences.jsx", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * This file renders the OverRepresentedSequences component.\n+ */\n+\n+import React, { useEffect, useState } from \"react\";\n+import { Layout, Table, Typography } from \"antd\";\n+import { SPACE_MD } from \"../../../styles/spacing\";\n+import { grey1 } from \"../../../styles/colors\";\n+import { TabPaneContent } from \"../../../components/tabs/TabPaneContent\";\n+import { getOverRepresentedSequences } from \"../../../apis/files/sequence-files\";\n+import {\n+  seqObjId,\n+  seqFileId\n+} from \"../fastqc-constants\";\n+import { Monospace } from \"../../../components/typography\";\n+\n+export default function OverRepresentedSequences() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5ecc8e7816d5049359e352b93fc4c70c6602b08"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMyNTcwMw==", "bodyText": "Added in 139845a", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514325703", "createdAt": "2020-10-29T14:57:55Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/OverRepresentedSequences.jsx", "diffHunk": "@@ -0,0 +1,72 @@\n+/*\n+ * This file renders the OverRepresentedSequences component.\n+ */\n+\n+import React, { useEffect, useState } from \"react\";\n+import { Layout, Table, Typography } from \"antd\";\n+import { SPACE_MD } from \"../../../styles/spacing\";\n+import { grey1 } from \"../../../styles/colors\";\n+import { TabPaneContent } from \"../../../components/tabs/TabPaneContent\";\n+import { getOverRepresentedSequences } from \"../../../apis/files/sequence-files\";\n+import {\n+  seqObjId,\n+  seqFileId\n+} from \"../fastqc-constants\";\n+import { Monospace } from \"../../../components/typography\";\n+\n+export default function OverRepresentedSequences() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1OTg2OQ=="}, "originalCommit": {"oid": "b5ecc8e7816d5049359e352b93fc4c70c6602b08"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMTYyOTUyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/sequence-files/fastqc-constants.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDozODozN1rOHqV2ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNDo0ODowNVrOHqfdJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE2MDIyOQ==", "bodyText": "LOL, oh this is fun!", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514160229", "createdAt": "2020-10-29T10:38:37Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/sequence-files/fastqc-constants.js", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * Constants file for the FastQC react components", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5ecc8e7816d5049359e352b93fc4c70c6602b08"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDMxNzYwNQ==", "bodyText": "Haha so much fun!", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514317605", "createdAt": "2020-10-29T14:48:05Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/sequence-files/fastqc-constants.js", "diffHunk": "@@ -0,0 +1,25 @@\n+/*\n+ * Constants file for the FastQC react components", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE2MDIyOQ=="}, "originalCommit": {"oid": "b5ecc8e7816d5049359e352b93fc4c70c6602b08"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzUwODg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/SequenceFileAjaxController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNzo1OToyOVrOHqoHgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOToyNjozNVrOHqrRLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ1OTUyMA==", "bodyText": "Why are you not creating a UI service to handle this stuff?", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514459520", "createdAt": "2020-10-29T17:59:29Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/SequenceFileAjaxController.java", "diffHunk": "@@ -0,0 +1,117 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.files;\n+\n+import java.io.IOException;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import ca.corefacility.bioinformatics.irida.exceptions.EntityNotFoundException;\n+import ca.corefacility.bioinformatics.irida.model.sequenceFile.SequenceFile;\n+import ca.corefacility.bioinformatics.irida.model.sequenceFile.SequencingObject;\n+import ca.corefacility.bioinformatics.irida.model.workflow.analysis.AnalysisFastQC;\n+import ca.corefacility.bioinformatics.irida.ria.web.files.dto.FastQCDetailsResponse;\n+import ca.corefacility.bioinformatics.irida.ria.web.files.dto.FastQCImagesResponse;\n+import ca.corefacility.bioinformatics.irida.service.AnalysisService;\n+import ca.corefacility.bioinformatics.irida.service.SequencingObjectService;\n+\n+/**\n+ * Ajax controller to get data for the fastqc page.\n+ */\n+@RestController\n+@Scope(\"session\")\n+@RequestMapping(\"/ajax/sequenceFiles\")\n+public class SequenceFileAjaxController {\n+\n+\tprivate AnalysisService analysisService;\n+\tprivate SequencingObjectService sequencingObjectService;\n+\n+\tpublic static final String IMG_PERBASE = \"perbase\";\n+\tpublic static final String IMG_PERSEQUENCE = \"persequence\";\n+\tpublic static final String IMG_DUPLICATION_LEVEL = \"duplicationlevel\";\n+\n+\tpublic static final String[] qcFileTypes = { \"perbase\", \"persequence\", \"duplicationlevel\" };\n+\n+\t@Autowired\n+\tpublic SequenceFileAjaxController(AnalysisService analysisService,\n+\t\t\tSequencingObjectService sequencingObjectService) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf58113ebe4c86d6272c27a0db02788cfa80a470"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUxMTE0OQ==", "bodyText": "Added in 8d915d2", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514511149", "createdAt": "2020-10-29T19:26:35Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/SequenceFileAjaxController.java", "diffHunk": "@@ -0,0 +1,117 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.files;\n+\n+import java.io.IOException;\n+\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.annotation.Scope;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import ca.corefacility.bioinformatics.irida.exceptions.EntityNotFoundException;\n+import ca.corefacility.bioinformatics.irida.model.sequenceFile.SequenceFile;\n+import ca.corefacility.bioinformatics.irida.model.sequenceFile.SequencingObject;\n+import ca.corefacility.bioinformatics.irida.model.workflow.analysis.AnalysisFastQC;\n+import ca.corefacility.bioinformatics.irida.ria.web.files.dto.FastQCDetailsResponse;\n+import ca.corefacility.bioinformatics.irida.ria.web.files.dto.FastQCImagesResponse;\n+import ca.corefacility.bioinformatics.irida.service.AnalysisService;\n+import ca.corefacility.bioinformatics.irida.service.SequencingObjectService;\n+\n+/**\n+ * Ajax controller to get data for the fastqc page.\n+ */\n+@RestController\n+@Scope(\"session\")\n+@RequestMapping(\"/ajax/sequenceFiles\")\n+public class SequenceFileAjaxController {\n+\n+\tprivate AnalysisService analysisService;\n+\tprivate SequencingObjectService sequencingObjectService;\n+\n+\tpublic static final String IMG_PERBASE = \"perbase\";\n+\tpublic static final String IMG_PERSEQUENCE = \"persequence\";\n+\tpublic static final String IMG_DUPLICATION_LEVEL = \"duplicationlevel\";\n+\n+\tpublic static final String[] qcFileTypes = { \"perbase\", \"persequence\", \"duplicationlevel\" };\n+\n+\t@Autowired\n+\tpublic SequenceFileAjaxController(AnalysisService analysisService,\n+\t\t\tSequencingObjectService sequencingObjectService) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ1OTUyMA=="}, "originalCommit": {"oid": "cf58113ebe4c86d6272c27a0db02788cfa80a470"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzUyNTAwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/entries.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODowMzoyNFrOHqoRTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOToyNDo1MVrOHqrNlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2MjAzMA==", "bodyText": "if it is an index.js file you don't need to add that part.", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514462030", "createdAt": "2020-10-29T18:03:24Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/entries.js", "diffHunk": "@@ -79,4 +79,5 @@ module.exports = {\n   \"project-metadata-templates\":\n     \"./resources/js/pages/projects/metadata-templates\",\n   admin: \"./resources/js/pages/admin/index.js\",\n+  \"sequence-files\": \"./resources/js/pages/sequence-files/index.js\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf58113ebe4c86d6272c27a0db02788cfa80a470"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUxMDIzMQ==", "bodyText": "Updated in 8d915d2", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514510231", "createdAt": "2020-10-29T19:24:51Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/entries.js", "diffHunk": "@@ -79,4 +79,5 @@ module.exports = {\n   \"project-metadata-templates\":\n     \"./resources/js/pages/projects/metadata-templates\",\n   admin: \"./resources/js/pages/admin/index.js\",\n+  \"sequence-files\": \"./resources/js/pages/sequence-files/index.js\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2MjAzMA=="}, "originalCommit": {"oid": "cf58113ebe4c86d6272c27a0db02788cfa80a470"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzUyNzQzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/apis/files/sequence-files.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODowMzo1OVrOHqoSuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOToyNDo0NVrOHqrNWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2MjM5NQ==", "bodyText": "Aren't we throwing errors.", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514462395", "createdAt": "2020-10-29T18:03:59Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/apis/files/sequence-files.js", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * FastQC related API functions\n+ */\n+\n+import { setBaseUrl } from \"../../utilities/url-utilities\";\n+import axios from \"axios\";\n+\n+const BASE_URL = setBaseUrl(`/ajax/sequenceFiles`);\n+\n+/*\n+ * Get the fastqc details.\n+ * @param {number} sequencingObjectId SequencingObject ID\n+ * @param {number} sequenceFileId SequenceFile ID\n+ * @return {Promise<*>} `data` contains the OK response and a dto with the fastqc details;\n+ *                      `error` contains error information if an error occurred.\n+ */\n+export async function getFastQCDetails(sequencingObjectId, sequenceFileId) {\n+  try {\n+    const { data } = await axios.get(`${BASE_URL}/fastqc-details`, {\n+      params: {\n+        sequencingObjectId,\n+        sequenceFileId\n+      }\n+    });\n+    return data;\n+  }  catch (error) {\n+    return { error };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf58113ebe4c86d6272c27a0db02788cfa80a470"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUxMDE2OA==", "bodyText": "Updated in 8d915d2", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514510168", "createdAt": "2020-10-29T19:24:45Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/apis/files/sequence-files.js", "diffHunk": "@@ -0,0 +1,71 @@\n+/**\n+ * FastQC related API functions\n+ */\n+\n+import { setBaseUrl } from \"../../utilities/url-utilities\";\n+import axios from \"axios\";\n+\n+const BASE_URL = setBaseUrl(`/ajax/sequenceFiles`);\n+\n+/*\n+ * Get the fastqc details.\n+ * @param {number} sequencingObjectId SequencingObject ID\n+ * @param {number} sequenceFileId SequenceFile ID\n+ * @return {Promise<*>} `data` contains the OK response and a dto with the fastqc details;\n+ *                      `error` contains error information if an error occurred.\n+ */\n+export async function getFastQCDetails(sequencingObjectId, sequenceFileId) {\n+  try {\n+    const { data } = await axios.get(`${BASE_URL}/fastqc-details`, {\n+      params: {\n+        sequencingObjectId,\n+        sequenceFileId\n+      }\n+    });\n+    return data;\n+  }  catch (error) {\n+    return { error };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ2MjM5NQ=="}, "originalCommit": {"oid": "cf58113ebe4c86d6272c27a0db02788cfa80a470"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzU4MzEyOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/components/lists/BasicList.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODoxODowOFrOHqo1jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOToyNDozOFrOHqrNHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3MTMwOA==", "bodyText": "I don't think you need this, plus it is really smelly.  If you want to what I would to is add a props attribute to the object and then spread it.  That way you will automatically get the class name you want:\nCalling code:\n{\n      title: i18n(\"FastQC.maxLength\"),\n      desc: fastQC.maxLength,\n      props: {\n\t\tclassName: \"t-fastqc-max-length\", \n\t\t// whatever other props like style, ect...\n\t }\n},\nAnd then in you BasicList:\n <List.Item.Meta\n            title={<Text strong>{item.title}</Text>}\n            description={item.desc}\n            {...item.props}\n          />", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514471308", "createdAt": "2020-10-29T18:18:08Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/components/lists/BasicList.jsx", "diffHunk": "@@ -21,7 +21,8 @@ const { Text } = Typography;\n \n export function BasicList({\n   itemLayout = \"horizontal\",\n-  dataSource = { dataSource }\n+  dataSource = { dataSource },\n+  customClassNames = false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf58113ebe4c86d6272c27a0db02788cfa80a470"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUxMDExMQ==", "bodyText": "Updated in 8d915d2", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514510111", "createdAt": "2020-10-29T19:24:38Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/components/lists/BasicList.jsx", "diffHunk": "@@ -21,7 +21,8 @@ const { Text } = Typography;\n \n export function BasicList({\n   itemLayout = \"horizontal\",\n-  dataSource = { dataSource }\n+  dataSource = { dataSource },\n+  customClassNames = false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3MTMwOA=="}, "originalCommit": {"oid": "cf58113ebe4c86d6272c27a0db02788cfa80a470"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMzU5NTA1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCCharts.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODoyMTowMVrOHqo8uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo1NzowOVrOHqqRzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3MzE0Nw==", "bodyText": "This still feels like you are leaving the images pretty small at the xl  level", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514473147", "createdAt": "2020-10-29T18:21:01Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCCharts.jsx", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * This file renders the FastQC charts component.\n+ */\n+\n+import React, { useEffect, useState } from \"react\";\n+import { Col, Layout , Row, Typography} from \"antd\";\n+import { SPACE_MD } from \"../../../styles/spacing\";\n+import { grey1, grey4 } from \"../../../styles/colors\";\n+import { TabPaneContent } from \"../../../components/tabs/TabPaneContent\";\n+import { getFastQCImages } from \"../../../apis/files/sequence-files\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import {\n+  seqObjId,\n+  seqFileId\n+} from \"../fastqc-constants\";\n+\n+import styled from \"styled-components\";\n+\n+const StyledImage = styled.img`\n+  height: 100%;\n+  width: 100%;\n+  border: 1px solid ${grey4};\n+  padding: ${SPACE_MD};\n+  border-radius: 2px;\n+`;\n+\n+export default function FastQCCharts() {\n+\n+  const [loading, setLoading] = useState(true);\n+  const [perBase, setPerBase] = useState(\"\");\n+  const [perSeq, setPerSeq] = useState(\"\");\n+  const [duplicationLevel, setDuplicationLevel] = useState(\"\");\n+  const [fastQCVersion, setFastQCVersion] = useState(\"\");\n+\n+  useEffect(() => {\n+    getFastQCImages(seqObjId, seqFileId).then(({ perbaseChart, persequenceChart, duplicationlevelChart, fastQCVersion }) => {\n+      // Convert the images from byte arrays into a png images\n+      setPerBase(`data:image/png;base64,${perbaseChart}`);\n+      setPerSeq(`data:image/png;base64,${persequenceChart}`);\n+      setDuplicationLevel(`data:image/png;base64,${duplicationlevelChart}`);\n+\n+      setFastQCVersion(fastQCVersion);\n+      setLoading(false);\n+    });\n+  }, []);\n+\n+  return (\n+    <div>\n+    {\n+      loading ?\n+        <ContentLoading message={i18n(\"FastQC.fetchingCharts\")}/>\n+        :\n+        <Layout style={{paddingLeft: SPACE_MD, backgroundColor: grey1}}>\n+          <TabPaneContent title={i18n(\"FastQC.charts\")} xxl={16}>\n+            <Typography.Paragraph>{i18n(\"FastQC.overrepresentedSequencesDescription\", fastQCVersion)}</Typography.Paragraph>\n+            <Row\n+              gutter={[16, 16]}\n+              style={{ padding: SPACE_MD }}\n+            >\n+              <Col span={24} xl={16} xxl={12}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf58113ebe4c86d6272c27a0db02788cfa80a470"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ5NDkyNQ==", "bodyText": "They look huge on my monitors. What do you suggest to set it to?", "url": "https://github.com/phac-nml/irida/pull/835#discussion_r514494925", "createdAt": "2020-10-29T18:57:09Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/sequence-files/components/FastQCCharts.jsx", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * This file renders the FastQC charts component.\n+ */\n+\n+import React, { useEffect, useState } from \"react\";\n+import { Col, Layout , Row, Typography} from \"antd\";\n+import { SPACE_MD } from \"../../../styles/spacing\";\n+import { grey1, grey4 } from \"../../../styles/colors\";\n+import { TabPaneContent } from \"../../../components/tabs/TabPaneContent\";\n+import { getFastQCImages } from \"../../../apis/files/sequence-files\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import {\n+  seqObjId,\n+  seqFileId\n+} from \"../fastqc-constants\";\n+\n+import styled from \"styled-components\";\n+\n+const StyledImage = styled.img`\n+  height: 100%;\n+  width: 100%;\n+  border: 1px solid ${grey4};\n+  padding: ${SPACE_MD};\n+  border-radius: 2px;\n+`;\n+\n+export default function FastQCCharts() {\n+\n+  const [loading, setLoading] = useState(true);\n+  const [perBase, setPerBase] = useState(\"\");\n+  const [perSeq, setPerSeq] = useState(\"\");\n+  const [duplicationLevel, setDuplicationLevel] = useState(\"\");\n+  const [fastQCVersion, setFastQCVersion] = useState(\"\");\n+\n+  useEffect(() => {\n+    getFastQCImages(seqObjId, seqFileId).then(({ perbaseChart, persequenceChart, duplicationlevelChart, fastQCVersion }) => {\n+      // Convert the images from byte arrays into a png images\n+      setPerBase(`data:image/png;base64,${perbaseChart}`);\n+      setPerSeq(`data:image/png;base64,${persequenceChart}`);\n+      setDuplicationLevel(`data:image/png;base64,${duplicationlevelChart}`);\n+\n+      setFastQCVersion(fastQCVersion);\n+      setLoading(false);\n+    });\n+  }, []);\n+\n+  return (\n+    <div>\n+    {\n+      loading ?\n+        <ContentLoading message={i18n(\"FastQC.fetchingCharts\")}/>\n+        :\n+        <Layout style={{paddingLeft: SPACE_MD, backgroundColor: grey1}}>\n+          <TabPaneContent title={i18n(\"FastQC.charts\")} xxl={16}>\n+            <Typography.Paragraph>{i18n(\"FastQC.overrepresentedSequencesDescription\", fastQCVersion)}</Typography.Paragraph>\n+            <Row\n+              gutter={[16, 16]}\n+              style={{ padding: SPACE_MD }}\n+            >\n+              <Col span={24} xl={16} xxl={12}>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3MzE0Nw=="}, "originalCommit": {"oid": "cf58113ebe4c86d6272c27a0db02788cfa80a470"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 781, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}