{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4NzM3ODA0", "number": 855, "title": "Refactor project reference file page", "bodyText": "Description of changes\nWhat did you change in this pull request?  Provide a description of files changed, user interactions changed, etc.  Include how to test your changes.\nRefactor project reference file page to use Ant design and removed angular code not required for page.\nRelated issue\nLink to the GitHub issue this pull request addresses using the #issuenum format.  If it completes an issue, use Fixes #issuenum to automatically close the issue.\nChecklist\nThings for the developer to confirm they've done before the PR should be accepted:\n\n CHANGELOG.md (and UPGRADING.md if necessary) updated with information for new change.\n Tests added (or description of how to test) for any new features.\n User documentation updated for UI or technical changes.", "createdAt": "2020-11-10T20:13:34Z", "url": "https://github.com/phac-nml/irida/pull/855", "merged": true, "mergeCommit": {"oid": "ba9baecfa8593be3323410cb39160d7040c61c5f"}, "closed": true, "closedAt": "2020-11-16T21:53:00Z", "author": {"login": "deepsidhu85"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbMK-FAH2gAyNTE4NzM3ODA0OmFhMjY5NWU2ZWVlMWI5MTZmZTZhNmVkNjRkMmJmYjBlZjg1N2RiNTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddMLz4AFqTUzMTgxNzcxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aa2695e6eee1b916fe6a6ed64d2bfb0ef857db54", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/aa2695e6eee1b916fe6a6ed64d2bfb0ef857db54", "committedDate": "2020-11-10T16:44:02Z", "message": "Refactored Project reference files page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "712cb41d0470f28aa74afedfa00273fd1bed6655", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/712cb41d0470f28aa74afedfa00273fd1bed6655", "committedDate": "2020-11-10T20:08:15Z", "message": "Added translation. Added space between download and remove buttons for reference files. Updated ProjectReferenceFileController to return file size in a human readable format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0be93d886619460cd23b01ef845f08f831064c7", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/a0be93d886619460cd23b01ef845f08f831064c7", "committedDate": "2020-11-10T21:41:16Z", "message": "Added service for project reference files. Updated reference file react component to use drag and drop for file uploads. Added comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTg0Mjg2", "url": "https://github.com/phac-nml/irida/pull/855#pullrequestreview-528984286", "createdAt": "2020-11-12T11:13:33Z", "commit": {"oid": "a0be93d886619460cd23b01ef845f08f831064c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMToxMzozM1rOHx2A8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMToxMzozM1rOHx2A8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAyNzI0OQ==", "bodyText": "Why are you using a custom class for this, it looks pretty much identical to AjaxSuccessResponse", "url": "https://github.com/phac-nml/irida/pull/855#discussion_r522027249", "createdAt": "2020-11-12T11:13:33Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/ajax/dto/ajax/AjaxRemoveItemSuccessResponse.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ajax;\n+\n+/**\n+ * UI Response for successfully removing an item. Will return the internationalized\n+ * success text.\n+ */\n+public class AjaxRemoveItemSuccessResponse extends AjaxResponse {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0be93d886619460cd23b01ef845f08f831064c7"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4OTg4Mjkw", "url": "https://github.com/phac-nml/irida/pull/855#pullrequestreview-528988290", "createdAt": "2020-11-12T11:18:55Z", "commit": {"oid": "a0be93d886619460cd23b01ef845f08f831064c7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMToxODo1NVrOHx2NjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxMjoyMjo0MFrOHx4Ybw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAzMDQ3Nw==", "bodyText": "I thought this would not work without a leading /, surprised this works.", "url": "https://github.com/phac-nml/irida/pull/855#discussion_r522030477", "createdAt": "2020-11-12T11:18:55Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/ReferenceFileAjaxController.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.files;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Locale;\n+\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+import org.springframework.web.multipart.MultipartFile;\n+\n+import ca.corefacility.bioinformatics.irida.exceptions.EntityNotFoundException;\n+import ca.corefacility.bioinformatics.irida.exceptions.UnsupportedReferenceFileContentError;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ajax.*;\n+import ca.corefacility.bioinformatics.irida.ria.web.services.UIProjectReferenceFileService;\n+\n+/**\n+ * Controller for ajax actions for reference files\n+ */\n+\n+@RestController\n+@RequestMapping(\"ajax/referenceFiles\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0be93d886619460cd23b01ef845f08f831064c7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAzMTExNQ==", "bodyText": "Because this is a post mapping, which means you are creating a new item, can you drop the /new from the end of the mapping?", "url": "https://github.com/phac-nml/irida/pull/855#discussion_r522031115", "createdAt": "2020-11-12T11:20:00Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/ReferenceFileAjaxController.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.files;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Locale;\n+\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+import org.springframework.web.multipart.MultipartFile;\n+\n+import ca.corefacility.bioinformatics.irida.exceptions.EntityNotFoundException;\n+import ca.corefacility.bioinformatics.irida.exceptions.UnsupportedReferenceFileContentError;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ajax.*;\n+import ca.corefacility.bioinformatics.irida.ria.web.services.UIProjectReferenceFileService;\n+\n+/**\n+ * Controller for ajax actions for reference files\n+ */\n+\n+@RestController\n+@RequestMapping(\"ajax/referenceFiles\")\n+public class ReferenceFileAjaxController {\n+\n+\tprivate final UIProjectReferenceFileService uiProjectReferenceFileService;\n+\n+\t@Autowired\n+\tpublic ReferenceFileAjaxController(UIProjectReferenceFileService uiProjectReferenceFileService) {\n+\t\tthis.uiProjectReferenceFileService = uiProjectReferenceFileService;\n+\t}\n+\n+\t/**\n+\t * Add a new reference file to a project.\n+\t *\n+\t * @param projectId The id of the project to add the file to.\n+\t * @param files     {@link List} of {@link MultipartFile} file being uploaded.\n+\t * @param locale    locale of the logged in user\n+\t * @return Success message if file was successfully uploaded\n+\t */\n+\t@PostMapping(\"/project/{projectId}/new\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0be93d886619460cd23b01ef845f08f831064c7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAzMTY2Ng==", "bodyText": "Same here, since this is a delete mapping just map to @DeleteMapping(\"\")", "url": "https://github.com/phac-nml/irida/pull/855#discussion_r522031666", "createdAt": "2020-11-12T11:20:54Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/ReferenceFileAjaxController.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.files;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.Locale;\n+\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.apache.http.HttpStatus;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.*;\n+import org.springframework.web.multipart.MultipartFile;\n+\n+import ca.corefacility.bioinformatics.irida.exceptions.EntityNotFoundException;\n+import ca.corefacility.bioinformatics.irida.exceptions.UnsupportedReferenceFileContentError;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ajax.*;\n+import ca.corefacility.bioinformatics.irida.ria.web.services.UIProjectReferenceFileService;\n+\n+/**\n+ * Controller for ajax actions for reference files\n+ */\n+\n+@RestController\n+@RequestMapping(\"ajax/referenceFiles\")\n+public class ReferenceFileAjaxController {\n+\n+\tprivate final UIProjectReferenceFileService uiProjectReferenceFileService;\n+\n+\t@Autowired\n+\tpublic ReferenceFileAjaxController(UIProjectReferenceFileService uiProjectReferenceFileService) {\n+\t\tthis.uiProjectReferenceFileService = uiProjectReferenceFileService;\n+\t}\n+\n+\t/**\n+\t * Add a new reference file to a project.\n+\t *\n+\t * @param projectId The id of the project to add the file to.\n+\t * @param files     {@link List} of {@link MultipartFile} file being uploaded.\n+\t * @param locale    locale of the logged in user\n+\t * @return Success message if file was successfully uploaded\n+\t */\n+\t@PostMapping(\"/project/{projectId}/new\")\n+\tpublic ResponseEntity<AjaxResponse> addReferenceFileToProject(@PathVariable Long projectId,\n+\t\t\t@RequestParam(value = \"file\") List<MultipartFile> files, final Locale locale) {\n+\t\ttry\n+\t\t{\n+\t\t\treturn ResponseEntity.ok(uiProjectReferenceFileService.addReferenceFileToProject(projectId, files, locale));\n+\t\t} catch (UnsupportedReferenceFileContentError e) {\n+\t\t\treturn ResponseEntity.status(HttpServletResponse.SC_UNSUPPORTED_MEDIA_TYPE)\n+\t\t\t\t\t.body(new AjaxErrorResponse(e.getMessage()));\n+\t\t} catch (IOException e) {\n+\t\t\treturn ResponseEntity.status(HttpServletResponse.SC_UNSUPPORTED_MEDIA_TYPE)\n+\t\t\t\t\t.body(new AjaxErrorResponse(\n+\t\t\t\t\t\t\te.getMessage()));\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * Delete a reference file. This will remove it from the project.\n+\t *\n+\t * @param fileId    The id of the file to remove.\n+\t * @param projectId the project to delete the reference file for.\n+\t * @param locale    the locale specified by the browser.\n+\t * @return Success or error based on the result of deleting the file.\n+\t */\n+\t@DeleteMapping(\"/delete\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0be93d886619460cd23b01ef845f08f831064c7"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAzNDU4OQ==", "bodyText": "This should be moved over to the ajax controller", "url": "https://github.com/phac-nml/irida/pull/855#discussion_r522034589", "createdAt": "2020-11-12T11:25:56Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/ReferenceFileController.java", "diffHunk": "@@ -60,71 +51,19 @@ public ReferenceFileController(ProjectService projectService, ReferenceFileServi\n \t/**\n \t * Download a reference file based on the id passed.\n \t *\n-\t * @param fileId\n-\t *            The id of the file to download\n-\t * @param response\n-\t *            {@link HttpServletResponse} to write to file to\n-\t *\n-\t * @throws IOException\n-\t *             if we fail to read the file from disk.\n+\t * @param fileId   The id of the file to download\n+\t * @param response {@link HttpServletResponse} to write to file to\n+\t * @throws IOException if we fail to read the file from disk.\n \t */\n \t@RequestMapping(value = \"/download/{fileId}\")\n-\tpublic void downloadReferenceFile(@PathVariable Long fileId,\n-\t\t\tHttpServletResponse response) throws IOException {\n+\tpublic void downloadReferenceFile(@PathVariable Long fileId, HttpServletResponse response) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0be93d886619460cd23b01ef845f08f831064c7"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAzNDg5Mg==", "bodyText": "Don't you have this in the ajax cntroller?  Or is it here for other old requests?", "url": "https://github.com/phac-nml/irida/pull/855#discussion_r522034892", "createdAt": "2020-11-12T11:26:28Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/ReferenceFileController.java", "diffHunk": "@@ -135,8 +74,8 @@ public void downloadReferenceFile(@PathVariable Long fileId,\n \t * @throws IOException if the new reference file cannot be saved\n \t */\n \t@RequestMapping(\"/new\")\n-\tpublic Map<String, Object> addIndependentReferenceFile(\n-\t\t\tfinal @RequestParam(value = \"file\") MultipartFile file, final HttpServletResponse response, final Locale locale) throws IOException {\n+\tpublic Map<String, Object> addIndependentReferenceFile(final @RequestParam(value = \"file\") MultipartFile file,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0be93d886619460cd23b01ef845f08f831064c7"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAzODIwMw==", "bodyText": "Can we set this from an ajax request, trying to get rid of all these global variables.", "url": "https://github.com/phac-nml/irida/pull/855#discussion_r522038203", "createdAt": "2020-11-12T11:32:15Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/projects/reference-files/ReferenceFiles.jsx", "diffHunk": "@@ -0,0 +1,169 @@\n+import React from \"react\";\n+import { Button, notification, Space, Table, Typography, Upload } from \"antd\";\n+import { InfoAlert } from \"../../../components/alerts\";\n+import {\n+  IconFileUpload\n+} from \"../../../components/icons/Icons\";\n+import { setBaseUrl } from \"../../../utilities/url-utilities\";\n+import { SPACE_XS } from \"../../../styles/spacing\";\n+import {\n+  downloadProjectReferenceFile,\n+  getProjectReferenceFiles,\n+  removeProjectReferenceFile\n+} from \"../../../apis/projects/reference-files\";\n+import { formatInternationalizedDateTime } from \"../../../utilities/date-utilities\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import { DownloadTableItemButton, RemoveTableItemButton } from \"../../../components/Buttons\";\n+\n+const { Dragger } = Upload;\n+const { Title } = Typography;\n+\n+/**\n+ * React component for render the reference files page for the project.\n+ * @returns {*}\n+ * @constructor\n+ */\n+export function ReferenceFiles() {\n+  const [projectReferenceFiles, setProjectReferenceFiles] = React.useState(0);\n+  const [loading, setLoading] = React.useState(true);\n+  // Destructure and rename id and label to projectId and projectName for clarity\n+  const { id: projectId, label: projectName, canManage } = window.project;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0be93d886619460cd23b01ef845f08f831064c7"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjAzODc0NA==", "bodyText": "Why an empty catch?", "url": "https://github.com/phac-nml/irida/pull/855#discussion_r522038744", "createdAt": "2020-11-12T11:33:12Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/projects/reference-files/ReferenceFiles.jsx", "diffHunk": "@@ -0,0 +1,169 @@\n+import React from \"react\";\n+import { Button, notification, Space, Table, Typography, Upload } from \"antd\";\n+import { InfoAlert } from \"../../../components/alerts\";\n+import {\n+  IconFileUpload\n+} from \"../../../components/icons/Icons\";\n+import { setBaseUrl } from \"../../../utilities/url-utilities\";\n+import { SPACE_XS } from \"../../../styles/spacing\";\n+import {\n+  downloadProjectReferenceFile,\n+  getProjectReferenceFiles,\n+  removeProjectReferenceFile\n+} from \"../../../apis/projects/reference-files\";\n+import { formatInternationalizedDateTime } from \"../../../utilities/date-utilities\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import { DownloadTableItemButton, RemoveTableItemButton } from \"../../../components/Buttons\";\n+\n+const { Dragger } = Upload;\n+const { Title } = Typography;\n+\n+/**\n+ * React component for render the reference files page for the project.\n+ * @returns {*}\n+ * @constructor\n+ */\n+export function ReferenceFiles() {\n+  const [projectReferenceFiles, setProjectReferenceFiles] = React.useState(0);\n+  const [loading, setLoading] = React.useState(true);\n+  // Destructure and rename id and label to projectId and projectName for clarity\n+  const { id: projectId, label: projectName, canManage } = window.project;\n+\n+  // Object to hold alert messages for if a user can manage the project or not\n+  const alertMessage = {\n+    true: i18n(\"ReferenceFile.ownerUploadFileAlert\"),\n+    false:i18n(\"ReferenceFile.userUploadFileAlert\")\n+  }\n+\n+  // Columns for the reference file table\n+  const referenceFileTableColumns = [\n+    {\n+      title: i18n(\"ReferenceFile.name\"),\n+      dataIndex: \"label\",\n+    },\n+    {\n+      title: i18n(\"ReferenceFile.size\"),\n+      dataIndex: \"size\",\n+    },\n+    {\n+      title: i18n(\"ReferenceFile.added\"),\n+      dataIndex: \"createdDate\",\n+      render(text) {\n+        return formatInternationalizedDateTime(text);\n+      },\n+    },\n+    {\n+      align: \"right\",\n+      render(file) {\n+        let actionButtons =\n+          [\n+            <DownloadTableItemButton\n+              key={`download-btn-${file.id}`}\n+              onDownload={() => downloadProjectReferenceFile(file.id)}\n+              onDownloadSuccess={() => {\n+                notification.success({message: i18n(\"ReferenceFile.downloadingFileSuccess\", file.label, projectName)});\n+              }}\n+              tooltipText={i18n(\"ReferenceFile.downloadTooltip\")}\n+            />,\n+            // Only display remove button for reference files if user can manage project\n+            canManage ?\n+              <RemoveTableItemButton\n+                key={`remove-btn-${file.id}`}\n+                onRemove={() => removeProjectReferenceFile(projectId, file.id) }\n+                onRemoveSuccess={() => {\n+                  updateReferenceFileTable();\n+                }}\n+                tooltipText={i18n(\"ReferenceFile.removeTooltip\")}\n+                confirmText={i18n(\"ReferenceFile.confirmText\", file.label, projectName)}\n+              />\n+              :\n+              null\n+          ]\n+        // Return download and remove buttons spaced\n+        return (<Space size=\"small\">{actionButtons}</Space>);\n+      },\n+    },\n+  ];\n+\n+  // On first load of page call method to get the reference files for the project\n+  React.useEffect(() => {\n+    updateReferenceFileTable();\n+  }, []);\n+\n+  // Get the reference files for the project\n+  function updateReferenceFileTable(){\n+    getProjectReferenceFiles(projectId).then(({files}) => {\n+      setProjectReferenceFiles(files);\n+      setLoading(false);\n+    }).catch()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0be93d886619460cd23b01ef845f08f831064c7"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjA2NjAzMQ==", "bodyText": "Can you make our own component out of this?  I am surprised the ant design does not seem to have one since is has the classes set up for it.", "url": "https://github.com/phac-nml/irida/pull/855#discussion_r522066031", "createdAt": "2020-11-12T12:22:40Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/projects/reference-files/ReferenceFiles.jsx", "diffHunk": "@@ -0,0 +1,169 @@\n+import React from \"react\";\n+import { Button, notification, Space, Table, Typography, Upload } from \"antd\";\n+import { InfoAlert } from \"../../../components/alerts\";\n+import {\n+  IconFileUpload\n+} from \"../../../components/icons/Icons\";\n+import { setBaseUrl } from \"../../../utilities/url-utilities\";\n+import { SPACE_XS } from \"../../../styles/spacing\";\n+import {\n+  downloadProjectReferenceFile,\n+  getProjectReferenceFiles,\n+  removeProjectReferenceFile\n+} from \"../../../apis/projects/reference-files\";\n+import { formatInternationalizedDateTime } from \"../../../utilities/date-utilities\";\n+import { ContentLoading } from \"../../../components/loader\";\n+import { DownloadTableItemButton, RemoveTableItemButton } from \"../../../components/Buttons\";\n+\n+const { Dragger } = Upload;\n+const { Title } = Typography;\n+\n+/**\n+ * React component for render the reference files page for the project.\n+ * @returns {*}\n+ * @constructor\n+ */\n+export function ReferenceFiles() {\n+  const [projectReferenceFiles, setProjectReferenceFiles] = React.useState(0);\n+  const [loading, setLoading] = React.useState(true);\n+  // Destructure and rename id and label to projectId and projectName for clarity\n+  const { id: projectId, label: projectName, canManage } = window.project;\n+\n+  // Object to hold alert messages for if a user can manage the project or not\n+  const alertMessage = {\n+    true: i18n(\"ReferenceFile.ownerUploadFileAlert\"),\n+    false:i18n(\"ReferenceFile.userUploadFileAlert\")\n+  }\n+\n+  // Columns for the reference file table\n+  const referenceFileTableColumns = [\n+    {\n+      title: i18n(\"ReferenceFile.name\"),\n+      dataIndex: \"label\",\n+    },\n+    {\n+      title: i18n(\"ReferenceFile.size\"),\n+      dataIndex: \"size\",\n+    },\n+    {\n+      title: i18n(\"ReferenceFile.added\"),\n+      dataIndex: \"createdDate\",\n+      render(text) {\n+        return formatInternationalizedDateTime(text);\n+      },\n+    },\n+    {\n+      align: \"right\",\n+      render(file) {\n+        let actionButtons =\n+          [\n+            <DownloadTableItemButton\n+              key={`download-btn-${file.id}`}\n+              onDownload={() => downloadProjectReferenceFile(file.id)}\n+              onDownloadSuccess={() => {\n+                notification.success({message: i18n(\"ReferenceFile.downloadingFileSuccess\", file.label, projectName)});\n+              }}\n+              tooltipText={i18n(\"ReferenceFile.downloadTooltip\")}\n+            />,\n+            // Only display remove button for reference files if user can manage project\n+            canManage ?\n+              <RemoveTableItemButton\n+                key={`remove-btn-${file.id}`}\n+                onRemove={() => removeProjectReferenceFile(projectId, file.id) }\n+                onRemoveSuccess={() => {\n+                  updateReferenceFileTable();\n+                }}\n+                tooltipText={i18n(\"ReferenceFile.removeTooltip\")}\n+                confirmText={i18n(\"ReferenceFile.confirmText\", file.label, projectName)}\n+              />\n+              :\n+              null\n+          ]\n+        // Return download and remove buttons spaced\n+        return (<Space size=\"small\">{actionButtons}</Space>);\n+      },\n+    },\n+  ];\n+\n+  // On first load of page call method to get the reference files for the project\n+  React.useEffect(() => {\n+    updateReferenceFileTable();\n+  }, []);\n+\n+  // Get the reference files for the project\n+  function updateReferenceFileTable(){\n+    getProjectReferenceFiles(projectId).then(({files}) => {\n+      setProjectReferenceFiles(files);\n+      setLoading(false);\n+    }).catch()\n+  }\n+\n+  // Options for the Ant Design upload component\n+  const referenceFileUploadOptions = {\n+    multiple: true,\n+    showUploadList: false,\n+    action: setBaseUrl(`ajax/referenceFiles/project/${projectId}/new`),\n+    onChange(info) {\n+      const { status } = info.file;\n+      if (status === \"done\") {\n+        notification.success({message: `${i18n(\"ReferenceFile.uploadFileSuccess\", info.file.name, projectName)}`});\n+        updateReferenceFileTable();\n+      } else if (status === \"error\") {\n+        notification.error({message: info.file.response.error});\n+      }\n+    },\n+  };\n+\n+  /*\n+   * Returns the upload section if a user is allowed to manage the project.\n+   * Supports drag and drop as well as click to upload\n+   */\n+  function displayUploadButton() {\n+     if (canManage)\n+      return (\n+        <Dragger {...referenceFileUploadOptions} style={{marginBottom: SPACE_XS}}>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0be93d886619460cd23b01ef845f08f831064c7"}, "originalPosition": 124}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e0f1cd19cfb95ba3af35a86f7e3a2271d907412", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/4e0f1cd19cfb95ba3af35a86f7e3a2271d907412", "committedDate": "2020-11-12T15:00:04Z", "message": "Added tests, refactored mappings, made react component for drag and drop upload, moved downloading of reference file to ajax controller"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5MTgzNjY5", "url": "https://github.com/phac-nml/irida/pull/855#pullrequestreview-529183669", "createdAt": "2020-11-12T15:10:09Z", "commit": {"oid": "4e0f1cd19cfb95ba3af35a86f7e3a2271d907412"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxMDowOVrOHx_RtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxMDowOVrOHx_RtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE3ODk5Nw==", "bodyText": "This file should be in the ajax package right?", "url": "https://github.com/phac-nml/irida/pull/855#discussion_r522178997", "createdAt": "2020-11-12T15:10:09Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/files/ReferenceFileAjaxController.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.files;\n+\n+import java.io.IOException;\n+import java.util.List;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0f1cd19cfb95ba3af35a86f7e3a2271d907412"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "785d3502ec369bf251a95de39b1c8cb166e6327d", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/785d3502ec369bf251a95de39b1c8cb166e6327d", "committedDate": "2020-11-12T16:21:11Z", "message": "Changed request mapping url to not use camelcase. Removed dependency on page variables"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5Mjk3MTgz", "url": "https://github.com/phac-nml/irida/pull/855#pullrequestreview-529297183", "createdAt": "2020-11-12T17:02:29Z", "commit": {"oid": "785d3502ec369bf251a95de39b1c8cb166e6327d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNzowMjoyOVrOHyEkZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNzowMjoyOVrOHyEkZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjI2NTcwMg==", "bodyText": "Your controllers should return the ajax response not your services.", "url": "https://github.com/phac-nml/irida/pull/855#discussion_r522265702", "createdAt": "2020-11-12T17:02:29Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIProjectReferenceFileService.java", "diffHunk": "@@ -0,0 +1,126 @@\n+package ca.corefacility.bioinformatics.irida.ria.web.services;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Locale;\n+\n+import javax.servlet.http.HttpServletResponse;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.context.MessageSource;\n+import org.springframework.stereotype.Component;\n+import org.springframework.web.multipart.MultipartFile;\n+\n+import ca.corefacility.bioinformatics.irida.exceptions.EntityNotFoundException;\n+import ca.corefacility.bioinformatics.irida.exceptions.UnsupportedReferenceFileContentError;\n+import ca.corefacility.bioinformatics.irida.model.project.Project;\n+import ca.corefacility.bioinformatics.irida.model.project.ReferenceFile;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ajax.AjaxResponse;\n+import ca.corefacility.bioinformatics.irida.ria.web.ajax.dto.ajax.AjaxUpdateItemSuccessResponse;\n+import ca.corefacility.bioinformatics.irida.service.ProjectService;\n+import ca.corefacility.bioinformatics.irida.service.ReferenceFileService;\n+\n+/**\n+ * A utility class for formatting responses for the project reference files page UI.\n+ */\n+\n+@Component\n+public class UIProjectReferenceFileService {\n+\tprivate static final Logger logger = LoggerFactory.getLogger(UIProjectReferenceFileService.class);\n+\n+\tprivate final ProjectService projectService;\n+\tprivate final ReferenceFileService referenceFileService;\n+\tprivate final MessageSource messageSource;\n+\n+\t@Autowired\n+\tpublic UIProjectReferenceFileService(ProjectService projectService, ReferenceFileService referenceFileService, MessageSource messageSource) {\n+\t\tthis.projectService = projectService;\n+\t\tthis.referenceFileService = referenceFileService;\n+\t\tthis.messageSource = messageSource;\n+\t}\n+\n+\t/**\n+\t * Add a new reference file to a project.\n+\t *\n+\t * @param projectId The id of the project to add the file to.\n+\t * @param files     {@link List} of {@link MultipartFile} file being uploaded.\n+\t * @param locale    locale of the logged in user\n+\t * @return Return success or error message if file was successfully uploaded or not\n+\t * @throws UnsupportedReferenceFileContentError if content is invalid\n+\t * @throws IOException if there is an I/O error\n+\t */\n+\tpublic AjaxResponse addReferenceFileToProject(Long projectId, List<MultipartFile> files, final Locale locale) throws UnsupportedReferenceFileContentError, IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "785d3502ec369bf251a95de39b1c8cb166e6327d"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "219a5fbdd6a0ee0e31fd61c6c443e0020191c82d", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/219a5fbdd6a0ee0e31fd61c6c443e0020191c82d", "committedDate": "2020-11-12T19:03:59Z", "message": "Removed referencefilecontrollertest as nothing is left in it. Updated service to return string and left to the ajax controller to return the ajaxresponse. Added Space to components on page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd183da083913b40b274aa6bcd507cdd745f8ae4", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/dd183da083913b40b274aa6bcd507cdd745f8ae4", "committedDate": "2020-11-12T19:46:20Z", "message": "Ran prettier on jsx file. Updated ui tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5c49bbd44d984b4dad37fe3f6a1ccb9637a66c3", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/c5c49bbd44d984b4dad37fe3f6a1ccb9637a66c3", "committedDate": "2020-11-12T19:47:04Z", "message": "Updated CHANGELOG"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19f6e069b671f932cb6a0b9c4ccab524ce6f00fb", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/19f6e069b671f932cb6a0b9c4ccab524ce6f00fb", "committedDate": "2020-11-12T20:11:15Z", "message": "Updated user docs. Added accept type to reference file uploads"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edc22ae70cb2b0a646f5d729f1ac81c0425a27b1", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/edc22ae70cb2b0a646f5d729f1ac81c0425a27b1", "committedDate": "2020-11-12T21:15:34Z", "message": "Removed margin. Added props to DragUpload for uploadText and uploadHint"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b305499a798856ef177a492a2b9cd4df39c349d3", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/b305499a798856ef177a492a2b9cd4df39c349d3", "committedDate": "2020-11-12T21:24:08Z", "message": "Removed functions for creating reference file upload and table components and rather have them created directly in the render"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ceef874df3c475b5b763e494f15671c13c999030", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/ceef874df3c475b5b763e494f15671c13c999030", "committedDate": "2020-11-12T21:27:33Z", "message": "Updated comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a2d4c699672f6a2c38bf4f177a64ae825ca9658", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/4a2d4c699672f6a2c38bf4f177a64ae825ca9658", "committedDate": "2020-11-13T13:54:04Z", "message": "Fixed javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5112105d98612e0a0656bdd585c5a1ad92c8ecf7", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/5112105d98612e0a0656bdd585c5a1ad92c8ecf7", "committedDate": "2020-11-13T16:47:26Z", "message": "Removed unused imports. Updated reference file page disable download button if a file is not found"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc413c0effe38359e560f4dd5c97bbc8d4329c35", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/cc413c0effe38359e560f4dd5c97bbc8d4329c35", "committedDate": "2020-11-14T01:39:07Z", "message": "Updated get project reference files method to use a dto rather than return a map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3af72056f2da88f0f5b79e3e8d4ef85049f36bd", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/f3af72056f2da88f0f5b79e3e8d4ef85049f36bd", "committedDate": "2020-11-15T22:24:14Z", "message": "Changed uireferencefile constructor call for project reference files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b53d25bdf53898412ff91c4160541bf5660d4f2", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/2b53d25bdf53898412ff91c4160541bf5660d4f2", "committedDate": "2020-11-15T22:26:03Z", "message": "Added missing javadoc throws"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed8e5bab8e42c96cf189f818ab0edbf26f352e18", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/ed8e5bab8e42c96cf189f818ab0edbf26f352e18", "committedDate": "2020-11-16T16:16:10Z", "message": "Updated UIReferenceFile dto constructor to accept a file size (this was needed to fix testing as well as if there is an exception caught in which the size needs to be set to an error string)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f6f981abe63b6bd54d9bfd72be4599dd6ddc716", "author": {"user": {"login": "deepsidhu85", "name": null}}, "url": "https://github.com/phac-nml/irida/commit/5f6f981abe63b6bd54d9bfd72be4599dd6ddc716", "committedDate": "2020-11-16T17:02:31Z", "message": "Updated dto to accept size and not attempt to get size inside of constructor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxODE3NzEz", "url": "https://github.com/phac-nml/irida/pull/855#pullrequestreview-531817713", "createdAt": "2020-11-16T21:52:48Z", "commit": {"oid": "5f6f981abe63b6bd54d9bfd72be4599dd6ddc716"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4949, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}