{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MjgzNzIz", "number": 848, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTozNzozNlrOE8Xgyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTozNzo1OVrOE9XirQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzM1MjQzOnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTozNzozNlrOH4ciUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTozMzo1NFrOH6BXUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk0OTg0MQ==", "bodyText": "Fix formatting of this comment", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r528949841", "createdAt": "2020-11-23T19:37:36Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -74,8 +92,21 @@ public UIPipelineDetailsResponse getPipelineDetails(UUID id, Locale locale) thro\n          */\n \t\tdetailsResponse.setSavedPipelineParameters(getSavedPipelineParameters(workflow, locale));\n \n-\t\treturn detailsResponse;\n-\t}\n+\t\t/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc3OTgxMg==", "bodyText": "What's wrong with it?", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r529779812", "createdAt": "2020-11-24T18:10:17Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -74,8 +92,21 @@ public UIPipelineDetailsResponse getPipelineDetails(UUID id, Locale locale) thro\n          */\n \t\tdetailsResponse.setSavedPipelineParameters(getSavedPipelineParameters(workflow, locale));\n \n-\t\treturn detailsResponse;\n-\t}\n+\t\t/*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk0OTg0MQ=="}, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYwMTgxMA==", "bodyText": "It was a multi-line comment. Sorry about that", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r530601810", "createdAt": "2020-11-25T19:33:54Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -74,8 +92,21 @@ public UIPipelineDetailsResponse getPipelineDetails(UUID id, Locale locale) thro\n          */\n \t\tdetailsResponse.setSavedPipelineParameters(getSavedPipelineParameters(workflow, locale));\n \n-\t\treturn detailsResponse;\n-\t}\n+\t\t/*", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk0OTg0MQ=="}, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzM1NzQ5OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTozOToxMFrOH4clcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTozNDowNVrOH6BXqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk1MDY0Mg==", "bodyText": "This comment needs to be fixed as well. Looks like there is a missing * before the comment text", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r528950642", "createdAt": "2020-11-23T19:39:10Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -74,8 +92,21 @@ public UIPipelineDetailsResponse getPipelineDetails(UUID id, Locale locale) thro\n          */\n \t\tdetailsResponse.setSavedPipelineParameters(getSavedPipelineParameters(workflow, locale));\n \n-\t\treturn detailsResponse;\n-\t}\n+\t\t/*\n+        Check / add reference files\n+         */\n+        if (description.requiresReference()) {\n+            /*\n+            Need to get a list of all the projects in the cart", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4MzU3MA==", "bodyText": "I see your issue.  Those are not incorrectly formatted comments, they are just considered \"multiline\" comments in Java.  They are not supoosed to be JavaDoc.", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r529783570", "createdAt": "2020-11-24T18:16:27Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -74,8 +92,21 @@ public UIPipelineDetailsResponse getPipelineDetails(UUID id, Locale locale) thro\n          */\n \t\tdetailsResponse.setSavedPipelineParameters(getSavedPipelineParameters(workflow, locale));\n \n-\t\treturn detailsResponse;\n-\t}\n+\t\t/*\n+        Check / add reference files\n+         */\n+        if (description.requiresReference()) {\n+            /*\n+            Need to get a list of all the projects in the cart", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk1MDY0Mg=="}, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYwMTg5Ng==", "bodyText": "Makes sense!", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r530601896", "createdAt": "2020-11-25T19:34:05Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -74,8 +92,21 @@ public UIPipelineDetailsResponse getPipelineDetails(UUID id, Locale locale) thro\n          */\n \t\tdetailsResponse.setSavedPipelineParameters(getSavedPipelineParameters(workflow, locale));\n \n-\t\treturn detailsResponse;\n-\t}\n+\t\t/*\n+        Check / add reference files\n+         */\n+        if (description.requiresReference()) {\n+            /*\n+            Need to get a list of all the projects in the cart", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk1MDY0Mg=="}, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzM2NzgwOnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTo0MjowM1rOH4crow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODoyMjo0NlrOH5PqwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk1MjIyNw==", "bodyText": "Add a logger to this file and log the stacktrace at the error level", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r528952227", "createdAt": "2020-11-23T19:42:03Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -201,21 +232,42 @@ private String localizedParamOptionLabel(Locale locale, String workflowName, Str\n \t\t\t\t.map(wp -> {\n \t\t\t\t\tMap<String, String> inputParameter = wp.getInputParameters();\n \n-\t\t\t\t\t// Go through the parameters and see which ones are getting overwritten.\n-\t\t\t\t\tList<PipelineParameter> parameters = defaultParameters.stream()\n-\t\t\t\t\t\t\t.map(parameter -> {\n-\t\t\t\t\t\t\t\tif (inputParameter.containsKey(parameter.getName())) {\n-\t\t\t\t\t\t\t\t\treturn new PipelineParameter(parameter.getName(), parameter.getLabel(),\n-\t\t\t\t\t\t\t\t\t\t\tinputParameter.get(parameter.getName()));\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\treturn new PipelineParameter(parameter.getName(), parameter.getLabel(),\n-\t\t\t\t\t\t\t\t\t\tparameter.getValue());\n-\t\t\t\t\t\t\t})\n+            // Go through the parameters and see which ones are getting overwritten.\n+            List<PipelineParameter> parameters = defaultParameters.stream()\n+                    .map(parameter -> {\n+                        if (inputParameter.containsKey(parameter.getName())) {\n+                            return new PipelineParameter(parameter.getName(), parameter.getLabel(),\n+                                    inputParameter.get(parameter.getName()));\n+                        }\n+                        return new PipelineParameter(parameter.getName(), parameter.getLabel(), parameter.getValue());\n+                    })\n \t\t\t\t\t\t\t.collect(Collectors.toList());\n-\t\t\t\t\treturn new SavedPipelineParameters(wp.getId(), wp.getLabel(), parameters);\n-\t\t\t\t})\n-\t\t\t\t.collect(Collectors.toList()));\n+            return new SavedPipelineParameters(wp.getId(), wp.getLabel(), parameters);\n+        })\n+                .collect(Collectors.toList()));\n \n \t\treturn savedParameters;\n \t}\n+\n+    private List<UIReferenceFile> getReferenceFilesForPipeline(List<Project> projects) {\n+        return projects.stream()\n+                .map(project -> {\n+\t\t\t\t\tList<UIReferenceFile> list = new ArrayList<>();\n+\t\t\t\t\tfor (Join<Project, ReferenceFile> projectReferenceFileJoin : referenceFileService.getReferenceFilesForProject(\n+\t\t\t\t\t\t\tproject)) {\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tReferenceFile file = projectReferenceFileJoin.getObject();\n+\t\t\t\t\t\t\tPath path = file.getFile();\n+\t\t\t\t\t\t\tString filesize = FileUtilities.humanReadableByteCount(Files.size(path), true);\n+\t\t\t\t\t\t\tUIReferenceFile uiReferenceFile = new UIReferenceFile(projectReferenceFileJoin, filesize);\n+\t\t\t\t\t\t\tlist.add(uiReferenceFile);\n+\t\t\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\t\t\te.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4NzU4NA==", "bodyText": "Added in 3d580f1", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r529787584", "createdAt": "2020-11-24T18:22:46Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -201,21 +232,42 @@ private String localizedParamOptionLabel(Locale locale, String workflowName, Str\n \t\t\t\t.map(wp -> {\n \t\t\t\t\tMap<String, String> inputParameter = wp.getInputParameters();\n \n-\t\t\t\t\t// Go through the parameters and see which ones are getting overwritten.\n-\t\t\t\t\tList<PipelineParameter> parameters = defaultParameters.stream()\n-\t\t\t\t\t\t\t.map(parameter -> {\n-\t\t\t\t\t\t\t\tif (inputParameter.containsKey(parameter.getName())) {\n-\t\t\t\t\t\t\t\t\treturn new PipelineParameter(parameter.getName(), parameter.getLabel(),\n-\t\t\t\t\t\t\t\t\t\t\tinputParameter.get(parameter.getName()));\n-\t\t\t\t\t\t\t\t}\n-\t\t\t\t\t\t\t\treturn new PipelineParameter(parameter.getName(), parameter.getLabel(),\n-\t\t\t\t\t\t\t\t\t\tparameter.getValue());\n-\t\t\t\t\t\t\t})\n+            // Go through the parameters and see which ones are getting overwritten.\n+            List<PipelineParameter> parameters = defaultParameters.stream()\n+                    .map(parameter -> {\n+                        if (inputParameter.containsKey(parameter.getName())) {\n+                            return new PipelineParameter(parameter.getName(), parameter.getLabel(),\n+                                    inputParameter.get(parameter.getName()));\n+                        }\n+                        return new PipelineParameter(parameter.getName(), parameter.getLabel(), parameter.getValue());\n+                    })\n \t\t\t\t\t\t\t.collect(Collectors.toList());\n-\t\t\t\t\treturn new SavedPipelineParameters(wp.getId(), wp.getLabel(), parameters);\n-\t\t\t\t})\n-\t\t\t\t.collect(Collectors.toList()));\n+            return new SavedPipelineParameters(wp.getId(), wp.getLabel(), parameters);\n+        })\n+                .collect(Collectors.toList()));\n \n \t\treturn savedParameters;\n \t}\n+\n+    private List<UIReferenceFile> getReferenceFilesForPipeline(List<Project> projects) {\n+        return projects.stream()\n+                .map(project -> {\n+\t\t\t\t\tList<UIReferenceFile> list = new ArrayList<>();\n+\t\t\t\t\tfor (Join<Project, ReferenceFile> projectReferenceFileJoin : referenceFileService.getReferenceFilesForProject(\n+\t\t\t\t\t\t\tproject)) {\n+\t\t\t\t\t\ttry {\n+\t\t\t\t\t\t\tReferenceFile file = projectReferenceFileJoin.getObject();\n+\t\t\t\t\t\t\tPath path = file.getFile();\n+\t\t\t\t\t\t\tString filesize = FileUtilities.humanReadableByteCount(Files.size(path), true);\n+\t\t\t\t\t\t\tUIReferenceFile uiReferenceFile = new UIReferenceFile(projectReferenceFileJoin, filesize);\n+\t\t\t\t\t\t\tlist.add(uiReferenceFile);\n+\t\t\t\t\t\t} catch (IOException e) {\n+\t\t\t\t\t\t\te.printStackTrace();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk1MjIyNw=="}, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzM3Nzk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIProjectReferenceFileService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTo0NDo0OVrOH4cxeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODoyNDoxM1rOH5PuSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk1MzcyMg==", "bodyText": "Rename uiFiles to uiReferenceFiles for clarity", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r528953722", "createdAt": "2020-11-23T19:44:49Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIProjectReferenceFileService.java", "diffHunk": "@@ -51,10 +55,8 @@ public UIProjectReferenceFileService(ProjectService projectService, ReferenceFil\n \t * @throws UnsupportedReferenceFileContentError if content is invalid\n \t * @throws IOException if there is an I/O error\n \t */\n-\tpublic String addReferenceFileToProject(Long projectId, List<MultipartFile> files, final Locale locale) throws UnsupportedReferenceFileContentError, IOException {\n-\t\tProject project = projectService.read(projectId);\n-\t\tlogger.debug(\"Adding reference file to project \" + projectId);\n-\n+\tpublic List<UIReferenceFile> addReferenceFileToProject(Long projectId, List<MultipartFile> files, final Locale locale) throws UnsupportedReferenceFileContentError, IOException {\n+\t\tList<UIReferenceFile> uiFiles = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4ODQ5MA==", "bodyText": "Updated in 30597c3", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r529788490", "createdAt": "2020-11-24T18:24:13Z", "author": {"login": "joshsadam"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIProjectReferenceFileService.java", "diffHunk": "@@ -51,10 +55,8 @@ public UIProjectReferenceFileService(ProjectService projectService, ReferenceFil\n \t * @throws UnsupportedReferenceFileContentError if content is invalid\n \t * @throws IOException if there is an I/O error\n \t */\n-\tpublic String addReferenceFileToProject(Long projectId, List<MultipartFile> files, final Locale locale) throws UnsupportedReferenceFileContentError, IOException {\n-\t\tProject project = projectService.read(projectId);\n-\t\tlogger.debug(\"Adding reference file to project \" + projectId);\n-\n+\tpublic List<UIReferenceFile> addReferenceFileToProject(Long projectId, List<MultipartFile> files, final Locale locale) throws UnsupportedReferenceFileContentError, IOException {\n+\t\tList<UIReferenceFile> uiFiles = new ArrayList<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk1MzcyMg=="}, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzQxNzEzOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/launch/components/UploadReferenceFile.jsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTo1NTo0OFrOH4dI2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODoyNToyNFrOH5PxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk1OTcwNw==", "bodyText": "Internationalize", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r528959707", "createdAt": "2020-11-23T19:55:48Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/launch/components/UploadReferenceFile.jsx", "diffHunk": "@@ -0,0 +1,40 @@\n+import React from \"react\";\n+import { message } from \"antd\";\n+import { setBaseUrl } from \"../../../utilities/url-utilities\";\n+import { useLaunchDispatch } from \"../launch-context\";\n+import { DragUpload } from \"../../../components/files/DragUpload.jsx\";\n+\n+/**\n+ * Component to upload a reference file to the launch pipeline page.\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function UploadReferenceFile() {\n+  const { dispatchReferenceFileUploaded } = useLaunchDispatch();\n+\n+  const options = {\n+    multiple: true,\n+    showUploadList: false,\n+    action: setBaseUrl(`/ajax/reference-files`),\n+    onChange(info) {\n+      const { status } = info.file;\n+      if (status === \"done\") {\n+        message.success(i18n(\"UploadReferenceFile.success\", info.file.name));\n+        dispatchReferenceFileUploaded({\n+          name: info.file.name,\n+          id: info.file.response.id,\n+        });\n+      } else if (status === \"error\") {\n+        message.error(`${info.file.name} file upload failed.`);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4OTIzNA==", "bodyText": "Updated in a10eeec", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r529789234", "createdAt": "2020-11-24T18:25:24Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/components/UploadReferenceFile.jsx", "diffHunk": "@@ -0,0 +1,40 @@\n+import React from \"react\";\n+import { message } from \"antd\";\n+import { setBaseUrl } from \"../../../utilities/url-utilities\";\n+import { useLaunchDispatch } from \"../launch-context\";\n+import { DragUpload } from \"../../../components/files/DragUpload.jsx\";\n+\n+/**\n+ * Component to upload a reference file to the launch pipeline page.\n+ * @returns {JSX.Element}\n+ * @constructor\n+ */\n+export function UploadReferenceFile() {\n+  const { dispatchReferenceFileUploaded } = useLaunchDispatch();\n+\n+  const options = {\n+    multiple: true,\n+    showUploadList: false,\n+    action: setBaseUrl(`/ajax/reference-files`),\n+    onChange(info) {\n+      const { status } = info.file;\n+      if (status === \"done\") {\n+        message.success(i18n(\"UploadReferenceFile.success\", info.file.name));\n+        dispatchReferenceFileUploaded({\n+          name: info.file.name,\n+          id: info.file.response.id,\n+        });\n+      } else if (status === \"error\") {\n+        message.error(`${info.file.name} file upload failed.`);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk1OTcwNw=="}, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzQxOTk2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/resources/js/pages/launch/launch-context.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTo1NjozNlrOH4dKgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxODoyNjowNFrOH5Py2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk2MDEzMA==", "bodyText": "Remove logging statement", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r528960130", "createdAt": "2020-11-23T19:56:36Z", "author": {"login": "deepsidhu85"}, "path": "src/main/webapp/resources/js/pages/launch/launch-context.js", "diffHunk": "@@ -126,6 +146,7 @@ function LaunchProvider({ children }) {\n   }\n \n   function dispatchLaunch(values) {\n+    console.log(values);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTc4OTY1OQ==", "bodyText": "I want to keep this here for now as it is going to be replaced in the final PR for the UI portion of this series.  I have it so I always know what is in that object.", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r529789659", "createdAt": "2020-11-24T18:26:04Z", "author": {"login": "joshsadam"}, "path": "src/main/webapp/resources/js/pages/launch/launch-context.js", "diffHunk": "@@ -126,6 +146,7 @@ function LaunchProvider({ children }) {\n   }\n \n   function dispatchLaunch(values) {\n+    console.log(values);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk2MDEzMA=="}, "originalCommit": {"oid": "ada318130edb57a43c34fd6dc9b4ca3b767e8178"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyNzg0MzAxOnYy", "diffSide": "RIGHT", "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTozNzo1OVrOH6Be3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxOTozNzo1OVrOH6Be3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDYwMzc0MQ==", "bodyText": "Formatting", "url": "https://github.com/phac-nml/irida/pull/848#discussion_r530603741", "createdAt": "2020-11-25T19:37:59Z", "author": {"login": "deepsidhu85"}, "path": "src/main/java/ca/corefacility/bioinformatics/irida/ria/web/services/UIPipelineService.java", "diffHunk": "@@ -26,15 +39,24 @@\n  */\n @Component\n public class UIPipelineService {\n-\tprivate final IridaWorkflowsService workflowsService;\n-\tprivate final WorkflowNamedParametersService namedParametersService;\n+\tprivate static final Logger logger = LoggerFactory.getLogger(UIPipelineService.class);\n+\n+\tprivate final Cart cart;\n+    private final IridaWorkflowsService workflowsService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a10eeec132bd8397805a30a186862baf0ab6a576"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 550, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}