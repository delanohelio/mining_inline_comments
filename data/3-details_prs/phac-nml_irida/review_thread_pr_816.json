{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4MDY2MDgx", "number": 816, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDozNDo1OVrOEqePhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDozNDo1OVrOEqePhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTcxMTQwOnYy", "diffSide": "RIGHT", "path": "doc/developer/getting-started/index.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQyMDozNDo1OVrOHcs1DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDo1NDoyMVrOHdLb4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg1NjY1Mw==", "bodyText": "Please reword the \"In order to not overwrite...\" line to something like:\nIf you wish to use a different database than the default `irida_integration_test`, you may pass the name of the database with the `-d` flag:", "url": "https://github.com/phac-nml/irida/pull/816#discussion_r499856653", "createdAt": "2020-10-05T20:34:59Z", "author": {"login": "tom114"}, "path": "doc/developer/getting-started/index.md", "diffHunk": "@@ -224,7 +224,7 @@ As the integration tests simulate a running IRIDA installation, in order to run\n ./run-tests.sh <TEST PROFILE>\n ```\n \n-This will clean and setup an empty database for IRIDA on the local machine named **irida_integration_test**.  This will also, for the Galaxy test profile, start up a Galaxy IRIDA testing Docker image running on <http://localhost:48889> and destory this Docker image afterwards (you can skip destorying the Docker image by passing `--no-kill-docker` to this script).  In order to not overwrite the database **irida_integration_test** you may pass the name of a new database as:\n+This will clean and setup an empty database for IRIDA on the local machine named **irida_integration_test**.  This will also, for the Galaxy test profile, start up a Galaxy IRIDA testing Docker image running on <http://localhost:48889> and destroy this Docker image afterwards (you can skip destroying the Docker image by passing `--no-kill-docker` to this script).  In order to not overwrite the database **irida_integration_test** you may pass the name of a new database as:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "817fce3feb934af0b1631fd4916b3e69ef11c093"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM1ODExNA==", "bodyText": "Addressed in commit 09d4a8d.", "url": "https://github.com/phac-nml/irida/pull/816#discussion_r500358114", "createdAt": "2020-10-06T14:54:21Z", "author": {"login": "ksierks"}, "path": "doc/developer/getting-started/index.md", "diffHunk": "@@ -224,7 +224,7 @@ As the integration tests simulate a running IRIDA installation, in order to run\n ./run-tests.sh <TEST PROFILE>\n ```\n \n-This will clean and setup an empty database for IRIDA on the local machine named **irida_integration_test**.  This will also, for the Galaxy test profile, start up a Galaxy IRIDA testing Docker image running on <http://localhost:48889> and destory this Docker image afterwards (you can skip destorying the Docker image by passing `--no-kill-docker` to this script).  In order to not overwrite the database **irida_integration_test** you may pass the name of a new database as:\n+This will clean and setup an empty database for IRIDA on the local machine named **irida_integration_test**.  This will also, for the Galaxy test profile, start up a Galaxy IRIDA testing Docker image running on <http://localhost:48889> and destroy this Docker image afterwards (you can skip destroying the Docker image by passing `--no-kill-docker` to this script).  In order to not overwrite the database **irida_integration_test** you may pass the name of a new database as:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTg1NjY1Mw=="}, "originalCommit": {"oid": "817fce3feb934af0b1631fd4916b3e69ef11c093"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 750, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}