{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MjgxNjA2", "number": 848, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNzowMDo0M1rOFDCHyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNzowMToyN1rOFDCJSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzI0ODExOnYy", "diffSide": "RIGHT", "path": "vertx-pg-client/src/test/java/io/vertx/pgclient/PgConnectionTestBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNzowMDo0M1rOICfVhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwMDowNTo0N1rOICvPIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ4MTQ3OA==", "bodyText": "await is not needed, vertx-unit will wait for you\nyou need to use await when there is an action to take after", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/848#discussion_r539481478", "createdAt": "2020-12-09T17:00:43Z", "author": {"login": "vietj"}, "path": "vertx-pg-client/src/test/java/io/vertx/pgclient/PgConnectionTestBase.java", "diffHunk": "@@ -462,4 +463,22 @@ public void testTransactionAbort(TestContext ctx) {\n       });\n     }));\n   }\n+\n+  @Test\n+  public void testCloseConnectionFromDifferentContext(TestContext ctx) {\n+    Async done = ctx.async(1);\n+    connector.accept(ctx.asyncAssertSuccess(conn -> {\n+      conn.query(\"SELECT 1\").execute(ctx.asyncAssertSuccess(res -> {\n+        ctx.assertEquals(1, res.size());\n+        // schedule from another context\n+        VertxInternal vertxInternal = (VertxInternal) vertx;\n+        vertxInternal.createEventLoopContext().runOnContext(v -> {\n+          conn.close(v2 -> {\n+            done.complete();\n+          });\n+        });\n+      }));\n+    }));\n+    done.await(2000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d081780616c31bcc923121ece8b2099ea96ab456"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc0MTk4Ng==", "bodyText": "ah I thought it was going to make the test fail-faster rather than being stuck if the callback is never called.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/848#discussion_r539741986", "createdAt": "2020-12-10T00:05:47Z", "author": {"login": "BillyYccc"}, "path": "vertx-pg-client/src/test/java/io/vertx/pgclient/PgConnectionTestBase.java", "diffHunk": "@@ -462,4 +463,22 @@ public void testTransactionAbort(TestContext ctx) {\n       });\n     }));\n   }\n+\n+  @Test\n+  public void testCloseConnectionFromDifferentContext(TestContext ctx) {\n+    Async done = ctx.async(1);\n+    connector.accept(ctx.asyncAssertSuccess(conn -> {\n+      conn.query(\"SELECT 1\").execute(ctx.asyncAssertSuccess(res -> {\n+        ctx.assertEquals(1, res.size());\n+        // schedule from another context\n+        VertxInternal vertxInternal = (VertxInternal) vertx;\n+        vertxInternal.createEventLoopContext().runOnContext(v -> {\n+          conn.close(v2 -> {\n+            done.complete();\n+          });\n+        });\n+      }));\n+    }));\n+    done.await(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ4MTQ3OA=="}, "originalCommit": {"oid": "d081780616c31bcc923121ece8b2099ea96ab456"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzI1MTk0OnYy", "diffSide": "RIGHT", "path": "vertx-pg-client/src/test/java/io/vertx/pgclient/PgConnectionTestBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNzowMToyN1rOICfXvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwMDowNDo0M1rOICvNmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ4MjA0Nw==", "bodyText": "rather use a Java thread it will create another context/event loop\ni.e\nnew Thread(() -> ...) {\n}.start();", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/848#discussion_r539482047", "createdAt": "2020-12-09T17:01:27Z", "author": {"login": "vietj"}, "path": "vertx-pg-client/src/test/java/io/vertx/pgclient/PgConnectionTestBase.java", "diffHunk": "@@ -462,4 +463,22 @@ public void testTransactionAbort(TestContext ctx) {\n       });\n     }));\n   }\n+\n+  @Test\n+  public void testCloseConnectionFromDifferentContext(TestContext ctx) {\n+    Async done = ctx.async(1);\n+    connector.accept(ctx.asyncAssertSuccess(conn -> {\n+      conn.query(\"SELECT 1\").execute(ctx.asyncAssertSuccess(res -> {\n+        ctx.assertEquals(1, res.size());\n+        // schedule from another context", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d081780616c31bcc923121ece8b2099ea96ab456"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTc0MTU5NQ==", "bodyText": "fixed in ce73aae.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/848#discussion_r539741595", "createdAt": "2020-12-10T00:04:43Z", "author": {"login": "BillyYccc"}, "path": "vertx-pg-client/src/test/java/io/vertx/pgclient/PgConnectionTestBase.java", "diffHunk": "@@ -462,4 +463,22 @@ public void testTransactionAbort(TestContext ctx) {\n       });\n     }));\n   }\n+\n+  @Test\n+  public void testCloseConnectionFromDifferentContext(TestContext ctx) {\n+    Async done = ctx.async(1);\n+    connector.accept(ctx.asyncAssertSuccess(conn -> {\n+      conn.query(\"SELECT 1\").execute(ctx.asyncAssertSuccess(res -> {\n+        ctx.assertEquals(1, res.size());\n+        // schedule from another context", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ4MjA0Nw=="}, "originalCommit": {"oid": "d081780616c31bcc923121ece8b2099ea96ab456"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4426, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}