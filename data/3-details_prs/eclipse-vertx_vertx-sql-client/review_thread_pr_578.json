{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODk2Nzcw", "number": 578, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo1ODowOFrODwyV6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo1ODowOFrODwyV6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDgzMDUxOnYy", "diffSide": "RIGHT", "path": "vertx-sql-client/src/main/java/io/vertx/sqlclient/impl/command/PrepareStatementCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo1ODowOVrOGD-b7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzo0NToxMVrOGEIbFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgyMTg3MA==", "bodyText": "I think this should not be public because it is not needed by back-ends, this is an package protected internal data that is relevant only to the API and SocketConnectionBase, also the name should be more explicit like shared or cacheable that will tell whether it the prepared statement result can be shared or not.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/578#discussion_r406821870", "createdAt": "2020-04-10T15:58:09Z", "author": {"login": "vietj"}, "path": "vertx-sql-client/src/main/java/io/vertx/sqlclient/impl/command/PrepareStatementCommand.java", "diffHunk": "@@ -22,18 +22,25 @@\n public class PrepareStatementCommand extends CommandBase<PreparedStatement> {\n \n   private final String sql;\n-  public long statement; // 0 means unamed statement otherwise CString\n+  private final boolean auto;\n \n-  public PrepareStatementCommand(String sql) {\n+  public PrepareStatementCommand(String sql, boolean auto) {\n     this.sql = sql;\n+    this.auto = auto;\n   }\n \n   public String sql() {\n     return sql;\n   }\n \n-  public long statement() {\n-    return statement;\n+  /**\n+   * Indicate whether this command is scheduled from {@link io.vertx.sqlclient.SqlClient#preparedQuery(String) one-shot preparedQuery} or {@link io.vertx.sqlclient.SqlConnection#prepare(String)}.\n+   * This flag will tell if lifecycle of the statement will be controlled by the client or not.\n+   *\n+   * @return true if the command is a one-shot prepared query.\n+   */\n+  public boolean auto() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e42d269d4d7b96dfd70c1a62ac229cce5141b4e5"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4NTQ5Mw==", "bodyText": "the rename is updated in 9408a3b, changing the public access modifier will not be possible because they're in different packages.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/578#discussion_r406985493", "createdAt": "2020-04-10T23:45:11Z", "author": {"login": "BillyYccc"}, "path": "vertx-sql-client/src/main/java/io/vertx/sqlclient/impl/command/PrepareStatementCommand.java", "diffHunk": "@@ -22,18 +22,25 @@\n public class PrepareStatementCommand extends CommandBase<PreparedStatement> {\n \n   private final String sql;\n-  public long statement; // 0 means unamed statement otherwise CString\n+  private final boolean auto;\n \n-  public PrepareStatementCommand(String sql) {\n+  public PrepareStatementCommand(String sql, boolean auto) {\n     this.sql = sql;\n+    this.auto = auto;\n   }\n \n   public String sql() {\n     return sql;\n   }\n \n-  public long statement() {\n-    return statement;\n+  /**\n+   * Indicate whether this command is scheduled from {@link io.vertx.sqlclient.SqlClient#preparedQuery(String) one-shot preparedQuery} or {@link io.vertx.sqlclient.SqlConnection#prepare(String)}.\n+   * This flag will tell if lifecycle of the statement will be controlled by the client or not.\n+   *\n+   * @return true if the command is a one-shot prepared query.\n+   */\n+  public boolean auto() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgyMTg3MA=="}, "originalCommit": {"oid": "e42d269d4d7b96dfd70c1a62ac229cce5141b4e5"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4472, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}