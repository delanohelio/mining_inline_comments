{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMTIyMTEy", "number": 550, "title": "Enable binary data type TCK tests", "bodyText": "For issue #499", "createdAt": "2020-03-19T16:55:56Z", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/550", "merged": true, "mergeCommit": {"oid": "772962202c4d246796080ac6d5f530dab3c5e4a5"}, "closed": true, "closedAt": "2020-03-20T20:58:45Z", "author": {"login": "aguibert"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPO-XMABqjMxNDY0NTUxMDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPV3CUAFqTM3ODE4NzM5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce412f6679ed03e99ebdccacb8663578c61fd6dc", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/ce412f6679ed03e99ebdccacb8663578c61fd6dc", "committedDate": "2020-03-19T16:55:02Z", "message": "Enable binary data type TCK tests"}, "afterCommit": {"oid": "82e2c7774caf18341d96d20d2cd439b208c68592", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/82e2c7774caf18341d96d20d2cd439b208c68592", "committedDate": "2020-03-19T17:01:37Z", "message": "Enable binary data type TCK tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8adfb8b583d47a491cd238f21cbaa409ee36aa12", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/8adfb8b583d47a491cd238f21cbaa409ee36aa12", "committedDate": "2020-03-19T17:29:29Z", "message": "Enable binary data type TCK tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82e2c7774caf18341d96d20d2cd439b208c68592", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/82e2c7774caf18341d96d20d2cd439b208c68592", "committedDate": "2020-03-19T17:01:37Z", "message": "Enable binary data type TCK tests"}, "afterCommit": {"oid": "8adfb8b583d47a491cd238f21cbaa409ee36aa12", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/8adfb8b583d47a491cd238f21cbaa409ee36aa12", "committedDate": "2020-03-19T17:29:29Z", "message": "Enable binary data type TCK tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MTg3MDEx", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/550#pullrequestreview-378187011", "createdAt": "2020-03-20T01:01:20Z", "commit": {"oid": "8adfb8b583d47a491cd238f21cbaa409ee36aa12"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMTowMToyMFrOF5FJ1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMTowMToyMFrOF5FJ1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM5NzU4OA==", "bodyText": "Why not just add \"return clazz == Numeric.class\" to canConvert in ClientTypes?  Is there a case where ClientTypes is a BIT, CHAR or LONGVARCHAR and you want to return a Numeric class only if it is not one of those types?", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/550#discussion_r395397588", "createdAt": "2020-03-20T01:01:20Z", "author": {"login": "gjwatts"}, "path": "vertx-db2-client/src/main/java/io/vertx/db2client/impl/codec/DB2ParamDesc.java", "diffHunk": "@@ -40,12 +43,29 @@ public String prepare(TupleInternal values) {\n         for (int i = 0; i < paramDefinitions.columns_; i++) {\n         \tObject val = values.getValue(i);\n         \tint type =  paramDefinitions.types_[i];\n-        \tif (!ClientTypes.canConvert(val, type)) {\n+        \tif (!canConvert(val, type)) {\n         \t\treturn \"Parameter at position [\" + i + \"] with class = [\" + val.getClass() + \n         \t\t\t\t\"] cannot be coerced to [\" + ClientTypes.getTypeString(type) + \"] for encoding\";\n         \t}\n         }\n         return null;\n     }\n+    \n+    private static boolean canConvert(Object val, int type) {\n+    \tif (ClientTypes.canConvert(val, type))\n+    \t\treturn true;\n+    \tClass<?> clazz = val.getClass();\n+    \tswitch (type) {\n+        case ClientTypes.BIGINT:\n+        case ClientTypes.BOOLEAN:\n+        case ClientTypes.DECIMAL:\n+        case ClientTypes.DOUBLE:\n+        case ClientTypes.INTEGER:\n+        case ClientTypes.REAL:\n+        case ClientTypes.SMALLINT:\n+        \treturn clazz == Numeric.class;\n+    \t}\n+    \treturn false;\n+    }\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8adfb8b583d47a491cd238f21cbaa409ee36aa12"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MTg3MzIw", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/550#pullrequestreview-378187320", "createdAt": "2020-03-20T01:02:44Z", "commit": {"oid": "8adfb8b583d47a491cd238f21cbaa409ee36aa12"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMTowMjo0NFrOF5FK3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMTowMjo0NFrOF5FK3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM5Nzg1Mg==", "bodyText": "Should we add a check to make sure the passed in i >= 0?  Or are we guaranteed a value that is 0+", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/550#discussion_r395397852", "createdAt": "2020-03-20T01:02:44Z", "author": {"login": "gjwatts"}, "path": "vertx-db2-client/src/main/java/io/vertx/db2client/impl/drda/ColumnMetaData.java", "diffHunk": "@@ -105,21 +107,48 @@ public void setColumnCount(final int numColumns) {\n     }\n     \n     public List<String> getColumnNames() {\n+    \tList<String> cols = new ArrayList<>(columns_);\n+    \tfor (int i = 0; i < columns_; i++) {\n+    \t\tcols.add(i, getColumnName(i));\n+    \t}\n+    \treturn cols;\n+    }\n+    \n+    public String getColumnName(int i) {\n     \t// Prefer column names from SQLDXGRP if set\n-    \tif (!isNull(sqlxName_))\n-    \t\treturn Collections.unmodifiableList(Stream.of(sqlxName_).collect(Collectors.toList()));\n+    \tif (sqlxName_ != null && i < sqlxName_.length && sqlxName_[i] != null)\n+    \t\treturn sqlxName_[i];\n     \t// Otherwise use column names from SQLDOPTGRP\n-    \tif (sqlName_ != null && sqlName_.length > 0)\n-    \t\treturn Collections.unmodifiableList(Stream.of(sqlName_).collect(Collectors.toList()));\n-    \treturn Collections.emptyList();\n+    \tif (sqlName_ != null && i < sqlName_.length)\n+    \t\treturn sqlName_[i];\n+    \treturn null;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8adfb8b583d47a491cd238f21cbaa409ee36aa12"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MTg3Mzkw", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/550#pullrequestreview-378187390", "createdAt": "2020-03-20T01:03:04Z", "commit": {"oid": "8adfb8b583d47a491cd238f21cbaa409ee36aa12"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMTowMzowNFrOF5FLLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMTowMzowNFrOF5FLLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM5NzkzNQ==", "bodyText": "Remove?", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/550#discussion_r395397935", "createdAt": "2020-03-20T01:03:04Z", "author": {"login": "gjwatts"}, "path": "vertx-sql-client/src/main/java/io/vertx/sqlclient/impl/ListTuple.java", "diffHunk": "@@ -19,6 +19,7 @@\n \n import io.vertx.sqlclient.Tuple;\n \n+import java.util.Iterator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8adfb8b583d47a491cd238f21cbaa409ee36aa12"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1575, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}