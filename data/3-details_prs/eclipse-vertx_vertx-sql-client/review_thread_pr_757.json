{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyOTQ4NjM1", "number": 757, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMDowOTo1NVrOEiC9dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yN1QwMjo0MzowMVrOFrKRAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTM1NTQyOnYy", "diffSide": "RIGHT", "path": "vertx-mssql-client/src/main/java/io/vertx/mssqlclient/impl/protocol/token/DataPacketStreamTokenType.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMDowOTo1NVrOHPspLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNFQxNzo0OToyOVrOI85LeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIyMjEyNw==", "bodyText": "You could use Netty IntObjectHashmap here.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/757#discussion_r486222127", "createdAt": "2020-09-10T10:09:55Z", "author": {"login": "BillyYccc"}, "path": "vertx-mssql-client/src/main/java/io/vertx/mssqlclient/impl/protocol/token/DataPacketStreamTokenType.java", "diffHunk": "@@ -11,28 +11,54 @@\n \n package io.vertx.mssqlclient.impl.protocol.token;\n \n-public final class DataPacketStreamTokenType {\n-  public static final int ALTMETADATA_TOKEN = 0x88;\n-  public static final int ALTROW_TOKEN = 0xD3;\n-  public static final int COLMETADATA_TOKEN = 0x81;\n-  public static final int COLINFO_TOKEN = 0xA5;\n-  public static final int DONE_TOKEN = 0xFD;\n-  public static final int DONEPROC_TOKEN = 0xFE;\n-  public static final int DONEINPROC_TOKEN = 0xFF;\n-  public static final int ENVCHANGE_TOKEN = 0xE3;\n-  public static final int ERROR_TOKEN = 0xAA;\n-  public static final int FEATUREEXTACK = 0xAE;\n-  public static final int FEDAUTHINFO_TOKEN = 0xEE;\n-  public static final int INFO_TOKEN = 0xAB;\n-  public static final int LOGINACK_TOKEN = 0xAD;\n-  public static final int NBCROW_TOKEN = 0xD2;\n-  public static final int ORDER_TOKEN = 0xA9;\n-  public static final int RETURNSTATUS_TOKEN = 0x79;\n-  public static final int RETURNVALUE_TOKEN = 0xAC;\n-  public static final int ROW_TOKEN = 0xD1;\n-  public static final int SESSIONSTATE_TOKEN = 0xE4;\n-  public static final int SSPI_TOKEN = 0xED;\n-  public static final int TABNAME_TOKEN = 0xA4;\n-\n-  public static final int OFFSET_TOKEN = 0x78;\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n+import static java.util.stream.Collectors.toMap;\n+\n+public enum DataPacketStreamTokenType {\n+\n+  ALTMETADATA_TOKEN(0x88),\n+  ALTROW_TOKEN(0xD3),\n+  COLMETADATA_TOKEN(0x81),\n+  COLINFO_TOKEN(0xA5),\n+  DONE_TOKEN(0xFD),\n+  DONEPROC_TOKEN(0xFE),\n+  DONEINPROC_TOKEN(0xFF),\n+  ENVCHANGE_TOKEN(0xE3),\n+  ERROR_TOKEN(0xAA),\n+  FEATUREEXTACK(0xAE),\n+  FEDAUTHINFO_TOKEN(0xEE),\n+  INFO_TOKEN(0xAB),\n+  LOGINACK_TOKEN(0xAD),\n+  NBCROW_TOKEN(0xD2),\n+  ORDER_TOKEN(0xA9),\n+  RETURNSTATUS_TOKEN(0x79),\n+  RETURNVALUE_TOKEN(0xAC),\n+  ROW_TOKEN(0xD1),\n+  SESSIONSTATE_TOKEN(0xE4),\n+  SSPI_TOKEN(0xED),\n+  TABNAME_TOKEN(0xA4),\n+  OFFSET_TOKEN(0x78);\n+\n+  private final int value;\n+\n+  private static final Map<Integer, DataPacketStreamTokenType> lookup;\n+\n+  static {\n+    lookup = Arrays.stream(DataPacketStreamTokenType.values()).collect(toMap(DataPacketStreamTokenType::value, Function.identity()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db5760069b9cacdded3ad3c1b8b5bf021b38e4c2"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjM0NTI3OA==", "bodyText": "Good point", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/757#discussion_r486345278", "createdAt": "2020-09-10T13:39:32Z", "author": {"login": "tsegismont"}, "path": "vertx-mssql-client/src/main/java/io/vertx/mssqlclient/impl/protocol/token/DataPacketStreamTokenType.java", "diffHunk": "@@ -11,28 +11,54 @@\n \n package io.vertx.mssqlclient.impl.protocol.token;\n \n-public final class DataPacketStreamTokenType {\n-  public static final int ALTMETADATA_TOKEN = 0x88;\n-  public static final int ALTROW_TOKEN = 0xD3;\n-  public static final int COLMETADATA_TOKEN = 0x81;\n-  public static final int COLINFO_TOKEN = 0xA5;\n-  public static final int DONE_TOKEN = 0xFD;\n-  public static final int DONEPROC_TOKEN = 0xFE;\n-  public static final int DONEINPROC_TOKEN = 0xFF;\n-  public static final int ENVCHANGE_TOKEN = 0xE3;\n-  public static final int ERROR_TOKEN = 0xAA;\n-  public static final int FEATUREEXTACK = 0xAE;\n-  public static final int FEDAUTHINFO_TOKEN = 0xEE;\n-  public static final int INFO_TOKEN = 0xAB;\n-  public static final int LOGINACK_TOKEN = 0xAD;\n-  public static final int NBCROW_TOKEN = 0xD2;\n-  public static final int ORDER_TOKEN = 0xA9;\n-  public static final int RETURNSTATUS_TOKEN = 0x79;\n-  public static final int RETURNVALUE_TOKEN = 0xAC;\n-  public static final int ROW_TOKEN = 0xD1;\n-  public static final int SESSIONSTATE_TOKEN = 0xE4;\n-  public static final int SSPI_TOKEN = 0xED;\n-  public static final int TABNAME_TOKEN = 0xA4;\n-\n-  public static final int OFFSET_TOKEN = 0x78;\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n+import static java.util.stream.Collectors.toMap;\n+\n+public enum DataPacketStreamTokenType {\n+\n+  ALTMETADATA_TOKEN(0x88),\n+  ALTROW_TOKEN(0xD3),\n+  COLMETADATA_TOKEN(0x81),\n+  COLINFO_TOKEN(0xA5),\n+  DONE_TOKEN(0xFD),\n+  DONEPROC_TOKEN(0xFE),\n+  DONEINPROC_TOKEN(0xFF),\n+  ENVCHANGE_TOKEN(0xE3),\n+  ERROR_TOKEN(0xAA),\n+  FEATUREEXTACK(0xAE),\n+  FEDAUTHINFO_TOKEN(0xEE),\n+  INFO_TOKEN(0xAB),\n+  LOGINACK_TOKEN(0xAD),\n+  NBCROW_TOKEN(0xD2),\n+  ORDER_TOKEN(0xA9),\n+  RETURNSTATUS_TOKEN(0x79),\n+  RETURNVALUE_TOKEN(0xAC),\n+  ROW_TOKEN(0xD1),\n+  SESSIONSTATE_TOKEN(0xE4),\n+  SSPI_TOKEN(0xED),\n+  TABNAME_TOKEN(0xA4),\n+  OFFSET_TOKEN(0x78);\n+\n+  private final int value;\n+\n+  private static final Map<Integer, DataPacketStreamTokenType> lookup;\n+\n+  static {\n+    lookup = Arrays.stream(DataPacketStreamTokenType.values()).collect(toMap(DataPacketStreamTokenType::value, Function.identity()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIyMjEyNw=="}, "originalCommit": {"oid": "db5760069b9cacdded3ad3c1b8b5bf021b38e4c2"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDcyMjI5Nw==", "bodyText": "Done", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/757#discussion_r600722297", "createdAt": "2021-03-24T17:49:29Z", "author": {"login": "tsegismont"}, "path": "vertx-mssql-client/src/main/java/io/vertx/mssqlclient/impl/protocol/token/DataPacketStreamTokenType.java", "diffHunk": "@@ -11,28 +11,54 @@\n \n package io.vertx.mssqlclient.impl.protocol.token;\n \n-public final class DataPacketStreamTokenType {\n-  public static final int ALTMETADATA_TOKEN = 0x88;\n-  public static final int ALTROW_TOKEN = 0xD3;\n-  public static final int COLMETADATA_TOKEN = 0x81;\n-  public static final int COLINFO_TOKEN = 0xA5;\n-  public static final int DONE_TOKEN = 0xFD;\n-  public static final int DONEPROC_TOKEN = 0xFE;\n-  public static final int DONEINPROC_TOKEN = 0xFF;\n-  public static final int ENVCHANGE_TOKEN = 0xE3;\n-  public static final int ERROR_TOKEN = 0xAA;\n-  public static final int FEATUREEXTACK = 0xAE;\n-  public static final int FEDAUTHINFO_TOKEN = 0xEE;\n-  public static final int INFO_TOKEN = 0xAB;\n-  public static final int LOGINACK_TOKEN = 0xAD;\n-  public static final int NBCROW_TOKEN = 0xD2;\n-  public static final int ORDER_TOKEN = 0xA9;\n-  public static final int RETURNSTATUS_TOKEN = 0x79;\n-  public static final int RETURNVALUE_TOKEN = 0xAC;\n-  public static final int ROW_TOKEN = 0xD1;\n-  public static final int SESSIONSTATE_TOKEN = 0xE4;\n-  public static final int SSPI_TOKEN = 0xED;\n-  public static final int TABNAME_TOKEN = 0xA4;\n-\n-  public static final int OFFSET_TOKEN = 0x78;\n+import java.util.Arrays;\n+import java.util.Map;\n+import java.util.function.Function;\n+\n+import static java.util.stream.Collectors.toMap;\n+\n+public enum DataPacketStreamTokenType {\n+\n+  ALTMETADATA_TOKEN(0x88),\n+  ALTROW_TOKEN(0xD3),\n+  COLMETADATA_TOKEN(0x81),\n+  COLINFO_TOKEN(0xA5),\n+  DONE_TOKEN(0xFD),\n+  DONEPROC_TOKEN(0xFE),\n+  DONEINPROC_TOKEN(0xFF),\n+  ENVCHANGE_TOKEN(0xE3),\n+  ERROR_TOKEN(0xAA),\n+  FEATUREEXTACK(0xAE),\n+  FEDAUTHINFO_TOKEN(0xEE),\n+  INFO_TOKEN(0xAB),\n+  LOGINACK_TOKEN(0xAD),\n+  NBCROW_TOKEN(0xD2),\n+  ORDER_TOKEN(0xA9),\n+  RETURNSTATUS_TOKEN(0x79),\n+  RETURNVALUE_TOKEN(0xAC),\n+  ROW_TOKEN(0xD1),\n+  SESSIONSTATE_TOKEN(0xE4),\n+  SSPI_TOKEN(0xED),\n+  TABNAME_TOKEN(0xA4),\n+  OFFSET_TOKEN(0x78);\n+\n+  private final int value;\n+\n+  private static final Map<Integer, DataPacketStreamTokenType> lookup;\n+\n+  static {\n+    lookup = Arrays.stream(DataPacketStreamTokenType.values()).collect(toMap(DataPacketStreamTokenType::value, Function.identity()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjIyMjEyNw=="}, "originalCommit": {"oid": "db5760069b9cacdded3ad3c1b8b5bf021b38e4c2"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzgwODAxMjgxOnYy", "diffSide": "RIGHT", "path": "vertx-mssql-client/src/main/java/io/vertx/mssqlclient/impl/codec/TdsMessageDecoder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yN1QwMjo0MzowMVrOI-vVCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yN1QxMDoxNDo1MVrOI-x5fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjY1ODA1Ng==", "bodyText": "why add a slice here?", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/757#discussion_r602658056", "createdAt": "2021-03-27T02:43:01Z", "author": {"login": "BillyYccc"}, "path": "vertx-mssql-client/src/main/java/io/vertx/mssqlclient/impl/codec/TdsMessageDecoder.java", "diffHunk": "@@ -41,18 +41,17 @@ protected void decode(ChannelHandlerContext channelHandlerContext, TdsPacket tds\n     if (tdsPacket.status() == MessageStatus.END_OF_MESSAGE) {\n       if (message == null) {\n         message = TdsMessage.newTdsMessageFromSinglePacket(tdsPacket);\n-        decodeMessage();\n       } else {\n         // last packet of this message\n         CompositeByteBuf messageData = (CompositeByteBuf) message.content();\n         messageData.addComponent(true, tdsPacket.content());\n-        decodeMessage();\n       }\n+      decodeMessage();\n     } else {\n       if (message == null) {\n         // first packet of this message and there will be more packets\n         CompositeByteBuf messageData = channelHandlerContext.alloc().compositeDirectBuffer();\n-        messageData.addComponent(true, tdsPacket.content());\n+        messageData.addComponent(true, tdsPacket.content().slice());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14164d3a5a7594c76d55fc4ea3cb9f2db94eea05"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjY5OTg3NA==", "bodyText": "It might be a left-over from my branch rebasing. I don't believe it's necessary indeed.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/757#discussion_r602699874", "createdAt": "2021-03-27T10:11:13Z", "author": {"login": "tsegismont"}, "path": "vertx-mssql-client/src/main/java/io/vertx/mssqlclient/impl/codec/TdsMessageDecoder.java", "diffHunk": "@@ -41,18 +41,17 @@ protected void decode(ChannelHandlerContext channelHandlerContext, TdsPacket tds\n     if (tdsPacket.status() == MessageStatus.END_OF_MESSAGE) {\n       if (message == null) {\n         message = TdsMessage.newTdsMessageFromSinglePacket(tdsPacket);\n-        decodeMessage();\n       } else {\n         // last packet of this message\n         CompositeByteBuf messageData = (CompositeByteBuf) message.content();\n         messageData.addComponent(true, tdsPacket.content());\n-        decodeMessage();\n       }\n+      decodeMessage();\n     } else {\n       if (message == null) {\n         // first packet of this message and there will be more packets\n         CompositeByteBuf messageData = channelHandlerContext.alloc().compositeDirectBuffer();\n-        messageData.addComponent(true, tdsPacket.content());\n+        messageData.addComponent(true, tdsPacket.content().slice());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjY1ODA1Ng=="}, "originalCommit": {"oid": "14164d3a5a7594c76d55fc4ea3cb9f2db94eea05"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjcwMDE1OA==", "bodyText": "I rebased the PR and removed this", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/757#discussion_r602700158", "createdAt": "2021-03-27T10:14:51Z", "author": {"login": "tsegismont"}, "path": "vertx-mssql-client/src/main/java/io/vertx/mssqlclient/impl/codec/TdsMessageDecoder.java", "diffHunk": "@@ -41,18 +41,17 @@ protected void decode(ChannelHandlerContext channelHandlerContext, TdsPacket tds\n     if (tdsPacket.status() == MessageStatus.END_OF_MESSAGE) {\n       if (message == null) {\n         message = TdsMessage.newTdsMessageFromSinglePacket(tdsPacket);\n-        decodeMessage();\n       } else {\n         // last packet of this message\n         CompositeByteBuf messageData = (CompositeByteBuf) message.content();\n         messageData.addComponent(true, tdsPacket.content());\n-        decodeMessage();\n       }\n+      decodeMessage();\n     } else {\n       if (message == null) {\n         // first packet of this message and there will be more packets\n         CompositeByteBuf messageData = channelHandlerContext.alloc().compositeDirectBuffer();\n-        messageData.addComponent(true, tdsPacket.content());\n+        messageData.addComponent(true, tdsPacket.content().slice());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjY1ODA1Ng=="}, "originalCommit": {"oid": "14164d3a5a7594c76d55fc4ea3cb9f2db94eea05"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4416, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}