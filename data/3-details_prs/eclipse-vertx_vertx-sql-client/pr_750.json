{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc2MzMyMzAy", "number": 750, "title": "Column descriptor", "bodyText": "Close #657", "createdAt": "2020-08-31T14:23:31Z", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750", "merged": true, "mergeCommit": {"oid": "41f65ad215877ed1ffc7a6762733d7f529c61b3b"}, "closed": true, "closedAt": "2020-09-14T09:10:19Z", "author": {"login": "vietj"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdE9_eCAFqTQ4MDk0NDQxNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdIvQLHABqjM3NjIxOTkxNjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwOTQ0NDE2", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#pullrequestreview-480944416", "createdAt": "2020-09-02T15:31:04Z", "commit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTozMTowNFrOHL0_rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNTo0MTo1MlrOHL1eZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NDY1NQ==", "bodyText": "TIME should be mapped to JDBCType.TIME", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r482164655", "createdAt": "2020-09-02T15:31:04Z", "author": {"login": "BillyYccc"}, "path": "vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/datatype/DataType.java", "diffHunk": "@@ -8,34 +8,35 @@\n import io.vertx.mysqlclient.impl.protocol.ColumnDefinition;\n import io.vertx.sqlclient.data.Numeric;\n \n+import java.sql.JDBCType;\n import java.time.Duration;\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n \n public enum DataType {\n-  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class),\n-  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class),\n-  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class),\n-  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class),\n-  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class),\n-  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class),\n-  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class),\n-  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class), // DECIMAL\n-  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class), // CHAR, BINARY\n-  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class), //VARCHAR, VARBINARY\n-  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class),\n-  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class),\n-  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class),\n-  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class),\n-  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class),\n-  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class),\n-  DATETIME(ColumnDefinition.ColumnType.MYSQL_TYPE_DATETIME, LocalDateTime.class, LocalDateTime.class),\n-  YEAR(ColumnDefinition.ColumnType.MYSQL_TYPE_YEAR, Short.class, Short.class),\n-  TIMESTAMP(ColumnDefinition.ColumnType.MYSQL_TYPE_TIMESTAMP, LocalDateTime.class, LocalDateTime.class),\n-  BIT(ColumnDefinition.ColumnType.MYSQL_TYPE_BIT, Long.class, Long.class),\n-  JSON(ColumnDefinition.ColumnType.MYSQL_TYPE_JSON, Object.class, Object.class),\n-  NULL(ColumnDefinition.ColumnType.MYSQL_TYPE_NULL, Object.class, Object.class), // useful for mariadb prepare statement response\n-  UNBIND(-1, Object.class, Object.class); // useful for binding param values\n+  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class, JDBCType.TINYINT),\n+  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class, JDBCType.SMALLINT),\n+  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class, JDBCType.BIGINT),\n+  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class, JDBCType.DOUBLE),\n+  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class, JDBCType.REAL),\n+  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class, JDBCType.NUMERIC), // DECIMAL\n+  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class, JDBCType.VARCHAR), // CHAR, BINARY\n+  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class, JDBCType.VARCHAR), //VARCHAR, VARBINARY\n+  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class, JDBCType.DATE),\n+  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class, JDBCType.DATE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NTMzOA==", "bodyText": "DATETIME should be mapped to JDBCType.TIMESTAMP", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r482165338", "createdAt": "2020-09-02T15:31:58Z", "author": {"login": "BillyYccc"}, "path": "vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/datatype/DataType.java", "diffHunk": "@@ -8,34 +8,35 @@\n import io.vertx.mysqlclient.impl.protocol.ColumnDefinition;\n import io.vertx.sqlclient.data.Numeric;\n \n+import java.sql.JDBCType;\n import java.time.Duration;\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n \n public enum DataType {\n-  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class),\n-  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class),\n-  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class),\n-  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class),\n-  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class),\n-  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class),\n-  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class),\n-  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class), // DECIMAL\n-  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class), // CHAR, BINARY\n-  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class), //VARCHAR, VARBINARY\n-  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class),\n-  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class),\n-  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class),\n-  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class),\n-  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class),\n-  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class),\n-  DATETIME(ColumnDefinition.ColumnType.MYSQL_TYPE_DATETIME, LocalDateTime.class, LocalDateTime.class),\n-  YEAR(ColumnDefinition.ColumnType.MYSQL_TYPE_YEAR, Short.class, Short.class),\n-  TIMESTAMP(ColumnDefinition.ColumnType.MYSQL_TYPE_TIMESTAMP, LocalDateTime.class, LocalDateTime.class),\n-  BIT(ColumnDefinition.ColumnType.MYSQL_TYPE_BIT, Long.class, Long.class),\n-  JSON(ColumnDefinition.ColumnType.MYSQL_TYPE_JSON, Object.class, Object.class),\n-  NULL(ColumnDefinition.ColumnType.MYSQL_TYPE_NULL, Object.class, Object.class), // useful for mariadb prepare statement response\n-  UNBIND(-1, Object.class, Object.class); // useful for binding param values\n+  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class, JDBCType.TINYINT),\n+  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class, JDBCType.SMALLINT),\n+  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class, JDBCType.BIGINT),\n+  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class, JDBCType.DOUBLE),\n+  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class, JDBCType.REAL),\n+  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class, JDBCType.NUMERIC), // DECIMAL\n+  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class, JDBCType.VARCHAR), // CHAR, BINARY\n+  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class, JDBCType.VARCHAR), //VARCHAR, VARBINARY\n+  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class, JDBCType.DATE),\n+  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class, JDBCType.DATE),\n+  DATETIME(ColumnDefinition.ColumnType.MYSQL_TYPE_DATETIME, LocalDateTime.class, LocalDateTime.class, JDBCType.DATE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NTc5MQ==", "bodyText": "YEAR should be mapped to JDBCType.SMALLINT", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r482165791", "createdAt": "2020-09-02T15:32:37Z", "author": {"login": "BillyYccc"}, "path": "vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/datatype/DataType.java", "diffHunk": "@@ -8,34 +8,35 @@\n import io.vertx.mysqlclient.impl.protocol.ColumnDefinition;\n import io.vertx.sqlclient.data.Numeric;\n \n+import java.sql.JDBCType;\n import java.time.Duration;\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n \n public enum DataType {\n-  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class),\n-  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class),\n-  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class),\n-  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class),\n-  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class),\n-  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class),\n-  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class),\n-  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class), // DECIMAL\n-  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class), // CHAR, BINARY\n-  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class), //VARCHAR, VARBINARY\n-  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class),\n-  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class),\n-  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class),\n-  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class),\n-  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class),\n-  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class),\n-  DATETIME(ColumnDefinition.ColumnType.MYSQL_TYPE_DATETIME, LocalDateTime.class, LocalDateTime.class),\n-  YEAR(ColumnDefinition.ColumnType.MYSQL_TYPE_YEAR, Short.class, Short.class),\n-  TIMESTAMP(ColumnDefinition.ColumnType.MYSQL_TYPE_TIMESTAMP, LocalDateTime.class, LocalDateTime.class),\n-  BIT(ColumnDefinition.ColumnType.MYSQL_TYPE_BIT, Long.class, Long.class),\n-  JSON(ColumnDefinition.ColumnType.MYSQL_TYPE_JSON, Object.class, Object.class),\n-  NULL(ColumnDefinition.ColumnType.MYSQL_TYPE_NULL, Object.class, Object.class), // useful for mariadb prepare statement response\n-  UNBIND(-1, Object.class, Object.class); // useful for binding param values\n+  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class, JDBCType.TINYINT),\n+  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class, JDBCType.SMALLINT),\n+  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class, JDBCType.BIGINT),\n+  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class, JDBCType.DOUBLE),\n+  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class, JDBCType.REAL),\n+  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class, JDBCType.NUMERIC), // DECIMAL\n+  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class, JDBCType.VARCHAR), // CHAR, BINARY\n+  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class, JDBCType.VARCHAR), //VARCHAR, VARBINARY\n+  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class, JDBCType.DATE),\n+  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class, JDBCType.DATE),\n+  DATETIME(ColumnDefinition.ColumnType.MYSQL_TYPE_DATETIME, LocalDateTime.class, LocalDateTime.class, JDBCType.DATE),\n+  YEAR(ColumnDefinition.ColumnType.MYSQL_TYPE_YEAR, Short.class, Short.class, JDBCType.DATE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NjAzNA==", "bodyText": "TIMESTAMP should be mapped to JDBCType.TIMESTAMP", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r482166034", "createdAt": "2020-09-02T15:32:59Z", "author": {"login": "BillyYccc"}, "path": "vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/datatype/DataType.java", "diffHunk": "@@ -8,34 +8,35 @@\n import io.vertx.mysqlclient.impl.protocol.ColumnDefinition;\n import io.vertx.sqlclient.data.Numeric;\n \n+import java.sql.JDBCType;\n import java.time.Duration;\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n \n public enum DataType {\n-  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class),\n-  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class),\n-  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class),\n-  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class),\n-  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class),\n-  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class),\n-  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class),\n-  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class), // DECIMAL\n-  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class), // CHAR, BINARY\n-  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class), //VARCHAR, VARBINARY\n-  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class),\n-  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class),\n-  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class),\n-  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class),\n-  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class),\n-  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class),\n-  DATETIME(ColumnDefinition.ColumnType.MYSQL_TYPE_DATETIME, LocalDateTime.class, LocalDateTime.class),\n-  YEAR(ColumnDefinition.ColumnType.MYSQL_TYPE_YEAR, Short.class, Short.class),\n-  TIMESTAMP(ColumnDefinition.ColumnType.MYSQL_TYPE_TIMESTAMP, LocalDateTime.class, LocalDateTime.class),\n-  BIT(ColumnDefinition.ColumnType.MYSQL_TYPE_BIT, Long.class, Long.class),\n-  JSON(ColumnDefinition.ColumnType.MYSQL_TYPE_JSON, Object.class, Object.class),\n-  NULL(ColumnDefinition.ColumnType.MYSQL_TYPE_NULL, Object.class, Object.class), // useful for mariadb prepare statement response\n-  UNBIND(-1, Object.class, Object.class); // useful for binding param values\n+  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class, JDBCType.TINYINT),\n+  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class, JDBCType.SMALLINT),\n+  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class, JDBCType.BIGINT),\n+  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class, JDBCType.DOUBLE),\n+  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class, JDBCType.REAL),\n+  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class, JDBCType.NUMERIC), // DECIMAL\n+  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class, JDBCType.VARCHAR), // CHAR, BINARY\n+  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class, JDBCType.VARCHAR), //VARCHAR, VARBINARY\n+  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class, JDBCType.DATE),\n+  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class, JDBCType.DATE),\n+  DATETIME(ColumnDefinition.ColumnType.MYSQL_TYPE_DATETIME, LocalDateTime.class, LocalDateTime.class, JDBCType.DATE),\n+  YEAR(ColumnDefinition.ColumnType.MYSQL_TYPE_YEAR, Short.class, Short.class, JDBCType.DATE),\n+  TIMESTAMP(ColumnDefinition.ColumnType.MYSQL_TYPE_TIMESTAMP, LocalDateTime.class, LocalDateTime.class, JDBCType.DATE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE2NzAxMw==", "bodyText": "BIT should be mapped to JDBCType.BIT", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r482167013", "createdAt": "2020-09-02T15:34:21Z", "author": {"login": "BillyYccc"}, "path": "vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/datatype/DataType.java", "diffHunk": "@@ -8,34 +8,35 @@\n import io.vertx.mysqlclient.impl.protocol.ColumnDefinition;\n import io.vertx.sqlclient.data.Numeric;\n \n+import java.sql.JDBCType;\n import java.time.Duration;\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n \n public enum DataType {\n-  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class),\n-  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class),\n-  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class),\n-  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class),\n-  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class),\n-  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class),\n-  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class),\n-  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class), // DECIMAL\n-  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class), // CHAR, BINARY\n-  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class), //VARCHAR, VARBINARY\n-  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class),\n-  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class),\n-  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class),\n-  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class),\n-  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class),\n-  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class),\n-  DATETIME(ColumnDefinition.ColumnType.MYSQL_TYPE_DATETIME, LocalDateTime.class, LocalDateTime.class),\n-  YEAR(ColumnDefinition.ColumnType.MYSQL_TYPE_YEAR, Short.class, Short.class),\n-  TIMESTAMP(ColumnDefinition.ColumnType.MYSQL_TYPE_TIMESTAMP, LocalDateTime.class, LocalDateTime.class),\n-  BIT(ColumnDefinition.ColumnType.MYSQL_TYPE_BIT, Long.class, Long.class),\n-  JSON(ColumnDefinition.ColumnType.MYSQL_TYPE_JSON, Object.class, Object.class),\n-  NULL(ColumnDefinition.ColumnType.MYSQL_TYPE_NULL, Object.class, Object.class), // useful for mariadb prepare statement response\n-  UNBIND(-1, Object.class, Object.class); // useful for binding param values\n+  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class, JDBCType.TINYINT),\n+  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class, JDBCType.SMALLINT),\n+  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class, JDBCType.BIGINT),\n+  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class, JDBCType.DOUBLE),\n+  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class, JDBCType.REAL),\n+  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class, JDBCType.NUMERIC), // DECIMAL\n+  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class, JDBCType.VARCHAR), // CHAR, BINARY\n+  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class, JDBCType.VARCHAR), //VARCHAR, VARBINARY\n+  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class, JDBCType.DATE),\n+  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class, JDBCType.DATE),\n+  DATETIME(ColumnDefinition.ColumnType.MYSQL_TYPE_DATETIME, LocalDateTime.class, LocalDateTime.class, JDBCType.DATE),\n+  YEAR(ColumnDefinition.ColumnType.MYSQL_TYPE_YEAR, Short.class, Short.class, JDBCType.DATE),\n+  TIMESTAMP(ColumnDefinition.ColumnType.MYSQL_TYPE_TIMESTAMP, LocalDateTime.class, LocalDateTime.class, JDBCType.DATE),\n+  BIT(ColumnDefinition.ColumnType.MYSQL_TYPE_BIT, Long.class, Long.class, JDBCType.OTHER),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjE3MjUxNg==", "bodyText": "we should use JDBCType.BLOB for MySQL BLOB data types", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r482172516", "createdAt": "2020-09-02T15:41:52Z", "author": {"login": "BillyYccc"}, "path": "vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/datatype/DataType.java", "diffHunk": "@@ -8,34 +8,35 @@\n import io.vertx.mysqlclient.impl.protocol.ColumnDefinition;\n import io.vertx.sqlclient.data.Numeric;\n \n+import java.sql.JDBCType;\n import java.time.Duration;\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n \n public enum DataType {\n-  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class),\n-  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class),\n-  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class),\n-  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class),\n-  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class),\n-  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class),\n-  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class),\n-  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class), // DECIMAL\n-  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class), // CHAR, BINARY\n-  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class), //VARCHAR, VARBINARY\n-  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class),\n-  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class),\n-  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class),\n-  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class),\n-  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class),\n-  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class),\n-  DATETIME(ColumnDefinition.ColumnType.MYSQL_TYPE_DATETIME, LocalDateTime.class, LocalDateTime.class),\n-  YEAR(ColumnDefinition.ColumnType.MYSQL_TYPE_YEAR, Short.class, Short.class),\n-  TIMESTAMP(ColumnDefinition.ColumnType.MYSQL_TYPE_TIMESTAMP, LocalDateTime.class, LocalDateTime.class),\n-  BIT(ColumnDefinition.ColumnType.MYSQL_TYPE_BIT, Long.class, Long.class),\n-  JSON(ColumnDefinition.ColumnType.MYSQL_TYPE_JSON, Object.class, Object.class),\n-  NULL(ColumnDefinition.ColumnType.MYSQL_TYPE_NULL, Object.class, Object.class), // useful for mariadb prepare statement response\n-  UNBIND(-1, Object.class, Object.class); // useful for binding param values\n+  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class, JDBCType.TINYINT),\n+  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class, JDBCType.SMALLINT),\n+  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class, JDBCType.BIGINT),\n+  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class, JDBCType.DOUBLE),\n+  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class, JDBCType.REAL),\n+  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class, JDBCType.NUMERIC), // DECIMAL\n+  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class, JDBCType.VARCHAR), // CHAR, BINARY\n+  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class, JDBCType.VARCHAR), //VARCHAR, VARBINARY\n+  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class, JDBCType.BINARY),\n+  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class, JDBCType.BINARY),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MzAyODcy", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#pullrequestreview-484302872", "createdAt": "2020-09-08T16:22:02Z", "commit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MzMyOTM3", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#pullrequestreview-484332937", "createdAt": "2020-09-08T17:02:40Z", "commit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNzowMjo0MVrOHOmRmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNzowNzoxNFrOHOmbpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA2OTIwOQ==", "bodyText": "Some of the above mappings don't look right to me. TIME should be TIME, TIMESTAMP  should be TIMESTAMP, and TIMESTAMPTZ should probably be TIMESTAMP_WITH_TIMEZONE (but I'm not sure about that, we need to check).\nAnd INTERVAL I'm not sure about but I'm pretty sure it's not a DATE.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r485069209", "createdAt": "2020-09-08T17:02:41Z", "author": {"login": "gavinking"}, "path": "vertx-pg-client/src/main/java/io/vertx/pgclient/impl/codec/DataType.java", "diffHunk": "@@ -46,85 +48,85 @@\n  */\n enum DataType {\n \n-  BOOL(16, true, Boolean.class),\n-  BOOL_ARRAY(1000, true, Boolean[].class),\n-  INT2(21, true, Short.class, Number.class),\n-  INT2_ARRAY(1005, true, Short[].class, Number[].class),\n-  INT4(23, true, Integer.class, Number.class),\n-  INT4_ARRAY(1007, true, Integer[].class, Number[].class),\n-  INT8(20, true, Long.class, Number.class),\n-  INT8_ARRAY(1016, true, Long[].class, Number[].class),\n-  FLOAT4(700, true, Float.class, Number.class),\n-  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class),\n-  FLOAT8(701, true, Double.class, Number.class),\n-  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class),\n-  NUMERIC(1700, false, Numeric.class, Number.class),\n-  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class),\n-  MONEY(790, true, Object.class),\n-  MONEY_ARRAY(791, true, Object[].class),\n-  BIT(1560, true, Object.class),\n-  BIT_ARRAY(1561, true, Object[].class),\n-  VARBIT(1562, true, Object.class),\n-  VARBIT_ARRAY(1563, true, Object[].class),\n-  CHAR(18, true, String.class),\n-  CHAR_ARRAY(1002, true, String[].class),\n-  VARCHAR(1043, true, String.class),\n-  VARCHAR_ARRAY(1015, true, String[].class),\n-  BPCHAR(1042, true, String.class),\n-  BPCHAR_ARRAY(1014, true, String[].class),\n-  TEXT(25, true, String.class),\n-  TEXT_ARRAY(1009, true, String[].class),\n-  NAME(19, true, String.class),\n-  NAME_ARRAY(1003, true, String[].class),\n-  DATE(1082, true, LocalDate.class),\n-  DATE_ARRAY(1182, true, LocalDate[].class),\n-  TIME(1083, true, LocalTime.class),\n-  TIME_ARRAY(1183, true, LocalTime[].class),\n-  TIMETZ(1266, true, OffsetTime.class),\n-  TIMETZ_ARRAY(1270, true, OffsetTime[].class),\n-  TIMESTAMP(1114, true, LocalDateTime.class),\n-  TIMESTAMP_ARRAY(1115, true, LocalDateTime[].class),\n-  TIMESTAMPTZ(1184, true, OffsetDateTime.class),\n-  TIMESTAMPTZ_ARRAY(1185, true, OffsetDateTime[].class),\n-  INTERVAL(1186, true, Interval.class),\n-  INTERVAL_ARRAY(1187, true, Interval[].class),\n-  BYTEA(17, true, Buffer.class),\n-  BYTEA_ARRAY(1001, true, Buffer[].class),\n-  MACADDR(829, true, Object.class),\n-  INET(869, true, Object[].class),\n-  CIDR(650, true, Object.class),\n-  MACADDR8(774, true, Object[].class),\n-  UUID(2950, true, UUID.class),\n-  UUID_ARRAY(2951, true, UUID[].class),\n-  JSON(114, true, Object.class),\n-  JSON_ARRAY(199, true, Object[].class),\n-  JSONB(3802, true, Object.class),\n-  JSONB_ARRAY(3807, true, Object[].class),\n-  XML(142, true, Object.class),\n-  XML_ARRAY(143, true, Object[].class),\n-  POINT(600, true, Point.class),\n-  POINT_ARRAY(1017, true, Point[].class),\n-  LINE(628, true, Line.class),\n-  LINE_ARRAY(629, true, Line[].class),\n-  LSEG(601, true, LineSegment.class),\n-  LSEG_ARRAY(1018, true, LineSegment[].class),\n-  BOX(603, true, Box.class),\n-  BOX_ARRAY(1020, true, Box[].class),\n-  PATH(602, true, Path.class),\n-  PATH_ARRAY(1019, true, Path[].class),\n-  POLYGON(604, true, Polygon.class),\n-  POLYGON_ARRAY(1027, true, Polygon[].class),\n-  CIRCLE(718, true, Circle.class),\n-  CIRCLE_ARRAY(719, true, Circle[].class),\n-  HSTORE(33670, true, Object.class),\n-  OID(26, true, Object.class),\n-  OID_ARRAY(1028, true, Object[].class),\n-  VOID(2278, true, Object.class),\n-  UNKNOWN(705, false, String.class),\n-  TS_VECTOR(3614, false, String.class),\n-  TS_VECTOR_ARRAY(3643, false, String[].class),\n-  TS_QUERY(3615, false,  String.class),\n-  TS_QUERY_ARRAY(3645, false,  String[].class);\n+  BOOL(16, true, Boolean.class, JDBCType.BIT),\n+  BOOL_ARRAY(1000, true, Boolean[].class, JDBCType.BIT),\n+  INT2(21, true, Short.class, Number.class, JDBCType.SMALLINT),\n+  INT2_ARRAY(1005, true, Short[].class, Number[].class, JDBCType.SMALLINT),\n+  INT4(23, true, Integer.class, Number.class, JDBCType.INTEGER),\n+  INT4_ARRAY(1007, true, Integer[].class, Number[].class, JDBCType.INTEGER),\n+  INT8(20, true, Long.class, Number.class, JDBCType.BIGINT),\n+  INT8_ARRAY(1016, true, Long[].class, Number[].class, JDBCType.BIGINT),\n+  FLOAT4(700, true, Float.class, Number.class, JDBCType.REAL),\n+  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class, JDBCType.REAL),\n+  FLOAT8(701, true, Double.class, Number.class, JDBCType.DOUBLE),\n+  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class, JDBCType.DOUBLE),\n+  NUMERIC(1700, false, Numeric.class, Number.class, JDBCType.NUMERIC),\n+  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class, JDBCType.NUMERIC),\n+  MONEY(790, true, Object.class, null),\n+  MONEY_ARRAY(791, true, Object[].class, null),\n+  BIT(1560, true, Object.class, JDBCType.OTHER),\n+  BIT_ARRAY(1561, true, Object[].class, JDBCType.OTHER),\n+  VARBIT(1562, true, Object.class, JDBCType.OTHER),\n+  VARBIT_ARRAY(1563, true, Object[].class, JDBCType.OTHER),\n+  CHAR(18, true, String.class, JDBCType.VARCHAR),\n+  CHAR_ARRAY(1002, true, String[].class, JDBCType.VARCHAR),\n+  VARCHAR(1043, true, String.class, JDBCType.VARCHAR),\n+  VARCHAR_ARRAY(1015, true, String[].class, JDBCType.VARCHAR),\n+  BPCHAR(1042, true, String.class, JDBCType.VARCHAR),\n+  BPCHAR_ARRAY(1014, true, String[].class, JDBCType.VARCHAR),\n+  TEXT(25, true, String.class, JDBCType.VARCHAR),\n+  TEXT_ARRAY(1009, true, String[].class, JDBCType.VARCHAR),\n+  NAME(19, true, String.class, JDBCType.VARCHAR),\n+  NAME_ARRAY(1003, true, String[].class, JDBCType.VARCHAR),\n+  DATE(1082, true, LocalDate.class, JDBCType.DATE),\n+  DATE_ARRAY(1182, true, LocalDate[].class, JDBCType.DATE),\n+  TIME(1083, true, LocalTime.class, JDBCType.DATE),\n+  TIME_ARRAY(1183, true, LocalTime[].class, JDBCType.DATE),\n+  TIMETZ(1266, true, OffsetTime.class, JDBCType.DATE),\n+  TIMETZ_ARRAY(1270, true, OffsetTime[].class, JDBCType.DATE),\n+  TIMESTAMP(1114, true, LocalDateTime.class, JDBCType.DATE),\n+  TIMESTAMP_ARRAY(1115, true, LocalDateTime[].class, JDBCType.DATE),\n+  TIMESTAMPTZ(1184, true, OffsetDateTime.class, JDBCType.DATE),\n+  TIMESTAMPTZ_ARRAY(1185, true, OffsetDateTime[].class, JDBCType.DATE),\n+  INTERVAL(1186, true, Interval.class, JDBCType.DATE),\n+  INTERVAL_ARRAY(1187, true, Interval[].class, JDBCType.DATE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA3MTE1NQ==", "bodyText": "Perhaps TEXT could be LONGVARCHAR, I'm not sure.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r485071155", "createdAt": "2020-09-08T17:06:09Z", "author": {"login": "gavinking"}, "path": "vertx-pg-client/src/main/java/io/vertx/pgclient/impl/codec/DataType.java", "diffHunk": "@@ -46,85 +48,85 @@\n  */\n enum DataType {\n \n-  BOOL(16, true, Boolean.class),\n-  BOOL_ARRAY(1000, true, Boolean[].class),\n-  INT2(21, true, Short.class, Number.class),\n-  INT2_ARRAY(1005, true, Short[].class, Number[].class),\n-  INT4(23, true, Integer.class, Number.class),\n-  INT4_ARRAY(1007, true, Integer[].class, Number[].class),\n-  INT8(20, true, Long.class, Number.class),\n-  INT8_ARRAY(1016, true, Long[].class, Number[].class),\n-  FLOAT4(700, true, Float.class, Number.class),\n-  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class),\n-  FLOAT8(701, true, Double.class, Number.class),\n-  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class),\n-  NUMERIC(1700, false, Numeric.class, Number.class),\n-  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class),\n-  MONEY(790, true, Object.class),\n-  MONEY_ARRAY(791, true, Object[].class),\n-  BIT(1560, true, Object.class),\n-  BIT_ARRAY(1561, true, Object[].class),\n-  VARBIT(1562, true, Object.class),\n-  VARBIT_ARRAY(1563, true, Object[].class),\n-  CHAR(18, true, String.class),\n-  CHAR_ARRAY(1002, true, String[].class),\n-  VARCHAR(1043, true, String.class),\n-  VARCHAR_ARRAY(1015, true, String[].class),\n-  BPCHAR(1042, true, String.class),\n-  BPCHAR_ARRAY(1014, true, String[].class),\n-  TEXT(25, true, String.class),\n-  TEXT_ARRAY(1009, true, String[].class),\n-  NAME(19, true, String.class),\n-  NAME_ARRAY(1003, true, String[].class),\n-  DATE(1082, true, LocalDate.class),\n-  DATE_ARRAY(1182, true, LocalDate[].class),\n-  TIME(1083, true, LocalTime.class),\n-  TIME_ARRAY(1183, true, LocalTime[].class),\n-  TIMETZ(1266, true, OffsetTime.class),\n-  TIMETZ_ARRAY(1270, true, OffsetTime[].class),\n-  TIMESTAMP(1114, true, LocalDateTime.class),\n-  TIMESTAMP_ARRAY(1115, true, LocalDateTime[].class),\n-  TIMESTAMPTZ(1184, true, OffsetDateTime.class),\n-  TIMESTAMPTZ_ARRAY(1185, true, OffsetDateTime[].class),\n-  INTERVAL(1186, true, Interval.class),\n-  INTERVAL_ARRAY(1187, true, Interval[].class),\n-  BYTEA(17, true, Buffer.class),\n-  BYTEA_ARRAY(1001, true, Buffer[].class),\n-  MACADDR(829, true, Object.class),\n-  INET(869, true, Object[].class),\n-  CIDR(650, true, Object.class),\n-  MACADDR8(774, true, Object[].class),\n-  UUID(2950, true, UUID.class),\n-  UUID_ARRAY(2951, true, UUID[].class),\n-  JSON(114, true, Object.class),\n-  JSON_ARRAY(199, true, Object[].class),\n-  JSONB(3802, true, Object.class),\n-  JSONB_ARRAY(3807, true, Object[].class),\n-  XML(142, true, Object.class),\n-  XML_ARRAY(143, true, Object[].class),\n-  POINT(600, true, Point.class),\n-  POINT_ARRAY(1017, true, Point[].class),\n-  LINE(628, true, Line.class),\n-  LINE_ARRAY(629, true, Line[].class),\n-  LSEG(601, true, LineSegment.class),\n-  LSEG_ARRAY(1018, true, LineSegment[].class),\n-  BOX(603, true, Box.class),\n-  BOX_ARRAY(1020, true, Box[].class),\n-  PATH(602, true, Path.class),\n-  PATH_ARRAY(1019, true, Path[].class),\n-  POLYGON(604, true, Polygon.class),\n-  POLYGON_ARRAY(1027, true, Polygon[].class),\n-  CIRCLE(718, true, Circle.class),\n-  CIRCLE_ARRAY(719, true, Circle[].class),\n-  HSTORE(33670, true, Object.class),\n-  OID(26, true, Object.class),\n-  OID_ARRAY(1028, true, Object[].class),\n-  VOID(2278, true, Object.class),\n-  UNKNOWN(705, false, String.class),\n-  TS_VECTOR(3614, false, String.class),\n-  TS_VECTOR_ARRAY(3643, false, String[].class),\n-  TS_QUERY(3615, false,  String.class),\n-  TS_QUERY_ARRAY(3645, false,  String[].class);\n+  BOOL(16, true, Boolean.class, JDBCType.BIT),\n+  BOOL_ARRAY(1000, true, Boolean[].class, JDBCType.BIT),\n+  INT2(21, true, Short.class, Number.class, JDBCType.SMALLINT),\n+  INT2_ARRAY(1005, true, Short[].class, Number[].class, JDBCType.SMALLINT),\n+  INT4(23, true, Integer.class, Number.class, JDBCType.INTEGER),\n+  INT4_ARRAY(1007, true, Integer[].class, Number[].class, JDBCType.INTEGER),\n+  INT8(20, true, Long.class, Number.class, JDBCType.BIGINT),\n+  INT8_ARRAY(1016, true, Long[].class, Number[].class, JDBCType.BIGINT),\n+  FLOAT4(700, true, Float.class, Number.class, JDBCType.REAL),\n+  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class, JDBCType.REAL),\n+  FLOAT8(701, true, Double.class, Number.class, JDBCType.DOUBLE),\n+  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class, JDBCType.DOUBLE),\n+  NUMERIC(1700, false, Numeric.class, Number.class, JDBCType.NUMERIC),\n+  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class, JDBCType.NUMERIC),\n+  MONEY(790, true, Object.class, null),\n+  MONEY_ARRAY(791, true, Object[].class, null),\n+  BIT(1560, true, Object.class, JDBCType.OTHER),\n+  BIT_ARRAY(1561, true, Object[].class, JDBCType.OTHER),\n+  VARBIT(1562, true, Object.class, JDBCType.OTHER),\n+  VARBIT_ARRAY(1563, true, Object[].class, JDBCType.OTHER),\n+  CHAR(18, true, String.class, JDBCType.VARCHAR),\n+  CHAR_ARRAY(1002, true, String[].class, JDBCType.VARCHAR),\n+  VARCHAR(1043, true, String.class, JDBCType.VARCHAR),\n+  VARCHAR_ARRAY(1015, true, String[].class, JDBCType.VARCHAR),\n+  BPCHAR(1042, true, String.class, JDBCType.VARCHAR),\n+  BPCHAR_ARRAY(1014, true, String[].class, JDBCType.VARCHAR),\n+  TEXT(25, true, String.class, JDBCType.VARCHAR),\n+  TEXT_ARRAY(1009, true, String[].class, JDBCType.VARCHAR),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA3MTc4Mg==", "bodyText": "And TIMETZ is TIME_WITH_TIMEZONE.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r485071782", "createdAt": "2020-09-08T17:07:14Z", "author": {"login": "gavinking"}, "path": "vertx-pg-client/src/main/java/io/vertx/pgclient/impl/codec/DataType.java", "diffHunk": "@@ -46,85 +48,85 @@\n  */\n enum DataType {\n \n-  BOOL(16, true, Boolean.class),\n-  BOOL_ARRAY(1000, true, Boolean[].class),\n-  INT2(21, true, Short.class, Number.class),\n-  INT2_ARRAY(1005, true, Short[].class, Number[].class),\n-  INT4(23, true, Integer.class, Number.class),\n-  INT4_ARRAY(1007, true, Integer[].class, Number[].class),\n-  INT8(20, true, Long.class, Number.class),\n-  INT8_ARRAY(1016, true, Long[].class, Number[].class),\n-  FLOAT4(700, true, Float.class, Number.class),\n-  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class),\n-  FLOAT8(701, true, Double.class, Number.class),\n-  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class),\n-  NUMERIC(1700, false, Numeric.class, Number.class),\n-  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class),\n-  MONEY(790, true, Object.class),\n-  MONEY_ARRAY(791, true, Object[].class),\n-  BIT(1560, true, Object.class),\n-  BIT_ARRAY(1561, true, Object[].class),\n-  VARBIT(1562, true, Object.class),\n-  VARBIT_ARRAY(1563, true, Object[].class),\n-  CHAR(18, true, String.class),\n-  CHAR_ARRAY(1002, true, String[].class),\n-  VARCHAR(1043, true, String.class),\n-  VARCHAR_ARRAY(1015, true, String[].class),\n-  BPCHAR(1042, true, String.class),\n-  BPCHAR_ARRAY(1014, true, String[].class),\n-  TEXT(25, true, String.class),\n-  TEXT_ARRAY(1009, true, String[].class),\n-  NAME(19, true, String.class),\n-  NAME_ARRAY(1003, true, String[].class),\n-  DATE(1082, true, LocalDate.class),\n-  DATE_ARRAY(1182, true, LocalDate[].class),\n-  TIME(1083, true, LocalTime.class),\n-  TIME_ARRAY(1183, true, LocalTime[].class),\n-  TIMETZ(1266, true, OffsetTime.class),\n-  TIMETZ_ARRAY(1270, true, OffsetTime[].class),\n-  TIMESTAMP(1114, true, LocalDateTime.class),\n-  TIMESTAMP_ARRAY(1115, true, LocalDateTime[].class),\n-  TIMESTAMPTZ(1184, true, OffsetDateTime.class),\n-  TIMESTAMPTZ_ARRAY(1185, true, OffsetDateTime[].class),\n-  INTERVAL(1186, true, Interval.class),\n-  INTERVAL_ARRAY(1187, true, Interval[].class),\n-  BYTEA(17, true, Buffer.class),\n-  BYTEA_ARRAY(1001, true, Buffer[].class),\n-  MACADDR(829, true, Object.class),\n-  INET(869, true, Object[].class),\n-  CIDR(650, true, Object.class),\n-  MACADDR8(774, true, Object[].class),\n-  UUID(2950, true, UUID.class),\n-  UUID_ARRAY(2951, true, UUID[].class),\n-  JSON(114, true, Object.class),\n-  JSON_ARRAY(199, true, Object[].class),\n-  JSONB(3802, true, Object.class),\n-  JSONB_ARRAY(3807, true, Object[].class),\n-  XML(142, true, Object.class),\n-  XML_ARRAY(143, true, Object[].class),\n-  POINT(600, true, Point.class),\n-  POINT_ARRAY(1017, true, Point[].class),\n-  LINE(628, true, Line.class),\n-  LINE_ARRAY(629, true, Line[].class),\n-  LSEG(601, true, LineSegment.class),\n-  LSEG_ARRAY(1018, true, LineSegment[].class),\n-  BOX(603, true, Box.class),\n-  BOX_ARRAY(1020, true, Box[].class),\n-  PATH(602, true, Path.class),\n-  PATH_ARRAY(1019, true, Path[].class),\n-  POLYGON(604, true, Polygon.class),\n-  POLYGON_ARRAY(1027, true, Polygon[].class),\n-  CIRCLE(718, true, Circle.class),\n-  CIRCLE_ARRAY(719, true, Circle[].class),\n-  HSTORE(33670, true, Object.class),\n-  OID(26, true, Object.class),\n-  OID_ARRAY(1028, true, Object[].class),\n-  VOID(2278, true, Object.class),\n-  UNKNOWN(705, false, String.class),\n-  TS_VECTOR(3614, false, String.class),\n-  TS_VECTOR_ARRAY(3643, false, String[].class),\n-  TS_QUERY(3615, false,  String.class),\n-  TS_QUERY_ARRAY(3645, false,  String[].class);\n+  BOOL(16, true, Boolean.class, JDBCType.BIT),\n+  BOOL_ARRAY(1000, true, Boolean[].class, JDBCType.BIT),\n+  INT2(21, true, Short.class, Number.class, JDBCType.SMALLINT),\n+  INT2_ARRAY(1005, true, Short[].class, Number[].class, JDBCType.SMALLINT),\n+  INT4(23, true, Integer.class, Number.class, JDBCType.INTEGER),\n+  INT4_ARRAY(1007, true, Integer[].class, Number[].class, JDBCType.INTEGER),\n+  INT8(20, true, Long.class, Number.class, JDBCType.BIGINT),\n+  INT8_ARRAY(1016, true, Long[].class, Number[].class, JDBCType.BIGINT),\n+  FLOAT4(700, true, Float.class, Number.class, JDBCType.REAL),\n+  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class, JDBCType.REAL),\n+  FLOAT8(701, true, Double.class, Number.class, JDBCType.DOUBLE),\n+  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class, JDBCType.DOUBLE),\n+  NUMERIC(1700, false, Numeric.class, Number.class, JDBCType.NUMERIC),\n+  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class, JDBCType.NUMERIC),\n+  MONEY(790, true, Object.class, null),\n+  MONEY_ARRAY(791, true, Object[].class, null),\n+  BIT(1560, true, Object.class, JDBCType.OTHER),\n+  BIT_ARRAY(1561, true, Object[].class, JDBCType.OTHER),\n+  VARBIT(1562, true, Object.class, JDBCType.OTHER),\n+  VARBIT_ARRAY(1563, true, Object[].class, JDBCType.OTHER),\n+  CHAR(18, true, String.class, JDBCType.VARCHAR),\n+  CHAR_ARRAY(1002, true, String[].class, JDBCType.VARCHAR),\n+  VARCHAR(1043, true, String.class, JDBCType.VARCHAR),\n+  VARCHAR_ARRAY(1015, true, String[].class, JDBCType.VARCHAR),\n+  BPCHAR(1042, true, String.class, JDBCType.VARCHAR),\n+  BPCHAR_ARRAY(1014, true, String[].class, JDBCType.VARCHAR),\n+  TEXT(25, true, String.class, JDBCType.VARCHAR),\n+  TEXT_ARRAY(1009, true, String[].class, JDBCType.VARCHAR),\n+  NAME(19, true, String.class, JDBCType.VARCHAR),\n+  NAME_ARRAY(1003, true, String[].class, JDBCType.VARCHAR),\n+  DATE(1082, true, LocalDate.class, JDBCType.DATE),\n+  DATE_ARRAY(1182, true, LocalDate[].class, JDBCType.DATE),\n+  TIME(1083, true, LocalTime.class, JDBCType.DATE),\n+  TIME_ARRAY(1183, true, LocalTime[].class, JDBCType.DATE),\n+  TIMETZ(1266, true, OffsetTime.class, JDBCType.DATE),\n+  TIMETZ_ARRAY(1270, true, OffsetTime[].class, JDBCType.DATE),\n+  TIMESTAMP(1114, true, LocalDateTime.class, JDBCType.DATE),\n+  TIMESTAMP_ARRAY(1115, true, LocalDateTime[].class, JDBCType.DATE),\n+  TIMESTAMPTZ(1184, true, OffsetDateTime.class, JDBCType.DATE),\n+  TIMESTAMPTZ_ARRAY(1185, true, OffsetDateTime[].class, JDBCType.DATE),\n+  INTERVAL(1186, true, Interval.class, JDBCType.DATE),\n+  INTERVAL_ARRAY(1187, true, Interval[].class, JDBCType.DATE),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTA2OTIwOQ=="}, "originalCommit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "originalPosition": 134}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1NDY3ODc4", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#pullrequestreview-485467878", "createdAt": "2020-09-09T23:26:21Z", "commit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzoyNjoyMlrOHPdmJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQyMzoyNjoyMlrOHPdmJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTk3NTU4OQ==", "bodyText": "I don't think it's necessary to have name() (or a ColumnDescriptor at all for that matter) since the column name is already available through SqlResult#columnNames(). Instead, could we just add a SqlResult#jdbcTypes() method?", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r485975589", "createdAt": "2020-09-09T23:26:22Z", "author": {"login": "aguibert"}, "path": "vertx-sql-client/src/main/java/io/vertx/sqlclient/desc/ColumnDescriptor.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/*\n+ * Copyright (C) 2017 Julien Viet\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+package io.vertx.sqlclient.desc;\n+\n+import io.vertx.codegen.annotations.VertxGen;\n+\n+import java.sql.JDBCType;\n+\n+@VertxGen\n+public interface ColumnDescriptor {\n+\n+  String name();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85724e875b77ef4f14774f49e51c1d59b4cb25e7"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTQzMTI3", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#pullrequestreview-486143127", "createdAt": "2020-09-10T17:10:20Z", "commit": {"oid": "285c41c021aefbc9e4102b849689f413dcc766f6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoxMDoyMFrOHP9wxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoxMDoyMFrOHP9wxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMjU5OA==", "bodyText": "I'm still a bit unclear on how the JDBCType will be used. Is it OK that I'm overriding some of the expected JDBCTypes for DB2 here? Or is it important that all DBs are consistent with one another for this use case? CC @gavinking", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r486502598", "createdAt": "2020-09-10T17:10:20Z", "author": {"login": "aguibert"}, "path": "vertx-db2-client/src/test/java/io/vertx/db2client/tck/DB2BinaryDataTypeDecodeTest.java", "diffHunk": "@@ -61,7 +65,31 @@ public void testDouble(TestContext ctx) {\n     }\n \n     // For DB2/z the largest value that can be stored in a DOUBLE column is 7.2E75\n-    testDecodeGeneric(ctx, \"test_float_8\", Double.class, (double) 7.2E75);\n+    testDecodeGeneric(ctx, \"test_float_8\", Double.class, JDBCType.DOUBLE, (double) 7.2E75);\n+  }\n+  \n+  @Override\n+  public void testChar(TestContext ctx) {\n+    // Override to expecting JDBCType.CHAR instead of VARCHAR\n+    testDecodeGeneric(ctx, \"test_char\", String.class, JDBCType.CHAR, \"testchar\");\n+  }\n+  \n+  @Override\n+  public void testNumeric(TestContext ctx) {\n+    // Override to expecting JDBCType.DECIMAL instead of NUMERIC\n+    testDecodeGeneric(ctx, \"test_numeric\", Numeric.class, JDBCType.DECIMAL, Numeric.parse(\"999.99\"));\n+  }\n+  \n+  @Override\n+  public void testDecimal(TestContext ctx) {\n+    // Override to expecting JDBCType.DECIMAL instead of NUMERIC\n+    testDecodeGeneric(ctx, \"test_decimal\", Numeric.class, JDBCType.DECIMAL, Numeric.parse(\"12345\"));\n+  }\n+  \n+  @Override\n+  public void testTime(TestContext ctx) {\n+    // Override to expecting JDBCType.TIME instead of DATE\n+    testDecodeGeneric(ctx, \"test_time\", LocalTime.class, JDBCType.TIME, LocalTime.of(18, 45, 2));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "285c41c021aefbc9e4102b849689f413dcc766f6"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NjEzNzEy", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#pullrequestreview-486613712", "createdAt": "2020-09-11T08:45:58Z", "commit": {"oid": "e92be38efb5e737749da5685c713dedc73f7cf44"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODo0NTo1OVrOHQUCSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODo1Njo1NFrOHQUhIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2NzUyOA==", "bodyText": "@vietj we should check what the JDBC driver does here. the whole NUMERIC vs DECIMAL thing has always been a source of problems since the drivers are pretty inconsistent here.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r486867528", "createdAt": "2020-09-11T08:45:59Z", "author": {"login": "gavinking"}, "path": "vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/datatype/DataType.java", "diffHunk": "@@ -8,34 +8,35 @@\n import io.vertx.mysqlclient.impl.protocol.ColumnDefinition;\n import io.vertx.sqlclient.data.Numeric;\n \n+import java.sql.JDBCType;\n import java.time.Duration;\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n \n public enum DataType {\n-  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class),\n-  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class),\n-  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class),\n-  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class),\n-  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class),\n-  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class),\n-  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class),\n-  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class), // DECIMAL\n-  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class), // CHAR, BINARY\n-  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class), //VARCHAR, VARBINARY\n-  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class),\n-  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class),\n-  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class),\n-  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class),\n-  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class),\n-  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class),\n-  DATETIME(ColumnDefinition.ColumnType.MYSQL_TYPE_DATETIME, LocalDateTime.class, LocalDateTime.class),\n-  YEAR(ColumnDefinition.ColumnType.MYSQL_TYPE_YEAR, Short.class, Short.class),\n-  TIMESTAMP(ColumnDefinition.ColumnType.MYSQL_TYPE_TIMESTAMP, LocalDateTime.class, LocalDateTime.class),\n-  BIT(ColumnDefinition.ColumnType.MYSQL_TYPE_BIT, Long.class, Long.class),\n-  JSON(ColumnDefinition.ColumnType.MYSQL_TYPE_JSON, Object.class, Object.class),\n-  NULL(ColumnDefinition.ColumnType.MYSQL_TYPE_NULL, Object.class, Object.class), // useful for mariadb prepare statement response\n-  UNBIND(-1, Object.class, Object.class); // useful for binding param values\n+  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class, JDBCType.TINYINT),\n+  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class, JDBCType.SMALLINT),\n+  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class, JDBCType.BIGINT),\n+  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class, JDBCType.DOUBLE),\n+  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class, JDBCType.REAL),\n+  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class, JDBCType.NUMERIC), // DECIMAL", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92be38efb5e737749da5685c713dedc73f7cf44"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg2ODMzNA==", "bodyText": "I'm not sure, but perhaps this should be CHAR, though Hibernate wouldn't care much.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r486868334", "createdAt": "2020-09-11T08:47:26Z", "author": {"login": "gavinking"}, "path": "vertx-mysql-client/src/main/java/io/vertx/mysqlclient/impl/datatype/DataType.java", "diffHunk": "@@ -8,34 +8,35 @@\n import io.vertx.mysqlclient.impl.protocol.ColumnDefinition;\n import io.vertx.sqlclient.data.Numeric;\n \n+import java.sql.JDBCType;\n import java.time.Duration;\n import java.time.LocalDate;\n import java.time.LocalDateTime;\n \n public enum DataType {\n-  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class),\n-  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class),\n-  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class),\n-  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class),\n-  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class),\n-  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class),\n-  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class),\n-  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class), // DECIMAL\n-  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class), // CHAR, BINARY\n-  VARSTRING(ColumnDefinition.ColumnType.MYSQL_TYPE_VAR_STRING, Buffer.class, String.class), //VARCHAR, VARBINARY\n-  TINYBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY_BLOB, Buffer.class, String.class),\n-  BLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_BLOB, Buffer.class, String.class),\n-  MEDIUMBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_MEDIUM_BLOB, Buffer.class, String.class),\n-  LONGBLOB(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG_BLOB, Buffer.class, String.class),\n-  DATE(ColumnDefinition.ColumnType.MYSQL_TYPE_DATE, LocalDate.class, LocalDate.class),\n-  TIME(ColumnDefinition.ColumnType.MYSQL_TYPE_TIME, Duration.class, Duration.class),\n-  DATETIME(ColumnDefinition.ColumnType.MYSQL_TYPE_DATETIME, LocalDateTime.class, LocalDateTime.class),\n-  YEAR(ColumnDefinition.ColumnType.MYSQL_TYPE_YEAR, Short.class, Short.class),\n-  TIMESTAMP(ColumnDefinition.ColumnType.MYSQL_TYPE_TIMESTAMP, LocalDateTime.class, LocalDateTime.class),\n-  BIT(ColumnDefinition.ColumnType.MYSQL_TYPE_BIT, Long.class, Long.class),\n-  JSON(ColumnDefinition.ColumnType.MYSQL_TYPE_JSON, Object.class, Object.class),\n-  NULL(ColumnDefinition.ColumnType.MYSQL_TYPE_NULL, Object.class, Object.class), // useful for mariadb prepare statement response\n-  UNBIND(-1, Object.class, Object.class); // useful for binding param values\n+  INT1(ColumnDefinition.ColumnType.MYSQL_TYPE_TINY, Byte.class, Byte.class, JDBCType.TINYINT),\n+  INT2(ColumnDefinition.ColumnType.MYSQL_TYPE_SHORT, Short.class, Short.class, JDBCType.SMALLINT),\n+  INT3(ColumnDefinition.ColumnType.MYSQL_TYPE_INT24, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT4(ColumnDefinition.ColumnType.MYSQL_TYPE_LONG, Integer.class, Integer.class, JDBCType.INTEGER),\n+  INT8(ColumnDefinition.ColumnType.MYSQL_TYPE_LONGLONG, Long.class, Long.class, JDBCType.BIGINT),\n+  DOUBLE(ColumnDefinition.ColumnType.MYSQL_TYPE_DOUBLE, Double.class, Double.class, JDBCType.DOUBLE),\n+  FLOAT(ColumnDefinition.ColumnType.MYSQL_TYPE_FLOAT, Float.class, Float.class, JDBCType.REAL),\n+  NUMERIC(ColumnDefinition.ColumnType.MYSQL_TYPE_NEWDECIMAL, Numeric.class, Numeric.class, JDBCType.NUMERIC), // DECIMAL\n+  STRING(ColumnDefinition.ColumnType.MYSQL_TYPE_STRING, Buffer.class, String.class, JDBCType.VARCHAR), // CHAR, BINARY", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92be38efb5e737749da5685c713dedc73f7cf44"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg3MDY5MQ==", "bodyText": "I believe this should be BOOLEAN.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r486870691", "createdAt": "2020-09-11T08:51:44Z", "author": {"login": "gavinking"}, "path": "vertx-pg-client/src/main/java/io/vertx/pgclient/impl/codec/DataType.java", "diffHunk": "@@ -46,85 +47,85 @@\n  */\n enum DataType {\n \n-  BOOL(16, true, Boolean.class),\n-  BOOL_ARRAY(1000, true, Boolean[].class),\n-  INT2(21, true, Short.class, Number.class),\n-  INT2_ARRAY(1005, true, Short[].class, Number[].class),\n-  INT4(23, true, Integer.class, Number.class),\n-  INT4_ARRAY(1007, true, Integer[].class, Number[].class),\n-  INT8(20, true, Long.class, Number.class),\n-  INT8_ARRAY(1016, true, Long[].class, Number[].class),\n-  FLOAT4(700, true, Float.class, Number.class),\n-  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class),\n-  FLOAT8(701, true, Double.class, Number.class),\n-  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class),\n-  NUMERIC(1700, false, Numeric.class, Number.class),\n-  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class),\n-  MONEY(790, true, Object.class),\n-  MONEY_ARRAY(791, true, Object[].class),\n-  BIT(1560, true, Object.class),\n-  BIT_ARRAY(1561, true, Object[].class),\n-  VARBIT(1562, true, Object.class),\n-  VARBIT_ARRAY(1563, true, Object[].class),\n-  CHAR(18, true, String.class),\n-  CHAR_ARRAY(1002, true, String[].class),\n-  VARCHAR(1043, true, String.class),\n-  VARCHAR_ARRAY(1015, true, String[].class),\n-  BPCHAR(1042, true, String.class),\n-  BPCHAR_ARRAY(1014, true, String[].class),\n-  TEXT(25, true, String.class),\n-  TEXT_ARRAY(1009, true, String[].class),\n-  NAME(19, true, String.class),\n-  NAME_ARRAY(1003, true, String[].class),\n-  DATE(1082, true, LocalDate.class),\n-  DATE_ARRAY(1182, true, LocalDate[].class),\n-  TIME(1083, true, LocalTime.class),\n-  TIME_ARRAY(1183, true, LocalTime[].class),\n-  TIMETZ(1266, true, OffsetTime.class),\n-  TIMETZ_ARRAY(1270, true, OffsetTime[].class),\n-  TIMESTAMP(1114, true, LocalDateTime.class),\n-  TIMESTAMP_ARRAY(1115, true, LocalDateTime[].class),\n-  TIMESTAMPTZ(1184, true, OffsetDateTime.class),\n-  TIMESTAMPTZ_ARRAY(1185, true, OffsetDateTime[].class),\n-  INTERVAL(1186, true, Interval.class),\n-  INTERVAL_ARRAY(1187, true, Interval[].class),\n-  BYTEA(17, true, Buffer.class),\n-  BYTEA_ARRAY(1001, true, Buffer[].class),\n-  MACADDR(829, true, Object.class),\n-  INET(869, true, Object[].class),\n-  CIDR(650, true, Object.class),\n-  MACADDR8(774, true, Object[].class),\n-  UUID(2950, true, UUID.class),\n-  UUID_ARRAY(2951, true, UUID[].class),\n-  JSON(114, true, Object.class),\n-  JSON_ARRAY(199, true, Object[].class),\n-  JSONB(3802, true, Object.class),\n-  JSONB_ARRAY(3807, true, Object[].class),\n-  XML(142, true, Object.class),\n-  XML_ARRAY(143, true, Object[].class),\n-  POINT(600, true, Point.class),\n-  POINT_ARRAY(1017, true, Point[].class),\n-  LINE(628, true, Line.class),\n-  LINE_ARRAY(629, true, Line[].class),\n-  LSEG(601, true, LineSegment.class),\n-  LSEG_ARRAY(1018, true, LineSegment[].class),\n-  BOX(603, true, Box.class),\n-  BOX_ARRAY(1020, true, Box[].class),\n-  PATH(602, true, Path.class),\n-  PATH_ARRAY(1019, true, Path[].class),\n-  POLYGON(604, true, Polygon.class),\n-  POLYGON_ARRAY(1027, true, Polygon[].class),\n-  CIRCLE(718, true, Circle.class),\n-  CIRCLE_ARRAY(719, true, Circle[].class),\n-  HSTORE(33670, true, Object.class),\n-  OID(26, true, Object.class),\n-  OID_ARRAY(1028, true, Object[].class),\n-  VOID(2278, true, Object.class),\n-  UNKNOWN(705, false, String.class),\n-  TS_VECTOR(3614, false, String.class),\n-  TS_VECTOR_ARRAY(3643, false, String[].class),\n-  TS_QUERY(3615, false,  String.class),\n-  TS_QUERY_ARRAY(3645, false,  String[].class);\n+  BOOL(16, true, Boolean.class, JDBCType.BIT),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92be38efb5e737749da5685c713dedc73f7cf44"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg3MDkxOQ==", "bodyText": "I suppose this should be ARRAY.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r486870919", "createdAt": "2020-09-11T08:52:05Z", "author": {"login": "gavinking"}, "path": "vertx-pg-client/src/main/java/io/vertx/pgclient/impl/codec/DataType.java", "diffHunk": "@@ -46,85 +47,85 @@\n  */\n enum DataType {\n \n-  BOOL(16, true, Boolean.class),\n-  BOOL_ARRAY(1000, true, Boolean[].class),\n-  INT2(21, true, Short.class, Number.class),\n-  INT2_ARRAY(1005, true, Short[].class, Number[].class),\n-  INT4(23, true, Integer.class, Number.class),\n-  INT4_ARRAY(1007, true, Integer[].class, Number[].class),\n-  INT8(20, true, Long.class, Number.class),\n-  INT8_ARRAY(1016, true, Long[].class, Number[].class),\n-  FLOAT4(700, true, Float.class, Number.class),\n-  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class),\n-  FLOAT8(701, true, Double.class, Number.class),\n-  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class),\n-  NUMERIC(1700, false, Numeric.class, Number.class),\n-  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class),\n-  MONEY(790, true, Object.class),\n-  MONEY_ARRAY(791, true, Object[].class),\n-  BIT(1560, true, Object.class),\n-  BIT_ARRAY(1561, true, Object[].class),\n-  VARBIT(1562, true, Object.class),\n-  VARBIT_ARRAY(1563, true, Object[].class),\n-  CHAR(18, true, String.class),\n-  CHAR_ARRAY(1002, true, String[].class),\n-  VARCHAR(1043, true, String.class),\n-  VARCHAR_ARRAY(1015, true, String[].class),\n-  BPCHAR(1042, true, String.class),\n-  BPCHAR_ARRAY(1014, true, String[].class),\n-  TEXT(25, true, String.class),\n-  TEXT_ARRAY(1009, true, String[].class),\n-  NAME(19, true, String.class),\n-  NAME_ARRAY(1003, true, String[].class),\n-  DATE(1082, true, LocalDate.class),\n-  DATE_ARRAY(1182, true, LocalDate[].class),\n-  TIME(1083, true, LocalTime.class),\n-  TIME_ARRAY(1183, true, LocalTime[].class),\n-  TIMETZ(1266, true, OffsetTime.class),\n-  TIMETZ_ARRAY(1270, true, OffsetTime[].class),\n-  TIMESTAMP(1114, true, LocalDateTime.class),\n-  TIMESTAMP_ARRAY(1115, true, LocalDateTime[].class),\n-  TIMESTAMPTZ(1184, true, OffsetDateTime.class),\n-  TIMESTAMPTZ_ARRAY(1185, true, OffsetDateTime[].class),\n-  INTERVAL(1186, true, Interval.class),\n-  INTERVAL_ARRAY(1187, true, Interval[].class),\n-  BYTEA(17, true, Buffer.class),\n-  BYTEA_ARRAY(1001, true, Buffer[].class),\n-  MACADDR(829, true, Object.class),\n-  INET(869, true, Object[].class),\n-  CIDR(650, true, Object.class),\n-  MACADDR8(774, true, Object[].class),\n-  UUID(2950, true, UUID.class),\n-  UUID_ARRAY(2951, true, UUID[].class),\n-  JSON(114, true, Object.class),\n-  JSON_ARRAY(199, true, Object[].class),\n-  JSONB(3802, true, Object.class),\n-  JSONB_ARRAY(3807, true, Object[].class),\n-  XML(142, true, Object.class),\n-  XML_ARRAY(143, true, Object[].class),\n-  POINT(600, true, Point.class),\n-  POINT_ARRAY(1017, true, Point[].class),\n-  LINE(628, true, Line.class),\n-  LINE_ARRAY(629, true, Line[].class),\n-  LSEG(601, true, LineSegment.class),\n-  LSEG_ARRAY(1018, true, LineSegment[].class),\n-  BOX(603, true, Box.class),\n-  BOX_ARRAY(1020, true, Box[].class),\n-  PATH(602, true, Path.class),\n-  PATH_ARRAY(1019, true, Path[].class),\n-  POLYGON(604, true, Polygon.class),\n-  POLYGON_ARRAY(1027, true, Polygon[].class),\n-  CIRCLE(718, true, Circle.class),\n-  CIRCLE_ARRAY(719, true, Circle[].class),\n-  HSTORE(33670, true, Object.class),\n-  OID(26, true, Object.class),\n-  OID_ARRAY(1028, true, Object[].class),\n-  VOID(2278, true, Object.class),\n-  UNKNOWN(705, false, String.class),\n-  TS_VECTOR(3614, false, String.class),\n-  TS_VECTOR_ARRAY(3643, false, String[].class),\n-  TS_QUERY(3615, false,  String.class),\n-  TS_QUERY_ARRAY(3645, false,  String[].class);\n+  BOOL(16, true, Boolean.class, JDBCType.BIT),\n+  BOOL_ARRAY(1000, true, Boolean[].class, JDBCType.BIT),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92be38efb5e737749da5685c713dedc73f7cf44"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg3MTQ1Ng==", "bodyText": "Again we should check what the JDBC driver says about numeric vs decimal.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r486871456", "createdAt": "2020-09-11T08:53:02Z", "author": {"login": "gavinking"}, "path": "vertx-pg-client/src/main/java/io/vertx/pgclient/impl/codec/DataType.java", "diffHunk": "@@ -46,85 +47,85 @@\n  */\n enum DataType {\n \n-  BOOL(16, true, Boolean.class),\n-  BOOL_ARRAY(1000, true, Boolean[].class),\n-  INT2(21, true, Short.class, Number.class),\n-  INT2_ARRAY(1005, true, Short[].class, Number[].class),\n-  INT4(23, true, Integer.class, Number.class),\n-  INT4_ARRAY(1007, true, Integer[].class, Number[].class),\n-  INT8(20, true, Long.class, Number.class),\n-  INT8_ARRAY(1016, true, Long[].class, Number[].class),\n-  FLOAT4(700, true, Float.class, Number.class),\n-  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class),\n-  FLOAT8(701, true, Double.class, Number.class),\n-  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class),\n-  NUMERIC(1700, false, Numeric.class, Number.class),\n-  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class),\n-  MONEY(790, true, Object.class),\n-  MONEY_ARRAY(791, true, Object[].class),\n-  BIT(1560, true, Object.class),\n-  BIT_ARRAY(1561, true, Object[].class),\n-  VARBIT(1562, true, Object.class),\n-  VARBIT_ARRAY(1563, true, Object[].class),\n-  CHAR(18, true, String.class),\n-  CHAR_ARRAY(1002, true, String[].class),\n-  VARCHAR(1043, true, String.class),\n-  VARCHAR_ARRAY(1015, true, String[].class),\n-  BPCHAR(1042, true, String.class),\n-  BPCHAR_ARRAY(1014, true, String[].class),\n-  TEXT(25, true, String.class),\n-  TEXT_ARRAY(1009, true, String[].class),\n-  NAME(19, true, String.class),\n-  NAME_ARRAY(1003, true, String[].class),\n-  DATE(1082, true, LocalDate.class),\n-  DATE_ARRAY(1182, true, LocalDate[].class),\n-  TIME(1083, true, LocalTime.class),\n-  TIME_ARRAY(1183, true, LocalTime[].class),\n-  TIMETZ(1266, true, OffsetTime.class),\n-  TIMETZ_ARRAY(1270, true, OffsetTime[].class),\n-  TIMESTAMP(1114, true, LocalDateTime.class),\n-  TIMESTAMP_ARRAY(1115, true, LocalDateTime[].class),\n-  TIMESTAMPTZ(1184, true, OffsetDateTime.class),\n-  TIMESTAMPTZ_ARRAY(1185, true, OffsetDateTime[].class),\n-  INTERVAL(1186, true, Interval.class),\n-  INTERVAL_ARRAY(1187, true, Interval[].class),\n-  BYTEA(17, true, Buffer.class),\n-  BYTEA_ARRAY(1001, true, Buffer[].class),\n-  MACADDR(829, true, Object.class),\n-  INET(869, true, Object[].class),\n-  CIDR(650, true, Object.class),\n-  MACADDR8(774, true, Object[].class),\n-  UUID(2950, true, UUID.class),\n-  UUID_ARRAY(2951, true, UUID[].class),\n-  JSON(114, true, Object.class),\n-  JSON_ARRAY(199, true, Object[].class),\n-  JSONB(3802, true, Object.class),\n-  JSONB_ARRAY(3807, true, Object[].class),\n-  XML(142, true, Object.class),\n-  XML_ARRAY(143, true, Object[].class),\n-  POINT(600, true, Point.class),\n-  POINT_ARRAY(1017, true, Point[].class),\n-  LINE(628, true, Line.class),\n-  LINE_ARRAY(629, true, Line[].class),\n-  LSEG(601, true, LineSegment.class),\n-  LSEG_ARRAY(1018, true, LineSegment[].class),\n-  BOX(603, true, Box.class),\n-  BOX_ARRAY(1020, true, Box[].class),\n-  PATH(602, true, Path.class),\n-  PATH_ARRAY(1019, true, Path[].class),\n-  POLYGON(604, true, Polygon.class),\n-  POLYGON_ARRAY(1027, true, Polygon[].class),\n-  CIRCLE(718, true, Circle.class),\n-  CIRCLE_ARRAY(719, true, Circle[].class),\n-  HSTORE(33670, true, Object.class),\n-  OID(26, true, Object.class),\n-  OID_ARRAY(1028, true, Object[].class),\n-  VOID(2278, true, Object.class),\n-  UNKNOWN(705, false, String.class),\n-  TS_VECTOR(3614, false, String.class),\n-  TS_VECTOR_ARRAY(3643, false, String[].class),\n-  TS_QUERY(3615, false,  String.class),\n-  TS_QUERY_ARRAY(3645, false,  String[].class);\n+  BOOL(16, true, Boolean.class, JDBCType.BIT),\n+  BOOL_ARRAY(1000, true, Boolean[].class, JDBCType.BIT),\n+  INT2(21, true, Short.class, Number.class, JDBCType.SMALLINT),\n+  INT2_ARRAY(1005, true, Short[].class, Number[].class, JDBCType.SMALLINT),\n+  INT4(23, true, Integer.class, Number.class, JDBCType.INTEGER),\n+  INT4_ARRAY(1007, true, Integer[].class, Number[].class, JDBCType.INTEGER),\n+  INT8(20, true, Long.class, Number.class, JDBCType.BIGINT),\n+  INT8_ARRAY(1016, true, Long[].class, Number[].class, JDBCType.BIGINT),\n+  FLOAT4(700, true, Float.class, Number.class, JDBCType.REAL),\n+  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class, JDBCType.REAL),\n+  FLOAT8(701, true, Double.class, Number.class, JDBCType.DOUBLE),\n+  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class, JDBCType.DOUBLE),\n+  NUMERIC(1700, false, Numeric.class, Number.class, JDBCType.NUMERIC),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92be38efb5e737749da5685c713dedc73f7cf44"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg3MTgxNQ==", "bodyText": "Shouldn't this be BIT?", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r486871815", "createdAt": "2020-09-11T08:53:34Z", "author": {"login": "gavinking"}, "path": "vertx-pg-client/src/main/java/io/vertx/pgclient/impl/codec/DataType.java", "diffHunk": "@@ -46,85 +47,85 @@\n  */\n enum DataType {\n \n-  BOOL(16, true, Boolean.class),\n-  BOOL_ARRAY(1000, true, Boolean[].class),\n-  INT2(21, true, Short.class, Number.class),\n-  INT2_ARRAY(1005, true, Short[].class, Number[].class),\n-  INT4(23, true, Integer.class, Number.class),\n-  INT4_ARRAY(1007, true, Integer[].class, Number[].class),\n-  INT8(20, true, Long.class, Number.class),\n-  INT8_ARRAY(1016, true, Long[].class, Number[].class),\n-  FLOAT4(700, true, Float.class, Number.class),\n-  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class),\n-  FLOAT8(701, true, Double.class, Number.class),\n-  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class),\n-  NUMERIC(1700, false, Numeric.class, Number.class),\n-  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class),\n-  MONEY(790, true, Object.class),\n-  MONEY_ARRAY(791, true, Object[].class),\n-  BIT(1560, true, Object.class),\n-  BIT_ARRAY(1561, true, Object[].class),\n-  VARBIT(1562, true, Object.class),\n-  VARBIT_ARRAY(1563, true, Object[].class),\n-  CHAR(18, true, String.class),\n-  CHAR_ARRAY(1002, true, String[].class),\n-  VARCHAR(1043, true, String.class),\n-  VARCHAR_ARRAY(1015, true, String[].class),\n-  BPCHAR(1042, true, String.class),\n-  BPCHAR_ARRAY(1014, true, String[].class),\n-  TEXT(25, true, String.class),\n-  TEXT_ARRAY(1009, true, String[].class),\n-  NAME(19, true, String.class),\n-  NAME_ARRAY(1003, true, String[].class),\n-  DATE(1082, true, LocalDate.class),\n-  DATE_ARRAY(1182, true, LocalDate[].class),\n-  TIME(1083, true, LocalTime.class),\n-  TIME_ARRAY(1183, true, LocalTime[].class),\n-  TIMETZ(1266, true, OffsetTime.class),\n-  TIMETZ_ARRAY(1270, true, OffsetTime[].class),\n-  TIMESTAMP(1114, true, LocalDateTime.class),\n-  TIMESTAMP_ARRAY(1115, true, LocalDateTime[].class),\n-  TIMESTAMPTZ(1184, true, OffsetDateTime.class),\n-  TIMESTAMPTZ_ARRAY(1185, true, OffsetDateTime[].class),\n-  INTERVAL(1186, true, Interval.class),\n-  INTERVAL_ARRAY(1187, true, Interval[].class),\n-  BYTEA(17, true, Buffer.class),\n-  BYTEA_ARRAY(1001, true, Buffer[].class),\n-  MACADDR(829, true, Object.class),\n-  INET(869, true, Object[].class),\n-  CIDR(650, true, Object.class),\n-  MACADDR8(774, true, Object[].class),\n-  UUID(2950, true, UUID.class),\n-  UUID_ARRAY(2951, true, UUID[].class),\n-  JSON(114, true, Object.class),\n-  JSON_ARRAY(199, true, Object[].class),\n-  JSONB(3802, true, Object.class),\n-  JSONB_ARRAY(3807, true, Object[].class),\n-  XML(142, true, Object.class),\n-  XML_ARRAY(143, true, Object[].class),\n-  POINT(600, true, Point.class),\n-  POINT_ARRAY(1017, true, Point[].class),\n-  LINE(628, true, Line.class),\n-  LINE_ARRAY(629, true, Line[].class),\n-  LSEG(601, true, LineSegment.class),\n-  LSEG_ARRAY(1018, true, LineSegment[].class),\n-  BOX(603, true, Box.class),\n-  BOX_ARRAY(1020, true, Box[].class),\n-  PATH(602, true, Path.class),\n-  PATH_ARRAY(1019, true, Path[].class),\n-  POLYGON(604, true, Polygon.class),\n-  POLYGON_ARRAY(1027, true, Polygon[].class),\n-  CIRCLE(718, true, Circle.class),\n-  CIRCLE_ARRAY(719, true, Circle[].class),\n-  HSTORE(33670, true, Object.class),\n-  OID(26, true, Object.class),\n-  OID_ARRAY(1028, true, Object[].class),\n-  VOID(2278, true, Object.class),\n-  UNKNOWN(705, false, String.class),\n-  TS_VECTOR(3614, false, String.class),\n-  TS_VECTOR_ARRAY(3643, false, String[].class),\n-  TS_QUERY(3615, false,  String.class),\n-  TS_QUERY_ARRAY(3645, false,  String[].class);\n+  BOOL(16, true, Boolean.class, JDBCType.BIT),\n+  BOOL_ARRAY(1000, true, Boolean[].class, JDBCType.BIT),\n+  INT2(21, true, Short.class, Number.class, JDBCType.SMALLINT),\n+  INT2_ARRAY(1005, true, Short[].class, Number[].class, JDBCType.SMALLINT),\n+  INT4(23, true, Integer.class, Number.class, JDBCType.INTEGER),\n+  INT4_ARRAY(1007, true, Integer[].class, Number[].class, JDBCType.INTEGER),\n+  INT8(20, true, Long.class, Number.class, JDBCType.BIGINT),\n+  INT8_ARRAY(1016, true, Long[].class, Number[].class, JDBCType.BIGINT),\n+  FLOAT4(700, true, Float.class, Number.class, JDBCType.REAL),\n+  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class, JDBCType.REAL),\n+  FLOAT8(701, true, Double.class, Number.class, JDBCType.DOUBLE),\n+  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class, JDBCType.DOUBLE),\n+  NUMERIC(1700, false, Numeric.class, Number.class, JDBCType.NUMERIC),\n+  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class, JDBCType.NUMERIC),\n+  MONEY(790, true, Object.class, null),\n+  MONEY_ARRAY(791, true, Object[].class, null),\n+  BIT(1560, true, Object.class, JDBCType.OTHER),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92be38efb5e737749da5685c713dedc73f7cf44"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg3MjY3MQ==", "bodyText": "Should be CHAR.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r486872671", "createdAt": "2020-09-11T08:54:23Z", "author": {"login": "gavinking"}, "path": "vertx-pg-client/src/main/java/io/vertx/pgclient/impl/codec/DataType.java", "diffHunk": "@@ -46,85 +47,85 @@\n  */\n enum DataType {\n \n-  BOOL(16, true, Boolean.class),\n-  BOOL_ARRAY(1000, true, Boolean[].class),\n-  INT2(21, true, Short.class, Number.class),\n-  INT2_ARRAY(1005, true, Short[].class, Number[].class),\n-  INT4(23, true, Integer.class, Number.class),\n-  INT4_ARRAY(1007, true, Integer[].class, Number[].class),\n-  INT8(20, true, Long.class, Number.class),\n-  INT8_ARRAY(1016, true, Long[].class, Number[].class),\n-  FLOAT4(700, true, Float.class, Number.class),\n-  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class),\n-  FLOAT8(701, true, Double.class, Number.class),\n-  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class),\n-  NUMERIC(1700, false, Numeric.class, Number.class),\n-  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class),\n-  MONEY(790, true, Object.class),\n-  MONEY_ARRAY(791, true, Object[].class),\n-  BIT(1560, true, Object.class),\n-  BIT_ARRAY(1561, true, Object[].class),\n-  VARBIT(1562, true, Object.class),\n-  VARBIT_ARRAY(1563, true, Object[].class),\n-  CHAR(18, true, String.class),\n-  CHAR_ARRAY(1002, true, String[].class),\n-  VARCHAR(1043, true, String.class),\n-  VARCHAR_ARRAY(1015, true, String[].class),\n-  BPCHAR(1042, true, String.class),\n-  BPCHAR_ARRAY(1014, true, String[].class),\n-  TEXT(25, true, String.class),\n-  TEXT_ARRAY(1009, true, String[].class),\n-  NAME(19, true, String.class),\n-  NAME_ARRAY(1003, true, String[].class),\n-  DATE(1082, true, LocalDate.class),\n-  DATE_ARRAY(1182, true, LocalDate[].class),\n-  TIME(1083, true, LocalTime.class),\n-  TIME_ARRAY(1183, true, LocalTime[].class),\n-  TIMETZ(1266, true, OffsetTime.class),\n-  TIMETZ_ARRAY(1270, true, OffsetTime[].class),\n-  TIMESTAMP(1114, true, LocalDateTime.class),\n-  TIMESTAMP_ARRAY(1115, true, LocalDateTime[].class),\n-  TIMESTAMPTZ(1184, true, OffsetDateTime.class),\n-  TIMESTAMPTZ_ARRAY(1185, true, OffsetDateTime[].class),\n-  INTERVAL(1186, true, Interval.class),\n-  INTERVAL_ARRAY(1187, true, Interval[].class),\n-  BYTEA(17, true, Buffer.class),\n-  BYTEA_ARRAY(1001, true, Buffer[].class),\n-  MACADDR(829, true, Object.class),\n-  INET(869, true, Object[].class),\n-  CIDR(650, true, Object.class),\n-  MACADDR8(774, true, Object[].class),\n-  UUID(2950, true, UUID.class),\n-  UUID_ARRAY(2951, true, UUID[].class),\n-  JSON(114, true, Object.class),\n-  JSON_ARRAY(199, true, Object[].class),\n-  JSONB(3802, true, Object.class),\n-  JSONB_ARRAY(3807, true, Object[].class),\n-  XML(142, true, Object.class),\n-  XML_ARRAY(143, true, Object[].class),\n-  POINT(600, true, Point.class),\n-  POINT_ARRAY(1017, true, Point[].class),\n-  LINE(628, true, Line.class),\n-  LINE_ARRAY(629, true, Line[].class),\n-  LSEG(601, true, LineSegment.class),\n-  LSEG_ARRAY(1018, true, LineSegment[].class),\n-  BOX(603, true, Box.class),\n-  BOX_ARRAY(1020, true, Box[].class),\n-  PATH(602, true, Path.class),\n-  PATH_ARRAY(1019, true, Path[].class),\n-  POLYGON(604, true, Polygon.class),\n-  POLYGON_ARRAY(1027, true, Polygon[].class),\n-  CIRCLE(718, true, Circle.class),\n-  CIRCLE_ARRAY(719, true, Circle[].class),\n-  HSTORE(33670, true, Object.class),\n-  OID(26, true, Object.class),\n-  OID_ARRAY(1028, true, Object[].class),\n-  VOID(2278, true, Object.class),\n-  UNKNOWN(705, false, String.class),\n-  TS_VECTOR(3614, false, String.class),\n-  TS_VECTOR_ARRAY(3643, false, String[].class),\n-  TS_QUERY(3615, false,  String.class),\n-  TS_QUERY_ARRAY(3645, false,  String[].class);\n+  BOOL(16, true, Boolean.class, JDBCType.BIT),\n+  BOOL_ARRAY(1000, true, Boolean[].class, JDBCType.BIT),\n+  INT2(21, true, Short.class, Number.class, JDBCType.SMALLINT),\n+  INT2_ARRAY(1005, true, Short[].class, Number[].class, JDBCType.SMALLINT),\n+  INT4(23, true, Integer.class, Number.class, JDBCType.INTEGER),\n+  INT4_ARRAY(1007, true, Integer[].class, Number[].class, JDBCType.INTEGER),\n+  INT8(20, true, Long.class, Number.class, JDBCType.BIGINT),\n+  INT8_ARRAY(1016, true, Long[].class, Number[].class, JDBCType.BIGINT),\n+  FLOAT4(700, true, Float.class, Number.class, JDBCType.REAL),\n+  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class, JDBCType.REAL),\n+  FLOAT8(701, true, Double.class, Number.class, JDBCType.DOUBLE),\n+  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class, JDBCType.DOUBLE),\n+  NUMERIC(1700, false, Numeric.class, Number.class, JDBCType.NUMERIC),\n+  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class, JDBCType.NUMERIC),\n+  MONEY(790, true, Object.class, null),\n+  MONEY_ARRAY(791, true, Object[].class, null),\n+  BIT(1560, true, Object.class, JDBCType.OTHER),\n+  BIT_ARRAY(1561, true, Object[].class, JDBCType.OTHER),\n+  VARBIT(1562, true, Object.class, JDBCType.OTHER),\n+  VARBIT_ARRAY(1563, true, Object[].class, JDBCType.OTHER),\n+  CHAR(18, true, String.class, JDBCType.VARCHAR),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92be38efb5e737749da5685c713dedc73f7cf44"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg3NTQyNQ==", "bodyText": "Also BIT, if i'm not mistaken.", "url": "https://github.com/eclipse-vertx/vertx-sql-client/pull/750#discussion_r486875425", "createdAt": "2020-09-11T08:56:54Z", "author": {"login": "gavinking"}, "path": "vertx-pg-client/src/main/java/io/vertx/pgclient/impl/codec/DataType.java", "diffHunk": "@@ -46,85 +47,85 @@\n  */\n enum DataType {\n \n-  BOOL(16, true, Boolean.class),\n-  BOOL_ARRAY(1000, true, Boolean[].class),\n-  INT2(21, true, Short.class, Number.class),\n-  INT2_ARRAY(1005, true, Short[].class, Number[].class),\n-  INT4(23, true, Integer.class, Number.class),\n-  INT4_ARRAY(1007, true, Integer[].class, Number[].class),\n-  INT8(20, true, Long.class, Number.class),\n-  INT8_ARRAY(1016, true, Long[].class, Number[].class),\n-  FLOAT4(700, true, Float.class, Number.class),\n-  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class),\n-  FLOAT8(701, true, Double.class, Number.class),\n-  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class),\n-  NUMERIC(1700, false, Numeric.class, Number.class),\n-  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class),\n-  MONEY(790, true, Object.class),\n-  MONEY_ARRAY(791, true, Object[].class),\n-  BIT(1560, true, Object.class),\n-  BIT_ARRAY(1561, true, Object[].class),\n-  VARBIT(1562, true, Object.class),\n-  VARBIT_ARRAY(1563, true, Object[].class),\n-  CHAR(18, true, String.class),\n-  CHAR_ARRAY(1002, true, String[].class),\n-  VARCHAR(1043, true, String.class),\n-  VARCHAR_ARRAY(1015, true, String[].class),\n-  BPCHAR(1042, true, String.class),\n-  BPCHAR_ARRAY(1014, true, String[].class),\n-  TEXT(25, true, String.class),\n-  TEXT_ARRAY(1009, true, String[].class),\n-  NAME(19, true, String.class),\n-  NAME_ARRAY(1003, true, String[].class),\n-  DATE(1082, true, LocalDate.class),\n-  DATE_ARRAY(1182, true, LocalDate[].class),\n-  TIME(1083, true, LocalTime.class),\n-  TIME_ARRAY(1183, true, LocalTime[].class),\n-  TIMETZ(1266, true, OffsetTime.class),\n-  TIMETZ_ARRAY(1270, true, OffsetTime[].class),\n-  TIMESTAMP(1114, true, LocalDateTime.class),\n-  TIMESTAMP_ARRAY(1115, true, LocalDateTime[].class),\n-  TIMESTAMPTZ(1184, true, OffsetDateTime.class),\n-  TIMESTAMPTZ_ARRAY(1185, true, OffsetDateTime[].class),\n-  INTERVAL(1186, true, Interval.class),\n-  INTERVAL_ARRAY(1187, true, Interval[].class),\n-  BYTEA(17, true, Buffer.class),\n-  BYTEA_ARRAY(1001, true, Buffer[].class),\n-  MACADDR(829, true, Object.class),\n-  INET(869, true, Object[].class),\n-  CIDR(650, true, Object.class),\n-  MACADDR8(774, true, Object[].class),\n-  UUID(2950, true, UUID.class),\n-  UUID_ARRAY(2951, true, UUID[].class),\n-  JSON(114, true, Object.class),\n-  JSON_ARRAY(199, true, Object[].class),\n-  JSONB(3802, true, Object.class),\n-  JSONB_ARRAY(3807, true, Object[].class),\n-  XML(142, true, Object.class),\n-  XML_ARRAY(143, true, Object[].class),\n-  POINT(600, true, Point.class),\n-  POINT_ARRAY(1017, true, Point[].class),\n-  LINE(628, true, Line.class),\n-  LINE_ARRAY(629, true, Line[].class),\n-  LSEG(601, true, LineSegment.class),\n-  LSEG_ARRAY(1018, true, LineSegment[].class),\n-  BOX(603, true, Box.class),\n-  BOX_ARRAY(1020, true, Box[].class),\n-  PATH(602, true, Path.class),\n-  PATH_ARRAY(1019, true, Path[].class),\n-  POLYGON(604, true, Polygon.class),\n-  POLYGON_ARRAY(1027, true, Polygon[].class),\n-  CIRCLE(718, true, Circle.class),\n-  CIRCLE_ARRAY(719, true, Circle[].class),\n-  HSTORE(33670, true, Object.class),\n-  OID(26, true, Object.class),\n-  OID_ARRAY(1028, true, Object[].class),\n-  VOID(2278, true, Object.class),\n-  UNKNOWN(705, false, String.class),\n-  TS_VECTOR(3614, false, String.class),\n-  TS_VECTOR_ARRAY(3643, false, String[].class),\n-  TS_QUERY(3615, false,  String.class),\n-  TS_QUERY_ARRAY(3645, false,  String[].class);\n+  BOOL(16, true, Boolean.class, JDBCType.BIT),\n+  BOOL_ARRAY(1000, true, Boolean[].class, JDBCType.BIT),\n+  INT2(21, true, Short.class, Number.class, JDBCType.SMALLINT),\n+  INT2_ARRAY(1005, true, Short[].class, Number[].class, JDBCType.SMALLINT),\n+  INT4(23, true, Integer.class, Number.class, JDBCType.INTEGER),\n+  INT4_ARRAY(1007, true, Integer[].class, Number[].class, JDBCType.INTEGER),\n+  INT8(20, true, Long.class, Number.class, JDBCType.BIGINT),\n+  INT8_ARRAY(1016, true, Long[].class, Number[].class, JDBCType.BIGINT),\n+  FLOAT4(700, true, Float.class, Number.class, JDBCType.REAL),\n+  FLOAT4_ARRAY(1021, true, Float[].class, Number[].class, JDBCType.REAL),\n+  FLOAT8(701, true, Double.class, Number.class, JDBCType.DOUBLE),\n+  FLOAT8_ARRAY(1022, true, Double[].class, Number[].class, JDBCType.DOUBLE),\n+  NUMERIC(1700, false, Numeric.class, Number.class, JDBCType.NUMERIC),\n+  NUMERIC_ARRAY(1231, false, Numeric[].class, Number[].class, JDBCType.NUMERIC),\n+  MONEY(790, true, Object.class, null),\n+  MONEY_ARRAY(791, true, Object[].class, null),\n+  BIT(1560, true, Object.class, JDBCType.OTHER),\n+  BIT_ARRAY(1561, true, Object[].class, JDBCType.OTHER),\n+  VARBIT(1562, true, Object.class, JDBCType.OTHER),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92be38efb5e737749da5685c713dedc73f7cf44"}, "originalPosition": 109}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcaf1ca088a28d3056f66aad6f1b810b655b0f89", "author": {"user": {"login": "vietj", "name": "Julien Viet"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/bcaf1ca088a28d3056f66aad6f1b810b655b0f89", "committedDate": "2020-09-11T10:06:41Z", "message": "Start to implement support for column descriptors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33f75255e1e57b916e307a6661cd1405a809b59d", "author": {"user": {"login": "vietj", "name": "Julien Viet"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/33f75255e1e57b916e307a6661cd1405a809b59d", "committedDate": "2020-09-11T10:06:41Z", "message": "Implement MYSQL column descriptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f114ab48674bfa8b484b679a59f0abf96177ef5d", "author": {"user": {"login": "aguibert", "name": "Andrew Guibert"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/f114ab48674bfa8b484b679a59f0abf96177ef5d", "committedDate": "2020-09-11T10:06:41Z", "message": "DB2 support for ColumnDescriptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49443638554a8c57e86be9efd4d6b8eaf08f2a1f", "author": {"user": {"login": "vietj", "name": "Julien Viet"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/49443638554a8c57e86be9efd4d6b8eaf08f2a1f", "committedDate": "2020-09-11T10:06:41Z", "message": "PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2c59ee6e3346d5ad8b5971d36169c46566277ef", "author": {"user": {"login": "vietj", "name": "Julien Viet"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/f2c59ee6e3346d5ad8b5971d36169c46566277ef", "committedDate": "2020-09-11T10:32:02Z", "message": "Add isArray boolean on ColumnDescriptor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e92be38efb5e737749da5685c713dedc73f7cf44", "author": {"user": {"login": "vietj", "name": "Julien Viet"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/e92be38efb5e737749da5685c713dedc73f7cf44", "committedDate": "2020-09-11T08:25:07Z", "message": "PR feedback"}, "afterCommit": {"oid": "f2c59ee6e3346d5ad8b5971d36169c46566277ef", "author": {"user": {"login": "vietj", "name": "Julien Viet"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/f2c59ee6e3346d5ad8b5971d36169c46566277ef", "committedDate": "2020-09-11T10:32:02Z", "message": "Add isArray boolean on ColumnDescriptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79d178aa2587a5d49612fb3f80a8d1789a76ee80", "author": {"user": {"login": "vietj", "name": "Julien Viet"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/79d178aa2587a5d49612fb3f80a8d1789a76ee80", "committedDate": "2020-09-14T08:51:38Z", "message": "Use DECIMAL for MySQL NEWDECIMAL instead of NUMERIC"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ac1c8310aa49520205df954aaffde35886c55b7", "author": {"user": {"login": "vietj", "name": "Julien Viet"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/8ac1c8310aa49520205df954aaffde35886c55b7", "committedDate": "2020-09-14T08:21:18Z", "message": "Use DECIMAL for MySQL NEWDECIMAL instead of NUMERIC"}, "afterCommit": {"oid": "79d178aa2587a5d49612fb3f80a8d1789a76ee80", "author": {"user": {"login": "vietj", "name": "Julien Viet"}}, "url": "https://github.com/eclipse-vertx/vertx-sql-client/commit/79d178aa2587a5d49612fb3f80a8d1789a76ee80", "committedDate": "2020-09-14T08:51:38Z", "message": "Use DECIMAL for MySQL NEWDECIMAL instead of NUMERIC"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1524, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}