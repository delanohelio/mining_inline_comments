{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MzE5NTQ1", "number": 660, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjowMjowM1rODaJUeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjowMjowM1rODaJUeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NzQyMjY0OnYy", "diffSide": "RIGHT", "path": "extensions/microprofile-metrics/runtime/src/main/java/org/apache/camel/quarkus/component/microprofile/metrics/runtime/CamelMicroProfileMetricsRecorder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjowMjowM1rOFg7zJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjo0MTowM1rOFg8xvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA3ODUwMQ==", "bodyText": "I wonder if we can simplify this to just:\ncamelContext.setMessageHistory(true);\ncamelContext.setMessageHistoryFactory(new MicroProfileMetricsMessageHistoryFactory());\n\nAnd not bother with the other checks?\nIn 3.1.0, when you add the MessageHistoryFactory, message history is auto enabled on the CamelContext anyway.", "url": "https://github.com/apache/camel-quarkus/pull/660#discussion_r370078501", "createdAt": "2020-01-23T12:02:03Z", "author": {"login": "jamesnetherton"}, "path": "extensions/microprofile-metrics/runtime/src/main/java/org/apache/camel/quarkus/component/microprofile/metrics/runtime/CamelMicroProfileMetricsRecorder.java", "diffHunk": "@@ -61,4 +63,24 @@ public void configureCamelContext(CamelMicroProfileMetricsConfig config,\n             managementStrategy.addEventNotifier(new MicroProfileMetricsCamelContextEventNotifier());\n         }\n     }\n+\n+    private static class MicroProfileMetricsContextConfigurerListener extends MainListenerSupport {\n+        private static final Logger LOGGER = Logger.getLogger(MicroProfileMetricsContextConfigurerListener.class);\n+        private final CamelMicroProfileMetricsConfig config;\n+\n+        public MicroProfileMetricsContextConfigurerListener(CamelMicroProfileMetricsConfig config) {\n+            this.config = config;\n+        }\n+\n+        @Override\n+        public void configure(CamelContext camelContext) {\n+            if (camelContext.isMessageHistory() && config.enableMessageHistory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b30cdda2552191f0fb40990e052428d14d0cbb9b"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA4Nzg2Ng==", "bodyText": "It can certainly be done, my only reasoning was: what if the user has explicitly disabled message history ? by adding the extension we would then revert its change without notice.\nI guess I can add a log that say that the message history has been turned on in case it was not, maybe the same should happen on 3.1.x.", "url": "https://github.com/apache/camel-quarkus/pull/660#discussion_r370087866", "createdAt": "2020-01-23T12:25:06Z", "author": {"login": "lburgazzoli"}, "path": "extensions/microprofile-metrics/runtime/src/main/java/org/apache/camel/quarkus/component/microprofile/metrics/runtime/CamelMicroProfileMetricsRecorder.java", "diffHunk": "@@ -61,4 +63,24 @@ public void configureCamelContext(CamelMicroProfileMetricsConfig config,\n             managementStrategy.addEventNotifier(new MicroProfileMetricsCamelContextEventNotifier());\n         }\n     }\n+\n+    private static class MicroProfileMetricsContextConfigurerListener extends MainListenerSupport {\n+        private static final Logger LOGGER = Logger.getLogger(MicroProfileMetricsContextConfigurerListener.class);\n+        private final CamelMicroProfileMetricsConfig config;\n+\n+        public MicroProfileMetricsContextConfigurerListener(CamelMicroProfileMetricsConfig config) {\n+            this.config = config;\n+        }\n+\n+        @Override\n+        public void configure(CamelContext camelContext) {\n+            if (camelContext.isMessageHistory() && config.enableMessageHistory) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA3ODUwMQ=="}, "originalCommit": {"oid": "b30cdda2552191f0fb40990e052428d14d0cbb9b"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5NDUyNw==", "bodyText": "@jamesnetherton I've simplified it a bit, does it look better now ?", "url": "https://github.com/apache/camel-quarkus/pull/660#discussion_r370094527", "createdAt": "2020-01-23T12:41:03Z", "author": {"login": "lburgazzoli"}, "path": "extensions/microprofile-metrics/runtime/src/main/java/org/apache/camel/quarkus/component/microprofile/metrics/runtime/CamelMicroProfileMetricsRecorder.java", "diffHunk": "@@ -61,4 +63,24 @@ public void configureCamelContext(CamelMicroProfileMetricsConfig config,\n             managementStrategy.addEventNotifier(new MicroProfileMetricsCamelContextEventNotifier());\n         }\n     }\n+\n+    private static class MicroProfileMetricsContextConfigurerListener extends MainListenerSupport {\n+        private static final Logger LOGGER = Logger.getLogger(MicroProfileMetricsContextConfigurerListener.class);\n+        private final CamelMicroProfileMetricsConfig config;\n+\n+        public MicroProfileMetricsContextConfigurerListener(CamelMicroProfileMetricsConfig config) {\n+            this.config = config;\n+        }\n+\n+        @Override\n+        public void configure(CamelContext camelContext) {\n+            if (camelContext.isMessageHistory() && config.enableMessageHistory) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA3ODUwMQ=="}, "originalCommit": {"oid": "b30cdda2552191f0fb40990e052428d14d0cbb9b"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4460, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}