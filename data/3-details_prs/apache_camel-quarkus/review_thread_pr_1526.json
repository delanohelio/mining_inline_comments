{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NTY5NzEy", "number": 1526, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzo0MzozOFrOEXgp6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzo0MzozOFrOEXgp6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMDg3NzIwOnYy", "diffSide": "RIGHT", "path": "integration-tests/core/src/test/java/org/apache/camel/quarkus/core/CoreTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzo0MzozOVrOG_VoiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQwNzo1NTo0NlrOG_WCdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2NzkxMw==", "bodyText": "Comparing the list of routeIds here would make it easier to troubleshoot if something goes wrong.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    RestAssured.when().get(\"/test/routes/lookup-routes\").then().body(is(\"true\"));\n          \n          \n            \n                    RestAssured.when().get(\"/test/routes/lookup-routes\").then().body(is(\"foo,bar\"));", "url": "https://github.com/apache/camel-quarkus/pull/1526#discussion_r469067913", "createdAt": "2020-08-12T07:43:39Z", "author": {"login": "ppalaga"}, "path": "integration-tests/core/src/test/java/org/apache/camel/quarkus/core/CoreTest.java", "diffHunk": "@@ -33,12 +33,18 @@\n \n @QuarkusTest\n public class CoreTest {\n+\n     @Test\n     public void testContainerLookupFromRegistry() {\n         RestAssured.when().get(\"/test/registry/lookup-registry\").then().body(is(\"true\"));\n         RestAssured.when().get(\"/test/registry/lookup-context\").then().body(is(\"true\"));\n     }\n \n+    @Test\n+    public void testLookupRoutes() {\n+        RestAssured.when().get(\"/test/routes/lookup-routes\").then().body(is(\"true\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0422219d7ed6a775208d5417f6ac39aea200a6a2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA3NDU0OA==", "bodyText": "Yeah good idea", "url": "https://github.com/apache/camel-quarkus/pull/1526#discussion_r469074548", "createdAt": "2020-08-12T07:55:46Z", "author": {"login": "davsclaus"}, "path": "integration-tests/core/src/test/java/org/apache/camel/quarkus/core/CoreTest.java", "diffHunk": "@@ -33,12 +33,18 @@\n \n @QuarkusTest\n public class CoreTest {\n+\n     @Test\n     public void testContainerLookupFromRegistry() {\n         RestAssured.when().get(\"/test/registry/lookup-registry\").then().body(is(\"true\"));\n         RestAssured.when().get(\"/test/registry/lookup-context\").then().body(is(\"true\"));\n     }\n \n+    @Test\n+    public void testLookupRoutes() {\n+        RestAssured.when().get(\"/test/routes/lookup-routes\").then().body(is(\"true\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTA2NzkxMw=="}, "originalCommit": {"oid": "0422219d7ed6a775208d5417f6ac39aea200a6a2"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4656, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}