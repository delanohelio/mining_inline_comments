{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNTI5MzE3", "number": 1905, "title": "PostgresSQL Event native support fixes #1719", "bodyText": "[ ] An issue should be filed for the change unless this is a trivial change (fixing a typo or similar). One issue should ideally be fixed by not more than one commit and the other way round, each commit should fix just one issue, without pulling in other changes.\n[ ] Each commit in the pull request should have a meaningful and properly spelled subject line and body. Copying the title of the associated issue is typically enough. Please include the issue number in the commit message prefixed by #.\n[ ] The pull request description should explain what the pull request does, how, and why. If the info is available in the associated issue or some other external document, a link is enough.\n[ ] Phrases like Fix # or Fixes # will auto-close the named issue upon merging the pull request. Using them is typically a good idea.\n[ ] Please run mvn process-resources -Pformat (and amend the changes if necessary) before sending the pull request.\n[ ] Contributor guide is your good friend: https://camel.apache.org/camel-quarkus/latest/contributor-guide.html", "createdAt": "2020-10-12T11:58:28Z", "url": "https://github.com/apache/camel-quarkus/pull/1905", "merged": true, "mergeCommit": {"oid": "69d9d7ac1f712b0bca1149ce6a10a35c94236ebd"}, "closed": true, "closedAt": "2020-10-13T08:40:14Z", "author": {"login": "zbendhiba"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRy-YIAFqTUwNjU2NjQ1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSEWIeAFqTUwNzE5MzQ4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NTY2NDU0", "url": "https://github.com/apache/camel-quarkus/pull/1905#pullrequestreview-506566454", "createdAt": "2020-10-12T12:17:20Z", "commit": {"oid": "0f4fc7cc478fcf935806301f817d0642e05bb316"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NTYwMzEx", "url": "https://github.com/apache/camel-quarkus/pull/1905#pullrequestreview-506560311", "createdAt": "2020-10-12T12:08:02Z", "commit": {"oid": "0f4fc7cc478fcf935806301f817d0642e05bb316"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMjowODowMlrOHf7-dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMjoxOTo1N1rOHf8WCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1MDU1MA==", "bodyText": "Maybe it'd be good to leverage the Quarkus agroal extension to create a named postgresql datasource? Or at least add another route / test case for that scenario. It's a good way of proving our stuff integrates well with Quarkus.", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503250550", "createdAt": "2020-10-12T12:08:02Z", "author": {"login": "jamesnetherton"}, "path": "integration-tests/pgevent/src/main/java/org/apache/camel/quarkus/component/pgevent/it/PgeventRoutes.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.pgevent.it;\n+\n+import javax.inject.Named;\n+import javax.ws.rs.Produces;\n+\n+import com.impossibl.postgres.jdbc.PGDataSource;\n+import org.apache.camel.builder.RouteBuilder;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+\n+public class PgeventRoutes extends RouteBuilder {\n+    @ConfigProperty(name = \"database.host\")\n+    String host;\n+    @ConfigProperty(name = \"database.port\")\n+    Integer port;\n+    @ConfigProperty(name = \"database.name\")\n+    String databaseName;\n+    @ConfigProperty(name = \"database.user\")\n+    String user;\n+    @ConfigProperty(name = \"database.password\")\n+    String password;\n+\n+    @Override\n+    public void configure() throws Exception {\n+        // producer for simple pub-sub\n+        from(\"direct:pgevent-pub\")\n+                .to(\"pgevent://{{database.host}}:{{database.port}}/{{database.name}}/testchannel?user={{database.user}}&pass={{database.password}}\");\n+\n+        //consumer for simple pub-sub\n+        from(\"pgevent://{{database.host}}:{{database.port}}/{{database.name}}/testchannel?user={{database.user}}&pass={{database.password}}\")\n+                .log(\"Message got ${body}\")\n+                .bean(MyBean.class);\n+\n+        // producer with datasource\n+        from(\"direct:pgevent-datasource\")\n+                .to(\"pgevent:///postgres/testchannel?datasource=#pgDataSource\");\n+\n+        // consumer with datasource\n+        from(\"pgevent:///postgres/testchannel?datasource=#pgDataSource\")\n+                .log(\"Message got ${body}\")\n+                .bean(MyBean.class);\n+    }\n+\n+    @Produces\n+    @Named(\"pgDataSource\")\n+    public PGDataSource loadDataSource() throws Exception {\n+        PGDataSource dataSource = new PGDataSource();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f4fc7cc478fcf935806301f817d0642e05bb316"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NTk0OQ==", "bodyText": "I think this leftover can be removed.", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503255949", "createdAt": "2020-10-12T12:18:48Z", "author": {"login": "jamesnetherton"}, "path": "extensions/pgevent/deployment/src/main/java/org/apache/camel/quarkus/component/pgevent/deployment/PgeventProcessor.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.pgevent.deployment;\n+\n+import java.io.IOException;\n+import java.sql.Driver;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import com.impossibl.postgres.system.procs.ProcProvider;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ServiceProviderBuildItem;\n+import io.quarkus.deployment.util.ServiceUtil;\n+import org.jboss.logging.Logger;\n+\n+class PgeventProcessor {\n+\n+    private static final String PGEVENT_SERVICE_BASE = \"META-INF/services/\";\n+\n+    private static final Logger LOG = Logger.getLogger(PgeventProcessor.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f4fc7cc478fcf935806301f817d0642e05bb316"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI1NjU4Ng==", "bodyText": "If there's just one ReflectiveClassBuildItem to return then I guess we don't need a List.", "url": "https://github.com/apache/camel-quarkus/pull/1905#discussion_r503256586", "createdAt": "2020-10-12T12:19:57Z", "author": {"login": "jamesnetherton"}, "path": "extensions/pgevent/deployment/src/main/java/org/apache/camel/quarkus/component/pgevent/deployment/PgeventProcessor.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.pgevent.deployment;\n+\n+import java.io.IOException;\n+import java.sql.Driver;\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Stream;\n+\n+import com.impossibl.postgres.system.procs.ProcProvider;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ServiceProviderBuildItem;\n+import io.quarkus.deployment.util.ServiceUtil;\n+import org.jboss.logging.Logger;\n+\n+class PgeventProcessor {\n+\n+    private static final String PGEVENT_SERVICE_BASE = \"META-INF/services/\";\n+\n+    private static final Logger LOG = Logger.getLogger(PgeventProcessor.class);\n+    private static final String FEATURE = \"camel-pgevent\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    List<ReflectiveClassBuildItem> registerReflectiveClasses() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f4fc7cc478fcf935806301f817d0642e05bb316"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71a1157b09779194c40be8684c5f64dbda46af20", "author": {"user": {"login": "zbendhiba", "name": "Zineb BENDHIBA"}}, "url": "https://github.com/apache/camel-quarkus/commit/71a1157b09779194c40be8684c5f64dbda46af20", "committedDate": "2020-10-12T14:52:06Z", "message": "PostgresSQL Event native support fixes #1719"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f4fc7cc478fcf935806301f817d0642e05bb316", "author": {"user": {"login": "zbendhiba", "name": "Zineb BENDHIBA"}}, "url": "https://github.com/apache/camel-quarkus/commit/0f4fc7cc478fcf935806301f817d0642e05bb316", "committedDate": "2020-10-12T11:53:53Z", "message": "PostgresSQL Event native support fixes #1719"}, "afterCommit": {"oid": "71a1157b09779194c40be8684c5f64dbda46af20", "author": {"user": {"login": "zbendhiba", "name": "Zineb BENDHIBA"}}, "url": "https://github.com/apache/camel-quarkus/commit/71a1157b09779194c40be8684c5f64dbda46af20", "committedDate": "2020-10-12T14:52:06Z", "message": "PostgresSQL Event native support fixes #1719"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MDk1MjQy", "url": "https://github.com/apache/camel-quarkus/pull/1905#pullrequestreview-507095242", "createdAt": "2020-10-13T06:10:46Z", "commit": {"oid": "71a1157b09779194c40be8684c5f64dbda46af20"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MTkzNDg1", "url": "https://github.com/apache/camel-quarkus/pull/1905#pullrequestreview-507193485", "createdAt": "2020-10-13T08:31:40Z", "commit": {"oid": "71a1157b09779194c40be8684c5f64dbda46af20"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2823, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}