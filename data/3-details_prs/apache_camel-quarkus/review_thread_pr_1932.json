{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MDcwMjIx", "number": 1932, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0NTowMlrOEvdL-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0NTowMlrOEvdL-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MTk2NzI4OnYy", "diffSide": "RIGHT", "path": "integration-tests/jpa/src/main/java/org/apache/camel/quarkus/component/jpa/it/JpaResource.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0NTowMlrOHkc2bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo1MTowOFrOHkdEqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MzQ3MQ==", "bodyText": "Shouldn't we add a comment here that this is not a good pattern to copy in a real application?", "url": "https://github.com/apache/camel-quarkus/pull/1932#discussion_r507983471", "createdAt": "2020-10-19T18:45:02Z", "author": {"login": "ppalaga"}, "path": "integration-tests/jpa/src/main/java/org/apache/camel/quarkus/component/jpa/it/JpaResource.java", "diffHunk": "@@ -49,6 +56,51 @@\n         return consumerTemplate.receiveBodyNoWait(\"jpa:\" + Fruit.class.getName(), List.class);\n     }\n \n+    @Path(\"/get/{id}\")\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Fruit getFruit(@PathParam(\"id\") int id) {\n+        return producerTemplate.requestBody(\"jpa:\" + Fruit.class.getName() + \"?findEntity=true\", id, Fruit.class);\n+    }\n+\n+    @Path(\"/get/query/{id}\")\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Fruit> getFruitByQuery(@PathParam(\"id\") int id) {\n+        return producerTemplate.requestBody(\"jpa:\" + Fruit.class.getName() + \"?query=\"\n+                + \"select f from \" + Fruit.class.getName() + \" f where f.id = \" + id,\n+                null, List.class);\n+    }\n+\n+    @Path(\"/get/query/named/{id}\")\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Fruit> getFruitByNamedQuery(@PathParam(\"id\") int id) {\n+        Map<String, Object> queryParams = new HashMap<>();\n+        queryParams.put(\"fruitId\", id);\n+        context.getRegistry().bind(\"parameters\", queryParams);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91dc3d2ac826fecc8c4f734a5bd1f6c6657043f6"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NTc4MA==", "bodyText": "I can rework it so that it gets bound to the registry via a producer method, which is a bit more 'real world'.\nI can do that when I follow up later with a fix for #1759.", "url": "https://github.com/apache/camel-quarkus/pull/1932#discussion_r507985780", "createdAt": "2020-10-19T18:48:55Z", "author": {"login": "jamesnetherton"}, "path": "integration-tests/jpa/src/main/java/org/apache/camel/quarkus/component/jpa/it/JpaResource.java", "diffHunk": "@@ -49,6 +56,51 @@\n         return consumerTemplate.receiveBodyNoWait(\"jpa:\" + Fruit.class.getName(), List.class);\n     }\n \n+    @Path(\"/get/{id}\")\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Fruit getFruit(@PathParam(\"id\") int id) {\n+        return producerTemplate.requestBody(\"jpa:\" + Fruit.class.getName() + \"?findEntity=true\", id, Fruit.class);\n+    }\n+\n+    @Path(\"/get/query/{id}\")\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Fruit> getFruitByQuery(@PathParam(\"id\") int id) {\n+        return producerTemplate.requestBody(\"jpa:\" + Fruit.class.getName() + \"?query=\"\n+                + \"select f from \" + Fruit.class.getName() + \" f where f.id = \" + id,\n+                null, List.class);\n+    }\n+\n+    @Path(\"/get/query/named/{id}\")\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Fruit> getFruitByNamedQuery(@PathParam(\"id\") int id) {\n+        Map<String, Object> queryParams = new HashMap<>();\n+        queryParams.put(\"fruitId\", id);\n+        context.getRegistry().bind(\"parameters\", queryParams);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MzQ3MQ=="}, "originalCommit": {"oid": "91dc3d2ac826fecc8c4f734a5bd1f6c6657043f6"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4NzExNQ==", "bodyText": "No, this OK for a test, esp. if we do it only once. I just wanted that ppl. see that this not good for areal app.", "url": "https://github.com/apache/camel-quarkus/pull/1932#discussion_r507987115", "createdAt": "2020-10-19T18:51:08Z", "author": {"login": "ppalaga"}, "path": "integration-tests/jpa/src/main/java/org/apache/camel/quarkus/component/jpa/it/JpaResource.java", "diffHunk": "@@ -49,6 +56,51 @@\n         return consumerTemplate.receiveBodyNoWait(\"jpa:\" + Fruit.class.getName(), List.class);\n     }\n \n+    @Path(\"/get/{id}\")\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Fruit getFruit(@PathParam(\"id\") int id) {\n+        return producerTemplate.requestBody(\"jpa:\" + Fruit.class.getName() + \"?findEntity=true\", id, Fruit.class);\n+    }\n+\n+    @Path(\"/get/query/{id}\")\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Fruit> getFruitByQuery(@PathParam(\"id\") int id) {\n+        return producerTemplate.requestBody(\"jpa:\" + Fruit.class.getName() + \"?query=\"\n+                + \"select f from \" + Fruit.class.getName() + \" f where f.id = \" + id,\n+                null, List.class);\n+    }\n+\n+    @Path(\"/get/query/named/{id}\")\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Fruit> getFruitByNamedQuery(@PathParam(\"id\") int id) {\n+        Map<String, Object> queryParams = new HashMap<>();\n+        queryParams.put(\"fruitId\", id);\n+        context.getRegistry().bind(\"parameters\", queryParams);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MzQ3MQ=="}, "originalCommit": {"oid": "91dc3d2ac826fecc8c4f734a5bd1f6c6657043f6"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4578, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}