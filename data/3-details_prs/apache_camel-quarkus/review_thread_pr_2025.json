{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NTMwMDE0", "number": 2025, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTowOTo1N1rOE8xEJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTo0MjowNlrOE8yaSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTUzODkzOnYy", "diffSide": "RIGHT", "path": "integration-tests/avro-rpc/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTowOTo1N1rOH5FWiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODoxNTozOFrOH5nkvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYxODU2OQ==", "bodyText": "This should either be active by default (and inactive in quickly) or we should at least document here under which circumstances should the classes be regenerated.", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r529618569", "createdAt": "2020-11-24T15:09:57Z", "author": {"login": "ppalaga"}, "path": "integration-tests/avro-rpc/pom.xml", "diffHunk": "@@ -0,0 +1,154 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.apache.camel.quarkus</groupId>\n+        <artifactId>camel-quarkus-integration-tests</artifactId>\n+        <version>1.5.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <artifactId>camel-quarkus-integration-test-avro-rpc</artifactId>\n+    <name>Camel Quarkus :: Integration Tests :: Avro RPC</name>\n+    <description>Integration tests for Camel Quarkus Avro RPC extension</description>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.apache.camel.quarkus</groupId>\n+                <artifactId>camel-quarkus-bom-test</artifactId>\n+                <version>${project.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-avro-rpc</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-resteasy</artifactId>\n+        </dependency>\n+        <!-- test dependencies -->\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-integration-test-support</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- The following dependencies guarantee that this module is built after them. You can update them by running `mvn process-resources -Pformat -N` from the source tree root directory -->\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-avro-rpc-deployment</artifactId>\n+            <version>${project.version}</version>\n+            <type>pom</type>\n+            <scope>test</scope>\n+            <exclusions>\n+                <exclusion>\n+                    <groupId>*</groupId>\n+                    <artifactId>*</artifactId>\n+                </exclusion>\n+            </exclusions>\n+        </dependency>\n+    </dependencies>\n+\n+    <profiles>\n+        <profile>\n+            <id>native</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <properties>\n+                <quarkus.package.type>native</quarkus.package.type>\n+            </properties>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+\n+        <!-- Profile for generation of protocol files into package `org.apache.camel.quarkus.component.avro.rpc.it.specific.generated` -->\n+        <profile>\n+            <id>avro</id>\n+            <activation>\n+                <property>\n+                    <name>avro</name>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bf56167c2506c3ac280d68dcacd2ef2e04cec32"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE3OTI2MQ==", "bodyText": "I've made it active by default (and inactive in quickly)", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r530179261", "createdAt": "2020-11-25T08:15:38Z", "author": {"login": "JiriOndrusek"}, "path": "integration-tests/avro-rpc/pom.xml", "diffHunk": "@@ -0,0 +1,154 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.apache.camel.quarkus</groupId>\n+        <artifactId>camel-quarkus-integration-tests</artifactId>\n+        <version>1.5.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <artifactId>camel-quarkus-integration-test-avro-rpc</artifactId>\n+    <name>Camel Quarkus :: Integration Tests :: Avro RPC</name>\n+    <description>Integration tests for Camel Quarkus Avro RPC extension</description>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.apache.camel.quarkus</groupId>\n+                <artifactId>camel-quarkus-bom-test</artifactId>\n+                <version>${project.version}</version>\n+                <type>pom</type>\n+                <scope>import</scope>\n+            </dependency>\n+        </dependencies>\n+    </dependencyManagement>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-avro-rpc</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-resteasy</artifactId>\n+        </dependency>\n+        <!-- test dependencies -->\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-integration-test-support</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+\n+        <!-- The following dependencies guarantee that this module is built after them. You can update them by running `mvn process-resources -Pformat -N` from the source tree root directory -->\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-avro-rpc-deployment</artifactId>\n+            <version>${project.version}</version>\n+            <type>pom</type>\n+            <scope>test</scope>\n+            <exclusions>\n+                <exclusion>\n+                    <groupId>*</groupId>\n+                    <artifactId>*</artifactId>\n+                </exclusion>\n+            </exclusions>\n+        </dependency>\n+    </dependencies>\n+\n+    <profiles>\n+        <profile>\n+            <id>native</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <properties>\n+                <quarkus.package.type>native</quarkus.package.type>\n+            </properties>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+\n+        <!-- Profile for generation of protocol files into package `org.apache.camel.quarkus.component.avro.rpc.it.specific.generated` -->\n+        <profile>\n+            <id>avro</id>\n+            <activation>\n+                <property>\n+                    <name>avro</name>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYxODU2OQ=="}, "originalCommit": {"oid": "7bf56167c2506c3ac280d68dcacd2ef2e04cec32"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTYzNTUzOnYy", "diffSide": "RIGHT", "path": "integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcResource.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNToyNzoyNVrOH5GTLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwOToxMTozOVrOH5ppgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYzNDA5NA==", "bodyText": "I'd vote for configuring the endpoint in the same way here and in AvroRpcRouteBuilder. I personally find the @ConfigProperty fields in AvroRpcRouteBuilder a bit better readable than Camel property expansion.", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r529634094", "createdAt": "2020-11-24T15:27:25Z", "author": {"login": "ppalaga"}, "path": "integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcResource.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.avro.rpc.it;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.TestPojo;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.TestReflection;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.impl.TestReflectionImpl;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Key;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.KeyValueProtocol;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Value;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.impl.KeyValueProtocolImpl;\n+\n+@Path(\"/avro-rpc\")\n+@ApplicationScoped\n+public class AvroRpcResource {\n+\n+    public static final String REFLECTIVE_HTTP_SERVER_PORT_PARAM = \"camel.avro-rpc.test.reflective.httpServerReflection.port\";\n+    public static final String REFLECTIVE_NETTY_SERVER_PORT_PARAM = \"camel.avro-rpc.test.reflective.nettyServerReflection.port\";\n+    public static final String SPECIFIC_HTTP_SERVER_PORT_PARAM = \"camel.avro-rpc.test.generated.httpServerReflection.port\";\n+    public static final String SPECIFIC_NETTY_SERVER_PORT_PARAM = \"camel.avro-rpc.test.generated.nettyServerReflection.port\";\n+    public static final String REFLECTIVE_HTTP_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.httpTransceiverReflection.port\";\n+    public static final String REFLECTIVE_NETTY_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.nettyTransceiverReflection.port\";\n+    public static final String SPECIFIC_HTTP_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.specific.httpTransceiverReflection.port\";\n+    public static final String SPECIFIC_NETTY_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.specific.nettyTransceiverReflection.port\";\n+\n+    private TestReflection httpTestReflection = new TestReflectionImpl(),\n+            nettyTestReflection = new TestReflectionImpl();\n+    private KeyValueProtocol httpKeyValue = new KeyValueProtocolImpl(),\n+            nettyKeyValue = new KeyValueProtocolImpl();\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Path(\"/reflectionProducerSet\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    public void reflectionProducerSet(@QueryParam(\"protocol\") ProtocolType protocol, String name) throws Exception {\n+        Object[] request = { name };\n+        producerTemplate.requestBody(String.format(\n+                \"avro:%s:localhost:{{%s}}/setName?protocolClassName=%s&singleParameter=true\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bf56167c2506c3ac280d68dcacd2ef2e04cec32"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE2NTQzMQ==", "bodyText": "@ppalaga I'm not sure, what do you mean.\nHere is endpoint form AvroRpcResource.java\n\nString.format(\n\"avro:%s:localhost:{{%s}}/setName?protocolClassName=%s&singleParameter=true\",\nprotocol,\nprotocol == ProtocolType.http ? REFLECTIVE_HTTP_SERVER_PORT_PARAM : REFLECTIVE_NETTY_SERVER_PORT_PARAM,\nTestReflection.class.getCanonicalName())\n\nHere is a route definition from 'AvroRpcRouteBuilder'\n\nfrom(String.format(\"avro:http:localhost:%d/setTestPojo?protocolClassName=%s&singleParameter=true\", httpPort,\nTestReflection.class.getCanonicalName()))\n....\n\nI don't see much difference here. May I ask you for more information?", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r530165431", "createdAt": "2020-11-25T07:48:46Z", "author": {"login": "JiriOndrusek"}, "path": "integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcResource.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.avro.rpc.it;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.TestPojo;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.TestReflection;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.impl.TestReflectionImpl;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Key;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.KeyValueProtocol;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Value;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.impl.KeyValueProtocolImpl;\n+\n+@Path(\"/avro-rpc\")\n+@ApplicationScoped\n+public class AvroRpcResource {\n+\n+    public static final String REFLECTIVE_HTTP_SERVER_PORT_PARAM = \"camel.avro-rpc.test.reflective.httpServerReflection.port\";\n+    public static final String REFLECTIVE_NETTY_SERVER_PORT_PARAM = \"camel.avro-rpc.test.reflective.nettyServerReflection.port\";\n+    public static final String SPECIFIC_HTTP_SERVER_PORT_PARAM = \"camel.avro-rpc.test.generated.httpServerReflection.port\";\n+    public static final String SPECIFIC_NETTY_SERVER_PORT_PARAM = \"camel.avro-rpc.test.generated.nettyServerReflection.port\";\n+    public static final String REFLECTIVE_HTTP_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.httpTransceiverReflection.port\";\n+    public static final String REFLECTIVE_NETTY_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.nettyTransceiverReflection.port\";\n+    public static final String SPECIFIC_HTTP_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.specific.httpTransceiverReflection.port\";\n+    public static final String SPECIFIC_NETTY_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.specific.nettyTransceiverReflection.port\";\n+\n+    private TestReflection httpTestReflection = new TestReflectionImpl(),\n+            nettyTestReflection = new TestReflectionImpl();\n+    private KeyValueProtocol httpKeyValue = new KeyValueProtocolImpl(),\n+            nettyKeyValue = new KeyValueProtocolImpl();\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Path(\"/reflectionProducerSet\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    public void reflectionProducerSet(@QueryParam(\"protocol\") ProtocolType protocol, String name) throws Exception {\n+        Object[] request = { name };\n+        producerTemplate.requestBody(String.format(\n+                \"avro:%s:localhost:{{%s}}/setName?protocolClassName=%s&singleParameter=true\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYzNDA5NA=="}, "originalCommit": {"oid": "7bf56167c2506c3ac280d68dcacd2ef2e04cec32"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE4MDk3Ng==", "bodyText": "My point is that there's perhaps much more future readers of this code who know MicroProfile config that those who know Camel property expansion {{my.property}}. So you could do here what you do in AvroRpcRouteBuilder:\n\nAdd at the ConfigProperty fields\n\n@ConfigProperty(name = AvroRpcResource.REFLECTIVE_HTTP_TRANSCEIVER_PORT_PARAM)\n    Integer httpPort;\n\n@ConfigProperty(name = AvroRpcResource.REFLECTIVE_NETTY_TRANSCEIVER_PORT_PARAM)\n    Integer nettyPort;\n\n\nChange the handler\n\nproducerTemplate.requestBody(String.format(\n                \"avro:%s:localhost:%d/setName?protocolClassName=%s&singleParameter=true\",\n                protocol,\n                protocol == ProtocolType.http ? httpPort: nettyPort,\n                TestReflection.class.getCanonicalName()), request);\n\nWDYT?", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r530180976", "createdAt": "2020-11-25T08:18:56Z", "author": {"login": "ppalaga"}, "path": "integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcResource.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.avro.rpc.it;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.TestPojo;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.TestReflection;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.impl.TestReflectionImpl;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Key;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.KeyValueProtocol;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Value;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.impl.KeyValueProtocolImpl;\n+\n+@Path(\"/avro-rpc\")\n+@ApplicationScoped\n+public class AvroRpcResource {\n+\n+    public static final String REFLECTIVE_HTTP_SERVER_PORT_PARAM = \"camel.avro-rpc.test.reflective.httpServerReflection.port\";\n+    public static final String REFLECTIVE_NETTY_SERVER_PORT_PARAM = \"camel.avro-rpc.test.reflective.nettyServerReflection.port\";\n+    public static final String SPECIFIC_HTTP_SERVER_PORT_PARAM = \"camel.avro-rpc.test.generated.httpServerReflection.port\";\n+    public static final String SPECIFIC_NETTY_SERVER_PORT_PARAM = \"camel.avro-rpc.test.generated.nettyServerReflection.port\";\n+    public static final String REFLECTIVE_HTTP_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.httpTransceiverReflection.port\";\n+    public static final String REFLECTIVE_NETTY_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.nettyTransceiverReflection.port\";\n+    public static final String SPECIFIC_HTTP_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.specific.httpTransceiverReflection.port\";\n+    public static final String SPECIFIC_NETTY_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.specific.nettyTransceiverReflection.port\";\n+\n+    private TestReflection httpTestReflection = new TestReflectionImpl(),\n+            nettyTestReflection = new TestReflectionImpl();\n+    private KeyValueProtocol httpKeyValue = new KeyValueProtocolImpl(),\n+            nettyKeyValue = new KeyValueProtocolImpl();\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Path(\"/reflectionProducerSet\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    public void reflectionProducerSet(@QueryParam(\"protocol\") ProtocolType protocol, String name) throws Exception {\n+        Object[] request = { name };\n+        producerTemplate.requestBody(String.format(\n+                \"avro:%s:localhost:{{%s}}/setName?protocolClassName=%s&singleParameter=true\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYzNDA5NA=="}, "originalCommit": {"oid": "7bf56167c2506c3ac280d68dcacd2ef2e04cec32"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIwMjMyMw==", "bodyText": "ok, now I understand and agree, thanks", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r530202323", "createdAt": "2020-11-25T08:54:32Z", "author": {"login": "JiriOndrusek"}, "path": "integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcResource.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.avro.rpc.it;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.TestPojo;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.TestReflection;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.impl.TestReflectionImpl;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Key;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.KeyValueProtocol;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Value;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.impl.KeyValueProtocolImpl;\n+\n+@Path(\"/avro-rpc\")\n+@ApplicationScoped\n+public class AvroRpcResource {\n+\n+    public static final String REFLECTIVE_HTTP_SERVER_PORT_PARAM = \"camel.avro-rpc.test.reflective.httpServerReflection.port\";\n+    public static final String REFLECTIVE_NETTY_SERVER_PORT_PARAM = \"camel.avro-rpc.test.reflective.nettyServerReflection.port\";\n+    public static final String SPECIFIC_HTTP_SERVER_PORT_PARAM = \"camel.avro-rpc.test.generated.httpServerReflection.port\";\n+    public static final String SPECIFIC_NETTY_SERVER_PORT_PARAM = \"camel.avro-rpc.test.generated.nettyServerReflection.port\";\n+    public static final String REFLECTIVE_HTTP_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.httpTransceiverReflection.port\";\n+    public static final String REFLECTIVE_NETTY_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.nettyTransceiverReflection.port\";\n+    public static final String SPECIFIC_HTTP_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.specific.httpTransceiverReflection.port\";\n+    public static final String SPECIFIC_NETTY_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.specific.nettyTransceiverReflection.port\";\n+\n+    private TestReflection httpTestReflection = new TestReflectionImpl(),\n+            nettyTestReflection = new TestReflectionImpl();\n+    private KeyValueProtocol httpKeyValue = new KeyValueProtocolImpl(),\n+            nettyKeyValue = new KeyValueProtocolImpl();\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Path(\"/reflectionProducerSet\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    public void reflectionProducerSet(@QueryParam(\"protocol\") ProtocolType protocol, String name) throws Exception {\n+        Object[] request = { name };\n+        producerTemplate.requestBody(String.format(\n+                \"avro:%s:localhost:{{%s}}/setName?protocolClassName=%s&singleParameter=true\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYzNDA5NA=="}, "originalCommit": {"oid": "7bf56167c2506c3ac280d68dcacd2ef2e04cec32"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDIxMzI0OQ==", "bodyText": "done", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r530213249", "createdAt": "2020-11-25T09:11:39Z", "author": {"login": "JiriOndrusek"}, "path": "integration-tests/avro-rpc/src/main/java/org/apache/camel/quarkus/component/avro/rpc/it/AvroRpcResource.java", "diffHunk": "@@ -0,0 +1,139 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.avro.rpc.it;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.QueryParam;\n+import javax.ws.rs.core.MediaType;\n+\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.TestPojo;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.TestReflection;\n+import org.apache.camel.quarkus.component.avro.rpc.it.reflection.impl.TestReflectionImpl;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Key;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.KeyValueProtocol;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.generated.Value;\n+import org.apache.camel.quarkus.component.avro.rpc.it.specific.impl.KeyValueProtocolImpl;\n+\n+@Path(\"/avro-rpc\")\n+@ApplicationScoped\n+public class AvroRpcResource {\n+\n+    public static final String REFLECTIVE_HTTP_SERVER_PORT_PARAM = \"camel.avro-rpc.test.reflective.httpServerReflection.port\";\n+    public static final String REFLECTIVE_NETTY_SERVER_PORT_PARAM = \"camel.avro-rpc.test.reflective.nettyServerReflection.port\";\n+    public static final String SPECIFIC_HTTP_SERVER_PORT_PARAM = \"camel.avro-rpc.test.generated.httpServerReflection.port\";\n+    public static final String SPECIFIC_NETTY_SERVER_PORT_PARAM = \"camel.avro-rpc.test.generated.nettyServerReflection.port\";\n+    public static final String REFLECTIVE_HTTP_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.httpTransceiverReflection.port\";\n+    public static final String REFLECTIVE_NETTY_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.nettyTransceiverReflection.port\";\n+    public static final String SPECIFIC_HTTP_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.specific.httpTransceiverReflection.port\";\n+    public static final String SPECIFIC_NETTY_TRANSCEIVER_PORT_PARAM = \"camel.avro-rpc.test.specific.nettyTransceiverReflection.port\";\n+\n+    private TestReflection httpTestReflection = new TestReflectionImpl(),\n+            nettyTestReflection = new TestReflectionImpl();\n+    private KeyValueProtocol httpKeyValue = new KeyValueProtocolImpl(),\n+            nettyKeyValue = new KeyValueProtocolImpl();\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Path(\"/reflectionProducerSet\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    public void reflectionProducerSet(@QueryParam(\"protocol\") ProtocolType protocol, String name) throws Exception {\n+        Object[] request = { name };\n+        producerTemplate.requestBody(String.format(\n+                \"avro:%s:localhost:{{%s}}/setName?protocolClassName=%s&singleParameter=true\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYzNDA5NA=="}, "originalCommit": {"oid": "7bf56167c2506c3ac280d68dcacd2ef2e04cec32"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMTc1OTQ3OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNTo0MjowNlrOH5Hkyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwODoxNjoxOFrOH5nmHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1NDk4Ng==", "bodyText": "If these ipc deps are always going to have the same version, lets have a single property for them.", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r529654986", "createdAt": "2020-11-24T15:42:06Z", "author": {"login": "jamesnetherton"}, "path": "pom.xml", "diffHunk": "@@ -41,6 +41,8 @@\n         <ahc.version>2.12.1</ahc.version>\n         <animal-sniffer.version>1.18</animal-sniffer.version>\n         <antlr3.version>3.5.2</antlr3.version><!-- Spark, Stringtemplate and probably others -->\n+\t    <avro-ipc-jetty-version>1.10.0</avro-ipc-jetty-version>\n+        <avro-ipc-netty-version>1.10.0</avro-ipc-netty-version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bf56167c2506c3ac280d68dcacd2ef2e04cec32"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE3OTYxMg==", "bodyText": "I changed it into single property", "url": "https://github.com/apache/camel-quarkus/pull/2025#discussion_r530179612", "createdAt": "2020-11-25T08:16:18Z", "author": {"login": "JiriOndrusek"}, "path": "pom.xml", "diffHunk": "@@ -41,6 +41,8 @@\n         <ahc.version>2.12.1</ahc.version>\n         <animal-sniffer.version>1.18</animal-sniffer.version>\n         <antlr3.version>3.5.2</antlr3.version><!-- Spark, Stringtemplate and probably others -->\n+\t    <avro-ipc-jetty-version>1.10.0</avro-ipc-jetty-version>\n+        <avro-ipc-netty-version>1.10.0</avro-ipc-netty-version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTY1NDk4Ng=="}, "originalCommit": {"oid": "7bf56167c2506c3ac280d68dcacd2ef2e04cec32"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4501, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}