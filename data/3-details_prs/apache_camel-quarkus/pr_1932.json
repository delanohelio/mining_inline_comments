{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MDcwMjIx", "number": 1932, "title": "Increase test coverage for Spring dependent extensions", "bodyText": "Prelude to fixing #1759.", "createdAt": "2020-10-19T15:24:17Z", "url": "https://github.com/apache/camel-quarkus/pull/1932", "merged": true, "mergeCommit": {"oid": "e093370ebaee71fbcf894b881da9598ed11e276e"}, "closed": true, "closedAt": "2020-10-20T06:12:12Z", "author": {"login": "jamesnetherton"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUF0nbgH2gAyNTA2MDcwMjIxOjkxZGMzZDJhYzgyNmZlY2M4YzRmNzM0YTViZDFmNmM2NjU3MDQzZjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUIwZAgFqTUxMjA2MTY0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "91dc3d2ac826fecc8c4f734a5bd1f6c6657043f6", "author": {"user": {"login": "jamesnetherton", "name": "James Netherton"}}, "url": "https://github.com/apache/camel-quarkus/commit/91dc3d2ac826fecc8c4f734a5bd1f6c6657043f6", "committedDate": "2020-10-19T15:22:43Z", "message": "Increase test coverage for Spring dependent extensions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExODg4MjQx", "url": "https://github.com/apache/camel-quarkus/pull/1932#pullrequestreview-511888241", "createdAt": "2020-10-19T15:28:13Z", "commit": {"oid": "91dc3d2ac826fecc8c4f734a5bd1f6c6657043f6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMDU5NjIy", "url": "https://github.com/apache/camel-quarkus/pull/1932#pullrequestreview-512059622", "createdAt": "2020-10-19T18:45:02Z", "commit": {"oid": "91dc3d2ac826fecc8c4f734a5bd1f6c6657043f6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0NTowMlrOHkc2bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxODo0NTowMlrOHkc2bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzk4MzQ3MQ==", "bodyText": "Shouldn't we add a comment here that this is not a good pattern to copy in a real application?", "url": "https://github.com/apache/camel-quarkus/pull/1932#discussion_r507983471", "createdAt": "2020-10-19T18:45:02Z", "author": {"login": "ppalaga"}, "path": "integration-tests/jpa/src/main/java/org/apache/camel/quarkus/component/jpa/it/JpaResource.java", "diffHunk": "@@ -49,6 +56,51 @@\n         return consumerTemplate.receiveBodyNoWait(\"jpa:\" + Fruit.class.getName(), List.class);\n     }\n \n+    @Path(\"/get/{id}\")\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Fruit getFruit(@PathParam(\"id\") int id) {\n+        return producerTemplate.requestBody(\"jpa:\" + Fruit.class.getName() + \"?findEntity=true\", id, Fruit.class);\n+    }\n+\n+    @Path(\"/get/query/{id}\")\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Fruit> getFruitByQuery(@PathParam(\"id\") int id) {\n+        return producerTemplate.requestBody(\"jpa:\" + Fruit.class.getName() + \"?query=\"\n+                + \"select f from \" + Fruit.class.getName() + \" f where f.id = \" + id,\n+                null, List.class);\n+    }\n+\n+    @Path(\"/get/query/named/{id}\")\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @SuppressWarnings(\"unchecked\")\n+    public List<Fruit> getFruitByNamedQuery(@PathParam(\"id\") int id) {\n+        Map<String, Object> queryParams = new HashMap<>();\n+        queryParams.put(\"fruitId\", id);\n+        context.getRegistry().bind(\"parameters\", queryParams);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91dc3d2ac826fecc8c4f734a5bd1f6c6657043f6"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMDYxNjQ5", "url": "https://github.com/apache/camel-quarkus/pull/1932#pullrequestreview-512061649", "createdAt": "2020-10-19T18:47:49Z", "commit": {"oid": "91dc3d2ac826fecc8c4f734a5bd1f6c6657043f6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2829, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}