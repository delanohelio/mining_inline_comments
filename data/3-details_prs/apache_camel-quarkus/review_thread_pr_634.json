{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MzYyMDEy", "number": 634, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwOTowNjo1NlrODY_W6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjo1ODo1NlrODZ0ljA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTMwNDc0OnYy", "diffSide": "RIGHT", "path": ".github/workflows/pr-build.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwOTowNjo1NlrOFfKJJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwOTo0NToyMVrOFfKP1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNjM1Nw==", "bodyText": "fhir does not pass at all on GH actions?", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r368216357", "createdAt": "2020-01-18T09:06:56Z", "author": {"login": "ppalaga"}, "path": ".github/workflows/pr-build.yaml", "diffHunk": "@@ -0,0 +1,365 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+name: Build PR\n+\n+on:\n+  pull_request:\n+    branches:\n+      - master\n+jobs:\n+  build:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Build Project\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n+            -Pno-apache-snapshots \\\n+            clean install\n+      - name: Save Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+  build-alternative-jvm:\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        java: [ '11' , '12' ]\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up JDK ${{ matrix.java }}\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: ${{ matrix.java }}\n+    - name: Build on ${{ matrix.java }}\n+      run: |\n+        ./mvnw -V -B \\\n+          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n+          -Pno-apache-snapshots \\\n+          clean verify\n+  core:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-core \\\n+            -pl :camel-quarkus-integration-test-core-impl \\\n+            -pl :camel-quarkus-integration-test-core-main \\\n+            -pl :camel-quarkus-integration-test-core-main-collector \\\n+            -pl :camel-quarkus-integration-test-core-main-xml\n+  foundation:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-bean \\\n+            -pl :camel-quarkus-integration-test-seda \\\n+            -pl :camel-quarkus-integration-test-file \\\n+            -pl :camel-quarkus-integration-test-scheduler \\\n+            -pl :camel-quarkus-integration-test-jsonpath \\\n+            -pl :camel-quarkus-integration-test-exec \\\n+            -pl :camel-quarkus-integration-test-controlbus \\\n+            -pl :camel-quarkus-integration-test-hystrix\n+  platform:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-platform-http \\\n+            -pl :camel-quarkus-integration-test-platform-http-engine \\\n+            -pl :camel-quarkus-integration-test-microprofile \\\n+            -pl :camel-quarkus-integration-test-opentracing\n+  messaging:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-sjms \\\n+            -pl :camel-quarkus-integration-test-kafka \\\n+            -pl :camel-quarkus-integration-test-paho\n+  dataformats:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-base64 \\\n+            -pl :camel-quarkus-integration-test-snakeyaml \\\n+            -pl :camel-quarkus-integration-test-tagsoup \\\n+            -pl :camel-quarkus-integration-test-xslt \\\n+            -pl :camel-quarkus-integration-test-csv \\\n+            -pl :camel-quarkus-integration-test-jackson \\\n+            -pl :camel-quarkus-integration-test-dataformat\n+  networking:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-http \\\n+            -pl :camel-quarkus-integration-test-netty \\\n+            -pl :camel-quarkus-integration-test-servlet\n+  sql:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-jdbc \\\n+            -pl :camel-quarkus-integration-test-mongodb \\\n+            -pl :camel-quarkus-integration-test-sql\n+  cloud:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-aws \\\n+            -pl :camel-quarkus-integration-test-consul\n+  misc:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-bean-validator \\\n+            -pl :camel-quarkus-integration-test-dozer \\\n+            -pl :camel-quarkus-integration-test-ftp \\\n+            -pl :camel-quarkus-integration-test-infinispan \\\n+            -pl :camel-quarkus-integration-test-mail \\\n+            -pl :camel-quarkus-integration-test-pdf \\\n+            -pl :camel-quarkus-integration-test-salesforce \\\n+            -pl :camel-quarkus-integration-test-slack \\\n+            -pl :camel-quarkus-integration-test-tarfile \\\n+            -pl :camel-quarkus-integration-test-twitter \\\n+            -pl :camel-quarkus-integration-test-validator \\\n+            -pl :camel-quarkus-integration-test-zipfile\n+  # memoryhogs:\n+  #   runs-on: ubuntu-latest\n+  #   needs: build\n+  #   steps:\n+  #     - name: Checkout\n+  #       uses: actions/checkout@v2\n+  #     - name: Set Up Java\n+  #       uses: actions/setup-java@v1\n+  #       with:\n+  #         java-version: 1.8\n+  #     - name: Restore Cache\n+  #       uses: actions/cache@v1\n+  #       with:\n+  #         path: ~/.m2/repository\n+  #         key: maven-${{ github.sha }}\n+  #         restore-keys: |\n+  #           maven-${{ github.sha }}\n+  #     # run the :camel-quarkus-integration-test-fhir as standalone process\n+  #     # as it building the native image including camel-fhir requires lot \n+  #     # of memory this we nee to limit it to avoid the process fail for OOM.\n+  #     - name: Integration Tests\n+  #       run: |\n+  #         ./mvnw -V -B \\\n+  #           -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+  #           -Dnative \\\n+  #           -Ddocker \\\n+  #           -DskipTests \\\n+  #           -Dnative-image.xmx=5g \\\n+  #           -pl :camel-quarkus-integration-test-fhir", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018e9de0f580988a9e68ed0f36e44a9e19bf9776"}, "originalPosition": 364}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxODA3MQ==", "bodyText": "The native image compilation fails for out of memory, I have not yet found any combination to make it working in a reasonable amount of time (with the default settings it fails after ~ 30 minutes)", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r368218071", "createdAt": "2020-01-18T09:45:21Z", "author": {"login": "lburgazzoli"}, "path": ".github/workflows/pr-build.yaml", "diffHunk": "@@ -0,0 +1,365 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+name: Build PR\n+\n+on:\n+  pull_request:\n+    branches:\n+      - master\n+jobs:\n+  build:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Build Project\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n+            -Pno-apache-snapshots \\\n+            clean install\n+      - name: Save Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+  build-alternative-jvm:\n+    runs-on: ubuntu-latest\n+    strategy:\n+      matrix:\n+        java: [ '11' , '12' ]\n+    steps:\n+    - uses: actions/checkout@v2\n+    - name: Set up JDK ${{ matrix.java }}\n+      uses: actions/setup-java@v1\n+      with:\n+        java-version: ${{ matrix.java }}\n+    - name: Build on ${{ matrix.java }}\n+      run: |\n+        ./mvnw -V -B \\\n+          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n+          -Pno-apache-snapshots \\\n+          clean verify\n+  core:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-core \\\n+            -pl :camel-quarkus-integration-test-core-impl \\\n+            -pl :camel-quarkus-integration-test-core-main \\\n+            -pl :camel-quarkus-integration-test-core-main-collector \\\n+            -pl :camel-quarkus-integration-test-core-main-xml\n+  foundation:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-bean \\\n+            -pl :camel-quarkus-integration-test-seda \\\n+            -pl :camel-quarkus-integration-test-file \\\n+            -pl :camel-quarkus-integration-test-scheduler \\\n+            -pl :camel-quarkus-integration-test-jsonpath \\\n+            -pl :camel-quarkus-integration-test-exec \\\n+            -pl :camel-quarkus-integration-test-controlbus \\\n+            -pl :camel-quarkus-integration-test-hystrix\n+  platform:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-platform-http \\\n+            -pl :camel-quarkus-integration-test-platform-http-engine \\\n+            -pl :camel-quarkus-integration-test-microprofile \\\n+            -pl :camel-quarkus-integration-test-opentracing\n+  messaging:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-sjms \\\n+            -pl :camel-quarkus-integration-test-kafka \\\n+            -pl :camel-quarkus-integration-test-paho\n+  dataformats:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-base64 \\\n+            -pl :camel-quarkus-integration-test-snakeyaml \\\n+            -pl :camel-quarkus-integration-test-tagsoup \\\n+            -pl :camel-quarkus-integration-test-xslt \\\n+            -pl :camel-quarkus-integration-test-csv \\\n+            -pl :camel-quarkus-integration-test-jackson \\\n+            -pl :camel-quarkus-integration-test-dataformat\n+  networking:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-http \\\n+            -pl :camel-quarkus-integration-test-netty \\\n+            -pl :camel-quarkus-integration-test-servlet\n+  sql:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-jdbc \\\n+            -pl :camel-quarkus-integration-test-mongodb \\\n+            -pl :camel-quarkus-integration-test-sql\n+  cloud:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-aws \\\n+            -pl :camel-quarkus-integration-test-consul\n+  misc:\n+    runs-on: ubuntu-latest\n+    needs: build\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Restore Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}\n+          restore-keys: |\n+            maven-${{ github.sha }}\n+      - name: Integration Tests\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+            -Dnative \\\n+            -Ddocker \\\n+            -DskipTests \\\n+            -Pno-apache-snapshots \\\n+            -pl :camel-quarkus-integration-test-bean-validator \\\n+            -pl :camel-quarkus-integration-test-dozer \\\n+            -pl :camel-quarkus-integration-test-ftp \\\n+            -pl :camel-quarkus-integration-test-infinispan \\\n+            -pl :camel-quarkus-integration-test-mail \\\n+            -pl :camel-quarkus-integration-test-pdf \\\n+            -pl :camel-quarkus-integration-test-salesforce \\\n+            -pl :camel-quarkus-integration-test-slack \\\n+            -pl :camel-quarkus-integration-test-tarfile \\\n+            -pl :camel-quarkus-integration-test-twitter \\\n+            -pl :camel-quarkus-integration-test-validator \\\n+            -pl :camel-quarkus-integration-test-zipfile\n+  # memoryhogs:\n+  #   runs-on: ubuntu-latest\n+  #   needs: build\n+  #   steps:\n+  #     - name: Checkout\n+  #       uses: actions/checkout@v2\n+  #     - name: Set Up Java\n+  #       uses: actions/setup-java@v1\n+  #       with:\n+  #         java-version: 1.8\n+  #     - name: Restore Cache\n+  #       uses: actions/cache@v1\n+  #       with:\n+  #         path: ~/.m2/repository\n+  #         key: maven-${{ github.sha }}\n+  #         restore-keys: |\n+  #           maven-${{ github.sha }}\n+  #     # run the :camel-quarkus-integration-test-fhir as standalone process\n+  #     # as it building the native image including camel-fhir requires lot \n+  #     # of memory this we nee to limit it to avoid the process fail for OOM.\n+  #     - name: Integration Tests\n+  #       run: |\n+  #         ./mvnw -V -B \\\n+  #           -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean verify \\\n+  #           -Dnative \\\n+  #           -Ddocker \\\n+  #           -DskipTests \\\n+  #           -Dnative-image.xmx=5g \\\n+  #           -pl :camel-quarkus-integration-test-fhir", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNjM1Nw=="}, "originalCommit": {"oid": "018e9de0f580988a9e68ed0f36e44a9e19bf9776"}, "originalPosition": 364}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTMwNjg2OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwOToxMjo1OFrOFfKKKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxMToyNTo1N1rOFfKfIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNjYxOQ==", "bodyText": "Remote snapshots are evil because they make builds non-reproducible. I vote for having this the other way round: off by default, active only in a non-default profile.", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r368216619", "createdAt": "2020-01-18T09:12:58Z", "author": {"login": "ppalaga"}, "path": "pom.xml", "diffHunk": "@@ -602,6 +602,38 @@\n                 <native-image.container-runtime>docker</native-image.container-runtime>\n             </properties>\n         </profile>\n+\n+        <profile>\n+            <id>no-apache-snapshots</id>\n+            <activation>\n+                <activeByDefault>false</activeByDefault>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "018e9de0f580988a9e68ed0f36e44a9e19bf9776"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxODI3OA==", "bodyText": "The apache snapshots have been enabled by default since long time ago and I have no problem to change the default behavior but I didn't want to change it while doing some experimentation because I do not remember if there is a reason or a job that need this set-up.", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r368218278", "createdAt": "2020-01-18T09:50:24Z", "author": {"login": "lburgazzoli"}, "path": "pom.xml", "diffHunk": "@@ -602,6 +602,38 @@\n                 <native-image.container-runtime>docker</native-image.container-runtime>\n             </properties>\n         </profile>\n+\n+        <profile>\n+            <id>no-apache-snapshots</id>\n+            <activation>\n+                <activeByDefault>false</activeByDefault>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNjYxOQ=="}, "originalCommit": {"oid": "018e9de0f580988a9e68ed0f36e44a9e19bf9776"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIyMTk4NQ==", "bodyText": "I've now moved the snapshot repo to a dedicate profile", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r368221985", "createdAt": "2020-01-18T11:25:57Z", "author": {"login": "lburgazzoli"}, "path": "pom.xml", "diffHunk": "@@ -602,6 +602,38 @@\n                 <native-image.container-runtime>docker</native-image.container-runtime>\n             </properties>\n         </profile>\n+\n+        <profile>\n+            <id>no-apache-snapshots</id>\n+            <activation>\n+                <activeByDefault>false</activeByDefault>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODIxNjYxOQ=="}, "originalCommit": {"oid": "018e9de0f580988a9e68ed0f36e44a9e19bf9776"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzYwMjg5OnYy", "diffSide": "RIGHT", "path": ".github/workflows/pr-build.yaml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDoyNzoyMFrOFgXNow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjoyNzowMlrOFgaXcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3OTA3NQ==", "bodyText": "This would make the cache single-use only, there's an example on how to do it by hashing the POM files.", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r369479075", "createdAt": "2020-01-22T10:27:20Z", "author": {"login": "zregvart"}, "path": ".github/workflows/pr-build.yaml", "diffHunk": "@@ -0,0 +1,381 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+name: Build PR\n+\n+on:\n+  pull_request:\n+    branches:\n+      - master\n+\n+env:\n+  LANG: en_US\n+\n+jobs:\n+  build:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Build Project\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n+            clean install\n+      - name: Save Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87dc2c17f5558e4471a226a638a26fc9b7bb6224"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ4OTY4MA==", "bodyText": "if we hash the poms and we change the sources then we end up using wrong artifacts, isn't it ?\nthe goal here is to save and reuse the result of the build in jvm mode to test the native images in parallel so we need to use the exact result of the jvm job (as jobs do not share the workspace)", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r369489680", "createdAt": "2020-01-22T10:49:06Z", "author": {"login": "lburgazzoli"}, "path": ".github/workflows/pr-build.yaml", "diffHunk": "@@ -0,0 +1,381 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+name: Build PR\n+\n+on:\n+  pull_request:\n+    branches:\n+      - master\n+\n+env:\n+  LANG: en_US\n+\n+jobs:\n+  build:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Build Project\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n+            clean install\n+      - name: Save Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3OTA3NQ=="}, "originalCommit": {"oid": "87dc2c17f5558e4471a226a638a26fc9b7bb6224"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUyMjAwNQ==", "bodyText": "I thought this was about caching the local Maven repository, i.e. not having them downloaded on each build. I think you'll find caching produced artefacts between builds an interesting problem to solve. Maven wasn't envisioned with that in mind, that is without using a repository to store them.", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r369522005", "createdAt": "2020-01-22T12:04:41Z", "author": {"login": "zregvart"}, "path": ".github/workflows/pr-build.yaml", "diffHunk": "@@ -0,0 +1,381 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+name: Build PR\n+\n+on:\n+  pull_request:\n+    branches:\n+      - master\n+\n+env:\n+  LANG: en_US\n+\n+jobs:\n+  build:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Build Project\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n+            clean install\n+      - name: Save Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3OTA3NQ=="}, "originalCommit": {"oid": "87dc2c17f5558e4471a226a638a26fc9b7bb6224"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUzMDczNw==", "bodyText": "GitHub actions provide a few ways to \"solve\" the problem of sharing project outcomes:\n\ncaching\ndeploy artefacts\n\nNone of them is optimal but the caching one is the easier to implement as today and as further step, we could cache only what the project produces instead of the whole local maven repo as the cache has also some limitations in term of space.", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r369530737", "createdAt": "2020-01-22T12:27:02Z", "author": {"login": "lburgazzoli"}, "path": ".github/workflows/pr-build.yaml", "diffHunk": "@@ -0,0 +1,381 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+name: Build PR\n+\n+on:\n+  pull_request:\n+    branches:\n+      - master\n+\n+env:\n+  LANG: en_US\n+\n+jobs:\n+  build:\n+    runs-on: ubuntu-latest\n+    steps:\n+      - name: Checkout\n+        uses: actions/checkout@v2\n+      - name: Set Up Java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 1.8\n+      - name: Build Project\n+        run: |\n+          ./mvnw -V -B \\\n+            -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n+            clean install\n+      - name: Save Cache\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.m2/repository\n+          key: maven-${{ github.sha }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ3OTA3NQ=="}, "originalCommit": {"oid": "87dc2c17f5558e4471a226a638a26fc9b7bb6224"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDAwMjc3OnYy", "diffSide": "RIGHT", "path": ".github/workflows/pr-build.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjo1MTowMlrOFga-Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMzoxMzo0NFrOFgblxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0MDY4Mg==", "bodyText": "Do you happen to know what problem is this solving? Should it not rather be en_US.UTF-8?", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r369540682", "createdAt": "2020-01-22T12:51:02Z", "author": {"login": "ppalaga"}, "path": ".github/workflows/pr-build.yaml", "diffHunk": "@@ -0,0 +1,381 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+name: Build PR\n+\n+on:\n+  pull_request:\n+    branches:\n+      - master\n+\n+env:\n+  LANG: en_US", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87dc2c17f5558e4471a226a638a26fc9b7bb6224"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU1MDc4OQ==", "bodyText": "this has been introduced as workaround for a quarkus issue fixed by quarkusio/quarkus#6681 on quarkus main ans since it is a workaround that should be removed I would leave it as the quarkus guys defined it", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r369550789", "createdAt": "2020-01-22T13:13:44Z", "author": {"login": "lburgazzoli"}, "path": ".github/workflows/pr-build.yaml", "diffHunk": "@@ -0,0 +1,381 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements.  See the NOTICE file distributed with\n+# this work for additional information regarding copyright ownership.\n+# The ASF licenses this file to You under the Apache License, Version 2.0\n+# (the \"License\"); you may not use this file except in compliance with\n+# the License.  You may obtain a copy of the License at\n+#\n+#      http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+\n+name: Build PR\n+\n+on:\n+  pull_request:\n+    branches:\n+      - master\n+\n+env:\n+  LANG: en_US", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0MDY4Mg=="}, "originalCommit": {"oid": "87dc2c17f5558e4471a226a638a26fc9b7bb6224"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDAyNTcyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/pr-validate.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjo1ODo1NlrOFgbLvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMzoxMjozN1rOFgbjog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NDEyNQ==", "bodyText": "Not sure what is the exact idea behind pr-validate.yml but if we just want to check the code style, licenses, etc. we could perhaps use some earlier phase than package, e.g. process-sources?", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r369544125", "createdAt": "2020-01-22T12:58:56Z", "author": {"login": "ppalaga"}, "path": ".github/workflows/pr-validate.yml", "diffHunk": "@@ -31,4 +35,10 @@ jobs:\n       with:\n         java-version: 1.8\n     - name: mvn package\n-      run: export LANG=en_US && ./mvnw -fae -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean package -Pcheck-format -DskipTests\n+      run: |\n+        ./mvnw -fae -B \\\n+          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n+          -DskipTests \\\n+          -Pcheck-format \\\n+          clean package", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "87dc2c17f5558e4471a226a638a26fc9b7bb6224"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU1MDI0Mg==", "bodyText": "no problem to change it but since this is something outside the scope of this pr and as this behavior has not changed by this pr, I would change it with a follow up pr", "url": "https://github.com/apache/camel-quarkus/pull/634#discussion_r369550242", "createdAt": "2020-01-22T13:12:37Z", "author": {"login": "lburgazzoli"}, "path": ".github/workflows/pr-validate.yml", "diffHunk": "@@ -31,4 +35,10 @@ jobs:\n       with:\n         java-version: 1.8\n     - name: mvn package\n-      run: export LANG=en_US && ./mvnw -fae -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn clean package -Pcheck-format -DskipTests\n+      run: |\n+        ./mvnw -fae -B \\\n+          -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn \\\n+          -DskipTests \\\n+          -Pcheck-format \\\n+          clean package", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTU0NDEyNQ=="}, "originalCommit": {"oid": "87dc2c17f5558e4471a226a638a26fc9b7bb6224"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4454, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}