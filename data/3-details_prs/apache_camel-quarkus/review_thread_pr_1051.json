{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMzYzMzc0", "number": 1051, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1MTozOVrODvptrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1NDo1OVrODvpzdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjkzMTAzOnYy", "diffSide": "RIGHT", "path": "docs/modules/ROOT/pages/contributor-guide.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1MTozOVrOGCM6UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowMTo0OFrOGCNV0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2MTg3Mw==", "bodyText": "I do not think this is necessary. The keywords are not shown anywhere, they just help to find extensions via search on code.quarkus.io https://github.com/quarkusio/code.quarkus.io/blob/21044d84bee2ca82ac3939df00b9d0646a75f614/src/main/frontend/src/code-quarkus/pickers/extensions-picker-helpers.ts#L13 The word Camel is already there in the extension name so all our extensions should be findable via camel anyway https://github.com/quarkusio/code.quarkus.io/blob/21044d84bee2ca82ac3939df00b9d0646a75f614/src/main/frontend/src/code-quarkus/pickers/extensions-picker-helpers.ts#L12", "url": "https://github.com/apache/camel-quarkus/pull/1051#discussion_r404961873", "createdAt": "2020-04-07T16:51:39Z", "author": {"login": "ppalaga"}, "path": "docs/modules/ROOT/pages/contributor-guide.adoc", "diffHunk": "@@ -124,3 +124,134 @@ Review the result visually.\n 12. Please squash your commits before sending a pull request.\n \n Good luck!\n+\n+== Promote a JVM Only extension to Native\n+\n+The directory `extensions-jvm` contains some extensions that need to be tested in link:https://quarkus.io/guides/building-native-image[native mode]. Configuring the link:https://quarkus.io/guides/writing-native-applications-tips[native build] and implementing integration tests of such extensions may open the door to even faster startup and lower footprint.\n+Please find some guiding steps below to start this quest:\n+\n+1. Make sure that nobody else works on promoting the same extension by searching through the\n+   https://github.com/apache/camel-quarkus/issues[GitHub issues].\n+\n+2. Let others know that you work on promoting the given extension by either creating a\n+   https://github.com/apache/camel-quarkus/issues/new[new issue] or asking to assign an existing one to you.\n+\n+3. Select the JVM Only extension to be promoted, for instance the grpc extension like below:\n++\n+[source,shell]\n+----\n+$ cd camel-quarkus\n+$ export EXT='grpc'\n+----\n+\n+4. Split the JVM Only extension into `extensions` and `integration-tests` folders, from a shell execute:\n++\n+[source,shell]\n+----\n+$ {\n+   sed -i '/integration-test/d' \"extensions-jvm/${EXT}/pom.xml\"\n+   sed -i \"/<module>${EXT}<\\/module>/d\" \"extensions-jvm/pom.xml\"\n+   git mv \"extensions-jvm/${EXT}/integration-test/\" \"integration-tests/${EXT}\"\n+   git mv \"extensions-jvm/${EXT}\" \"extensions/${EXT}\"\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" extensions/pom.xml\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" integration-tests/pom.xml\n+   sed -i \"s/camel-quarkus-grpc-parent/camel-quarkus-integration-tests/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i \"s/camel-quarkus-grpc-integration-test/camel-quarkus-integration-test-${EXT}/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i -r \"s/Quarkus :: (.*) :: Integration Test/Quarkus :: Integration Test :: \\1/g\" \"integration-tests/${EXT}/pom.xml\"\n+  }\n+----\n+\n+5. Add the native profile at the end of `integration-tests/${EXT}/pom.xml`:\n++\n+[source,xml]\n+----\n+    <profiles>\n+        <profile>\n+            <id>native</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <properties>\n+                <quarkus.package.type>native</quarkus.package.type>\n+            </properties>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+----\n+\n+6. Remove the warning link:https://quarkus.io/guides/writing-extensions#build-step-processors[build step] from `extensions/${EXT}/deployment/src/main/java/org/apache/camel/quarkus/component/${EXT}/deployment/${EXT}Processor.java`:\n++\n+[source,java]\n+----\n+    /**\n+     * Remove this once this extension starts supporting the native mode.\n+     */\n+    @BuildStep(onlyIf = NativeBuild.class)\n+    @Record(value = ExecutionTime.RUNTIME_INIT)\n+    void warnJvmInNative(JvmOnlyRecorder recorder) {\n+        JvmOnlyRecorder.warnJvmInNative(LOG, FEATURE); // warn at build time\n+        recorder.warnJvmInNative(FEATURE); // warn at runtime\n+    }\n+----\n+\n+7. Create a native test at `integration-tests/${EXT}/src/test/java/org/apache/camel/quarkus/component/${EXT}/it/${EXT}IT.java`\n+\n+8. Check `extensions/${EXT}/runtime/src/main/resources/META-INF/quarkus-extension.yaml`:\n+* Ensure guide is set to `\"https://quarkus.io/guides/camel\"`\n+* Ensure keyword `camel` is present", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b90107a53c500da466608738fe40fd318e0e867"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2ODkxMw==", "bodyText": "I thought there was a plugin preventing the build but I will double-check.", "url": "https://github.com/apache/camel-quarkus/pull/1051#discussion_r404968913", "createdAt": "2020-04-07T17:01:48Z", "author": {"login": "aldettinger"}, "path": "docs/modules/ROOT/pages/contributor-guide.adoc", "diffHunk": "@@ -124,3 +124,134 @@ Review the result visually.\n 12. Please squash your commits before sending a pull request.\n \n Good luck!\n+\n+== Promote a JVM Only extension to Native\n+\n+The directory `extensions-jvm` contains some extensions that need to be tested in link:https://quarkus.io/guides/building-native-image[native mode]. Configuring the link:https://quarkus.io/guides/writing-native-applications-tips[native build] and implementing integration tests of such extensions may open the door to even faster startup and lower footprint.\n+Please find some guiding steps below to start this quest:\n+\n+1. Make sure that nobody else works on promoting the same extension by searching through the\n+   https://github.com/apache/camel-quarkus/issues[GitHub issues].\n+\n+2. Let others know that you work on promoting the given extension by either creating a\n+   https://github.com/apache/camel-quarkus/issues/new[new issue] or asking to assign an existing one to you.\n+\n+3. Select the JVM Only extension to be promoted, for instance the grpc extension like below:\n++\n+[source,shell]\n+----\n+$ cd camel-quarkus\n+$ export EXT='grpc'\n+----\n+\n+4. Split the JVM Only extension into `extensions` and `integration-tests` folders, from a shell execute:\n++\n+[source,shell]\n+----\n+$ {\n+   sed -i '/integration-test/d' \"extensions-jvm/${EXT}/pom.xml\"\n+   sed -i \"/<module>${EXT}<\\/module>/d\" \"extensions-jvm/pom.xml\"\n+   git mv \"extensions-jvm/${EXT}/integration-test/\" \"integration-tests/${EXT}\"\n+   git mv \"extensions-jvm/${EXT}\" \"extensions/${EXT}\"\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" extensions/pom.xml\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" integration-tests/pom.xml\n+   sed -i \"s/camel-quarkus-grpc-parent/camel-quarkus-integration-tests/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i \"s/camel-quarkus-grpc-integration-test/camel-quarkus-integration-test-${EXT}/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i -r \"s/Quarkus :: (.*) :: Integration Test/Quarkus :: Integration Test :: \\1/g\" \"integration-tests/${EXT}/pom.xml\"\n+  }\n+----\n+\n+5. Add the native profile at the end of `integration-tests/${EXT}/pom.xml`:\n++\n+[source,xml]\n+----\n+    <profiles>\n+        <profile>\n+            <id>native</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <properties>\n+                <quarkus.package.type>native</quarkus.package.type>\n+            </properties>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+----\n+\n+6. Remove the warning link:https://quarkus.io/guides/writing-extensions#build-step-processors[build step] from `extensions/${EXT}/deployment/src/main/java/org/apache/camel/quarkus/component/${EXT}/deployment/${EXT}Processor.java`:\n++\n+[source,java]\n+----\n+    /**\n+     * Remove this once this extension starts supporting the native mode.\n+     */\n+    @BuildStep(onlyIf = NativeBuild.class)\n+    @Record(value = ExecutionTime.RUNTIME_INIT)\n+    void warnJvmInNative(JvmOnlyRecorder recorder) {\n+        JvmOnlyRecorder.warnJvmInNative(LOG, FEATURE); // warn at build time\n+        recorder.warnJvmInNative(FEATURE); // warn at runtime\n+    }\n+----\n+\n+7. Create a native test at `integration-tests/${EXT}/src/test/java/org/apache/camel/quarkus/component/${EXT}/it/${EXT}IT.java`\n+\n+8. Check `extensions/${EXT}/runtime/src/main/resources/META-INF/quarkus-extension.yaml`:\n+* Ensure guide is set to `\"https://quarkus.io/guides/camel\"`\n+* Ensure keyword `camel` is present", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2MTg3Mw=="}, "originalCommit": {"oid": "0b90107a53c500da466608738fe40fd318e0e867"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjk0MTQ0OnYy", "diffSide": "RIGHT", "path": "docs/modules/ROOT/pages/contributor-guide.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1Mzo1OFrOGCNA3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowMjozMFrOGCNXdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2MzU0OQ==", "bodyText": "I think this is unnecessary if you do install in step 10.", "url": "https://github.com/apache/camel-quarkus/pull/1051#discussion_r404963549", "createdAt": "2020-04-07T16:53:58Z", "author": {"login": "ppalaga"}, "path": "docs/modules/ROOT/pages/contributor-guide.adoc", "diffHunk": "@@ -124,3 +124,134 @@ Review the result visually.\n 12. Please squash your commits before sending a pull request.\n \n Good luck!\n+\n+== Promote a JVM Only extension to Native\n+\n+The directory `extensions-jvm` contains some extensions that need to be tested in link:https://quarkus.io/guides/building-native-image[native mode]. Configuring the link:https://quarkus.io/guides/writing-native-applications-tips[native build] and implementing integration tests of such extensions may open the door to even faster startup and lower footprint.\n+Please find some guiding steps below to start this quest:\n+\n+1. Make sure that nobody else works on promoting the same extension by searching through the\n+   https://github.com/apache/camel-quarkus/issues[GitHub issues].\n+\n+2. Let others know that you work on promoting the given extension by either creating a\n+   https://github.com/apache/camel-quarkus/issues/new[new issue] or asking to assign an existing one to you.\n+\n+3. Select the JVM Only extension to be promoted, for instance the grpc extension like below:\n++\n+[source,shell]\n+----\n+$ cd camel-quarkus\n+$ export EXT='grpc'\n+----\n+\n+4. Split the JVM Only extension into `extensions` and `integration-tests` folders, from a shell execute:\n++\n+[source,shell]\n+----\n+$ {\n+   sed -i '/integration-test/d' \"extensions-jvm/${EXT}/pom.xml\"\n+   sed -i \"/<module>${EXT}<\\/module>/d\" \"extensions-jvm/pom.xml\"\n+   git mv \"extensions-jvm/${EXT}/integration-test/\" \"integration-tests/${EXT}\"\n+   git mv \"extensions-jvm/${EXT}\" \"extensions/${EXT}\"\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" extensions/pom.xml\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" integration-tests/pom.xml\n+   sed -i \"s/camel-quarkus-grpc-parent/camel-quarkus-integration-tests/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i \"s/camel-quarkus-grpc-integration-test/camel-quarkus-integration-test-${EXT}/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i -r \"s/Quarkus :: (.*) :: Integration Test/Quarkus :: Integration Test :: \\1/g\" \"integration-tests/${EXT}/pom.xml\"\n+  }\n+----\n+\n+5. Add the native profile at the end of `integration-tests/${EXT}/pom.xml`:\n++\n+[source,xml]\n+----\n+    <profiles>\n+        <profile>\n+            <id>native</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <properties>\n+                <quarkus.package.type>native</quarkus.package.type>\n+            </properties>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+----\n+\n+6. Remove the warning link:https://quarkus.io/guides/writing-extensions#build-step-processors[build step] from `extensions/${EXT}/deployment/src/main/java/org/apache/camel/quarkus/component/${EXT}/deployment/${EXT}Processor.java`:\n++\n+[source,java]\n+----\n+    /**\n+     * Remove this once this extension starts supporting the native mode.\n+     */\n+    @BuildStep(onlyIf = NativeBuild.class)\n+    @Record(value = ExecutionTime.RUNTIME_INIT)\n+    void warnJvmInNative(JvmOnlyRecorder recorder) {\n+        JvmOnlyRecorder.warnJvmInNative(LOG, FEATURE); // warn at build time\n+        recorder.warnJvmInNative(FEATURE); // warn at runtime\n+    }\n+----\n+\n+7. Create a native test at `integration-tests/${EXT}/src/test/java/org/apache/camel/quarkus/component/${EXT}/it/${EXT}IT.java`\n+\n+8. Check `extensions/${EXT}/runtime/src/main/resources/META-INF/quarkus-extension.yaml`:\n+* Ensure guide is set to `\"https://quarkus.io/guides/camel\"`\n+* Ensure keyword `camel` is present\n+* Remove the `preview` status\n+\n+9. Add itests to `.github/workflows/pr-build.yaml`, for instance:\n++\n+[source,yaml]\n+----\n+- category: Rpc\n+ test-modules: >\n+   grpc\n+----\n+\n+10. Unify source files format, update docs and rebuild the whole project:\n++\n+[source,shell]\n+----\n+mvn clean install -D skipTests -P format\n+----\n+\n+11. Build the extension:\n++\n+[source,shell]\n+----\n+cd \"extensions/${EXT}\"\n+mvn clean install\n+----", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b90107a53c500da466608738fe40fd318e0e867"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2OTMzNA==", "bodyText": "Indeed, it's not useful to check tests at this stage.", "url": "https://github.com/apache/camel-quarkus/pull/1051#discussion_r404969334", "createdAt": "2020-04-07T17:02:30Z", "author": {"login": "aldettinger"}, "path": "docs/modules/ROOT/pages/contributor-guide.adoc", "diffHunk": "@@ -124,3 +124,134 @@ Review the result visually.\n 12. Please squash your commits before sending a pull request.\n \n Good luck!\n+\n+== Promote a JVM Only extension to Native\n+\n+The directory `extensions-jvm` contains some extensions that need to be tested in link:https://quarkus.io/guides/building-native-image[native mode]. Configuring the link:https://quarkus.io/guides/writing-native-applications-tips[native build] and implementing integration tests of such extensions may open the door to even faster startup and lower footprint.\n+Please find some guiding steps below to start this quest:\n+\n+1. Make sure that nobody else works on promoting the same extension by searching through the\n+   https://github.com/apache/camel-quarkus/issues[GitHub issues].\n+\n+2. Let others know that you work on promoting the given extension by either creating a\n+   https://github.com/apache/camel-quarkus/issues/new[new issue] or asking to assign an existing one to you.\n+\n+3. Select the JVM Only extension to be promoted, for instance the grpc extension like below:\n++\n+[source,shell]\n+----\n+$ cd camel-quarkus\n+$ export EXT='grpc'\n+----\n+\n+4. Split the JVM Only extension into `extensions` and `integration-tests` folders, from a shell execute:\n++\n+[source,shell]\n+----\n+$ {\n+   sed -i '/integration-test/d' \"extensions-jvm/${EXT}/pom.xml\"\n+   sed -i \"/<module>${EXT}<\\/module>/d\" \"extensions-jvm/pom.xml\"\n+   git mv \"extensions-jvm/${EXT}/integration-test/\" \"integration-tests/${EXT}\"\n+   git mv \"extensions-jvm/${EXT}\" \"extensions/${EXT}\"\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" extensions/pom.xml\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" integration-tests/pom.xml\n+   sed -i \"s/camel-quarkus-grpc-parent/camel-quarkus-integration-tests/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i \"s/camel-quarkus-grpc-integration-test/camel-quarkus-integration-test-${EXT}/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i -r \"s/Quarkus :: (.*) :: Integration Test/Quarkus :: Integration Test :: \\1/g\" \"integration-tests/${EXT}/pom.xml\"\n+  }\n+----\n+\n+5. Add the native profile at the end of `integration-tests/${EXT}/pom.xml`:\n++\n+[source,xml]\n+----\n+    <profiles>\n+        <profile>\n+            <id>native</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <properties>\n+                <quarkus.package.type>native</quarkus.package.type>\n+            </properties>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+----\n+\n+6. Remove the warning link:https://quarkus.io/guides/writing-extensions#build-step-processors[build step] from `extensions/${EXT}/deployment/src/main/java/org/apache/camel/quarkus/component/${EXT}/deployment/${EXT}Processor.java`:\n++\n+[source,java]\n+----\n+    /**\n+     * Remove this once this extension starts supporting the native mode.\n+     */\n+    @BuildStep(onlyIf = NativeBuild.class)\n+    @Record(value = ExecutionTime.RUNTIME_INIT)\n+    void warnJvmInNative(JvmOnlyRecorder recorder) {\n+        JvmOnlyRecorder.warnJvmInNative(LOG, FEATURE); // warn at build time\n+        recorder.warnJvmInNative(FEATURE); // warn at runtime\n+    }\n+----\n+\n+7. Create a native test at `integration-tests/${EXT}/src/test/java/org/apache/camel/quarkus/component/${EXT}/it/${EXT}IT.java`\n+\n+8. Check `extensions/${EXT}/runtime/src/main/resources/META-INF/quarkus-extension.yaml`:\n+* Ensure guide is set to `\"https://quarkus.io/guides/camel\"`\n+* Ensure keyword `camel` is present\n+* Remove the `preview` status\n+\n+9. Add itests to `.github/workflows/pr-build.yaml`, for instance:\n++\n+[source,yaml]\n+----\n+- category: Rpc\n+ test-modules: >\n+   grpc\n+----\n+\n+10. Unify source files format, update docs and rebuild the whole project:\n++\n+[source,shell]\n+----\n+mvn clean install -D skipTests -P format\n+----\n+\n+11. Build the extension:\n++\n+[source,shell]\n+----\n+cd \"extensions/${EXT}\"\n+mvn clean install\n+----", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2MzU0OQ=="}, "originalCommit": {"oid": "0b90107a53c500da466608738fe40fd318e0e867"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjk0NTgzOnYy", "diffSide": "RIGHT", "path": "docs/modules/ROOT/pages/contributor-guide.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1NDo1OVrOGCNDuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNjo1NDo1OVrOGCNDuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk2NDI4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            13. Now it's time to solve native build issues if any, extend integration tests coverage and perhaps even shifting some treatments\n          \n          \n            \n            13. Now it's time to solve native build issues if any, extend integration tests coverage and perhaps even shifting some tasks", "url": "https://github.com/apache/camel-quarkus/pull/1051#discussion_r404964283", "createdAt": "2020-04-07T16:54:59Z", "author": {"login": "ppalaga"}, "path": "docs/modules/ROOT/pages/contributor-guide.adoc", "diffHunk": "@@ -124,3 +124,134 @@ Review the result visually.\n 12. Please squash your commits before sending a pull request.\n \n Good luck!\n+\n+== Promote a JVM Only extension to Native\n+\n+The directory `extensions-jvm` contains some extensions that need to be tested in link:https://quarkus.io/guides/building-native-image[native mode]. Configuring the link:https://quarkus.io/guides/writing-native-applications-tips[native build] and implementing integration tests of such extensions may open the door to even faster startup and lower footprint.\n+Please find some guiding steps below to start this quest:\n+\n+1. Make sure that nobody else works on promoting the same extension by searching through the\n+   https://github.com/apache/camel-quarkus/issues[GitHub issues].\n+\n+2. Let others know that you work on promoting the given extension by either creating a\n+   https://github.com/apache/camel-quarkus/issues/new[new issue] or asking to assign an existing one to you.\n+\n+3. Select the JVM Only extension to be promoted, for instance the grpc extension like below:\n++\n+[source,shell]\n+----\n+$ cd camel-quarkus\n+$ export EXT='grpc'\n+----\n+\n+4. Split the JVM Only extension into `extensions` and `integration-tests` folders, from a shell execute:\n++\n+[source,shell]\n+----\n+$ {\n+   sed -i '/integration-test/d' \"extensions-jvm/${EXT}/pom.xml\"\n+   sed -i \"/<module>${EXT}<\\/module>/d\" \"extensions-jvm/pom.xml\"\n+   git mv \"extensions-jvm/${EXT}/integration-test/\" \"integration-tests/${EXT}\"\n+   git mv \"extensions-jvm/${EXT}\" \"extensions/${EXT}\"\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" extensions/pom.xml\n+   sed -i -r \"s/(.*)activemq(.*)/\\1activemq\\2\\n\\1${EXT}\\2/g\" integration-tests/pom.xml\n+   sed -i \"s/camel-quarkus-grpc-parent/camel-quarkus-integration-tests/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i \"s/camel-quarkus-grpc-integration-test/camel-quarkus-integration-test-${EXT}/g\" \"integration-tests/${EXT}/pom.xml\"\n+   sed -i -r \"s/Quarkus :: (.*) :: Integration Test/Quarkus :: Integration Test :: \\1/g\" \"integration-tests/${EXT}/pom.xml\"\n+  }\n+----\n+\n+5. Add the native profile at the end of `integration-tests/${EXT}/pom.xml`:\n++\n+[source,xml]\n+----\n+    <profiles>\n+        <profile>\n+            <id>native</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <properties>\n+                <quarkus.package.type>native</quarkus.package.type>\n+            </properties>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                </plugins>\n+            </build>\n+        </profile>\n+    </profiles>\n+----\n+\n+6. Remove the warning link:https://quarkus.io/guides/writing-extensions#build-step-processors[build step] from `extensions/${EXT}/deployment/src/main/java/org/apache/camel/quarkus/component/${EXT}/deployment/${EXT}Processor.java`:\n++\n+[source,java]\n+----\n+    /**\n+     * Remove this once this extension starts supporting the native mode.\n+     */\n+    @BuildStep(onlyIf = NativeBuild.class)\n+    @Record(value = ExecutionTime.RUNTIME_INIT)\n+    void warnJvmInNative(JvmOnlyRecorder recorder) {\n+        JvmOnlyRecorder.warnJvmInNative(LOG, FEATURE); // warn at build time\n+        recorder.warnJvmInNative(FEATURE); // warn at runtime\n+    }\n+----\n+\n+7. Create a native test at `integration-tests/${EXT}/src/test/java/org/apache/camel/quarkus/component/${EXT}/it/${EXT}IT.java`\n+\n+8. Check `extensions/${EXT}/runtime/src/main/resources/META-INF/quarkus-extension.yaml`:\n+* Ensure guide is set to `\"https://quarkus.io/guides/camel\"`\n+* Ensure keyword `camel` is present\n+* Remove the `preview` status\n+\n+9. Add itests to `.github/workflows/pr-build.yaml`, for instance:\n++\n+[source,yaml]\n+----\n+- category: Rpc\n+ test-modules: >\n+   grpc\n+----\n+\n+10. Unify source files format, update docs and rebuild the whole project:\n++\n+[source,shell]\n+----\n+mvn clean install -D skipTests -P format\n+----\n+\n+11. Build the extension:\n++\n+[source,shell]\n+----\n+cd \"extensions/${EXT}\"\n+mvn clean install\n+----\n+\n+12. Execute integration tests:\n++\n+[source,shell]\n+----\n+cd \"../../integration-tests/${EXT}\"\n+mvn clean verify -P native\n+----\n+\n+13. Now it's time to solve native build issues if any, extend integration tests coverage and perhaps even shifting some treatments", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b90107a53c500da466608738fe40fd318e0e867"}, "originalPosition": 130}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4342, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}