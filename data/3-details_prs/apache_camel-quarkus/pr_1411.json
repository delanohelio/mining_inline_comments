{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MjUwODgz", "number": 1411, "title": "Fix #1263 - Add the camel-jta extension", "bodyText": "", "createdAt": "2020-06-23T00:55:04Z", "url": "https://github.com/apache/camel-quarkus/pull/1411", "merged": true, "mergeCommit": {"oid": "28ad1604e4821ffc907cc22d5b11c963c0a9e3ca"}, "closed": true, "closedAt": "2020-06-28T14:08:13Z", "author": {"login": "zhfeng"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABct8qDtgFqTQzNTQxMDIwOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvoOE3AH2gAyNDM4MjUwODgzOjBmYTllZTA1ZGRjNDQ2ZWQxOGEyYzkyMWVlMjRjNjNmNTQzNjJmOTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NDEwMjA5", "url": "https://github.com/apache/camel-quarkus/pull/1411#pullrequestreview-435410209", "createdAt": "2020-06-23T03:12:55Z", "commit": {"oid": "49f25ff3b8d5d3f5ad89f3398934364c042252f3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NDI3Njk3", "url": "https://github.com/apache/camel-quarkus/pull/1411#pullrequestreview-435427697", "createdAt": "2020-06-23T04:16:53Z", "commit": {"oid": "49f25ff3b8d5d3f5ad89f3398934364c042252f3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNDoxNjo1M1rOGnYqUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNDoxNjo1M1rOGnYqUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk1MTY5OA==", "bodyText": "With -> with", "url": "https://github.com/apache/camel-quarkus/pull/1411#discussion_r443951698", "createdAt": "2020-06-23T04:16:53Z", "author": {"login": "davsclaus"}, "path": "extensions/jta/runtime/pom.xml", "diffHunk": "@@ -0,0 +1,98 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.apache.camel.quarkus</groupId>\n+        <artifactId>camel-quarkus-jta-parent</artifactId>\n+        <version>1.1.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <artifactId>camel-quarkus-jta</artifactId>\n+    <name>Camel Quarkus :: JTA :: Runtime</name>\n+    <description>Using Camel With JTA Transaction Manager</description>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f25ff3b8d5d3f5ad89f3398934364c042252f3"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NDY0NDYz", "url": "https://github.com/apache/camel-quarkus/pull/1411#pullrequestreview-435464463", "createdAt": "2020-06-23T06:00:51Z", "commit": {"oid": "49f25ff3b8d5d3f5ad89f3398934364c042252f3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjowMDo1MVrOGnaaFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjowMDo1MVrOGnaaFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk4MDMxMQ==", "bodyText": "Empty properties file can be removed.", "url": "https://github.com/apache/camel-quarkus/pull/1411#discussion_r443980311", "createdAt": "2020-06-23T06:00:51Z", "author": {"login": "jamesnetherton"}, "path": "integration-tests/jta/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,16 @@\n+## ---------------------------------------------------------------------------\n+## Licensed to the Apache Software Foundation (ASF) under one or more\n+## contributor license agreements.  See the NOTICE file distributed with\n+## this work for additional information regarding copyright ownership.\n+## The ASF licenses this file to You under the Apache License, Version 2.0\n+## (the \"License\"); you may not use this file except in compliance with\n+## the License.  You may obtain a copy of the License at\n+##\n+##      http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing, software\n+## distributed under the License is distributed on an \"AS IS\" BASIS,\n+## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+## See the License for the specific language governing permissions and\n+## limitations under the License.\n+## ---------------------------------------------------------------------------", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f25ff3b8d5d3f5ad89f3398934364c042252f3"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NDczNDQ5", "url": "https://github.com/apache/camel-quarkus/pull/1411#pullrequestreview-435473449", "createdAt": "2020-06-23T06:22:16Z", "commit": {"oid": "49f25ff3b8d5d3f5ad89f3398934364c042252f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjoyMjoxNlrOGna1pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNjoyMjoxNlrOGna1pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk4NzM2Ng==", "bodyText": "This step should be removed when the quarkusio/quarkus#10180 is resloved", "url": "https://github.com/apache/camel-quarkus/pull/1411#discussion_r443987366", "createdAt": "2020-06-23T06:22:16Z", "author": {"login": "zhfeng"}, "path": "extensions/jta/deployment/src/main/java/org/apache/camel/quarkus/component/jta/deployment/JtaProcessor.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.jta.deployment;\n+\n+import com.arjuna.ats.internal.arjuna.utils.SocketProcessId;\n+import io.quarkus.arc.deployment.AdditionalBeanBuildItem;\n+import io.quarkus.deployment.Capabilities;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import org.apache.camel.quarkus.component.jta.MandatoryJtaTransactionPolicy;\n+import org.apache.camel.quarkus.component.jta.NestedJtaTransactionPolicy;\n+import org.apache.camel.quarkus.component.jta.NeverJtaTransactionPolicy;\n+import org.apache.camel.quarkus.component.jta.NotSupportedJtaTransactionPolicy;\n+import org.apache.camel.quarkus.component.jta.RequiredJtaTransactionPolicy;\n+import org.apache.camel.quarkus.component.jta.RequiresNewJtaTransactionPolicy;\n+import org.apache.camel.quarkus.component.jta.SupportsJtaTransactionPolicy;\n+\n+class JtaProcessor {\n+\n+    private static final String FEATURE = \"camel-jta\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    void transactedPolicy(\n+            BuildProducer<AdditionalBeanBuildItem> additionalBeans,\n+            Capabilities capabilities) {\n+        if (capabilities.isCapabilityPresent(Capabilities.TRANSACTIONS)) {\n+            AdditionalBeanBuildItem.Builder builder = AdditionalBeanBuildItem.builder();\n+            builder.addBeanClass(RequiredJtaTransactionPolicy.class);\n+            builder.addBeanClass(RequiresNewJtaTransactionPolicy.class);\n+            builder.addBeanClass(MandatoryJtaTransactionPolicy.class);\n+            builder.addBeanClass(NestedJtaTransactionPolicy.class);\n+            builder.addBeanClass(NeverJtaTransactionPolicy.class);\n+            builder.addBeanClass(NotSupportedJtaTransactionPolicy.class);\n+            builder.addBeanClass(SupportsJtaTransactionPolicy.class);\n+\n+            additionalBeans.produce(builder.build());\n+        }\n+    }\n+\n+    @BuildStep", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f25ff3b8d5d3f5ad89f3398934364c042252f3"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NDk1MTgy", "url": "https://github.com/apache/camel-quarkus/pull/1411#pullrequestreview-435495182", "createdAt": "2020-06-23T07:03:05Z", "commit": {"oid": "9887600204324cc8b43bef263c781ab96f2ed2b5"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNzowMzowNlrOGnb4fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNzozNTozMlrOGnc5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAwNDQ3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <description>Using Camel with JTA Transaction Manager</description>\n          \n          \n            \n                <description>Enclose Camel routes in distributed transactions using Java Transaction API (JTA) and Narayana transaction manager</description>\n          \n      \n    \n    \n  \n\nIf you like/accept the above proposal, please regenerate the docs.", "url": "https://github.com/apache/camel-quarkus/pull/1411#discussion_r444004477", "createdAt": "2020-06-23T07:03:06Z", "author": {"login": "ppalaga"}, "path": "extensions/jta/runtime/pom.xml", "diffHunk": "@@ -0,0 +1,98 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.apache.camel.quarkus</groupId>\n+        <artifactId>camel-quarkus-jta-parent</artifactId>\n+        <version>1.1.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <artifactId>camel-quarkus-jta</artifactId>\n+    <name>Camel Quarkus :: JTA :: Runtime</name>\n+    <description>Using Camel with JTA Transaction Manager</description>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9887600204324cc8b43bef263c781ab96f2ed2b5"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAxNTM5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @BuildStep\n          \n          \n            \n                @BuildStep // TODO remove this BuildStep when https://github.com/quarkusio/quarkus/issues/10180 gets resolved", "url": "https://github.com/apache/camel-quarkus/pull/1411#discussion_r444015392", "createdAt": "2020-06-23T07:24:58Z", "author": {"login": "ppalaga"}, "path": "extensions/jta/deployment/src/main/java/org/apache/camel/quarkus/component/jta/deployment/JtaProcessor.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.jta.deployment;\n+\n+import com.arjuna.ats.internal.arjuna.utils.SocketProcessId;\n+import io.quarkus.arc.deployment.AdditionalBeanBuildItem;\n+import io.quarkus.deployment.Capabilities;\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import org.apache.camel.quarkus.component.jta.MandatoryJtaTransactionPolicy;\n+import org.apache.camel.quarkus.component.jta.NestedJtaTransactionPolicy;\n+import org.apache.camel.quarkus.component.jta.NeverJtaTransactionPolicy;\n+import org.apache.camel.quarkus.component.jta.NotSupportedJtaTransactionPolicy;\n+import org.apache.camel.quarkus.component.jta.RequiredJtaTransactionPolicy;\n+import org.apache.camel.quarkus.component.jta.RequiresNewJtaTransactionPolicy;\n+import org.apache.camel.quarkus.component.jta.SupportsJtaTransactionPolicy;\n+\n+class JtaProcessor {\n+\n+    private static final String FEATURE = \"camel-jta\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    void transactedPolicy(\n+            BuildProducer<AdditionalBeanBuildItem> additionalBeans,\n+            Capabilities capabilities) {\n+        if (capabilities.isCapabilityPresent(Capabilities.TRANSACTIONS)) {\n+            AdditionalBeanBuildItem.Builder builder = AdditionalBeanBuildItem.builder();\n+            builder.addBeanClass(RequiredJtaTransactionPolicy.class);\n+            builder.addBeanClass(RequiresNewJtaTransactionPolicy.class);\n+            builder.addBeanClass(MandatoryJtaTransactionPolicy.class);\n+            builder.addBeanClass(NestedJtaTransactionPolicy.class);\n+            builder.addBeanClass(NeverJtaTransactionPolicy.class);\n+            builder.addBeanClass(NotSupportedJtaTransactionPolicy.class);\n+            builder.addBeanClass(SupportsJtaTransactionPolicy.class);\n+\n+            additionalBeans.produce(builder.build());\n+        }\n+    }\n+\n+    @BuildStep", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk4NzM2Ng=="}, "originalCommit": {"oid": "49f25ff3b8d5d3f5ad89f3398934364c042252f3"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAxOTY2Ng==", "bodyText": "I guess we do not want end users to override these methods or even call them directly? Hence we should perhaps make them package visible and final? Maybe the subclasses of TransactionalJtaTransactionPolicy could be made final too?", "url": "https://github.com/apache/camel-quarkus/pull/1411#discussion_r444019666", "createdAt": "2020-06-23T07:33:13Z", "author": {"login": "ppalaga"}, "path": "extensions/jta/runtime/src/main/java/org/apache/camel/quarkus/component/jta/TransactionalJtaTransactionPolicy.java", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.jta;\n+\n+import javax.inject.Inject;\n+import javax.transaction.HeuristicMixedException;\n+import javax.transaction.HeuristicRollbackException;\n+import javax.transaction.RollbackException;\n+import javax.transaction.Status;\n+import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n+import javax.transaction.TransactionManager;\n+\n+import org.apache.camel.CamelException;\n+import org.apache.camel.jta.JtaTransactionPolicy;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Helper methods for transaction handling\n+ */\n+public abstract class TransactionalJtaTransactionPolicy extends JtaTransactionPolicy {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(TransactionalJtaTransactionPolicy.class);\n+\n+    @Inject\n+    TransactionManager transactionManager;\n+\n+    protected void runWithTransaction(final Runnable runnable, final boolean isNew) throws Throwable {\n+        if (isNew) {\n+            begin();\n+        }\n+        try {\n+            runnable.run();\n+        } catch (Throwable e) {\n+            rollback(isNew);\n+            throw e;\n+        }\n+        if (isNew) {\n+            commit();\n+        }\n+    }\n+\n+    private void begin() throws Exception {\n+        transactionManager.begin();\n+    }\n+\n+    private void commit() throws Exception {\n+        try {\n+            transactionManager.commit();\n+        } catch (HeuristicMixedException | HeuristicRollbackException | RollbackException | SystemException e) {\n+            throw new CamelException(\"Unable to commit transaction\", e);\n+        } catch (Exception | Error e) {\n+            rollback(true);\n+            throw e;\n+        }\n+    }\n+\n+    protected void rollback(boolean isNew) throws Exception {\n+        try {\n+            if (isNew) {\n+                transactionManager.rollback();\n+            } else {\n+                transactionManager.setRollbackOnly();\n+            }\n+        } catch (Throwable e) {\n+            LOG.warn(\"Could not rollback transaction!\", e);\n+        }\n+    }\n+\n+    protected Transaction suspendTransaction() throws Exception {\n+        return transactionManager.suspend();\n+    }\n+\n+    protected void resumeTransaction(final Transaction suspendedTransaction) {\n+        if (suspendedTransaction == null) {\n+            return;\n+        }\n+\n+        try {\n+            transactionManager.resume(suspendedTransaction);\n+        } catch (Throwable e) {\n+            LOG.warn(\"Could not resume transaction!\", e);\n+        }\n+    }\n+\n+    protected boolean hasActiveTransaction() throws Exception {\n+        return transactionManager.getStatus() != Status.STATUS_MARKED_ROLLBACK\n+                && transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9887600204324cc8b43bef263c781ab96f2ed2b5"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAyMTA0Nw==", "bodyText": "Do not see any coverage for the individual various TransactionPolicies. Would it be hard to add a test route per policy?", "url": "https://github.com/apache/camel-quarkus/pull/1411#discussion_r444021047", "createdAt": "2020-06-23T07:35:32Z", "author": {"login": "ppalaga"}, "path": "integration-tests/jta/src/main/java/org/apache/camel/quarkus/component/jta/it/JtaRoutes.java", "diffHunk": "@@ -0,0 +1,27 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.jta.it;\n+\n+import org.apache.camel.builder.RouteBuilder;\n+\n+public class JtaRoutes extends RouteBuilder {\n+    @Override\n+    public void configure() throws Exception {\n+        from(\"direct:test\")\n+                .transacted().transform().constant(\"Hello World\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9887600204324cc8b43bef263c781ab96f2ed2b5"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92b345c79700a2b4de06333b139c58cd7bd35e26", "author": {"user": {"login": "zhfeng", "name": "Amos Feng"}}, "url": "https://github.com/apache/camel-quarkus/commit/92b345c79700a2b4de06333b139c58cd7bd35e26", "committedDate": "2020-06-28T06:21:31Z", "message": "Fix #1263 - Add the camel-jta extension"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35e60a29529eaedb25899734f1a4e7011497ca82", "author": {"user": {"login": "zhfeng", "name": "Amos Feng"}}, "url": "https://github.com/apache/camel-quarkus/commit/35e60a29529eaedb25899734f1a4e7011497ca82", "committedDate": "2020-06-28T06:21:35Z", "message": "Fix typo and remove the empty application.properties file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5eed69d747c62a49dc7e9170e3ac67710ad9bf07", "author": {"user": {"login": "zhfeng", "name": "Amos Feng"}}, "url": "https://github.com/apache/camel-quarkus/commit/5eed69d747c62a49dc7e9170e3ac67710ad9bf07", "committedDate": "2020-06-28T06:21:35Z", "message": "Add the tests for all the transation policies\nRemove the NestedJtaTransactionPolicy as Narayana does not support nested transaction\nFix the MandatoryJtaTransationPolicy and NeverJtaTransactionPolicy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a40f08aefb8d8480a65e49d8aeaa65272675a7b3", "author": {"user": {"login": "zhfeng", "name": "Amos Feng"}}, "url": "https://github.com/apache/camel-quarkus/commit/a40f08aefb8d8480a65e49d8aeaa65272675a7b3", "committedDate": "2020-06-28T06:41:54Z", "message": "resolve the conflicts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b4be3e4ee3c06bca8b1dca824d26acd599add6e", "author": {"user": {"login": "zhfeng", "name": "Amos Feng"}}, "url": "https://github.com/apache/camel-quarkus/commit/3b4be3e4ee3c06bca8b1dca824d26acd599add6e", "committedDate": "2020-06-28T06:07:09Z", "message": "Add the tests for all the transation policies\nRemove the NestedJtaTransactionPolicy as Narayana does not support nested transaction\nFix the MandatoryJtaTransationPolicy and NeverJtaTransactionPolicy"}, "afterCommit": {"oid": "a40f08aefb8d8480a65e49d8aeaa65272675a7b3", "author": {"user": {"login": "zhfeng", "name": "Amos Feng"}}, "url": "https://github.com/apache/camel-quarkus/commit/a40f08aefb8d8480a65e49d8aeaa65272675a7b3", "committedDate": "2020-06-28T06:41:54Z", "message": "resolve the conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1667cd18ff6b149bd41415616dba5a4b37e9333c", "author": {"user": {"login": "zhfeng", "name": "Amos Feng"}}, "url": "https://github.com/apache/camel-quarkus/commit/1667cd18ff6b149bd41415616dba5a4b37e9333c", "committedDate": "2020-06-28T06:51:07Z", "message": "remove camel-quarkus-bom-deployment in the jta deployment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fa9ee05ddc446ed18a2c921ee24c63f54362f99", "author": {"user": {"login": "zhfeng", "name": "Amos Feng"}}, "url": "https://github.com/apache/camel-quarkus/commit/0fa9ee05ddc446ed18a2c921ee24c63f54362f99", "committedDate": "2020-06-28T08:32:06Z", "message": "make sure it works in the native mode"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2974, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}