{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NjA3MzUw", "number": 603, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMTo0ODoyNFrODYehRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMTo0OTowNFrODYeh5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTkyNDU0OnYy", "diffSide": "LEFT", "path": "integration-tests/aws/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMTo0ODoyNFrOFeWyvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMTo1MzoyOVrOFeW6UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM3NTAzOQ==", "bodyText": "Hmmm, so, JNI is not enabled by default in 19.2 and we will support both. So if you need JNI, you should add a JniBuildItem in your extension.", "url": "https://github.com/apache/camel-quarkus/pull/603#discussion_r367375039", "createdAt": "2020-01-16T11:48:24Z", "author": {"login": "gsmet"}, "path": "integration-tests/aws/pom.xml", "diffHunk": "@@ -152,7 +152,6 @@\n                                     <enableHttpUrlHandler>true</enableHttpUrlHandler>\n                                     <enableServer>false</enableServer>\n                                     <dumpProxies>false</dumpProxies>\n-                                    <enableJni>true</enableJni>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe3de2190dbd44fbee25e14d5f8143384b7159b5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM3Njk3Nw==", "bodyText": "we'll have a look", "url": "https://github.com/apache/camel-quarkus/pull/603#discussion_r367376977", "createdAt": "2020-01-16T11:53:29Z", "author": {"login": "lburgazzoli"}, "path": "integration-tests/aws/pom.xml", "diffHunk": "@@ -152,7 +152,6 @@\n                                     <enableHttpUrlHandler>true</enableHttpUrlHandler>\n                                     <enableServer>false</enableServer>\n                                     <dumpProxies>false</dumpProxies>\n-                                    <enableJni>true</enableJni>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM3NTAzOQ=="}, "originalCommit": {"oid": "fe3de2190dbd44fbee25e14d5f8143384b7159b5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2OTkyNjE0OnYy", "diffSide": "RIGHT", "path": "integration-tests/http/pom.xml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMTo0OTowNFrOFeWzqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxMzowMDowM1rOFeYh0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM3NTI3Mg==", "bodyText": "I don't think we should have that ones in this branch because it only hides the errors and we need to be able to diagnose them.", "url": "https://github.com/apache/camel-quarkus/pull/603#discussion_r367375272", "createdAt": "2020-01-16T11:49:04Z", "author": {"login": "gsmet"}, "path": "integration-tests/http/pom.xml", "diffHunk": "@@ -122,13 +135,30 @@\n                                     <goal>native-image</goal>\n                                 </goals>\n                                 <configuration>\n-                                    <reportErrorsAtRuntime>false</reportErrorsAtRuntime>\n+                                    <!--\n+                                        With GraalVM Version 19.3.1 CE this test fails with:\n+\n+                                            Fatal error: com.oracle.graal.pointsto.util.AnalysisError$ParsingError: Error encountered\n+                                            while parsing com.oracle.svm.reflect.ClassLoader_defineClass_c6c343b4d6dc22ca64eb2d8503b13ac9c340dcb3.invoke(java.lang.Object, java.lang.Object[])\n+\n+                                            Parsing context:\n+                                                parsing java.lang.reflect.Method.invoke(Method.java:498)\n+                                                parsing org.apache.camel.support.ObjectHelper.invokeMethod(ObjectHelper.java:182)\n+                                                parsing org.apache.camel.main.BaseMainSupport.loadConfigurations(BaseMainSupport.java:467)\n+                                                parsing org.apache.camel.main.BaseMainSupport.postProcessCamelContext(BaseMainSupport.java:522)\n+\n+                                        but it looks like the stack trace is unrelated to the actual error as that method\n+                                        is invoked also in other tests hence I've enable reporting error at runtime to\n+                                        get the test succeed.\n+\n+                                        TODO: investigate what is the real issue\n+                                    -->\n+                                    <reportErrorsAtRuntime>true</reportErrorsAtRuntime>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe3de2190dbd44fbee25e14d5f8143384b7159b5"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5NDQ5NQ==", "bodyText": "we just need to revert my commit", "url": "https://github.com/apache/camel-quarkus/pull/603#discussion_r367394495", "createdAt": "2020-01-16T12:37:31Z", "author": {"login": "lburgazzoli"}, "path": "integration-tests/http/pom.xml", "diffHunk": "@@ -122,13 +135,30 @@\n                                     <goal>native-image</goal>\n                                 </goals>\n                                 <configuration>\n-                                    <reportErrorsAtRuntime>false</reportErrorsAtRuntime>\n+                                    <!--\n+                                        With GraalVM Version 19.3.1 CE this test fails with:\n+\n+                                            Fatal error: com.oracle.graal.pointsto.util.AnalysisError$ParsingError: Error encountered\n+                                            while parsing com.oracle.svm.reflect.ClassLoader_defineClass_c6c343b4d6dc22ca64eb2d8503b13ac9c340dcb3.invoke(java.lang.Object, java.lang.Object[])\n+\n+                                            Parsing context:\n+                                                parsing java.lang.reflect.Method.invoke(Method.java:498)\n+                                                parsing org.apache.camel.support.ObjectHelper.invokeMethod(ObjectHelper.java:182)\n+                                                parsing org.apache.camel.main.BaseMainSupport.loadConfigurations(BaseMainSupport.java:467)\n+                                                parsing org.apache.camel.main.BaseMainSupport.postProcessCamelContext(BaseMainSupport.java:522)\n+\n+                                        but it looks like the stack trace is unrelated to the actual error as that method\n+                                        is invoked also in other tests hence I've enable reporting error at runtime to\n+                                        get the test succeed.\n+\n+                                        TODO: investigate what is the real issue\n+                                    -->\n+                                    <reportErrorsAtRuntime>true</reportErrorsAtRuntime>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM3NTI3Mg=="}, "originalCommit": {"oid": "fe3de2190dbd44fbee25e14d5f8143384b7159b5"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM5NDc5MA==", "bodyText": "Yeah, I think we should do that. It will it easier to reproduce the actual problem", "url": "https://github.com/apache/camel-quarkus/pull/603#discussion_r367394790", "createdAt": "2020-01-16T12:38:18Z", "author": {"login": "geoand"}, "path": "integration-tests/http/pom.xml", "diffHunk": "@@ -122,13 +135,30 @@\n                                     <goal>native-image</goal>\n                                 </goals>\n                                 <configuration>\n-                                    <reportErrorsAtRuntime>false</reportErrorsAtRuntime>\n+                                    <!--\n+                                        With GraalVM Version 19.3.1 CE this test fails with:\n+\n+                                            Fatal error: com.oracle.graal.pointsto.util.AnalysisError$ParsingError: Error encountered\n+                                            while parsing com.oracle.svm.reflect.ClassLoader_defineClass_c6c343b4d6dc22ca64eb2d8503b13ac9c340dcb3.invoke(java.lang.Object, java.lang.Object[])\n+\n+                                            Parsing context:\n+                                                parsing java.lang.reflect.Method.invoke(Method.java:498)\n+                                                parsing org.apache.camel.support.ObjectHelper.invokeMethod(ObjectHelper.java:182)\n+                                                parsing org.apache.camel.main.BaseMainSupport.loadConfigurations(BaseMainSupport.java:467)\n+                                                parsing org.apache.camel.main.BaseMainSupport.postProcessCamelContext(BaseMainSupport.java:522)\n+\n+                                        but it looks like the stack trace is unrelated to the actual error as that method\n+                                        is invoked also in other tests hence I've enable reporting error at runtime to\n+                                        get the test succeed.\n+\n+                                        TODO: investigate what is the real issue\n+                                    -->\n+                                    <reportErrorsAtRuntime>true</reportErrorsAtRuntime>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM3NTI3Mg=="}, "originalCommit": {"oid": "fe3de2190dbd44fbee25e14d5f8143384b7159b5"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQwMzQ3Mg==", "bodyText": "do it :)", "url": "https://github.com/apache/camel-quarkus/pull/603#discussion_r367403472", "createdAt": "2020-01-16T13:00:03Z", "author": {"login": "lburgazzoli"}, "path": "integration-tests/http/pom.xml", "diffHunk": "@@ -122,13 +135,30 @@\n                                     <goal>native-image</goal>\n                                 </goals>\n                                 <configuration>\n-                                    <reportErrorsAtRuntime>false</reportErrorsAtRuntime>\n+                                    <!--\n+                                        With GraalVM Version 19.3.1 CE this test fails with:\n+\n+                                            Fatal error: com.oracle.graal.pointsto.util.AnalysisError$ParsingError: Error encountered\n+                                            while parsing com.oracle.svm.reflect.ClassLoader_defineClass_c6c343b4d6dc22ca64eb2d8503b13ac9c340dcb3.invoke(java.lang.Object, java.lang.Object[])\n+\n+                                            Parsing context:\n+                                                parsing java.lang.reflect.Method.invoke(Method.java:498)\n+                                                parsing org.apache.camel.support.ObjectHelper.invokeMethod(ObjectHelper.java:182)\n+                                                parsing org.apache.camel.main.BaseMainSupport.loadConfigurations(BaseMainSupport.java:467)\n+                                                parsing org.apache.camel.main.BaseMainSupport.postProcessCamelContext(BaseMainSupport.java:522)\n+\n+                                        but it looks like the stack trace is unrelated to the actual error as that method\n+                                        is invoked also in other tests hence I've enable reporting error at runtime to\n+                                        get the test succeed.\n+\n+                                        TODO: investigate what is the real issue\n+                                    -->\n+                                    <reportErrorsAtRuntime>true</reportErrorsAtRuntime>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzM3NTI3Mg=="}, "originalCommit": {"oid": "fe3de2190dbd44fbee25e14d5f8143384b7159b5"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4497, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}