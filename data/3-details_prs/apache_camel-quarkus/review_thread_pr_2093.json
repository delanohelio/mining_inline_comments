{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NzE0Nzcy", "number": 2093, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzo1NzoyMlrOFIlcsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDowMTo1MVrOFIlhbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTQ2NDgwOnYy", "diffSide": "RIGHT", "path": "extensions/hazelcast/runtime/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxMzo1NzoyMlrOIKlf4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDoxODoyOVrOIKmDxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3MTA0Mw==", "bodyText": "Is this comment needed?", "url": "https://github.com/apache/camel-quarkus/pull/2093#discussion_r547971043", "createdAt": "2020-12-23T13:57:22Z", "author": {"login": "ppalaga"}, "path": "extensions/hazelcast/runtime/pom.xml", "diffHunk": "@@ -55,6 +63,20 @@\n             <groupId>org.apache.camel</groupId>\n             <artifactId>camel-hazelcast</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>com.hazelcast</groupId>\n+            <artifactId>quarkus-hazelcast-client</artifactId>\n+        </dependency>\n+        <!-- fix version -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58b01b2218f9e5321d892ba25c417b41d686f025"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk4MDIyOA==", "bodyText": "nope!", "url": "https://github.com/apache/camel-quarkus/pull/2093#discussion_r547980228", "createdAt": "2020-12-23T14:18:29Z", "author": {"login": "zbendhiba"}, "path": "extensions/hazelcast/runtime/pom.xml", "diffHunk": "@@ -55,6 +63,20 @@\n             <groupId>org.apache.camel</groupId>\n             <artifactId>camel-hazelcast</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>com.hazelcast</groupId>\n+            <artifactId>quarkus-hazelcast-client</artifactId>\n+        </dependency>\n+        <!-- fix version -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3MTA0Mw=="}, "originalCommit": {"oid": "58b01b2218f9e5321d892ba25c417b41d686f025"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTQ3NjkzOnYy", "diffSide": "RIGHT", "path": "integration-tests/hazelcast/src/main/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastRoutes.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDowMTo1MVrOIKlnHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNDowMTo1MVrOIKlnHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Nzk3Mjg5Mg==", "bodyText": "configureHazelcastComponent would perhaps better describe what this method does.", "url": "https://github.com/apache/camel-quarkus/pull/2093#discussion_r547972892", "createdAt": "2020-12-23T14:01:51Z", "author": {"login": "ppalaga"}, "path": "integration-tests/hazelcast/src/main/java/org/apache/camel/quarkus/component/hazelcast/it/HazelcastRoutes.java", "diffHunk": "@@ -0,0 +1,189 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.hazelcast.it;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+import javax.ws.rs.Produces;\n+\n+import com.hazelcast.core.HazelcastInstance;\n+import io.quarkus.arc.Unremovable;\n+import org.apache.camel.builder.RouteBuilder;\n+import org.apache.camel.component.hazelcast.HazelcastConstants;\n+import org.apache.camel.component.hazelcast.HazelcastDefaultComponent;\n+import org.apache.camel.component.hazelcast.atomicnumber.HazelcastAtomicnumberComponent;\n+import org.apache.camel.component.hazelcast.instance.HazelcastInstanceComponent;\n+import org.apache.camel.component.hazelcast.list.HazelcastListComponent;\n+import org.apache.camel.component.hazelcast.map.HazelcastMapComponent;\n+import org.apache.camel.component.hazelcast.multimap.HazelcastMultimapComponent;\n+import org.apache.camel.component.hazelcast.replicatedmap.HazelcastReplicatedmapComponent;\n+import org.apache.camel.component.hazelcast.set.HazelcastSetComponent;\n+import org.apache.camel.component.hazelcast.topic.HazelcastTopicComponent;\n+\n+@ApplicationScoped\n+public class HazelcastRoutes extends RouteBuilder {\n+    public static final String MOCK_LIST_ADDED = \"mock:list-added\";\n+    public static final String MOCK_LIST_DELETED = \"mock:list-removed\";\n+    public static final String MOCK_SET_ADDED = \"mock:set-added\";\n+    public static final String MOCK_SET_DELETED = \"mock:set-removed\";\n+    public static final String MOCK_MAP_ADDED = \"mock:map-added\";\n+    public static final String MOCK_MAP_DELETED = \"mock:map-removed\";\n+    public static final String MOCK_MAP_UPDATED = \"mock:map-updated\";\n+    public static final String MOCK_MAP_EVICTED = \"mock:map-evicted\";\n+    public static final String MOCK_MULTIMAP_ADDED = \"mock:multimap-added\";\n+    public static final String MOCK_MULTIMAP_DELETED = \"mock:multimap-removed\";\n+    public static final String MOCK_REPLICATED_ADDED = \"mock:replicatedmap-added\";\n+    public static final String MOCK_REPLICATED_DELETED = \"mock:replicatedmap-removed\";\n+    public static final String MOCK_TOPIC_RECEIVED = \"mock:topic-received\";\n+\n+    @Inject\n+    HazelcastInstance hazelcastInstance;\n+\n+    @Produces\n+    @ApplicationScoped\n+    @Unremovable\n+    @Named(\"hazelcast-instance\")\n+    HazelcastDefaultComponent hazelcastInstance() {\n+        final HazelcastInstanceComponent hazelcastComponent = new HazelcastInstanceComponent();\n+        return getHazelcastComponent(hazelcastComponent);\n+    }\n+\n+    @Produces\n+    @ApplicationScoped\n+    @Unremovable\n+    @Named(\"hazelcast-atomicvalue\")\n+    HazelcastDefaultComponent hazelcastAtomicnumber() {\n+        final HazelcastAtomicnumberComponent hazelcastComponent = new HazelcastAtomicnumberComponent();\n+        return getHazelcastComponent(hazelcastComponent);\n+    }\n+\n+    @Produces\n+    @ApplicationScoped\n+    @Unremovable\n+    @Named(\"hazelcast-list\")\n+    HazelcastDefaultComponent hazelcastList() {\n+        final HazelcastListComponent hazelcastComponent = new HazelcastListComponent();\n+        return getHazelcastComponent(hazelcastComponent);\n+    }\n+\n+    @Produces\n+    @ApplicationScoped\n+    @Unremovable\n+    @Named(\"hazelcast-map\")\n+    HazelcastDefaultComponent hazelcastMap() {\n+        final HazelcastMapComponent hazelcastComponent = new HazelcastMapComponent();\n+        return getHazelcastComponent(hazelcastComponent);\n+    }\n+\n+    @Produces\n+    @ApplicationScoped\n+    @Unremovable\n+    @Named(\"hazelcast-multimap\")\n+    HazelcastDefaultComponent hazelcastMultimap() {\n+        final HazelcastMultimapComponent hazelcastComponent = new HazelcastMultimapComponent();\n+        return getHazelcastComponent(hazelcastComponent);\n+    }\n+\n+    @Produces\n+    @ApplicationScoped\n+    @Unremovable\n+    @Named(\"hazelcast-replicatedmap\")\n+    HazelcastDefaultComponent hazelcastReplicatedmap() {\n+        final HazelcastReplicatedmapComponent hazelcastComponent = new HazelcastReplicatedmapComponent();\n+        return getHazelcastComponent(hazelcastComponent);\n+    }\n+\n+    @Produces\n+    @ApplicationScoped\n+    @Unremovable\n+    @Named(\"hazelcast-set\")\n+    HazelcastDefaultComponent hazelcastSet() {\n+        final HazelcastSetComponent hazelcastComponent = new HazelcastSetComponent();\n+        return getHazelcastComponent(hazelcastComponent);\n+    }\n+\n+    @Produces\n+    @ApplicationScoped\n+    @Unremovable\n+    @Named(\"hazelcast-topic\")\n+    HazelcastDefaultComponent hazelcastTopic() {\n+        final HazelcastTopicComponent hazelcastComponent = new HazelcastTopicComponent();\n+        return getHazelcastComponent(hazelcastComponent);\n+    }\n+\n+    private HazelcastDefaultComponent getHazelcastComponent(HazelcastDefaultComponent hazelcastComponent) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58b01b2218f9e5321d892ba25c417b41d686f025"}, "originalPosition": 129}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4521, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}