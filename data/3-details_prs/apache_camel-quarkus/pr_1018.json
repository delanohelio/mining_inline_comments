{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NjA0NTAz", "number": 1018, "title": "Fix #1017 Do not hardcode the TransformerFactory implementation irrev\u2026", "bodyText": "Fix #1017", "createdAt": "2020-04-02T14:10:57Z", "url": "https://github.com/apache/camel-quarkus/pull/1018", "merged": true, "mergeCommit": {"oid": "4ac50435688e8a74b433f85e42999cf6168f4abd"}, "closed": true, "closedAt": "2020-04-02T19:57:10Z", "author": {"login": "ppalaga"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTs8bOAFqTM4NjQ2NjUyMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTur3DgBqjMxOTI5NDk1NDI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NDY2NTIx", "url": "https://github.com/apache/camel-quarkus/pull/1018#pullrequestreview-386466521", "createdAt": "2020-04-02T14:12:28Z", "commit": {"oid": "ac258e7df7620d32ae10af29c017796dd7482f6f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NDcxOTQ4", "url": "https://github.com/apache/camel-quarkus/pull/1018#pullrequestreview-386471948", "createdAt": "2020-04-02T14:18:08Z", "commit": {"oid": "ac258e7df7620d32ae10af29c017796dd7482f6f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoxODowOFrOF_tb4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoxODowOFrOF_tb4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM0OTAyNA==", "bodyText": "We don't provide any substitution for other transformers so it should be clear that any value except the default is out of our support", "url": "https://github.com/apache/camel-quarkus/pull/1018#discussion_r402349024", "createdAt": "2020-04-02T14:18:08Z", "author": {"login": "lburgazzoli"}, "path": "extensions-support/xalan/deployment/src/main/java/org/apache/camel/quarkus/support/xalan/deployment/CamelXalanBuildTimeConfig.java", "diffHunk": "@@ -14,24 +14,21 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.camel.quarkus.support.xalan.graal;\n+package org.apache.camel.quarkus.support.xalan.deployment;\n \n-import javax.xml.transform.TransformerFactory;\n-import javax.xml.transform.TransformerFactoryConfigurationError;\n+import java.util.Optional;\n \n-import com.oracle.svm.core.annotate.Substitute;\n-import com.oracle.svm.core.annotate.TargetClass;\n-import org.apache.xalan.xsltc.trax.TransformerFactoryImpl;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+import io.quarkus.runtime.annotations.ConfigPhase;\n+import io.quarkus.runtime.annotations.ConfigRoot;\n \n-@TargetClass(className = \"javax.xml.transform.TransformerFactory\")\n-final class TransformerFactorySubstitution {\n-    @Substitute\n-    public static TransformerFactory newDefaultInstance() {\n-        return new TransformerFactoryImpl();\n-    }\n+@ConfigRoot(name = \"camel.xalan\", phase = ConfigPhase.BUILD_TIME)\n+public class CamelXalanBuildTimeConfig {\n \n-    @Substitute\n-    public static TransformerFactory newInstance() throws TransformerFactoryConfigurationError {\n-        return newDefaultInstance();\n-    }\n+    /**\n+     * A fully qualified class name to set as the {@code javax.xml.transform.TransformerFactory} system property early\n+     * at the application startup.\n+     */\n+    @ConfigItem(defaultValue = \"org.apache.camel.quarkus.support.xalan.XalanTransformerFactory\")\n+    public Optional<String> transformerFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac258e7df7620d32ae10af29c017796dd7482f6f"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NDc0NDE3", "url": "https://github.com/apache/camel-quarkus/pull/1018#pullrequestreview-386474417", "createdAt": "2020-04-02T14:20:41Z", "commit": {"oid": "ac258e7df7620d32ae10af29c017796dd7482f6f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoyMDo0MVrOF_tjmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDoyMDo0MVrOF_tjmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM1MTAwMg==", "bodyText": "It was an issue even before but this does not apply to JVM so we could have different behavior between native and jvm", "url": "https://github.com/apache/camel-quarkus/pull/1018#discussion_r402351002", "createdAt": "2020-04-02T14:20:41Z", "author": {"login": "lburgazzoli"}, "path": "extensions-support/xalan/deployment/src/main/java/org/apache/camel/quarkus/support/xalan/deployment/XalanNativeImageProcessor.java", "diffHunk": "@@ -52,4 +55,29 @@ ReflectiveClassBuildItem reflectiveClasses() {\n         return Arrays.asList(\n                 new NativeImageResourceBuildItem(\"org/apache/xml/serializer/output_xml.properties\"));\n     }\n+\n+    @BuildStep\n+    void installTransformerFactory(\n+            CamelXalanBuildTimeConfig config,\n+            BuildProducer<SystemPropertyBuildItem> properties,\n+            BuildProducer<ServiceProviderBuildItem> serviceProviders,\n+            BuildProducer<NativeImageResourceBuildItem> nativeResources) {\n+\n+        config.transformerFactory\n+                .ifPresent(val -> properties.produce(\n+                        /*\n+                         * If we do not do this, the service provider defined in xalan.jar's\n+                         * META-INF/services/javax.xml.transform.TransformerFactory\n+                         * wins over our factory on Java 11+ native\n+                         * I any case, the user has an option to pass his preferred factory instead of ours\n+                         */\n+                        new SystemPropertyBuildItem(\"javax.xml.transform.TransformerFactory\", val)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac258e7df7620d32ae10af29c017796dd7482f6f"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTYxODcy", "url": "https://github.com/apache/camel-quarkus/pull/1018#pullrequestreview-386561872", "createdAt": "2020-04-02T15:50:39Z", "commit": {"oid": "ac258e7df7620d32ae10af29c017796dd7482f6f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo1MDozOVrOF_xzHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo1MDozOVrOF_xzHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQyMDUxMA==", "bodyText": "How about this new variant of the text?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * A fully qualified class name to set as the {@code javax.xml.transform.TransformerFactory} system property early\n          \n          \n            \n                 * at the application startup.\n          \n          \n            \n                 * A fully qualified class name to set as the {@code javax.xml.transform.TransformerFactory} system property early\n          \n          \n            \n                 * at the application startup. The system property effectively overrides any service providers defined in\n          \n          \n            \n                 * {@code META-INF/services/javax.xml.transform.TransformerFactory} files available in the class path. If you do not\n          \n          \n            \n                 * set the option the default value is used and the service providers are overriden anyway.\n          \n          \n            \n                 * <p>\n          \n          \n            \n                 * Note that any custom transformer factory you pass will only work in native mode if all necessary classes are\n          \n          \n            \n                 * registered for reflection and all necessary resources are included in the native image. This may already be the\n          \n          \n            \n                 * case for {@code com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl} if you depend on\n          \n          \n            \n                 * {@code io.quarkus:quarkus-jaxb} or {@code org.apache.xalan.xsltc.trax.TransformerFactoryImpl} if you depend on\n          \n          \n            \n                 * {@code org.apache.camel.quarkus:camel-quarkus-support-xalan}.", "url": "https://github.com/apache/camel-quarkus/pull/1018#discussion_r402420510", "createdAt": "2020-04-02T15:50:39Z", "author": {"login": "ppalaga"}, "path": "extensions-support/xalan/deployment/src/main/java/org/apache/camel/quarkus/support/xalan/deployment/CamelXalanBuildTimeConfig.java", "diffHunk": "@@ -14,24 +14,21 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.camel.quarkus.support.xalan.graal;\n+package org.apache.camel.quarkus.support.xalan.deployment;\n \n-import javax.xml.transform.TransformerFactory;\n-import javax.xml.transform.TransformerFactoryConfigurationError;\n+import java.util.Optional;\n \n-import com.oracle.svm.core.annotate.Substitute;\n-import com.oracle.svm.core.annotate.TargetClass;\n-import org.apache.xalan.xsltc.trax.TransformerFactoryImpl;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+import io.quarkus.runtime.annotations.ConfigPhase;\n+import io.quarkus.runtime.annotations.ConfigRoot;\n \n-@TargetClass(className = \"javax.xml.transform.TransformerFactory\")\n-final class TransformerFactorySubstitution {\n-    @Substitute\n-    public static TransformerFactory newDefaultInstance() {\n-        return new TransformerFactoryImpl();\n-    }\n+@ConfigRoot(name = \"camel.xalan\", phase = ConfigPhase.BUILD_TIME)\n+public class CamelXalanBuildTimeConfig {\n \n-    @Substitute\n-    public static TransformerFactory newInstance() throws TransformerFactoryConfigurationError {\n-        return newDefaultInstance();\n-    }\n+    /**\n+     * A fully qualified class name to set as the {@code javax.xml.transform.TransformerFactory} system property early\n+     * at the application startup.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac258e7df7620d32ae10af29c017796dd7482f6f"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTY0NjU4", "url": "https://github.com/apache/camel-quarkus/pull/1018#pullrequestreview-386564658", "createdAt": "2020-04-02T15:53:42Z", "commit": {"oid": "ac258e7df7620d32ae10af29c017796dd7482f6f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac258e7df7620d32ae10af29c017796dd7482f6f", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/ac258e7df7620d32ae10af29c017796dd7482f6f", "committedDate": "2020-04-02T14:09:55Z", "message": "Fix #1017 Do not hardcode the TransformerFactory implementation irreversibly"}, "afterCommit": {"oid": "349782f2f503720f3ecfc0afb3ae32638fb7a415", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/349782f2f503720f3ecfc0afb3ae32638fb7a415", "committedDate": "2020-04-02T16:11:17Z", "message": "Fix #1017 Do not hardcode the TransformerFactory implementation irreversibly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "349782f2f503720f3ecfc0afb3ae32638fb7a415", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/349782f2f503720f3ecfc0afb3ae32638fb7a415", "committedDate": "2020-04-02T16:11:17Z", "message": "Fix #1017 Do not hardcode the TransformerFactory implementation irreversibly"}, "afterCommit": {"oid": "30c815931887589eb7bd6e0613fa91a825613259", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/30c815931887589eb7bd6e0613fa91a825613259", "committedDate": "2020-04-02T16:13:04Z", "message": "Fix #1017 Do not hardcode the TransformerFactory implementation irreversibly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac163da0ff8140452308a5350a4c479bd68f2447", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/ac163da0ff8140452308a5350a4c479bd68f2447", "committedDate": "2020-04-02T16:14:00Z", "message": "Fix #1017 Do not hardcode the TransformerFactory implementation irreversibly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "30c815931887589eb7bd6e0613fa91a825613259", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/30c815931887589eb7bd6e0613fa91a825613259", "committedDate": "2020-04-02T16:13:04Z", "message": "Fix #1017 Do not hardcode the TransformerFactory implementation irreversibly"}, "afterCommit": {"oid": "ac163da0ff8140452308a5350a4c479bd68f2447", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/ac163da0ff8140452308a5350a4c479bd68f2447", "committedDate": "2020-04-02T16:14:00Z", "message": "Fix #1017 Do not hardcode the TransformerFactory implementation irreversibly"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2456, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}