{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MjM4NDQw", "number": 1793, "title": "FOP native support #1642", "bodyText": "Issue: #1642\n@oscerd There is a true type font among files (integration-tests/fop/src/test/resources/Freedom-10eM.ttf ), downloaded from https://www.fontspace.com/freedom-font-f14832 Font is free and is used only as a test resource. This should be acceptable from licence POV. Do you agree?\n@ppalaga Fop extension supports only transformation into PDF. As you can see in  extensions/fop/runtime/src/main/doc/limitations.adoc, sRGB color space is disabled and font cache has to be disabled for custom fonts. These two limitations are caused by following issues:\n\nProblem with sRGB color space is caused by oracle/graal#2850\nProblem with font cache is caused by oracle/graal#460\n\n[ ] An issue should be filed for the change unless this is a trivial change (fixing a typo or similar). One issue should ideally be fixed by not more than one commit and the other way round, each commit should fix just one issue, without pulling in other changes.\n[ ] Each commit in the pull request should have a meaningful and properly spelled subject line and body. Copying the title of the associated issue is typically enough. Please include the issue number in the commit message prefixed by #.\n[ ] The pull request description should explain what the pull request does, how, and why. If the info is available in the associated issue or some other external document, a link is enough.\n[ ] Phrases like Fix # or Fixes # will auto-close the named issue upon merging the pull request. Using them is typically a good idea.\n[ ] Please run mvn process-resources -Pformat (and amend the changes if necessary) before sending the pull request.\n[ ] Contributor guide is your good friend: https://camel.apache.org/camel-quarkus/latest/contributor-guide.html", "createdAt": "2020-09-15T11:44:14Z", "url": "https://github.com/apache/camel-quarkus/pull/1793", "merged": true, "mergeCommit": {"oid": "a96274af3e248f1a1639e2347de5033b703899c3"}, "closed": true, "closedAt": "2020-09-16T08:55:28Z", "author": {"login": "JiriOndrusek"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJGWVpgFqTQ4ODU5ODA3Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJYNphgFqTQ4OTM5ODI3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NTk4MDc3", "url": "https://github.com/apache/camel-quarkus/pull/1793#pullrequestreview-488598077", "createdAt": "2020-09-15T11:46:23Z", "commit": {"oid": "63256a22f8d6c1d2f1b0eb3e7a250cf8b98c4c27"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NjAwMDUz", "url": "https://github.com/apache/camel-quarkus/pull/1793#pullrequestreview-488600053", "createdAt": "2020-09-15T11:49:18Z", "commit": {"oid": "63256a22f8d6c1d2f1b0eb3e7a250cf8b98c4c27"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTo0OToxOVrOHR995w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMTo1Mjo1OVrOHR-GRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYwMzExMQ==", "bodyText": "Just curious - why do we need to index commons-logging-jboss-logging?", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488603111", "createdAt": "2020-09-15T11:49:19Z", "author": {"login": "jamesnetherton"}, "path": "extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.fop.deployment;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem;\n+import org.apache.fop.render.RendererEventProducer;\n+import org.apache.fop.render.pdf.PDFDocumentHandlerMaker;\n+import org.apache.fop.render.pdf.extensions.PDFExtensionHandlerFactory;\n+import org.apache.xmlgraphics.image.loader.spi.ImageImplRegistry;\n+import org.jboss.jandex.IndexView;\n+\n+class FopProcessor {\n+\n+    private static final String FEATURE = \"camel-fop\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem registerForReflection(CombinedIndexBuildItem combinedIndex) {\n+        IndexView index = combinedIndex.getIndex();\n+\n+        List<String> dtos = index.getKnownClasses().stream()\n+                .map(ci -> ci.name().toString())\n+                .filter(n -> n.endsWith(\"ElementMapping\"))\n+                .sorted()\n+                .collect(Collectors.toList());\n+\n+        dtos.add(PDFExtensionHandlerFactory.class.getCanonicalName());\n+        dtos.add(PDFDocumentHandlerMaker.class.getCanonicalName());\n+        dtos.add(RendererEventProducer.class.getCanonicalName());\n+        dtos.add(IOException.class.getCanonicalName());\n+        dtos.add(Integer.class.getCanonicalName());\n+\n+        return new ReflectiveClassBuildItem(false, false, dtos.toArray(new String[dtos.size()]));\n+    }\n+\n+    @BuildStep\n+    void addDependencies(BuildProducer<IndexDependencyBuildItem> indexDependency) {\n+        indexDependency.produce(new IndexDependencyBuildItem(\"org.jboss.logging\", \"commons-logging-jboss-logging\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63256a22f8d6c1d2f1b0eb3e7a250cf8b98c4c27"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODYwNTI1NQ==", "bodyText": "Could NativeImageProxyDefinitionBuildItem be used here instead of proxy-config.json.", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488605255", "createdAt": "2020-09-15T11:52:59Z", "author": {"login": "jamesnetherton"}, "path": "extensions/fop/runtime/src/main/resources/META-INF/native-image/proxy-config.json", "diffHunk": "@@ -0,0 +1,3 @@\n+[\n+  [\"org.apache.fop.render.RendererEventProducer\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63256a22f8d6c1d2f1b0eb3e7a250cf8b98c4c27"}, "originalPosition": 2}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63256a22f8d6c1d2f1b0eb3e7a250cf8b98c4c27", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/63256a22f8d6c1d2f1b0eb3e7a250cf8b98c4c27", "committedDate": "2020-09-15T11:35:44Z", "message": "FOP native support #1642"}, "afterCommit": {"oid": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/9b402a1d8781d691ec00294f88fc5dc9c4d6f970", "committedDate": "2020-09-15T12:16:31Z", "message": "FOP native support #1642"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NzkyODU3", "url": "https://github.com/apache/camel-quarkus/pull/1793#pullrequestreview-488792857", "createdAt": "2020-09-15T15:15:11Z", "commit": {"oid": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNToxNToxMVrOHSG7Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNToyNDowNFrOHSHVXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc0OTkxOQ==", "bodyText": "I have filed a follow up: #1796 Could you please pick it @JiriOndrusek ?", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488749919", "createdAt": "2020-09-15T15:15:11Z", "author": {"login": "ppalaga"}, "path": "extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.fop.deployment;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageProxyDefinitionBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem;\n+import org.apache.fop.render.RendererEventProducer;\n+import org.apache.fop.render.pdf.PDFDocumentHandlerMaker;\n+import org.apache.fop.render.pdf.extensions.PDFExtensionHandlerFactory;\n+import org.apache.xmlgraphics.image.loader.spi.ImageImplRegistry;\n+import org.jboss.jandex.IndexView;\n+\n+class FopProcessor {\n+\n+    private static final String FEATURE = \"camel-fop\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem registerForReflection(CombinedIndexBuildItem combinedIndex) {\n+        IndexView index = combinedIndex.getIndex();\n+\n+        List<String> dtos = index.getKnownClasses().stream()\n+                .map(ci -> ci.name().toString())\n+                .filter(n -> n.endsWith(\"ElementMapping\"))\n+                .sorted()\n+                .collect(Collectors.toList());\n+\n+        dtos.add(PDFExtensionHandlerFactory.class.getCanonicalName());\n+        dtos.add(PDFDocumentHandlerMaker.class.getCanonicalName());\n+        dtos.add(RendererEventProducer.class.getCanonicalName());\n+        dtos.add(IOException.class.getCanonicalName());\n+        dtos.add(Integer.class.getCanonicalName());\n+\n+        return new ReflectiveClassBuildItem(false, false, dtos.toArray(new String[dtos.size()]));\n+    }\n+\n+    @BuildStep\n+    void addDependencies(BuildProducer<IndexDependencyBuildItem> indexDependency) {\n+        indexDependency.produce(new IndexDependencyBuildItem(\"org.apache.xmlgraphics\", \"fop\"));\n+    }\n+\n+    @BuildStep\n+    NativeImageResourceBuildItem initResources() {\n+        return new NativeImageResourceBuildItem(\n+                \"META-INF/services/org.apache.fop.fo.ElementMapping\",\n+                \"META-INF/services/org.apache.fop.render.intermediate.IFDocumentHandler\",\n+                \"org/apache/fop/render/event-model.xml\");\n+    }\n+\n+    @BuildStep\n+    NativeImageResourceBundleBuildItem initBundles() {\n+        return new NativeImageResourceBundleBuildItem(\n+                \"com.sun.org.apache.xerces.internal.impl.msg.SAXMessages\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1MjA3OA==", "bodyText": "class.getCanonicalName() is not wrong here where it is called on a non-inner class. We should stick to class.getName() that is correct also for inner classes. I mean when ppl will copy-paste from here, it may not work for them in all situations.", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488752078", "createdAt": "2020-09-15T15:17:57Z", "author": {"login": "ppalaga"}, "path": "extensions/fop/deployment/src/main/java/org/apache/camel/quarkus/component/fop/deployment/FopProcessor.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.fop.deployment;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.IndexDependencyBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageProxyDefinitionBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.NativeImageResourceBundleBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem;\n+import org.apache.fop.render.RendererEventProducer;\n+import org.apache.fop.render.pdf.PDFDocumentHandlerMaker;\n+import org.apache.fop.render.pdf.extensions.PDFExtensionHandlerFactory;\n+import org.apache.xmlgraphics.image.loader.spi.ImageImplRegistry;\n+import org.jboss.jandex.IndexView;\n+\n+class FopProcessor {\n+\n+    private static final String FEATURE = \"camel-fop\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem registerForReflection(CombinedIndexBuildItem combinedIndex) {\n+        IndexView index = combinedIndex.getIndex();\n+\n+        List<String> dtos = index.getKnownClasses().stream()\n+                .map(ci -> ci.name().toString())\n+                .filter(n -> n.endsWith(\"ElementMapping\"))\n+                .sorted()\n+                .collect(Collectors.toList());\n+\n+        dtos.add(PDFExtensionHandlerFactory.class.getCanonicalName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1NDUwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * Default sRGB color space is disabled because of https://github.com/oracle/graal/issues/2850[Graal VM issue #2850]. This limitation makes configuration property\n          \n          \n            \n            `disable-srgb-colorspace` ignored. You can see more about sRGB color space in\n          \n          \n            \n            https://xmlgraphics.apache.org/fop/2.1/configuration.html[FOP configuration].\n          \n          \n            \n            * Default sRGB color space is always disabled because of https://github.com/oracle/graal/issues/2850[Graal VM issue #2850] and `disable-srgb-colorspace` https://xmlgraphics.apache.org/fop/2.1/configuration.html[FOP configuration property] is ignored.", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488754502", "createdAt": "2020-09-15T15:21:10Z", "author": {"login": "ppalaga"}, "path": "extensions/fop/runtime/src/main/doc/limitations.adoc", "diffHunk": "@@ -0,0 +1,12 @@\n+While you can use any of the available output types in JVM mode, only PDF output type is supported\n+in native mode. PDF output type in native mode has several limitations:\n+\n+* Default sRGB color space is disabled because of https://github.com/oracle/graal/issues/2850[Graal VM issue #2850]. This limitation makes configuration property\n+`disable-srgb-colorspace` ignored. You can see more about sRGB color space in\n+https://xmlgraphics.apache.org/fop/2.1/configuration.html[FOP configuration].", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1NjA4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Please use property `<use-cache>false</use-cache>` (more information in https://xmlgraphics.apache.org/fop/2.1/configuration.html[FOP configuration].)\n          \n          \n            \n            Please set the https://xmlgraphics.apache.org/fop/2.1/configuration.html[FOP configuration property] `use-cache` to `false`.", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488756081", "createdAt": "2020-09-15T15:23:25Z", "author": {"login": "ppalaga"}, "path": "extensions/fop/runtime/src/main/doc/limitations.adoc", "diffHunk": "@@ -0,0 +1,12 @@\n+While you can use any of the available output types in JVM mode, only PDF output type is supported\n+in native mode. PDF output type in native mode has several limitations:\n+\n+* Default sRGB color space is disabled because of https://github.com/oracle/graal/issues/2850[Graal VM issue #2850]. This limitation makes configuration property\n+`disable-srgb-colorspace` ignored. You can see more about sRGB color space in\n+https://xmlgraphics.apache.org/fop/2.1/configuration.html[FOP configuration].\n+\n+* If custom fonts are used, font cache has to be disabled because of https://github.com/oracle/graal/issues/460[Graal VM issue #460].\n+Please use property `<use-cache>false</use-cache>` (more information in https://xmlgraphics.apache.org/fop/2.1/configuration.html[FOP configuration].)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1NjU3Mg==", "bodyText": "I appreciate the comment!", "url": "https://github.com/apache/camel-quarkus/pull/1793#discussion_r488756572", "createdAt": "2020-09-15T15:24:04Z", "author": {"login": "ppalaga"}, "path": "extensions/fop/runtime/src/main/java/org/apache/camel/quarkus/component/fop/PDFRendererOptionsConfigSubstitution.java", "diffHunk": "@@ -0,0 +1,31 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.fop;\n+\n+import com.oracle.svm.core.annotate.Substitute;\n+import com.oracle.svm.core.annotate.TargetClass;\n+import org.apache.fop.render.pdf.PDFRendererOptionsConfig;\n+\n+@TargetClass(value = PDFRendererOptionsConfig.class)\n+final class PDFRendererOptionsConfigSubstitution {\n+\n+    @Substitute\n+    public Boolean getDisableSRGBColorSpace() {\n+        //sRGB color space has to be disabled because of https://github.com/oracle/graal/issues/2850", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c0f89c100ab9d29603ad8e6ef7139c598125f64", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/8c0f89c100ab9d29603ad8e6ef7139c598125f64", "committedDate": "2020-09-16T07:45:21Z", "message": "FOP native support #1642"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b402a1d8781d691ec00294f88fc5dc9c4d6f970", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/9b402a1d8781d691ec00294f88fc5dc9c4d6f970", "committedDate": "2020-09-15T12:16:31Z", "message": "FOP native support #1642"}, "afterCommit": {"oid": "8c0f89c100ab9d29603ad8e6ef7139c598125f64", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/8c0f89c100ab9d29603ad8e6ef7139c598125f64", "committedDate": "2020-09-16T07:45:21Z", "message": "FOP native support #1642"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5Mzk4Mjcx", "url": "https://github.com/apache/camel-quarkus/pull/1793#pullrequestreview-489398271", "createdAt": "2020-09-16T08:35:11Z", "commit": {"oid": "8c0f89c100ab9d29603ad8e6ef7139c598125f64"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2910, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}