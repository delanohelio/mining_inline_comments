{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNDA4NjAw", "number": 1715, "title": "Weather native support fixes #1631", "bodyText": "", "createdAt": "2020-09-07T13:50:01Z", "url": "https://github.com/apache/camel-quarkus/pull/1715", "merged": true, "mergeCommit": {"oid": "071d76e6d7bb8d7070de404c488cf0241b300197"}, "closed": true, "closedAt": "2020-09-08T11:33:08Z", "author": {"login": "zbendhiba"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGjfJqgFqTQ4MzU3OTM0MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdG0ulyABqjM3NDAxNTE3NzE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNTc5MzQx", "url": "https://github.com/apache/camel-quarkus/pull/1715#pullrequestreview-483579341", "createdAt": "2020-09-07T14:01:29Z", "commit": {"oid": "bcf8ffdb5703de68749a6f4954cb7f9b3147f398"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNTgzMjY1", "url": "https://github.com/apache/camel-quarkus/pull/1715#pullrequestreview-483583265", "createdAt": "2020-09-07T14:07:47Z", "commit": {"oid": "bcf8ffdb5703de68749a6f4954cb7f9b3147f398"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDowNzo0OFrOHOAvig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDowNzo0OFrOHOAvig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1NDI4Mg==", "bodyText": "Do we need to pull in camel-jackson or would it be enough to simply have quarkus-jackson?", "url": "https://github.com/apache/camel-quarkus/pull/1715#discussion_r484454282", "createdAt": "2020-09-07T14:07:48Z", "author": {"login": "jamesnetherton"}, "path": "extensions/weather/runtime/pom.xml", "diffHunk": "@@ -56,6 +56,40 @@\n         <dependency>\n             <groupId>org.apache.camel</groupId>\n             <artifactId>camel-weather</artifactId>\n+            <exclusions>\n+                <exclusion>\n+                    <groupId>com.fasterxml.jackson.core</groupId>\n+                    <artifactId>jackson-core</artifactId>\n+                </exclusion>\n+                <exclusion>\n+                    <groupId>com.fasterxml.jackson.core</groupId>\n+                    <artifactId>jackson-annotations</artifactId>\n+                </exclusion>\n+                <exclusion>\n+                    <groupId>com.fasterxml.jackson.core</groupId>\n+                    <artifactId>jackson-databind</artifactId>\n+                </exclusion>\n+                <exclusion>\n+                    <groupId>commons-logging</groupId>\n+                    <artifactId>commons-logging</artifactId>\n+                </exclusion>\n+                <exclusion>\n+                    <groupId>org.apache.httpcomponents</groupId>\n+                    <artifactId>httpclient</artifactId>\n+                </exclusion>\n+            </exclusions>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-jackson</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcf8ffdb5703de68749a6f4954cb7f9b3147f398"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzNTgxMzQx", "url": "https://github.com/apache/camel-quarkus/pull/1715#pullrequestreview-483581341", "createdAt": "2020-09-07T14:04:44Z", "commit": {"oid": "bcf8ffdb5703de68749a6f4954cb7f9b3147f398"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDowNDo0NFrOHOAptA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDoyMjo1MVrOHOBOYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ1Mjc4OA==", "bodyText": "This can be removed as long as we have other proper tests.", "url": "https://github.com/apache/camel-quarkus/pull/1715#discussion_r484452788", "createdAt": "2020-09-07T14:04:44Z", "author": {"login": "ppalaga"}, "path": "integration-tests/weather/src/main/java/org/apache/camel/quarkus/component/weather/it/WeatherResource.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.weather.it;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.ConsumerTemplate;\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.component.weather.WeatherConstants;\n+import org.jboss.logging.Logger;\n+\n+@Path(\"/weather\")\n+@ApplicationScoped\n+public class WeatherResource {\n+\n+    private static final Logger LOG = Logger.getLogger(WeatherResource.class);\n+\n+    private static final String COMPONENT_WEATHER = \"weather\";\n+    @Inject\n+    CamelContext context;\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Inject\n+    ConsumerTemplate consumerTemplate;\n+\n+    @Path(\"load/component/weather\")\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public Response loadComponentWeather() throws Exception {\n+        /* This is an autogenerated test */\n+        if (context.getComponent(COMPONENT_WEATHER) != null) {\n+            return Response.ok().build();\n+        }\n+        LOG.warnf(\"Could not load [%s] from the Camel context\", COMPONENT_WEATHER);\n+        return Response.status(500, COMPONENT_WEATHER + \" could not be loaded from the Camel context\").build();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcf8ffdb5703de68749a6f4954cb7f9b3147f398"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2MTQwNg==", "bodyText": "BTW, restassured allows for matching JSON payload attribs against Matchers https://github.com/rest-assured/rest-assured/wiki/Usage#example-1---json It would perhaps suit here too.", "url": "https://github.com/apache/camel-quarkus/pull/1715#discussion_r484461406", "createdAt": "2020-09-07T14:21:21Z", "author": {"login": "ppalaga"}, "path": "integration-tests/weather/src/test/java/org/apache/camel/quarkus/component/weather/it/WeatherTest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.weather.it;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.hamcrest.Matchers.containsString;\n+\n+@QuarkusTest\n+class WeatherTest {\n+\n+    @Test\n+    public void loadComponentWeather() {\n+        /* A simple autogenerated test */\n+        RestAssured.get(\"/weather/load/component/weather\")\n+                .then()\n+                .statusCode(200);\n+    }\n+\n+    @Test\n+    public void loadByLocationName() {\n+        RestAssured.given()\n+                .get(\"/weather/location/London,uk\")\n+                .then()\n+                .statusCode(200)\n+                .body(containsString(\"name\\\":\\\"London\\\"\"), containsString(\"\\\"country\\\":\\\"GB\\\"\"), containsString(\"weather\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcf8ffdb5703de68749a6f4954cb7f9b3147f398"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ2MjE3Ng==", "bodyText": "(As lazy as I am to look myself, sorry) are the constants in appid=9162755b2efa555823cfe0451d7fff38&geolocationAccessKey=test&geolocationRequestHostIP=test really necessary? Aren't those supposed to be secrets?", "url": "https://github.com/apache/camel-quarkus/pull/1715#discussion_r484462176", "createdAt": "2020-09-07T14:22:51Z", "author": {"login": "ppalaga"}, "path": "integration-tests/weather/src/main/java/org/apache/camel/quarkus/component/weather/it/WeatherResource.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.weather.it;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.apache.camel.CamelContext;\n+import org.apache.camel.ConsumerTemplate;\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.component.weather.WeatherConstants;\n+import org.jboss.logging.Logger;\n+\n+@Path(\"/weather\")\n+@ApplicationScoped\n+public class WeatherResource {\n+\n+    private static final Logger LOG = Logger.getLogger(WeatherResource.class);\n+\n+    private static final String COMPONENT_WEATHER = \"weather\";\n+    @Inject\n+    CamelContext context;\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Inject\n+    ConsumerTemplate consumerTemplate;\n+\n+    @Path(\"load/component/weather\")\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public Response loadComponentWeather() throws Exception {\n+        /* This is an autogenerated test */\n+        if (context.getComponent(COMPONENT_WEATHER) != null) {\n+            return Response.ok().build();\n+        }\n+        LOG.warnf(\"Could not load [%s] from the Camel context\", COMPONENT_WEATHER);\n+        return Response.status(500, COMPONENT_WEATHER + \" could not be loaded from the Camel context\").build();\n+    }\n+\n+    @Path(\"location/{location}\")\n+    @GET\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public Response getWeatherByLocation(@PathParam(\"location\") String location) {\n+        LOG.infof(\"Retrieve weather with location : %s\", location);\n+        final String response = producerTemplate.requestBodyAndHeader(\n+                \"weather:foo?location=random&appid=9162755b2efa555823cfe0451d7fff38&geolocationAccessKey=test&geolocationRequestHostIP=test\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcf8ffdb5703de68749a6f4954cb7f9b3147f398"}, "originalPosition": 68}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bcf8ffdb5703de68749a6f4954cb7f9b3147f398", "author": {"user": {"login": "zbendhiba", "name": "Zineb BENDHIBA"}}, "url": "https://github.com/apache/camel-quarkus/commit/bcf8ffdb5703de68749a6f4954cb7f9b3147f398", "committedDate": "2020-09-07T13:45:46Z", "message": "Weather native support fixes #1631"}, "afterCommit": {"oid": "e5f96ab150101669e00a52ee6badac340dbd3106", "author": {"user": {"login": "zbendhiba", "name": "Zineb BENDHIBA"}}, "url": "https://github.com/apache/camel-quarkus/commit/e5f96ab150101669e00a52ee6badac340dbd3106", "committedDate": "2020-09-08T08:21:45Z", "message": "Weather native support fixes #1631"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5f96ab150101669e00a52ee6badac340dbd3106", "author": {"user": {"login": "zbendhiba", "name": "Zineb BENDHIBA"}}, "url": "https://github.com/apache/camel-quarkus/commit/e5f96ab150101669e00a52ee6badac340dbd3106", "committedDate": "2020-09-08T08:21:45Z", "message": "Weather native support fixes #1631"}, "afterCommit": {"oid": "f99be9bba8ca8bc2f78578f609abe402eec7aeff", "author": {"user": {"login": "zbendhiba", "name": "Zineb BENDHIBA"}}, "url": "https://github.com/apache/camel-quarkus/commit/f99be9bba8ca8bc2f78578f609abe402eec7aeff", "committedDate": "2020-09-08T10:03:50Z", "message": "Weather native support fixes #1631"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8724718177388e6809ad3e450cc1cf268399d822", "author": {"user": {"login": "zbendhiba", "name": "Zineb BENDHIBA"}}, "url": "https://github.com/apache/camel-quarkus/commit/8724718177388e6809ad3e450cc1cf268399d822", "committedDate": "2020-09-08T10:06:26Z", "message": "Weather native support fixes #1631"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f99be9bba8ca8bc2f78578f609abe402eec7aeff", "author": {"user": {"login": "zbendhiba", "name": "Zineb BENDHIBA"}}, "url": "https://github.com/apache/camel-quarkus/commit/f99be9bba8ca8bc2f78578f609abe402eec7aeff", "committedDate": "2020-09-08T10:03:50Z", "message": "Weather native support fixes #1631"}, "afterCommit": {"oid": "8724718177388e6809ad3e450cc1cf268399d822", "author": {"user": {"login": "zbendhiba", "name": "Zineb BENDHIBA"}}, "url": "https://github.com/apache/camel-quarkus/commit/8724718177388e6809ad3e450cc1cf268399d822", "committedDate": "2020-09-08T10:06:26Z", "message": "Weather native support fixes #1631"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2879, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}