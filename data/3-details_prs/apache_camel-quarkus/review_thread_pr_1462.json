{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NDMxNjkz", "number": 1462, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDo1OTo0MVrOEMHiMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzozODozNlrOET9ePQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTQxODExOnYy", "diffSide": "RIGHT", "path": "docs/modules/ROOT/pages/extensions/threadpoolfactory-vertx.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDo1OTo0MVrOGuCsjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzozMDo1OVrOG5-yug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTg1Mg==", "bodyText": "threadpoolfactory-vertx.html: is it https://camel.apache.org/components/latest/others/reactive-threadpoolfactory-vertx.html ?", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r450931852", "createdAt": "2020-07-07T14:59:41Z", "author": {"login": "aldettinger"}, "path": "docs/modules/ROOT/pages/extensions/threadpoolfactory-vertx.adoc", "diffHunk": "@@ -0,0 +1,28 @@\n+// Do not edit directly!\n+// This file was generated by camel-quarkus-maven-plugin:update-extension-doc-page\n+\n+[[threadpoolfactory-vertx]]\n+= ThreadPoolFactory Vert.x\n+\n+[.badges]\n+[.badge-key]##Since Camel Quarkus##[.badge-version]##1.0.0-CR4## [.badge-key]##JVM##[.badge-supported]##supported## [.badge-key]##Native##[.badge-supported]##supported##\n+\n+ThreadPoolFactory for camel-core using Vert.x\n+\n+== What's inside\n+\n+* https://camel.apache.org/components/latest/others/threadpoolfactory-vertx.html[ThreadPoolFactory Vert.x]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c17cf8a06272ecbcc7f0b73e2ca6fae56337052"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MDgxMA==", "bodyText": "Filed a followup #1506", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r463450810", "createdAt": "2020-07-31T07:30:59Z", "author": {"login": "ppalaga"}, "path": "docs/modules/ROOT/pages/extensions/threadpoolfactory-vertx.adoc", "diffHunk": "@@ -0,0 +1,28 @@\n+// Do not edit directly!\n+// This file was generated by camel-quarkus-maven-plugin:update-extension-doc-page\n+\n+[[threadpoolfactory-vertx]]\n+= ThreadPoolFactory Vert.x\n+\n+[.badges]\n+[.badge-key]##Since Camel Quarkus##[.badge-version]##1.0.0-CR4## [.badge-key]##JVM##[.badge-supported]##supported## [.badge-key]##Native##[.badge-supported]##supported##\n+\n+ThreadPoolFactory for camel-core using Vert.x\n+\n+== What's inside\n+\n+* https://camel.apache.org/components/latest/others/threadpoolfactory-vertx.html[ThreadPoolFactory Vert.x]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkzMTg1Mg=="}, "originalCommit": {"oid": "3c17cf8a06272ecbcc7f0b73e2ca6fae56337052"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTQ5NjEwOnYy", "diffSide": "RIGHT", "path": ".github/test-categories.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNToxNjo1OVrOGuDerg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNToxNjo1OVrOGuDerg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk0NDY4Ng==", "bodyText": "Because there is no dedicated integration test module for threadpoolfactory-vertx. You may need to add it to the list of exclusions in scripts/validate-github-workflows.groovy in order to prevent the validation checks from failing.", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r450944686", "createdAt": "2020-07-07T15:16:59Z", "author": {"login": "jamesnetherton"}, "path": ".github/test-categories.yaml", "diffHunk": "@@ -105,6 +105,7 @@ platform:\n   - platform-http-engine\n   - reactive-streams\n   - rest-openapi\n+  - threadpoolfactory-vertx", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c17cf8a06272ecbcc7f0b73e2ca6fae56337052"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzY0NzU2OnYy", "diffSide": "RIGHT", "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzozNToyM1rOG5-5eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzo0MDoyM1rOG5_BSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MjUzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n          \n          \n            \n                        if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {\n          \n          \n            \n                    final ... nodeIdFactory = camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory();\n          \n          \n            \n                    for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n          \n          \n            \n                        if (route.idOrCreate(nodeIdFactory).equals(id)) {\n          \n      \n    \n    \n  \n\nIt would be more effective to get the factory once before starting the loop.", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r463452537", "createdAt": "2020-07-31T07:35:23Z", "author": {"login": "ppalaga"}, "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java", "diffHunk": "@@ -110,6 +112,91 @@ public synchronized RouteDefinition getRouteDefinition(String id) {\n         return null;\n     }\n \n+    @Override\n+    public List<RouteTemplateDefinition> getRouteTemplateDefinitions() {\n+        return routeTemplateDefinitions;\n+    }\n+\n+    @Override\n+    public RouteTemplateDefinition getRouteTemplateDefinition(String id) {\n+        for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n+            if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7cdf2339215aec0ca2fca7235e3b79ce2146072"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDUzNg==", "bodyText": "No problem, I'll refactor it", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r463454536", "createdAt": "2020-07-31T07:40:23Z", "author": {"login": "JiriOndrusek"}, "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java", "diffHunk": "@@ -110,6 +112,91 @@ public synchronized RouteDefinition getRouteDefinition(String id) {\n         return null;\n     }\n \n+    @Override\n+    public List<RouteTemplateDefinition> getRouteTemplateDefinitions() {\n+        return routeTemplateDefinitions;\n+    }\n+\n+    @Override\n+    public RouteTemplateDefinition getRouteTemplateDefinition(String id) {\n+        for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n+            if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MjUzNw=="}, "originalCommit": {"oid": "c7cdf2339215aec0ca2fca7235e3b79ce2146072"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzY1MzAzOnYy", "diffSide": "RIGHT", "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzozNzozMVrOG5-83Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzo0MToxOFrOG5_CvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MzQwNQ==", "bodyText": "Does not look right. Perhaps this?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n          \n          \n            \n                    this.routeTemplateDefinitions.addAll(routeTemplateDefinition);", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r463453405", "createdAt": "2020-07-31T07:37:31Z", "author": {"login": "ppalaga"}, "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java", "diffHunk": "@@ -110,6 +112,91 @@ public synchronized RouteDefinition getRouteDefinition(String id) {\n         return null;\n     }\n \n+    @Override\n+    public List<RouteTemplateDefinition> getRouteTemplateDefinitions() {\n+        return routeTemplateDefinitions;\n+    }\n+\n+    @Override\n+    public RouteTemplateDefinition getRouteTemplateDefinition(String id) {\n+        for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n+            if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {\n+                return route;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public void addRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n+        if (routeTemplateDefinitions == null || routeTemplateDefinitions.isEmpty()) {\n+            return;\n+        }\n+        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n+    }\n+\n+    @Override\n+    public void addRouteTemplateDefinition(RouteTemplateDefinition routeTemplateDefinition) throws Exception {\n+        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7cdf2339215aec0ca2fca7235e3b79ce2146072"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1NDkwOQ==", "bodyText": "I agree that current state doesn't make sense. I'll fix it.", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r463454909", "createdAt": "2020-07-31T07:41:18Z", "author": {"login": "JiriOndrusek"}, "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java", "diffHunk": "@@ -110,6 +112,91 @@ public synchronized RouteDefinition getRouteDefinition(String id) {\n         return null;\n     }\n \n+    @Override\n+    public List<RouteTemplateDefinition> getRouteTemplateDefinitions() {\n+        return routeTemplateDefinitions;\n+    }\n+\n+    @Override\n+    public RouteTemplateDefinition getRouteTemplateDefinition(String id) {\n+        for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n+            if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {\n+                return route;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public void addRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n+        if (routeTemplateDefinitions == null || routeTemplateDefinitions.isEmpty()) {\n+            return;\n+        }\n+        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n+    }\n+\n+    @Override\n+    public void addRouteTemplateDefinition(RouteTemplateDefinition routeTemplateDefinition) throws Exception {\n+        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MzQwNQ=="}, "originalCommit": {"oid": "c7cdf2339215aec0ca2fca7235e3b79ce2146072"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MzY1NTY1OnYy", "diffSide": "RIGHT", "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzozODozNlrOG5--jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwNzozODozNlrOG5--jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzQ1MzgzOA==", "bodyText": "Does not look right either. Maybe this?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    routeTemplateDefinitions.removeAll(routeTemplateDefinitions);\n          \n          \n            \n                    this.routeTemplateDefinitions.removeAll(routeTemplateDefinitions);", "url": "https://github.com/apache/camel-quarkus/pull/1462#discussion_r463453838", "createdAt": "2020-07-31T07:38:36Z", "author": {"login": "ppalaga"}, "path": "extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/core/BaseModel.java", "diffHunk": "@@ -110,6 +112,91 @@ public synchronized RouteDefinition getRouteDefinition(String id) {\n         return null;\n     }\n \n+    @Override\n+    public List<RouteTemplateDefinition> getRouteTemplateDefinitions() {\n+        return routeTemplateDefinitions;\n+    }\n+\n+    @Override\n+    public RouteTemplateDefinition getRouteTemplateDefinition(String id) {\n+        for (RouteTemplateDefinition route : routeTemplateDefinitions) {\n+            if (route.idOrCreate(camelContext.adapt(ExtendedCamelContext.class).getNodeIdFactory()).equals(id)) {\n+                return route;\n+            }\n+        }\n+        return null;\n+    }\n+\n+    @Override\n+    public void addRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n+        if (routeTemplateDefinitions == null || routeTemplateDefinitions.isEmpty()) {\n+            return;\n+        }\n+        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n+    }\n+\n+    @Override\n+    public void addRouteTemplateDefinition(RouteTemplateDefinition routeTemplateDefinition) throws Exception {\n+        this.routeTemplateDefinitions.addAll(routeTemplateDefinitions);\n+    }\n+\n+    @Override\n+    public void removeRouteTemplateDefinitions(Collection<RouteTemplateDefinition> routeTemplateDefinitions) throws Exception {\n+        routeTemplateDefinitions.removeAll(routeTemplateDefinitions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7cdf2339215aec0ca2fca7235e3b79ce2146072"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4269, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}