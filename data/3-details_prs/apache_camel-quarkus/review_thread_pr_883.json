{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MjU1MTY2", "number": 883, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMzo1NzozNFrODnediQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxNjoyNFrODne9Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzIwMTM3OnYy", "diffSide": "RIGHT", "path": "integration-tests/soap/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMzo1NzozNFrOF1fsDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMzo1NzozNFrOF1fsDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYzODAyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            <configuration>\n          \n          \n            \n                                                <systemProperties>\n          \n          \n            \n                                                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n          \n          \n            \n                                                </systemProperties>\n          \n          \n            \n                                            </configuration>\n          \n      \n    \n    \n  \n\nThe config can be removed.", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391638029", "createdAt": "2020-03-12T13:57:34Z", "author": {"login": "ppalaga"}, "path": "integration-tests/soap/pom.xml", "diffHunk": "@@ -0,0 +1,127 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.apache.camel.quarkus</groupId>\n+        <artifactId>camel-quarkus-integration-tests</artifactId>\n+        <version>1.1.0-SNAPSHOT</version>\n+    </parent>\n+\n+    <artifactId>camel-quarkus-integration-test-soap</artifactId>\n+    <name>Camel Quarkus :: Integration Tests :: Soap dataformat</name>\n+    <description>Integration tests for Camel Quarkus Soap dataformat extension</description>\n+\n+    <properties>\n+        <!-- mvnd, a.k.a. Maven Daemon: https://github.com/gnodet/mvnd -->\n+        <!-- The following rule tells mvnd to build the listed deployment modules before this module. -->\n+        <!-- This is important because mvnd builds modules in parallel by default. The deployment modules are not -->\n+        <!-- explicit dependencies of this module in the Maven sense, although they are required by the Quarkus Maven plugin. -->\n+        <!-- Please update rule whenever you change the dependencies of this module by running -->\n+        <!--     mvn process-resources -Pformat    from the root directory -->\n+        <mvnd.builder.rule>camel-quarkus-direct-deployment,camel-quarkus-soap-deployment,camel-quarkus-support-policy-deployment</mvnd.builder.rule>\n+    </properties>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-soap</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.camel.quarkus</groupId>\n+            <artifactId>camel-quarkus-direct</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-resteasy</artifactId>\n+        </dependency>\n+\n+        <!-- test dependencies -->\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.assertj</groupId>\n+            <artifactId>assertj-core</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>build</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>native</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <properties>\n+                <quarkus.package.type>native</quarkus.package.type>\n+            </properties>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemProperties>\n+                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                    </systemProperties>\n+                                </configuration>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0bc750eacb52fbaa777ceb510d996d3ebe40756"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzIzNTE2OnYy", "diffSide": "RIGHT", "path": "integration-tests/soap/src/main/resources/application.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowNToyM1rOF1gBGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowNToyM1rOF1gBGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0MzQxNw==", "bodyText": "Empty application.properties can be removed.", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391643417", "createdAt": "2020-03-12T14:05:23Z", "author": {"login": "ppalaga"}, "path": "integration-tests/soap/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,16 @@\n+## ---------------------------------------------------------------------------\n+## Licensed to the Apache Software Foundation (ASF) under one or more\n+## contributor license agreements.  See the NOTICE file distributed with\n+## this work for additional information regarding copyright ownership.\n+## The ASF licenses this file to You under the Apache License, Version 2.0\n+## (the \"License\"); you may not use this file except in compliance with\n+## the License.  You may obtain a copy of the License at\n+##\n+##      http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing, software\n+## distributed under the License is distributed on an \"AS IS\" BASIS,\n+## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+## See the License for the specific language governing permissions and\n+## limitations under the License.\n+## ---------------------------------------------------------------------------", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0bc750eacb52fbaa777ceb510d996d3ebe40756"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzIzOTE1OnYy", "diffSide": "RIGHT", "path": "integration-tests/soap/src/test/java/org/apache/camel/quarkus/component/soap/it/SoapTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowNjoyN1rOF1gDyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQyMToxNTo1NVrOF1vi_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NDEwNg==", "bodyText": "Could you please remove the System.out.println ?", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391644106", "createdAt": "2020-03-12T14:06:27Z", "author": {"login": "ppalaga"}, "path": "integration-tests/soap/src/test/java/org/apache/camel/quarkus/component/soap/it/SoapTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.soap.it;\n+\n+import java.util.UUID;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@QuarkusTest\n+class SoapTest {\n+\n+    @Test\n+    public void testMarshal() {\n+        final String msg = UUID.randomUUID().toString().replace(\"-\", \"\");\n+        String resp = RestAssured.given()\n+                .contentType(ContentType.TEXT).body(msg).post(\"/soap/marshal\") //\n+                .then().statusCode(201)\n+                .extract().body().asString();\n+        assertThat(resp).contains(\"<ns3:getCustomersByName>\");\n+        assertThat(resp).contains(\"<name>\" + msg + \"</name>\");\n+        assertThat(resp).contains(\"<ns2:Envelope xmlns:ns2=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"\");\n+\n+        System.out.println(resp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0bc750eacb52fbaa777ceb510d996d3ebe40756"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTg5Nzg1NQ==", "bodyText": "The last issue from my PoV.", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391897855", "createdAt": "2020-03-12T21:15:55Z", "author": {"login": "ppalaga"}, "path": "integration-tests/soap/src/test/java/org/apache/camel/quarkus/component/soap/it/SoapTest.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.soap.it;\n+\n+import java.util.UUID;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+@QuarkusTest\n+class SoapTest {\n+\n+    @Test\n+    public void testMarshal() {\n+        final String msg = UUID.randomUUID().toString().replace(\"-\", \"\");\n+        String resp = RestAssured.given()\n+                .contentType(ContentType.TEXT).body(msg).post(\"/soap/marshal\") //\n+                .then().statusCode(201)\n+                .extract().body().asString();\n+        assertThat(resp).contains(\"<ns3:getCustomersByName>\");\n+        assertThat(resp).contains(\"<name>\" + msg + \"</name>\");\n+        assertThat(resp).contains(\"<ns2:Envelope xmlns:ns2=\\\"http://schemas.xmlsoap.org/soap/envelope/\\\"\");\n+\n+        System.out.println(resp);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NDEwNg=="}, "originalCommit": {"oid": "a0bc750eacb52fbaa777ceb510d996d3ebe40756"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzI0NzE5OnYy", "diffSide": "RIGHT", "path": "integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowODoxOVrOF1gIyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo0MjozM1rOF1hmAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NTM4NA==", "bodyText": "Unless /round is doing something not covered by the above /marshal /unmarshal endpoints, I'd vote for removing it.", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391645384", "createdAt": "2020-03-12T14:08:19Z", "author": {"login": "ppalaga"}, "path": "integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.soap.it;\n+\n+import java.net.URI;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.quarkus.component.soap.it.example.GetCustomersByName;\n+import org.jboss.logging.Logger;\n+\n+@Path(\"/soap\")\n+@ApplicationScoped\n+public class SoapResource {\n+\n+    private static final Logger LOG = Logger.getLogger(SoapResource.class);\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Path(\"/marshal\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.APPLICATION_XML)\n+    public Response marshall(String message) throws Exception {\n+        LOG.infof(\"Sending to soap: %s\", message);\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+\n+        final String response = producerTemplate.requestBody(\"direct:marshal\", request, String.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response)\n+                .build();\n+    }\n+\n+    @Path(\"/marshal-soap12\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.APPLICATION_XML)\n+    public Response marshalSoap12(String message) throws Exception {\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+\n+        final String response = producerTemplate.requestBody(\"direct:marshal-soap12\", request, String.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response)\n+                .build();\n+    }\n+\n+    @Path(\"/unmarshal\")\n+    @POST\n+    @Consumes(MediaType.APPLICATION_XML)\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public Response unmarshal(String message) throws Exception {\n+        final GetCustomersByName response = producerTemplate.requestBody(\"direct:unmarshal\", message, GetCustomersByName.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response.getName())\n+                .build();\n+    }\n+\n+    @Path(\"/unmarshal-soap12\")\n+    @POST\n+    @Consumes(MediaType.APPLICATION_XML)\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public Response unmarshalSoap12(String message) throws Exception {\n+        final GetCustomersByName response = producerTemplate.requestBody(\"direct:unmarshal-soap12\", message,\n+                GetCustomersByName.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response.getName())\n+                .build();\n+    }\n+\n+    @Path(\"/round\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public Response round(String message) throws Exception {\n+        LOG.infof(\"Sending to soap: %s\", message);\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+        final String xml = producerTemplate.requestBody(\"direct:marshal\", request, String.class);\n+        LOG.infof(\"Got response from marshal: %s\", xml);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0bc750eacb52fbaa777ceb510d996d3ebe40756"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY2OTI0OQ==", "bodyText": "I was testing if marshaled message could be also un-marshaled. I had some issues with that so I kept it there.", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391669249", "createdAt": "2020-03-12T14:42:33Z", "author": {"login": "mmelko"}, "path": "integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.soap.it;\n+\n+import java.net.URI;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.quarkus.component.soap.it.example.GetCustomersByName;\n+import org.jboss.logging.Logger;\n+\n+@Path(\"/soap\")\n+@ApplicationScoped\n+public class SoapResource {\n+\n+    private static final Logger LOG = Logger.getLogger(SoapResource.class);\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Path(\"/marshal\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.APPLICATION_XML)\n+    public Response marshall(String message) throws Exception {\n+        LOG.infof(\"Sending to soap: %s\", message);\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+\n+        final String response = producerTemplate.requestBody(\"direct:marshal\", request, String.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response)\n+                .build();\n+    }\n+\n+    @Path(\"/marshal-soap12\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.APPLICATION_XML)\n+    public Response marshalSoap12(String message) throws Exception {\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+\n+        final String response = producerTemplate.requestBody(\"direct:marshal-soap12\", request, String.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response)\n+                .build();\n+    }\n+\n+    @Path(\"/unmarshal\")\n+    @POST\n+    @Consumes(MediaType.APPLICATION_XML)\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public Response unmarshal(String message) throws Exception {\n+        final GetCustomersByName response = producerTemplate.requestBody(\"direct:unmarshal\", message, GetCustomersByName.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response.getName())\n+                .build();\n+    }\n+\n+    @Path(\"/unmarshal-soap12\")\n+    @POST\n+    @Consumes(MediaType.APPLICATION_XML)\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public Response unmarshalSoap12(String message) throws Exception {\n+        final GetCustomersByName response = producerTemplate.requestBody(\"direct:unmarshal-soap12\", message,\n+                GetCustomersByName.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response.getName())\n+                .build();\n+    }\n+\n+    @Path(\"/round\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public Response round(String message) throws Exception {\n+        LOG.infof(\"Sending to soap: %s\", message);\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+        final String xml = producerTemplate.requestBody(\"direct:marshal\", request, String.class);\n+        LOG.infof(\"Got response from marshal: %s\", xml);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NTM4NA=="}, "originalCommit": {"oid": "a0bc750eacb52fbaa777ceb510d996d3ebe40756"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzI2NDU2OnYy", "diffSide": "RIGHT", "path": "integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxMjoxN1rOF1gTqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxMjoxN1rOF1gTqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0ODE2OQ==", "bodyText": "It looks like /marshal-soap12 and /marshal differ only in the name of the direct endpoint. Could we perhaps have just one rest endpoint with a route URI param, something like https://github.com/apache/camel-quarkus/blob/master/integration-tests/dataformat/src/main/java/org/apache/camel/quarkus/component/dataformat/it/DataformatResource.java#L43-L57\nAnd the same for unmarshal", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391648169", "createdAt": "2020-03-12T14:12:17Z", "author": {"login": "ppalaga"}, "path": "integration-tests/soap/src/main/java/org/apache/camel/quarkus/component/soap/it/SoapResource.java", "diffHunk": "@@ -0,0 +1,122 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.soap.it;\n+\n+import java.net.URI;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n+import javax.ws.rs.Consumes;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+\n+import org.apache.camel.ProducerTemplate;\n+import org.apache.camel.quarkus.component.soap.it.example.GetCustomersByName;\n+import org.jboss.logging.Logger;\n+\n+@Path(\"/soap\")\n+@ApplicationScoped\n+public class SoapResource {\n+\n+    private static final Logger LOG = Logger.getLogger(SoapResource.class);\n+\n+    @Inject\n+    ProducerTemplate producerTemplate;\n+\n+    @Path(\"/marshal\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.APPLICATION_XML)\n+    public Response marshall(String message) throws Exception {\n+        LOG.infof(\"Sending to soap: %s\", message);\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+\n+        final String response = producerTemplate.requestBody(\"direct:marshal\", request, String.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response)\n+                .build();\n+    }\n+\n+    @Path(\"/marshal-soap12\")\n+    @POST\n+    @Consumes(MediaType.TEXT_PLAIN)\n+    @Produces(MediaType.APPLICATION_XML)\n+    public Response marshalSoap12(String message) throws Exception {\n+        GetCustomersByName request = new GetCustomersByName();\n+        request.setName(message);\n+\n+        final String response = producerTemplate.requestBody(\"direct:marshal-soap12\", request, String.class);\n+\n+        return Response\n+                .created(new URI(\"https://camel.apache.org/\"))\n+                .entity(response)\n+                .build();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0bc750eacb52fbaa777ceb510d996d3ebe40756"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNzI4MjEwOnYy", "diffSide": "RIGHT", "path": "extensions/soap/runtime/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxNjoyNFrOF1gekg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDo0MzoyOFrOF1hobg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY1MDk2Mg==", "bodyText": "Is the saaj.version version property used anywhere?", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391650962", "createdAt": "2020-03-12T14:16:24Z", "author": {"login": "jamesnetherton"}, "path": "extensions/soap/runtime/pom.xml", "diffHunk": "@@ -0,0 +1,93 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.apache.camel.quarkus</groupId>\n+        <artifactId>camel-quarkus-soap-parent</artifactId>\n+        <version>1.1.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <artifactId>camel-quarkus-soap</artifactId>\n+    <name>Camel Quarkus :: Soap dataformat :: Runtime</name>\n+\n+    <properties>\n+        <firstVersion>1.0.0-M5</firstVersion>\n+        <saaj.version>1.5.0</saaj.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0bc750eacb52fbaa777ceb510d996d3ebe40756"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY2OTg3MA==", "bodyText": "I forgot to remove this. Thanks!", "url": "https://github.com/apache/camel-quarkus/pull/883#discussion_r391669870", "createdAt": "2020-03-12T14:43:28Z", "author": {"login": "mmelko"}, "path": "extensions/soap/runtime/pom.xml", "diffHunk": "@@ -0,0 +1,93 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+\n+    Licensed to the Apache Software Foundation (ASF) under one or more\n+    contributor license agreements.  See the NOTICE file distributed with\n+    this work for additional information regarding copyright ownership.\n+    The ASF licenses this file to You under the Apache License, Version 2.0\n+    (the \"License\"); you may not use this file except in compliance with\n+    the License.  You may obtain a copy of the License at\n+\n+         http://www.apache.org/licenses/LICENSE-2.0\n+\n+    Unless required by applicable law or agreed to in writing, software\n+    distributed under the License is distributed on an \"AS IS\" BASIS,\n+    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+    See the License for the specific language governing permissions and\n+    limitations under the License.\n+\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+    <parent>\n+        <groupId>org.apache.camel.quarkus</groupId>\n+        <artifactId>camel-quarkus-soap-parent</artifactId>\n+        <version>1.1.0-SNAPSHOT</version>\n+        <relativePath>../pom.xml</relativePath>\n+    </parent>\n+\n+    <artifactId>camel-quarkus-soap</artifactId>\n+    <name>Camel Quarkus :: Soap dataformat :: Runtime</name>\n+\n+    <properties>\n+        <firstVersion>1.0.0-M5</firstVersion>\n+        <saaj.version>1.5.0</saaj.version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY1MDk2Mg=="}, "originalCommit": {"oid": "a0bc750eacb52fbaa777ceb510d996d3ebe40756"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4412, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}