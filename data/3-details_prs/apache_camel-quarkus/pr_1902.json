{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNDQ5ODY3", "number": 1902, "title": "LevelDB native support #1839", "bodyText": "fixes #1839\nThere are several \"topics\" where I'd appreciate opinion of others.\n\n\nPreferred implementation of LevelDb is in C++, implementation in Java is much slower (see https://github.com/dain/leveldb#leveldb-in-java). Current PR uses only Java implementation in native. I'd like to investigate possible usage of C++ library in native, but I see it more like an enhancement, because current PR works.\n\n\nComponent levelDb uses serialization of DefaultExchangeHolder. I've used workaround with Jackson serialization instead. (see https://github.com/apache/camel-quarkus/compare/master...JiriOndrusek:1839-leveldb-native?expand=1#diff-5fbe79b4f16469a82d30051dc3cf564aR46)\n\n\nJava implementation of LevelDB uses methodHandle which is not supported by GraalVM. I  used previous version of ByteBufferSupport and applied it via substitutions until issue oracle/graal#2761 is fixed. See more information here: https://github.com/apache/camel-quarkus/compare/master...JiriOndrusek:1839-leveldb-native?expand=1#diff-799b2f59808725c0c8b95feacb5b4c8aR25\n\n\nFrom my POV this PR could be merged. I'm currently starting to investigate support of C++ levelDB. If this approach will work, I'd enhance this extension (which is working as is)\nWhat do you think, @ppalaga ?\n[ ] An issue should be filed for the change unless this is a trivial change (fixing a typo or similar). One issue should ideally be fixed by not more than one commit and the other way round, each commit should fix just one issue, without pulling in other changes.\n[ ] Each commit in the pull request should have a meaningful and properly spelled subject line and body. Copying the title of the associated issue is typically enough. Please include the issue number in the commit message prefixed by #.\n[ ] The pull request description should explain what the pull request does, how, and why. If the info is available in the associated issue or some other external document, a link is enough.\n[ ] Phrases like Fix # or Fixes # will auto-close the named issue upon merging the pull request. Using them is typically a good idea.\n[ ] Please run mvn process-resources -Pformat (and amend the changes if necessary) before sending the pull request.\n[ ] Contributor guide is your good friend: https://camel.apache.org/camel-quarkus/latest/contributor-guide.html", "createdAt": "2020-10-12T09:31:34Z", "url": "https://github.com/apache/camel-quarkus/pull/1902", "merged": true, "mergeCommit": {"oid": "4c7e016f65be1b25443990b10ba7e7497eb2f1d6"}, "closed": true, "closedAt": "2020-10-15T06:19:10Z", "author": {"login": "JiriOndrusek"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRxW99gBqjM4NjU5NDE3MTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSiX6nABqjM4NzgxOTE4MDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a2d41a146a5935eeb8c0eae74b104b0edcf2356", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/0a2d41a146a5935eeb8c0eae74b104b0edcf2356", "committedDate": "2020-10-12T09:14:38Z", "message": "LevelDB native support #1839"}, "afterCommit": {"oid": "b9b7044b07f49f8c2aaa17aa89e2b15bdebe02f0", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/b9b7044b07f49f8c2aaa17aa89e2b15bdebe02f0", "committedDate": "2020-10-12T10:24:03Z", "message": "LevelDB native support #1839"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9b7044b07f49f8c2aaa17aa89e2b15bdebe02f0", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/b9b7044b07f49f8c2aaa17aa89e2b15bdebe02f0", "committedDate": "2020-10-12T10:24:03Z", "message": "LevelDB native support #1839"}, "afterCommit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/1a91fbbad95f5845498d56b2ed0598dd0ac983c8", "committedDate": "2020-10-12T12:16:14Z", "message": "LevelDB native support #1839"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MTExMzUw", "url": "https://github.com/apache/camel-quarkus/pull/1902#pullrequestreview-507111350", "createdAt": "2020-10-13T06:42:10Z", "commit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjo0MjoxMFrOHgXf7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjo1ODowNVrOHgX9jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwMTQ4Nw==", "bodyText": "This is good to merge, but please file a followup issue with the info above and paste the issue link here.", "url": "https://github.com/apache/camel-quarkus/pull/1902#discussion_r503701487", "createdAt": "2020-10-13T06:42:10Z", "author": {"login": "ppalaga"}, "path": "extensions/leveldb/runtime/src/main/java/org/apache/camel/quarkus/component/leveldb/OriginalByteBufferSupport.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.leveldb;\n+\n+import java.lang.reflect.Method;\n+import java.nio.MappedByteBuffer;\n+\n+import com.google.common.base.Throwables;\n+\n+/**\n+ * Unmap support was changed because of jdk9+ (see\n+ * https://github.com/dain/leveldb/commit/39b6e0c38045281fba5f6532c52dc06905890cad)\n+ * Current version of levelDB is using MethodHandle, which is not supported by GraalVM (see\n+ * https://github.com/oracle/graal/issues/2761)\n+ * Original way of using Method (instead of MethodHandle) is working in native mode,\n+ * therefore this class contains code from levelDB class `ByteBufferSupport` from the time before mentioned change and\n+ * is used via substitutions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcwOTA3MQ==", "bodyText": "What a neat trick! I must say I never heart of com.oracle.svm.core.annotate.Inject and I have issues to grasp how it works based on the little docs I was able to find. But if this works, it is a great strategy to workaround many of the Java serialization issues we encounter. @jamesnetherton you mentioned you were solving some serialization issue recently?\nThis is good to merge for now, but to make it more robust, couldn't we replace org.fusesource.hawtbuf:hawtbuf with Jaskson in camel-leveldb? hawtbuf serialization seems to be just an implementation detail there so it could be relatively easy to do. Plz. file a followup if you like the idea.", "url": "https://github.com/apache/camel-quarkus/pull/1902#discussion_r503709071", "createdAt": "2020-10-13T06:58:05Z", "author": {"login": "ppalaga"}, "path": "extensions/leveldb/runtime/src/main/java/org/apache/camel/quarkus/component/leveldb/ObjectCodecSubstitute.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.leveldb;\n+\n+import java.io.DataInput;\n+import java.io.DataOutput;\n+import java.io.IOException;\n+\n+import com.fasterxml.jackson.annotation.JsonAutoDetect;\n+import com.fasterxml.jackson.annotation.PropertyAccessor;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import com.oracle.svm.core.annotate.Inject;\n+import com.oracle.svm.core.annotate.Substitute;\n+import com.oracle.svm.core.annotate.TargetClass;\n+import org.apache.camel.support.DefaultExchangeHolder;\n+import org.fusesource.hawtbuf.codec.ObjectCodec;\n+\n+/**\n+ * This os workaround for serialization of DefaultExchangeHolder.\n+ * Once serialization is implemented in graalVM (see https://github.com/oracle/graal/issues/460), this substitution\n+ * could\n+ * be removed.\n+ */\n+@TargetClass(value = ObjectCodec.class)\n+final class ObjectCodecSubstitute {\n+\n+    @Inject\n+    private ObjectMapper objectMapper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MTI0MDM2", "url": "https://github.com/apache/camel-quarkus/pull/1902#pullrequestreview-507124036", "createdAt": "2020-10-13T07:03:24Z", "commit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNzowMzoyNVrOHgYH8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNzozMTowNlrOHgZE0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxMTcyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            which is within 10% of the performance of the C++ original. Usage of native implementation will be investigated as a new issue.\n          \n          \n            \n            which is within 10% of the performance of the C++ original. Please upvote link-to-new-issue[this issue] if you do not like the present state.", "url": "https://github.com/apache/camel-quarkus/pull/1902#discussion_r503711728", "createdAt": "2020-10-13T07:03:25Z", "author": {"login": "ppalaga"}, "path": "extensions/leveldb/runtime/src/main/doc/limitations.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+In native mode extension uses port of the LevelDB written in Java (https://github.com/dain/leveldb#leveldb-in-java[documentation]),\n+which is within 10% of the performance of the C++ original. Usage of native implementation will be investigated as a new issue.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcxOTE4Mg==", "bodyText": "Style tip: the last arg of ReflectiveClassBuildItem constructor is multiarg, so you could make it shorter by omitting the the array declaration (it would compile to exactly the same bytecode):\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return new ReflectiveClassBuildItem(false, false, new String[] {\n          \n          \n            \n                            org.iq80.leveldb.impl.Iq80DBFactory.class.getName(),\n          \n          \n            \n                            org.apache.camel.support.DefaultExchangeHolder.class.getName()\n          \n          \n            \n                    });\n          \n          \n            \n                    return new ReflectiveClassBuildItem(false, false, \n          \n          \n            \n                            org.iq80.leveldb.impl.Iq80DBFactory.class.getName(),\n          \n          \n            \n                            org.apache.camel.support.DefaultExchangeHolder.class.getName());\n          \n      \n    \n    \n  \n\nIs org.apache.camel.support.DefaultExchangeHolder really necessary? IIRC, there was some discussion around this recently.", "url": "https://github.com/apache/camel-quarkus/pull/1902#discussion_r503719182", "createdAt": "2020-10-13T07:18:08Z", "author": {"login": "ppalaga"}, "path": "extensions/leveldb/deployment/src/main/java/org/apache/camel/quarkus/component/leveldb/deployment/LeveldbProcessor.java", "diffHunk": "@@ -16,31 +16,41 @@\n  */\n package org.apache.camel.quarkus.component.leveldb.deployment;\n \n+import io.quarkus.deployment.annotations.BuildProducer;\n import io.quarkus.deployment.annotations.BuildStep;\n-import io.quarkus.deployment.annotations.ExecutionTime;\n-import io.quarkus.deployment.annotations.Record;\n import io.quarkus.deployment.builditem.FeatureBuildItem;\n-import io.quarkus.deployment.pkg.steps.NativeBuild;\n-import org.apache.camel.quarkus.core.JvmOnlyRecorder;\n-import org.jboss.logging.Logger;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem;\n+import org.apache.camel.support.DefaultExchangeHolder;\n \n class LeveldbProcessor {\n \n-    private static final Logger LOG = Logger.getLogger(LeveldbProcessor.class);\n     private static final String FEATURE = \"camel-leveldb\";\n \n     @BuildStep\n     FeatureBuildItem feature() {\n         return new FeatureBuildItem(FEATURE);\n     }\n \n-    /**\n-     * Remove this once this extension starts supporting the native mode.\n-     */\n-    @BuildStep(onlyIf = NativeBuild.class)\n-    @Record(value = ExecutionTime.RUNTIME_INIT)\n-    void warnJvmInNative(JvmOnlyRecorder recorder) {\n-        JvmOnlyRecorder.warnJvmInNative(LOG, FEATURE); // warn at build time\n-        recorder.warnJvmInNative(FEATURE); // warn at runtime\n+    @BuildStep\n+    ReflectiveClassBuildItem registerForReflection() {\n+        return new ReflectiveClassBuildItem(false, false, new String[] {\n+                org.iq80.leveldb.impl.Iq80DBFactory.class.getName(),\n+                org.apache.camel.support.DefaultExchangeHolder.class.getName()\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcyMDUyNw==", "bodyText": "Hm... you even register the DefaultExchangeHolder twice. I guess this one is right and the above is wrong? But once again is  registering org.apache.camel.support.DefaultExchangeHolder really necessary?", "url": "https://github.com/apache/camel-quarkus/pull/1902#discussion_r503720527", "createdAt": "2020-10-13T07:20:38Z", "author": {"login": "ppalaga"}, "path": "extensions/leveldb/deployment/src/main/java/org/apache/camel/quarkus/component/leveldb/deployment/LeveldbProcessor.java", "diffHunk": "@@ -16,31 +16,41 @@\n  */\n package org.apache.camel.quarkus.component.leveldb.deployment;\n \n+import io.quarkus.deployment.annotations.BuildProducer;\n import io.quarkus.deployment.annotations.BuildStep;\n-import io.quarkus.deployment.annotations.ExecutionTime;\n-import io.quarkus.deployment.annotations.Record;\n import io.quarkus.deployment.builditem.FeatureBuildItem;\n-import io.quarkus.deployment.pkg.steps.NativeBuild;\n-import org.apache.camel.quarkus.core.JvmOnlyRecorder;\n-import org.jboss.logging.Logger;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.RuntimeInitializedClassBuildItem;\n+import org.apache.camel.support.DefaultExchangeHolder;\n \n class LeveldbProcessor {\n \n-    private static final Logger LOG = Logger.getLogger(LeveldbProcessor.class);\n     private static final String FEATURE = \"camel-leveldb\";\n \n     @BuildStep\n     FeatureBuildItem feature() {\n         return new FeatureBuildItem(FEATURE);\n     }\n \n-    /**\n-     * Remove this once this extension starts supporting the native mode.\n-     */\n-    @BuildStep(onlyIf = NativeBuild.class)\n-    @Record(value = ExecutionTime.RUNTIME_INIT)\n-    void warnJvmInNative(JvmOnlyRecorder recorder) {\n-        JvmOnlyRecorder.warnJvmInNative(LOG, FEATURE); // warn at build time\n-        recorder.warnJvmInNative(FEATURE); // warn at runtime\n+    @BuildStep\n+    ReflectiveClassBuildItem registerForReflection() {\n+        return new ReflectiveClassBuildItem(false, false, new String[] {\n+                org.iq80.leveldb.impl.Iq80DBFactory.class.getName(),\n+                org.apache.camel.support.DefaultExchangeHolder.class.getName()\n+        });\n+    }\n+\n+    @BuildStep\n+    ReflectiveClassBuildItem registerForReflectionWithFields() {\n+        return new ReflectiveClassBuildItem(false, true, new String[] {\n+                DefaultExchangeHolder.class.getName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcyMTUxOQ==", "bodyText": "Looking at this comparison from 2014 the impact will most likely be be positive in most cases. I'd remove the whole paragraph.", "url": "https://github.com/apache/camel-quarkus/pull/1902#discussion_r503721519", "createdAt": "2020-10-13T07:22:20Z", "author": {"login": "ppalaga"}, "path": "extensions/leveldb/runtime/src/main/doc/limitations.adoc", "diffHunk": "@@ -0,0 +1,5 @@\n+In native mode extension uses port of the LevelDB written in Java (https://github.com/dain/leveldb#leveldb-in-java[documentation]),\n+which is within 10% of the performance of the C++ original. Usage of native implementation will be investigated as a new issue.\n+\n+GraalVM does not support `ObjectOutputStream.writeObject()` (https://github.com/oracle/graal/issues/460[issue]).\n+In native mode extension uses Jackson serialization instead. This approach could have some performance impact.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcyNDcwOQ==", "bodyText": "Why do we need the delay here?", "url": "https://github.com/apache/camel-quarkus/pull/1902#discussion_r503724709", "createdAt": "2020-10-13T07:27:40Z", "author": {"login": "ppalaga"}, "path": "integration-tests/leveldb/src/main/java/org/apache/camel/quarkus/component/leveldb/it/LeveldbRouteBuilder.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.camel.quarkus.component.leveldb.it;\n+\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import org.apache.camel.AggregationStrategy;\n+import org.apache.camel.Exchange;\n+import org.apache.camel.builder.RouteBuilder;\n+import org.apache.camel.component.leveldb.LevelDBAggregationRepository;\n+\n+public class LeveldbRouteBuilder extends RouteBuilder {\n+    public static final String DIRECT_START = \"direct:start\";\n+    public static final String DIRECT_START_WITH_FAILURE = \"direct:startWithFailure\";\n+    public static final String DIRECT_START_DEAD_LETTER = \"direct:startDeadLetter\";\n+    public static final String MOCK_AGGREGATED = \"mock:aggregated\";\n+    public static final String MOCK_RESULT = \"mock:result\";\n+    public static final String MOCK_DEAD = \"mock:dead\";\n+    public static final String DATA_FOLDER = \"target/data\";\n+\n+    private static AtomicInteger counter = new AtomicInteger(0);\n+\n+    @Override\n+    public void configure() throws Exception {\n+        LevelDBAggregationRepository repo = new LevelDBAggregationRepository(\"repo\", DATA_FOLDER + \"leveldb.dat\");\n+\n+        from(DIRECT_START)\n+                .aggregate(header(\"id\"), new MyAggregationStrategy())\n+                .completionSize(7).aggregationRepository(repo)\n+                .to(MOCK_RESULT);\n+\n+        LevelDBAggregationRepository repoWithFailure = new LevelDBAggregationRepository(\"repoWithFailure\",\n+                DATA_FOLDER + \"leveldbWithFailure.dat\");\n+\n+        repoWithFailure.setUseRecovery(true);\n+        repoWithFailure.setRecoveryInterval(500, TimeUnit.MILLISECONDS);\n+\n+        from(DIRECT_START_WITH_FAILURE)\n+                .aggregate(header(\"id\"), new MyAggregationStrategy())\n+                .completionSize(7).aggregationRepository(repoWithFailure)\n+                .to(MOCK_AGGREGATED)\n+                .delay(1000)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcyNjU1Mg==", "bodyText": "I do not think we want to merge it with debug on. Couldn't we comment it at least?", "url": "https://github.com/apache/camel-quarkus/pull/1902#discussion_r503726552", "createdAt": "2020-10-13T07:29:50Z", "author": {"login": "ppalaga"}, "path": "integration-tests/leveldb/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,20 @@\n+## ---------------------------------------------------------------------------\n+## Licensed to the Apache Software Foundation (ASF) under one or more\n+## contributor license agreements.  See the NOTICE file distributed with\n+## this work for additional information regarding copyright ownership.\n+## The ASF licenses this file to You under the Apache License, Version 2.0\n+## (the \"License\"); you may not use this file except in compliance with\n+## the License.  You may obtain a copy of the License at\n+##\n+##      http://www.apache.org/licenses/LICENSE-2.0\n+##\n+## Unless required by applicable law or agreed to in writing, software\n+## distributed under the License is distributed on an \"AS IS\" BASIS,\n+## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+## See the License for the specific language governing permissions and\n+## limitations under the License.\n+## ---------------------------------------------------------------------------\n+\n+quarkus.log.category.\"org.apache.camel.component.leveldb\".level = DEBUG", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzcyNzMxMg==", "bodyText": "Style tip: Arrays.asList() accepts multiarg too.", "url": "https://github.com/apache/camel-quarkus/pull/1902#discussion_r503727312", "createdAt": "2020-10-13T07:31:06Z", "author": {"login": "ppalaga"}, "path": "integration-tests/leveldb/src/test/java/org/apache/camel/quarkus/component/leveldb/it/LeveldbTest.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.leveldb.it;\n+\n+import java.io.File;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import io.restassured.specification.RequestSpecification;\n+import org.apache.camel.Exchange;\n+import org.apache.commons.io.FileUtils;\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.Test;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+@QuarkusTest\n+class LeveldbTest {\n+\n+    @Test\n+    public void testAggregate() {\n+        Map<String, List<Map<String, Object>>> data = testAggregate(LeveldbRouteBuilder.DIRECT_START,\n+                Arrays.asList(new String[] { \"S\", \"H\", \"E\", \"L\", \"D\", \"O\", \"N\" }));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8"}, "originalPosition": 43}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a91fbbad95f5845498d56b2ed0598dd0ac983c8", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/1a91fbbad95f5845498d56b2ed0598dd0ac983c8", "committedDate": "2020-10-12T12:16:14Z", "message": "LevelDB native support #1839"}, "afterCommit": {"oid": "d4d025800af4e1b765e049f51ae25253857205e2", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/d4d025800af4e1b765e049f51ae25253857205e2", "committedDate": "2020-10-13T09:32:12Z", "message": "LevelDB native support #1839"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MjUyNDgz", "url": "https://github.com/apache/camel-quarkus/pull/1902#pullrequestreview-507252483", "createdAt": "2020-10-13T09:40:06Z", "commit": {"oid": "d4d025800af4e1b765e049f51ae25253857205e2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTo0MDowN1rOHgePOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwOTo0MDowN1rOHgePOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzgxMTg5OA==", "bodyText": "@ppalaga There is only one question. Current PR removes dependency with C++ implementation of leveldDB.\nWhich makes JVM also using java implementation.\nI can return dependency back, but it makes it use by native too, which makes native artifact a little bit bigger.\nDo you know about some correct way how to define dependency only for JVM? (which would be the best solution here)", "url": "https://github.com/apache/camel-quarkus/pull/1902#discussion_r503811898", "createdAt": "2020-10-13T09:40:07Z", "author": {"login": "JiriOndrusek"}, "path": "extensions/leveldb/runtime/pom.xml", "diffHunk": "@@ -56,6 +57,35 @@\n         <dependency>\n             <groupId>org.apache.camel</groupId>\n             <artifactId>camel-leveldb</artifactId>\n+            <exclusions>\n+                <exclusion>\n+                    <artifactId>leveldbjni-all</artifactId>\n+                    <groupId>org.fusesource.leveldbjni</groupId>\n+                </exclusion>\n+            </exclusions>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.apache.camel</groupId>\n+            <artifactId>camel-leveldb</artifactId>\n+            <exclusions>\n+                <exclusion>\n+                    <groupId>org.fusesource.leveldbjni</groupId>\n+                    <artifactId>*</artifactId>\n+                </exclusion>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4d025800af4e1b765e049f51ae25253857205e2"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4d025800af4e1b765e049f51ae25253857205e2", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/d4d025800af4e1b765e049f51ae25253857205e2", "committedDate": "2020-10-13T09:32:12Z", "message": "LevelDB native support #1839"}, "afterCommit": {"oid": "d0a8bcb42d2e3432fd61a647ac2fc158c4eda1e9", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/d0a8bcb42d2e3432fd61a647ac2fc158c4eda1e9", "committedDate": "2020-10-13T10:52:07Z", "message": "LevelDB native support #1839"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MzEwNTQz", "url": "https://github.com/apache/camel-quarkus/pull/1902#pullrequestreview-507310543", "createdAt": "2020-10-13T10:55:18Z", "commit": {"oid": "d0a8bcb42d2e3432fd61a647ac2fc158c4eda1e9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d0a8bcb42d2e3432fd61a647ac2fc158c4eda1e9", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/d0a8bcb42d2e3432fd61a647ac2fc158c4eda1e9", "committedDate": "2020-10-13T10:52:07Z", "message": "LevelDB native support #1839"}, "afterCommit": {"oid": "cc04a2ec607934d3357dbd38b0e989c5590a594d", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/cc04a2ec607934d3357dbd38b0e989c5590a594d", "committedDate": "2020-10-14T12:06:39Z", "message": "LevelDB native support #1839"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ac2c6b9e66751b0899b3c1ab376952b2642aa97", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/0ac2c6b9e66751b0899b3c1ab376952b2642aa97", "committedDate": "2020-10-14T19:29:07Z", "message": "LevelDB native support #1839"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc04a2ec607934d3357dbd38b0e989c5590a594d", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/cc04a2ec607934d3357dbd38b0e989c5590a594d", "committedDate": "2020-10-14T12:06:39Z", "message": "LevelDB native support #1839"}, "afterCommit": {"oid": "0ac2c6b9e66751b0899b3c1ab376952b2642aa97", "author": {"user": {"login": "JiriOndrusek", "name": null}}, "url": "https://github.com/apache/camel-quarkus/commit/0ac2c6b9e66751b0899b3c1ab376952b2642aa97", "committedDate": "2020-10-14T19:29:07Z", "message": "LevelDB native support #1839"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2818, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}