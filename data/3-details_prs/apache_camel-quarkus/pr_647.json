{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NDQ2OTM2", "number": 647, "title": "Fix #518 Rely on configurers for Configuration classes instead of using", "bodyText": "reflection\nRemoval of NettyConfiguration, NettyServerBootstrapConfiguration, PdfConfiguration registration led to native failures so these need a separate investigation.", "createdAt": "2020-01-21T18:25:47Z", "url": "https://github.com/apache/camel-quarkus/pull/647", "merged": true, "mergeCommit": {"oid": "2dfafe3ba69fde74d9f63bdac86d903f194f467f"}, "closed": true, "closedAt": "2020-01-23T16:59:49Z", "author": {"login": "ppalaga"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8lcNUgFqTM0NjA5NTQ0Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9MhH6gFqTM0NzQxMjQ1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MDk1NDQ2", "url": "https://github.com/apache/camel-quarkus/pull/647#pullrequestreview-346095446", "createdAt": "2020-01-21T18:27:41Z", "commit": {"oid": "dac2da74a04d10587ab63adb2055c238f5049c58"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MDk4MzIw", "url": "https://github.com/apache/camel-quarkus/pull/647#pullrequestreview-346098320", "createdAt": "2020-01-21T18:32:09Z", "commit": {"oid": "dac2da74a04d10587ab63adb2055c238f5049c58"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dac2da74a04d10587ab63adb2055c238f5049c58", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/dac2da74a04d10587ab63adb2055c238f5049c58", "committedDate": "2020-01-21T18:24:11Z", "message": "Fix #518 Rely on configurers for Configuration classes instead of using\nreflection"}, "afterCommit": {"oid": "8d3a3b0b46a346104821782a8b3d6e527ff065db", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/8d3a3b0b46a346104821782a8b3d6e527ff065db", "committedDate": "2020-01-23T10:27:01Z", "message": "Fix #518 Rely on configurers for Configuration classes instead of using\nreflection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d3a3b0b46a346104821782a8b3d6e527ff065db", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/8d3a3b0b46a346104821782a8b3d6e527ff065db", "committedDate": "2020-01-23T10:27:01Z", "message": "Fix #518 Rely on configurers for Configuration classes instead of using\nreflection"}, "afterCommit": {"oid": "36102f2f069a3e3ad9aa27255b2c6b6f80d78b70", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/36102f2f069a3e3ad9aa27255b2c6b6f80d78b70", "committedDate": "2020-01-23T10:27:17Z", "message": "Fix #518 Rely on configurers for Configuration classes instead of using\nreflection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MjM4Njkz", "url": "https://github.com/apache/camel-quarkus/pull/647#pullrequestreview-347238693", "createdAt": "2020-01-23T11:50:10Z", "commit": {"oid": "36102f2f069a3e3ad9aa27255b2c6b6f80d78b70"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMTo1MDoxMVrOFg7ggA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMTo1MDoxMVrOFg7ggA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA3MzcyOA==", "bodyText": "would' be better to have a build item generated by the respective extensions ? developer writing custom camel component extension outside this repo could also leverage that build item if needed.", "url": "https://github.com/apache/camel-quarkus/pull/647#discussion_r370073728", "createdAt": "2020-01-23T11:50:11Z", "author": {"login": "lburgazzoli"}, "path": "extensions/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/NativeImageProcessor.java", "diffHunk": "@@ -68,6 +71,66 @@\n                 PropertiesComponent.class,\n                 DataFormat.class);\n \n+        /**\n+         * A list of classes annotated with <code>@UriParams</code> which we accept to be registered for reflection\n+         * mostly because there are errors when they are removed. TODO: solve the underlying problems and remove as\n+         * many entries as possible from the list.\n+         */\n+        private static final Set<String> URI_PARAMS_WHITELIST = new HashSet<>(Arrays.asList(\n+                \"org.apache.camel.support.processor.DefaultExchangeFormatter\",\n+                \"org.apache.camel.component.pdf.PdfConfiguration\",\n+                \"org.apache.camel.component.netty.NettyConfiguration\",\n+                \"org.apache.camel.component.netty.NettyServerBootstrapConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirUpdateEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirOperationEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirLoadPageEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirSearchEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirTransactionEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirCreateEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirValidateEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirReadEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirCapabilitiesEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirHistoryEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirMetaEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirPatchEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirDeleteEndpointConfiguration\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36102f2f069a3e3ad9aa27255b2c6b6f80d78b70"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MjYxMTQ3", "url": "https://github.com/apache/camel-quarkus/pull/647#pullrequestreview-347261147", "createdAt": "2020-01-23T12:32:35Z", "commit": {"oid": "36102f2f069a3e3ad9aa27255b2c6b6f80d78b70"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjozMjozNVrOFg8joA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMjozMjozNVrOFg8joA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA5MDkxMg==", "bodyText": "all the camel components have a property that can control if the generated configurer have to be used or not so as long as the property is there, I feel we should log a warning but I'd rather avoid to fail the build.", "url": "https://github.com/apache/camel-quarkus/pull/647#discussion_r370090912", "createdAt": "2020-01-23T12:32:35Z", "author": {"login": "lburgazzoli"}, "path": "extensions/core/deployment/src/main/java/org/apache/camel/quarkus/core/deployment/NativeImageProcessor.java", "diffHunk": "@@ -68,6 +71,66 @@\n                 PropertiesComponent.class,\n                 DataFormat.class);\n \n+        /**\n+         * A list of classes annotated with <code>@UriParams</code> which we accept to be registered for reflection\n+         * mostly because there are errors when they are removed. TODO: solve the underlying problems and remove as\n+         * many entries as possible from the list.\n+         */\n+        private static final Set<String> URI_PARAMS_WHITELIST = new HashSet<>(Arrays.asList(\n+                \"org.apache.camel.support.processor.DefaultExchangeFormatter\",\n+                \"org.apache.camel.component.pdf.PdfConfiguration\",\n+                \"org.apache.camel.component.netty.NettyConfiguration\",\n+                \"org.apache.camel.component.netty.NettyServerBootstrapConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirUpdateEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirOperationEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirLoadPageEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirSearchEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirTransactionEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirCreateEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirValidateEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirReadEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirCapabilitiesEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirHistoryEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirMetaEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirPatchEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirDeleteEndpointConfiguration\",\n+\n+                /* org.apache.camel.component.consul.* can be removed after the upgrade to Camel 3.1 */\n+                \"org.apache.camel.component.consul.ConsulConfiguration\",\n+                \"org.apache.camel.component.consul.ConsulClientConfiguration\",\n+                \"org.apache.camel.component.consul.health.ConsulHealthCheckRepositoryConfiguration\",\n+                \"org.apache.camel.component.consul.cloud.ConsulServiceRegistryConfiguration\"));\n+\n+        @BuildStep\n+        void bannedReflectiveClasses(\n+                CombinedIndexBuildItem combinedIndex,\n+                List<ReflectiveClassBuildItem> reflectiveClass,\n+                BuildProducer<GeneratedResourceBuildItem> dummy // to force the execution of this method\n+        ) {\n+            final DotName uriParamsDotName = DotName.createSimple(\"org.apache.camel.spi.UriParams\");\n+\n+            final Set<String> bannedClassNames = combinedIndex.getIndex()\n+                    .getAnnotations(uriParamsDotName)\n+                    .stream()\n+                    .filter(ai -> ai.target().kind() == Kind.CLASS)\n+                    .map(ai -> ai.target().asClass().name().toString())\n+                    .collect(Collectors.toSet());\n+\n+            Set<String> violations = reflectiveClass.stream()\n+                    .map(ReflectiveClassBuildItem::getClassNames)\n+                    .flatMap(Collection::stream)\n+                    .filter(cl -> !URI_PARAMS_WHITELIST.contains(cl))\n+                    .filter(bannedClassNames::contains)\n+                    .collect(Collectors.toSet());\n+\n+            if (!violations.isEmpty()) {\n+                throw new IllegalStateException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36102f2f069a3e3ad9aa27255b2c6b6f80d78b70"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4c1663b2289ca002fd960bb98d4473fd63dbdeb", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/c4c1663b2289ca002fd960bb98d4473fd63dbdeb", "committedDate": "2020-01-23T15:04:17Z", "message": "Fix #518 Rely on configurers for Configuration classes instead of using\nreflection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36102f2f069a3e3ad9aa27255b2c6b6f80d78b70", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/36102f2f069a3e3ad9aa27255b2c6b6f80d78b70", "committedDate": "2020-01-23T10:27:17Z", "message": "Fix #518 Rely on configurers for Configuration classes instead of using\nreflection"}, "afterCommit": {"oid": "c4c1663b2289ca002fd960bb98d4473fd63dbdeb", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/apache/camel-quarkus/commit/c4c1663b2289ca002fd960bb98d4473fd63dbdeb", "committedDate": "2020-01-23T15:04:17Z", "message": "Fix #518 Rely on configurers for Configuration classes instead of using\nreflection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MzkzOTg1", "url": "https://github.com/apache/camel-quarkus/pull/647#pullrequestreview-347393985", "createdAt": "2020-01-23T15:37:02Z", "commit": {"oid": "c4c1663b2289ca002fd960bb98d4473fd63dbdeb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNTozNzowMlrOFhCtiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNTozOTo0NFrOFhCz3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5MTc1Mw==", "bodyText": "Should we really fail the build ?", "url": "https://github.com/apache/camel-quarkus/pull/647#discussion_r370191753", "createdAt": "2020-01-23T15:37:02Z", "author": {"login": "lburgazzoli"}, "path": "extensions/support/policy/deployment/src/main/java/org/apache/camel/quarkus/component/support/policy/deployment/PolicyProcessor.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.support.policy.deployment;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.GeneratedResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import org.apache.camel.quarkus.core.deployment.UnbannedReflectiveBuildItem;\n+import org.jboss.jandex.AnnotationTarget.Kind;\n+import org.jboss.jandex.DotName;\n+\n+class PolicyProcessor {\n+\n+    private static final String FEATURE = \"camel-policy\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    UnbannedReflectiveBuildItem unbanReflectives() {\n+        /**\n+         * A list of classes annotated with <code>@UriParams</code> which we accept to be registered for reflection\n+         * mostly because there are errors when they are removed. TODO: solve the underlying problems and remove as\n+         * many entries as possible from the list.\n+         */\n+        return new UnbannedReflectiveBuildItem(\n+                \"org.apache.camel.support.processor.DefaultExchangeFormatter\",\n+                \"org.apache.camel.component.pdf.PdfConfiguration\",\n+                \"org.apache.camel.component.netty.NettyConfiguration\",\n+                \"org.apache.camel.component.netty.NettyServerBootstrapConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirUpdateEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirOperationEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirLoadPageEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirSearchEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirTransactionEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirCreateEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirValidateEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirReadEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirCapabilitiesEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirHistoryEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirMetaEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirPatchEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirDeleteEndpointConfiguration\",\n+\n+                /* org.apache.camel.component.consul.* can be removed after the upgrade to Camel 3.1 */\n+                \"org.apache.camel.component.consul.ConsulConfiguration\",\n+                \"org.apache.camel.component.consul.ConsulClientConfiguration\",\n+                \"org.apache.camel.component.consul.health.ConsulHealthCheckRepositoryConfiguration\",\n+                \"org.apache.camel.component.consul.cloud.ConsulServiceRegistryConfiguration\");\n+    }\n+\n+    /* Make the build fail as long as there are banned classes registered for reflection */\n+    @BuildStep\n+    void bannedReflectiveClasses(\n+            CombinedIndexBuildItem combinedIndex,\n+            List<ReflectiveClassBuildItem> reflectiveClasses,\n+            List<UnbannedReflectiveBuildItem> unbannedReflectives,\n+            BuildProducer<GeneratedResourceBuildItem> dummy // to force the execution of this method\n+    ) {\n+        final DotName uriParamsDotName = DotName.createSimple(\"org.apache.camel.spi.UriParams\");\n+\n+        final Set<String> bannedClassNames = combinedIndex.getIndex()\n+                .getAnnotations(uriParamsDotName)\n+                .stream()\n+                .filter(ai -> ai.target().kind() == Kind.CLASS)\n+                .map(ai -> ai.target().asClass().name().toString())\n+                .collect(Collectors.toSet());\n+\n+        final Set<String> unbannedClassNames = unbannedReflectives.stream()\n+                .map(UnbannedReflectiveBuildItem::getClassNames)\n+                .flatMap(Collection::stream)\n+                .collect(Collectors.toSet());\n+\n+        Set<String> violations = reflectiveClasses.stream()\n+                .map(ReflectiveClassBuildItem::getClassNames)\n+                .flatMap(Collection::stream)\n+                .filter(cl -> !unbannedClassNames.contains(cl))\n+                .filter(bannedClassNames::contains)\n+                .collect(Collectors.toSet());\n+\n+        if (!violations.isEmpty()) {\n+            throw new IllegalStateException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c1663b2289ca002fd960bb98d4473fd63dbdeb"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5MzM3Mw==", "bodyText": "It does not change much from the previous implementation as when we'll remove i.e. PdfConfiguration from the pdf extension we have to remember to get to this artefact and change it.\nI really don't get why this should not be side-by-side with the code declaring the need for the reflective classes.", "url": "https://github.com/apache/camel-quarkus/pull/647#discussion_r370193373", "createdAt": "2020-01-23T15:39:44Z", "author": {"login": "lburgazzoli"}, "path": "extensions/support/policy/deployment/src/main/java/org/apache/camel/quarkus/component/support/policy/deployment/PolicyProcessor.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.camel.quarkus.component.support.policy.deployment;\n+\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.GeneratedResourceBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+import org.apache.camel.quarkus.core.deployment.UnbannedReflectiveBuildItem;\n+import org.jboss.jandex.AnnotationTarget.Kind;\n+import org.jboss.jandex.DotName;\n+\n+class PolicyProcessor {\n+\n+    private static final String FEATURE = \"camel-policy\";\n+\n+    @BuildStep\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep\n+    UnbannedReflectiveBuildItem unbanReflectives() {\n+        /**\n+         * A list of classes annotated with <code>@UriParams</code> which we accept to be registered for reflection\n+         * mostly because there are errors when they are removed. TODO: solve the underlying problems and remove as\n+         * many entries as possible from the list.\n+         */\n+        return new UnbannedReflectiveBuildItem(\n+                \"org.apache.camel.support.processor.DefaultExchangeFormatter\",\n+                \"org.apache.camel.component.pdf.PdfConfiguration\",\n+                \"org.apache.camel.component.netty.NettyConfiguration\",\n+                \"org.apache.camel.component.netty.NettyServerBootstrapConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirUpdateEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirOperationEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirLoadPageEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirSearchEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirTransactionEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirCreateEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirValidateEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirReadEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirCapabilitiesEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirHistoryEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirMetaEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirPatchEndpointConfiguration\",\n+                \"org.apache.camel.component.fhir.FhirDeleteEndpointConfiguration\",\n+\n+                /* org.apache.camel.component.consul.* can be removed after the upgrade to Camel 3.1 */\n+                \"org.apache.camel.component.consul.ConsulConfiguration\",\n+                \"org.apache.camel.component.consul.ConsulClientConfiguration\",\n+                \"org.apache.camel.component.consul.health.ConsulHealthCheckRepositoryConfiguration\",\n+                \"org.apache.camel.component.consul.cloud.ConsulServiceRegistryConfiguration\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c1663b2289ca002fd960bb98d4473fd63dbdeb"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NDEyNDUz", "url": "https://github.com/apache/camel-quarkus/pull/647#pullrequestreview-347412453", "createdAt": "2020-01-23T15:59:21Z", "commit": {"oid": "c4c1663b2289ca002fd960bb98d4473fd63dbdeb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2605, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}